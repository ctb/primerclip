
==================== FINAL INTERFACE ====================
2018-08-29 18:19:31.238726 UTC

interface primerclip-0.3.3.0-GfuurxY2OUOHPk7lKZLXUc:Lib [family instance module] 8022
  interface hash: 1a339e0a0b3de18dd0350fc3e494d23e
  ABI hash: a76b6473557250899f17d8c7bf087f20
  export-list hash: e47d231935ae793072ea1844bb522fbd
  orphan hash: 5da52b8a4dac8319857c0a642878bbaa
  flag hash: ec690ec25aa83b76b88f0ff85134ee97
  sig of: Nothing
  used TH splices: False
  where
exports:
  Lib.addprimerints
  Lib.addprimerintsPairedAln
  Lib.addtrimtag
  Lib.adjustcrds
  Lib.alignmentsetparser
  Lib.allPairedAln
  Lib.alnparser
  Lib.alnsToPairedAln
  Lib.anyPairedAln
  Lib.anyPrimerIntAln
  Lib.bedPEparser
  Lib.bedmaplookup
  Lib.bedpeToFbed
  Lib.bedpeToRbed
  Lib.bedrecparser
  Lib.boolZeroLengthCigar
  Lib.calcMappedCount
  Lib.calcNotMappedPct
  Lib.calcRunStats
  Lib.calcTrimdToZero
  Lib.calcTrimmedPct
  Lib.calculateTrimStats
  Lib.checkChromNameMatchStatus
  Lib.checkCigarSeqlen
  Lib.checkInsertSize
  Lib.checkcigseqlen
  Lib.checkcigseqlen2
  Lib.checknonzeroCigMatch
  Lib.checkpos
  Lib.cigarP
  Lib.cigseqlenHdrPassTest
  Lib.clearNamesAndPositions
  Lib.clearNonRealCigar
  Lib.clearR1primNextFields
  Lib.clearR2primNextFields
  Lib.collectPrimIntAlns
  Lib.contractcigar
  Lib.countDs
  Lib.createprimerbedmaps
  Lib.defaultAlignment
  Lib.defaultBEDPE
  Lib.defaultBed
  Lib.defaultMasterRec
  Lib.defaultMidFam
  Lib.defaultPairedAln
  Lib.expandcigar
  Lib.expandcigar2
  Lib.exrights
  Lib.exrights2
  Lib.filtpadassoc
  Lib.filtpadcmap
  Lib.findByQname
  Lib.flattenPairedAln
  Lib.flipClrBit
  Lib.flipSetBit
  Lib.flipTstBit
  Lib.genLogFilePath
  Lib.getAlignedLength
  Lib.getFPrimerBEDfromMaster
  Lib.getMasterFile
  Lib.getNclips
  Lib.getNonHeaderAlns
  Lib.getRPrimerBEDfromMaster
  Lib.getRight
  Lib.getRightM
  Lib.getTargetBEDfromMaster
  Lib.getTrimdcigCoordDiff
  Lib.getcigseqdiff
  Lib.getcol
  Lib.getlengths
  Lib.hdralnparser
  Lib.hdralnparserEOL
  Lib.hdralnparserEOL'
  Lib.hdrchromp
  Lib.headsafeAln
  Lib.intgr2int
  Lib.itypep
  Lib.ix
  Lib.justbedmaps
  Lib.justchrmaps
  Lib.mIDp
  Lib.makeMRNMexplicit
  Lib.makeTrimmedUpdates
  Lib.makebedmap
  Lib.makechrbedmap
  Lib.makeprimertups
  Lib.mapcig
  Lib.mapfst
  Lib.masterRecToTargetBED
  Lib.masterToFPrimerBED
  Lib.masterToRPrimerBED
  Lib.masterToTargetBED
  Lib.masterparser
  Lib.noclip
  Lib.nohardclip
  Lib.nomapCigToNomapRname
  Lib.nopadding
  Lib.optargs
  Lib.optasp
  Lib.optfieldp
  Lib.optfieldpEOL
  Lib.optfieldsp
  Lib.optfieldsp2
  Lib.optfieldsp3
  Lib.optfieldstotalp
  Lib.optidp
  Lib.optnmp
  Lib.optxsp
  Lib.pairedAlnToTuple
  Lib.pairedalnparser
  Lib.parseAln
  Lib.parseAlns
  Lib.parseBED
  Lib.parseBEDPE
  Lib.parseCigar
  Lib.parsePairedAlns
  Lib.parsePairedAlns'
  Lib.parsePairedAlnsFromSAM
  Lib.parsePairedAlnsOrHdr
  Lib.parseReadsetsFromSAM
  Lib.parsechkBED
  Lib.parsechkMaster
  Lib.parsechkSAM
  Lib.parsedbl
  Lib.parseint
  Lib.parsemIDstring
  Lib.parsesignedint
  Lib.primaryR1filter
  Lib.primaryR2filter
  Lib.printAlignment
  Lib.printAlignmentOrHdr
  Lib.printAlnStreamToFile
  Lib.rdint
  Lib.read1filter
  Lib.readBEDPE
  Lib.readSAM
  Lib.readSAMFlag
  Lib.readSAMnameset
  Lib.readSAMtoPairedAlns
  Lib.readint
  Lib.removeDs
  Lib.removeNonPrimaryZeroLengthAlignments
  Lib.rightOrDefault
  Lib.rightOrDefaultPaird
  Lib.safegetheader
  Lib.safemapcig
  Lib.samhdrparser
  Lib.samhdrparserEOL
  Lib.secalnp
  Lib.seqp
  Lib.setMapdProperPairBit
  Lib.setMateRname
  Lib.setProperInsertSizeRange
  Lib.setProperPairMapFlagBit
  Lib.setZeroLengthAlnFlag
  Lib.setZeroLengthPairFlag
  Lib.setpintflag
  Lib.shiftcrds
  Lib.showChrom
  Lib.showcigar
  Lib.skipcolon
  Lib.spaces
  Lib.starcigarP
  Lib.sumMatches
  Lib.sumRefMatches
  Lib.sumSeqMatches
  Lib.sumSoftClipCigOps
  Lib.taketrim
  Lib.toBin
  Lib.toBinInt
  Lib.trimPairedAlns
  Lib.trimalignment
  Lib.trimboth
  Lib.trimfwd
  Lib.trimprimerPairsE
  Lib.trimprimersE
  Lib.trimrem
  Lib.trimrev
  Lib.txtfieldp
  Lib.uchrparser
  Lib.updateCigB
  Lib.updateCigF
  Lib.updateCigR
  Lib.updatePairedAlnTrimdFields
  Lib.updateR1nextfields
  Lib.updateR2nextfields
  Lib.updateTrimdAlnFields
  Lib.updateTrimdPairFields
  Lib.updateZeroTrimdPairFields
  Lib.updateZeroTrimdPairFlags
  Lib.validateTrimdPairAlnStart
  Lib.writeRunStats
  Lib.AlignedRead{Lib.AlignedRead basequal cigar cigmap endpos fint flag headerstrings isheader mapped mapqual mid optfields paired pintflag pnext pos qname refseq rint rname rnext strand tbed tlen trimdToZeroLength trimdcigar trimdcigmap trimdendpos trimdflag trimdpos xmid}
  Lib.Alignments
  Lib.BED
  Lib.BEDPE{Lib.BEDPE bedpename chr1 chr2 end1 end2 start1 start2}
  Lib.BedMap
  Lib.BedRecord{Lib.BedRecord bedchr bedend bedname bedstart}
  Lib.CMap
  Lib.ChromNameFormat{Lib.GRC Lib.UCSC}
  Lib.CigarMap
  Lib.Header
  Lib.MasterRecord{Lib.MasterRecord mampname mchrom mforend mforname mforseq mforstart mrevend mrevname mrevseq mrevstart mtargetend mtargetstart}
  Lib.MidFamily{Lib.MidFamily alncount alnend alns alnstart chrom midseq negtxposdcnt postxposdcnt targetbed txposedcount}
  Lib.Opts{Lib.Opts bedpeformat incoordsfile insamfile outfilename}
  Lib.PairedAln{Lib.PairedAln r1prim r1secs r2prim r2secs}
  Lib.RunStats{Lib.RunStats alnsMapped alnsTotal alnsTrimd alnsTrimdToZero mappedPct trimmedPct}
  Lib.SAM
  Lib.SAMFlag{Lib.SAMFlag dupRead failedQC fstInPair intflag mateMapped mateNeg notMapped notPrimary pairNotMapped pairedRead queryPlus sndInPair}
  Lib.UChr{Lib.C1 Lib.C10 Lib.C11 Lib.C12 Lib.C13 Lib.C14 Lib.C15 Lib.C16 Lib.C17 Lib.C18 Lib.C19 Lib.C2 Lib.C20 Lib.C21 Lib.C22 Lib.C3 Lib.C4 Lib.C5 Lib.C6 Lib.C7 Lib.C8 Lib.C9 Lib.CMT Lib.CX Lib.CY Lib.Chr1 Lib.Chr10 Lib.Chr11 Lib.Chr12 Lib.Chr13 Lib.Chr14 Lib.Chr15 Lib.Chr16 Lib.Chr17 Lib.Chr18 Lib.Chr19 Lib.Chr2 Lib.Chr20 Lib.Chr21 Lib.Chr22 Lib.Chr3 Lib.Chr4 Lib.Chr5 Lib.Chr6 Lib.Chr7 Lib.Chr8 Lib.Chr9 Lib.ChrM Lib.ChrX Lib.ChrY Lib.GL000191P1 Lib.GL000192P1 Lib.GL000193P1 Lib.GL000194P1 Lib.GL000195P1 Lib.GL000196P1 Lib.GL000197P1 Lib.GL000198P1 Lib.GL000199P1 Lib.GL000200P1 Lib.GL000201P1 Lib.GL000202P1 Lib.GL000203P1 Lib.GL000204P1 Lib.GL000205P1 Lib.GL000206P1 Lib.GL000207P1 Lib.GL000208P1 Lib.GL000209P1 Lib.GL000210P1 Lib.GL000211P1 Lib.GL000212P1 Lib.GL000213P1 Lib.GL000214P1 Lib.GL000215P1 Lib.GL000216P1 Lib.GL000217P1 Lib.GL000218P1 Lib.GL000219P1 Lib.GL000220P1 Lib.GL000221P1 Lib.GL000222P1 Lib.GL000223P1 Lib.GL000224P1 Lib.GL000225P1 Lib.GL000226P1 Lib.GL000227P1 Lib.GL000228P1 Lib.GL000229P1 Lib.GL000230P1 Lib.GL000231P1 Lib.GL000232P1 Lib.GL000233P1 Lib.GL000234P1 Lib.GL000235P1 Lib.GL000236P1 Lib.GL000237P1 Lib.GL000238P1 Lib.GL000239P1 Lib.GL000240P1 Lib.GL000241P1 Lib.GL000242P1 Lib.GL000243P1 Lib.GL000244P1 Lib.GL000245P1 Lib.GL000246P1 Lib.GL000247P1 Lib.GL000248P1 Lib.GL000249P1 Lib.NC_007605 Lib.NONE}
module dependencies:
package dependencies: QuickCheck-2.10.1 ansi-terminal-0.8.0.2
                      ansi-wl-pprint-0.6.8.2 array-0.5.2.0 attoparsec-0.13.2.2
                      base-4.10.1.0 binary-0.8.5.1 bytestring-0.10.8.2 colour-2.3.4
                      conduit-1.3.0 conduit-extra-1.3.0 containers-0.5.10.2
                      deepseq-1.4.3.0 digits-0.3.1 directory-1.3.0.2 exceptions-0.8.3
                      filepath-1.4.1.2 ghc-boot-th-8.2.2 ghc-prim-0.5.1.1
                      hashable-1.2.7.0 integer-gmp-1.0.1.0 integer-logarithms-1.0.2.1
                      mono-traversable-1.0.8.1 mtl-2.2.2 optparse-applicative-0.14.2.0
                      pretty-1.1.3.3 primitive-0.6.3.0 process-1.6.1.0 random-1.1
                      resourcet-1.2.0 scientific-0.3.5.2 split-0.2.3.3 stm-2.4.5.0
                      template-haskell-2.12.0.0 text-1.2.3.0 tf-random-0.5 time-1.8.0.2
                      transformers-0.5.2.0 unix-2.7.2.2 unliftio-core-0.1.1.0
                      unordered-containers-0.2.9.0 vector-0.12.0.1
                      vector-algorithms-0.7.0.1
orphans: colour-2.3.4:Data.Colour
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         vector-0.12.0.1:Data.Vector.Unboxed
         hashable-1.2.7.0:Data.Hashable.Generic
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         text-1.2.3.0:Data.Text.Lazy text-1.2.3.0:Data.Text
         binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.0:Data.Text.Show stm-2.4.5.0:Control.Monad.STM
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         transformers-0.5.2.0:Control.Monad.Trans.Error
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian base-4.10.1.0:GHC.Float
         base-4.10.1.0:GHC.Base
family instance modules: attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.10.1.0:Control.Applicative base-4.10.1.0:Data.Complex
                         base-4.10.1.0:Data.Either base-4.10.1.0:Data.Functor.Compose
                         base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity
                         base-4.10.1.0:Data.Functor.Product base-4.10.1.0:Data.Functor.Sum
                         base-4.10.1.0:Data.List.NonEmpty base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Semigroup base-4.10.1.0:Data.Type.Equality
                         base-4.10.1.0:Data.Version base-4.10.1.0:Data.Void
                         base-4.10.1.0:GHC.Exts base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats
                         conduit-1.3.0:Data.Conduit.Internal.Conduit
                         conduit-1.3.0:Data.Conduit.Internal.Pipe
                         containers-0.5.10.2:Data.IntMap.Internal
                         containers-0.5.10.2:Data.IntSet.Internal
                         containers-0.5.10.2:Data.Map.Internal
                         containers-0.5.10.2:Data.Sequence.Internal
                         containers-0.5.10.2:Data.Set.Internal containers-0.5.10.2:Data.Tree
                         ghc-boot-th-8.2.2:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.2.2:GHC.LanguageExtensions.Type
                         mono-traversable-1.0.8.1:Data.MonoTraversable
                         mono-traversable-1.0.8.1:Data.NonNull
                         mono-traversable-1.0.8.1:Data.Sequences
                         pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         resourcet-1.2.0:Control.Monad.Trans.Resource.Internal
                         template-haskell-2.12.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.0:Data.Text text-1.2.3.0:Data.Text.Lazy
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
import  -/  attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8 75eb155dd50974f74df242dc5b5f3c20
import  -/  attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Internal b41e9045dc19fd5d4a09f150cf85448c
import  -/  attoparsec-0.13.2.2:Data.Attoparsec.Combinator a2926f2a8e89c11f606f9f2788d9a9cb
import  -/  base-4.10.1.0:Control.Applicative 99577a9c463ffe4790a1d37547a345bd
import  -/  base-4.10.1.0:Control.Exception c134ea327d158f2eebf26e12a1d4ad47
import  -/  base-4.10.1.0:Control.Monad ebed2e8e7444944e0c1d827c6faf40a4
import  -/  base-4.10.1.0:Control.Monad.IO.Class 9d78cd0f73a837f3c00753bd212b9f2c
import  -/  base-4.10.1.0:Data.Bits e0790a03e1e51e2d053ee3f563937f85
import  -/  base-4.10.1.0:Data.Char fe4e3458190deeac19969ce15e33bed9
import  -/  base-4.10.1.0:Data.Either d7dae5d9bf298dee616e465c14b5d60e
import  -/  base-4.10.1.0:Data.Foldable 9ed87455d68e87ff2b5b8725eae9897e
import  -/  base-4.10.1.0:Data.Functor 2ffda4f936b8f474394d93205750aff3
import  -/  base-4.10.1.0:Data.List 4ab7fa2a1b87502b23af891a384f0506
import  -/  base-4.10.1.0:Data.Maybe 07738c5485acb328136bb15596f8b845
import  -/  base-4.10.1.0:Data.Monoid c0108b166e27f747671c7fe4ffb11019
import  -/  base-4.10.1.0:Data.OldList 555420b092ca8cf0a8f9666bc0e07dcf
import  -/  base-4.10.1.0:Data.Ord a6789a2a9217f3ca764324b27739797e
import  -/  base-4.10.1.0:Data.Semigroup 92914a5d9e5176805d2364209875f6ed
import  -/  base-4.10.1.0:Data.Tuple 8fa1305aa5032ea35e2a54fa5f1e78f9
import  -/  base-4.10.1.0:GHC.Base 782fd99b5e36f3698a26179a49afca64
import  -/  base-4.10.1.0:GHC.Enum 5a1ba50c23f92f669e01f8955f202337
import  -/  base-4.10.1.0:GHC.Err 514b3a24b22e9d7d731c2d0d02d10842
import  -/  base-4.10.1.0:GHC.Generics c2a8006cab1f0055555a6c72607a574b
import  -/  base-4.10.1.0:GHC.IO e261d8b68ccf81a359626fa520b57d1d
import  -/  base-4.10.1.0:GHC.List e3060fbeb44ce0038e6b4dedf2dd9cf1
import  -/  base-4.10.1.0:GHC.Num 6e1dc5d36d99a802edb39b92bb1923b8
import  -/  base-4.10.1.0:GHC.Read 0abfbe8a9b13202e313efc3bc2f2a3e6
import  -/  base-4.10.1.0:GHC.Real 3c62834bc25e762eabc44149c4cc142d
import  -/  base-4.10.1.0:GHC.Show 0a8ce2b5e533d1c2cfb7954e6736be45
import  -/  base-4.10.1.0:Prelude 31945b7d0084063347fc52506d3a4020
import  -/  base-4.10.1.0:System.IO 6e5bb580370d8d71dc5888f723cea4b4
import  -/  base-4.10.1.0:Text.ParserCombinators.ReadPrec 043a8dc96e82690dac5a09fb8e44e9bc
import  -/  base-4.10.1.0:Text.Read 9e862e012b3c71e83cb56fb456188f44
import  -/  base-4.10.1.0:Text.Read.Lex aff0420c14a3e1f3bb0ee26cd0646682
import  -/  bytestring-0.10.8.2:Data.ByteString 85ba2d590aae1a6d189ceb9a0f58e145
import  -/  bytestring-0.10.8.2:Data.ByteString.Char8 ad3bf7657730adeac35cbb427299ea44
import  -/  bytestring-0.10.8.2:Data.ByteString.Internal e154f5ecf6a3cd0a27df93e86ed481d7
import  -/  conduit-1.3.0:Conduit 9ca771118110a6d629536df1c70cfb0c
import  -/  conduit-1.3.0:Data.Conduit.Combinators 879a6b83242087f07896e92d4cc7d0e9
import  -/  conduit-1.3.0:Data.Conduit.Combinators.Unqualified bb15af616225f302b124833678fb569b
import  -/  conduit-1.3.0:Data.Conduit.Internal.Conduit 2e849a9a0bf7ebe9e17389aa7226446c
import  -/  conduit-extra-1.3.0:Data.Conduit.Attoparsec b4907557e083a7d91d1ea01e01aba9c2
import  -/  containers-0.5.10.2:Data.IntMap.Internal 924624ced78a2cd70ed8353c7a6b8af9
import  -/  containers-0.5.10.2:Data.IntMap.Strict 7892d40daae1f0118150f998d9c28567
import  -/  containers-0.5.10.2:Data.Map.Internal 33ddbf5aa8c0f2ab26fb6dc5be1b1f4c
import  -/  containers-0.5.10.2:Data.Map.Strict 194f5b0a9785a91a43562790aa6787fc
import  -/  containers-0.5.10.2:Data.Map.Strict.Internal 63726a19357ba6ce3637c9bcf7d38b1e
import  -/  containers-0.5.10.2:Data.Set e0f44b836a00cf82340abfec45686444
import  -/  containers-0.5.10.2:Data.Set.Internal b207250e4d0053f17172bfafbcd5c82f
import  -/  digits-0.3.1:Data.Digits 8f964f24c076b1099e4c6ff0295f6910
import  -/  ghc-prim-0.5.1.1:GHC.Classes 93e2660065dce9329577e83d76d8f0d4
import  -/  ghc-prim-0.5.1.1:GHC.Types b1fd0716441595db508c1a74387bf394
import  -/  integer-gmp-1.0.1.0:GHC.Integer.Type 5fa81108482c33b62ec3ac7464eece96
import  -/  optparse-applicative-0.14.2.0:Options.Applicative 93a6ca444e605eb4e5fada3ed41aa455
import  -/  optparse-applicative-0.14.2.0:Options.Applicative.Builder 9b4b35d95a3739ae48e6b42cbe90c8ed
import  -/  optparse-applicative-0.14.2.0:Options.Applicative.Types a7931747d5b2cb3c7d4ffdf50f620d39
import  -/  process-1.6.1.0:System.Process a8c75295bfaf5f54dccd3871224e84a9
import  -/  resourcet-1.2.0:Control.Monad.Trans.Resource.Internal e6300240cc2a919676aa0b3ac9042d06
import  -/  vector-0.12.0.1:Data.Vector 85d00fd11fb6ff56955506f14ad48bd6
871680c8a98548ba1071badd33bf1fbd
  $fBoundedChromNameFormat :: GHC.Enum.Bounded Lib.ChromNameFormat
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:. @ Lib.ChromNameFormat Lib.GRC Lib.UCSC -}
56a346888d4ebe522e3d0b31a72b285d
  $fBoundedUChr :: GHC.Enum.Bounded Lib.UChr
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:. @ Lib.UChr Lib.C1 Lib.NONE -}
871680c8a98548ba1071badd33bf1fbd
  $fEnumChromNameFormat :: GHC.Enum.Enum Lib.ChromNameFormat
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.ChromNameFormat
                  Lib.$fEnumChromNameFormat_$csucc
                  Lib.$fEnumChromNameFormat_$cpred
                  Lib.$fEnumChromNameFormat_$ctoEnum
                  Lib.$fEnumChromNameFormat_$cfromEnum
                  Lib.$fEnumChromNameFormat_$cenumFrom
                  Lib.$fEnumChromNameFormat_$cenumFromThen
                  Lib.$fEnumChromNameFormat_$cenumFromTo
                  Lib.$fEnumChromNameFormat_$cenumFromThenTo -}
871680c8a98548ba1071badd33bf1fbd
  $fEnumChromNameFormat1 :: [Lib.ChromNameFormat]
  {- Unfolding: (Lib.$fEnumChromNameFormat_go2 1#) -}
871680c8a98548ba1071badd33bf1fbd
  $fEnumChromNameFormat2 :: [Lib.ChromNameFormat]
  {- Unfolding: (Lib.$fEnumChromNameFormat_go2 0#) -}
871680c8a98548ba1071badd33bf1fbd
  $fEnumChromNameFormat3 :: Lib.ChromNameFormat
  {- Strictness: x -}
871680c8a98548ba1071badd33bf1fbd
  $fEnumChromNameFormat4 :: Lib.ChromNameFormat
  {- Strictness: x -}
871680c8a98548ba1071badd33bf1fbd
  $fEnumChromNameFormat_$cenumFrom ::
    Lib.ChromNameFormat -> [Lib.ChromNameFormat]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (a :: Lib.ChromNameFormat) ->
                 case a of wild {
                   Lib.GRC -> Lib.$fEnumChromNameFormat2
                   Lib.UCSC -> Lib.$fEnumChromNameFormat1 }) -}
871680c8a98548ba1071badd33bf1fbd
  $fEnumChromNameFormat_$cenumFromThen ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat -> [Lib.ChromNameFormat]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
871680c8a98548ba1071badd33bf1fbd
  $fEnumChromNameFormat_$cenumFromThenTo ::
    Lib.ChromNameFormat
    -> Lib.ChromNameFormat
    -> Lib.ChromNameFormat
    -> [Lib.ChromNameFormat]
  {- Arity: 3, Strictness: <S,1*U><S,1*U><S,1*U> -}
871680c8a98548ba1071badd33bf1fbd
  $fEnumChromNameFormat_$cenumFromTo ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat -> [Lib.ChromNameFormat]
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (x :: Lib.ChromNameFormat)
                   (y :: Lib.ChromNameFormat) ->
                 let {
                   $j :: GHC.Prim.Int# -> [Lib.ChromNameFormat]
                     <join 1> {- Arity: 1, Strictness: <S,U> -}
                   = \ (a# :: GHC.Prim.Int#)[OneShot] ->
                     case y of wild {
                       Lib.GRC
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># a# 0#) of wild1 {
                            GHC.Types.False -> Lib.$fEnumChromNameFormat_go1 a#
                            GHC.Types.True -> GHC.Types.[] @ Lib.ChromNameFormat }
                       Lib.UCSC
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># a# 1#) of wild1 {
                            GHC.Types.False -> Lib.$fEnumChromNameFormat_go a#
                            GHC.Types.True -> GHC.Types.[] @ Lib.ChromNameFormat } }
                 } in
                 case x of wild { Lib.GRC -> $j 0# Lib.UCSC -> $j 1# }) -}
871680c8a98548ba1071badd33bf1fbd
  $fEnumChromNameFormat_$cfromEnum ::
    Lib.ChromNameFormat -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: Lib.ChromNameFormat) ->
                 case a of wild {
                   Lib.GRC -> GHC.Types.I# 0# Lib.UCSC -> GHC.Types.I# 1# }) -}
871680c8a98548ba1071badd33bf1fbd
  $fEnumChromNameFormat_$cpred ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: Lib.ChromNameFormat) ->
                 case a of wild {
                   Lib.GRC -> Lib.$fEnumChromNameFormat3 Lib.UCSC -> Lib.GRC }) -}
871680c8a98548ba1071badd33bf1fbd
  $fEnumChromNameFormat_$csucc ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: Lib.ChromNameFormat) ->
                 case a of wild {
                   Lib.GRC -> Lib.UCSC Lib.UCSC -> Lib.$fEnumChromNameFormat4 }) -}
871680c8a98548ba1071badd33bf1fbd
  $fEnumChromNameFormat_$ctoEnum ::
    GHC.Types.Int -> Lib.ChromNameFormat
  {- Arity: 1, Strictness: <S(S),1*U(U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Types.Int) ->
                 case w of ww { GHC.Types.I# ww1 -> Lib.$w$ctoEnum ww1 }) -}
871680c8a98548ba1071badd33bf1fbd
  $fEnumChromNameFormat_go :: GHC.Prim.Int# -> [Lib.ChromNameFormat]
  {- Arity: 1, Strictness: <L,U>m2 -}
871680c8a98548ba1071badd33bf1fbd
  $fEnumChromNameFormat_go1 :: GHC.Prim.Int# -> [Lib.ChromNameFormat]
  {- Arity: 1, Strictness: <L,U>m2 -}
871680c8a98548ba1071badd33bf1fbd
  $fEnumChromNameFormat_go2 :: GHC.Prim.Int# -> [Lib.ChromNameFormat]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m2 -}
56a346888d4ebe522e3d0b31a72b285d
  $fEnumUChr :: GHC.Enum.Enum Lib.UChr
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.UChr
                  Lib.$fEnumUChr_$csucc
                  Lib.$fEnumUChr_$cpred
                  Lib.$fEnumUChr_$ctoEnum
                  Lib.$fEnumUChr_$cfromEnum
                  Lib.$fEnumUChr_$cenumFrom
                  Lib.$fEnumUChr_$cenumFromThen
                  Lib.$fEnumUChr_$cenumFromTo
                  Lib.$fEnumUChr_$cenumFromThenTo -}
56a346888d4ebe522e3d0b31a72b285d
  $fEnumUChr1 :: Lib.UChr
  {- Strictness: x -}
56a346888d4ebe522e3d0b31a72b285d
  $fEnumUChr2 :: Lib.UChr
  {- Strictness: x -}
56a346888d4ebe522e3d0b31a72b285d
  $fEnumUChr_$cenumFrom :: Lib.UChr -> [Lib.UChr]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,U>,
     Unfolding: (\ (a :: Lib.UChr) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr a of a# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.># a# 110#) of wild {
                   GHC.Types.False -> Lib.$fEnumUChr_go a#
                   GHC.Types.True -> GHC.Types.[] @ Lib.UChr } }) -}
56a346888d4ebe522e3d0b31a72b285d
  $fEnumUChr_$cenumFromThen :: Lib.UChr -> Lib.UChr -> [Lib.UChr]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: (\ (a :: Lib.UChr) (b :: Lib.UChr) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr a of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr b of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.># a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# b# a#) of wild1 {
                        GHC.Types.False
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.># 110# b#) of wild2 {
                             GHC.Types.False
                             -> GHC.Types.:
                                  @ Lib.UChr
                                  (GHC.Prim.tagToEnum# @ Lib.UChr a#)
                                  (let {
                                     delta :: GHC.Prim.Int# = GHC.Prim.-# b# a#
                                   } in
                                   let {
                                     y' :: GHC.Prim.Int# = GHC.Prim.-# 110# delta
                                   } in
                                   letrec {
                                     go_dn :: GHC.Prim.Int# -> [Lib.UChr]
                                       {- Arity: 1, Strictness: <S,U> -}
                                     = \ (x :: GHC.Prim.Int#) ->
                                       case GHC.Prim.tagToEnum#
                                              @ GHC.Types.Bool
                                              (GHC.Prim.<# x y') of wild3 {
                                         GHC.Types.False
                                         -> GHC.Types.:
                                              @ Lib.UChr
                                              (GHC.Prim.tagToEnum# @ Lib.UChr x)
                                              (go_dn (GHC.Prim.+# x delta))
                                         GHC.Types.True
                                         -> GHC.Types.:
                                              @ Lib.UChr
                                              (GHC.Prim.tagToEnum# @ Lib.UChr x)
                                              (GHC.Types.[] @ Lib.UChr) }
                                   } in
                                   go_dn b#)
                             GHC.Types.True
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.># 110# a#) of wild3 {
                                  GHC.Types.False
                                  -> GHC.Types.:
                                       @ Lib.UChr
                                       (GHC.Prim.tagToEnum# @ Lib.UChr a#)
                                       (GHC.Types.[] @ Lib.UChr)
                                  GHC.Types.True -> GHC.Types.[] @ Lib.UChr } }
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<# 110# b#) of wild2 {
                             GHC.Types.False
                             -> GHC.Types.:
                                  @ Lib.UChr
                                  (GHC.Prim.tagToEnum# @ Lib.UChr a#)
                                  (let {
                                     delta :: GHC.Prim.Int# = GHC.Prim.-# b# a#
                                   } in
                                   let {
                                     y' :: GHC.Prim.Int# = GHC.Prim.-# 110# delta
                                   } in
                                   letrec {
                                     go_up :: GHC.Prim.Int# -> [Lib.UChr]
                                       {- Arity: 1, Strictness: <S,U> -}
                                     = \ (x :: GHC.Prim.Int#) ->
                                       case GHC.Prim.tagToEnum#
                                              @ GHC.Types.Bool
                                              (GHC.Prim.># x y') of wild3 {
                                         GHC.Types.False
                                         -> GHC.Types.:
                                              @ Lib.UChr
                                              (GHC.Prim.tagToEnum# @ Lib.UChr x)
                                              (go_up (GHC.Prim.+# x delta))
                                         GHC.Types.True
                                         -> GHC.Types.:
                                              @ Lib.UChr
                                              (GHC.Prim.tagToEnum# @ Lib.UChr x)
                                              (GHC.Types.[] @ Lib.UChr) }
                                   } in
                                   go_up b#)
                             GHC.Types.True
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.<# 110# a#) of wild3 {
                                  GHC.Types.False
                                  -> GHC.Types.:
                                       @ Lib.UChr
                                       (GHC.Prim.tagToEnum# @ Lib.UChr a#)
                                       (GHC.Types.[] @ Lib.UChr)
                                  GHC.Types.True -> GHC.Types.[] @ Lib.UChr } } }
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# b# a#) of wild1 {
                        GHC.Types.False
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.># 0# b#) of wild2 {
                             GHC.Types.False
                             -> GHC.Types.:
                                  @ Lib.UChr
                                  (GHC.Prim.tagToEnum# @ Lib.UChr a#)
                                  (let {
                                     delta :: GHC.Prim.Int# = GHC.Prim.-# b# a#
                                   } in
                                   let {
                                     y' :: GHC.Prim.Int# = GHC.Prim.-# 0# delta
                                   } in
                                   letrec {
                                     go_dn :: GHC.Prim.Int# -> [Lib.UChr]
                                       {- Arity: 1, Strictness: <S,U> -}
                                     = \ (x :: GHC.Prim.Int#) ->
                                       case GHC.Prim.tagToEnum#
                                              @ GHC.Types.Bool
                                              (GHC.Prim.<# x y') of wild3 {
                                         GHC.Types.False
                                         -> GHC.Types.:
                                              @ Lib.UChr
                                              (GHC.Prim.tagToEnum# @ Lib.UChr x)
                                              (go_dn (GHC.Prim.+# x delta))
                                         GHC.Types.True
                                         -> GHC.Types.:
                                              @ Lib.UChr
                                              (GHC.Prim.tagToEnum# @ Lib.UChr x)
                                              (GHC.Types.[] @ Lib.UChr) }
                                   } in
                                   go_dn b#)
                             GHC.Types.True
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.># 0# a#) of wild3 {
                                  GHC.Types.False
                                  -> GHC.Types.:
                                       @ Lib.UChr
                                       (GHC.Prim.tagToEnum# @ Lib.UChr a#)
                                       (GHC.Types.[] @ Lib.UChr)
                                  GHC.Types.True -> GHC.Types.[] @ Lib.UChr } }
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<# 0# b#) of wild2 {
                             GHC.Types.False
                             -> GHC.Types.:
                                  @ Lib.UChr
                                  (GHC.Prim.tagToEnum# @ Lib.UChr a#)
                                  (let {
                                     delta :: GHC.Prim.Int# = GHC.Prim.-# b# a#
                                   } in
                                   let {
                                     y' :: GHC.Prim.Int# = GHC.Prim.-# 0# delta
                                   } in
                                   letrec {
                                     go_up :: GHC.Prim.Int# -> [Lib.UChr]
                                       {- Arity: 1, Strictness: <S,U> -}
                                     = \ (x :: GHC.Prim.Int#) ->
                                       case GHC.Prim.tagToEnum#
                                              @ GHC.Types.Bool
                                              (GHC.Prim.># x y') of wild3 {
                                         GHC.Types.False
                                         -> GHC.Types.:
                                              @ Lib.UChr
                                              (GHC.Prim.tagToEnum# @ Lib.UChr x)
                                              (go_up (GHC.Prim.+# x delta))
                                         GHC.Types.True
                                         -> GHC.Types.:
                                              @ Lib.UChr
                                              (GHC.Prim.tagToEnum# @ Lib.UChr x)
                                              (GHC.Types.[] @ Lib.UChr) }
                                   } in
                                   go_up b#)
                             GHC.Types.True
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.<# 0# a#) of wild3 {
                                  GHC.Types.False
                                  -> GHC.Types.:
                                       @ Lib.UChr
                                       (GHC.Prim.tagToEnum# @ Lib.UChr a#)
                                       (GHC.Types.[] @ Lib.UChr)
                                  GHC.Types.True -> GHC.Types.[] @ Lib.UChr } } } } } }) -}
56a346888d4ebe522e3d0b31a72b285d
  $fEnumUChr_$cenumFromThenTo ::
    Lib.UChr -> Lib.UChr -> Lib.UChr -> [Lib.UChr]
  {- Arity: 3, Strictness: <S,U><S,U><S,U> -}
56a346888d4ebe522e3d0b31a72b285d
  $fEnumUChr_$cenumFromTo :: Lib.UChr -> Lib.UChr -> [Lib.UChr]
  {- Arity: 2, Strictness: <S,U><S,U>,
     Unfolding: (\ (x :: Lib.UChr) (y :: Lib.UChr) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr y of a#1 { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.># a# a#1) of wild {
                   GHC.Types.False
                   -> letrec {
                        go19 :: GHC.Prim.Int# -> [Lib.UChr]
                          {- Arity: 1, Strictness: <L,U> -}
                        = \ (x1 :: GHC.Prim.Int#) ->
                          GHC.Types.:
                            @ Lib.UChr
                            (case GHC.Prim.tagToEnum#
                                    @ GHC.Types.Bool
                                    (GHC.Prim.>=# x1 0#) of wild1 {
                               GHC.Types.False -> Lib.$wlvl1 x1
                               GHC.Types.True
                               -> case GHC.Prim.tagToEnum#
                                         @ GHC.Types.Bool
                                         (GHC.Prim.<=# x1 110#) of wild2 {
                                    GHC.Types.False -> Lib.$wlvl1 x1
                                    GHC.Types.True -> GHC.Prim.tagToEnum# @ Lib.UChr x1 } })
                            (case GHC.Prim.tagToEnum#
                                    @ GHC.Types.Bool
                                    (GHC.Prim.==# x1 a#1) of wild1 {
                               GHC.Types.False -> go19 (GHC.Prim.+# x1 1#)
                               GHC.Types.True -> GHC.Types.[] @ Lib.UChr })
                      } in
                      go19 a#
                   GHC.Types.True -> GHC.Types.[] @ Lib.UChr } } }) -}
56a346888d4ebe522e3d0b31a72b285d
  $fEnumUChr_$cfromEnum :: Lib.UChr -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,U>m,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: Lib.UChr) ->
                 case a of x1 { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x1 of a# { DEFAULT ->
                 GHC.Types.I# a# } }) -}
56a346888d4ebe522e3d0b31a72b285d
  $fEnumUChr_$cpred :: Lib.UChr -> Lib.UChr
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: Lib.UChr) ->
                 case a of x1 { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x1 of a# {
                   DEFAULT -> GHC.Prim.tagToEnum# @ Lib.UChr (GHC.Prim.+# a# -1#)
                   0# -> Lib.$fEnumUChr1 } }) -}
56a346888d4ebe522e3d0b31a72b285d
  $fEnumUChr_$csucc :: Lib.UChr -> Lib.UChr
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: Lib.UChr) ->
                 case a of x1 { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x1 of a# {
                   DEFAULT -> GHC.Prim.tagToEnum# @ Lib.UChr (GHC.Prim.+# a# 1#)
                   110# -> Lib.$fEnumUChr2 } }) -}
56a346888d4ebe522e3d0b31a72b285d
  $fEnumUChr_$ctoEnum :: GHC.Types.Int -> Lib.UChr
  {- Arity: 1, Strictness: <S(S),1*U(U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Types.Int) ->
                 case w of ww { GHC.Types.I# ww1 -> Lib.$w$ctoEnum1 ww1 }) -}
56a346888d4ebe522e3d0b31a72b285d
  $fEnumUChr_go :: GHC.Prim.Int# -> [Lib.UChr]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m2 -}
21071c975426d6ea93962a8c0a55430b
  $fEqAlignedRead :: GHC.Classes.Eq Lib.AlignedRead
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.AlignedRead
                  Lib.$fEqAlignedRead_$c==
                  Lib.$fEqAlignedRead_$c/= -}
21071c975426d6ea93962a8c0a55430b
  $fEqAlignedRead_$c/= ::
    Lib.AlignedRead -> Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LLLS)LLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(1*U(U,U,U,U),1*U(U),U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,1*U,1*U,1*U(U,U,U,U)),1*U)><S(S(LLLS)LLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(1*U(U,U,U,U),1*U(U),U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,1*U,1*U,1*U(U,U,U,U)),1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.AlignedRead) (b :: Lib.AlignedRead) ->
                 case Lib.$fEqAlignedRead_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
21071c975426d6ea93962a8c0a55430b
  $fEqAlignedRead_$c== ::
    Lib.AlignedRead -> Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LLLS)LLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(1*U(U,U,U,U),1*U(U),U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,1*U,1*U,1*U(U,U,U,U)),1*U)><S(S(LLLS)LLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(1*U(U,U,U,U),1*U(U),U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,1*U,1*U,1*U(U,U,U,U)),1*U)> -}
9bef29ed1835da52d687e9f588f6f1bf
  $fEqBEDPE :: GHC.Classes.Eq Lib.BEDPE
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.BEDPE Lib.$fEqBEDPE_$c== Lib.$fEqBEDPE_$c/= -}
9bef29ed1835da52d687e9f588f6f1bf
  $fEqBEDPE_$c/= :: Lib.BEDPE -> Lib.BEDPE -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLL),1*U(U,1*U,1*U,U,1*U,1*U,1*U(U,U,U,U))><S(SLLLLLL),1*U(U,1*U,1*U,U,1*U,1*U,1*U(U,U,U,U))>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.BEDPE) (b :: Lib.BEDPE) ->
                 case Lib.$fEqBEDPE_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
9bef29ed1835da52d687e9f588f6f1bf
  $fEqBEDPE_$c== :: Lib.BEDPE -> Lib.BEDPE -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLL),1*U(U,1*U,1*U,U,1*U,1*U,1*U(U,U,U,U))><S(SLLLLLL),1*U(U,1*U,1*U,U,1*U,1*U,1*U(U,U,U,U))>,
     Unfolding: (\ (ds6 :: Lib.BEDPE) (ds7 :: Lib.BEDPE) ->
                 case ds6 of wild { Lib.BEDPE a1 a2 a3 a4 a5 a6 a7 ->
                 case ds7 of wild1 { Lib.BEDPE b1 b2 b3 b4 b5 b6 b7 ->
                 case GHC.Prim.dataToTag# @ Lib.UChr a1 of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr b1 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==# a# b#) of wild2 {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case GHC.Integer.Type.eqInteger# a2 b2 of wild3 { DEFAULT ->
                      case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild3 of wild4 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case GHC.Integer.Type.eqInteger# a3 b3 of wild5 { DEFAULT ->
                           case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild5 of wild6 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> case GHC.Prim.dataToTag# @ Lib.UChr a4 of a#1 { DEFAULT ->
                                case GHC.Prim.dataToTag# @ Lib.UChr b4 of b#1 { DEFAULT ->
                                case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.==# a#1 b#1) of wild7 {
                                  GHC.Types.False -> GHC.Types.False
                                  GHC.Types.True
                                  -> case GHC.Integer.Type.eqInteger# a5 b5 of wild8 { DEFAULT ->
                                     case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild8 of wild9 {
                                       GHC.Types.False -> GHC.Types.False
                                       GHC.Types.True
                                       -> case GHC.Integer.Type.eqInteger#
                                                 a6
                                                 b6 of wild10 { DEFAULT ->
                                          case GHC.Prim.tagToEnum#
                                                 @ GHC.Types.Bool
                                                 wild10 of wild11 {
                                            GHC.Types.False -> GHC.Types.False
                                            GHC.Types.True
                                            -> Data.ByteString.Internal.eq
                                                 a7
                                                 b7 } } } } } } } } } } } } } } } }) -}
ec17ee0811cea74621c0d656d7cc2daf
  $fEqBedRecord :: GHC.Classes.Eq Lib.BedRecord
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.BedRecord Lib.$fEqBedRecord_$c== Lib.$fEqBedRecord_$c/= -}
ec17ee0811cea74621c0d656d7cc2daf
  $fEqBedRecord_$c/= ::
    Lib.BedRecord -> Lib.BedRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(U,1*U,1*U,1*U(U,U,U,U))><S(SLLL),1*U(U,1*U,1*U,1*U(U,U,U,U))>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.BedRecord) (b :: Lib.BedRecord) ->
                 case Lib.$fEqBedRecord_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
ec17ee0811cea74621c0d656d7cc2daf
  $fEqBedRecord_$c== ::
    Lib.BedRecord -> Lib.BedRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(U,1*U,1*U,1*U(U,U,U,U))><S(SLLL),1*U(U,1*U,1*U,1*U(U,U,U,U))>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.BedRecord) (w1 :: Lib.BedRecord) ->
                 case w of ww { Lib.BedRecord ww1 ww2 ww3 ww4 ->
                 case w1 of ww5 { Lib.BedRecord ww6 ww7 ww8 ww9 ->
                 Lib.$w$c== ww1 ww2 ww3 ww4 ww6 ww7 ww8 ww9 } }) -}
871680c8a98548ba1071badd33bf1fbd
  $fEqChromNameFormat :: GHC.Classes.Eq Lib.ChromNameFormat
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.ChromNameFormat
                  Lib.$fEqChromNameFormat_$c==
                  Lib.$fEqChromNameFormat_$c/= -}
871680c8a98548ba1071badd33bf1fbd
  $fEqChromNameFormat_$c/= ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.ChromNameFormat) (b :: Lib.ChromNameFormat) ->
                 case a of wild {
                   Lib.GRC
                   -> case b of wild1 {
                        Lib.GRC -> GHC.Types.False Lib.UCSC -> GHC.Types.True }
                   Lib.UCSC
                   -> case b of wild1 {
                        Lib.GRC -> GHC.Types.True Lib.UCSC -> GHC.Types.False } }) -}
871680c8a98548ba1071badd33bf1fbd
  $fEqChromNameFormat_$c== ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds6 :: Lib.ChromNameFormat) (ds7 :: Lib.ChromNameFormat) ->
                 case ds6 of wild {
                   Lib.GRC
                   -> case ds7 of wild1 {
                        Lib.GRC -> GHC.Types.True Lib.UCSC -> GHC.Types.False }
                   Lib.UCSC
                   -> case ds7 of wild1 {
                        Lib.GRC -> GHC.Types.False Lib.UCSC -> GHC.Types.True } }) -}
e84d95f7c553a7e98bb578b6a27683cc
  $fEqMasterRecord :: GHC.Classes.Eq Lib.MasterRecord
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.MasterRecord
                  Lib.$fEqMasterRecord_$c==
                  Lib.$fEqMasterRecord_$c/= -}
e84d95f7c553a7e98bb578b6a27683cc
  $fEqMasterRecord_$c/= ::
    Lib.MasterRecord -> Lib.MasterRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(U,1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U))><S(SLLLLLLLLLLL),1*U(U,1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U))>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.MasterRecord) (b :: Lib.MasterRecord) ->
                 case Lib.$fEqMasterRecord_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
e84d95f7c553a7e98bb578b6a27683cc
  $fEqMasterRecord_$c== ::
    Lib.MasterRecord -> Lib.MasterRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(U,1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U))><S(SLLLLLLLLLLL),1*U(U,1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U))> -}
26e2207e507d4bc5b47a3c19f626e7fd
  $fEqMidFamily :: GHC.Classes.Eq Lib.MidFamily
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.MidFamily Lib.$fEqMidFamily_$c== Lib.$fEqMidFamily_$c/= -}
26e2207e507d4bc5b47a3c19f626e7fd
  $fEqMidFamily_$c/= ::
    Lib.MidFamily -> Lib.MidFamily -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLL),1*U(U,1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U(U,1*U,1*U,1*U(U,U,U,U)))><S(SLLLLLLLLL),1*U(U,1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U(U,1*U,1*U,1*U(U,U,U,U)))>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.MidFamily) (b :: Lib.MidFamily) ->
                 case Lib.$fEqMidFamily_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
26e2207e507d4bc5b47a3c19f626e7fd
  $fEqMidFamily_$c== ::
    Lib.MidFamily -> Lib.MidFamily -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLL),1*U(U,1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U(U,1*U,1*U,1*U(U,U,U,U)))><S(SLLLLLLLLL),1*U(U,1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U(U,1*U,1*U,1*U(U,U,U,U)))> -}
f06645d095bf16235fbe38a1fa974f4c
  $fEqOpts :: GHC.Classes.Eq Lib.Opts
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:. @ Lib.Opts Lib.$fEqOpts_$c== Lib.$fEqOpts_$c/= -}
f06645d095bf16235fbe38a1fa974f4c
  $fEqOpts_$c/= :: Lib.Opts -> Lib.Opts -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(1*U,1*U,1*U,1*U)><S(SLLL),1*U(1*U,1*U,1*U,1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.Opts) (b :: Lib.Opts) ->
                 case Lib.$fEqOpts_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
f06645d095bf16235fbe38a1fa974f4c
  $fEqOpts_$c== :: Lib.Opts -> Lib.Opts -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(1*U,1*U,1*U,1*U)><S(SLLL),1*U(1*U,1*U,1*U,1*U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.Opts) (w1 :: Lib.Opts) ->
                 case w of ww { Lib.Opts ww1 ww2 ww3 ww4 ->
                 case w1 of ww5 { Lib.Opts ww6 ww7 ww8 ww9 ->
                 Lib.$w$c==1 ww1 ww2 ww3 ww4 ww6 ww7 ww8 ww9 } }) -}
21071c975426d6ea93962a8c0a55430b
  $fEqPairedAln :: GHC.Classes.Eq Lib.PairedAln
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.PairedAln Lib.$fEqPairedAln_$c== Lib.$fEqPairedAln_$c/= -}
21071c975426d6ea93962a8c0a55430b
  $fEqPairedAln_$c/= ::
    Lib.PairedAln -> Lib.PairedAln -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S(LLLS)LLLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(1*U(1*U(U,U,U,U),1*U(U),U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,1*U,1*U,1*U(U,U,U,U)),1*U),1*U(1*U(U,U,U,U),1*U(U),U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,1*U,1*U,1*U(U,U,U,U)),1*U),1*U,1*U)><S(S(S(LLLS)LLLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(1*U(1*U(U,U,U,U),1*U(U),U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,1*U,1*U,1*U(U,U,U,U)),1*U),1*U(1*U(U,U,U,U),1*U(U),U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,1*U,1*U,1*U(U,U,U,U)),1*U),1*U,1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.PairedAln) (b :: Lib.PairedAln) ->
                 case Lib.$fEqPairedAln_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
21071c975426d6ea93962a8c0a55430b
  $fEqPairedAln_$c== ::
    Lib.PairedAln -> Lib.PairedAln -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S(LLLS)LLLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(1*U(1*U(U,U,U,U),1*U(U),U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,1*U,1*U,1*U(U,U,U,U)),1*U),1*U(1*U(U,U,U,U),1*U(U),U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,1*U,1*U,1*U(U,U,U,U)),1*U),1*U,1*U)><S(S(S(LLLS)LLLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(1*U(1*U(U,U,U,U),1*U(U),U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,1*U,1*U,1*U(U,U,U,U)),1*U),1*U(1*U(U,U,U,U),1*U(U),U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,1*U,1*U,1*U(U,U,U,U)),1*U),1*U,1*U)>,
     Unfolding: (\ (ds6 :: Lib.PairedAln) (ds7 :: Lib.PairedAln) ->
                 case ds6 of wild { Lib.PairedAln a1 a2 a3 a4 ->
                 case ds7 of wild1 { Lib.PairedAln b1 b2 b3 b4 ->
                 case Lib.$fEqAlignedRead_$c== a1 b1 of wild2 {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case Lib.$fEqAlignedRead_$c== a2 b2 of wild3 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case GHC.Classes.$fEq[]_$c==
                                  @ Lib.AlignedRead
                                  Lib.$fEqAlignedRead
                                  a3
                                  b3 of wild4 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> GHC.Classes.$fEq[]_$c==
                                  @ Lib.AlignedRead
                                  Lib.$fEqAlignedRead
                                  a4
                                  b4 } } } } }) -}
8edcc2498c46c20d06182ee101cd5654
  $fEqRunStats :: GHC.Classes.Eq Lib.RunStats
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.RunStats Lib.$fEqRunStats_$c== Lib.$fEqRunStats_$c/= -}
8edcc2498c46c20d06182ee101cd5654
  $fEqRunStats_$c/= :: Lib.RunStats -> Lib.RunStats -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLL),1*U(1*U,1*U,1*U,1*U,1*U(U),1*U(U))><S(SLLLLL),1*U(1*U,1*U,1*U,1*U,1*U(U),1*U(U))>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.RunStats) (b :: Lib.RunStats) ->
                 case Lib.$fEqRunStats_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
8edcc2498c46c20d06182ee101cd5654
  $fEqRunStats_$c== :: Lib.RunStats -> Lib.RunStats -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLL),1*U(1*U,1*U,1*U,1*U,1*U(U),1*U(U))><S(SLLLLL),1*U(1*U,1*U,1*U,1*U,1*U(U),1*U(U))>,
     Unfolding: (\ (ds6 :: Lib.RunStats) (ds7 :: Lib.RunStats) ->
                 case ds6 of wild { Lib.RunStats a1 a2 a3 a4 a5 a6 ->
                 case ds7 of wild1 { Lib.RunStats b1 b2 b3 b4 b5 b6 ->
                 case GHC.Integer.Type.eqInteger# a1 b1 of wild2 { DEFAULT ->
                 case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild2 of wild3 {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case GHC.Integer.Type.eqInteger# a2 b2 of wild4 { DEFAULT ->
                      case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild4 of wild5 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case GHC.Integer.Type.eqInteger# a3 b3 of wild6 { DEFAULT ->
                           case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild6 of wild7 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> case GHC.Integer.Type.eqInteger# a4 b4 of wild8 { DEFAULT ->
                                case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild8 of wild9 {
                                  GHC.Types.False -> GHC.Types.False
                                  GHC.Types.True
                                  -> case a5 of wild10 { GHC.Types.D# x ->
                                     case b5 of wild11 { GHC.Types.D# y ->
                                     case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.==## x y) of wild12 {
                                       GHC.Types.False -> GHC.Types.False
                                       GHC.Types.True
                                       -> GHC.Classes.eqDouble a6 b6 } } } } } } } } } } } } }) -}
8559d0b44695806151a5bc1692dff6d3
  $fEqSAMFlag :: GHC.Classes.Eq Lib.SAMFlag
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.SAMFlag Lib.$fEqSAMFlag_$c== Lib.$fEqSAMFlag_$c/= -}
8559d0b44695806151a5bc1692dff6d3
  $fEqSAMFlag_$c/= :: Lib.SAMFlag -> Lib.SAMFlag -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U))><S(SLLLLLLLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U))>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.SAMFlag) (b :: Lib.SAMFlag) ->
                 case Lib.$fEqSAMFlag_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
8559d0b44695806151a5bc1692dff6d3
  $fEqSAMFlag_$c== :: Lib.SAMFlag -> Lib.SAMFlag -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U))><S(SLLLLLLLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U))> -}
56a346888d4ebe522e3d0b31a72b285d
  $fEqUChr :: GHC.Classes.Eq Lib.UChr
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:. @ Lib.UChr Lib.$fEqUChr_$c== Lib.$fEqUChr_$c/= -}
56a346888d4ebe522e3d0b31a72b285d
  $fEqUChr_$c/= :: Lib.UChr -> Lib.UChr -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.UChr) (b :: Lib.UChr) ->
                 case a of x1 { DEFAULT ->
                 case b of x2 { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x1 of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==# a# b#) of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False } } } } }) -}
56a346888d4ebe522e3d0b31a72b285d
  $fEqUChr_$c== :: Lib.UChr -> Lib.UChr -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.UChr) (b :: Lib.UChr) ->
                 case a of x1 { DEFAULT ->
                 case b of x2 { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x1 of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x2 of b# { DEFAULT ->
                 GHC.Prim.tagToEnum#
                   @ GHC.Types.Bool
                   (GHC.Prim.==# a# b#) } } } }) -}
21071c975426d6ea93962a8c0a55430b
  $fGenericAlignedRead :: GHC.Generics.Generic Lib.AlignedRead
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.AlignedRead
                  Lib.$fGenericAlignedRead1
                    `cast`
                  (forall (x :: <*>_N).
                   <Lib.AlignedRead>_R
                   ->_R Trans
                            (Sym (GHC.Generics.N:M1[0]
                                      <*>_N
                                      <GHC.Generics.D>_P
                                      <'GHC.Generics.MetaData
                                         "AlignedRead"
                                         "Lib"
                                         "primerclip-0.3.3.0-GfuurxY2OUOHPk7lKZLXUc"
                                         'GHC.Types.False>_P
                                      <GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "AlignedRead" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                         ((((GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "qname")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString)
                                             GHC.Generics.:*: (GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Base.Just "flag")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R GHC.Types.Int)
                                                               GHC.Generics.:*: GHC.Generics.M1
                                                                                  GHC.Generics.S
                                                                                  ('GHC.Generics.MetaSel
                                                                                     ('GHC.Base.Just
                                                                                        "rname")
                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                     'GHC.Generics.DecidedLazy)
                                                                                  (GHC.Generics.K1
                                                                                     GHC.Generics.R
                                                                                     Lib.UChr)))
                                            GHC.Generics.:*: ((GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Base.Just "pos")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    GHC.Integer.Type.Integer)
                                                               GHC.Generics.:*: GHC.Generics.M1
                                                                                  GHC.Generics.S
                                                                                  ('GHC.Generics.MetaSel
                                                                                     ('GHC.Base.Just
                                                                                        "endpos")
                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                     'GHC.Generics.DecidedLazy)
                                                                                  (GHC.Generics.K1
                                                                                     GHC.Generics.R
                                                                                     GHC.Integer.Type.Integer))
                                                              GHC.Generics.:*: (GHC.Generics.M1
                                                                                  GHC.Generics.S
                                                                                  ('GHC.Generics.MetaSel
                                                                                     ('GHC.Base.Just
                                                                                        "mapqual")
                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                     'GHC.Generics.DecidedLazy)
                                                                                  (GHC.Generics.K1
                                                                                     GHC.Generics.R
                                                                                     GHC.Integer.Type.Integer)
                                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                                   GHC.Generics.S
                                                                                                   ('GHC.Generics.MetaSel
                                                                                                      ('GHC.Base.Just
                                                                                                         "cigar")
                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                   (GHC.Generics.K1
                                                                                                      GHC.Generics.R
                                                                                                      Data.ByteString.Internal.ByteString))))
                                           GHC.Generics.:*: (((GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Base.Just "trimdcigar")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    Data.ByteString.Internal.ByteString)
                                                               GHC.Generics.:*: GHC.Generics.M1
                                                                                  GHC.Generics.S
                                                                                  ('GHC.Generics.MetaSel
                                                                                     ('GHC.Base.Just
                                                                                        "cigmap")
                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                     'GHC.Generics.DecidedLazy)
                                                                                  (GHC.Generics.K1
                                                                                     GHC.Generics.R
                                                                                     Lib.CigarMap))
                                                              GHC.Generics.:*: (GHC.Generics.M1
                                                                                  GHC.Generics.S
                                                                                  ('GHC.Generics.MetaSel
                                                                                     ('GHC.Base.Just
                                                                                        "trimdcigmap")
                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                     'GHC.Generics.DecidedLazy)
                                                                                  (GHC.Generics.K1
                                                                                     GHC.Generics.R
                                                                                     Lib.CigarMap)
                                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                                   GHC.Generics.S
                                                                                                   ('GHC.Generics.MetaSel
                                                                                                      ('GHC.Base.Just
                                                                                                         "rnext")
                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                   (GHC.Generics.K1
                                                                                                      GHC.Generics.R
                                                                                                      Data.ByteString.Internal.ByteString)))
                                                             GHC.Generics.:*: ((GHC.Generics.M1
                                                                                  GHC.Generics.S
                                                                                  ('GHC.Generics.MetaSel
                                                                                     ('GHC.Base.Just
                                                                                        "pnext")
                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                     'GHC.Generics.DecidedLazy)
                                                                                  (GHC.Generics.K1
                                                                                     GHC.Generics.R
                                                                                     GHC.Integer.Type.Integer)
                                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                                   GHC.Generics.S
                                                                                                   ('GHC.Generics.MetaSel
                                                                                                      ('GHC.Base.Just
                                                                                                         "tlen")
                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                   (GHC.Generics.K1
                                                                                                      GHC.Generics.R
                                                                                                      GHC.Integer.Type.Integer))
                                                                               GHC.Generics.:*: (GHC.Generics.M1
                                                                                                   GHC.Generics.S
                                                                                                   ('GHC.Generics.MetaSel
                                                                                                      ('GHC.Base.Just
                                                                                                         "refseq")
                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                   (GHC.Generics.K1
                                                                                                      GHC.Generics.R
                                                                                                      Data.ByteString.Internal.ByteString)
                                                                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                                                                    GHC.Generics.S
                                                                                                                    ('GHC.Generics.MetaSel
                                                                                                                       ('GHC.Base.Just
                                                                                                                          "basequal")
                                                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                                                       'GHC.Generics.DecidedLazy)
                                                                                                                    (GHC.Generics.K1
                                                                                                                       GHC.Generics.R
                                                                                                                       Data.ByteString.Internal.ByteString)))))
                                          GHC.Generics.:*: ((((GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Base.Just "optfields")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    Data.ByteString.Internal.ByteString)
                                                               GHC.Generics.:*: GHC.Generics.M1
                                                                                  GHC.Generics.S
                                                                                  ('GHC.Generics.MetaSel
                                                                                     ('GHC.Base.Just
                                                                                        "strand")
                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                     'GHC.Generics.DecidedLazy)
                                                                                  (GHC.Generics.K1
                                                                                     GHC.Generics.R
                                                                                     Data.ByteString.Internal.ByteString))
                                                              GHC.Generics.:*: (GHC.Generics.M1
                                                                                  GHC.Generics.S
                                                                                  ('GHC.Generics.MetaSel
                                                                                     ('GHC.Base.Just
                                                                                        "paired")
                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                     'GHC.Generics.DecidedLazy)
                                                                                  (GHC.Generics.K1
                                                                                     GHC.Generics.R
                                                                                     GHC.Types.Bool)
                                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                                   GHC.Generics.S
                                                                                                   ('GHC.Generics.MetaSel
                                                                                                      ('GHC.Base.Just
                                                                                                         "mapped")
                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                   (GHC.Generics.K1
                                                                                                      GHC.Generics.R
                                                                                                      GHC.Types.Bool)))
                                                             GHC.Generics.:*: ((GHC.Generics.M1
                                                                                  GHC.Generics.S
                                                                                  ('GHC.Generics.MetaSel
                                                                                     ('GHC.Base.Just
                                                                                        "fint")
                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                     'GHC.Generics.DecidedLazy)
                                                                                  (GHC.Generics.K1
                                                                                     GHC.Generics.R
                                                                                     [Lib.BedRecord])
                                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                                   GHC.Generics.S
                                                                                                   ('GHC.Generics.MetaSel
                                                                                                      ('GHC.Base.Just
                                                                                                         "rint")
                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                   (GHC.Generics.K1
                                                                                                      GHC.Generics.R
                                                                                                      [Lib.BedRecord]))
                                                                               GHC.Generics.:*: (GHC.Generics.M1
                                                                                                   GHC.Generics.S
                                                                                                   ('GHC.Generics.MetaSel
                                                                                                      ('GHC.Base.Just
                                                                                                         "pintflag")
                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                   (GHC.Generics.K1
                                                                                                      GHC.Generics.R
                                                                                                      GHC.Types.Bool)
                                                                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                                                                    GHC.Generics.S
                                                                                                                    ('GHC.Generics.MetaSel
                                                                                                                       ('GHC.Base.Just
                                                                                                                          "trimdflag")
                                                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                                                       'GHC.Generics.DecidedLazy)
                                                                                                                    (GHC.Generics.K1
                                                                                                                       GHC.Generics.R
                                                                                                                       GHC.Types.Bool))))
                                                            GHC.Generics.:*: (((GHC.Generics.M1
                                                                                  GHC.Generics.S
                                                                                  ('GHC.Generics.MetaSel
                                                                                     ('GHC.Base.Just
                                                                                        "trimdpos")
                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                     'GHC.Generics.DecidedLazy)
                                                                                  (GHC.Generics.K1
                                                                                     GHC.Generics.R
                                                                                     GHC.Integer.Type.Integer)
                                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                                   GHC.Generics.S
                                                                                                   ('GHC.Generics.MetaSel
                                                                                                      ('GHC.Base.Just
                                                                                                         "trimdendpos")
                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                   (GHC.Generics.K1
                                                                                                      GHC.Generics.R
                                                                                                      GHC.Integer.Type.Integer))
                                                                               GHC.Generics.:*: (GHC.Generics.M1
                                                                                                   GHC.Generics.S
                                                                                                   ('GHC.Generics.MetaSel
                                                                                                      ('GHC.Base.Just
                                                                                                         "headerstrings")
                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                   (GHC.Generics.K1
                                                                                                      GHC.Generics.R
                                                                                                      Lib.Header)
                                                                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                                                                    GHC.Generics.S
                                                                                                                    ('GHC.Generics.MetaSel
                                                                                                                       ('GHC.Base.Just
                                                                                                                          "isheader")
                                                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                                                       'GHC.Generics.DecidedLazy)
                                                                                                                    (GHC.Generics.K1
                                                                                                                       GHC.Generics.R
                                                                                                                       GHC.Types.Bool)))
                                                                              GHC.Generics.:*: ((GHC.Generics.M1
                                                                                                   GHC.Generics.S
                                                                                                   ('GHC.Generics.MetaSel
                                                                                                      ('GHC.Base.Just
                                                                                                         "mid")
                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                   (GHC.Generics.K1
                                                                                                      GHC.Generics.R
                                                                                                      Data.ByteString.Internal.ByteString)
                                                                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                                                                    GHC.Generics.S
                                                                                                                    ('GHC.Generics.MetaSel
                                                                                                                       ('GHC.Base.Just
                                                                                                                          "xmid")
                                                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                                                       'GHC.Generics.DecidedLazy)
                                                                                                                    (GHC.Generics.K1
                                                                                                                       GHC.Generics.R
                                                                                                                       Data.ByteString.Internal.ByteString))
                                                                                                GHC.Generics.:*: (GHC.Generics.M1
                                                                                                                    GHC.Generics.S
                                                                                                                    ('GHC.Generics.MetaSel
                                                                                                                       ('GHC.Base.Just
                                                                                                                          "tbed")
                                                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                                                       'GHC.Generics.DecidedLazy)
                                                                                                                    (GHC.Generics.K1
                                                                                                                       GHC.Generics.R
                                                                                                                       Lib.BedRecord)
                                                                                                                  GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                     GHC.Generics.S
                                                                                                                                     ('GHC.Generics.MetaSel
                                                                                                                                        ('GHC.Base.Just
                                                                                                                                           "trimdToZeroLength")
                                                                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                                                                        'GHC.Generics.DecidedLazy)
                                                                                                                                     (GHC.Generics.K1
                                                                                                                                        GHC.Generics.R
                                                                                                                                        GHC.Types.Bool))))))>_R))
                            (Sub (Sym (Lib.Rep_AlignedRead[0]))) <x>_N)
                  Lib.$fGenericAlignedRead_$cto -}
21071c975426d6ea93962a8c0a55430b
  $fGenericAlignedRead1 ::
    Lib.AlignedRead
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "AlignedRead" 'GHC.Generics.PrefixI 'GHC.Types.True)
         ((((GHC.Generics.M1
               GHC.Generics.S
               ('GHC.Generics.MetaSel
                  ('GHC.Base.Just "qname")
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.NoSourceStrictness
                  'GHC.Generics.DecidedLazy)
               (GHC.Generics.K1
                  GHC.Generics.R Data.ByteString.Internal.ByteString)
             GHC.Generics.:*: (GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Base.Just "flag")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                               GHC.Generics.:*: GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "rname")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1 GHC.Generics.R Lib.UChr)))
            GHC.Generics.:*: ((GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Base.Just "pos")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                               GHC.Generics.:*: GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "endpos")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R GHC.Integer.Type.Integer))
                              GHC.Generics.:*: (GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "mapqual")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R GHC.Integer.Type.Integer)
                                                GHC.Generics.:*: GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Base.Just "cigar")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      Data.ByteString.Internal.ByteString))))
           GHC.Generics.:*: (((GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Base.Just "trimdcigar")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1
                                    GHC.Generics.R Data.ByteString.Internal.ByteString)
                               GHC.Generics.:*: GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "cigmap")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1 GHC.Generics.R Lib.CigarMap))
                              GHC.Generics.:*: (GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "trimdcigmap")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1 GHC.Generics.R Lib.CigarMap)
                                                GHC.Generics.:*: GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Base.Just "rnext")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      Data.ByteString.Internal.ByteString)))
                             GHC.Generics.:*: ((GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "pnext")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R GHC.Integer.Type.Integer)
                                                GHC.Generics.:*: GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Base.Just "tlen")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      GHC.Integer.Type.Integer))
                                               GHC.Generics.:*: (GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Base.Just "refseq")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      Data.ByteString.Internal.ByteString)
                                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                                    GHC.Generics.S
                                                                                    ('GHC.Generics.MetaSel
                                                                                       ('GHC.Base.Just
                                                                                          "basequal")
                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                       'GHC.Generics.DecidedLazy)
                                                                                    (GHC.Generics.K1
                                                                                       GHC.Generics.R
                                                                                       Data.ByteString.Internal.ByteString)))))
          GHC.Generics.:*: ((((GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Base.Just "optfields")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1
                                    GHC.Generics.R Data.ByteString.Internal.ByteString)
                               GHC.Generics.:*: GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "strand")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R
                                                     Data.ByteString.Internal.ByteString))
                              GHC.Generics.:*: (GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "paired")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool)
                                                GHC.Generics.:*: GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Base.Just "mapped")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      GHC.Types.Bool)))
                             GHC.Generics.:*: ((GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "fint")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1 GHC.Generics.R [Lib.BedRecord])
                                                GHC.Generics.:*: GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Base.Just "rint")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      [Lib.BedRecord]))
                                               GHC.Generics.:*: (GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Base.Just "pintflag")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R GHC.Types.Bool)
                                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                                    GHC.Generics.S
                                                                                    ('GHC.Generics.MetaSel
                                                                                       ('GHC.Base.Just
                                                                                          "trimdflag")
                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                       'GHC.Generics.DecidedLazy)
                                                                                    (GHC.Generics.K1
                                                                                       GHC.Generics.R
                                                                                       GHC.Types.Bool))))
                            GHC.Generics.:*: (((GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "trimdpos")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R GHC.Integer.Type.Integer)
                                                GHC.Generics.:*: GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Base.Just "trimdendpos")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      GHC.Integer.Type.Integer))
                                               GHC.Generics.:*: (GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Base.Just
                                                                         "headerstrings")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R Lib.Header)
                                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                                    GHC.Generics.S
                                                                                    ('GHC.Generics.MetaSel
                                                                                       ('GHC.Base.Just
                                                                                          "isheader")
                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                       'GHC.Generics.DecidedLazy)
                                                                                    (GHC.Generics.K1
                                                                                       GHC.Generics.R
                                                                                       GHC.Types.Bool)))
                                              GHC.Generics.:*: ((GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Base.Just "mid")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      Data.ByteString.Internal.ByteString)
                                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                                    GHC.Generics.S
                                                                                    ('GHC.Generics.MetaSel
                                                                                       ('GHC.Base.Just
                                                                                          "xmid")
                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                       'GHC.Generics.DecidedLazy)
                                                                                    (GHC.Generics.K1
                                                                                       GHC.Generics.R
                                                                                       Data.ByteString.Internal.ByteString))
                                                                GHC.Generics.:*: (GHC.Generics.M1
                                                                                    GHC.Generics.S
                                                                                    ('GHC.Generics.MetaSel
                                                                                       ('GHC.Base.Just
                                                                                          "tbed")
                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                       'GHC.Generics.DecidedLazy)
                                                                                    (GHC.Generics.K1
                                                                                       GHC.Generics.R
                                                                                       Lib.BedRecord)
                                                                                  GHC.Generics.:*: GHC.Generics.M1
                                                                                                     GHC.Generics.S
                                                                                                     ('GHC.Generics.MetaSel
                                                                                                        ('GHC.Base.Just
                                                                                                           "trimdToZeroLength")
                                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                                        'GHC.Generics.DecidedLazy)
                                                                                                     (GHC.Generics.K1
                                                                                                        GHC.Generics.R
                                                                                                        GHC.Types.Bool))))))
         x
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>m,
     Unfolding: (\ @ x (x1 :: Lib.AlignedRead) ->
                 case x1 of wild { Lib.AlignedRead g1 g2 g3 g4 g5 g6 g7 g8 g9 g10 g11 g12 g13 g14 g15 g16 g17 g18 g19 g20 g21 g22 g23 g24 g25 g26 g27 g28 g29 g30 g31 ->
                 (GHC.Generics.:*:
                    @ *
                    @ (((GHC.Generics.M1
                           GHC.Generics.S
                           ('GHC.Generics.MetaSel
                              ('GHC.Base.Just "qname")
                              'GHC.Generics.NoSourceUnpackedness
                              'GHC.Generics.NoSourceStrictness
                              'GHC.Generics.DecidedLazy)
                           (GHC.Generics.K1
                              GHC.Generics.R Data.ByteString.Internal.ByteString)
                         GHC.Generics.:*: (GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "flag")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                           GHC.Generics.:*: GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "rname")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R Lib.UChr)))
                        GHC.Generics.:*: ((GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "pos")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R GHC.Integer.Type.Integer)
                                           GHC.Generics.:*: GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "endpos")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 GHC.Integer.Type.Integer))
                                          GHC.Generics.:*: (GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "mapqual")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 GHC.Integer.Type.Integer)
                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "cigar")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  Data.ByteString.Internal.ByteString))))
                       GHC.Generics.:*: (((GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "trimdcigar")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R Data.ByteString.Internal.ByteString)
                                           GHC.Generics.:*: GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "cigmap")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R Lib.CigarMap))
                                          GHC.Generics.:*: (GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "trimdcigmap")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R Lib.CigarMap)
                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "rnext")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  Data.ByteString.Internal.ByteString)))
                                         GHC.Generics.:*: ((GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "pnext")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 GHC.Integer.Type.Integer)
                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "tlen")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  GHC.Integer.Type.Integer))
                                                           GHC.Generics.:*: (GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "refseq")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  Data.ByteString.Internal.ByteString)
                                                                             GHC.Generics.:*: GHC.Generics.M1
                                                                                                GHC.Generics.S
                                                                                                ('GHC.Generics.MetaSel
                                                                                                   ('GHC.Base.Just
                                                                                                      "basequal")
                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                (GHC.Generics.K1
                                                                                                   GHC.Generics.R
                                                                                                   Data.ByteString.Internal.ByteString)))))
                    @ ((((GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "optfields")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1
                               GHC.Generics.R Data.ByteString.Internal.ByteString)
                          GHC.Generics.:*: GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "strand")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R Data.ByteString.Internal.ByteString))
                         GHC.Generics.:*: (GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "paired")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool)
                                           GHC.Generics.:*: GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "mapped")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R GHC.Types.Bool)))
                        GHC.Generics.:*: ((GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "fint")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1 GHC.Generics.R [Lib.BedRecord])
                                           GHC.Generics.:*: GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "rint")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R [Lib.BedRecord]))
                                          GHC.Generics.:*: (GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "pintflag")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R GHC.Types.Bool)
                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "trimdflag")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  GHC.Types.Bool))))
                       GHC.Generics.:*: (((GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "trimdpos")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R GHC.Integer.Type.Integer)
                                           GHC.Generics.:*: GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "trimdendpos")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 GHC.Integer.Type.Integer))
                                          GHC.Generics.:*: (GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "headerstrings")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R Lib.Header)
                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "isheader")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  GHC.Types.Bool)))
                                         GHC.Generics.:*: ((GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "mid")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 Data.ByteString.Internal.ByteString)
                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "xmid")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  Data.ByteString.Internal.ByteString))
                                                           GHC.Generics.:*: (GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "tbed")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  Lib.BedRecord)
                                                                             GHC.Generics.:*: GHC.Generics.M1
                                                                                                GHC.Generics.S
                                                                                                ('GHC.Generics.MetaSel
                                                                                                   ('GHC.Base.Just
                                                                                                      "trimdToZeroLength")
                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                (GHC.Generics.K1
                                                                                                   GHC.Generics.R
                                                                                                   GHC.Types.Bool)))))
                    @ x
                    (GHC.Generics.:*:
                       @ *
                       @ ((GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "qname")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString)
                           GHC.Generics.:*: (GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "flag")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                             GHC.Generics.:*: GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "rname")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R Lib.UChr)))
                          GHC.Generics.:*: ((GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "pos")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R GHC.Integer.Type.Integer)
                                             GHC.Generics.:*: GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "endpos")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R
                                                                   GHC.Integer.Type.Integer))
                                            GHC.Generics.:*: (GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "mapqual")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R
                                                                   GHC.Integer.Type.Integer)
                                                              GHC.Generics.:*: GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "cigar")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    Data.ByteString.Internal.ByteString))))
                       @ (((GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "trimdcigar")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1
                                 GHC.Generics.R Data.ByteString.Internal.ByteString)
                            GHC.Generics.:*: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "cigmap")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1 GHC.Generics.R Lib.CigarMap))
                           GHC.Generics.:*: (GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "trimdcigmap")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1 GHC.Generics.R Lib.CigarMap)
                                             GHC.Generics.:*: GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "rnext")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R
                                                                   Data.ByteString.Internal.ByteString)))
                          GHC.Generics.:*: ((GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "pnext")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R GHC.Integer.Type.Integer)
                                             GHC.Generics.:*: GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "tlen")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R
                                                                   GHC.Integer.Type.Integer))
                                            GHC.Generics.:*: (GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "refseq")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R
                                                                   Data.ByteString.Internal.ByteString)
                                                              GHC.Generics.:*: GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "basequal")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    Data.ByteString.Internal.ByteString))))
                       @ x
                       (GHC.Generics.:*:
                          @ *
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "qname")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1
                                  GHC.Generics.R Data.ByteString.Internal.ByteString)
                             GHC.Generics.:*: (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "flag")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "rname")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R Lib.UChr)))
                          @ ((GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "pos")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "endpos")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R GHC.Integer.Type.Integer))
                             GHC.Generics.:*: (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "mapqual")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R GHC.Integer.Type.Integer)
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "cigar")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     Data.ByteString.Internal.ByteString)))
                          @ x
                          (GHC.Generics.:*:
                             @ *
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "qname")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1
                                     GHC.Generics.R Data.ByteString.Internal.ByteString))
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "flag")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "rname")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1 GHC.Generics.R Lib.UChr))
                             @ x
                             g1
                               `cast`
                             (Trans
                                  (Sym (GHC.Generics.N:K1[0]
                                            <*>_N
                                            <GHC.Generics.R>_P
                                            <Data.ByteString.Internal.ByteString>_R
                                            <x>_P))
                                  (Sym (GHC.Generics.N:M1[0]
                                            <*>_N
                                            <GHC.Generics.S>_P
                                            <'GHC.Generics.MetaSel
                                               ('GHC.Base.Just "qname")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy>_P
                                            <GHC.Generics.K1
                                               GHC.Generics.R
                                               Data.ByteString.Internal.ByteString>_R) <x>_N))
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "flag")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "rname")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R Lib.UChr))
                                @ x
                                g2
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N <GHC.Generics.R>_P <GHC.Types.Int>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "flag")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R GHC.Types.Int>_R) <x>_N))
                                g3
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N <GHC.Generics.R>_P <Lib.UChr>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "rname")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R Lib.UChr>_R) <x>_N))))
                          (GHC.Generics.:*:
                             @ *
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "pos")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "endpos")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1
                                                      GHC.Generics.R GHC.Integer.Type.Integer))
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "mapqual")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "cigar")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1
                                                      GHC.Generics.R
                                                      Data.ByteString.Internal.ByteString))
                             @ x
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "pos")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "endpos")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                                @ x
                                g4
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <GHC.Integer.Type.Integer>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "pos")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  GHC.Integer.Type.Integer>_R) <x>_N))
                                g5
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <GHC.Integer.Type.Integer>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "endpos")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  GHC.Integer.Type.Integer>_R) <x>_N)))
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "mapqual")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "cigar")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1
                                        GHC.Generics.R Data.ByteString.Internal.ByteString))
                                @ x
                                g6
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <GHC.Integer.Type.Integer>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "mapqual")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  GHC.Integer.Type.Integer>_R) <x>_N))
                                g7
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <Data.ByteString.Internal.ByteString>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "cigar")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString>_R) <x>_N)))))
                       (GHC.Generics.:*:
                          @ *
                          @ ((GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "trimdcigar")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1
                                   GHC.Generics.R Data.ByteString.Internal.ByteString)
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "cigmap")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R Lib.CigarMap))
                             GHC.Generics.:*: (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "trimdcigmap")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R Lib.CigarMap)
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "rnext")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     Data.ByteString.Internal.ByteString)))
                          @ ((GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "pnext")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "tlen")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R GHC.Integer.Type.Integer))
                             GHC.Generics.:*: (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "refseq")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R
                                                    Data.ByteString.Internal.ByteString)
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "basequal")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     Data.ByteString.Internal.ByteString)))
                          @ x
                          (GHC.Generics.:*:
                             @ *
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "trimdcigar")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1
                                     GHC.Generics.R Data.ByteString.Internal.ByteString)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "cigmap")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1 GHC.Generics.R Lib.CigarMap))
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "trimdcigmap")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1 GHC.Generics.R Lib.CigarMap)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "rnext")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1
                                                      GHC.Generics.R
                                                      Data.ByteString.Internal.ByteString))
                             @ x
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "trimdcigar")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1
                                        GHC.Generics.R Data.ByteString.Internal.ByteString))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "cigmap")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R Lib.CigarMap))
                                @ x
                                g8
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <Data.ByteString.Internal.ByteString>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "trimdcigar")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString>_R) <x>_N))
                                g9
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N <GHC.Generics.R>_P <Lib.CigarMap>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "cigmap")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R Lib.CigarMap>_R) <x>_N)))
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "trimdcigmap")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R Lib.CigarMap))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "rnext")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1
                                        GHC.Generics.R Data.ByteString.Internal.ByteString))
                                @ x
                                g10
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N <GHC.Generics.R>_P <Lib.CigarMap>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "trimdcigmap")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R Lib.CigarMap>_R) <x>_N))
                                g11
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <Data.ByteString.Internal.ByteString>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "rnext")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString>_R) <x>_N))))
                          (GHC.Generics.:*:
                             @ *
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "pnext")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "tlen")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1
                                                      GHC.Generics.R GHC.Integer.Type.Integer))
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "refseq")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1
                                     GHC.Generics.R Data.ByteString.Internal.ByteString)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "basequal")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1
                                                      GHC.Generics.R
                                                      Data.ByteString.Internal.ByteString))
                             @ x
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "pnext")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "tlen")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                                @ x
                                g12
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <GHC.Integer.Type.Integer>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "pnext")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  GHC.Integer.Type.Integer>_R) <x>_N))
                                g13
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <GHC.Integer.Type.Integer>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "tlen")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  GHC.Integer.Type.Integer>_R) <x>_N)))
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "refseq")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1
                                        GHC.Generics.R Data.ByteString.Internal.ByteString))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "basequal")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1
                                        GHC.Generics.R Data.ByteString.Internal.ByteString))
                                @ x
                                g14
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <Data.ByteString.Internal.ByteString>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "refseq")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString>_R) <x>_N))
                                g15
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <Data.ByteString.Internal.ByteString>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "basequal")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString>_R) <x>_N))))))
                    (GHC.Generics.:*:
                       @ *
                       @ (((GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "optfields")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1
                                 GHC.Generics.R Data.ByteString.Internal.ByteString)
                            GHC.Generics.:*: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "strand")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString))
                           GHC.Generics.:*: (GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "paired")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool)
                                             GHC.Generics.:*: GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "mapped")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R GHC.Types.Bool)))
                          GHC.Generics.:*: ((GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "fint")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1 GHC.Generics.R [Lib.BedRecord])
                                             GHC.Generics.:*: GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "rint")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R [Lib.BedRecord]))
                                            GHC.Generics.:*: (GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "pintflag")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R GHC.Types.Bool)
                                                              GHC.Generics.:*: GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "trimdflag")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    GHC.Types.Bool))))
                       @ (((GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "trimdpos")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                            GHC.Generics.:*: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "trimdendpos")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R GHC.Integer.Type.Integer))
                           GHC.Generics.:*: (GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "headerstrings")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1 GHC.Generics.R Lib.Header)
                                             GHC.Generics.:*: GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "isheader")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R GHC.Types.Bool)))
                          GHC.Generics.:*: ((GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "mid")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString)
                                             GHC.Generics.:*: GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "xmid")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R
                                                                   Data.ByteString.Internal.ByteString))
                                            GHC.Generics.:*: (GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "tbed")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R Lib.BedRecord)
                                                              GHC.Generics.:*: GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "trimdToZeroLength")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    GHC.Types.Bool))))
                       @ x
                       (GHC.Generics.:*:
                          @ *
                          @ ((GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "optfields")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1
                                   GHC.Generics.R Data.ByteString.Internal.ByteString)
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "strand")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R
                                                    Data.ByteString.Internal.ByteString))
                             GHC.Generics.:*: (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "paired")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool)
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "mapped")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     GHC.Types.Bool)))
                          @ ((GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "fint")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R [Lib.BedRecord])
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "rint")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R [Lib.BedRecord]))
                             GHC.Generics.:*: (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "pintflag")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool)
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "trimdflag")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     GHC.Types.Bool)))
                          @ x
                          (GHC.Generics.:*:
                             @ *
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "optfields")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1
                                     GHC.Generics.R Data.ByteString.Internal.ByteString)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "strand")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1
                                                      GHC.Generics.R
                                                      Data.ByteString.Internal.ByteString))
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "paired")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "mapped")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool))
                             @ x
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "optfields")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1
                                        GHC.Generics.R Data.ByteString.Internal.ByteString))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "strand")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1
                                        GHC.Generics.R Data.ByteString.Internal.ByteString))
                                @ x
                                g16
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <Data.ByteString.Internal.ByteString>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "optfields")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString>_R) <x>_N))
                                g17
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <Data.ByteString.Internal.ByteString>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "strand")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString>_R) <x>_N)))
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "paired")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "mapped")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool))
                                @ x
                                g18
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N <GHC.Generics.R>_P <GHC.Types.Bool>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "paired")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R GHC.Types.Bool>_R) <x>_N))
                                g19
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N <GHC.Generics.R>_P <GHC.Types.Bool>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "mapped")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R GHC.Types.Bool>_R) <x>_N))))
                          (GHC.Generics.:*:
                             @ *
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "fint")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1 GHC.Generics.R [Lib.BedRecord])
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "rint")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1 GHC.Generics.R [Lib.BedRecord]))
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "pintflag")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "trimdflag")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool))
                             @ x
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "fint")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R [Lib.BedRecord]))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "rint")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R [Lib.BedRecord]))
                                @ x
                                g20
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N <GHC.Generics.R>_P <[Lib.BedRecord]>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "fint")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R [Lib.BedRecord]>_R) <x>_N))
                                g21
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N <GHC.Generics.R>_P <[Lib.BedRecord]>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "rint")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R [Lib.BedRecord]>_R) <x>_N)))
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "pintflag")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "trimdflag")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool))
                                @ x
                                g22
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N <GHC.Generics.R>_P <GHC.Types.Bool>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "pintflag")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R GHC.Types.Bool>_R) <x>_N))
                                g23
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N <GHC.Generics.R>_P <GHC.Types.Bool>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "trimdflag")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R GHC.Types.Bool>_R) <x>_N)))))
                       (GHC.Generics.:*:
                          @ *
                          @ ((GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "trimdpos")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "trimdendpos")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R GHC.Integer.Type.Integer))
                             GHC.Generics.:*: (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "headerstrings")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R Lib.Header)
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "isheader")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     GHC.Types.Bool)))
                          @ ((GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "mid")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1
                                   GHC.Generics.R Data.ByteString.Internal.ByteString)
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "xmid")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R
                                                    Data.ByteString.Internal.ByteString))
                             GHC.Generics.:*: (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "tbed")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R Lib.BedRecord)
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just
                                                                        "trimdToZeroLength")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     GHC.Types.Bool)))
                          @ x
                          (GHC.Generics.:*:
                             @ *
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "trimdpos")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "trimdendpos")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1
                                                      GHC.Generics.R GHC.Integer.Type.Integer))
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "headerstrings")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1 GHC.Generics.R Lib.Header)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "isheader")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool))
                             @ x
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "trimdpos")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "trimdendpos")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                                @ x
                                g24
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <GHC.Integer.Type.Integer>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "trimdpos")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  GHC.Integer.Type.Integer>_R) <x>_N))
                                g25
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <GHC.Integer.Type.Integer>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "trimdendpos")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  GHC.Integer.Type.Integer>_R) <x>_N)))
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "headerstrings")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R Lib.Header))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "isheader")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool))
                                @ x
                                g26
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N <GHC.Generics.R>_P <Lib.Header>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "headerstrings")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R Lib.Header>_R) <x>_N))
                                g27
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N <GHC.Generics.R>_P <GHC.Types.Bool>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "isheader")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R GHC.Types.Bool>_R) <x>_N))))
                          (GHC.Generics.:*:
                             @ *
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "mid")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1
                                     GHC.Generics.R Data.ByteString.Internal.ByteString)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "xmid")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1
                                                      GHC.Generics.R
                                                      Data.ByteString.Internal.ByteString))
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "tbed")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1 GHC.Generics.R Lib.BedRecord)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "trimdToZeroLength")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool))
                             @ x
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "mid")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1
                                        GHC.Generics.R Data.ByteString.Internal.ByteString))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "xmid")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1
                                        GHC.Generics.R Data.ByteString.Internal.ByteString))
                                @ x
                                g28
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <Data.ByteString.Internal.ByteString>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "mid")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString>_R) <x>_N))
                                g29
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <Data.ByteString.Internal.ByteString>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "xmid")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString>_R) <x>_N)))
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "tbed")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R Lib.BedRecord))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "trimdToZeroLength")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool))
                                @ x
                                g30
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N <GHC.Generics.R>_P <Lib.BedRecord>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "tbed")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R Lib.BedRecord>_R) <x>_N))
                                g31
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N <GHC.Generics.R>_P <GHC.Types.Bool>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "trimdToZeroLength")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R GHC.Types.Bool>_R) <x>_N)))))))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <*>_N
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "AlignedRead" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <(((GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Base.Just "qname")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1
                                    GHC.Generics.R Data.ByteString.Internal.ByteString)
                               GHC.Generics.:*: (GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "flag")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       ('GHC.Base.Just "rname")
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R Lib.UChr)))
                              GHC.Generics.:*: ((GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "pos")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1
                                                      GHC.Generics.R GHC.Integer.Type.Integer)
                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       ('GHC.Base.Just "endpos")
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R
                                                                       GHC.Integer.Type.Integer))
                                                GHC.Generics.:*: (GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       ('GHC.Base.Just "mapqual")
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R
                                                                       GHC.Integer.Type.Integer)
                                                                  GHC.Generics.:*: GHC.Generics.M1
                                                                                     GHC.Generics.S
                                                                                     ('GHC.Generics.MetaSel
                                                                                        ('GHC.Base.Just
                                                                                           "cigar")
                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                        'GHC.Generics.DecidedLazy)
                                                                                     (GHC.Generics.K1
                                                                                        GHC.Generics.R
                                                                                        Data.ByteString.Internal.ByteString))))
                             GHC.Generics.:*: (((GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "trimdcigar")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1
                                                      GHC.Generics.R
                                                      Data.ByteString.Internal.ByteString)
                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       ('GHC.Base.Just "cigmap")
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R Lib.CigarMap))
                                                GHC.Generics.:*: (GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       ('GHC.Base.Just
                                                                          "trimdcigmap")
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R Lib.CigarMap)
                                                                  GHC.Generics.:*: GHC.Generics.M1
                                                                                     GHC.Generics.S
                                                                                     ('GHC.Generics.MetaSel
                                                                                        ('GHC.Base.Just
                                                                                           "rnext")
                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                        'GHC.Generics.DecidedLazy)
                                                                                     (GHC.Generics.K1
                                                                                        GHC.Generics.R
                                                                                        Data.ByteString.Internal.ByteString)))
                                               GHC.Generics.:*: ((GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       ('GHC.Base.Just "pnext")
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R
                                                                       GHC.Integer.Type.Integer)
                                                                  GHC.Generics.:*: GHC.Generics.M1
                                                                                     GHC.Generics.S
                                                                                     ('GHC.Generics.MetaSel
                                                                                        ('GHC.Base.Just
                                                                                           "tlen")
                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                        'GHC.Generics.DecidedLazy)
                                                                                     (GHC.Generics.K1
                                                                                        GHC.Generics.R
                                                                                        GHC.Integer.Type.Integer))
                                                                 GHC.Generics.:*: (GHC.Generics.M1
                                                                                     GHC.Generics.S
                                                                                     ('GHC.Generics.MetaSel
                                                                                        ('GHC.Base.Just
                                                                                           "refseq")
                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                        'GHC.Generics.DecidedLazy)
                                                                                     (GHC.Generics.K1
                                                                                        GHC.Generics.R
                                                                                        Data.ByteString.Internal.ByteString)
                                                                                   GHC.Generics.:*: GHC.Generics.M1
                                                                                                      GHC.Generics.S
                                                                                                      ('GHC.Generics.MetaSel
                                                                                                         ('GHC.Base.Just
                                                                                                            "basequal")
                                                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                                                         'GHC.Generics.NoSourceStrictness
                                                                                                         'GHC.Generics.DecidedLazy)
                                                                                                      (GHC.Generics.K1
                                                                                                         GHC.Generics.R
                                                                                                         Data.ByteString.Internal.ByteString)))))
                            GHC.Generics.:*: ((((GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "optfields")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1
                                                      GHC.Generics.R
                                                      Data.ByteString.Internal.ByteString)
                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       ('GHC.Base.Just "strand")
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R
                                                                       Data.ByteString.Internal.ByteString))
                                                GHC.Generics.:*: (GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       ('GHC.Base.Just "paired")
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R
                                                                       GHC.Types.Bool)
                                                                  GHC.Generics.:*: GHC.Generics.M1
                                                                                     GHC.Generics.S
                                                                                     ('GHC.Generics.MetaSel
                                                                                        ('GHC.Base.Just
                                                                                           "mapped")
                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                        'GHC.Generics.DecidedLazy)
                                                                                     (GHC.Generics.K1
                                                                                        GHC.Generics.R
                                                                                        GHC.Types.Bool)))
                                               GHC.Generics.:*: ((GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       ('GHC.Base.Just "fint")
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R
                                                                       [Lib.BedRecord])
                                                                  GHC.Generics.:*: GHC.Generics.M1
                                                                                     GHC.Generics.S
                                                                                     ('GHC.Generics.MetaSel
                                                                                        ('GHC.Base.Just
                                                                                           "rint")
                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                        'GHC.Generics.DecidedLazy)
                                                                                     (GHC.Generics.K1
                                                                                        GHC.Generics.R
                                                                                        [Lib.BedRecord]))
                                                                 GHC.Generics.:*: (GHC.Generics.M1
                                                                                     GHC.Generics.S
                                                                                     ('GHC.Generics.MetaSel
                                                                                        ('GHC.Base.Just
                                                                                           "pintflag")
                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                        'GHC.Generics.DecidedLazy)
                                                                                     (GHC.Generics.K1
                                                                                        GHC.Generics.R
                                                                                        GHC.Types.Bool)
                                                                                   GHC.Generics.:*: GHC.Generics.M1
                                                                                                      GHC.Generics.S
                                                                                                      ('GHC.Generics.MetaSel
                                                                                                         ('GHC.Base.Just
                                                                                                            "trimdflag")
                                                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                                                         'GHC.Generics.NoSourceStrictness
                                                                                                         'GHC.Generics.DecidedLazy)
                                                                                                      (GHC.Generics.K1
                                                                                                         GHC.Generics.R
                                                                                                         GHC.Types.Bool))))
                                              GHC.Generics.:*: (((GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       ('GHC.Base.Just "trimdpos")
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R
                                                                       GHC.Integer.Type.Integer)
                                                                  GHC.Generics.:*: GHC.Generics.M1
                                                                                     GHC.Generics.S
                                                                                     ('GHC.Generics.MetaSel
                                                                                        ('GHC.Base.Just
                                                                                           "trimdendpos")
                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                        'GHC.Generics.DecidedLazy)
                                                                                     (GHC.Generics.K1
                                                                                        GHC.Generics.R
                                                                                        GHC.Integer.Type.Integer))
                                                                 GHC.Generics.:*: (GHC.Generics.M1
                                                                                     GHC.Generics.S
                                                                                     ('GHC.Generics.MetaSel
                                                                                        ('GHC.Base.Just
                                                                                           "headerstrings")
                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                        'GHC.Generics.DecidedLazy)
                                                                                     (GHC.Generics.K1
                                                                                        GHC.Generics.R
                                                                                        Lib.Header)
                                                                                   GHC.Generics.:*: GHC.Generics.M1
                                                                                                      GHC.Generics.S
                                                                                                      ('GHC.Generics.MetaSel
                                                                                                         ('GHC.Base.Just
                                                                                                            "isheader")
                                                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                                                         'GHC.Generics.NoSourceStrictness
                                                                                                         'GHC.Generics.DecidedLazy)
                                                                                                      (GHC.Generics.K1
                                                                                                         GHC.Generics.R
                                                                                                         GHC.Types.Bool)))
                                                                GHC.Generics.:*: ((GHC.Generics.M1
                                                                                     GHC.Generics.S
                                                                                     ('GHC.Generics.MetaSel
                                                                                        ('GHC.Base.Just
                                                                                           "mid")
                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                        'GHC.Generics.DecidedLazy)
                                                                                     (GHC.Generics.K1
                                                                                        GHC.Generics.R
                                                                                        Data.ByteString.Internal.ByteString)
                                                                                   GHC.Generics.:*: GHC.Generics.M1
                                                                                                      GHC.Generics.S
                                                                                                      ('GHC.Generics.MetaSel
                                                                                                         ('GHC.Base.Just
                                                                                                            "xmid")
                                                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                                                         'GHC.Generics.NoSourceStrictness
                                                                                                         'GHC.Generics.DecidedLazy)
                                                                                                      (GHC.Generics.K1
                                                                                                         GHC.Generics.R
                                                                                                         Data.ByteString.Internal.ByteString))
                                                                                  GHC.Generics.:*: (GHC.Generics.M1
                                                                                                      GHC.Generics.S
                                                                                                      ('GHC.Generics.MetaSel
                                                                                                         ('GHC.Base.Just
                                                                                                            "tbed")
                                                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                                                         'GHC.Generics.NoSourceStrictness
                                                                                                         'GHC.Generics.DecidedLazy)
                                                                                                      (GHC.Generics.K1
                                                                                                         GHC.Generics.R
                                                                                                         Lib.BedRecord)
                                                                                                    GHC.Generics.:*: GHC.Generics.M1
                                                                                                                       GHC.Generics.S
                                                                                                                       ('GHC.Generics.MetaSel
                                                                                                                          ('GHC.Base.Just
                                                                                                                             "trimdToZeroLength")
                                                                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                                                                          'GHC.Generics.NoSourceStrictness
                                                                                                                          'GHC.Generics.DecidedLazy)
                                                                                                                       (GHC.Generics.K1
                                                                                                                          GHC.Generics.R
                                                                                                                          GHC.Types.Bool)))))>_R) <x>_N) }) -}
21071c975426d6ea93962a8c0a55430b
  $fGenericAlignedRead_$cto ::
    GHC.Generics.Rep Lib.AlignedRead x -> Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(S(S(S(LS)S(SS))S(S(SS)S(SS)))S(S(S(SS)S(SS))S(S(SS)S(SS)))),1*U(1*U(1*U(1*U(U,1*U(U,U)),1*U(1*U(U,U),1*U(U,U))),1*U(1*U(1*U(U,U),1*U(U,U)),1*U(1*U(U,U),1*U(U,U)))),1*U(1*U(1*U(1*U(U,U),1*U(U,U)),1*U(1*U(U,U),1*U(U,U))),1*U(1*U(1*U(U,U),1*U(U,U)),1*U(1*U(U,U),1*U(U,U)))))>,
     Unfolding: (\ @ x (ds6 :: GHC.Generics.Rep Lib.AlignedRead x) ->
                 case ds6
                        `cast`
                      (Trans
                           (Sub (Lib.Rep_AlignedRead[0]))
                           (Trans
                                (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.D>_P
                                     <'GHC.Generics.MetaData
                                        "AlignedRead"
                                        "Lib"
                                        "primerclip-0.3.3.0-GfuurxY2OUOHPk7lKZLXUc"
                                        'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "AlignedRead" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                        ((((GHC.Generics.M1
                                              GHC.Generics.S
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "qname")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.K1
                                                 GHC.Generics.R Data.ByteString.Internal.ByteString)
                                            GHC.Generics.:*: (GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "flag")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R GHC.Types.Int)
                                                              GHC.Generics.:*: GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "rname")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    Lib.UChr)))
                                           GHC.Generics.:*: ((GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "pos")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R
                                                                   GHC.Integer.Type.Integer)
                                                              GHC.Generics.:*: GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "endpos")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    GHC.Integer.Type.Integer))
                                                             GHC.Generics.:*: (GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "mapqual")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    GHC.Integer.Type.Integer)
                                                                               GHC.Generics.:*: GHC.Generics.M1
                                                                                                  GHC.Generics.S
                                                                                                  ('GHC.Generics.MetaSel
                                                                                                     ('GHC.Base.Just
                                                                                                        "cigar")
                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                  (GHC.Generics.K1
                                                                                                     GHC.Generics.R
                                                                                                     Data.ByteString.Internal.ByteString))))
                                          GHC.Generics.:*: (((GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "trimdcigar")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R
                                                                   Data.ByteString.Internal.ByteString)
                                                              GHC.Generics.:*: GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "cigmap")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    Lib.CigarMap))
                                                             GHC.Generics.:*: (GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "trimdcigmap")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    Lib.CigarMap)
                                                                               GHC.Generics.:*: GHC.Generics.M1
                                                                                                  GHC.Generics.S
                                                                                                  ('GHC.Generics.MetaSel
                                                                                                     ('GHC.Base.Just
                                                                                                        "rnext")
                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                  (GHC.Generics.K1
                                                                                                     GHC.Generics.R
                                                                                                     Data.ByteString.Internal.ByteString)))
                                                            GHC.Generics.:*: ((GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "pnext")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    GHC.Integer.Type.Integer)
                                                                               GHC.Generics.:*: GHC.Generics.M1
                                                                                                  GHC.Generics.S
                                                                                                  ('GHC.Generics.MetaSel
                                                                                                     ('GHC.Base.Just
                                                                                                        "tlen")
                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                  (GHC.Generics.K1
                                                                                                     GHC.Generics.R
                                                                                                     GHC.Integer.Type.Integer))
                                                                              GHC.Generics.:*: (GHC.Generics.M1
                                                                                                  GHC.Generics.S
                                                                                                  ('GHC.Generics.MetaSel
                                                                                                     ('GHC.Base.Just
                                                                                                        "refseq")
                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                  (GHC.Generics.K1
                                                                                                     GHC.Generics.R
                                                                                                     Data.ByteString.Internal.ByteString)
                                                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                                                   GHC.Generics.S
                                                                                                                   ('GHC.Generics.MetaSel
                                                                                                                      ('GHC.Base.Just
                                                                                                                         "basequal")
                                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                                   (GHC.Generics.K1
                                                                                                                      GHC.Generics.R
                                                                                                                      Data.ByteString.Internal.ByteString)))))
                                         GHC.Generics.:*: ((((GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "optfields")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R
                                                                   Data.ByteString.Internal.ByteString)
                                                              GHC.Generics.:*: GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "strand")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    Data.ByteString.Internal.ByteString))
                                                             GHC.Generics.:*: (GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "paired")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    GHC.Types.Bool)
                                                                               GHC.Generics.:*: GHC.Generics.M1
                                                                                                  GHC.Generics.S
                                                                                                  ('GHC.Generics.MetaSel
                                                                                                     ('GHC.Base.Just
                                                                                                        "mapped")
                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                  (GHC.Generics.K1
                                                                                                     GHC.Generics.R
                                                                                                     GHC.Types.Bool)))
                                                            GHC.Generics.:*: ((GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "fint")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    [Lib.BedRecord])
                                                                               GHC.Generics.:*: GHC.Generics.M1
                                                                                                  GHC.Generics.S
                                                                                                  ('GHC.Generics.MetaSel
                                                                                                     ('GHC.Base.Just
                                                                                                        "rint")
                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                  (GHC.Generics.K1
                                                                                                     GHC.Generics.R
                                                                                                     [Lib.BedRecord]))
                                                                              GHC.Generics.:*: (GHC.Generics.M1
                                                                                                  GHC.Generics.S
                                                                                                  ('GHC.Generics.MetaSel
                                                                                                     ('GHC.Base.Just
                                                                                                        "pintflag")
                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                  (GHC.Generics.K1
                                                                                                     GHC.Generics.R
                                                                                                     GHC.Types.Bool)
                                                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                                                   GHC.Generics.S
                                                                                                                   ('GHC.Generics.MetaSel
                                                                                                                      ('GHC.Base.Just
                                                                                                                         "trimdflag")
                                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                                   (GHC.Generics.K1
                                                                                                                      GHC.Generics.R
                                                                                                                      GHC.Types.Bool))))
                                                           GHC.Generics.:*: (((GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "trimdpos")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    GHC.Integer.Type.Integer)
                                                                               GHC.Generics.:*: GHC.Generics.M1
                                                                                                  GHC.Generics.S
                                                                                                  ('GHC.Generics.MetaSel
                                                                                                     ('GHC.Base.Just
                                                                                                        "trimdendpos")
                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                  (GHC.Generics.K1
                                                                                                     GHC.Generics.R
                                                                                                     GHC.Integer.Type.Integer))
                                                                              GHC.Generics.:*: (GHC.Generics.M1
                                                                                                  GHC.Generics.S
                                                                                                  ('GHC.Generics.MetaSel
                                                                                                     ('GHC.Base.Just
                                                                                                        "headerstrings")
                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                  (GHC.Generics.K1
                                                                                                     GHC.Generics.R
                                                                                                     Lib.Header)
                                                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                                                   GHC.Generics.S
                                                                                                                   ('GHC.Generics.MetaSel
                                                                                                                      ('GHC.Base.Just
                                                                                                                         "isheader")
                                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                                   (GHC.Generics.K1
                                                                                                                      GHC.Generics.R
                                                                                                                      GHC.Types.Bool)))
                                                                             GHC.Generics.:*: ((GHC.Generics.M1
                                                                                                  GHC.Generics.S
                                                                                                  ('GHC.Generics.MetaSel
                                                                                                     ('GHC.Base.Just
                                                                                                        "mid")
                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                  (GHC.Generics.K1
                                                                                                     GHC.Generics.R
                                                                                                     Data.ByteString.Internal.ByteString)
                                                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                                                   GHC.Generics.S
                                                                                                                   ('GHC.Generics.MetaSel
                                                                                                                      ('GHC.Base.Just
                                                                                                                         "xmid")
                                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                                   (GHC.Generics.K1
                                                                                                                      GHC.Generics.R
                                                                                                                      Data.ByteString.Internal.ByteString))
                                                                                               GHC.Generics.:*: (GHC.Generics.M1
                                                                                                                   GHC.Generics.S
                                                                                                                   ('GHC.Generics.MetaSel
                                                                                                                      ('GHC.Base.Just
                                                                                                                         "tbed")
                                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                                   (GHC.Generics.K1
                                                                                                                      GHC.Generics.R
                                                                                                                      Lib.BedRecord)
                                                                                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                    GHC.Generics.S
                                                                                                                                    ('GHC.Generics.MetaSel
                                                                                                                                       ('GHC.Base.Just
                                                                                                                                          "trimdToZeroLength")
                                                                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                                                                       'GHC.Generics.DecidedLazy)
                                                                                                                                    (GHC.Generics.K1
                                                                                                                                       GHC.Generics.R
                                                                                                                                       GHC.Types.Bool))))))>_R)
                                (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "AlignedRead" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <(((GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "qname")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1
                                              GHC.Generics.R Data.ByteString.Internal.ByteString)
                                         GHC.Generics.:*: (GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "flag")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R GHC.Types.Int)
                                                           GHC.Generics.:*: GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "rname")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 Lib.UChr)))
                                        GHC.Generics.:*: ((GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "pos")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R
                                                                GHC.Integer.Type.Integer)
                                                           GHC.Generics.:*: GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "endpos")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 GHC.Integer.Type.Integer))
                                                          GHC.Generics.:*: (GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "mapqual")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 GHC.Integer.Type.Integer)
                                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                                               GHC.Generics.S
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Base.Just
                                                                                                     "cigar")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.K1
                                                                                                  GHC.Generics.R
                                                                                                  Data.ByteString.Internal.ByteString))))
                                       GHC.Generics.:*: (((GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "trimdcigar")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R
                                                                Data.ByteString.Internal.ByteString)
                                                           GHC.Generics.:*: GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "cigmap")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 Lib.CigarMap))
                                                          GHC.Generics.:*: (GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "trimdcigmap")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 Lib.CigarMap)
                                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                                               GHC.Generics.S
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Base.Just
                                                                                                     "rnext")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.K1
                                                                                                  GHC.Generics.R
                                                                                                  Data.ByteString.Internal.ByteString)))
                                                         GHC.Generics.:*: ((GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "pnext")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 GHC.Integer.Type.Integer)
                                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                                               GHC.Generics.S
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Base.Just
                                                                                                     "tlen")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.K1
                                                                                                  GHC.Generics.R
                                                                                                  GHC.Integer.Type.Integer))
                                                                           GHC.Generics.:*: (GHC.Generics.M1
                                                                                               GHC.Generics.S
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Base.Just
                                                                                                     "refseq")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.K1
                                                                                                  GHC.Generics.R
                                                                                                  Data.ByteString.Internal.ByteString)
                                                                                             GHC.Generics.:*: GHC.Generics.M1
                                                                                                                GHC.Generics.S
                                                                                                                ('GHC.Generics.MetaSel
                                                                                                                   ('GHC.Base.Just
                                                                                                                      "basequal")
                                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                                (GHC.Generics.K1
                                                                                                                   GHC.Generics.R
                                                                                                                   Data.ByteString.Internal.ByteString)))))
                                      GHC.Generics.:*: ((((GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "optfields")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R
                                                                Data.ByteString.Internal.ByteString)
                                                           GHC.Generics.:*: GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "strand")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 Data.ByteString.Internal.ByteString))
                                                          GHC.Generics.:*: (GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "paired")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 GHC.Types.Bool)
                                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                                               GHC.Generics.S
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Base.Just
                                                                                                     "mapped")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.K1
                                                                                                  GHC.Generics.R
                                                                                                  GHC.Types.Bool)))
                                                         GHC.Generics.:*: ((GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "fint")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 [Lib.BedRecord])
                                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                                               GHC.Generics.S
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Base.Just
                                                                                                     "rint")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.K1
                                                                                                  GHC.Generics.R
                                                                                                  [Lib.BedRecord]))
                                                                           GHC.Generics.:*: (GHC.Generics.M1
                                                                                               GHC.Generics.S
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Base.Just
                                                                                                     "pintflag")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.K1
                                                                                                  GHC.Generics.R
                                                                                                  GHC.Types.Bool)
                                                                                             GHC.Generics.:*: GHC.Generics.M1
                                                                                                                GHC.Generics.S
                                                                                                                ('GHC.Generics.MetaSel
                                                                                                                   ('GHC.Base.Just
                                                                                                                      "trimdflag")
                                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                                (GHC.Generics.K1
                                                                                                                   GHC.Generics.R
                                                                                                                   GHC.Types.Bool))))
                                                        GHC.Generics.:*: (((GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "trimdpos")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 GHC.Integer.Type.Integer)
                                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                                               GHC.Generics.S
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Base.Just
                                                                                                     "trimdendpos")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.K1
                                                                                                  GHC.Generics.R
                                                                                                  GHC.Integer.Type.Integer))
                                                                           GHC.Generics.:*: (GHC.Generics.M1
                                                                                               GHC.Generics.S
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Base.Just
                                                                                                     "headerstrings")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.K1
                                                                                                  GHC.Generics.R
                                                                                                  Lib.Header)
                                                                                             GHC.Generics.:*: GHC.Generics.M1
                                                                                                                GHC.Generics.S
                                                                                                                ('GHC.Generics.MetaSel
                                                                                                                   ('GHC.Base.Just
                                                                                                                      "isheader")
                                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                                (GHC.Generics.K1
                                                                                                                   GHC.Generics.R
                                                                                                                   GHC.Types.Bool)))
                                                                          GHC.Generics.:*: ((GHC.Generics.M1
                                                                                               GHC.Generics.S
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Base.Just
                                                                                                     "mid")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.K1
                                                                                                  GHC.Generics.R
                                                                                                  Data.ByteString.Internal.ByteString)
                                                                                             GHC.Generics.:*: GHC.Generics.M1
                                                                                                                GHC.Generics.S
                                                                                                                ('GHC.Generics.MetaSel
                                                                                                                   ('GHC.Base.Just
                                                                                                                      "xmid")
                                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                                (GHC.Generics.K1
                                                                                                                   GHC.Generics.R
                                                                                                                   Data.ByteString.Internal.ByteString))
                                                                                            GHC.Generics.:*: (GHC.Generics.M1
                                                                                                                GHC.Generics.S
                                                                                                                ('GHC.Generics.MetaSel
                                                                                                                   ('GHC.Base.Just
                                                                                                                      "tbed")
                                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                                (GHC.Generics.K1
                                                                                                                   GHC.Generics.R
                                                                                                                   Lib.BedRecord)
                                                                                                              GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                 GHC.Generics.S
                                                                                                                                 ('GHC.Generics.MetaSel
                                                                                                                                    ('GHC.Base.Just
                                                                                                                                       "trimdToZeroLength")
                                                                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                                                                    'GHC.Generics.DecidedLazy)
                                                                                                                                 (GHC.Generics.K1
                                                                                                                                    GHC.Generics.R
                                                                                                                                    GHC.Types.Bool)))))>_R)) <x>_N) of wild { GHC.Generics.:*: ds7 ds8 ->
                 case ds7 of wild1 { GHC.Generics.:*: ds9 ds10 ->
                 case ds9 of wild2 { GHC.Generics.:*: ds11 ds12 ->
                 case ds11 of wild3 { GHC.Generics.:*: ds13 ds14 ->
                 case ds14 of wild4 { GHC.Generics.:*: ds15 ds16 ->
                 case ds12 of wild5 { GHC.Generics.:*: ds17 ds18 ->
                 case ds17 of wild6 { GHC.Generics.:*: ds19 ds20 ->
                 case ds18 of wild7 { GHC.Generics.:*: ds21 ds22 ->
                 case ds10 of wild8 { GHC.Generics.:*: ds23 ds24 ->
                 case ds23 of wild9 { GHC.Generics.:*: ds25 ds26 ->
                 case ds25 of wild10 { GHC.Generics.:*: ds27 ds28 ->
                 case ds26 of wild11 { GHC.Generics.:*: ds29 ds30 ->
                 case ds24 of wild12 { GHC.Generics.:*: ds31 ds32 ->
                 case ds31 of wild13 { GHC.Generics.:*: ds33 ds34 ->
                 case ds32 of wild14 { GHC.Generics.:*: ds35 ds36 ->
                 case ds8 of wild15 { GHC.Generics.:*: ds37 ds38 ->
                 case ds37 of wild16 { GHC.Generics.:*: ds39 ds40 ->
                 case ds39 of wild17 { GHC.Generics.:*: ds41 ds42 ->
                 case ds41 of wild18 { GHC.Generics.:*: ds43 ds44 ->
                 case ds42 of wild19 { GHC.Generics.:*: ds45 ds46 ->
                 case ds40 of wild20 { GHC.Generics.:*: ds47 ds48 ->
                 case ds47 of wild21 { GHC.Generics.:*: ds49 ds50 ->
                 case ds48 of wild22 { GHC.Generics.:*: ds51 ds52 ->
                 case ds38 of wild23 { GHC.Generics.:*: ds53 ds54 ->
                 case ds53 of wild24 { GHC.Generics.:*: ds55 ds56 ->
                 case ds55 of wild25 { GHC.Generics.:*: ds57 ds58 ->
                 case ds56 of wild26 { GHC.Generics.:*: ds59 ds60 ->
                 case ds54 of wild27 { GHC.Generics.:*: ds61 ds62 ->
                 case ds61 of wild28 { GHC.Generics.:*: ds63 ds64 ->
                 case ds62 of wild29 { GHC.Generics.:*: ds65 ds66 ->
                 Lib.AlignedRead
                   ds13
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "qname")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N
                             <GHC.Generics.R>_P
                             <Data.ByteString.Internal.ByteString>_R
                             <x>_P))
                   ds15
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "flag")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Types.Int>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Types.Int>_R <x>_P))
                   ds16
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "rname")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R Lib.UChr>_R <x>_N)
                        (GHC.Generics.N:K1[0] <*>_N <GHC.Generics.R>_P <Lib.UChr>_R <x>_P))
                   ds19
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "pos")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ds20
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "endpos")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ds21
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "mapqual")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ds22
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "cigar")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N
                             <GHC.Generics.R>_P
                             <Data.ByteString.Internal.ByteString>_R
                             <x>_P))
                   ds27
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "trimdcigar")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N
                             <GHC.Generics.R>_P
                             <Data.ByteString.Internal.ByteString>_R
                             <x>_P))
                   ds28
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "cigmap")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R Lib.CigarMap>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <Lib.CigarMap>_R <x>_P))
                   ds29
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "trimdcigmap")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R Lib.CigarMap>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <Lib.CigarMap>_R <x>_P))
                   ds30
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "rnext")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N
                             <GHC.Generics.R>_P
                             <Data.ByteString.Internal.ByteString>_R
                             <x>_P))
                   ds33
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "pnext")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ds34
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "tlen")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ds35
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "refseq")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N
                             <GHC.Generics.R>_P
                             <Data.ByteString.Internal.ByteString>_R
                             <x>_P))
                   ds36
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "basequal")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N
                             <GHC.Generics.R>_P
                             <Data.ByteString.Internal.ByteString>_R
                             <x>_P))
                   ds43
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "optfields")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N
                             <GHC.Generics.R>_P
                             <Data.ByteString.Internal.ByteString>_R
                             <x>_P))
                   ds44
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "strand")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N
                             <GHC.Generics.R>_P
                             <Data.ByteString.Internal.ByteString>_R
                             <x>_P))
                   ds45
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "paired")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Types.Bool>_R <x>_P))
                   ds46
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "mapped")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Types.Bool>_R <x>_P))
                   ds49
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "fint")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R [Lib.BedRecord]>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <[Lib.BedRecord]>_R <x>_P))
                   ds50
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "rint")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R [Lib.BedRecord]>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <[Lib.BedRecord]>_R <x>_P))
                   ds51
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "pintflag")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Types.Bool>_R <x>_P))
                   ds52
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "trimdflag")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Types.Bool>_R <x>_P))
                   ds57
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "trimdpos")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ds58
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "trimdendpos")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ds59
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "headerstrings")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R Lib.Header>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <Lib.Header>_R <x>_P))
                   ds60
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "isheader")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Types.Bool>_R <x>_P))
                   ds63
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "mid")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N
                             <GHC.Generics.R>_P
                             <Data.ByteString.Internal.ByteString>_R
                             <x>_P))
                   ds64
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "xmid")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N
                             <GHC.Generics.R>_P
                             <Data.ByteString.Internal.ByteString>_R
                             <x>_P))
                   ds65
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "tbed")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R Lib.BedRecord>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <Lib.BedRecord>_R <x>_P))
                   ds66
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "trimdToZeroLength")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N
                             <GHC.Generics.R>_P
                             <GHC.Types.Bool>_R
                             <x>_P)) } } } } } } } } } } } } } } } } } } } } } } } } } } } } } }) -}
9bef29ed1835da52d687e9f588f6f1bf
  $fGenericBEDPE :: GHC.Generics.Generic Lib.BEDPE
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.BEDPE
                  Lib.$fGenericBEDPE1
                    `cast`
                  (forall (x :: <*>_N).
                   <Lib.BEDPE>_R
                   ->_R Trans
                            (Sym (GHC.Generics.N:M1[0]
                                      <*>_N
                                      <GHC.Generics.D>_P
                                      <'GHC.Generics.MetaData
                                         "BEDPE"
                                         "Lib"
                                         "primerclip-0.3.3.0-GfuurxY2OUOHPk7lKZLXUc"
                                         'GHC.Types.False>_P
                                      <GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "BEDPE" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                         ((GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "chr1")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                                           GHC.Generics.:*: (GHC.Generics.M1
                                                               GHC.Generics.S
                                                               ('GHC.Generics.MetaSel
                                                                  ('GHC.Base.Just "start1")
                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                  'GHC.Generics.NoSourceStrictness
                                                                  'GHC.Generics.DecidedLazy)
                                                               (GHC.Generics.K1
                                                                  GHC.Generics.R
                                                                  GHC.Integer.Type.Integer)
                                                             GHC.Generics.:*: GHC.Generics.M1
                                                                                GHC.Generics.S
                                                                                ('GHC.Generics.MetaSel
                                                                                   ('GHC.Base.Just
                                                                                      "end1")
                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                   'GHC.Generics.DecidedLazy)
                                                                                (GHC.Generics.K1
                                                                                   GHC.Generics.R
                                                                                   GHC.Integer.Type.Integer)))
                                          GHC.Generics.:*: ((GHC.Generics.M1
                                                               GHC.Generics.S
                                                               ('GHC.Generics.MetaSel
                                                                  ('GHC.Base.Just "chr2")
                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                  'GHC.Generics.NoSourceStrictness
                                                                  'GHC.Generics.DecidedLazy)
                                                               (GHC.Generics.K1
                                                                  GHC.Generics.R Lib.UChr)
                                                             GHC.Generics.:*: GHC.Generics.M1
                                                                                GHC.Generics.S
                                                                                ('GHC.Generics.MetaSel
                                                                                   ('GHC.Base.Just
                                                                                      "start2")
                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                   'GHC.Generics.DecidedLazy)
                                                                                (GHC.Generics.K1
                                                                                   GHC.Generics.R
                                                                                   GHC.Integer.Type.Integer))
                                                            GHC.Generics.:*: (GHC.Generics.M1
                                                                                GHC.Generics.S
                                                                                ('GHC.Generics.MetaSel
                                                                                   ('GHC.Base.Just
                                                                                      "end2")
                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                   'GHC.Generics.DecidedLazy)
                                                                                (GHC.Generics.K1
                                                                                   GHC.Generics.R
                                                                                   GHC.Integer.Type.Integer)
                                                                              GHC.Generics.:*: GHC.Generics.M1
                                                                                                 GHC.Generics.S
                                                                                                 ('GHC.Generics.MetaSel
                                                                                                    ('GHC.Base.Just
                                                                                                       "bedpename")
                                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                                    'GHC.Generics.DecidedLazy)
                                                                                                 (GHC.Generics.K1
                                                                                                    GHC.Generics.R
                                                                                                    Data.ByteString.Internal.ByteString))))>_R))
                            (Sub (Sym (Lib.Rep_BEDPE[0]))) <x>_N)
                  Lib.$fGenericBEDPE_$cto -}
9bef29ed1835da52d687e9f588f6f1bf
  $fGenericBEDPE1 ::
    Lib.BEDPE
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "BEDPE" 'GHC.Generics.PrefixI 'GHC.Types.True)
         ((GHC.Generics.M1
             GHC.Generics.S
             ('GHC.Generics.MetaSel
                ('GHC.Base.Just "chr1")
                'GHC.Generics.NoSourceUnpackedness
                'GHC.Generics.NoSourceStrictness
                'GHC.Generics.DecidedLazy)
             (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
           GHC.Generics.:*: (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "start1")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                             GHC.Generics.:*: GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "end1")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R GHC.Integer.Type.Integer)))
          GHC.Generics.:*: ((GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "chr2")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                             GHC.Generics.:*: GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "start2")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R GHC.Integer.Type.Integer))
                            GHC.Generics.:*: (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "end2")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R GHC.Integer.Type.Integer)
                                              GHC.Generics.:*: GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Base.Just "bedpename")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    Data.ByteString.Internal.ByteString))))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U,U,U,U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: Lib.BEDPE) ->
                 case x1 of wild { Lib.BEDPE g1 g2 g3 g4 g5 g6 g7 ->
                 (GHC.Generics.:*:
                    @ *
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "chr1")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                       GHC.Generics.:*: (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "start1")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "end1")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R
                                                               GHC.Integer.Type.Integer)))
                    @ ((GHC.Generics.M1
                          GHC.Generics.S
                          ('GHC.Generics.MetaSel
                             ('GHC.Base.Just "chr2")
                             'GHC.Generics.NoSourceUnpackedness
                             'GHC.Generics.NoSourceStrictness
                             'GHC.Generics.DecidedLazy)
                          (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                        GHC.Generics.:*: GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "start2")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1
                                              GHC.Generics.R GHC.Integer.Type.Integer))
                       GHC.Generics.:*: (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "end2")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "bedpename")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R
                                                               Data.ByteString.Internal.ByteString)))
                    @ x
                    (GHC.Generics.:*:
                       @ *
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "chr1")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R Lib.UChr))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "start1")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                          GHC.Generics.:*: GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "end1")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R GHC.Integer.Type.Integer))
                       @ x
                       g1
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <*>_N <GHC.Generics.R>_P <Lib.UChr>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <*>_N
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "chr1")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1 GHC.Generics.R Lib.UChr>_R) <x>_N))
                       (GHC.Generics.:*:
                          @ *
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "start1")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "end1")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                          @ x
                          g2
                            `cast`
                          (Trans
                               (Sym (GHC.Generics.N:K1[0]
                                         <*>_N
                                         <GHC.Generics.R>_P
                                         <GHC.Integer.Type.Integer>_R
                                         <x>_P))
                               (Sym (GHC.Generics.N:M1[0]
                                         <*>_N
                                         <GHC.Generics.S>_P
                                         <'GHC.Generics.MetaSel
                                            ('GHC.Base.Just "start1")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy>_P
                                         <GHC.Generics.K1
                                            GHC.Generics.R GHC.Integer.Type.Integer>_R) <x>_N))
                          g3
                            `cast`
                          (Trans
                               (Sym (GHC.Generics.N:K1[0]
                                         <*>_N
                                         <GHC.Generics.R>_P
                                         <GHC.Integer.Type.Integer>_R
                                         <x>_P))
                               (Sym (GHC.Generics.N:M1[0]
                                         <*>_N
                                         <GHC.Generics.S>_P
                                         <'GHC.Generics.MetaSel
                                            ('GHC.Base.Just "end1")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy>_P
                                         <GHC.Generics.K1
                                            GHC.Generics.R GHC.Integer.Type.Integer>_R) <x>_N))))
                    (GHC.Generics.:*:
                       @ *
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "chr2")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                          GHC.Generics.:*: GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "start2")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R GHC.Integer.Type.Integer))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "end2")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                          GHC.Generics.:*: GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "bedpename")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R Data.ByteString.Internal.ByteString))
                       @ x
                       (GHC.Generics.:*:
                          @ *
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "chr2")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R Lib.UChr))
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "start2")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                          @ x
                          g4
                            `cast`
                          (Trans
                               (Sym (GHC.Generics.N:K1[0]
                                         <*>_N <GHC.Generics.R>_P <Lib.UChr>_R <x>_P))
                               (Sym (GHC.Generics.N:M1[0]
                                         <*>_N
                                         <GHC.Generics.S>_P
                                         <'GHC.Generics.MetaSel
                                            ('GHC.Base.Just "chr2")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy>_P
                                         <GHC.Generics.K1 GHC.Generics.R Lib.UChr>_R) <x>_N))
                          g5
                            `cast`
                          (Trans
                               (Sym (GHC.Generics.N:K1[0]
                                         <*>_N
                                         <GHC.Generics.R>_P
                                         <GHC.Integer.Type.Integer>_R
                                         <x>_P))
                               (Sym (GHC.Generics.N:M1[0]
                                         <*>_N
                                         <GHC.Generics.S>_P
                                         <'GHC.Generics.MetaSel
                                            ('GHC.Base.Just "start2")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy>_P
                                         <GHC.Generics.K1
                                            GHC.Generics.R GHC.Integer.Type.Integer>_R) <x>_N)))
                       (GHC.Generics.:*:
                          @ *
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "end2")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "bedpename")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1
                                  GHC.Generics.R Data.ByteString.Internal.ByteString))
                          @ x
                          g6
                            `cast`
                          (Trans
                               (Sym (GHC.Generics.N:K1[0]
                                         <*>_N
                                         <GHC.Generics.R>_P
                                         <GHC.Integer.Type.Integer>_R
                                         <x>_P))
                               (Sym (GHC.Generics.N:M1[0]
                                         <*>_N
                                         <GHC.Generics.S>_P
                                         <'GHC.Generics.MetaSel
                                            ('GHC.Base.Just "end2")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy>_P
                                         <GHC.Generics.K1
                                            GHC.Generics.R GHC.Integer.Type.Integer>_R) <x>_N))
                          g7
                            `cast`
                          (Trans
                               (Sym (GHC.Generics.N:K1[0]
                                         <*>_N
                                         <GHC.Generics.R>_P
                                         <Data.ByteString.Internal.ByteString>_R
                                         <x>_P))
                               (Sym (GHC.Generics.N:M1[0]
                                         <*>_N
                                         <GHC.Generics.S>_P
                                         <'GHC.Generics.MetaSel
                                            ('GHC.Base.Just "bedpename")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy>_P
                                         <GHC.Generics.K1
                                            GHC.Generics.R
                                            Data.ByteString.Internal.ByteString>_R) <x>_N)))))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <*>_N
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "BEDPE" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <(GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "chr1")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                             GHC.Generics.:*: (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "start1")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R GHC.Integer.Type.Integer)
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "end1")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     GHC.Integer.Type.Integer)))
                            GHC.Generics.:*: ((GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "chr2")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "start2")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     GHC.Integer.Type.Integer))
                                              GHC.Generics.:*: (GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "end2")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     GHC.Integer.Type.Integer)
                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                   GHC.Generics.S
                                                                                   ('GHC.Generics.MetaSel
                                                                                      ('GHC.Base.Just
                                                                                         "bedpename")
                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                      'GHC.Generics.DecidedLazy)
                                                                                   (GHC.Generics.K1
                                                                                      GHC.Generics.R
                                                                                      Data.ByteString.Internal.ByteString)))>_R) <x>_N) }) -}
9bef29ed1835da52d687e9f588f6f1bf
  $fGenericBEDPE_$cto :: GHC.Generics.Rep Lib.BEDPE x -> Lib.BEDPE
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(S(LS)S(SS)),1*U(1*U(U,1*U(U,U)),1*U(1*U(U,U),1*U(U,U)))>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (ds6 :: GHC.Generics.Rep Lib.BEDPE x) ->
                 case ds6
                        `cast`
                      (Trans
                           (Sub (Lib.Rep_BEDPE[0]))
                           (Trans
                                (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.D>_P
                                     <'GHC.Generics.MetaData
                                        "BEDPE"
                                        "Lib"
                                        "primerclip-0.3.3.0-GfuurxY2OUOHPk7lKZLXUc"
                                        'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "BEDPE" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                        ((GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "chr1")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                                          GHC.Generics.:*: (GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "start1")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 GHC.Integer.Type.Integer)
                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "end1")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  GHC.Integer.Type.Integer)))
                                         GHC.Generics.:*: ((GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "chr2")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R Lib.UChr)
                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "start2")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  GHC.Integer.Type.Integer))
                                                           GHC.Generics.:*: (GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "end2")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  GHC.Integer.Type.Integer)
                                                                             GHC.Generics.:*: GHC.Generics.M1
                                                                                                GHC.Generics.S
                                                                                                ('GHC.Generics.MetaSel
                                                                                                   ('GHC.Base.Just
                                                                                                      "bedpename")
                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                (GHC.Generics.K1
                                                                                                   GHC.Generics.R
                                                                                                   Data.ByteString.Internal.ByteString))))>_R)
                                (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "BEDPE" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <(GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "chr1")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                                       GHC.Generics.:*: (GHC.Generics.M1
                                                           GHC.Generics.S
                                                           ('GHC.Generics.MetaSel
                                                              ('GHC.Base.Just "start1")
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.K1
                                                              GHC.Generics.R
                                                              GHC.Integer.Type.Integer)
                                                         GHC.Generics.:*: GHC.Generics.M1
                                                                            GHC.Generics.S
                                                                            ('GHC.Generics.MetaSel
                                                                               ('GHC.Base.Just
                                                                                  "end1")
                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                               'GHC.Generics.NoSourceStrictness
                                                                               'GHC.Generics.DecidedLazy)
                                                                            (GHC.Generics.K1
                                                                               GHC.Generics.R
                                                                               GHC.Integer.Type.Integer)))
                                      GHC.Generics.:*: ((GHC.Generics.M1
                                                           GHC.Generics.S
                                                           ('GHC.Generics.MetaSel
                                                              ('GHC.Base.Just "chr2")
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                                                         GHC.Generics.:*: GHC.Generics.M1
                                                                            GHC.Generics.S
                                                                            ('GHC.Generics.MetaSel
                                                                               ('GHC.Base.Just
                                                                                  "start2")
                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                               'GHC.Generics.NoSourceStrictness
                                                                               'GHC.Generics.DecidedLazy)
                                                                            (GHC.Generics.K1
                                                                               GHC.Generics.R
                                                                               GHC.Integer.Type.Integer))
                                                        GHC.Generics.:*: (GHC.Generics.M1
                                                                            GHC.Generics.S
                                                                            ('GHC.Generics.MetaSel
                                                                               ('GHC.Base.Just
                                                                                  "end2")
                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                               'GHC.Generics.NoSourceStrictness
                                                                               'GHC.Generics.DecidedLazy)
                                                                            (GHC.Generics.K1
                                                                               GHC.Generics.R
                                                                               GHC.Integer.Type.Integer)
                                                                          GHC.Generics.:*: GHC.Generics.M1
                                                                                             GHC.Generics.S
                                                                                             ('GHC.Generics.MetaSel
                                                                                                ('GHC.Base.Just
                                                                                                   "bedpename")
                                                                                                'GHC.Generics.NoSourceUnpackedness
                                                                                                'GHC.Generics.NoSourceStrictness
                                                                                                'GHC.Generics.DecidedLazy)
                                                                                             (GHC.Generics.K1
                                                                                                GHC.Generics.R
                                                                                                Data.ByteString.Internal.ByteString)))>_R)) <x>_N) of wild { GHC.Generics.:*: ds7 ds8 ->
                 case ds7 of wild1 { GHC.Generics.:*: ds9 ds10 ->
                 case ds10 of wild2 { GHC.Generics.:*: ds11 ds12 ->
                 case ds8 of wild3 { GHC.Generics.:*: ds13 ds14 ->
                 case ds13 of wild4 { GHC.Generics.:*: ds15 ds16 ->
                 case ds14 of wild5 { GHC.Generics.:*: ds17 ds18 ->
                 Lib.BEDPE
                   ds9
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "chr1")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R Lib.UChr>_R <x>_N)
                        (GHC.Generics.N:K1[0] <*>_N <GHC.Generics.R>_P <Lib.UChr>_R <x>_P))
                   ds11
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "start1")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ds12
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "end1")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ds15
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "chr2")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R Lib.UChr>_R <x>_N)
                        (GHC.Generics.N:K1[0] <*>_N <GHC.Generics.R>_P <Lib.UChr>_R <x>_P))
                   ds16
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "start2")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ds17
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "end2")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ds18
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "bedpename")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N
                             <GHC.Generics.R>_P
                             <Data.ByteString.Internal.ByteString>_R
                             <x>_P)) } } } } } }) -}
ec17ee0811cea74621c0d656d7cc2daf
  $fGenericBedRecord :: GHC.Generics.Generic Lib.BedRecord
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.BedRecord
                  Lib.$fGenericBedRecord1
                    `cast`
                  (forall (x :: <*>_N).
                   <Lib.BedRecord>_R
                   ->_R Trans
                            (Sym (GHC.Generics.N:M1[0]
                                      <*>_N
                                      <GHC.Generics.D>_P
                                      <'GHC.Generics.MetaData
                                         "BedRecord"
                                         "Lib"
                                         "primerclip-0.3.3.0-GfuurxY2OUOHPk7lKZLXUc"
                                         'GHC.Types.False>_P
                                      <GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "BedRecord" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                         ((GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "bedchr")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                                           GHC.Generics.:*: GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "bedstart")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 GHC.Integer.Type.Integer))
                                          GHC.Generics.:*: (GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "bedend")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 GHC.Integer.Type.Integer)
                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "bedname")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  Data.ByteString.Internal.ByteString)))>_R))
                            (Sub (Sym (Lib.Rep_BedRecord[0]))) <x>_N)
                  Lib.$fGenericBedRecord_$cto -}
ec17ee0811cea74621c0d656d7cc2daf
  $fGenericBedRecord1 ::
    Lib.BedRecord
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "BedRecord" 'GHC.Generics.PrefixI 'GHC.Types.True)
         ((GHC.Generics.M1
             GHC.Generics.S
             ('GHC.Generics.MetaSel
                ('GHC.Base.Just "bedchr")
                'GHC.Generics.NoSourceUnpackedness
                'GHC.Generics.NoSourceStrictness
                'GHC.Generics.DecidedLazy)
             (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
           GHC.Generics.:*: GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "bedstart")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
          GHC.Generics.:*: (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "bedend")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                            GHC.Generics.:*: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "bedname")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString)))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: Lib.BedRecord) ->
                 case x1 of wild { Lib.BedRecord g1 g2 g3 g4 ->
                 (GHC.Generics.:*:
                    @ *
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "bedchr")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                       GHC.Generics.:*: GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "bedstart")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "bedend")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                       GHC.Generics.:*: GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "bedname")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1
                                             GHC.Generics.R Data.ByteString.Internal.ByteString))
                    @ x
                    (GHC.Generics.:*:
                       @ *
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "bedchr")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R Lib.UChr))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "bedstart")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                       @ x
                       g1
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <*>_N <GHC.Generics.R>_P <Lib.UChr>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <*>_N
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "bedchr")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1 GHC.Generics.R Lib.UChr>_R) <x>_N))
                       g2
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <*>_N <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <*>_N
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "bedstart")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1
                                         GHC.Generics.R GHC.Integer.Type.Integer>_R) <x>_N)))
                    (GHC.Generics.:*:
                       @ *
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "bedend")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "bedname")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1
                               GHC.Generics.R Data.ByteString.Internal.ByteString))
                       @ x
                       g3
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <*>_N <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <*>_N
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "bedend")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1
                                         GHC.Generics.R GHC.Integer.Type.Integer>_R) <x>_N))
                       g4
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <*>_N
                                      <GHC.Generics.R>_P
                                      <Data.ByteString.Internal.ByteString>_R
                                      <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <*>_N
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "bedname")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1
                                         GHC.Generics.R
                                         Data.ByteString.Internal.ByteString>_R) <x>_N))))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <*>_N
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "BedRecord" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <(GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "bedchr")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                             GHC.Generics.:*: GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "bedstart")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R GHC.Integer.Type.Integer))
                            GHC.Generics.:*: (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "bedend")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R GHC.Integer.Type.Integer)
                                              GHC.Generics.:*: GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Base.Just "bedname")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    Data.ByteString.Internal.ByteString))>_R) <x>_N) }) -}
ec17ee0811cea74621c0d656d7cc2daf
  $fGenericBedRecord_$cto ::
    GHC.Generics.Rep Lib.BedRecord x -> Lib.BedRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SS),1*U(1*U(U,U),1*U(U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (ds6 :: GHC.Generics.Rep Lib.BedRecord x) ->
                 case ds6
                        `cast`
                      (Trans
                           (Sub (Lib.Rep_BedRecord[0]))
                           (Trans
                                (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.D>_P
                                     <'GHC.Generics.MetaData
                                        "BedRecord"
                                        "Lib"
                                        "primerclip-0.3.3.0-GfuurxY2OUOHPk7lKZLXUc"
                                        'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "BedRecord" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                        ((GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "bedchr")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                                          GHC.Generics.:*: GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "bedstart")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R
                                                                GHC.Integer.Type.Integer))
                                         GHC.Generics.:*: (GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "bedend")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R
                                                                GHC.Integer.Type.Integer)
                                                           GHC.Generics.:*: GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "bedname")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 Data.ByteString.Internal.ByteString)))>_R)
                                (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "BedRecord" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <(GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "bedchr")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                                       GHC.Generics.:*: GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "bedstart")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R
                                                             GHC.Integer.Type.Integer))
                                      GHC.Generics.:*: (GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "bedend")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R
                                                             GHC.Integer.Type.Integer)
                                                        GHC.Generics.:*: GHC.Generics.M1
                                                                           GHC.Generics.S
                                                                           ('GHC.Generics.MetaSel
                                                                              ('GHC.Base.Just
                                                                                 "bedname")
                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                              'GHC.Generics.NoSourceStrictness
                                                                              'GHC.Generics.DecidedLazy)
                                                                           (GHC.Generics.K1
                                                                              GHC.Generics.R
                                                                              Data.ByteString.Internal.ByteString))>_R)) <x>_N) of wild { GHC.Generics.:*: ds7 ds8 ->
                 case ds7 of wild1 { GHC.Generics.:*: ds9 ds10 ->
                 case ds8 of wild2 { GHC.Generics.:*: ds11 ds12 ->
                 Lib.BedRecord
                   ds9
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "bedchr")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R Lib.UChr>_R <x>_N)
                        (GHC.Generics.N:K1[0] <*>_N <GHC.Generics.R>_P <Lib.UChr>_R <x>_P))
                   ds10
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "bedstart")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ds11
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "bedend")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ds12
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "bedname")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N
                             <GHC.Generics.R>_P
                             <Data.ByteString.Internal.ByteString>_R
                             <x>_P)) } } }) -}
21071c975426d6ea93962a8c0a55430b
  $fGenericPairedAln :: GHC.Generics.Generic Lib.PairedAln
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.PairedAln
                  Lib.$fGenericPairedAln1
                    `cast`
                  (forall (x :: <*>_N).
                   <Lib.PairedAln>_R
                   ->_R Trans
                            (Sym (GHC.Generics.N:M1[0]
                                      <*>_N
                                      <GHC.Generics.D>_P
                                      <'GHC.Generics.MetaData
                                         "PairedAln"
                                         "Lib"
                                         "primerclip-0.3.3.0-GfuurxY2OUOHPk7lKZLXUc"
                                         'GHC.Types.False>_P
                                      <GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "PairedAln" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                         ((GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "r1prim")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1 GHC.Generics.R Lib.AlignedRead)
                                           GHC.Generics.:*: GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "r2prim")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R Lib.AlignedRead))
                                          GHC.Generics.:*: (GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "r1secs")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R [Lib.AlignedRead])
                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "r2secs")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  [Lib.AlignedRead])))>_R))
                            (Sub (Sym (Lib.Rep_PairedAln[0]))) <x>_N)
                  Lib.$fGenericPairedAln_$cto -}
21071c975426d6ea93962a8c0a55430b
  $fGenericPairedAln1 ::
    Lib.PairedAln
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "PairedAln" 'GHC.Generics.PrefixI 'GHC.Types.True)
         ((GHC.Generics.M1
             GHC.Generics.S
             ('GHC.Generics.MetaSel
                ('GHC.Base.Just "r1prim")
                'GHC.Generics.NoSourceUnpackedness
                'GHC.Generics.NoSourceStrictness
                'GHC.Generics.DecidedLazy)
             (GHC.Generics.K1 GHC.Generics.R Lib.AlignedRead)
           GHC.Generics.:*: GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "r2prim")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R Lib.AlignedRead))
          GHC.Generics.:*: (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "r1secs")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R [Lib.AlignedRead])
                            GHC.Generics.:*: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "r2secs")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1 GHC.Generics.R [Lib.AlignedRead])))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: Lib.PairedAln) ->
                 case x1 of wild { Lib.PairedAln g1 g2 g3 g4 ->
                 (GHC.Generics.:*:
                    @ *
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "r1prim")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R Lib.AlignedRead)
                       GHC.Generics.:*: GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "r2prim")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1 GHC.Generics.R Lib.AlignedRead))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "r1secs")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R [Lib.AlignedRead])
                       GHC.Generics.:*: GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "r2secs")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1 GHC.Generics.R [Lib.AlignedRead]))
                    @ x
                    (GHC.Generics.:*:
                       @ *
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "r1prim")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R Lib.AlignedRead))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "r2prim")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R Lib.AlignedRead))
                       @ x
                       g1
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <*>_N <GHC.Generics.R>_P <Lib.AlignedRead>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <*>_N
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "r1prim")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1 GHC.Generics.R Lib.AlignedRead>_R) <x>_N))
                       g2
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <*>_N <GHC.Generics.R>_P <Lib.AlignedRead>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <*>_N
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "r2prim")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1 GHC.Generics.R Lib.AlignedRead>_R) <x>_N)))
                    (GHC.Generics.:*:
                       @ *
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "r1secs")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R [Lib.AlignedRead]))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "r2secs")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R [Lib.AlignedRead]))
                       @ x
                       g3
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <*>_N <GHC.Generics.R>_P <[Lib.AlignedRead]>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <*>_N
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "r1secs")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1 GHC.Generics.R [Lib.AlignedRead]>_R) <x>_N))
                       g4
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <*>_N <GHC.Generics.R>_P <[Lib.AlignedRead]>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <*>_N
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "r2secs")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1
                                         GHC.Generics.R [Lib.AlignedRead]>_R) <x>_N))))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <*>_N
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "PairedAln" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <(GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "r1prim")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R Lib.AlignedRead)
                             GHC.Generics.:*: GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "r2prim")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1 GHC.Generics.R Lib.AlignedRead))
                            GHC.Generics.:*: (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "r1secs")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1 GHC.Generics.R [Lib.AlignedRead])
                                              GHC.Generics.:*: GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Base.Just "r2secs")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    [Lib.AlignedRead]))>_R) <x>_N) }) -}
21071c975426d6ea93962a8c0a55430b
  $fGenericPairedAln_$cto ::
    GHC.Generics.Rep Lib.PairedAln x -> Lib.PairedAln
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SS),1*U(1*U(U,U),1*U(U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (ds6 :: GHC.Generics.Rep Lib.PairedAln x) ->
                 case ds6
                        `cast`
                      (Trans
                           (Sub (Lib.Rep_PairedAln[0]))
                           (Trans
                                (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.D>_P
                                     <'GHC.Generics.MetaData
                                        "PairedAln"
                                        "Lib"
                                        "primerclip-0.3.3.0-GfuurxY2OUOHPk7lKZLXUc"
                                        'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "PairedAln" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                        ((GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "r1prim")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.K1 GHC.Generics.R Lib.AlignedRead)
                                          GHC.Generics.:*: GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "r2prim")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R Lib.AlignedRead))
                                         GHC.Generics.:*: (GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "r1secs")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R [Lib.AlignedRead])
                                                           GHC.Generics.:*: GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "r2secs")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 [Lib.AlignedRead])))>_R)
                                (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "PairedAln" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <(GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "r1prim")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.K1 GHC.Generics.R Lib.AlignedRead)
                                       GHC.Generics.:*: GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "r2prim")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R Lib.AlignedRead))
                                      GHC.Generics.:*: (GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "r1secs")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R [Lib.AlignedRead])
                                                        GHC.Generics.:*: GHC.Generics.M1
                                                                           GHC.Generics.S
                                                                           ('GHC.Generics.MetaSel
                                                                              ('GHC.Base.Just
                                                                                 "r2secs")
                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                              'GHC.Generics.NoSourceStrictness
                                                                              'GHC.Generics.DecidedLazy)
                                                                           (GHC.Generics.K1
                                                                              GHC.Generics.R
                                                                              [Lib.AlignedRead]))>_R)) <x>_N) of wild { GHC.Generics.:*: ds7 ds8 ->
                 case ds7 of wild1 { GHC.Generics.:*: ds9 ds10 ->
                 case ds8 of wild2 { GHC.Generics.:*: ds11 ds12 ->
                 Lib.PairedAln
                   ds9
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "r1prim")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R Lib.AlignedRead>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <Lib.AlignedRead>_R <x>_P))
                   ds10
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "r2prim")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R Lib.AlignedRead>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <Lib.AlignedRead>_R <x>_P))
                   ds11
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "r1secs")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R [Lib.AlignedRead]>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <[Lib.AlignedRead]>_R <x>_P))
                   ds12
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "r2secs")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R [Lib.AlignedRead]>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <[Lib.AlignedRead]>_R <x>_P)) } } }) -}
56a346888d4ebe522e3d0b31a72b285d
  $fGenericUChr :: GHC.Generics.Generic Lib.UChr
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.UChr
                  Lib.$fGenericUChr1
                    `cast`
                  (forall (x :: <*>_N).
                   <Lib.UChr>_R
                   ->_R Trans
                            (Sym (GHC.Generics.N:M1[0]
                                      <*>_N
                                      <GHC.Generics.D>_P
                                      <'GHC.Generics.MetaData
                                         "UChr"
                                         "Lib"
                                         "primerclip-0.3.3.0-GfuurxY2OUOHPk7lKZLXUc"
                                         'GHC.Types.False>_P
                                      <(((((GHC.Generics.M1
                                              GHC.Generics.C
                                              ('GHC.Generics.MetaCons
                                                 "C1" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                              GHC.Generics.U1
                                            GHC.Generics.:+: (GHC.Generics.M1
                                                                GHC.Generics.C
                                                                ('GHC.Generics.MetaCons
                                                                   "C2"
                                                                   'GHC.Generics.PrefixI
                                                                   'GHC.Types.False)
                                                                GHC.Generics.U1
                                                              GHC.Generics.:+: GHC.Generics.M1
                                                                                 GHC.Generics.C
                                                                                 ('GHC.Generics.MetaCons
                                                                                    "C3"
                                                                                    'GHC.Generics.PrefixI
                                                                                    'GHC.Types.False)
                                                                                 GHC.Generics.U1))
                                           GHC.Generics.:+: (GHC.Generics.M1
                                                               GHC.Generics.C
                                                               ('GHC.Generics.MetaCons
                                                                  "C4"
                                                                  'GHC.Generics.PrefixI
                                                                  'GHC.Types.False)
                                                               GHC.Generics.U1
                                                             GHC.Generics.:+: (GHC.Generics.M1
                                                                                 GHC.Generics.C
                                                                                 ('GHC.Generics.MetaCons
                                                                                    "C5"
                                                                                    'GHC.Generics.PrefixI
                                                                                    'GHC.Types.False)
                                                                                 GHC.Generics.U1
                                                                               GHC.Generics.:+: GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "C6"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1)))
                                          GHC.Generics.:+: ((GHC.Generics.M1
                                                               GHC.Generics.C
                                                               ('GHC.Generics.MetaCons
                                                                  "C7"
                                                                  'GHC.Generics.PrefixI
                                                                  'GHC.Types.False)
                                                               GHC.Generics.U1
                                                             GHC.Generics.:+: (GHC.Generics.M1
                                                                                 GHC.Generics.C
                                                                                 ('GHC.Generics.MetaCons
                                                                                    "C8"
                                                                                    'GHC.Generics.PrefixI
                                                                                    'GHC.Types.False)
                                                                                 GHC.Generics.U1
                                                                               GHC.Generics.:+: GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "C9"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1))
                                                            GHC.Generics.:+: ((GHC.Generics.M1
                                                                                 GHC.Generics.C
                                                                                 ('GHC.Generics.MetaCons
                                                                                    "C10"
                                                                                    'GHC.Generics.PrefixI
                                                                                    'GHC.Types.False)
                                                                                 GHC.Generics.U1
                                                                               GHC.Generics.:+: GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "C11"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1)
                                                                              GHC.Generics.:+: (GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "C12"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "C13"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1))))
                                         GHC.Generics.:+: (((GHC.Generics.M1
                                                               GHC.Generics.C
                                                               ('GHC.Generics.MetaCons
                                                                  "C14"
                                                                  'GHC.Generics.PrefixI
                                                                  'GHC.Types.False)
                                                               GHC.Generics.U1
                                                             GHC.Generics.:+: (GHC.Generics.M1
                                                                                 GHC.Generics.C
                                                                                 ('GHC.Generics.MetaCons
                                                                                    "C15"
                                                                                    'GHC.Generics.PrefixI
                                                                                    'GHC.Types.False)
                                                                                 GHC.Generics.U1
                                                                               GHC.Generics.:+: GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "C16"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1))
                                                            GHC.Generics.:+: ((GHC.Generics.M1
                                                                                 GHC.Generics.C
                                                                                 ('GHC.Generics.MetaCons
                                                                                    "C17"
                                                                                    'GHC.Generics.PrefixI
                                                                                    'GHC.Types.False)
                                                                                 GHC.Generics.U1
                                                                               GHC.Generics.:+: GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "C18"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1)
                                                                              GHC.Generics.:+: (GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "C19"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "C20"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1)))
                                                           GHC.Generics.:+: ((GHC.Generics.M1
                                                                                GHC.Generics.C
                                                                                ('GHC.Generics.MetaCons
                                                                                   "C21"
                                                                                   'GHC.Generics.PrefixI
                                                                                   'GHC.Types.False)
                                                                                GHC.Generics.U1
                                                                              GHC.Generics.:+: (GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "C22"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "CX"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1))
                                                                             GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "CY"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "CMT"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1)
                                                                                               GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "Chr1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1
                                                                                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "Chr2"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1)))))
                                        GHC.Generics.:+: ((((GHC.Generics.M1
                                                               GHC.Generics.C
                                                               ('GHC.Generics.MetaCons
                                                                  "Chr3"
                                                                  'GHC.Generics.PrefixI
                                                                  'GHC.Types.False)
                                                               GHC.Generics.U1
                                                             GHC.Generics.:+: (GHC.Generics.M1
                                                                                 GHC.Generics.C
                                                                                 ('GHC.Generics.MetaCons
                                                                                    "Chr4"
                                                                                    'GHC.Generics.PrefixI
                                                                                    'GHC.Types.False)
                                                                                 GHC.Generics.U1
                                                                               GHC.Generics.:+: GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "Chr5"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1))
                                                            GHC.Generics.:+: ((GHC.Generics.M1
                                                                                 GHC.Generics.C
                                                                                 ('GHC.Generics.MetaCons
                                                                                    "Chr6"
                                                                                    'GHC.Generics.PrefixI
                                                                                    'GHC.Types.False)
                                                                                 GHC.Generics.U1
                                                                               GHC.Generics.:+: GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "Chr7"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1)
                                                                              GHC.Generics.:+: (GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "Chr8"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "Chr9"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1)))
                                                           GHC.Generics.:+: ((GHC.Generics.M1
                                                                                GHC.Generics.C
                                                                                ('GHC.Generics.MetaCons
                                                                                   "Chr10"
                                                                                   'GHC.Generics.PrefixI
                                                                                   'GHC.Types.False)
                                                                                GHC.Generics.U1
                                                                              GHC.Generics.:+: (GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "Chr11"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "Chr12"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1))
                                                                             GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "Chr13"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "Chr14"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1)
                                                                                               GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "Chr15"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1
                                                                                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "Chr16"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1))))
                                                          GHC.Generics.:+: (((GHC.Generics.M1
                                                                                GHC.Generics.C
                                                                                ('GHC.Generics.MetaCons
                                                                                   "Chr17"
                                                                                   'GHC.Generics.PrefixI
                                                                                   'GHC.Types.False)
                                                                                GHC.Generics.U1
                                                                              GHC.Generics.:+: (GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "Chr18"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "Chr19"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1))
                                                                             GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "Chr20"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "Chr21"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1)
                                                                                               GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "Chr22"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1
                                                                                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "ChrX"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1)))
                                                                            GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                 GHC.Generics.C
                                                                                                 ('GHC.Generics.MetaCons
                                                                                                    "ChrY"
                                                                                                    'GHC.Generics.PrefixI
                                                                                                    'GHC.Types.False)
                                                                                                 GHC.Generics.U1
                                                                                               GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "ChrM"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1
                                                                                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000207P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1))
                                                                                              GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000226P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1
                                                                                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000229P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1)
                                                                                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000231P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1
                                                                                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                                     GHC.Generics.C
                                                                                                                                                     ('GHC.Generics.MetaCons
                                                                                                                                                        "GL000210P1"
                                                                                                                                                        'GHC.Generics.PrefixI
                                                                                                                                                        'GHC.Types.False)
                                                                                                                                                     GHC.Generics.U1))))))
                                       GHC.Generics.:+: (((((GHC.Generics.M1
                                                               GHC.Generics.C
                                                               ('GHC.Generics.MetaCons
                                                                  "GL000239P1"
                                                                  'GHC.Generics.PrefixI
                                                                  'GHC.Types.False)
                                                               GHC.Generics.U1
                                                             GHC.Generics.:+: (GHC.Generics.M1
                                                                                 GHC.Generics.C
                                                                                 ('GHC.Generics.MetaCons
                                                                                    "GL000235P1"
                                                                                    'GHC.Generics.PrefixI
                                                                                    'GHC.Types.False)
                                                                                 GHC.Generics.U1
                                                                               GHC.Generics.:+: GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "GL000201P1"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1))
                                                            GHC.Generics.:+: ((GHC.Generics.M1
                                                                                 GHC.Generics.C
                                                                                 ('GHC.Generics.MetaCons
                                                                                    "GL000247P1"
                                                                                    'GHC.Generics.PrefixI
                                                                                    'GHC.Types.False)
                                                                                 GHC.Generics.U1
                                                                               GHC.Generics.:+: GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "GL000245P1"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1)
                                                                              GHC.Generics.:+: (GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "GL000197P1"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000203P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1)))
                                                           GHC.Generics.:+: ((GHC.Generics.M1
                                                                                GHC.Generics.C
                                                                                ('GHC.Generics.MetaCons
                                                                                   "GL000246P1"
                                                                                   'GHC.Generics.PrefixI
                                                                                   'GHC.Types.False)
                                                                                GHC.Generics.U1
                                                                              GHC.Generics.:+: (GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "GL000249P1"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000196P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1))
                                                                             GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "GL000248P1"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000244P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1)
                                                                                               GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000238P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1
                                                                                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000202P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1))))
                                                          GHC.Generics.:+: (((GHC.Generics.M1
                                                                                GHC.Generics.C
                                                                                ('GHC.Generics.MetaCons
                                                                                   "GL000234P1"
                                                                                   'GHC.Generics.PrefixI
                                                                                   'GHC.Types.False)
                                                                                GHC.Generics.U1
                                                                              GHC.Generics.:+: (GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "GL000232P1"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000206P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1))
                                                                             GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "GL000240P1"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000236P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1)
                                                                                               GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000241P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1
                                                                                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000243P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1)))
                                                                            GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                 GHC.Generics.C
                                                                                                 ('GHC.Generics.MetaCons
                                                                                                    "GL000242P1"
                                                                                                    'GHC.Generics.PrefixI
                                                                                                    'GHC.Types.False)
                                                                                                 GHC.Generics.U1
                                                                                               GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000230P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1
                                                                                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000237P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1))
                                                                                              GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000233P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1
                                                                                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000204P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1)
                                                                                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000198P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1
                                                                                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                                     GHC.Generics.C
                                                                                                                                                     ('GHC.Generics.MetaCons
                                                                                                                                                        "GL000208P1"
                                                                                                                                                        'GHC.Generics.PrefixI
                                                                                                                                                        'GHC.Types.False)
                                                                                                                                                     GHC.Generics.U1)))))
                                                         GHC.Generics.:+: ((((GHC.Generics.M1
                                                                                GHC.Generics.C
                                                                                ('GHC.Generics.MetaCons
                                                                                   "GL000191P1"
                                                                                   'GHC.Generics.PrefixI
                                                                                   'GHC.Types.False)
                                                                                GHC.Generics.U1
                                                                              GHC.Generics.:+: (GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "GL000227P1"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000228P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1))
                                                                             GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "GL000214P1"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000221P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1)
                                                                                               GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000209P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1
                                                                                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000218P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1)))
                                                                            GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                 GHC.Generics.C
                                                                                                 ('GHC.Generics.MetaCons
                                                                                                    "GL000220P1"
                                                                                                    'GHC.Generics.PrefixI
                                                                                                    'GHC.Types.False)
                                                                                                 GHC.Generics.U1
                                                                                               GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000213P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1
                                                                                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000211P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1))
                                                                                              GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000199P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1
                                                                                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000217P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1)
                                                                                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000216P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1
                                                                                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                                     GHC.Generics.C
                                                                                                                                                     ('GHC.Generics.MetaCons
                                                                                                                                                        "GL000215P1"
                                                                                                                                                        'GHC.Generics.PrefixI
                                                                                                                                                        'GHC.Types.False)
                                                                                                                                                     GHC.Generics.U1))))
                                                                           GHC.Generics.:+: (((GHC.Generics.M1
                                                                                                 GHC.Generics.C
                                                                                                 ('GHC.Generics.MetaCons
                                                                                                    "GL000205P1"
                                                                                                    'GHC.Generics.PrefixI
                                                                                                    'GHC.Types.False)
                                                                                                 GHC.Generics.U1
                                                                                               GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000219P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1
                                                                                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000224P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1))
                                                                                              GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000223P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1
                                                                                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000195P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1)
                                                                                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000212P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1
                                                                                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                                     GHC.Generics.C
                                                                                                                                                     ('GHC.Generics.MetaCons
                                                                                                                                                        "GL000222P1"
                                                                                                                                                        'GHC.Generics.PrefixI
                                                                                                                                                        'GHC.Types.False)
                                                                                                                                                     GHC.Generics.U1)))
                                                                                             GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                                  GHC.Generics.C
                                                                                                                  ('GHC.Generics.MetaCons
                                                                                                                     "GL000200P1"
                                                                                                                     'GHC.Generics.PrefixI
                                                                                                                     'GHC.Types.False)
                                                                                                                  GHC.Generics.U1
                                                                                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000193P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1
                                                                                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                                     GHC.Generics.C
                                                                                                                                                     ('GHC.Generics.MetaCons
                                                                                                                                                        "GL000194P1"
                                                                                                                                                        'GHC.Generics.PrefixI
                                                                                                                                                        'GHC.Types.False)
                                                                                                                                                     GHC.Generics.U1))
                                                                                                               GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000225P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1
                                                                                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                                     GHC.Generics.C
                                                                                                                                                     ('GHC.Generics.MetaCons
                                                                                                                                                        "GL000192P1"
                                                                                                                                                        'GHC.Generics.PrefixI
                                                                                                                                                        'GHC.Types.False)
                                                                                                                                                     GHC.Generics.U1)
                                                                                                                                 GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                                                     GHC.Generics.C
                                                                                                                                                     ('GHC.Generics.MetaCons
                                                                                                                                                        "NC_007605"
                                                                                                                                                        'GHC.Generics.PrefixI
                                                                                                                                                        'GHC.Types.False)
                                                                                                                                                     GHC.Generics.U1
                                                                                                                                                   GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                                                      GHC.Generics.C
                                                                                                                                                                      ('GHC.Generics.MetaCons
                                                                                                                                                                         "NONE"
                                                                                                                                                                         'GHC.Generics.PrefixI
                                                                                                                                                                         'GHC.Types.False)
                                                                                                                                                                      GHC.Generics.U1))))))>_R))
                            (Sub (Sym (Lib.Rep_UChr[0]))) <x>_N)
                  Lib.$fGenericUChr_$cto -}
56a346888d4ebe522e3d0b31a72b285d
  $fGenericUChr1 ::
    Lib.UChr
    -> (GHC.Generics.:+:)
         (((((GHC.Generics.M1
                GHC.Generics.C
                ('GHC.Generics.MetaCons
                   "C1" 'GHC.Generics.PrefixI 'GHC.Types.False)
                GHC.Generics.U1
              GHC.Generics.:+: (GHC.Generics.M1
                                  GHC.Generics.C
                                  ('GHC.Generics.MetaCons
                                     "C2" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                  GHC.Generics.U1
                                GHC.Generics.:+: GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "C3" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                   GHC.Generics.U1))
             GHC.Generics.:+: (GHC.Generics.M1
                                 GHC.Generics.C
                                 ('GHC.Generics.MetaCons
                                    "C4" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: (GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "C5" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "C6"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1)))
            GHC.Generics.:+: ((GHC.Generics.M1
                                 GHC.Generics.C
                                 ('GHC.Generics.MetaCons
                                    "C7" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: (GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "C8" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "C9"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1))
                              GHC.Generics.:+: ((GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "C10" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "C11"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1)
                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "C12"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "C13"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1))))
           GHC.Generics.:+: (((GHC.Generics.M1
                                 GHC.Generics.C
                                 ('GHC.Generics.MetaCons
                                    "C14" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: (GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "C15" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "C16"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1))
                              GHC.Generics.:+: ((GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "C17" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "C18"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1)
                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "C19"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "C20"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1)))
                             GHC.Generics.:+: ((GHC.Generics.M1
                                                  GHC.Generics.C
                                                  ('GHC.Generics.MetaCons
                                                     "C21" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                  GHC.Generics.U1
                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "C22"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "CX"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1))
                                               GHC.Generics.:+: ((GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "CY"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "CMT"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1)
                                                                 GHC.Generics.:+: (GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "Chr1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1
                                                                                   GHC.Generics.:+: GHC.Generics.M1
                                                                                                      GHC.Generics.C
                                                                                                      ('GHC.Generics.MetaCons
                                                                                                         "Chr2"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False)
                                                                                                      GHC.Generics.U1)))))
          GHC.Generics.:+: ((((GHC.Generics.M1
                                 GHC.Generics.C
                                 ('GHC.Generics.MetaCons
                                    "Chr3" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: (GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "Chr4" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "Chr5"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1))
                              GHC.Generics.:+: ((GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "Chr6" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "Chr7"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1)
                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "Chr8"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "Chr9"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1)))
                             GHC.Generics.:+: ((GHC.Generics.M1
                                                  GHC.Generics.C
                                                  ('GHC.Generics.MetaCons
                                                     "Chr10" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                  GHC.Generics.U1
                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "Chr11"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "Chr12"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1))
                                               GHC.Generics.:+: ((GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "Chr13"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "Chr14"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1)
                                                                 GHC.Generics.:+: (GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "Chr15"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1
                                                                                   GHC.Generics.:+: GHC.Generics.M1
                                                                                                      GHC.Generics.C
                                                                                                      ('GHC.Generics.MetaCons
                                                                                                         "Chr16"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False)
                                                                                                      GHC.Generics.U1))))
                            GHC.Generics.:+: (((GHC.Generics.M1
                                                  GHC.Generics.C
                                                  ('GHC.Generics.MetaCons
                                                     "Chr17" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                  GHC.Generics.U1
                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "Chr18"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "Chr19"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1))
                                               GHC.Generics.:+: ((GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "Chr20"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "Chr21"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1)
                                                                 GHC.Generics.:+: (GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "Chr22"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1
                                                                                   GHC.Generics.:+: GHC.Generics.M1
                                                                                                      GHC.Generics.C
                                                                                                      ('GHC.Generics.MetaCons
                                                                                                         "ChrX"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False)
                                                                                                      GHC.Generics.U1)))
                                              GHC.Generics.:+: ((GHC.Generics.M1
                                                                   GHC.Generics.C
                                                                   ('GHC.Generics.MetaCons
                                                                      "ChrY"
                                                                      'GHC.Generics.PrefixI
                                                                      'GHC.Types.False)
                                                                   GHC.Generics.U1
                                                                 GHC.Generics.:+: (GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "ChrM"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1
                                                                                   GHC.Generics.:+: GHC.Generics.M1
                                                                                                      GHC.Generics.C
                                                                                                      ('GHC.Generics.MetaCons
                                                                                                         "GL000207P1"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False)
                                                                                                      GHC.Generics.U1))
                                                                GHC.Generics.:+: ((GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000226P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1
                                                                                   GHC.Generics.:+: GHC.Generics.M1
                                                                                                      GHC.Generics.C
                                                                                                      ('GHC.Generics.MetaCons
                                                                                                         "GL000229P1"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False)
                                                                                                      GHC.Generics.U1)
                                                                                  GHC.Generics.:+: (GHC.Generics.M1
                                                                                                      GHC.Generics.C
                                                                                                      ('GHC.Generics.MetaCons
                                                                                                         "GL000231P1"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False)
                                                                                                      GHC.Generics.U1
                                                                                                    GHC.Generics.:+: GHC.Generics.M1
                                                                                                                       GHC.Generics.C
                                                                                                                       ('GHC.Generics.MetaCons
                                                                                                                          "GL000210P1"
                                                                                                                          'GHC.Generics.PrefixI
                                                                                                                          'GHC.Types.False)
                                                                                                                       GHC.Generics.U1))))))
         (((((GHC.Generics.M1
                GHC.Generics.C
                ('GHC.Generics.MetaCons
                   "GL000239P1" 'GHC.Generics.PrefixI 'GHC.Types.False)
                GHC.Generics.U1
              GHC.Generics.:+: (GHC.Generics.M1
                                  GHC.Generics.C
                                  ('GHC.Generics.MetaCons
                                     "GL000235P1" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                  GHC.Generics.U1
                                GHC.Generics.:+: GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "GL000201P1"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1))
             GHC.Generics.:+: ((GHC.Generics.M1
                                  GHC.Generics.C
                                  ('GHC.Generics.MetaCons
                                     "GL000247P1" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                  GHC.Generics.U1
                                GHC.Generics.:+: GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "GL000245P1"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1)
                               GHC.Generics.:+: (GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "GL000197P1"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000203P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1)))
            GHC.Generics.:+: ((GHC.Generics.M1
                                 GHC.Generics.C
                                 ('GHC.Generics.MetaCons
                                    "GL000246P1" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: (GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "GL000249P1"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000196P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1))
                              GHC.Generics.:+: ((GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "GL000248P1"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000244P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1)
                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000238P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000202P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1))))
           GHC.Generics.:+: (((GHC.Generics.M1
                                 GHC.Generics.C
                                 ('GHC.Generics.MetaCons
                                    "GL000234P1" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: (GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "GL000232P1"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000206P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1))
                              GHC.Generics.:+: ((GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "GL000240P1"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000236P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1)
                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000241P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000243P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1)))
                             GHC.Generics.:+: ((GHC.Generics.M1
                                                  GHC.Generics.C
                                                  ('GHC.Generics.MetaCons
                                                     "GL000242P1"
                                                     'GHC.Generics.PrefixI
                                                     'GHC.Types.False)
                                                  GHC.Generics.U1
                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000230P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000237P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1))
                                               GHC.Generics.:+: ((GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000233P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000204P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1)
                                                                 GHC.Generics.:+: (GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000198P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1
                                                                                   GHC.Generics.:+: GHC.Generics.M1
                                                                                                      GHC.Generics.C
                                                                                                      ('GHC.Generics.MetaCons
                                                                                                         "GL000208P1"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False)
                                                                                                      GHC.Generics.U1)))))
          GHC.Generics.:+: ((((GHC.Generics.M1
                                 GHC.Generics.C
                                 ('GHC.Generics.MetaCons
                                    "GL000191P1" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: (GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "GL000227P1"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000228P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1))
                              GHC.Generics.:+: ((GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "GL000214P1"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000221P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1)
                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000209P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000218P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1)))
                             GHC.Generics.:+: ((GHC.Generics.M1
                                                  GHC.Generics.C
                                                  ('GHC.Generics.MetaCons
                                                     "GL000220P1"
                                                     'GHC.Generics.PrefixI
                                                     'GHC.Types.False)
                                                  GHC.Generics.U1
                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000213P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000211P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1))
                                               GHC.Generics.:+: ((GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000199P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000217P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1)
                                                                 GHC.Generics.:+: (GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000216P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1
                                                                                   GHC.Generics.:+: GHC.Generics.M1
                                                                                                      GHC.Generics.C
                                                                                                      ('GHC.Generics.MetaCons
                                                                                                         "GL000215P1"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False)
                                                                                                      GHC.Generics.U1))))
                            GHC.Generics.:+: (((GHC.Generics.M1
                                                  GHC.Generics.C
                                                  ('GHC.Generics.MetaCons
                                                     "GL000205P1"
                                                     'GHC.Generics.PrefixI
                                                     'GHC.Types.False)
                                                  GHC.Generics.U1
                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000219P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000224P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1))
                                               GHC.Generics.:+: ((GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000223P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000195P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1)
                                                                 GHC.Generics.:+: (GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000212P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1
                                                                                   GHC.Generics.:+: GHC.Generics.M1
                                                                                                      GHC.Generics.C
                                                                                                      ('GHC.Generics.MetaCons
                                                                                                         "GL000222P1"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False)
                                                                                                      GHC.Generics.U1)))
                                              GHC.Generics.:+: ((GHC.Generics.M1
                                                                   GHC.Generics.C
                                                                   ('GHC.Generics.MetaCons
                                                                      "GL000200P1"
                                                                      'GHC.Generics.PrefixI
                                                                      'GHC.Types.False)
                                                                   GHC.Generics.U1
                                                                 GHC.Generics.:+: (GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000193P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1
                                                                                   GHC.Generics.:+: GHC.Generics.M1
                                                                                                      GHC.Generics.C
                                                                                                      ('GHC.Generics.MetaCons
                                                                                                         "GL000194P1"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False)
                                                                                                      GHC.Generics.U1))
                                                                GHC.Generics.:+: ((GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000225P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1
                                                                                   GHC.Generics.:+: GHC.Generics.M1
                                                                                                      GHC.Generics.C
                                                                                                      ('GHC.Generics.MetaCons
                                                                                                         "GL000192P1"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False)
                                                                                                      GHC.Generics.U1)
                                                                                  GHC.Generics.:+: (GHC.Generics.M1
                                                                                                      GHC.Generics.C
                                                                                                      ('GHC.Generics.MetaCons
                                                                                                         "NC_007605"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False)
                                                                                                      GHC.Generics.U1
                                                                                                    GHC.Generics.:+: GHC.Generics.M1
                                                                                                                       GHC.Generics.C
                                                                                                                       ('GHC.Generics.MetaCons
                                                                                                                          "NONE"
                                                                                                                          'GHC.Generics.PrefixI
                                                                                                                          'GHC.Types.False)
                                                                                                                       GHC.Generics.U1))))))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
56a346888d4ebe522e3d0b31a72b285d
  $fGenericUChr_$cto :: GHC.Generics.Rep Lib.UChr x -> Lib.UChr
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
21071c975426d6ea93962a8c0a55430b
  $fOrdAlignedRead :: GHC.Classes.Ord Lib.AlignedRead
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.AlignedRead
                  Lib.$fEqAlignedRead
                  Lib.$fOrdAlignedRead_$ccompare
                  Lib.$fOrdAlignedRead_$c<
                  Lib.$fOrdAlignedRead_$c<=
                  Lib.$fOrdAlignedRead_$c>
                  Lib.$fOrdAlignedRead_$c>=
                  Lib.$fOrdAlignedRead_$cmax
                  Lib.$fOrdAlignedRead_$cmin -}
21071c975426d6ea93962a8c0a55430b
  $fOrdAlignedRead_$c< ::
    Lib.AlignedRead -> Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.AlignedRead) (y :: Lib.AlignedRead) ->
                 case Lib.$fOrdAlignedRead_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True }) -}
21071c975426d6ea93962a8c0a55430b
  $fOrdAlignedRead_$c<= ::
    Lib.AlignedRead -> Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.AlignedRead) (y :: Lib.AlignedRead) ->
                 case Lib.$fOrdAlignedRead_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False }) -}
21071c975426d6ea93962a8c0a55430b
  $fOrdAlignedRead_$c> ::
    Lib.AlignedRead -> Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.AlignedRead) (y :: Lib.AlignedRead) ->
                 case Lib.$fOrdAlignedRead_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True }) -}
21071c975426d6ea93962a8c0a55430b
  $fOrdAlignedRead_$c>= ::
    Lib.AlignedRead -> Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.AlignedRead) (y :: Lib.AlignedRead) ->
                 case Lib.$fOrdAlignedRead_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False }) -}
21071c975426d6ea93962a8c0a55430b
  $fOrdAlignedRead_$ccompare ::
    Lib.AlignedRead -> Lib.AlignedRead -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.AlignedRead) (w1 :: Lib.AlignedRead) ->
                 case w of ww { Lib.AlignedRead ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ->
                 case w1 of ww32 { Lib.AlignedRead ww33 ww34 ww35 ww36 ww37 ww38 ww39 ww40 ww41 ww42 ww43 ww44 ww45 ww46 ww47 ww48 ww49 ww50 ww51 ww52 ww53 ww54 ww55 ww56 ww57 ww58 ww59 ww60 ww61 ww62 ww63 ->
                 Lib.$w$ccompare ww3 ww4 ww6 ww35 ww36 ww38 } }) -}
21071c975426d6ea93962a8c0a55430b
  $fOrdAlignedRead_$cmax ::
    Lib.AlignedRead -> Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)><S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.AlignedRead) (y :: Lib.AlignedRead) ->
                 case Lib.$fOrdAlignedRead_$ccompare x y of wild {
                   DEFAULT -> y GHC.Types.GT -> x }) -}
21071c975426d6ea93962a8c0a55430b
  $fOrdAlignedRead_$cmin ::
    Lib.AlignedRead -> Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)><S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.AlignedRead) (y :: Lib.AlignedRead) ->
                 case Lib.$fOrdAlignedRead_$ccompare x y of wild {
                   DEFAULT -> x GHC.Types.GT -> y }) -}
9bef29ed1835da52d687e9f588f6f1bf
  $fOrdBEDPE :: GHC.Classes.Ord Lib.BEDPE
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.BEDPE
                  Lib.$fEqBEDPE
                  Lib.$fOrdBEDPE_$ccompare
                  Lib.$fOrdBEDPE_$c<
                  Lib.$fOrdBEDPE_$c<=
                  Lib.$fOrdBEDPE_$c>
                  Lib.$fOrdBEDPE_$c>=
                  Lib.$fOrdBEDPE_$cmax
                  Lib.$fOrdBEDPE_$cmin -}
9bef29ed1835da52d687e9f588f6f1bf
  $fOrdBEDPE_$c< :: Lib.BEDPE -> Lib.BEDPE -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLL),1*U(U,1*U,A,A,A,A,A)><S(SLLLLLL),1*U(U,1*U,A,A,A,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.BEDPE) (w1 :: Lib.BEDPE) ->
                 case w of ww { Lib.BEDPE ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case w1 of ww8 { Lib.BEDPE ww9 ww10 ww11 ww12 ww13 ww14 ww15 ->
                 Lib.$w$c< ww1 ww2 ww9 ww10 } }) -}
9bef29ed1835da52d687e9f588f6f1bf
  $fOrdBEDPE_$c<= :: Lib.BEDPE -> Lib.BEDPE -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLL),1*U(U,1*U,A,A,A,A,A)><S(SLLLLLL),1*U(U,1*U,A,A,A,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.BEDPE) (w1 :: Lib.BEDPE) ->
                 case w of ww { Lib.BEDPE ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case w1 of ww8 { Lib.BEDPE ww9 ww10 ww11 ww12 ww13 ww14 ww15 ->
                 Lib.$w$c<= ww1 ww2 ww9 ww10 } }) -}
9bef29ed1835da52d687e9f588f6f1bf
  $fOrdBEDPE_$c> :: Lib.BEDPE -> Lib.BEDPE -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLL),1*U(U,1*U,A,A,A,A,A)><S(SLLLLLL),1*U(U,1*U,A,A,A,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.BEDPE) (w1 :: Lib.BEDPE) ->
                 case w of ww { Lib.BEDPE ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case w1 of ww8 { Lib.BEDPE ww9 ww10 ww11 ww12 ww13 ww14 ww15 ->
                 Lib.$w$c> ww1 ww2 ww9 ww10 } }) -}
9bef29ed1835da52d687e9f588f6f1bf
  $fOrdBEDPE_$c>= :: Lib.BEDPE -> Lib.BEDPE -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLL),1*U(U,1*U,A,A,A,A,A)><S(SLLLLLL),1*U(U,1*U,A,A,A,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.BEDPE) (w1 :: Lib.BEDPE) ->
                 case w of ww { Lib.BEDPE ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case w1 of ww8 { Lib.BEDPE ww9 ww10 ww11 ww12 ww13 ww14 ww15 ->
                 Lib.$w$c>= ww1 ww2 ww9 ww10 } }) -}
9bef29ed1835da52d687e9f588f6f1bf
  $fOrdBEDPE_$ccompare ::
    Lib.BEDPE -> Lib.BEDPE -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLL),1*U(U,1*U,A,A,A,A,A)><S(SLLLLLL),1*U(U,1*U,A,A,A,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.BEDPE) (w1 :: Lib.BEDPE) ->
                 case w of ww { Lib.BEDPE ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case w1 of ww8 { Lib.BEDPE ww9 ww10 ww11 ww12 ww13 ww14 ww15 ->
                 Lib.$w$ccompare1 ww1 ww2 ww9 ww10 } }) -}
9bef29ed1835da52d687e9f588f6f1bf
  $fOrdBEDPE_$cmax :: Lib.BEDPE -> Lib.BEDPE -> Lib.BEDPE
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLL),1*U(U,U,U,U,U,U,U)><S(SLLLLLL),1*U(U,U,U,U,U,U,U)>m,
     Unfolding: (\ (x :: Lib.BEDPE) (y :: Lib.BEDPE) ->
                 case x of wild { Lib.BEDPE ds6 ds7 ds8 ds9 ds10 ds11 ds12 ->
                 case y of wild1 { Lib.BEDPE ds13 ds14 ds15 ds16 ds17 ds18 ds19 ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ds6 of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ds13 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild3 {
                        GHC.Types.False -> wild
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ds7 ds14 of wild4 {
                             DEFAULT -> wild1 GHC.Types.GT -> wild } }
                   GHC.Types.True -> wild1 } } } } }) -}
9bef29ed1835da52d687e9f588f6f1bf
  $fOrdBEDPE_$cmin :: Lib.BEDPE -> Lib.BEDPE -> Lib.BEDPE
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLL),1*U(U,U,U,U,U,U,U)><S(SLLLLLL),1*U(U,U,U,U,U,U,U)>m,
     Unfolding: (\ (x :: Lib.BEDPE) (y :: Lib.BEDPE) ->
                 case x of wild { Lib.BEDPE ds6 ds7 ds8 ds9 ds10 ds11 ds12 ->
                 case y of wild1 { Lib.BEDPE ds13 ds14 ds15 ds16 ds17 ds18 ds19 ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ds6 of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ds13 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild3 {
                        GHC.Types.False -> wild1
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ds7 ds14 of wild4 {
                             DEFAULT -> wild GHC.Types.GT -> wild1 } }
                   GHC.Types.True -> wild } } } } }) -}
ec17ee0811cea74621c0d656d7cc2daf
  $fOrdBedRecord :: GHC.Classes.Ord Lib.BedRecord
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.BedRecord
                  Lib.$fEqBedRecord
                  Lib.$fOrdBedRecord_$ccompare
                  Lib.$fOrdBedRecord_$c<
                  Lib.$fOrdBedRecord_$c<=
                  Lib.$fOrdBedRecord_$c>
                  Lib.$fOrdBedRecord_$c>=
                  Lib.$fOrdBedRecord_$cmax
                  Lib.$fOrdBedRecord_$cmin -}
ec17ee0811cea74621c0d656d7cc2daf
  $fOrdBedRecord_$c< ::
    Lib.BedRecord -> Lib.BedRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(U,1*U,A,A)><S(SLLL),1*U(U,1*U,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.BedRecord) (w1 :: Lib.BedRecord) ->
                 case w of ww { Lib.BedRecord ww1 ww2 ww3 ww4 ->
                 case w1 of ww5 { Lib.BedRecord ww6 ww7 ww8 ww9 ->
                 Lib.$w$c<1 ww1 ww2 ww6 ww7 } }) -}
ec17ee0811cea74621c0d656d7cc2daf
  $fOrdBedRecord_$c<= ::
    Lib.BedRecord -> Lib.BedRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(U,1*U,A,A)><S(SLLL),1*U(U,1*U,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.BedRecord) (w1 :: Lib.BedRecord) ->
                 case w of ww { Lib.BedRecord ww1 ww2 ww3 ww4 ->
                 case w1 of ww5 { Lib.BedRecord ww6 ww7 ww8 ww9 ->
                 Lib.$w$c<=1 ww1 ww2 ww6 ww7 } }) -}
ec17ee0811cea74621c0d656d7cc2daf
  $fOrdBedRecord_$c> ::
    Lib.BedRecord -> Lib.BedRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(U,1*U,A,A)><S(SLLL),1*U(U,1*U,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.BedRecord) (w1 :: Lib.BedRecord) ->
                 case w of ww { Lib.BedRecord ww1 ww2 ww3 ww4 ->
                 case w1 of ww5 { Lib.BedRecord ww6 ww7 ww8 ww9 ->
                 Lib.$w$c>1 ww1 ww2 ww6 ww7 } }) -}
ec17ee0811cea74621c0d656d7cc2daf
  $fOrdBedRecord_$c>= ::
    Lib.BedRecord -> Lib.BedRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(U,1*U,A,A)><S(SLLL),1*U(U,1*U,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.BedRecord) (w1 :: Lib.BedRecord) ->
                 case w of ww { Lib.BedRecord ww1 ww2 ww3 ww4 ->
                 case w1 of ww5 { Lib.BedRecord ww6 ww7 ww8 ww9 ->
                 Lib.$w$c>=1 ww1 ww2 ww6 ww7 } }) -}
ec17ee0811cea74621c0d656d7cc2daf
  $fOrdBedRecord_$ccompare ::
    Lib.BedRecord -> Lib.BedRecord -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(U,1*U,A,A)><S(SLLL),1*U(U,1*U,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.BedRecord) (w1 :: Lib.BedRecord) ->
                 case w of ww { Lib.BedRecord ww1 ww2 ww3 ww4 ->
                 case w1 of ww5 { Lib.BedRecord ww6 ww7 ww8 ww9 ->
                 Lib.$w$ccompare2 ww1 ww2 ww6 ww7 } }) -}
ec17ee0811cea74621c0d656d7cc2daf
  $fOrdBedRecord_$cmax ::
    Lib.BedRecord -> Lib.BedRecord -> Lib.BedRecord
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(U,U,U,U)><S(SLLL),1*U(U,U,U,U)>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.BedRecord) (w1 :: Lib.BedRecord) ->
                 case w of ww { Lib.BedRecord ww1 ww2 ww3 ww4 ->
                 case w1 of ww5 { Lib.BedRecord ww6 ww7 ww8 ww9 ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww1 of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww6 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> Lib.BedRecord ww1 ww2 ww3 ww4
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww2 ww7 of wild2 {
                             DEFAULT -> Lib.BedRecord ww6 ww7 ww8 ww9
                             GHC.Types.GT -> Lib.BedRecord ww1 ww2 ww3 ww4 } }
                   GHC.Types.True -> Lib.BedRecord ww6 ww7 ww8 ww9 } } } } }) -}
ec17ee0811cea74621c0d656d7cc2daf
  $fOrdBedRecord_$cmin ::
    Lib.BedRecord -> Lib.BedRecord -> Lib.BedRecord
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(U,U,U,U)><S(SLLL),1*U(U,U,U,U)>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.BedRecord) (w1 :: Lib.BedRecord) ->
                 case w of ww { Lib.BedRecord ww1 ww2 ww3 ww4 ->
                 case w1 of ww5 { Lib.BedRecord ww6 ww7 ww8 ww9 ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww1 of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww6 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> Lib.BedRecord ww6 ww7 ww8 ww9
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww2 ww7 of wild2 {
                             DEFAULT -> Lib.BedRecord ww1 ww2 ww3 ww4
                             GHC.Types.GT -> Lib.BedRecord ww6 ww7 ww8 ww9 } }
                   GHC.Types.True -> Lib.BedRecord ww1 ww2 ww3 ww4 } } } } }) -}
871680c8a98548ba1071badd33bf1fbd
  $fOrdChromNameFormat :: GHC.Classes.Ord Lib.ChromNameFormat
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.ChromNameFormat
                  Lib.$fEqChromNameFormat
                  Lib.$fOrdChromNameFormat_$ccompare
                  Lib.$fOrdChromNameFormat_$c<
                  Lib.$fOrdChromNameFormat_$c<=
                  Lib.$fOrdChromNameFormat_$c>
                  Lib.$fOrdChromNameFormat_$c>=
                  Lib.$fOrdChromNameFormat_$cmax
                  Lib.$fOrdChromNameFormat_$cmin -}
871680c8a98548ba1071badd33bf1fbd
  $fOrdChromNameFormat_$c< ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.ChromNameFormat) (b :: Lib.ChromNameFormat) ->
                 case a of wild {
                   Lib.GRC
                   -> case b of wild1 {
                        Lib.GRC -> GHC.Types.False Lib.UCSC -> GHC.Types.True }
                   Lib.UCSC -> case b of wild1 { DEFAULT -> GHC.Types.False } }) -}
871680c8a98548ba1071badd33bf1fbd
  $fOrdChromNameFormat_$c<= ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.ChromNameFormat) (b :: Lib.ChromNameFormat) ->
                 case b of wild {
                   Lib.GRC
                   -> case a of wild1 {
                        Lib.GRC -> GHC.Types.True Lib.UCSC -> GHC.Types.False }
                   Lib.UCSC -> case a of wild1 { DEFAULT -> GHC.Types.True } }) -}
871680c8a98548ba1071badd33bf1fbd
  $fOrdChromNameFormat_$c> ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, True)
                (\ (a :: Lib.ChromNameFormat) (b :: Lib.ChromNameFormat) ->
                 Lib.$fOrdChromNameFormat_$c< b a) -}
871680c8a98548ba1071badd33bf1fbd
  $fOrdChromNameFormat_$c>= ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.ChromNameFormat) (b :: Lib.ChromNameFormat) ->
                 case a of wild {
                   Lib.GRC
                   -> case b of wild1 {
                        Lib.GRC -> GHC.Types.True Lib.UCSC -> GHC.Types.False }
                   Lib.UCSC -> case b of wild1 { DEFAULT -> GHC.Types.True } }) -}
871680c8a98548ba1071badd33bf1fbd
  $fOrdChromNameFormat_$ccompare ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.ChromNameFormat) (b :: Lib.ChromNameFormat) ->
                 case a of wild {
                   Lib.GRC
                   -> case b of wild1 {
                        Lib.GRC -> GHC.Types.EQ Lib.UCSC -> GHC.Types.LT }
                   Lib.UCSC
                   -> case b of wild1 {
                        Lib.GRC -> GHC.Types.GT Lib.UCSC -> GHC.Types.EQ } }) -}
871680c8a98548ba1071badd33bf1fbd
  $fOrdChromNameFormat_$cmax ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat -> Lib.ChromNameFormat
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.ChromNameFormat) (y :: Lib.ChromNameFormat) ->
                 case y of wild {
                   Lib.GRC -> x
                   Lib.UCSC -> case x of wild1 { DEFAULT -> Lib.UCSC } }) -}
871680c8a98548ba1071badd33bf1fbd
  $fOrdChromNameFormat_$cmin ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat -> Lib.ChromNameFormat
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.ChromNameFormat) (y :: Lib.ChromNameFormat) ->
                 case y of wild {
                   Lib.GRC -> case x of wild1 { DEFAULT -> Lib.GRC }
                   Lib.UCSC -> x }) -}
e84d95f7c553a7e98bb578b6a27683cc
  $fOrdMasterRecord :: GHC.Classes.Ord Lib.MasterRecord
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.MasterRecord
                  Lib.$fEqMasterRecord
                  Lib.$fOrdMasterRecord_$ccompare
                  Lib.$fOrdMasterRecord_$c<
                  Lib.$fOrdMasterRecord_$c<=
                  Lib.$fOrdMasterRecord_$c>
                  Lib.$fOrdMasterRecord_$c>=
                  Lib.$fOrdMasterRecord_$cmax
                  Lib.$fOrdMasterRecord_$cmin -}
e84d95f7c553a7e98bb578b6a27683cc
  $fOrdMasterRecord_$c< ::
    Lib.MasterRecord -> Lib.MasterRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(U,1*U,1*U,A,A,A,A,A,A,A,A,A)><S(SLLLLLLLLLLL),1*U(U,1*U,1*U,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.MasterRecord) (y :: Lib.MasterRecord) ->
                 case Lib.$fOrdMasterRecord_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True }) -}
e84d95f7c553a7e98bb578b6a27683cc
  $fOrdMasterRecord_$c<= ::
    Lib.MasterRecord -> Lib.MasterRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(U,1*U,1*U,A,A,A,A,A,A,A,A,A)><S(SLLLLLLLLLLL),1*U(U,1*U,1*U,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.MasterRecord) (y :: Lib.MasterRecord) ->
                 case Lib.$fOrdMasterRecord_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False }) -}
e84d95f7c553a7e98bb578b6a27683cc
  $fOrdMasterRecord_$c> ::
    Lib.MasterRecord -> Lib.MasterRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(U,1*U,1*U,A,A,A,A,A,A,A,A,A)><S(SLLLLLLLLLLL),1*U(U,1*U,1*U,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.MasterRecord) (y :: Lib.MasterRecord) ->
                 case Lib.$fOrdMasterRecord_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True }) -}
e84d95f7c553a7e98bb578b6a27683cc
  $fOrdMasterRecord_$c>= ::
    Lib.MasterRecord -> Lib.MasterRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(U,1*U,1*U,A,A,A,A,A,A,A,A,A)><S(SLLLLLLLLLLL),1*U(U,1*U,1*U,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.MasterRecord) (y :: Lib.MasterRecord) ->
                 case Lib.$fOrdMasterRecord_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False }) -}
e84d95f7c553a7e98bb578b6a27683cc
  $fOrdMasterRecord_$ccompare ::
    Lib.MasterRecord -> Lib.MasterRecord -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(U,1*U,1*U,A,A,A,A,A,A,A,A,A)><S(SLLLLLLLLLLL),1*U(U,1*U,1*U,A,A,A,A,A,A,A,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.MasterRecord) (w1 :: Lib.MasterRecord) ->
                 case w of ww { Lib.MasterRecord ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ->
                 case w1 of ww13 { Lib.MasterRecord ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ->
                 Lib.$w$ccompare3 ww1 ww2 ww3 ww14 ww15 ww16 } }) -}
e84d95f7c553a7e98bb578b6a27683cc
  $fOrdMasterRecord_$cmax ::
    Lib.MasterRecord -> Lib.MasterRecord -> Lib.MasterRecord
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(U,U,U,U,U,U,U,U,U,U,U,U)><S(SLLLLLLLLLLL),1*U(U,U,U,U,U,U,U,U,U,U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.MasterRecord) (y :: Lib.MasterRecord) ->
                 case Lib.$fOrdMasterRecord_$ccompare x y of wild {
                   DEFAULT -> y GHC.Types.GT -> x }) -}
e84d95f7c553a7e98bb578b6a27683cc
  $fOrdMasterRecord_$cmin ::
    Lib.MasterRecord -> Lib.MasterRecord -> Lib.MasterRecord
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(U,U,U,U,U,U,U,U,U,U,U,U)><S(SLLLLLLLLLLL),1*U(U,U,U,U,U,U,U,U,U,U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.MasterRecord) (y :: Lib.MasterRecord) ->
                 case Lib.$fOrdMasterRecord_$ccompare x y of wild {
                   DEFAULT -> x GHC.Types.GT -> y }) -}
26e2207e507d4bc5b47a3c19f626e7fd
  $fOrdMidFamily :: GHC.Classes.Ord Lib.MidFamily
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.MidFamily
                  Lib.$fEqMidFamily
                  Lib.$fOrdMidFamily_$ccompare
                  Lib.$fOrdMidFamily_$c<
                  Lib.$fOrdMidFamily_$c<=
                  Lib.$fOrdMidFamily_$c>
                  Lib.$fOrdMidFamily_$c>=
                  Lib.$fOrdMidFamily_$cmax
                  Lib.$fOrdMidFamily_$cmin -}
26e2207e507d4bc5b47a3c19f626e7fd
  $fOrdMidFamily_$c< ::
    Lib.MidFamily -> Lib.MidFamily -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLL),1*U(U,1*U,1*U,A,A,1*U,A,A,A,A)><S(SLLLLLLLLL),1*U(U,1*U,1*U,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.MidFamily) (y :: Lib.MidFamily) ->
                 case Lib.$fOrdMidFamily_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True }) -}
26e2207e507d4bc5b47a3c19f626e7fd
  $fOrdMidFamily_$c<= ::
    Lib.MidFamily -> Lib.MidFamily -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLL),1*U(U,1*U,1*U,A,A,1*U,A,A,A,A)><S(SLLLLLLLLL),1*U(U,1*U,1*U,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.MidFamily) (y :: Lib.MidFamily) ->
                 case Lib.$fOrdMidFamily_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False }) -}
26e2207e507d4bc5b47a3c19f626e7fd
  $fOrdMidFamily_$c> ::
    Lib.MidFamily -> Lib.MidFamily -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLL),1*U(U,1*U,1*U,A,A,1*U,A,A,A,A)><S(SLLLLLLLLL),1*U(U,1*U,1*U,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.MidFamily) (y :: Lib.MidFamily) ->
                 case Lib.$fOrdMidFamily_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True }) -}
26e2207e507d4bc5b47a3c19f626e7fd
  $fOrdMidFamily_$c>= ::
    Lib.MidFamily -> Lib.MidFamily -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLL),1*U(U,1*U,1*U,A,A,1*U,A,A,A,A)><S(SLLLLLLLLL),1*U(U,1*U,1*U,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.MidFamily) (y :: Lib.MidFamily) ->
                 case Lib.$fOrdMidFamily_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False }) -}
26e2207e507d4bc5b47a3c19f626e7fd
  $fOrdMidFamily_$ccompare ::
    Lib.MidFamily -> Lib.MidFamily -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLL),1*U(U,1*U,1*U,A,A,1*U,A,A,A,A)><S(SLLLLLLLLL),1*U(U,1*U,1*U,A,A,1*U,A,A,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.MidFamily) (w1 :: Lib.MidFamily) ->
                 case w of ww { Lib.MidFamily ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ->
                 case w1 of ww11 { Lib.MidFamily ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ->
                 Lib.$w$ccompare4 ww1 ww2 ww3 ww6 ww12 ww13 ww14 ww17 } }) -}
26e2207e507d4bc5b47a3c19f626e7fd
  $fOrdMidFamily_$cmax ::
    Lib.MidFamily -> Lib.MidFamily -> Lib.MidFamily
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLL),1*U(U,U,U,U,U,U,U,U,U,U)><S(SLLLLLLLLL),1*U(U,U,U,U,U,U,U,U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.MidFamily) (y :: Lib.MidFamily) ->
                 case Lib.$fOrdMidFamily_$ccompare x y of wild {
                   DEFAULT -> y GHC.Types.GT -> x }) -}
26e2207e507d4bc5b47a3c19f626e7fd
  $fOrdMidFamily_$cmin ::
    Lib.MidFamily -> Lib.MidFamily -> Lib.MidFamily
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLL),1*U(U,U,U,U,U,U,U,U,U,U)><S(SLLLLLLLLL),1*U(U,U,U,U,U,U,U,U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.MidFamily) (y :: Lib.MidFamily) ->
                 case Lib.$fOrdMidFamily_$ccompare x y of wild {
                   DEFAULT -> x GHC.Types.GT -> y }) -}
21071c975426d6ea93962a8c0a55430b
  $fOrdPairedAln :: GHC.Classes.Ord Lib.PairedAln
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.PairedAln
                  Lib.$fEqPairedAln
                  Lib.$fOrdPairedAln_$ccompare
                  Lib.$fOrdPairedAln_$c<
                  Lib.$fOrdPairedAln_$c<=
                  Lib.$fOrdPairedAln_$c>
                  Lib.$fOrdPairedAln_$c>=
                  Lib.$fOrdPairedAln_$cmax
                  Lib.$fOrdPairedAln_$cmin -}
21071c975426d6ea93962a8c0a55430b
  $fOrdPairedAln_$c< ::
    Lib.PairedAln -> Lib.PairedAln -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),A,A)><S(S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.PairedAln) (y :: Lib.PairedAln) ->
                 case Lib.$fOrdPairedAln_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True }) -}
21071c975426d6ea93962a8c0a55430b
  $fOrdPairedAln_$c<= ::
    Lib.PairedAln -> Lib.PairedAln -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),A,A)><S(S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.PairedAln) (y :: Lib.PairedAln) ->
                 case Lib.$fOrdPairedAln_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False }) -}
21071c975426d6ea93962a8c0a55430b
  $fOrdPairedAln_$c> ::
    Lib.PairedAln -> Lib.PairedAln -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),A,A)><S(S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.PairedAln) (y :: Lib.PairedAln) ->
                 case Lib.$fOrdPairedAln_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True }) -}
21071c975426d6ea93962a8c0a55430b
  $fOrdPairedAln_$c>= ::
    Lib.PairedAln -> Lib.PairedAln -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),A,A)><S(S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.PairedAln) (y :: Lib.PairedAln) ->
                 case Lib.$fOrdPairedAln_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False }) -}
21071c975426d6ea93962a8c0a55430b
  $fOrdPairedAln_$ccompare ::
    Lib.PairedAln -> Lib.PairedAln -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),A,A)><S(S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),A,A)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.PairedAln) (w1 :: Lib.PairedAln) ->
                 case w of ww { Lib.PairedAln ww1 ww2 ww3 ww4 ->
                 case ww1 of ww5 { Lib.AlignedRead ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ww36 ->
                 case w1 of ww37 { Lib.PairedAln ww38 ww39 ww40 ww41 ->
                 case ww38 of ww42 { Lib.AlignedRead ww43 ww44 ww45 ww46 ww47 ww48 ww49 ww50 ww51 ww52 ww53 ww54 ww55 ww56 ww57 ww58 ww59 ww60 ww61 ww62 ww63 ww64 ww65 ww66 ww67 ww68 ww69 ww70 ww71 ww72 ww73 ->
                 Lib.$w$ccompare5 ww8 ww9 ww11 ww2 ww45 ww46 ww48 ww39 } } } }) -}
21071c975426d6ea93962a8c0a55430b
  $fOrdPairedAln_$cmax ::
    Lib.PairedAln -> Lib.PairedAln -> Lib.PairedAln
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)><S(S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.PairedAln) (y :: Lib.PairedAln) ->
                 case Lib.$fOrdPairedAln_$ccompare x y of wild {
                   DEFAULT -> y GHC.Types.GT -> x }) -}
21071c975426d6ea93962a8c0a55430b
  $fOrdPairedAln_$cmin ::
    Lib.PairedAln -> Lib.PairedAln -> Lib.PairedAln
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)><S(S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.PairedAln) (y :: Lib.PairedAln) ->
                 case Lib.$fOrdPairedAln_$ccompare x y of wild {
                   DEFAULT -> x GHC.Types.GT -> y }) -}
56a346888d4ebe522e3d0b31a72b285d
  $fOrdUChr :: GHC.Classes.Ord Lib.UChr
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.UChr
                  Lib.$fEqUChr
                  Lib.$fOrdUChr_$ccompare
                  Lib.$fOrdUChr_$c<
                  Lib.$fOrdUChr_$c<=
                  Lib.$fOrdUChr_$c>
                  Lib.$fOrdUChr_$c>=
                  Lib.$fOrdUChr_$cmax
                  Lib.$fOrdUChr_$cmin -}
56a346888d4ebe522e3d0b31a72b285d
  $fOrdUChr_$c< :: Lib.UChr -> Lib.UChr -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.UChr) (b :: Lib.UChr) ->
                 case a of x1 { DEFAULT ->
                 case b of x2 { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x1 of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x2 of b# { DEFAULT ->
                 GHC.Prim.tagToEnum#
                   @ GHC.Types.Bool
                   (GHC.Prim.<# a# b#) } } } }) -}
56a346888d4ebe522e3d0b31a72b285d
  $fOrdUChr_$c<= :: Lib.UChr -> Lib.UChr -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.UChr) (b :: Lib.UChr) ->
                 case b of x1 { DEFAULT ->
                 case a of x2 { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x1 of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False } } } } }) -}
56a346888d4ebe522e3d0b31a72b285d
  $fOrdUChr_$c> :: Lib.UChr -> Lib.UChr -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.UChr) (b :: Lib.UChr) ->
                 case b of x1 { DEFAULT ->
                 case a of x2 { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x1 of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x2 of b# { DEFAULT ->
                 GHC.Prim.tagToEnum#
                   @ GHC.Types.Bool
                   (GHC.Prim.<# a# b#) } } } }) -}
56a346888d4ebe522e3d0b31a72b285d
  $fOrdUChr_$c>= :: Lib.UChr -> Lib.UChr -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.UChr) (b :: Lib.UChr) ->
                 case a of x1 { DEFAULT ->
                 case b of x2 { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x1 of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False } } } } }) -}
56a346888d4ebe522e3d0b31a72b285d
  $fOrdUChr_$ccompare :: Lib.UChr -> Lib.UChr -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.UChr) (b :: Lib.UChr) ->
                 case a of x1 { DEFAULT ->
                 case b of x2 { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x1 of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.GT GHC.Types.True -> GHC.Types.EQ }
                   GHC.Types.True -> GHC.Types.LT } } } } }) -}
56a346888d4ebe522e3d0b31a72b285d
  $fOrdUChr_$cmax :: Lib.UChr -> Lib.UChr -> Lib.UChr
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.UChr) (y :: Lib.UChr) ->
                 case y of x1 { DEFAULT ->
                 case x of x2 { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x1 of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False -> x1 GHC.Types.True -> x2 } } } } }) -}
56a346888d4ebe522e3d0b31a72b285d
  $fOrdUChr_$cmin :: Lib.UChr -> Lib.UChr -> Lib.UChr
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.UChr) (y :: Lib.UChr) ->
                 case y of x1 { DEFAULT ->
                 case x of x2 { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x1 of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False -> x2 GHC.Types.True -> x1 } } } } }) -}
871680c8a98548ba1071badd33bf1fbd
  $fReadChromNameFormat :: GHC.Read.Read Lib.ChromNameFormat
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.ChromNameFormat
                  Lib.$fReadChromNameFormat_$creadsPrec
                  Lib.$fReadChromNameFormat_$creadList
                  Lib.$fReadChromNameFormat1
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Lib.ChromNameFormat>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Lib.ChromNameFormat>_R)))
                  Lib.$fReadChromNameFormat_$creadListPrec -}
871680c8a98548ba1071badd33bf1fbd
  $fReadChromNameFormat1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Lib.ChromNameFormat -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2,
     Unfolding: (GHC.Read.$fRead()6
                   @ Lib.ChromNameFormat
                   Lib.$fReadChromNameFormat2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <Lib.ChromNameFormat>_R))) -}
61ca6ab6beab1d4b4dc6562d6f47a739
  $fReadChromNameFormat10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Lib.$fReadChromNameFormat11) -}
f892fb4dcb1656cae5861097f80e1726
  $fReadChromNameFormat11 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("GRC"#) -}
871680c8a98548ba1071badd33bf1fbd
  $fReadChromNameFormat12 ::
    Text.ParserCombinators.ReadP.P [Lib.ChromNameFormat]
  {- Unfolding: ((Lib.$fReadChromNameFormat_$creadListPrec
                    `cast`
                  (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                       <[Lib.ChromNameFormat]>_R)
                    GHC.Read.$fRead()8)
                   `cast`
                 (Text.ParserCombinators.ReadP.N:ReadP[0] <[Lib.ChromNameFormat]>_R)
                   @ [Lib.ChromNameFormat]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                      @ [Lib.ChromNameFormat])) -}
871680c8a98548ba1071badd33bf1fbd
  $fReadChromNameFormat2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP Lib.ChromNameFormat
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec) ->
                 GHC.Read.choose2
                   @ Lib.ChromNameFormat
                   Lib.$fReadChromNameFormat_sps
                   eta) -}
871680c8a98548ba1071badd33bf1fbd
  $fReadChromNameFormat3 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec Lib.ChromNameFormat)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec Lib.ChromNameFormat)
                   Lib.$fReadChromNameFormat4
                   (GHC.Types.[]
                      @ (GHC.Base.String,
                         Text.ParserCombinators.ReadPrec.ReadPrec Lib.ChromNameFormat))) -}
871680c8a98548ba1071badd33bf1fbd
  $fReadChromNameFormat4 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec Lib.ChromNameFormat)
  {- Strictness: m,
     Unfolding: ((Lib.$fReadChromNameFormat6,
                  Lib.$fReadChromNameFormat5
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Lib.ChromNameFormat>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Lib.ChromNameFormat>_R))))) -}
871680c8a98548ba1071badd33bf1fbd
  $fReadChromNameFormat5 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Lib.ChromNameFormat -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds6 :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (k1 :: Lib.ChromNameFormat -> Text.ParserCombinators.ReadP.P b) ->
                 k1 Lib.UCSC) -}
7387326214b4a7803b66155316bca77f
  $fReadChromNameFormat6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Lib.$fReadChromNameFormat7) -}
8d6fc0f959b41328770e752cefe22d62
  $fReadChromNameFormat7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("UCSC"#) -}
871680c8a98548ba1071badd33bf1fbd
  $fReadChromNameFormat8 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec Lib.ChromNameFormat)
  {- Strictness: m,
     Unfolding: ((Lib.$fReadChromNameFormat10,
                  Lib.$fReadChromNameFormat9
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Lib.ChromNameFormat>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Lib.ChromNameFormat>_R))))) -}
871680c8a98548ba1071badd33bf1fbd
  $fReadChromNameFormat9 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Lib.ChromNameFormat -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds6 :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (k1 :: Lib.ChromNameFormat -> Text.ParserCombinators.ReadP.P b) ->
                 k1 Lib.GRC) -}
871680c8a98548ba1071badd33bf1fbd
  $fReadChromNameFormat_$creadList ::
    Text.ParserCombinators.ReadP.ReadS [Lib.ChromNameFormat]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [Lib.ChromNameFormat]
                   Lib.$fReadChromNameFormat12) -}
871680c8a98548ba1071badd33bf1fbd
  $fReadChromNameFormat_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec [Lib.ChromNameFormat]
  {- Unfolding: (GHC.Read.list
                   @ Lib.ChromNameFormat
                   Lib.$fReadChromNameFormat1
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                       <Lib.ChromNameFormat>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                  <Lib.ChromNameFormat>_R)))) -}
871680c8a98548ba1071badd33bf1fbd
  $fReadChromNameFormat_$creadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS Lib.ChromNameFormat
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (n :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ Lib.ChromNameFormat
                   (GHC.Read.$fRead()6
                      @ Lib.ChromNameFormat
                      Lib.$fReadChromNameFormat2
                        `cast`
                      (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                <Lib.ChromNameFormat>_R))
                      n
                      @ Lib.ChromNameFormat
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ Lib.ChromNameFormat))) -}
871680c8a98548ba1071badd33bf1fbd
  $fReadChromNameFormat_sps ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec Lib.ChromNameFormat)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec Lib.ChromNameFormat)
                   Lib.$fReadChromNameFormat8
                   Lib.$fReadChromNameFormat3) -}
8edcc2498c46c20d06182ee101cd5654
  $fReadRunStats :: GHC.Read.Read Lib.RunStats
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.RunStats
                  Lib.$fReadRunStats_$creadsPrec
                  Lib.$fReadRunStats_$creadList
                  Lib.$fReadRunStats1
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Lib.RunStats>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Lib.RunStats>_R)))
                  Lib.$fReadRunStats_$creadListPrec -}
8edcc2498c46c20d06182ee101cd5654
  $fReadRunStats1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Lib.RunStats -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2,
     Unfolding: (GHC.Read.$fRead()6
                   @ Lib.RunStats
                   Lib.$fReadRunStats2
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                       <Lib.RunStats>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                  <Lib.RunStats>_R)))) -}
8edcc2498c46c20d06182ee101cd5654
  $fReadRunStats2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Lib.RunStats -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S(S),1*U(U)><L,C(U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (w1 :: Lib.RunStats -> Text.ParserCombinators.ReadP.P b) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Lib.$w$creadPrec ww1 @ b w1 }) -}
8edcc2498c46c20d06182ee101cd5654
  $fReadRunStats3 :: Text.ParserCombinators.ReadP.P [Lib.RunStats]
  {- Unfolding: ((Lib.$fReadRunStats_$creadListPrec
                    `cast`
                  (Text.ParserCombinators.ReadPrec.N:ReadPrec[0] <[Lib.RunStats]>_R)
                    GHC.Read.$fRead()8)
                   `cast`
                 (Text.ParserCombinators.ReadP.N:ReadP[0] <[Lib.RunStats]>_R)
                   @ [Lib.RunStats]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                      @ [Lib.RunStats])) -}
8edcc2498c46c20d06182ee101cd5654
  $fReadRunStats_$creadList ::
    Text.ParserCombinators.ReadP.ReadS [Lib.RunStats]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [Lib.RunStats]
                   Lib.$fReadRunStats3) -}
8edcc2498c46c20d06182ee101cd5654
  $fReadRunStats_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec [Lib.RunStats]
  {- Unfolding: (GHC.Read.list
                   @ Lib.RunStats
                   Lib.$fReadRunStats1
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                       <Lib.RunStats>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                  <Lib.RunStats>_R)))) -}
8edcc2498c46c20d06182ee101cd5654
  $fReadRunStats_$creadsPrec ::
    GHC.Types.Int -> Text.ParserCombinators.ReadP.ReadS Lib.RunStats
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (n :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ Lib.RunStats
                   (GHC.Read.$fRead()6
                      @ Lib.RunStats
                      Lib.$fReadRunStats2
                        `cast`
                      (Trans
                           (<Text.ParserCombinators.ReadPrec.Prec>_R
                            ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                          <Lib.RunStats>_R))
                           (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                     <Lib.RunStats>_R)))
                      n
                      @ Lib.RunStats
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ Lib.RunStats))) -}
21071c975426d6ea93962a8c0a55430b
  $fShowAlignedRead :: GHC.Show.Show Lib.AlignedRead
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.AlignedRead
                  Lib.$fShowAlignedRead_$cshowsPrec
                  Lib.$fShowAlignedRead_$cshow
                  Lib.$fShowAlignedRead_$cshowList -}
21071c975426d6ea93962a8c0a55430b
  $fShowAlignedRead1 :: Lib.AlignedRead -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (Lib.$fShowAlignedRead_$cshowsPrec
                   Lib.$fShowAlignedRead2) -}
c9c5aa879e07d4a196074b29e0607870
  $fShowAlignedRead2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
21071c975426d6ea93962a8c0a55430b
  $fShowAlignedRead_$cshow :: Lib.AlignedRead -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(1*U(U,U,U,U),U(U),1*U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),U,U,1*U(U,U,U,U),U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(1*U,U,U,1*U(U,U,U,U)),U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.AlignedRead) ->
                 Lib.$fShowAlignedRead_$cshowsPrec
                   Lib.$fShowAlignedRead2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
21071c975426d6ea93962a8c0a55430b
  $fShowAlignedRead_$cshowList :: [Lib.AlignedRead] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Lib.AlignedRead
                   Lib.$fShowAlignedRead1) -}
21071c975426d6ea93962a8c0a55430b
  $fShowAlignedRead_$cshowsPrec ::
    GHC.Types.Int -> Lib.AlignedRead -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S(S),1*U(U)><S,1*U(1*U(U,U,U,U),U(U),1*U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),U,U,1*U(U,U,U,U),U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(1*U,U,U,1*U(U,U,U,U)),U)> -}
9bef29ed1835da52d687e9f588f6f1bf
  $fShowBEDPE :: GHC.Show.Show Lib.BEDPE
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.BEDPE
                  Lib.$fShowBEDPE_$cshowsPrec
                  Lib.$fShowBEDPE_$cshow
                  Lib.$fShowBEDPE_$cshowList -}
9bef29ed1835da52d687e9f588f6f1bf
  $fShowBEDPE1 :: Lib.BEDPE -> GHC.Show.ShowS
  {- Arity: 1, Strictness: <S,1*U(1*U,U,U,1*U,U,U,1*U(U,U,U,U))>,
     Unfolding: (\ (w :: Lib.BEDPE) ->
                 case w of ww { Lib.BEDPE ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 Lib.$w$cshowsPrec 0# ww1 ww2 ww3 ww4 ww5 ww6 ww7 }) -}
9bef29ed1835da52d687e9f588f6f1bf
  $fShowBEDPE_$cshow :: Lib.BEDPE -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,U,U,1*U,U,U,1*U(U,U,U,U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.BEDPE) ->
                 Lib.$fShowBEDPE_$cshowsPrec
                   Lib.$fShowAlignedRead2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
9bef29ed1835da52d687e9f588f6f1bf
  $fShowBEDPE_$cshowList :: [Lib.BEDPE] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__ @ Lib.BEDPE Lib.$fShowBEDPE1) -}
9bef29ed1835da52d687e9f588f6f1bf
  $fShowBEDPE_$cshowsPrec ::
    GHC.Types.Int -> Lib.BEDPE -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S(S),1*U(U)><S,1*U(1*U,U,U,1*U,U,U,1*U(U,U,U,U))>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Lib.BEDPE) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Lib.BEDPE ww3 ww4 ww5 ww6 ww7 ww8 ww9 ->
                 Lib.$w$cshowsPrec ww1 ww3 ww4 ww5 ww6 ww7 ww8 ww9 } }) -}
ec17ee0811cea74621c0d656d7cc2daf
  $fShowBedRecord :: GHC.Show.Show Lib.BedRecord
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.BedRecord
                  Lib.$fShowBedRecord_$cshowsPrec
                  Lib.$fShowBedRecord_$cshow
                  Lib.$fShowBedRecord_$cshowList -}
ec17ee0811cea74621c0d656d7cc2daf
  $fShowBedRecord1 :: Lib.BedRecord -> GHC.Show.ShowS
  {- Arity: 1, Strictness: <S,1*U(1*U,U,U,1*U(U,U,U,U))>,
     Unfolding: (\ (w :: Lib.BedRecord) ->
                 case w of ww { Lib.BedRecord ww1 ww2 ww3 ww4 ->
                 Lib.$w$cshowsPrec1 0# ww1 ww2 ww3 ww4 }) -}
ec17ee0811cea74621c0d656d7cc2daf
  $fShowBedRecord_$cshow :: Lib.BedRecord -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,U,U,1*U(U,U,U,U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.BedRecord) ->
                 Lib.$fShowBedRecord_$cshowsPrec
                   Lib.$fShowAlignedRead2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
ec17ee0811cea74621c0d656d7cc2daf
  $fShowBedRecord_$cshowList :: [Lib.BedRecord] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Lib.BedRecord
                   Lib.$fShowBedRecord1) -}
ec17ee0811cea74621c0d656d7cc2daf
  $fShowBedRecord_$cshowsPrec ::
    GHC.Types.Int -> Lib.BedRecord -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S(S),1*U(U)><S,1*U(1*U,U,U,1*U(U,U,U,U))>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Lib.BedRecord) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Lib.BedRecord ww3 ww4 ww5 ww6 ->
                 Lib.$w$cshowsPrec1 ww1 ww3 ww4 ww5 ww6 } }) -}
871680c8a98548ba1071badd33bf1fbd
  $fShowChromNameFormat :: GHC.Show.Show Lib.ChromNameFormat
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.ChromNameFormat
                  Lib.$fShowChromNameFormat_$cshowsPrec
                  Lib.$fShowChromNameFormat_$cshow
                  Lib.$fShowChromNameFormat_$cshowList -}
871680c8a98548ba1071badd33bf1fbd
  $fShowChromNameFormat1 :: Lib.ChromNameFormat -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds6 :: Lib.ChromNameFormat) (eta :: GHC.Base.String) ->
                 case ds6 of wild {
                   Lib.GRC
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c2 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c2
                           n
                           Lib.$fReadChromNameFormat10)
                        eta
                   Lib.UCSC
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c2 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c2
                           n
                           Lib.$fReadChromNameFormat6)
                        eta }) -}
871680c8a98548ba1071badd33bf1fbd
  $fShowChromNameFormat_$cshow ::
    Lib.ChromNameFormat -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.ChromNameFormat) ->
                 case x of wild {
                   Lib.GRC -> Lib.$fReadChromNameFormat10
                   Lib.UCSC -> Lib.$fReadChromNameFormat6 }) -}
871680c8a98548ba1071badd33bf1fbd
  $fShowChromNameFormat_$cshowList ::
    [Lib.ChromNameFormat] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Lib.ChromNameFormat
                   Lib.$fShowChromNameFormat1) -}
871680c8a98548ba1071badd33bf1fbd
  $fShowChromNameFormat_$cshowsPrec ::
    GHC.Types.Int -> Lib.ChromNameFormat -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds6 :: GHC.Types.Int)
                   (ds7 :: Lib.ChromNameFormat)
                   (eta :: GHC.Base.String) ->
                 case ds7 of wild {
                   Lib.GRC
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c2 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c2
                           n
                           Lib.$fReadChromNameFormat10)
                        eta
                   Lib.UCSC
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c2 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c2
                           n
                           Lib.$fReadChromNameFormat6)
                        eta }) -}
e84d95f7c553a7e98bb578b6a27683cc
  $fShowMasterRecord :: GHC.Show.Show Lib.MasterRecord
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.MasterRecord
                  Lib.$fShowMasterRecord_$cshowsPrec
                  Lib.$fShowMasterRecord_$cshow
                  Lib.$fShowMasterRecord_$cshowList -}
e84d95f7c553a7e98bb578b6a27683cc
  $fShowMasterRecord1 :: Lib.MasterRecord -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (Lib.$fShowMasterRecord_$cshowsPrec
                   Lib.$fShowAlignedRead2) -}
e84d95f7c553a7e98bb578b6a27683cc
  $fShowMasterRecord_$cshow :: Lib.MasterRecord -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(1*U,U,U,1*U(U,U,U,U),U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.MasterRecord) ->
                 Lib.$fShowMasterRecord_$cshowsPrec
                   Lib.$fShowAlignedRead2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
e84d95f7c553a7e98bb578b6a27683cc
  $fShowMasterRecord_$cshowList ::
    [Lib.MasterRecord] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Lib.MasterRecord
                   Lib.$fShowMasterRecord1) -}
e84d95f7c553a7e98bb578b6a27683cc
  $fShowMasterRecord_$cshowsPrec ::
    GHC.Types.Int -> Lib.MasterRecord -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S(S),1*U(U)><S,1*U(1*U,U,U,1*U(U,U,U,U),U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U))> -}
26e2207e507d4bc5b47a3c19f626e7fd
  $fShowMidFamily :: GHC.Show.Show Lib.MidFamily
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.MidFamily
                  Lib.$fShowMidFamily_$cshowsPrec
                  Lib.$fShowMidFamily_$cshow
                  Lib.$fShowMidFamily_$cshowList -}
26e2207e507d4bc5b47a3c19f626e7fd
  $fShowMidFamily1 :: Lib.MidFamily -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (Lib.$fShowMidFamily_$cshowsPrec
                   Lib.$fShowAlignedRead2) -}
26e2207e507d4bc5b47a3c19f626e7fd
  $fShowMidFamily_$cshow :: Lib.MidFamily -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(1*U,U,U,1*U(U,U,U,U),U,U,U,U,U,1*U(1*U,U,U,1*U(U,U,U,U)))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.MidFamily) ->
                 Lib.$fShowMidFamily_$cshowsPrec
                   Lib.$fShowAlignedRead2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
26e2207e507d4bc5b47a3c19f626e7fd
  $fShowMidFamily_$cshowList :: [Lib.MidFamily] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Lib.MidFamily
                   Lib.$fShowMidFamily1) -}
26e2207e507d4bc5b47a3c19f626e7fd
  $fShowMidFamily_$cshowsPrec ::
    GHC.Types.Int -> Lib.MidFamily -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S(S),1*U(U)><S,1*U(1*U,U,U,1*U(U,U,U,U),U,U,U,U,U,1*U(1*U,U,U,1*U(U,U,U,U)))> -}
f06645d095bf16235fbe38a1fa974f4c
  $fShowOpts :: GHC.Show.Show Lib.Opts
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.Opts
                  Lib.$fShowOpts_$cshowsPrec
                  Lib.$fShowOpts_$cshow
                  Lib.$fShowOpts_$cshowList -}
f06645d095bf16235fbe38a1fa974f4c
  $fShowOpts1 :: Lib.Opts -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U(1*U,1*U,1*U,1*U)><L,U>,
     Unfolding: (\ (w :: Lib.Opts) (w1 :: GHC.Base.String) ->
                 case w of ww { Lib.Opts ww1 ww2 ww3 ww4 ->
                 Lib.$w$cshowsPrec2 0# ww1 ww2 ww3 ww4 w1 }) -}
4538b0586e938053184184d69ad57d07
  $fShowOpts2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("}"#) -}
bd248b5fe38be5fdf008b64e07705897
  $fShowOpts3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("outfilename = "#) -}
782f89eea06d438894d18c0f663ab79e
  $fShowOpts4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("insamfile = "#) -}
51146b1f055fa0ccacfb76b5c1c10b68
  $fShowOpts5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("incoordsfile = "#) -}
2f3fbf3ca8d6244b696928f8f7471cb5
  $fShowOpts6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("bedpeformat = "#) -}
349d2c83c59a84d9704a36ae0753d49d
  $fShowOpts7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Opts {"#) -}
f06645d095bf16235fbe38a1fa974f4c
  $fShowOpts_$cshow :: Lib.Opts -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.Opts) ->
                 Lib.$fShowOpts_$cshowsPrec
                   Lib.$fShowAlignedRead2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
f06645d095bf16235fbe38a1fa974f4c
  $fShowOpts_$cshowList :: [Lib.Opts] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__ @ Lib.Opts Lib.$fShowOpts1) -}
f06645d095bf16235fbe38a1fa974f4c
  $fShowOpts_$cshowsPrec ::
    GHC.Types.Int -> Lib.Opts -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U,1*U,1*U)><L,U>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Lib.Opts) (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Lib.Opts ww3 ww4 ww5 ww6 ->
                 Lib.$w$cshowsPrec2 ww1 ww3 ww4 ww5 ww6 w2 } }) -}
21071c975426d6ea93962a8c0a55430b
  $fShowPairedAln :: GHC.Show.Show Lib.PairedAln
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.PairedAln
                  Lib.$fShowPairedAln_$cshowsPrec
                  Lib.$fShowPairedAln_$cshow
                  Lib.$fShowPairedAln_$cshowList -}
21071c975426d6ea93962a8c0a55430b
  $fShowPairedAln1 :: Lib.PairedAln -> GHC.Show.ShowS
  {- Arity: 1,
     Strictness: <S,1*U(1*U(1*U(U,U,U,U),U(U),1*U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),U,U,1*U(U,U,U,U),U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(1*U,U,U,1*U(U,U,U,U)),U),1*U(1*U(U,U,U,U),U(U),1*U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),U,U,1*U(U,U,U,U),U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(1*U,U,U,1*U(U,U,U,U)),U),U,U)>,
     Unfolding: (\ (w :: Lib.PairedAln) ->
                 case w of ww { Lib.PairedAln ww1 ww2 ww3 ww4 ->
                 Lib.$w$cshowsPrec3 0# ww1 ww2 ww3 ww4 }) -}
21071c975426d6ea93962a8c0a55430b
  $fShowPairedAln_$cshow :: Lib.PairedAln -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(1*U(1*U(U,U,U,U),U(U),1*U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),U,U,1*U(U,U,U,U),U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(1*U,U,U,1*U(U,U,U,U)),U),1*U(1*U(U,U,U,U),U(U),1*U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),U,U,1*U(U,U,U,U),U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(1*U,U,U,1*U(U,U,U,U)),U),U,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.PairedAln) ->
                 Lib.$fShowPairedAln_$cshowsPrec
                   Lib.$fShowAlignedRead2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
21071c975426d6ea93962a8c0a55430b
  $fShowPairedAln_$cshowList :: [Lib.PairedAln] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Lib.PairedAln
                   Lib.$fShowPairedAln1) -}
21071c975426d6ea93962a8c0a55430b
  $fShowPairedAln_$cshowsPrec ::
    GHC.Types.Int -> Lib.PairedAln -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S(S),1*U(U)><S,1*U(1*U(1*U(U,U,U,U),U(U),1*U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),U,U,1*U(U,U,U,U),U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(1*U,U,U,1*U(U,U,U,U)),U),1*U(1*U(U,U,U,U),U(U),1*U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),U,U,1*U(U,U,U,U),U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(1*U,U,U,1*U(U,U,U,U)),U),U,U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Lib.PairedAln) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Lib.PairedAln ww3 ww4 ww5 ww6 ->
                 Lib.$w$cshowsPrec3 ww1 ww3 ww4 ww5 ww6 } }) -}
8edcc2498c46c20d06182ee101cd5654
  $fShowRunStats :: GHC.Show.Show Lib.RunStats
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.RunStats
                  Lib.$fShowRunStats_$cshowsPrec
                  Lib.$fShowRunStats_$cshow
                  Lib.$fShowRunStats_$cshowList -}
8edcc2498c46c20d06182ee101cd5654
  $fShowRunStats1 :: Lib.RunStats -> GHC.Show.ShowS
  {- Arity: 1, Strictness: <S,1*U(U,U,U,U,1*U(U),1*U(U))>,
     Unfolding: (\ (w :: Lib.RunStats) ->
                 case w of ww { Lib.RunStats ww1 ww2 ww3 ww4 ww5 ww6 ->
                 Lib.$w$cshowsPrec4 0# ww1 ww2 ww3 ww4 ww5 ww6 }) -}
8edcc2498c46c20d06182ee101cd5654
  $fShowRunStats_$cshow :: Lib.RunStats -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(U,U,U,U,1*U(U),1*U(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.RunStats) ->
                 Lib.$fShowRunStats_$cshowsPrec
                   Lib.$fShowAlignedRead2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
8edcc2498c46c20d06182ee101cd5654
  $fShowRunStats_$cshowList :: [Lib.RunStats] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Lib.RunStats
                   Lib.$fShowRunStats1) -}
8edcc2498c46c20d06182ee101cd5654
  $fShowRunStats_$cshowsPrec ::
    GHC.Types.Int -> Lib.RunStats -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S(S),1*U(U)><S,1*U(U,U,U,U,1*U(U),1*U(U))>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Lib.RunStats) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Lib.RunStats ww3 ww4 ww5 ww6 ww7 ww8 ->
                 Lib.$w$cshowsPrec4 ww1 ww3 ww4 ww5 ww6 ww7 ww8 } }) -}
8559d0b44695806151a5bc1692dff6d3
  $fShowSAMFlag :: GHC.Show.Show Lib.SAMFlag
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.SAMFlag
                  Lib.$fShowSAMFlag_$cshowsPrec
                  Lib.$fShowSAMFlag_$cshow
                  Lib.$fShowSAMFlag_$cshowList -}
8559d0b44695806151a5bc1692dff6d3
  $fShowSAMFlag1 :: Lib.SAMFlag -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (Lib.$fShowSAMFlag_$cshowsPrec
                   Lib.$fShowAlignedRead2) -}
8559d0b44695806151a5bc1692dff6d3
  $fShowSAMFlag_$cshow :: Lib.SAMFlag -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.SAMFlag) ->
                 Lib.$fShowSAMFlag_$cshowsPrec
                   Lib.$fShowAlignedRead2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
8559d0b44695806151a5bc1692dff6d3
  $fShowSAMFlag_$cshowList :: [Lib.SAMFlag] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Lib.SAMFlag
                   Lib.$fShowSAMFlag1) -}
8559d0b44695806151a5bc1692dff6d3
  $fShowSAMFlag_$cshowsPrec ::
    GHC.Types.Int -> Lib.SAMFlag -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U))><L,U> -}
56a346888d4ebe522e3d0b31a72b285d
  $fShowUChr :: GHC.Show.Show Lib.UChr
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.UChr
                  Lib.$fShowUChr_$cshowsPrec
                  Lib.$fShowUChr_$cshow
                  Lib.$fShowUChr_$cshowList -}
56a346888d4ebe522e3d0b31a72b285d
  $fShowUChr1 :: Lib.UChr -> GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.UChr) (s :: GHC.Base.String)[OneShot] ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c2 :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr @ GHC.Types.Char @ b c2 n (Lib.$fShowUChr_$cshow x))
                   s) -}
56a346888d4ebe522e3d0b31a72b285d
  $fShowUChr_$cshow :: Lib.UChr -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U> -}
56a346888d4ebe522e3d0b31a72b285d
  $fShowUChr_$cshowList :: [Lib.UChr] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Lib.UChr]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Lib.UChr Lib.$fShowUChr1 ls s) -}
56a346888d4ebe522e3d0b31a72b285d
  $fShowUChr_$cshowsPrec ::
    GHC.Types.Int -> Lib.UChr -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds6 :: GHC.Types.Int) (x :: Lib.UChr) (s :: GHC.Base.String) ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c2 :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr @ GHC.Types.Char @ b c2 n (Lib.$fShowUChr_$cshow x))
                   s) -}
f8dcab6ea1f93a847010ef6f2f8823d2
  $s$fApplicativeResourceT ::
    GHC.Base.Applicative
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  Lib.$s$fApplicativeResourceT_$s$fFunctorResourceT
                  (\ @ a (eta :: a) ->
                   let {
                     x :: GHC.Prim.State# GHC.Prim.RealWorld
                          -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                       {- Arity: 1 -}
                     = \ (s :: GHC.Prim.State# GHC.Prim.RealWorld) -> (# s, eta #)
                   } in
                   (\ (ds6 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                    x)
                     `cast`
                   (Trans
                        (<GHC.IORef.IORef
                            Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                         ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                        (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                  <GHC.Types.IO>_R <a>_N))))
                  (\ @ a
                     @ b
                     (ds6 :: Control.Monad.Trans.Resource.Internal.ResourceT
                               GHC.Types.IO (a -> b))
                     (ds7 :: Control.Monad.Trans.Resource.Internal.ResourceT
                               GHC.Types.IO a)
                     (r :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (ds6
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <a -> b>_N)
                           r)
                          `cast`
                        (GHC.Types.N:IO[0] <a -> b>_R)
                          s of ds8 { (#,#) ipv ipv1 ->
                   case (ds7
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <a>_N)
                           r)
                          `cast`
                        (GHC.Types.N:IO[0] <a>_R)
                          ipv of ds9 { (#,#) ipv2 ipv3 ->
                   (# ipv2, ipv1 ipv3 #) } })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   Trans
                       (<Control.Monad.Trans.Resource.Internal.ResourceT
                           GHC.Types.IO (a -> b)>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO a>_R
                        ->_R <GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                        ->_R Sym (GHC.Types.N:IO[0] <b>_R))
                       (<Control.Monad.Trans.Resource.Internal.ResourceT
                           GHC.Types.IO (a -> b)>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO a>_R
                        ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                      <GHC.Types.IO>_R <b>_N)))
                  (\ @ a
                     @ b
                     @ c2
                     (eta :: a -> b -> c2)
                     (eta1 :: Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO a)
                     (eta2 :: Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b)
                     (eta3 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (eta1
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <a>_N)
                           eta3)
                          `cast`
                        (GHC.Types.N:IO[0] <a>_R)
                          s of ds6 { (#,#) ipv ipv1 ->
                   case (eta2
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <b>_N)
                           eta3)
                          `cast`
                        (GHC.Types.N:IO[0] <b>_R)
                          ipv of ds7 { (#,#) ipv2 ipv3 ->
                   (# ipv2, eta ipv1 ipv3 #) } })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N) (c2 :: <*>_N).
                   Trans
                       (<a -> b -> c2>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO a>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b>_R
                        ->_R <GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                        ->_R Sym (GHC.Types.N:IO[0] <c2>_R))
                       (<a -> b -> c2>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO a>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b>_R
                        ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                      <GHC.Types.IO>_R <c2>_N)))
                  (\ @ a
                     @ b
                     (eta :: Control.Monad.Trans.Resource.Internal.ResourceT
                               GHC.Types.IO a)
                     (eta1 :: Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b)
                     (eta2 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (eta
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <a>_N)
                           eta2)
                          `cast`
                        (GHC.Types.N:IO[0] <a>_R)
                          s of ds6 { (#,#) ipv ipv1 ->
                   (eta1
                      `cast`
                    (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                         <GHC.Types.IO>_R <b>_N)
                      eta2)
                     `cast`
                   (GHC.Types.N:IO[0] <b>_R)
                     ipv })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   Trans
                       (<Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b>_R
                        ->_R <GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                        ->_R Sym (GHC.Types.N:IO[0] <b>_R))
                       (<Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b>_R
                        ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                      <GHC.Types.IO>_R <b>_N)))
                  (\ @ a
                     @ b
                     (eta1 :: Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO a)
                     (eta2 :: Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b)
                     (eta3 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (eta1
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <a>_N)
                           eta3)
                          `cast`
                        (GHC.Types.N:IO[0] <a>_R)
                          s of ds6 { (#,#) ipv ipv1 ->
                   case (eta2
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <b>_N)
                           eta3)
                          `cast`
                        (GHC.Types.N:IO[0] <b>_R)
                          ipv of ds7 { (#,#) ipv2 ipv3 ->
                   (# ipv2, ipv1 #) } })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   Trans
                       (<Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b>_R
                        ->_R <GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                        ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                       (<Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b>_R
                        ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                      <GHC.Types.IO>_R <a>_N))) -}
1bd715b6157906c0e76b79c4dbb66897
  $s$fApplicativeResourceT_$cpure ::
    a -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,A><S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (eta :: a) ->
                 let {
                   x :: GHC.Prim.State# GHC.Prim.RealWorld
                        -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                     {- Arity: 1 -}
                   = \ (s :: GHC.Prim.State# GHC.Prim.RealWorld) -> (# s, eta #)
                 } in
                 (\ (ds6 :: GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                  x)
                   `cast`
                 (Trans
                      (<GHC.IORef.IORef
                          Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                       ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                      (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                <GHC.Types.IO>_R <a>_N)))) -}
e6eef241c8e91af6b330c66d6314bc7d
  $s$fApplicativeResourceT_$s$fFunctorResourceT ::
    GHC.Base.Functor
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  (\ @ a
                     @ b
                     (f8 :: a -> b)
                     (ds6 :: Control.Monad.Trans.Resource.Internal.ResourceT
                               GHC.Types.IO a)
                     (r :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (ds6
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <a>_N)
                           r)
                          `cast`
                        (GHC.Types.N:IO[0] <a>_R)
                          s of ds7 { (#,#) ipv ipv1 ->
                   (# ipv, f8 ipv1 #) })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   Trans
                       (<a -> b>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO a>_R
                        ->_R <GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                        ->_R Sym (GHC.Types.N:IO[0] <b>_R))
                       (<a -> b>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO a>_R
                        ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                      <GHC.Types.IO>_R <b>_N)))
                  (\ @ a
                     @ b
                     (x :: a)
                     (eta :: Control.Monad.Trans.Resource.Internal.ResourceT
                               GHC.Types.IO b)
                     (eta1 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (eta
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <b>_N)
                           eta1)
                          `cast`
                        (GHC.Types.N:IO[0] <b>_R)
                          s of ds6 { (#,#) ipv ipv1 ->
                   (# ipv, x #) })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   Trans
                       (<a>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b>_R
                        ->_R <GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                        ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                       (<a>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b>_R
                        ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                      <GHC.Types.IO>_R <a>_N))) -}
74ac9258ea6373ec1d5f647def9c8aa0
  $s$fEq(,) ::
    GHC.Classes.Eq
      (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                  (GHC.Classes.$fEq(,)_$c==
                     @ GHC.Integer.Type.Integer
                     @ Data.ByteString.Internal.ByteString
                     GHC.Integer.Type.$fEqInteger
                     Data.ByteString.Internal.$fEqByteString)
                  (GHC.Classes.$fEq(,)_$c/=
                     @ GHC.Integer.Type.Integer
                     @ Data.ByteString.Internal.ByteString
                     GHC.Integer.Type.$fEqInteger
                     Data.ByteString.Internal.$fEqByteString) -}
edd7cdda6e934586d9b700c41f82e884
  $s$fMonadResourceT ::
    GHC.Base.Monad
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  Lib.$s$fApplicativeResourceT
                  (\ @ a
                     @ b
                     (ds6 :: Control.Monad.Trans.Resource.Internal.ResourceT
                               GHC.Types.IO a)
                     (f8 :: a
                            -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO b)
                     (r :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (ds6
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <a>_N)
                           r)
                          `cast`
                        (GHC.Types.N:IO[0] <a>_R)
                          s of ds7 { (#,#) ipv ipv1 ->
                   ((f8 ipv1)
                      `cast`
                    (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                         <GHC.Types.IO>_R <b>_N)
                      r)
                     `cast`
                   (GHC.Types.N:IO[0] <b>_R)
                     ipv })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   Trans
                       (<Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                        ->_R <a
                              -> Control.Monad.Trans.Resource.Internal.ResourceT
                                   GHC.Types.IO b>_R
                        ->_R <GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                        ->_R Sym (GHC.Types.N:IO[0] <b>_R))
                       (<Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                        ->_R <a
                              -> Control.Monad.Trans.Resource.Internal.ResourceT
                                   GHC.Types.IO b>_R
                        ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                      <GHC.Types.IO>_R <b>_N)))
                  Lib.$s$fMonadResourceT_$s$fMonadResourceT_$c>>
                  (\ @ a (eta :: a) ->
                   let {
                     x :: GHC.Prim.State# GHC.Prim.RealWorld
                          -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                       {- Arity: 1 -}
                     = \ (s :: GHC.Prim.State# GHC.Prim.RealWorld) -> (# s, eta #)
                   } in
                   (\ (ds6 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                    x)
                     `cast`
                   (Trans
                        (<GHC.IORef.IORef
                            Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                         ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                        (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                  <GHC.Types.IO>_R <a>_N))))
                  (\ @ a ->
                   GHC.Err.errorWithoutStackTrace
                     @ 'GHC.Types.LiftedRep
                     @ (Control.Monad.Trans.Resource.Internal.ResourceT
                          GHC.Types.IO a)) -}
6d57cc829fd0fab2732d79b32a1fced8
  $s$fMonadResourceT_$s$fMonadResourceT_$c>> ::
    Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
    -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO b
    -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO b
  {- Arity: 4, HasNoCafRefs,
     Strictness: <C(C(S(SL))),1*C1(C1(U(U,A)))><L,1*C1(C1(U(U,U)))><L,U><S,U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ a
                   @ b
                   (m109 :: Control.Monad.Trans.Resource.Internal.ResourceT
                              GHC.Types.IO a)
                   (k1 :: Control.Monad.Trans.Resource.Internal.ResourceT
                            GHC.Types.IO b)
                   (r :: GHC.IORef.IORef
                           Control.Monad.Trans.Resource.Internal.ReleaseMap)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (m109
                         `cast`
                       (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                            <GHC.Types.IO>_R <a>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0] <a>_R)
                        s of ds6 { (#,#) ipv ipv1 ->
                 (k1
                    `cast`
                  (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                       <GHC.Types.IO>_R <b>_N)
                    r)
                   `cast`
                 (GHC.Types.N:IO[0] <b>_R)
                   ipv })
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N).
                 Trans
                     (<Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                      ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                              GHC.Types.IO b>_R
                      ->_R <GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                      ->_R Sym (GHC.Types.N:IO[0] <b>_R))
                     (<Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                      ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                              GHC.Types.IO b>_R
                      ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                    <GHC.Types.IO>_R <b>_N))) -}
271c64ad17b03030d682581e24b78777
  $sfromList :: [(Lib.UChr, a)] -> Data.Map.Internal.Map Lib.UChr a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a (ds6 :: [(Lib.UChr, a)]) ->
                 case ds6 of wild {
                   [] -> Data.Map.Internal.Tip @ Lib.UChr @ a
                   : ds7 ds8
                   -> case ds7 of wild1 { (,) kx x ->
                      case ds8 of wild2 {
                        []
                        -> case x of x1 { DEFAULT ->
                           case kx of dt { DEFAULT ->
                           Data.Map.Internal.Bin
                             @ Lib.UChr
                             @ a
                             1#
                             dt
                             x1
                             (Data.Map.Internal.Tip @ Lib.UChr @ a)
                             (Data.Map.Internal.Tip @ Lib.UChr @ a) } }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds9 ->
                           case GHC.Prim.dataToTag# @ Lib.UChr kx of a# { DEFAULT ->
                           case GHC.Prim.dataToTag# @ Lib.UChr ky of b# { DEFAULT ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<# a# b#) of wild4 {
                             GHC.Types.False
                             -> case x of x0 { DEFAULT ->
                                Lib.$sfromList1
                                  @ a
                                  (Data.Map.Internal.Bin
                                     @ Lib.UChr
                                     @ a
                                     1#
                                     kx
                                     x0
                                     (Data.Map.Internal.Tip @ Lib.UChr @ a)
                                     (Data.Map.Internal.Tip @ Lib.UChr @ a))
                                  wild2 }
                             GHC.Types.True
                             -> case x of x0 { DEFAULT ->
                                Lib.$wpoly_go8
                                  @ a
                                  1#
                                  (Data.Map.Internal.Bin
                                     @ Lib.UChr
                                     @ a
                                     1#
                                     kx
                                     x0
                                     (Data.Map.Internal.Tip @ Lib.UChr @ a)
                                     (Data.Map.Internal.Tip @ Lib.UChr @ a))
                                  wild2 } } } } } } } }) -}
00eb1f1bcf558014c4e7358595b92bfa
  $sfromList1 ::
    Data.Map.Internal.Map Lib.UChr a
    -> [(Lib.UChr, a)] -> Data.Map.Internal.Map Lib.UChr a
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
16b4fcd5a9915fc204807b6403ca7609
  $sfromList2 ::
    [(GHC.Types.Int, a)] -> Data.Map.Internal.Map GHC.Types.Int a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a (ds6 :: [(GHC.Types.Int, a)]) ->
                 case ds6 of wild {
                   [] -> Data.Map.Internal.Tip @ GHC.Types.Int @ a
                   : ds7 ds8
                   -> case ds7 of wild1 { (,) kx x ->
                      case ds8 of wild2 {
                        []
                        -> case x of x1 { DEFAULT ->
                           case kx of dt { GHC.Types.I# ipv ->
                           Data.Map.Internal.Bin
                             @ GHC.Types.Int
                             @ a
                             1#
                             dt
                             x1
                             (Data.Map.Internal.Tip @ GHC.Types.Int @ a)
                             (Data.Map.Internal.Tip @ GHC.Types.Int @ a) } }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds9 ->
                           case kx of wild4 { GHC.Types.I# x1 ->
                           case ky of wild5 { GHC.Types.I# y ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.>=# x1 y) of wild6 {
                             GHC.Types.False
                             -> case x of x0 { DEFAULT ->
                                Lib.$wpoly_go1
                                  @ a
                                  1#
                                  (Data.Map.Internal.Bin
                                     @ GHC.Types.Int
                                     @ a
                                     1#
                                     wild4
                                     x0
                                     (Data.Map.Internal.Tip @ GHC.Types.Int @ a)
                                     (Data.Map.Internal.Tip @ GHC.Types.Int @ a))
                                  wild2 }
                             GHC.Types.True
                             -> case x of x0 { DEFAULT ->
                                Lib.$sfromList3
                                  @ a
                                  (Data.Map.Internal.Bin
                                     @ GHC.Types.Int
                                     @ a
                                     1#
                                     wild4
                                     x0
                                     (Data.Map.Internal.Tip @ GHC.Types.Int @ a)
                                     (Data.Map.Internal.Tip @ GHC.Types.Int @ a))
                                  wild2 } } } } } } } }) -}
8a5a56c958b5349cdb4a14531803b767
  $sfromList3 ::
    Data.Map.Internal.Map GHC.Types.Int a
    -> [(GHC.Types.Int, a)] -> Data.Map.Internal.Map GHC.Types.Int a
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
e33ef73406df39f2c33740e1d88623b6
  $sfromList4 :: [Lib.UChr] -> Data.Set.Internal.Set Lib.UChr
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds6 :: [Lib.UChr]) ->
                 case ds6 of wild {
                   [] -> Data.Set.Internal.Tip @ Lib.UChr
                   : x ds7
                   -> case ds7 of wild1 {
                        []
                        -> case x of dt { DEFAULT ->
                           Data.Set.Internal.Bin
                             @ Lib.UChr
                             1#
                             dt
                             (Data.Set.Internal.Tip @ Lib.UChr)
                             (Data.Set.Internal.Tip @ Lib.UChr) }
                        : ipv ipv1
                        -> case GHC.Prim.dataToTag# @ Lib.UChr x of a# { DEFAULT ->
                           case GHC.Prim.dataToTag# @ Lib.UChr ipv of b# { DEFAULT ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<# a# b#) of wild2 {
                             GHC.Types.False
                             -> Lib.$sfromList_go4
                                  (Data.Set.Internal.Bin
                                     @ Lib.UChr
                                     1#
                                     x
                                     (Data.Set.Internal.Tip @ Lib.UChr)
                                     (Data.Set.Internal.Tip @ Lib.UChr))
                                  wild1
                             GHC.Types.True
                             -> Lib.$wgo3
                                  1#
                                  (Data.Set.Internal.Bin
                                     @ Lib.UChr
                                     1#
                                     x
                                     (Data.Set.Internal.Tip @ Lib.UChr)
                                     (Data.Set.Internal.Tip @ Lib.UChr))
                                  wild1 } } } } }) -}
b740346327b7261c7deab44a31e7e736
  $sfromList_go4 ::
    Data.Set.Internal.Set Lib.UChr
    -> [Lib.UChr] -> Data.Set.Internal.Set Lib.UChr
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
44b5b629148ca7c529ba5b397070933d
  $sinsert_$sgo3 ::
    Lib.UChr
    -> Lib.UChr
    -> Data.Set.Internal.Set Lib.UChr
    -> Data.Set.Internal.Set Lib.UChr
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U> -}
4f7ccb68c9f52b80d9034e4c09ce779a
  $sinsert_$sgo8 ::
    Lib.UChr
    -> a1
    -> Data.Map.Internal.Map Lib.UChr a1
    -> Data.Map.Internal.Map Lib.UChr a1
  {- Arity: 3, Strictness: <S,1*U><S,1*U><S,1*U> -}
733366953d77aae0f9e8c86a7a6fbd14
  $slookup1 ::
    Lib.UChr -> Data.Map.Internal.Map Lib.UChr a -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
41e614f2df378885773302e26d777635
  $tc'AlignedRead :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9552633267155250232##
                   3572224129562663338##
                   Lib.$trModule
                   Lib.$tc'AlignedRead2
                   0#
                   Lib.$tc'AlignedRead1) -}
a1725a3cedc1901d804b8a6c7c2b65e3
  $tc'AlignedRead1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
abf2f6f02e7a9f335f960669e35a77d8
  $tc'AlignedRead2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'AlignedRead3) -}
2a0c09bff0f742196452ea6fa9c7158f
  $tc'AlignedRead3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'AlignedRead"#) -}
56f58785fc96e6e32b4a159e6ed24cd9
  $tc'BEDPE :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14560275525205701614##
                   2294350631783398209##
                   Lib.$trModule
                   Lib.$tc'BEDPE2
                   0#
                   Lib.$tc'BEDPE1) -}
9e273f88ed96c345bfb7be724573d670
  $tc'BEDPE1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
455e5a5bce5eaba338b927b8bbb6c2c5
  $tc'BEDPE2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'BEDPE3) -}
9ed13b6fc5311b04300b539c6057ee15
  $tc'BEDPE3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'BEDPE"#) -}
2dbac4a5f4265a79ec4d73c67cc50478
  $tc'BedRecord :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6768546262490594595##
                   17333158870159744940##
                   Lib.$trModule
                   Lib.$tc'BedRecord2
                   0#
                   Lib.$tc'BedRecord1) -}
05bfd35f6fe80a85bf84d65dbe0bb414
  $tc'BedRecord1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
457e9eea2307ba57d57e5bdce894ae88
  $tc'BedRecord2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'BedRecord3) -}
8bb47c313c5d255e5a03d65ff6722d49
  $tc'BedRecord3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'BedRecord"#) -}
1a3562ce66263631273d5997579261d1
  $tc'C1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12404806993039127864##
                   10241293879657875586##
                   Lib.$trModule
                   Lib.$tc'C30
                   0#
                   Lib.$tc'C29) -}
7292760ee3205b35978e90b9c99f9c7a
  $tc'C10 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13405808112792765462##
                   14007381589444538343##
                   Lib.$trModule
                   Lib.$tc'C32
                   0#
                   Lib.$tc'C29) -}
405d10649f5c3d853d0e114668e8883c
  $tc'C11 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11373337150216641096##
                   8581633146954402311##
                   Lib.$trModule
                   Lib.$tc'C34
                   0#
                   Lib.$tc'C29) -}
d54bb613c64ff8974657fe21467757c1
  $tc'C12 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3061959215463183117##
                   18406137683034967546##
                   Lib.$trModule
                   Lib.$tc'C36
                   0#
                   Lib.$tc'C29) -}
5817ee278074b54f7aea24a031134256
  $tc'C13 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3763597012070030899##
                   15558429453590457544##
                   Lib.$trModule
                   Lib.$tc'C38
                   0#
                   Lib.$tc'C29) -}
27a5e4f10f990c7ecf88c064235e2ac0
  $tc'C14 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18269951642535629178##
                   2330316554257703983##
                   Lib.$trModule
                   Lib.$tc'C40
                   0#
                   Lib.$tc'C29) -}
f39343b23801c06f6f43cfdcc4b5119f
  $tc'C15 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1544341055150203184##
                   8214807702005168728##
                   Lib.$trModule
                   Lib.$tc'C42
                   0#
                   Lib.$tc'C29) -}
c33fdcdb3a90f6ebd2bf13f86494d3b2
  $tc'C16 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8140848940194162121##
                   15362690283046859505##
                   Lib.$trModule
                   Lib.$tc'C44
                   0#
                   Lib.$tc'C29) -}
1e8aa5f872f32b73daf02c9650724598
  $tc'C17 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1038431145874696553##
                   7580594897575700359##
                   Lib.$trModule
                   Lib.$tc'C46
                   0#
                   Lib.$tc'C29) -}
1da40454532eed76a61c3d96dcea567d
  $tc'C18 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2450982311906637592##
                   14698074232845701830##
                   Lib.$trModule
                   Lib.$tc'C48
                   0#
                   Lib.$tc'C29) -}
b4d7734c68b0d5e4732fa5d87ac96a53
  $tc'C19 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2699613147606315814##
                   15919306096950012691##
                   Lib.$trModule
                   Lib.$tc'C50
                   0#
                   Lib.$tc'C29) -}
111cac5721150cb45a42d5e05ba581d0
  $tc'C2 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3597308656141959222##
                   16883635286381141205##
                   Lib.$trModule
                   Lib.$tc'C52
                   0#
                   Lib.$tc'C29) -}
cfcf716eb3cdabcf8f742ddffb4d7fdc
  $tc'C20 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10068064835530715550##
                   1174161471673662905##
                   Lib.$trModule
                   Lib.$tc'C54
                   0#
                   Lib.$tc'C29) -}
0c2f09abcc482c64f4aaf90af9d7e9f9
  $tc'C21 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14526738878701053077##
                   1144288368898610298##
                   Lib.$trModule
                   Lib.$tc'C56
                   0#
                   Lib.$tc'C29) -}
77ea114b8583af7b0d6c64cfe5481184
  $tc'C22 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5941675787864700696##
                   16706564332780830853##
                   Lib.$trModule
                   Lib.$tc'C58
                   0#
                   Lib.$tc'C29) -}
07dec25282407306da57dd5140acff8b
  $tc'C29 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
c6573c1e223f77a6941bad61ad29dad0
  $tc'C3 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12498471873417404449##
                   8329486257071941216##
                   Lib.$trModule
                   Lib.$tc'C60
                   0#
                   Lib.$tc'C29) -}
47bec2a0bc12c4cb49cb0454d7292d68
  $tc'C30 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C31) -}
ebaca170c963109484a3d58df1253e30
  $tc'C31 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C1"#) -}
32ce28a2025562d3b1e74215892d7288
  $tc'C32 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C33) -}
58e325f4cec8b28a4ebb7a3fdd4084e0
  $tc'C33 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C10"#) -}
5b3aa24528b0b1fe24d5ae158499a4e8
  $tc'C34 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C35) -}
50a178f1d88180c4217c69d7afed74a0
  $tc'C35 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C11"#) -}
b0f463a52177d22971fb3e23e9f6e848
  $tc'C36 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C37) -}
125259fb51941e541dbbfc7297936070
  $tc'C37 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C12"#) -}
4a66bdf4ad86330db128dda4157a55d4
  $tc'C38 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C39) -}
9662966fd240a5bd15b48a655d324bc2
  $tc'C39 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C13"#) -}
a5b282712641ea91f50885bdf83f9cc7
  $tc'C4 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8529091189243697946##
                   10049884655658131930##
                   Lib.$trModule
                   Lib.$tc'C62
                   0#
                   Lib.$tc'C29) -}
55fd515094004bc3cee9a8b5b19933fc
  $tc'C40 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C41) -}
cb85d84673abb20629de92eed1ad42b3
  $tc'C41 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C14"#) -}
f7f12669f40a3c7d4abe98fdb5e18ecf
  $tc'C42 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C43) -}
0f6d31c3c8565be9d82fc5dbb3b14cd0
  $tc'C43 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C15"#) -}
f7f069b89ab7bbf56da1030a45410c5d
  $tc'C44 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C45) -}
618e5a25d84ec62bc17d163a3707bc22
  $tc'C45 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C16"#) -}
5edde9a1f87afaf8c7f514e8d47e6505
  $tc'C46 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C47) -}
50d1c3523ae496e8c2f2bb7a8e28e4b2
  $tc'C47 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C17"#) -}
614e314fa64204f6b3f20be3278a0298
  $tc'C48 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C49) -}
75f8d9733c50ccf845e4ca4c94711c3c
  $tc'C49 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C18"#) -}
73b9a3ffe264034ab0b68f5d019d2490
  $tc'C5 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9332953847929886230##
                   13884781930277145249##
                   Lib.$trModule
                   Lib.$tc'C64
                   0#
                   Lib.$tc'C29) -}
f314da2b2e902cd20d2feffb1c4cfde1
  $tc'C50 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C51) -}
f6bc68827d9caeed2dac07fda2da8a35
  $tc'C51 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C19"#) -}
92b21b7dcc118cd5f909a9a50d6d1491
  $tc'C52 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C53) -}
6d63327007d0aa6b7db58879527e231d
  $tc'C53 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C2"#) -}
51ce85a48cf39cf65a34b99a91c6ead1
  $tc'C54 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C55) -}
095bf22f0ac5db6fa8520d35c50d0a62
  $tc'C55 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C20"#) -}
cb34d4cfac5fd22a5dcf338caad98d2b
  $tc'C56 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C57) -}
e7f94ddaefc7af8f185c112510f2ecd2
  $tc'C57 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C21"#) -}
47bd4aa248d1ba413c3f7f5c6a9e93a3
  $tc'C58 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C59) -}
e2e403f78141d8cbe5b3027210d9f459
  $tc'C59 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C22"#) -}
a07196dd33392eaf5358c2ea65b5f048
  $tc'C6 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10147052034260152754##
                   9818719905360635118##
                   Lib.$trModule
                   Lib.$tc'C66
                   0#
                   Lib.$tc'C29) -}
0b9835a9d0231df0b14c2216036edb73
  $tc'C60 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C61) -}
a0454964c40ddad1fd6532c77d147661
  $tc'C61 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C3"#) -}
c892a18d39914b595d869daf3efcaa04
  $tc'C62 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C63) -}
5ab95347673b5864de2fa1752d4ebfb1
  $tc'C63 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C4"#) -}
fd33796db7907d144e7231de533d6233
  $tc'C64 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C65) -}
567bcd904a3162b9be45dd9360fe8867
  $tc'C65 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C5"#) -}
a9175e66e02b5401f0266055078fe769
  $tc'C66 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C67) -}
e5e376f846b98196943e859a50bb7de8
  $tc'C67 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C6"#) -}
16bc0a4fa39645326d979820a334c372
  $tc'C68 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C69) -}
702ca9cad16e843fde05986dcd6cdcc9
  $tc'C69 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C7"#) -}
decdc914183ec18c397e3c459b74e559
  $tc'C7 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2565034087333144159##
                   3899772336284075080##
                   Lib.$trModule
                   Lib.$tc'C68
                   0#
                   Lib.$tc'C29) -}
25e4181a25ecae3c84f58db72c06bab9
  $tc'C70 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C71) -}
585d659357ce3ea827707dc1e54c5ccf
  $tc'C71 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C8"#) -}
60c1ee5e9075e5649ec19eefebe8358e
  $tc'C72 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C73) -}
4b81c82630b0e1ec5715a59160c86263
  $tc'C73 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C9"#) -}
7365ab582913d0b32b7b75b4ad49a540
  $tc'C8 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   477178018239483483##
                   11051472793033952304##
                   Lib.$trModule
                   Lib.$tc'C70
                   0#
                   Lib.$tc'C29) -}
d41d802df3822549d2db586a1256a01e
  $tc'C9 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14280179394685628410##
                   10907212944845569129##
                   Lib.$trModule
                   Lib.$tc'C72
                   0#
                   Lib.$tc'C29) -}
c4bb9ed1987c06df66495a00f173b8f2
  $tc'CMT :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16462572263423228131##
                   10854858775294737178##
                   Lib.$trModule
                   Lib.$tc'CMT1
                   0#
                   Lib.$tc'C29) -}
f091fa1925cdcc5c66d51ca45952ae30
  $tc'CMT1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'CMT2) -}
26b2fe4cc4a36c18c2bd76e6146d1fee
  $tc'CMT2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'CMT"#) -}
f99ef62ce0423dbc2c17b6499cb2bdcc
  $tc'CX :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15398032581382298540##
                   15126193654024496477##
                   Lib.$trModule
                   Lib.$tc'CX1
                   0#
                   Lib.$tc'C29) -}
f0052116d8e0f178993e91e3726cba6c
  $tc'CX1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'CX2) -}
6a3233e4a24c592e3077459cf9287702
  $tc'CX2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'CX"#) -}
a2e3a770a0763988c99f374d3ea5e32c
  $tc'CY :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2722142668500305166##
                   7519536823263311731##
                   Lib.$trModule
                   Lib.$tc'CY1
                   0#
                   Lib.$tc'C29) -}
eb5d23b47fe78a0417454785ea20d13f
  $tc'CY1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'CY2) -}
3b365f8f807f127d4ccc7788465a5dee
  $tc'CY2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'CY"#) -}
1437d5705b6e54c8e30601e0af64d039
  $tc'Chr1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9809225504607681699##
                   12821760541468730316##
                   Lib.$trModule
                   Lib.$tc'Chr29
                   0#
                   Lib.$tc'C29) -}
0876c64210271ce4ed7d922e0a90a176
  $tc'Chr10 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7669648711016411164##
                   2077110673340552807##
                   Lib.$trModule
                   Lib.$tc'Chr31
                   0#
                   Lib.$tc'C29) -}
98cfc83f5c9ce3f73948c17dd4de7878
  $tc'Chr11 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1667211725889043359##
                   1264255149482308140##
                   Lib.$trModule
                   Lib.$tc'Chr33
                   0#
                   Lib.$tc'C29) -}
c6eda3e2953a2e621bfd3d38b18008a9
  $tc'Chr12 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8677919693595076579##
                   1494122997010486873##
                   Lib.$trModule
                   Lib.$tc'Chr35
                   0#
                   Lib.$tc'C29) -}
32e6768737fe38ec2351e6ab6beb6ff8
  $tc'Chr13 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12012780446366843366##
                   4487947421516136783##
                   Lib.$trModule
                   Lib.$tc'Chr37
                   0#
                   Lib.$tc'C29) -}
f5169162cba8fa43b43e3001ff3edf2d
  $tc'Chr14 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5454923231903899228##
                   13083084887625314681##
                   Lib.$trModule
                   Lib.$tc'Chr39
                   0#
                   Lib.$tc'C29) -}
b216984c5021ac38cedf71f920826e80
  $tc'Chr15 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14478994511163709943##
                   15425263692233079488##
                   Lib.$trModule
                   Lib.$tc'Chr41
                   0#
                   Lib.$tc'C29) -}
f1c39599f564db73bdc3863cfd046f01
  $tc'Chr16 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16987574008378915099##
                   11654948337750385034##
                   Lib.$trModule
                   Lib.$tc'Chr43
                   0#
                   Lib.$tc'C29) -}
6ef9d72b3d65491c40f60b0af2505dc7
  $tc'Chr17 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17820381931712532662##
                   17055501375938698619##
                   Lib.$trModule
                   Lib.$tc'Chr45
                   0#
                   Lib.$tc'C29) -}
643fccba9b538512f67e6321e97fb7ed
  $tc'Chr18 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6362078224052649841##
                   8191479352056731019##
                   Lib.$trModule
                   Lib.$tc'Chr47
                   0#
                   Lib.$tc'C29) -}
7a0bb9484c751703ee4af0af8c1e55c7
  $tc'Chr19 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14488275858183270089##
                   5334177816991657248##
                   Lib.$trModule
                   Lib.$tc'Chr49
                   0#
                   Lib.$tc'C29) -}
67489e3544f2edcc4d672a86876450d9
  $tc'Chr2 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16471921668745959703##
                   10066157871280735067##
                   Lib.$trModule
                   Lib.$tc'Chr51
                   0#
                   Lib.$tc'C29) -}
5a8382a3f7014d7aec2b7b190ae3c2b7
  $tc'Chr20 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10405252241195899981##
                   13861593864245481301##
                   Lib.$trModule
                   Lib.$tc'Chr53
                   0#
                   Lib.$tc'C29) -}
e69d9f5dd7e0ebb432b0cc6775f80c4b
  $tc'Chr21 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6352710850291225810##
                   16565414382385400267##
                   Lib.$trModule
                   Lib.$tc'Chr55
                   0#
                   Lib.$tc'C29) -}
dd9ead41a417847bbde912dde2a63cf6
  $tc'Chr22 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7849323945388359815##
                   9200847318449402144##
                   Lib.$trModule
                   Lib.$tc'Chr57
                   0#
                   Lib.$tc'C29) -}
5fdaf00f2fe96be3ecfa168431823570
  $tc'Chr29 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr30) -}
9f2953a5f4a8a9420a1277823070899d
  $tc'Chr3 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14449300783092623882##
                   5787569912238082173##
                   Lib.$trModule
                   Lib.$tc'Chr59
                   0#
                   Lib.$tc'C29) -}
f600ce15911d27ad77985b07a8f7ac67
  $tc'Chr30 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr1"#) -}
ec9f2436044818513010000a85e71110
  $tc'Chr31 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr32) -}
6ccba145591c66ab8ab046fdd44d03d7
  $tc'Chr32 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr10"#) -}
0202097406bbf1c1ee448cdaf1c31e45
  $tc'Chr33 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr34) -}
57b6158eafed0dd70e41c237a91aa95f
  $tc'Chr34 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr11"#) -}
0314e17aea55bd21c453b90aa62f6ec2
  $tc'Chr35 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr36) -}
365be80607b97117fb7be18f819246c3
  $tc'Chr36 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr12"#) -}
8d7d46ba2a0b4a6145011d649a7b577b
  $tc'Chr37 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr38) -}
2bda4c564db37f81810d6f4079cd607c
  $tc'Chr38 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr13"#) -}
d75545553558e19c3e4945f4d1238df2
  $tc'Chr39 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr40) -}
f5385cc921ab3368d0d6422ab85a187b
  $tc'Chr4 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6185008852736979989##
                   2259432917650192683##
                   Lib.$trModule
                   Lib.$tc'Chr61
                   0#
                   Lib.$tc'C29) -}
6e19987e6bfbc36277cc6248153d95bd
  $tc'Chr40 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr14"#) -}
b6ef454c407d2f113b61373caa62d02d
  $tc'Chr41 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr42) -}
bb40f120f015ba60fbed7bdad4924ccb
  $tc'Chr42 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr15"#) -}
93a4e7ef95778c37e578db35d7802fff
  $tc'Chr43 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr44) -}
a1cd48c36fbb813658f6778ac603cb33
  $tc'Chr44 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr16"#) -}
152793e56203f016f62ee3461a4cfb33
  $tc'Chr45 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr46) -}
23df0fa64cb0fb408dcef5a38cb293a2
  $tc'Chr46 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr17"#) -}
bcd9dcd50f3c3863cddd512011f4f19d
  $tc'Chr47 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr48) -}
22a48189638dded388bed373e4d508a4
  $tc'Chr48 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr18"#) -}
858ed2051ac517c0a7135a7bf0993eed
  $tc'Chr49 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr50) -}
333e901717619659f57471a9f205e5d4
  $tc'Chr5 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16161879110308972093##
                   16391851660242411279##
                   Lib.$trModule
                   Lib.$tc'Chr63
                   0#
                   Lib.$tc'C29) -}
d2cd1056d926f63d3d1840060b49b7c8
  $tc'Chr50 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr19"#) -}
982000431bfd0a46d5ddf2c0420f275d
  $tc'Chr51 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr52) -}
50954bb2adbfb9a12a96a45d352f0443
  $tc'Chr52 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr2"#) -}
c76c7b530e7ef5a4fbbe138013d2a7a6
  $tc'Chr53 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr54) -}
225d7ded211bba80f132990b803bcc48
  $tc'Chr54 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr20"#) -}
7b67fdd0458500bfa5d2501f0b7125ca
  $tc'Chr55 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr56) -}
443e09823f9050a140cde637a40ee3d2
  $tc'Chr56 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr21"#) -}
269bfc05db8c5ec03d9acbc4d61effe3
  $tc'Chr57 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr58) -}
39e45d661009cdb55998cce6b4f6023a
  $tc'Chr58 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr22"#) -}
e8ccac77d6eb50bbcb4497daa010a4af
  $tc'Chr59 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr60) -}
863cfe02403e147bfd372dd8c706b730
  $tc'Chr6 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5974946878196512920##
                   2302309641251067566##
                   Lib.$trModule
                   Lib.$tc'Chr65
                   0#
                   Lib.$tc'C29) -}
e02ac3d928ced58ec90734ae59533fbd
  $tc'Chr60 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr3"#) -}
eedf3f739bf7d2c56a4585ab892fdd47
  $tc'Chr61 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr62) -}
e536bcba67e29d82173787493b8394d6
  $tc'Chr62 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr4"#) -}
ca5b6dac002d9b42b2c6a51ad136cc32
  $tc'Chr63 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr64) -}
d80c1d803eb24c89fa6eba24daaf1204
  $tc'Chr64 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr5"#) -}
c8855604bcd0de904d5c0c84b40c9b62
  $tc'Chr65 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr66) -}
9d8c529cd17983247cc75e3ce5e33a99
  $tc'Chr66 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr6"#) -}
ae09dc2e76c8644ad19adf0bf7e1ea04
  $tc'Chr67 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr68) -}
79bbfb47795272eac5b85d538671142a
  $tc'Chr68 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr7"#) -}
04bc0090866acde18f58344c819045dc
  $tc'Chr69 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr70) -}
121394c5ad16066134d394b814daee7e
  $tc'Chr7 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10702835504387507013##
                   11259130318792758327##
                   Lib.$trModule
                   Lib.$tc'Chr67
                   0#
                   Lib.$tc'C29) -}
8e0a3225612a2727d66ca46ed2798ca1
  $tc'Chr70 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr8"#) -}
a0c803ec9f0ca19bc6d003421137d379
  $tc'Chr71 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr72) -}
2cd4569f21c3a7e1948ad152a9756c03
  $tc'Chr72 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr9"#) -}
306743a25588b672a7a7f9a1830cb11f
  $tc'Chr8 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10457494440670485507##
                   4575066639925705420##
                   Lib.$trModule
                   Lib.$tc'Chr69
                   0#
                   Lib.$tc'C29) -}
63da5f94b6ffcaf0e15a878dab85c76c
  $tc'Chr9 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16068815312073546976##
                   12806216289025712215##
                   Lib.$trModule
                   Lib.$tc'Chr71
                   0#
                   Lib.$tc'C29) -}
2191ea93ef4646365f96e42b58ee573e
  $tc'ChrM :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3460117095804793797##
                   8992472971059999555##
                   Lib.$trModule
                   Lib.$tc'ChrM1
                   0#
                   Lib.$tc'C29) -}
9743b6f1847843fe824529c5e5b190c7
  $tc'ChrM1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'ChrM2) -}
333ea6d0c9debaadff5ed095c23003d8
  $tc'ChrM2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ChrM"#) -}
26c7b5b3dafa4ac585fb17cd25e74593
  $tc'ChrX :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13989798102863900776##
                   8199242079220217958##
                   Lib.$trModule
                   Lib.$tc'ChrX1
                   0#
                   Lib.$tc'C29) -}
5f51ac1379dee750734443fc690d36e9
  $tc'ChrX1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'ChrX2) -}
eeb5eeacf48b8f503e43b10dd09f9b60
  $tc'ChrX2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ChrX"#) -}
cef73e4d9d4d48ca3ef4ce26fb6b38e8
  $tc'ChrY :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12159655368866194852##
                   14652667117161208727##
                   Lib.$trModule
                   Lib.$tc'ChrY1
                   0#
                   Lib.$tc'C29) -}
e8b0b0f6f962a37bbcf9d425f4b43486
  $tc'ChrY1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'ChrY2) -}
4bb86c50e6611fd41924c5096e180627
  $tc'ChrY2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ChrY"#) -}
2c1c89ea6f701673ad1dcd41162c4c78
  $tc'GL000191P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12457966024472588496##
                   14987695141291384876##
                   Lib.$trModule
                   Lib.$tc'GL000191P2
                   0#
                   Lib.$tc'C29) -}
bac04218247181fe4facf9967edf2e82
  $tc'GL000191P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000191P3) -}
83f5b6209576bf9d6043161a4aad1072
  $tc'GL000191P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000191P1"#) -}
18cff9f841613ff2306690dcb4e86220
  $tc'GL000192P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1517854734171827503##
                   7964099852171418625##
                   Lib.$trModule
                   Lib.$tc'GL000192P2
                   0#
                   Lib.$tc'C29) -}
acae45280fc08948c2a6974a9eab8f82
  $tc'GL000192P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000192P3) -}
c08ae84e9095a80d23974c2d19dc0a94
  $tc'GL000192P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000192P1"#) -}
fb6e7d019e1544f30614193fe5b39f18
  $tc'GL000193P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7466069274465089002##
                   15206469984905237047##
                   Lib.$trModule
                   Lib.$tc'GL000193P2
                   0#
                   Lib.$tc'C29) -}
03cb5f3e1f85686d3442370392b61536
  $tc'GL000193P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000193P3) -}
d713b24e102d3c6416148b072936c193
  $tc'GL000193P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000193P1"#) -}
af49ce1b324608464206bf8d5bd7db14
  $tc'GL000194P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6446629589643102081##
                   14798042172381091454##
                   Lib.$trModule
                   Lib.$tc'GL000194P2
                   0#
                   Lib.$tc'C29) -}
df9647b98b4b907b18cf4e158e06fdbc
  $tc'GL000194P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000194P3) -}
76fcd452e219d34753b1275fbad78ca3
  $tc'GL000194P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000194P1"#) -}
f9a111c847d4824da801cfcc6f87ba6b
  $tc'GL000195P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10635700551792456305##
                   16970639776854226393##
                   Lib.$trModule
                   Lib.$tc'GL000195P2
                   0#
                   Lib.$tc'C29) -}
966142c168a4b85c4c49ed9e661aa7a0
  $tc'GL000195P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000195P3) -}
280fedfce04f3fa67071e505bf2c2ddc
  $tc'GL000195P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000195P1"#) -}
5654a7121568bdb193a5eb902d098537
  $tc'GL000196P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3604585501916776213##
                   8543059009766346924##
                   Lib.$trModule
                   Lib.$tc'GL000196P2
                   0#
                   Lib.$tc'C29) -}
d461abc8e1ea379070e7dd0fdf31a201
  $tc'GL000196P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000196P3) -}
3572690c8b712e01ce46d592ac8f168e
  $tc'GL000196P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000196P1"#) -}
e8806ec89c882973b804a34d624f4de1
  $tc'GL000197P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11067424038772428584##
                   1565983999149949058##
                   Lib.$trModule
                   Lib.$tc'GL000197P2
                   0#
                   Lib.$tc'C29) -}
334b9b67ded6ea0f2c3e4d191c89425f
  $tc'GL000197P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000197P3) -}
b9e13f2c8f35faba2067b48f95c7b578
  $tc'GL000197P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000197P1"#) -}
5b4222f691bb57626659ebee2e8fba69
  $tc'GL000198P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12522754796873385418##
                   11435703065628032925##
                   Lib.$trModule
                   Lib.$tc'GL000198P2
                   0#
                   Lib.$tc'C29) -}
b5480988a576e2962aa1f5beda34f8de
  $tc'GL000198P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000198P3) -}
91f6c03290a949d93de257a8098d565b
  $tc'GL000198P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000198P1"#) -}
24ec269535ca59df2c6242d21765c23b
  $tc'GL000199P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9940705070367464752##
                   5392724845353803467##
                   Lib.$trModule
                   Lib.$tc'GL000199P2
                   0#
                   Lib.$tc'C29) -}
1299f3caf33ae7d446bf295e2c5cf487
  $tc'GL000199P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000199P3) -}
553dcaa74493f131b4cc332cca817182
  $tc'GL000199P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000199P1"#) -}
f6390da97490f2acee7126c13ddfb8fe
  $tc'GL000200P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10904237203500721454##
                   5814793014442243008##
                   Lib.$trModule
                   Lib.$tc'GL000200P2
                   0#
                   Lib.$tc'C29) -}
d40e0996d2535bc177861bc59a7f115b
  $tc'GL000200P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000200P3) -}
102da0efd7ad41d6cbbd75b01ea23b31
  $tc'GL000200P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000200P1"#) -}
2bb647fa3293a0b9c689396fe237434c
  $tc'GL000201P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13525294470796175107##
                   15936362244635449157##
                   Lib.$trModule
                   Lib.$tc'GL000201P2
                   0#
                   Lib.$tc'C29) -}
31551bde5d6a091e3eaff7fff1018d5a
  $tc'GL000201P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000201P3) -}
abd4650d9b0b40805717f461db54d2ee
  $tc'GL000201P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000201P1"#) -}
ba1f6e423f07b4fbee26b9327f6be87f
  $tc'GL000202P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10100561367542220092##
                   500337962285685692##
                   Lib.$trModule
                   Lib.$tc'GL000202P2
                   0#
                   Lib.$tc'C29) -}
f58a4d42486cf62f5cbcafdd0828940d
  $tc'GL000202P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000202P3) -}
a5b84b8dccb8782ae7998442e5cbc258
  $tc'GL000202P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000202P1"#) -}
21bf5c173dc814df1a424359ec1cb1dc
  $tc'GL000203P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14278769385157071698##
                   11373774978158564340##
                   Lib.$trModule
                   Lib.$tc'GL000203P2
                   0#
                   Lib.$tc'C29) -}
2d0752f1745bd1c74b9e6ba52d07f909
  $tc'GL000203P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000203P3) -}
edd73f8e2881e8821b39782fa9949eb0
  $tc'GL000203P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000203P1"#) -}
1e58f9dce0d6b8588fb12ba597e52893
  $tc'GL000204P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12162293409755725553##
                   12884041562324133283##
                   Lib.$trModule
                   Lib.$tc'GL000204P2
                   0#
                   Lib.$tc'C29) -}
e342bbe022b6047bc55f7263beaad400
  $tc'GL000204P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000204P3) -}
158d5a1fad85348650668b60eb61e18d
  $tc'GL000204P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000204P1"#) -}
9fd329497755ec12153d7c438cb4a1f7
  $tc'GL000205P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18122273168524728299##
                   9135351182123982580##
                   Lib.$trModule
                   Lib.$tc'GL000205P2
                   0#
                   Lib.$tc'C29) -}
41922afe32d2990d5bf7831794fdf6be
  $tc'GL000205P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000205P3) -}
5e4f240bc9d5f044fa3a94e3549ee3ff
  $tc'GL000205P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000205P1"#) -}
e59f34209c52b538e876eb3ad69d450f
  $tc'GL000206P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8959574029598889395##
                   4339058259280147238##
                   Lib.$trModule
                   Lib.$tc'GL000206P2
                   0#
                   Lib.$tc'C29) -}
3cf750c90308e563692c989a76bdd12b
  $tc'GL000206P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000206P3) -}
08366344466d9fe9b4ca6b09be72d221
  $tc'GL000206P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000206P1"#) -}
ac3fbbb4709d90d0534d13008f7dd7e8
  $tc'GL000207P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8283724044591958497##
                   14787382811726244460##
                   Lib.$trModule
                   Lib.$tc'GL000207P2
                   0#
                   Lib.$tc'C29) -}
2f4d4ca6503213f8fc41aeba86db80a6
  $tc'GL000207P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000207P3) -}
5f7024a832b897c0856cfdd0f3d078c4
  $tc'GL000207P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000207P1"#) -}
95e51577976058f9100724f41df6335a
  $tc'GL000208P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17332268285170125526##
                   12740534951004135140##
                   Lib.$trModule
                   Lib.$tc'GL000208P2
                   0#
                   Lib.$tc'C29) -}
7fea30a9614aaa4429224abfe729b58c
  $tc'GL000208P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000208P3) -}
320be8738e8b2c3fe6cab4da98d72c9b
  $tc'GL000208P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000208P1"#) -}
6702a272469445412ed495facc72c2dd
  $tc'GL000209P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14815557728967863674##
                   14282058398187239972##
                   Lib.$trModule
                   Lib.$tc'GL000209P2
                   0#
                   Lib.$tc'C29) -}
d2608e44c95194fe297296f6cfc9d4f9
  $tc'GL000209P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000209P3) -}
b2e4ef889b57fd05edd8b5caecf48658
  $tc'GL000209P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000209P1"#) -}
15acc3cf9f9aab1fa62ed9f402b3f9f3
  $tc'GL000210P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   357403770611465790##
                   17591568623850728643##
                   Lib.$trModule
                   Lib.$tc'GL000210P2
                   0#
                   Lib.$tc'C29) -}
fdd91c5faf7557926c8d5d4b6fceaef0
  $tc'GL000210P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000210P3) -}
a3468e738f6c5983024bbd416f6e6b2b
  $tc'GL000210P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000210P1"#) -}
20675ee484bf77c24b16efa64eda6df8
  $tc'GL000211P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7747482978562169228##
                   18198290230215311026##
                   Lib.$trModule
                   Lib.$tc'GL000211P2
                   0#
                   Lib.$tc'C29) -}
b912d77b12a66abb89049f8d72630707
  $tc'GL000211P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000211P3) -}
c5d53a718eafbe6bf47648646bf00fb6
  $tc'GL000211P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000211P1"#) -}
46cd2a0ff6fb8516b0776aac9ceebf3c
  $tc'GL000212P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13031762517874689025##
                   10990458622985208093##
                   Lib.$trModule
                   Lib.$tc'GL000212P2
                   0#
                   Lib.$tc'C29) -}
eb5ce9fe93215fa18b1aa673f2952eb5
  $tc'GL000212P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000212P3) -}
afeb3b540f50b1a6f0078e15748ac47f
  $tc'GL000212P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000212P1"#) -}
ce1534bec209ccfc6c4eacf54cad69af
  $tc'GL000213P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10912954539900715422##
                   17915690111810591448##
                   Lib.$trModule
                   Lib.$tc'GL000213P2
                   0#
                   Lib.$tc'C29) -}
70c77d2ab717e47d881456cc1e741ae8
  $tc'GL000213P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000213P3) -}
c022e2fba9ee8f9c420d867a63f8f436
  $tc'GL000213P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000213P1"#) -}
38cfed7e985a55811a9266c8cd8ae545
  $tc'GL000214P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5074608743871869549##
                   15501106375854414039##
                   Lib.$trModule
                   Lib.$tc'GL000214P2
                   0#
                   Lib.$tc'C29) -}
cac2f4c1a83d557bc5a54910d7e17365
  $tc'GL000214P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000214P3) -}
7104a66bb6540b5abd30d5a483e718b2
  $tc'GL000214P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000214P1"#) -}
b756daf30d5ccaab1c77859acfd845d2
  $tc'GL000215P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16915428357909232883##
                   13271512029812082440##
                   Lib.$trModule
                   Lib.$tc'GL000215P2
                   0#
                   Lib.$tc'C29) -}
f7d78f3ed5b129689e57a0b4a261a5b5
  $tc'GL000215P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000215P3) -}
fe047ff7ff3b9c12c8e8619f8aed18b4
  $tc'GL000215P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000215P1"#) -}
5e7a358f4cbafc0d45a2bed0435a68c5
  $tc'GL000216P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13804203800620394249##
                   8642182170062884324##
                   Lib.$trModule
                   Lib.$tc'GL000216P2
                   0#
                   Lib.$tc'C29) -}
16678bc544c635fe2122efd4a855dcc6
  $tc'GL000216P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000216P3) -}
6e829b7f96621dbfc0e956cd2d4ef630
  $tc'GL000216P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000216P1"#) -}
ff885c6a5cffa60164d670de24619864
  $tc'GL000217P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   260486869457514493##
                   13929098355101223885##
                   Lib.$trModule
                   Lib.$tc'GL000217P2
                   0#
                   Lib.$tc'C29) -}
b0cad9a771554ad78c9444a546619497
  $tc'GL000217P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000217P3) -}
d07bfd79ac90ff47f2d544669f39b621
  $tc'GL000217P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000217P1"#) -}
a987b71e7f6e0eb1632990aff410470c
  $tc'GL000218P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12345540064412497800##
                   2481171614624811114##
                   Lib.$trModule
                   Lib.$tc'GL000218P2
                   0#
                   Lib.$tc'C29) -}
db9657bf8b6f8b638c8d8cef21abf839
  $tc'GL000218P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000218P3) -}
10d9d775fbcd761cf1e98e1457a18597
  $tc'GL000218P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000218P1"#) -}
6cf2bbf1a4370e948d94e717330794d5
  $tc'GL000219P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5674152271488162877##
                   12853254031599773906##
                   Lib.$trModule
                   Lib.$tc'GL000219P2
                   0#
                   Lib.$tc'C29) -}
dcdb8967104bbdf05bfd09c3b62325bf
  $tc'GL000219P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000219P3) -}
a8722c68e7ab56026876433c3bc62912
  $tc'GL000219P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000219P1"#) -}
08e2daf9c09ad31aaba72c1f7dbff75c
  $tc'GL000220P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16510103465480676866##
                   2954601040994093880##
                   Lib.$trModule
                   Lib.$tc'GL000220P2
                   0#
                   Lib.$tc'C29) -}
0ac79896caf7033624e65c0487541e5c
  $tc'GL000220P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000220P3) -}
68473d57d456de118fc1043f0a658c0c
  $tc'GL000220P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000220P1"#) -}
3d982cb9ce6fc8b466e9c95b00231076
  $tc'GL000221P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17889125974868928637##
                   3725510881496487836##
                   Lib.$trModule
                   Lib.$tc'GL000221P2
                   0#
                   Lib.$tc'C29) -}
b44c6b2843754e71a05ce7113ce64c94
  $tc'GL000221P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000221P3) -}
da275376dd86d2be56688e2d1958918d
  $tc'GL000221P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000221P1"#) -}
4cd8704a51b9125dd77316db2cbe7abd
  $tc'GL000222P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16128570898195583619##
                   11709973352680995859##
                   Lib.$trModule
                   Lib.$tc'GL000222P2
                   0#
                   Lib.$tc'C29) -}
411cfd69183ebfa55103407f292a7f8d
  $tc'GL000222P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000222P3) -}
3338f52de69f01433d2d0a1682bb3863
  $tc'GL000222P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000222P1"#) -}
8ef7d65930bad604caa5120f27bb2ce6
  $tc'GL000223P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11664650430057296947##
                   3501926407203941846##
                   Lib.$trModule
                   Lib.$tc'GL000223P2
                   0#
                   Lib.$tc'C29) -}
e9a62170405218cdf5a7eb3c664e6bd6
  $tc'GL000223P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000223P3) -}
8f597af6eb3e2571ad68a3daaf535b66
  $tc'GL000223P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000223P1"#) -}
2a62dda030511768c41b4292ba2d82d0
  $tc'GL000224P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14941165791915527834##
                   13528507115281591764##
                   Lib.$trModule
                   Lib.$tc'GL000224P2
                   0#
                   Lib.$tc'C29) -}
4f53794bc8f4f6d49b29c5232f7b0b1f
  $tc'GL000224P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000224P3) -}
15aea465d2f6182efbfff9cdb3aeff4d
  $tc'GL000224P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000224P1"#) -}
008232deb8393d6899c0c12222bfe128
  $tc'GL000225P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9972712963317956449##
                   1574438283559526329##
                   Lib.$trModule
                   Lib.$tc'GL000225P2
                   0#
                   Lib.$tc'C29) -}
64d7085c13d26588991f4040a8e08c3b
  $tc'GL000225P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000225P3) -}
288d56025e8624a780a823b8d27ab592
  $tc'GL000225P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000225P1"#) -}
b4aaf2189add921c571e5396e01af452
  $tc'GL000226P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7850843162966526558##
                   6546878435187363652##
                   Lib.$trModule
                   Lib.$tc'GL000226P2
                   0#
                   Lib.$tc'C29) -}
34ba1d4f66d36975ef856d714ebf24c4
  $tc'GL000226P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000226P3) -}
51eec6bdd91a0e58b378eb1ed7d7be7a
  $tc'GL000226P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000226P1"#) -}
79e5ec75eb8cd6be4506351bf8023c86
  $tc'GL000227P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16822219215626016033##
                   18358052161129682765##
                   Lib.$trModule
                   Lib.$tc'GL000227P2
                   0#
                   Lib.$tc'C29) -}
4d2f15bd2a157f80232e79e44a10a98b
  $tc'GL000227P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000227P3) -}
bd86d42edad16827888512b8fbe6b4be
  $tc'GL000227P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000227P1"#) -}
70379424278decc1d8d55c81f2ced42a
  $tc'GL000228P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13362719181510275791##
                   8147496201820596401##
                   Lib.$trModule
                   Lib.$tc'GL000228P2
                   0#
                   Lib.$tc'C29) -}
fbd702a081a037f7fe7c6990179e7e70
  $tc'GL000228P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000228P3) -}
d1582718e0ab51833d22a9efaff68de3
  $tc'GL000228P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000228P1"#) -}
e45cfb3819b1f69a90d43b70584580ae
  $tc'GL000229P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14043854574344997961##
                   2132594529125088143##
                   Lib.$trModule
                   Lib.$tc'GL000229P2
                   0#
                   Lib.$tc'C29) -}
39c9846a67f152b99c38db1f3e39038e
  $tc'GL000229P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000229P3) -}
a17af320765508d299fbf075e1ff823f
  $tc'GL000229P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000229P1"#) -}
d33e1fd898dfb9e9564a2b008c9c7ac8
  $tc'GL000230P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11615281176978193837##
                   14717578338878493325##
                   Lib.$trModule
                   Lib.$tc'GL000230P2
                   0#
                   Lib.$tc'C29) -}
e10e48d36abf5319a45963d1346ade1d
  $tc'GL000230P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000230P3) -}
48b3e45e93fc40447e26e0b0f96bf547
  $tc'GL000230P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000230P1"#) -}
ab1e7f2e09cebfb3f86aeb7cc29916df
  $tc'GL000231P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15950629944147092914##
                   16514701440531743414##
                   Lib.$trModule
                   Lib.$tc'GL000231P2
                   0#
                   Lib.$tc'C29) -}
e557226241c80e879306ddda5c42fdb2
  $tc'GL000231P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000231P3) -}
858001f4d325661ad42da2ae723504be
  $tc'GL000231P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000231P1"#) -}
b0863424dd26f8b3b575a4267c6a043f
  $tc'GL000232P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14577890071621476378##
                   7815173045755117795##
                   Lib.$trModule
                   Lib.$tc'GL000232P2
                   0#
                   Lib.$tc'C29) -}
460f284239cb81ca3635c636358dcede
  $tc'GL000232P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000232P3) -}
0871b15c45998e053486b5abd03d10ef
  $tc'GL000232P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000232P1"#) -}
b9a0161530713ea35275412c1e657d90
  $tc'GL000233P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   209316429899739715##
                   16009332061404755199##
                   Lib.$trModule
                   Lib.$tc'GL000233P2
                   0#
                   Lib.$tc'C29) -}
f6a69e9e39af0f9347d2a1cbb6d14c93
  $tc'GL000233P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000233P3) -}
581a7e061f966e76d07442a089b67095
  $tc'GL000233P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000233P1"#) -}
b4ee867572096a4d528c23c037ef4f13
  $tc'GL000234P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10129779434895970439##
                   6752257524622296594##
                   Lib.$trModule
                   Lib.$tc'GL000234P2
                   0#
                   Lib.$tc'C29) -}
8bd9df907342d1276da54866fa8075f5
  $tc'GL000234P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000234P3) -}
8f5a0bb8f80b82debfe7c8328babead2
  $tc'GL000234P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000234P1"#) -}
b9a44dae245b078457e693c1d9ceef3b
  $tc'GL000235P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13618268221403423851##
                   3069148436902397276##
                   Lib.$trModule
                   Lib.$tc'GL000235P2
                   0#
                   Lib.$tc'C29) -}
c0fa610ca4b2ff93c1653647d60dd522
  $tc'GL000235P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000235P3) -}
f8421bf61da87c614fd4fe359c5e5184
  $tc'GL000235P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000235P1"#) -}
e09650fa59327d0d0fc1e83fabbd4205
  $tc'GL000236P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7445382115285987945##
                   5181804922185372434##
                   Lib.$trModule
                   Lib.$tc'GL000236P2
                   0#
                   Lib.$tc'C29) -}
c9c0fa5fea245d7fad9cdf0889c170d1
  $tc'GL000236P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000236P3) -}
752e58dc28b882db323ce854c6e7d70e
  $tc'GL000236P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000236P1"#) -}
c026903c7b16dbfa77b770adfaf6a0af
  $tc'GL000237P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6696735079176454491##
                   14903002355886120885##
                   Lib.$trModule
                   Lib.$tc'GL000237P2
                   0#
                   Lib.$tc'C29) -}
311973a1618ac0f4212e7ffea3e3e4c3
  $tc'GL000237P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000237P3) -}
2ef4b227b7d98a6975016ddf4b53789a
  $tc'GL000237P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000237P1"#) -}
8925c4253a0884614fe411e18fcd9dc7
  $tc'GL000238P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2476517097473325953##
                   16655733136627747510##
                   Lib.$trModule
                   Lib.$tc'GL000238P2
                   0#
                   Lib.$tc'C29) -}
a9fadee69e724e76e69c17a9bde1c16d
  $tc'GL000238P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000238P3) -}
a20543d01696ccbb7740bf6acde9d380
  $tc'GL000238P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000238P1"#) -}
c9e8cdd69aaa62407831059f63a0167d
  $tc'GL000239P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16513676310226380541##
                   15133514766008166708##
                   Lib.$trModule
                   Lib.$tc'GL000239P2
                   0#
                   Lib.$tc'C29) -}
c61d7f34f91ca741ec2fbb3e9e02d223
  $tc'GL000239P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000239P3) -}
c2fa657471f8d1ad13cded3629b64790
  $tc'GL000239P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000239P1"#) -}
7bcf80dbe68a484fe77202d374c2f500
  $tc'GL000240P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17109689284323361888##
                   6445278191466960709##
                   Lib.$trModule
                   Lib.$tc'GL000240P2
                   0#
                   Lib.$tc'C29) -}
6ca31c4d51591a78f82f0f341e828446
  $tc'GL000240P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000240P3) -}
ea0923d83f7b937b507da0fe425f8b42
  $tc'GL000240P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000240P1"#) -}
27b80c3da593dabe642cc620ba0b6598
  $tc'GL000241P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8533942855684139767##
                   17253480473531709994##
                   Lib.$trModule
                   Lib.$tc'GL000241P2
                   0#
                   Lib.$tc'C29) -}
33577bfe332a6a1ed559baaa515a2424
  $tc'GL000241P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000241P3) -}
faffcf6205ef8ace49f86ff4b2f49392
  $tc'GL000241P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000241P1"#) -}
0791f282a34e8b28492b7e47255feacc
  $tc'GL000242P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12530258977960411215##
                   14202131150759892850##
                   Lib.$trModule
                   Lib.$tc'GL000242P2
                   0#
                   Lib.$tc'C29) -}
c002be8a87f14a21ddb27e69db1a06a9
  $tc'GL000242P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000242P3) -}
0883f0375279638fa046fff3cecabcf1
  $tc'GL000242P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000242P1"#) -}
f74e8deb5a5ae4091016e3eb838eff73
  $tc'GL000243P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3549579891455290019##
                   17992424712221889383##
                   Lib.$trModule
                   Lib.$tc'GL000243P2
                   0#
                   Lib.$tc'C29) -}
219f7740de3742d8d78ce80331c41698
  $tc'GL000243P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000243P3) -}
e685fd93a2773bb711171bea04675328
  $tc'GL000243P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000243P1"#) -}
d4541021a61ff4d36e9903b9a9cf3a2d
  $tc'GL000244P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17921073951456314625##
                   1197454585382726014##
                   Lib.$trModule
                   Lib.$tc'GL000244P2
                   0#
                   Lib.$tc'C29) -}
c81112fc33a32828ad28fa454a679e9c
  $tc'GL000244P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000244P3) -}
e303761e1ca6fdb124cd571bb5d22896
  $tc'GL000244P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000244P1"#) -}
fd9d8896601d4dae2a1e66c58d14d845
  $tc'GL000245P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16466298949749700019##
                   5676616422804448215##
                   Lib.$trModule
                   Lib.$tc'GL000245P2
                   0#
                   Lib.$tc'C29) -}
5c15a8613ac81c10b10603fbe00c70ee
  $tc'GL000245P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000245P3) -}
5c5406554fb8a47fcb10070a20c59695
  $tc'GL000245P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000245P1"#) -}
9b1c6e4f0a90a497fecab3a61da4cf26
  $tc'GL000246P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10528083842305919879##
                   15189545887231572736##
                   Lib.$trModule
                   Lib.$tc'GL000246P2
                   0#
                   Lib.$tc'C29) -}
3ec202bacc180c7c6c3d08217a949b3b
  $tc'GL000246P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000246P3) -}
39d8a9957f42fc91f68daa5ec78f3ba9
  $tc'GL000246P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000246P1"#) -}
8c9dd04590cfb1462e92af6f633afe18
  $tc'GL000247P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   550819184461437104##
                   14362423120161806344##
                   Lib.$trModule
                   Lib.$tc'GL000247P2
                   0#
                   Lib.$tc'C29) -}
49930ce545a1c2fb2da8f5619dd6b3b7
  $tc'GL000247P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000247P3) -}
72066d02e27cf2d4f3ee842b2ac32d17
  $tc'GL000247P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000247P1"#) -}
11f3c9f99d25bdd6d390f7723bc99225
  $tc'GL000248P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7187924851488560022##
                   14632422602832256320##
                   Lib.$trModule
                   Lib.$tc'GL000248P2
                   0#
                   Lib.$tc'C29) -}
924228bbbb3f7e4f65f24e4771ab86c8
  $tc'GL000248P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000248P3) -}
91e538c61937d99b23e3548011b671f0
  $tc'GL000248P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000248P1"#) -}
e2cf02e22a0e434be874d2afce8838ac
  $tc'GL000249P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11096384107332143038##
                   1778400111595794259##
                   Lib.$trModule
                   Lib.$tc'GL000249P2
                   0#
                   Lib.$tc'C29) -}
c0416e2a510a60b9ccd7b782b6714110
  $tc'GL000249P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000249P3) -}
11158c1a5fc61f893252d38c6031cb43
  $tc'GL000249P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000249P1"#) -}
e7be03a7193a920d034eec1a59758304
  $tc'GRC :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1795710795296431187##
                   11348015467072398679##
                   Lib.$trModule
                   Lib.$tc'GRC2
                   0#
                   Lib.$tc'GRC1) -}
830e692c8930c2cefea8771539946647
  $tc'GRC1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
cae7fa47611bb344692ce4982559c960
  $tc'GRC2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GRC3) -}
35eb834392c17ce0b10727f8c972960f
  $tc'GRC3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GRC"#) -}
a84bdc06df3e9178f330d8308337622f
  $tc'MasterRecord :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6132990316721541678##
                   6949014925053187121##
                   Lib.$trModule
                   Lib.$tc'MasterRecord2
                   0#
                   Lib.$tc'MasterRecord1) -}
74a0504c38214963e9fc0d81b1634bf7
  $tc'MasterRecord1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
247ae61ae7f760e035210756251b101b
  $tc'MasterRecord2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'MasterRecord3) -}
a2867aa8324a9351973fe4ca2e4080f5
  $tc'MasterRecord3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'MasterRecord"#) -}
16aa021b7b7dc9b88a7acec19663c60d
  $tc'MidFamily :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14993214592857762657##
                   10701176008916027608##
                   Lib.$trModule
                   Lib.$tc'MidFamily2
                   0#
                   Lib.$tc'MidFamily1) -}
bb8eec886593cef4aca340a5c239219e
  $tc'MidFamily1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
6f5c8f1ec48545fa3583e02d0ded96b2
  $tc'MidFamily2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'MidFamily3) -}
2fe96be30360dd69ed0cec8af8c18784
  $tc'MidFamily3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'MidFamily"#) -}
d3954c6c1c482a40b3920c40deede8c6
  $tc'NC_007605 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18347722970334594105##
                   15443948739599352844##
                   Lib.$trModule
                   Lib.$tc'NC_1
                   0#
                   Lib.$tc'C29) -}
2a2fdd96762ae3e3131d43bd1ff5937f
  $tc'NC_1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'NC_2) -}
9ffc047ed902d85256d5361fcd59d393
  $tc'NC_2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'NC_007605"#) -}
02cf058e023e71d1ab5ecb82384b591b
  $tc'NONE :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5489745005810763461##
                   430622240185330222##
                   Lib.$trModule
                   Lib.$tc'NONE1
                   0#
                   Lib.$tc'C29) -}
b1ee752769e0c97b765ce60a8b4a7c28
  $tc'NONE1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'NONE2) -}
f5132c349d9889346d3d10e27fe31a68
  $tc'NONE2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'NONE"#) -}
9319431fa30b809ec335d43b9f672561
  $tc'Opts :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7302480218292427821##
                   9928039541993716454##
                   Lib.$trModule
                   Lib.$tc'Opts2
                   0#
                   Lib.$tc'Opts1) -}
05441461774f1de933a077b0fa6e2925
  $tc'Opts1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
03aa93a6c800a4caf3104bb808ccba30
  $tc'Opts2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Opts3) -}
d907711f0018e33638ec99a1578ed168
  $tc'Opts3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Opts"#) -}
587d27f71fbf98c675d6fd5d3b4f0869
  $tc'PairedAln :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5938167474000459645##
                   16314267763711919392##
                   Lib.$trModule
                   Lib.$tc'PairedAln2
                   0#
                   Lib.$tc'PairedAln1) -}
26a192811be0a3a6f2b330bbc540e2f4
  $tc'PairedAln1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
f5055e362e1e25be03bb8fed594c4924
  $tc'PairedAln2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'PairedAln3) -}
d867fb285334cc015e5f90c27766d467
  $tc'PairedAln3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PairedAln"#) -}
d579b9f59a8f78d6ab0609384aee57ca
  $tc'RunStats :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3963705163741968931##
                   11585296895066158086##
                   Lib.$trModule
                   Lib.$tc'RunStats2
                   0#
                   Lib.$tc'RunStats1) -}
96e637bf7f375bed364a65341a4fc54f
  $tc'RunStats1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
86ca7fbcf62a95d5a0cd72b6c7f3ce43
  $tc'RunStats2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'RunStats3) -}
bd5f9643901231266f409854334d3687
  $tc'RunStats3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'RunStats"#) -}
dbe750b3d40c36f44643d3e476528539
  $tc'SAMFlag :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17165826165638837447##
                   9372382260526916269##
                   Lib.$trModule
                   Lib.$tc'SAMFlag2
                   0#
                   Lib.$tc'SAMFlag1) -}
b0a97c793480980562319bef43d22048
  $tc'SAMFlag1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
21e4e1d30570ba5135ea3d0f10c1c982
  $tc'SAMFlag2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'SAMFlag3) -}
68249254d2495181a79beb7839640914
  $tc'SAMFlag3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'SAMFlag"#) -}
1b8fb1aea13ffe541ab2e3526933fede
  $tc'UCSC :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11569442830005755305##
                   16506351434057365830##
                   Lib.$trModule
                   Lib.$tc'UCSC1
                   0#
                   Lib.$tc'GRC1) -}
23b3973159870b8894a5a193ec331547
  $tc'UCSC1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'UCSC2) -}
02f28c306ff0725d8ae9eb16189b8d26
  $tc'UCSC2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'UCSC"#) -}
d656fd2f13d915ceb4f788d0fe1c1119
  $tcAlignedRead :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16556112056910711942##
                   2788459833556029481##
                   Lib.$trModule
                   Lib.$tcAlignedRead1
                   0#
                   GHC.Types.krep$*) -}
cbbf04b3649f9f844be1a6de4a5dc9da
  $tcAlignedRead1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tcAlignedRead2) -}
8682f2ecb2a7e5bdec10ba05a20eb510
  $tcAlignedRead2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("AlignedRead"#) -}
6088e8e8399fb63e04c1871151369e6e
  $tcBEDPE :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5310264890380486210##
                   15829337837496008168##
                   Lib.$trModule
                   Lib.$tcBEDPE1
                   0#
                   GHC.Types.krep$*) -}
97152d314cc5ad8ab79e2c5399cf8957
  $tcBEDPE1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tcBEDPE2) -}
a9bad4ba8fe8d20ef9ed1cba7718eb6a
  $tcBEDPE2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("BEDPE"#) -}
6fb4c601b58c482a3e1aed184b9e7d19
  $tcBedRecord :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15427855282909400438##
                   16940376902409428503##
                   Lib.$trModule
                   Lib.$tcBedRecord1
                   0#
                   GHC.Types.krep$*) -}
74254eb12884915eddbb2fca5c98be21
  $tcBedRecord1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tcBedRecord2) -}
714983c7dab20c1e6ebf66e21042e865
  $tcBedRecord2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("BedRecord"#) -}
2d2b6c71eabbfd1373cda2f9f896ea5c
  $tcChromNameFormat :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17780879197454923391##
                   2999841545201484551##
                   Lib.$trModule
                   Lib.$tcChromNameFormat1
                   0#
                   GHC.Types.krep$*) -}
376003858e27285dbf84f399262770c2
  $tcChromNameFormat1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tcChromNameFormat2) -}
6cc7f79c12c5ddbaf27c2315a408aa8d
  $tcChromNameFormat2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ChromNameFormat"#) -}
427b8931189e959be3beeed91650cbe9
  $tcMasterRecord :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12856368553968961201##
                   12894656083073543674##
                   Lib.$trModule
                   Lib.$tcMasterRecord1
                   0#
                   GHC.Types.krep$*) -}
ba39cdc88b33e167774b399baa7dfab5
  $tcMasterRecord1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tcMasterRecord2) -}
f9f5d40349c2b8e96f7814c952d839bc
  $tcMasterRecord2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("MasterRecord"#) -}
91fd6a7ff853bbba99970ad7b147e579
  $tcMidFamily :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4245342553778622238##
                   3842629113943840612##
                   Lib.$trModule
                   Lib.$tcMidFamily1
                   0#
                   GHC.Types.krep$*) -}
d5c6b880502ebf899f3f1a33033fb4c5
  $tcMidFamily1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tcMidFamily2) -}
71e5ff82d2afad8fd8f2cfcb681ada2f
  $tcMidFamily2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("MidFamily"#) -}
4b529f089f4ed39f0d6053c18e27f96d
  $tcOpts :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3822885112170501126##
                   13649194695436715384##
                   Lib.$trModule
                   Lib.$tcOpts1
                   0#
                   GHC.Types.krep$*) -}
c32a6b7de995de673986f99267d2c194
  $tcOpts1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tcOpts2) -}
2e88afb4b464fc6dfea658eb124f049f
  $tcOpts2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Opts"#) -}
361bb94e68eefe5110ff9f8cf24071a2
  $tcPairedAln :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11369319519183757609##
                   3093705755512435783##
                   Lib.$trModule
                   Lib.$tcPairedAln1
                   0#
                   GHC.Types.krep$*) -}
4b6f336e3a3b04c2f886cc35b2208736
  $tcPairedAln1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tcPairedAln2) -}
27574e2b2284705e2a314cf9c082444e
  $tcPairedAln2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("PairedAln"#) -}
2ad4beaa8d1e9100bee619d06e68d267
  $tcRunStats :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17266068292419417513##
                   3168862401990422381##
                   Lib.$trModule
                   Lib.$tcRunStats1
                   0#
                   GHC.Types.krep$*) -}
d859f5a14d4ad5901f35984dbe55d41d
  $tcRunStats1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tcRunStats2) -}
d6228173a470cc989442c97695c44d51
  $tcRunStats2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("RunStats"#) -}
f046a3a942f58aafbb47afc864ee1d7f
  $tcSAMFlag :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11407085604486379406##
                   17611475641433418997##
                   Lib.$trModule
                   Lib.$tcSAMFlag1
                   0#
                   GHC.Types.krep$*) -}
738a0e10c83e7a0fc1128034cb885e03
  $tcSAMFlag1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tcSAMFlag2) -}
249010c162133a0e094e0aa09f0fc35c
  $tcSAMFlag2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("SAMFlag"#) -}
cda280bbb32ef102f8cd7f123344c07b
  $tcUChr :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12991292144440919471##
                   12444928763739922436##
                   Lib.$trModule
                   Lib.$tcUChr1
                   0#
                   GHC.Types.krep$*) -}
dc85501764e4d1d440f72ee12c5f40e9
  $tcUChr1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tcUChr2) -}
02818a1770b74bc7812daed223c8530d
  $tcUChr2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("UChr"#) -}
bab5b84e2e002f7aa37d8716cbd037a0
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Lib.$trModule3 Lib.$trModule1) -}
615778337cc439d8758f436a85dfb749
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$trModule2) -}
f2a9573c9f94209484c5063c8dae53eb
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Lib"#) -}
771edb11e3315f4dbdfe5c437acb9494
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$trModule4) -}
1280e31274f972d2f0f0806d094304ee
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("primerclip-0.3.3.0-GfuurxY2OUOHPk7lKZLXUc"#) -}
7ff0655c93fdeb4cde6bcdd1dd283b76
  $w$c< ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs, Strictness: <S,U><L,1*U><S,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: Lib.UChr)
                   (ww3 :: GHC.Integer.Type.Integer) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww1 ww3 of wild2 {
                             DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True } }
                   GHC.Types.True -> GHC.Types.True } } }) -}
d4423a3db23fecb8844b1294f56a6458
  $w$c<1 ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs, Strictness: <S,U><L,1*U><S,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: Lib.UChr)
                   (ww3 :: GHC.Integer.Type.Integer) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww1 ww3 of wild2 {
                             DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True } }
                   GHC.Types.True -> GHC.Types.True } } }) -}
a1e0aac0b83153be4b906416562419e6
  $w$c<= ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs, Strictness: <S,U><L,1*U><S,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: Lib.UChr)
                   (ww3 :: GHC.Integer.Type.Integer) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww1 ww3 of wild2 {
                             DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False } }
                   GHC.Types.True -> GHC.Types.True } } }) -}
9de69fa62d15753d0175e65b5cdc4509
  $w$c<=1 ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs, Strictness: <S,U><L,1*U><S,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: Lib.UChr)
                   (ww3 :: GHC.Integer.Type.Integer) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww1 ww3 of wild2 {
                             DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False } }
                   GHC.Types.True -> GHC.Types.True } } }) -}
f811eb1d5a23f034c5e39cf1be66ea74
  $w$c== ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> GHC.Types.Bool
  {- Arity: 8, HasNoCafRefs,
     Strictness: <S,U><L,1*U><L,1*U><L,1*U(U,U,U,U)><S,U><L,1*U><L,1*U><L,1*U(U,U,U,U)>,
     Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: GHC.Integer.Type.Integer)
                   (ww3 :: Data.ByteString.Internal.ByteString)
                   (ww4 :: Lib.UChr)
                   (ww5 :: GHC.Integer.Type.Integer)
                   (ww6 :: GHC.Integer.Type.Integer)
                   (ww7 :: Data.ByteString.Internal.ByteString) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww4 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==# a# b#) of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case GHC.Integer.Type.eqInteger# ww1 ww5 of wild1 { DEFAULT ->
                      case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild1 of wild2 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case GHC.Integer.Type.eqInteger# ww2 ww6 of wild3 { DEFAULT ->
                           case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild3 of wild4 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> Data.ByteString.Internal.eq ww3 ww7 } } } } } } }) -}
1f7d7a9dd1d214a204c369d43f20bf5b
  $w$c==1 ::
    GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
  {- Arity: 8, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><L,1*U><S,1*U><L,1*U><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Types.Bool)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Base.String)
                   (ww3 :: GHC.Base.String)
                   (ww4 :: GHC.Types.Bool)
                   (ww5 :: GHC.Base.String)
                   (ww6 :: GHC.Base.String)
                   (ww7 :: GHC.Base.String) ->
                 let {
                   $j :: GHC.Types.Bool <join 0>
                   = case GHC.Base.eqString ww1 ww5 of wild {
                       GHC.Types.False -> GHC.Types.False
                       GHC.Types.True
                       -> case GHC.Base.eqString ww2 ww6 of wild1 {
                            GHC.Types.False -> GHC.Types.False
                            GHC.Types.True -> GHC.Base.eqString ww3 ww7 } }
                 } in
                 case ww of wild {
                   GHC.Types.False
                   -> case ww4 of wild1 {
                        GHC.Types.False -> $j GHC.Types.True -> GHC.Types.False }
                   GHC.Types.True
                   -> case ww4 of wild1 {
                        GHC.Types.False -> GHC.Types.False GHC.Types.True -> $j } }) -}
fbad60b5c871037705db3487730b62e1
  $w$c> ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs, Strictness: <S,U><L,1*U><S,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: Lib.UChr)
                   (ww3 :: GHC.Integer.Type.Integer) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww1 ww3 of wild2 {
                             DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True } }
                   GHC.Types.True -> GHC.Types.False } } }) -}
f22fada77aa6ff279fd2652b1d226057
  $w$c>1 ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs, Strictness: <S,U><L,1*U><S,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: Lib.UChr)
                   (ww3 :: GHC.Integer.Type.Integer) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww1 ww3 of wild2 {
                             DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True } }
                   GHC.Types.True -> GHC.Types.False } } }) -}
f6541b4947068354afed4c20be4848ee
  $w$c>= ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs, Strictness: <S,U><L,1*U><S,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: Lib.UChr)
                   (ww3 :: GHC.Integer.Type.Integer) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww1 ww3 of wild2 {
                             DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False } }
                   GHC.Types.True -> GHC.Types.False } } }) -}
69844f80cfbcf0bd891f0f63563d4ba8
  $w$c>=1 ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs, Strictness: <S,U><L,1*U><S,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: Lib.UChr)
                   (ww3 :: GHC.Integer.Type.Integer) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww1 ww3 of wild2 {
                             DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False } }
                   GHC.Types.True -> GHC.Types.False } } }) -}
c8c32b779e1b4f2a8f86eada7ded518e
  $w$ccompare ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Ordering
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S,U><L,1*U><L,1*U><S,U><L,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: GHC.Integer.Type.Integer)
                   (ww3 :: Lib.UChr)
                   (ww4 :: GHC.Integer.Type.Integer)
                   (ww5 :: GHC.Integer.Type.Integer) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww3 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.GT
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww1 ww4 of wild2 {
                             GHC.Types.LT -> GHC.Types.LT
                             GHC.Types.EQ -> GHC.Integer.Type.compareInteger ww2 ww5
                             GHC.Types.GT -> GHC.Types.GT } }
                   GHC.Types.True -> GHC.Types.LT } } }) -}
f3455787ce1a1ea77c5246cefedf255b
  $w$ccompare1 ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Ordering
  {- Arity: 4, HasNoCafRefs, Strictness: <S,U><L,1*U><S,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: Lib.UChr)
                   (ww3 :: GHC.Integer.Type.Integer) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.GT
                        GHC.Types.True -> GHC.Integer.Type.compareInteger ww1 ww3 }
                   GHC.Types.True -> GHC.Types.LT } } }) -}
8f541bcedc3cd4e1f0a46917397200a3
  $w$ccompare2 ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Ordering
  {- Arity: 4, HasNoCafRefs, Strictness: <S,U><L,1*U><S,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: Lib.UChr)
                   (ww3 :: GHC.Integer.Type.Integer) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.GT
                        GHC.Types.True -> GHC.Integer.Type.compareInteger ww1 ww3 }
                   GHC.Types.True -> GHC.Types.LT } } }) -}
3477459e766f03b15dea029f8a1a65bc
  $w$ccompare3 ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Ordering
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S,U><L,1*U><L,1*U><S,U><L,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: GHC.Integer.Type.Integer)
                   (ww3 :: Lib.UChr)
                   (ww4 :: GHC.Integer.Type.Integer)
                   (ww5 :: GHC.Integer.Type.Integer) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww3 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.GT
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww1 ww4 of wild2 {
                             GHC.Types.LT -> GHC.Types.LT
                             GHC.Types.EQ -> GHC.Integer.Type.compareInteger ww2 ww5
                             GHC.Types.GT -> GHC.Types.GT } }
                   GHC.Types.True -> GHC.Types.LT } } }) -}
97a455f17ac787a4d3e676c25852ac63
  $w$ccompare4 ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Ordering
  {- Arity: 8, HasNoCafRefs,
     Strictness: <S,U><L,1*U><L,1*U><L,1*U><S,U><L,1*U><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: GHC.Integer.Type.Integer)
                   (ww3 :: GHC.Integer.Type.Integer)
                   (ww4 :: Lib.UChr)
                   (ww5 :: GHC.Integer.Type.Integer)
                   (ww6 :: GHC.Integer.Type.Integer)
                   (ww7 :: GHC.Integer.Type.Integer) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww4 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.GT
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww1 ww5 of wild2 {
                             GHC.Types.LT -> GHC.Types.LT
                             GHC.Types.EQ
                             -> case GHC.Integer.Type.compareInteger ww2 ww6 of wild3 {
                                  GHC.Types.LT -> GHC.Types.LT
                                  GHC.Types.EQ -> GHC.Integer.Type.compareInteger ww3 ww7
                                  GHC.Types.GT -> GHC.Types.GT }
                             GHC.Types.GT -> GHC.Types.GT } }
                   GHC.Types.True -> GHC.Types.LT } } }) -}
21071c975426d6ea93962a8c0a55430b
  $w$ccompare5 ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Lib.AlignedRead
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Lib.AlignedRead
    -> GHC.Types.Ordering
  {- Arity: 8, HasNoCafRefs,
     Strictness: <S,U><L,1*U><L,1*U><L,1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,U><L,1*U><L,1*U><L,1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: GHC.Integer.Type.Integer)
                   (ww3 :: Lib.AlignedRead)
                   (ww4 :: Lib.UChr)
                   (ww5 :: GHC.Integer.Type.Integer)
                   (ww6 :: GHC.Integer.Type.Integer)
                   (ww7 :: Lib.AlignedRead) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww4 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.GT
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww1 ww5 of wild2 {
                             GHC.Types.LT -> GHC.Types.LT
                             GHC.Types.EQ
                             -> case GHC.Integer.Type.compareInteger ww2 ww6 of wild3 {
                                  GHC.Types.LT -> GHC.Types.LT
                                  GHC.Types.EQ -> Lib.$fOrdAlignedRead_$ccompare ww3 ww7
                                  GHC.Types.GT -> GHC.Types.GT }
                             GHC.Types.GT -> GHC.Types.GT } }
                   GHC.Types.True -> GHC.Types.LT } } }) -}
8edcc2498c46c20d06182ee101cd5654
  $w$creadPrec ::
    GHC.Prim.Int#
    -> forall b.
       (Lib.RunStats -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S,U><L,C(U)>, Inline: [0] -}
86b3f01b352507111efcb6642839f26f
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> GHC.Show.ShowS
  {- Arity: 8,
     Strictness: <S,U><L,1*U><L,U><L,U><L,1*U><L,U><L,U><L,1*U(U,U,U,U)>,
     Inline: [0] -}
465ed2a2abc25ede67d59013988e8dbe
  $w$cshowsPrec1 ::
    GHC.Prim.Int#
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> GHC.Show.ShowS
  {- Arity: 5, Strictness: <S,U><L,1*U><L,U><L,U><L,1*U(U,U,U,U)>,
     Inline: [0] -}
ec1a836fd21fd665647d12c4b20a1efc
  $w$cshowsPrec2 ::
    GHC.Prim.Int#
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 6, Strictness: <S,U><L,1*U><L,1*U><L,1*U><L,1*U><L,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Types.Bool)
                   (ww2 :: GHC.Base.String)
                   (ww3 :: GHC.Base.String)
                   (ww4 :: GHC.Base.String)
                   (w :: GHC.Base.String) ->
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.CString.unpackAppendCString#
                       Lib.$fShowOpts7
                       (GHC.CString.unpackAppendCString#
                          Lib.$fShowOpts6
                          (let {
                             eta :: GHC.Base.String
                             = GHC.Base.++
                                 @ GHC.Types.Char
                                 GHC.Show.showCommaSpace1
                                 (GHC.CString.unpackAppendCString#
                                    Lib.$fShowOpts5
                                    (GHC.Types.:
                                       @ GHC.Types.Char
                                       GHC.Show.$fShow(,)3
                                       (GHC.Show.showLitString
                                          ww2
                                          (GHC.Types.:
                                             @ GHC.Types.Char
                                             GHC.Show.$fShow(,)3
                                             (GHC.Base.++
                                                @ GHC.Types.Char
                                                GHC.Show.showCommaSpace1
                                                (GHC.CString.unpackAppendCString#
                                                   Lib.$fShowOpts4
                                                   (GHC.Types.:
                                                      @ GHC.Types.Char
                                                      GHC.Show.$fShow(,)3
                                                      (GHC.Show.showLitString
                                                         ww3
                                                         (GHC.Types.:
                                                            @ GHC.Types.Char
                                                            GHC.Show.$fShow(,)3
                                                            (GHC.Base.++
                                                               @ GHC.Types.Char
                                                               GHC.Show.showCommaSpace1
                                                               (GHC.CString.unpackAppendCString#
                                                                  Lib.$fShowOpts3
                                                                  (GHC.Types.:
                                                                     @ GHC.Types.Char
                                                                     GHC.Show.$fShow(,)3
                                                                     (GHC.Show.showLitString
                                                                        ww4
                                                                        (GHC.Types.:
                                                                           @ GHC.Types.Char
                                                                           GHC.Show.$fShow(,)3
                                                                           (GHC.CString.unpackAppendCString#
                                                                              Lib.$fShowOpts2
                                                                              x)))))))))))))))
                           } in
                           case ww1 of wild {
                             GHC.Types.False
                             -> GHC.Base.++ @ GHC.Types.Char GHC.Show.$fShowBool3 eta
                             GHC.Types.True
                             -> GHC.Base.++ @ GHC.Types.Char GHC.Show.$fShowBool1 eta }))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False -> p w
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 w)) }) -}
21071c975426d6ea93962a8c0a55430b
  $w$cshowsPrec3 ::
    GHC.Prim.Int#
    -> Lib.AlignedRead
    -> Lib.AlignedRead
    -> [Lib.AlignedRead]
    -> [Lib.AlignedRead]
    -> GHC.Show.ShowS
  {- Arity: 5,
     Strictness: <S,U><L,1*U(1*U(U,U,U,U),U(U),1*U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),U,U,1*U(U,U,U,U),U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(1*U,U,U,1*U(U,U,U,U)),U)><L,1*U(1*U(U,U,U,U),U(U),1*U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),U,U,1*U(U,U,U,U),U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(1*U,U,U,1*U(U,U,U,U)),U)><L,U><L,U>,
     Inline: [0] -}
28c35465aee86c62408c7a513d5df9f8
  $w$cshowsPrec4 ::
    GHC.Prim.Int#
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Show.ShowS
  {- Arity: 7,
     Strictness: <S,U><L,U><L,U><L,U><L,U><L,1*U(U)><L,1*U(U)>,
     Inline: [0] -}
871680c8a98548ba1071badd33bf1fbd
  $w$ctoEnum :: GHC.Prim.Int# -> Lib.ChromNameFormat
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 0#) of wild {
                   GHC.Types.False -> Lib.$wlvl ww
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# ww 1#) of wild1 {
                        GHC.Types.False -> Lib.$wlvl ww
                        GHC.Types.True
                        -> GHC.Prim.tagToEnum# @ Lib.ChromNameFormat ww } }) -}
56a346888d4ebe522e3d0b31a72b285d
  $w$ctoEnum1 :: GHC.Prim.Int# -> Lib.UChr
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 0#) of wild {
                   GHC.Types.False -> Lib.$wlvl1 ww
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# ww 110#) of wild1 {
                        GHC.Types.False -> Lib.$wlvl1 ww
                        GHC.Types.True -> GHC.Prim.tagToEnum# @ Lib.UChr ww } }) -}
d5a559ca25dcb148c40eae7273b9a3c1
  $w$sgo8 ::
    GHC.Prim.Int#
    -> a1
    -> Data.Map.Internal.Map GHC.Types.Int a1
    -> Data.Map.Internal.Map GHC.Types.Int a1
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
60ab13bc99a209d0bd74701054b68644
  $walignmentsetparser ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [Lib.AlignedRead]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
4d8d0462d0f69898302e035d66920299
  $walnparser ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.AlignedRead
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
447a57bf37bbe8a847a612c0d5f16f9d
  $walnsToPairedAln ::
    [Lib.AlignedRead]
    -> (# Lib.AlignedRead, Lib.AlignedRead, [Lib.AlignedRead],
          [Lib.AlignedRead] #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ (w :: [Lib.AlignedRead]) ->
                 case w of wild {
                   []
                   -> (# Lib.defaultAlignment, Lib.defaultAlignment,
                         GHC.Types.[] @ Lib.AlignedRead, GHC.Types.[] @ Lib.AlignedRead #)
                   : ipv ipv1
                   -> let {
                        ds6 :: ([Lib.AlignedRead], [Lib.AlignedRead])
                        = case Lib.$wgo2 wild of ww { (#,#) ww1 ww2 -> (ww1, ww2) }
                      } in
                      let {
                        ds7 :: ([Lib.AlignedRead], [Lib.AlignedRead])
                        = case ds6 of wild1 { (,) r1s r2s ->
                          case Lib.$wgo1 r1s of ww { (#,#) ww1 ww2 -> (ww1, ww2) } }
                      } in
                      let {
                        ds8 :: ([Lib.AlignedRead], [Lib.AlignedRead])
                        = case ds6 of wild1 { (,) r1s r2s ->
                          case Lib.$wgo r2s of ww { (#,#) ww1 ww2 -> (ww1, ww2) } }
                      } in
                      (# case ds7 of wild1 { (,) r1pl r1secs1 ->
                         case r1pl of wild2 {
                           [] -> Lib.alnsToPairedAln1 : ds9 ds10 -> ds9 } },
                         case ds8 of wild1 { (,) r2pl r2secs1 ->
                         case r2pl of wild2 {
                           [] -> Lib.alnsToPairedAln1 : ds9 ds10 -> ds9 } },
                         case ds7 of wild1 { (,) r1pl r1secs1 -> r1secs1 },
                         case ds8 of wild1 { (,) r2pl r2secs1 -> r2secs1 } #) }) -}
4e41d3f43e91675d949d00ffdbd12ea4
  $wanyPrimerIntAln ::
    GHC.Types.Bool
    -> Lib.AlignedRead
    -> [Lib.AlignedRead]
    -> [Lib.AlignedRead]
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A)><L,1*U><L,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Types.Bool)
                   (ww1 :: Lib.AlignedRead)
                   (ww2 :: [Lib.AlignedRead])
                   (ww3 :: [Lib.AlignedRead]) ->
                 case ww of wild {
                   GHC.Types.False
                   -> case ww1 of wild1 { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                      case ds27 of wild2 {
                        GHC.Types.False
                        -> let {
                             $j :: GHC.Types.Bool <join 0> = Lib.anyPrimerIntAln_go ww3
                           } in
                           letrec {
                             go19 :: [Lib.AlignedRead] -> GHC.Types.Bool
                               <join 1> {- Arity: 1, Strictness: <S,1*U> -}
                             = \ (ds37 :: [Lib.AlignedRead]) ->
                               case ds37 of wild3 {
                                 [] -> $j
                                 : y ys
                                 -> case y of wild4 { Lib.AlignedRead ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ->
                                    case ds59 of wild5 {
                                      GHC.Types.False -> go19 ys
                                      GHC.Types.True -> GHC.Types.True } } }
                           } in
                           go19 ww2
                        GHC.Types.True -> GHC.Types.True } }
                   GHC.Types.True -> GHC.Types.True }) -}
2ab1905891f13454b4149ba8121b3be2
  $wbedPEparser ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.BEDPE
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
84ca7c9bc46b9687995813a8d1700708
  $wbedrecparser ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.BedRecord
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
d6315620b58520ec6ada1df869abcc8d
  $wboolZeroLengthCigar ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Types.Bool
  {- Arity: 4, Strictness: <S,U><L,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 Lib.boolZeroLengthCigar_go
                   (Data.ByteString.Internal.$wunpackAppendCharsLazy
                      ww
                      ww1
                      ww2
                      ww3
                      (GHC.Types.[] @ GHC.Types.Char))) -}
d2d0a4e61100a5b9aea638b13ca5299f
  $wcheckChromNameMatchStatus ::
    Lib.Header
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Array# Lib.BedRecord
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 5, Strictness: <L,U><L,U><S,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (w :: Lib.Header)
                   (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Array# Lib.BedRecord)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 letrec {
                   $wgo45 :: GHC.Prim.Int# -> [Lib.UChr]
                     {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                   = \ (ww3 :: GHC.Prim.Int#) ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.>=# ww3 ww1) of wild {
                       GHC.Types.False
                       -> case GHC.Prim.indexArray#
                                 @ Lib.BedRecord
                                 ww2
                                 (GHC.Prim.+# ww ww3) of ds6 { Unit# ipv ->
                          GHC.Types.:
                            @ Lib.UChr
                            (case ipv of wild1 { Lib.BedRecord ds7 ds8 ds9 ds10 -> ds7 })
                            ($wgo45 (GHC.Prim.+# ww3 1#)) }
                       GHC.Types.True -> GHC.Types.[] @ Lib.UChr }
                 } in
                 case Lib.$wgo4
                        (Data.OldList.intersectBy
                           @ Lib.UChr
                           Lib.$fEqUChr_$c==
                           (Data.Set.Internal.$fDataSet_go
                              @ Lib.UChr
                              (GHC.Types.[] @ Lib.UChr)
                              (Lib.$sfromList4 ($wgo45 0#)))
                           (letrec {
                              go19 :: GHC.Prim.Int# -> [Lib.UChr]
                                {- Arity: 1, Strictness: <S,U> -}
                              = \ (x :: GHC.Prim.Int#) ->
                                case GHC.List.$w!!
                                       @ Data.ByteString.Internal.ByteString
                                       w
                                       x of wild { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                                case Lib.$whdrchromp
                                       @ Lib.UChr
                                       dt
                                       dt1
                                       dt2
                                       dt3
                                       dt3
                                       0#
                                       0#
                                       Data.Attoparsec.Internal.Types.Complete
                                       (Data.Attoparsec.ByteString.Internal.failK @ Lib.UChr)
                                         `cast`
                                       (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                                        ->_R <Data.Attoparsec.Internal.Types.Pos
                                              -> Data.Attoparsec.Internal.Types.More
                                              -> [GHC.Base.String]
                                              -> GHC.Base.String
                                              -> Data.Attoparsec.Internal.Types.IResult
                                                   Data.ByteString.Internal.ByteString Lib.UChr>_R)
                                       (Data.Attoparsec.ByteString.Internal.successK @ Lib.UChr)
                                         `cast`
                                       (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                                        ->_R <Data.Attoparsec.Internal.Types.Pos
                                              -> Data.Attoparsec.Internal.Types.More
                                              -> Lib.UChr
                                              -> Data.Attoparsec.Internal.Types.IResult
                                                   Data.ByteString.Internal.ByteString
                                                   Lib.UChr>_R) of wild1 {
                                  Data.Attoparsec.Internal.Types.Fail ds6 ds7 err
                                  -> case ds7 of wild2 { DEFAULT ->
                                     case x of wild3 {
                                       DEFAULT -> go19 (GHC.Prim.+# wild3 1#)
                                       25# -> GHC.Types.[] @ Lib.UChr } }
                                  Data.Attoparsec.Internal.Types.Partial ipv
                                  -> case Lib.checkChromNameMatchStatus5 ret_ty [Lib.UChr] of {}
                                  Data.Attoparsec.Internal.Types.Done ds6 a1
                                  -> GHC.Types.:
                                       @ Lib.UChr
                                       a1
                                       (case x of wild2 {
                                          DEFAULT -> go19 (GHC.Prim.+# wild2 1#)
                                          25# -> GHC.Types.[] @ Lib.UChr }) } }
                            } in
                            Data.Set.Internal.$fDataSet_go
                              @ Lib.UChr
                              (GHC.Types.[] @ Lib.UChr)
                              (Lib.$sfromList4 (go19 1#))))
                        0# of ww3 { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww3 1#) of wild {
                   GHC.Types.False
                   -> case Lib.checkChromNameMatchStatus4
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                      of {}
                   GHC.Types.True
                   -> GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Lib.checkChromNameMatchStatus2
                        GHC.Types.True
                        w1 } }) -}
a66bd7d460dd64d0d01d18a0535b6d61
  $wcheckcigseqlen ::
    Data.ByteString.Internal.ByteString
    -> GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.ByteString.Internal.ByteString
    -> GHC.Types.Bool
  {- Arity: 6,
     Strictness: <L,1*U(U,U,U,U)><L,U><L,U><L,U><S,U><L,1*U(U,U,U,U)>,
     Inline: [0] -}
71f3d025e67a20e5221c805657693d75
  $wcheckcigseqlen2 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> GHC.Types.Bool
  {- Arity: 6,
     Strictness: <L,U><L,U><L,U><S,U><L,1*U(U,U,U,U)><L,1*U(U,U,U,U)>,
     Inline: [0] -}
bae120165063ee0712d1b4c1714e3ce1
  $wchecknonzeroCigMatch ::
    Data.ByteString.Internal.ByteString
    -> GHC.Types.Bool -> GHC.Types.Bool -> GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,1*U(U,U,U,1*U)><L,1*U><S,1*U>, Inline: [0],
     Unfolding: (\ (ww :: Data.ByteString.Internal.ByteString)
                   (ww1 :: GHC.Types.Bool)
                   (ww2 :: GHC.Types.Bool) ->
                 case ww2 of wild {
                   GHC.Types.False
                   -> case ww1 of wild1 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True
                        -> case ww of wild2 { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                           case dt3 of ds6 {
                             DEFAULT
                             -> case Lib.$wgo5
                                       (GHC.Prim.plusAddr# dt dt2)
                                       (GHC.Prim.plusAddr# dt (GHC.Prim.+# dt2 ds6))
                                       GHC.Prim.realWorld# of ds7 { (#,#) ipv ipv1 ->
                                case GHC.Prim.touch#
                                       @ 'GHC.Types.LiftedRep
                                       @ GHC.ForeignPtr.ForeignPtrContents
                                       dt1
                                       ipv of s' { DEFAULT ->
                                ipv1 } }
                             0# -> GHC.Types.False } } }
                   GHC.Types.True -> GHC.Types.True }) -}
da045bf07515e8c2648cec3a088ad87f
  $wcigarP ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                            r) ->
                 Lib.$wp
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w
                   w1
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (a1 :: (GHC.Integer.Type.Integer,
                              Data.ByteString.Internal.ByteString))[OneShot] ->
                    case t'
                           `cast`
                         (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww7 { Data.Attoparsec.ByteString.Buffer.Buf ww8 ww9 ww10 ww11 ww12 ww13 ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww14 { GHC.Types.I# ww15 ->
                    Lib.$wmany_v
                      @ r
                      ww8
                      ww9
                      ww10
                      ww11
                      ww12
                      ww13
                      ww15
                      more'
                      (\ (t'1 :: Data.Attoparsec.Internal.Types.State
                                   Data.ByteString.Internal.ByteString)
                         (pos'1 :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                         (more'1 :: Data.Attoparsec.Internal.Types.More)[OneShot]
                         (a3 :: [(GHC.Integer.Type.Integer,
                                  Data.ByteString.Internal.ByteString)])[OneShot] ->
                       case pos'1
                              `cast`
                            (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                       w2
                         t'1
                         nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                         more'1
                         (GHC.Types.:
                            @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                            a1
                            a3) }) } })) -}
2950fbfd89094ae74215e1d9e21ae181
  $wcigseqlenHdrPassTest ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> GHC.Types.Bool
  {- Arity: 6,
     Strictness: <L,U><L,U><L,U><S,U><L,1*U(U,U,U,U)><L,1*U(U,U,U,U)>,
     Inline: [0] -}
ec2be498245b4129071895e17e20e7fc
  $wcontractcigar ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.ByteString.Internal.ByteString
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.addtrimtag5 of wild1 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                 let {
                   $j :: Data.ByteString.Internal.ByteString <join 0>
                   = Data.ByteString.concat
                       (GHC.Base.map
                          @ Data.ByteString.Internal.ByteString
                          @ Data.ByteString.Internal.ByteString
                          Lib.contractcigar1
                          (Data.ByteString.$wgroup ww ww1 ww2 ww3))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim./=# ww3 dt7) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqAddr# ww dt4) of wild3 {
                        GHC.Types.False
                        -> case Data.ByteString.Internal.$wcompareBytes
                                  ww
                                  ww1
                                  ww2
                                  ww3
                                  dt4
                                  dt5
                                  dt6
                                  dt7 of wild4 {
                             DEFAULT -> $j GHC.Types.EQ -> wild1 }
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# ww2 dt6) of wild4 {
                             GHC.Types.False
                             -> case Data.ByteString.Internal.$wcompareBytes
                                       ww
                                       ww1
                                       ww2
                                       ww3
                                       dt4
                                       dt5
                                       dt6
                                       dt7 of wild5 {
                                  DEFAULT -> $j GHC.Types.EQ -> wild1 }
                             GHC.Types.True -> wild1 } }
                   GHC.Types.True -> $j } }) -}
47a1c3d7802e9e69d6d61d535a8dc2ae
  $wcreateprimerbedmaps ::
    GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Data.Map.Internal.Map
             Lib.UChr (Data.IntMap.Internal.IntMap Lib.BedRecord),
           Data.Map.Internal.Map
             Lib.UChr (Data.IntMap.Internal.IntMap Lib.BedRecord)) #)
  {- Arity: 3, Strictness: <S,1*U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Types.Bool)
                   (ww1 :: GHC.Base.String)
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case ww of wild {
                   GHC.Types.False
                   -> case Lib.createprimerbedmaps4 ww1 w of ds6 { (#,#) ipv ipv1 ->
                      (# ipv,
                         (case Lib.masterToFPrimerBED
                                 ipv1 of ww2 { Data.Vector.Vector ww3 ww4 ww5 ->
                          Lib.$wmakechrbedmap ww3 ww4 ww5 },
                          case Lib.masterToRPrimerBED
                                 ipv1 of ww2 { Data.Vector.Vector ww3 ww4 ww5 ->
                          Lib.$wmakechrbedmap ww3 ww4 ww5 }) #) }
                   GHC.Types.True
                   -> case Lib.createprimerbedmaps2 ww1 w of ds6 { (#,#) ipv ipv1 ->
                      (# ipv,
                         (case GHC.Magic.runRW#
                                 @ ('GHC.Types.TupleRep
                                      '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                                 @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                                      Data.Vector.Vector Lib.BedRecord #)
                                 (\ (s114 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                  case GHC.Prim.newArray#
                                         @ Lib.BedRecord
                                         @ (Control.Monad.Primitive.PrimState
                                              (GHC.ST.ST GHC.Prim.RealWorld))
                                         0#
                                         (Data.Vector.Mutable.uninitialised @ Lib.BedRecord)
                                         s114
                                           `cast`
                                         (Nth:2
                                              (Nth:2
                                                   (Trans
                                                        (<GHC.ST.STRep
                                                            GHC.Prim.RealWorld
                                                            (Data.Primitive.Array.MutableArray
                                                               (Control.Monad.Primitive.PrimState
                                                                  (GHC.ST.ST GHC.Prim.RealWorld))
                                                               Lib.BedRecord)>_R
                                                         ->_R Sym (GHC.ST.N:ST[0]
                                                                       <GHC.Prim.RealWorld>_N
                                                                       <Data.Primitive.Array.MutableArray
                                                                          (Control.Monad.Primitive.PrimState
                                                                             (GHC.ST.ST
                                                                                GHC.Prim.RealWorld))
                                                                          Lib.BedRecord>_R))
                                                        (((GHC.Prim.State#
                                                             (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                       <GHC.Prim.RealWorld>_N)))_R
                                                          ->_R ((#,#)
                                                                  <'GHC.Types.TupleRep '[]>_R
                                                                  <'GHC.Types.LiftedRep>_R
                                                                  (GHC.Prim.State#
                                                                     (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                               <GHC.Prim.RealWorld>_N)))_R
                                                                  <Data.Primitive.Array.MutableArray
                                                                     (Control.Monad.Primitive.PrimState
                                                                        (GHC.ST.ST
                                                                           GHC.Prim.RealWorld))
                                                                     Lib.BedRecord>_R)_R)
                                                         ->_R <GHC.ST.ST
                                                                 GHC.Prim.RealWorld
                                                                 (Data.Primitive.Array.MutableArray
                                                                    (Control.Monad.Primitive.PrimState
                                                                       (GHC.ST.ST
                                                                          GHC.Prim.RealWorld))
                                                                    Lib.BedRecord)>_R)))) of ds7 { (#,#) ipv2 ipv3 ->
                                  Lib.$wfoldlM_loop1
                                    GHC.Types.SPEC
                                    0#
                                    0#
                                    ipv3
                                      `cast`
                                    (GHC.Prim.MutableArray#
                                       (Control.Monad.Primitive.D:R:PrimStateST[0]
                                            <GHC.Prim.RealWorld>_N)
                                       <Lib.BedRecord>_R)_R
                                    0#
                                    (GHC.Base.map @ Lib.BEDPE @ Lib.BedRecord Lib.bedpeToFbed ipv1)
                                    ipv2
                                      `cast`
                                    (Nth:2
                                         (Nth:3
                                              (Nth:2
                                                   (Trans
                                                        (((GHC.Prim.State#
                                                             (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                  <GHC.Prim.RealWorld>_N))_R
                                                          ->_R ((#,#)
                                                                  <'GHC.Types.TupleRep '[]>_R
                                                                  <'GHC.Types.LiftedRep>_R
                                                                  (GHC.Prim.State#
                                                                     (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                          <GHC.Prim.RealWorld>_N))_R
                                                                  <Data.Primitive.Array.MutableArray
                                                                     (Control.Monad.Primitive.PrimState
                                                                        (GHC.ST.ST
                                                                           GHC.Prim.RealWorld))
                                                                     Lib.BedRecord>_R)_R)
                                                         ->_R <GHC.ST.ST
                                                                 GHC.Prim.RealWorld
                                                                 (Data.Primitive.Array.MutableArray
                                                                    (Control.Monad.Primitive.PrimState
                                                                       (GHC.ST.ST
                                                                          GHC.Prim.RealWorld))
                                                                    Lib.BedRecord)>_R)
                                                        (<GHC.ST.STRep
                                                            GHC.Prim.RealWorld
                                                            (Data.Primitive.Array.MutableArray
                                                               (Control.Monad.Primitive.PrimState
                                                                  (GHC.ST.ST GHC.Prim.RealWorld))
                                                               Lib.BedRecord)>_R
                                                         ->_R GHC.ST.N:ST[0]
                                                                  <GHC.Prim.RealWorld>_N
                                                                  <Data.Primitive.Array.MutableArray
                                                                     (Control.Monad.Primitive.PrimState
                                                                        (GHC.ST.ST
                                                                           GHC.Prim.RealWorld))
                                                                     Lib.BedRecord>_R))))) }) of ds7 { (#,#) ipv2 ipv3 ->
                          case ipv3 of ww2 { Data.Vector.Vector ww3 ww4 ww5 ->
                          Lib.$wmakechrbedmap ww3 ww4 ww5 } },
                          case GHC.Magic.runRW#
                                 @ ('GHC.Types.TupleRep
                                      '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                                 @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                                      Data.Vector.Vector Lib.BedRecord #)
                                 (\ (s114 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                  case GHC.Prim.newArray#
                                         @ Lib.BedRecord
                                         @ (Control.Monad.Primitive.PrimState
                                              (GHC.ST.ST GHC.Prim.RealWorld))
                                         0#
                                         (Data.Vector.Mutable.uninitialised @ Lib.BedRecord)
                                         s114
                                           `cast`
                                         (Nth:2
                                              (Nth:2
                                                   (Trans
                                                        (<GHC.ST.STRep
                                                            GHC.Prim.RealWorld
                                                            (Data.Primitive.Array.MutableArray
                                                               (Control.Monad.Primitive.PrimState
                                                                  (GHC.ST.ST GHC.Prim.RealWorld))
                                                               Lib.BedRecord)>_R
                                                         ->_R Sym (GHC.ST.N:ST[0]
                                                                       <GHC.Prim.RealWorld>_N
                                                                       <Data.Primitive.Array.MutableArray
                                                                          (Control.Monad.Primitive.PrimState
                                                                             (GHC.ST.ST
                                                                                GHC.Prim.RealWorld))
                                                                          Lib.BedRecord>_R))
                                                        (((GHC.Prim.State#
                                                             (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                       <GHC.Prim.RealWorld>_N)))_R
                                                          ->_R ((#,#)
                                                                  <'GHC.Types.TupleRep '[]>_R
                                                                  <'GHC.Types.LiftedRep>_R
                                                                  (GHC.Prim.State#
                                                                     (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                               <GHC.Prim.RealWorld>_N)))_R
                                                                  <Data.Primitive.Array.MutableArray
                                                                     (Control.Monad.Primitive.PrimState
                                                                        (GHC.ST.ST
                                                                           GHC.Prim.RealWorld))
                                                                     Lib.BedRecord>_R)_R)
                                                         ->_R <GHC.ST.ST
                                                                 GHC.Prim.RealWorld
                                                                 (Data.Primitive.Array.MutableArray
                                                                    (Control.Monad.Primitive.PrimState
                                                                       (GHC.ST.ST
                                                                          GHC.Prim.RealWorld))
                                                                    Lib.BedRecord)>_R)))) of ds7 { (#,#) ipv2 ipv3 ->
                                  Lib.$wfoldlM_loop
                                    GHC.Types.SPEC
                                    0#
                                    0#
                                    ipv3
                                      `cast`
                                    (GHC.Prim.MutableArray#
                                       (Control.Monad.Primitive.D:R:PrimStateST[0]
                                            <GHC.Prim.RealWorld>_N)
                                       <Lib.BedRecord>_R)_R
                                    0#
                                    (GHC.Base.map @ Lib.BEDPE @ Lib.BedRecord Lib.bedpeToRbed ipv1)
                                    ipv2
                                      `cast`
                                    (Nth:2
                                         (Nth:3
                                              (Nth:2
                                                   (Trans
                                                        (((GHC.Prim.State#
                                                             (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                  <GHC.Prim.RealWorld>_N))_R
                                                          ->_R ((#,#)
                                                                  <'GHC.Types.TupleRep '[]>_R
                                                                  <'GHC.Types.LiftedRep>_R
                                                                  (GHC.Prim.State#
                                                                     (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                          <GHC.Prim.RealWorld>_N))_R
                                                                  <Data.Primitive.Array.MutableArray
                                                                     (Control.Monad.Primitive.PrimState
                                                                        (GHC.ST.ST
                                                                           GHC.Prim.RealWorld))
                                                                     Lib.BedRecord>_R)_R)
                                                         ->_R <GHC.ST.ST
                                                                 GHC.Prim.RealWorld
                                                                 (Data.Primitive.Array.MutableArray
                                                                    (Control.Monad.Primitive.PrimState
                                                                       (GHC.ST.ST
                                                                          GHC.Prim.RealWorld))
                                                                    Lib.BedRecord)>_R)
                                                        (<GHC.ST.STRep
                                                            GHC.Prim.RealWorld
                                                            (Data.Primitive.Array.MutableArray
                                                               (Control.Monad.Primitive.PrimState
                                                                  (GHC.ST.ST GHC.Prim.RealWorld))
                                                               Lib.BedRecord)>_R
                                                         ->_R GHC.ST.N:ST[0]
                                                                  <GHC.Prim.RealWorld>_N
                                                                  <Data.Primitive.Array.MutableArray
                                                                     (Control.Monad.Primitive.PrimState
                                                                        (GHC.ST.ST
                                                                           GHC.Prim.RealWorld))
                                                                     Lib.BedRecord>_R))))) }) of ds7 { (#,#) ipv2 ipv3 ->
                          case ipv3 of ww2 { Data.Vector.Vector ww3 ww4 ww5 ->
                          Lib.$wmakechrbedmap ww3 ww4 ww5 } }) #) } }) -}
104ce8d3373ce13b51a5d60c324547e8
  $wds ::
    ((GHC.Integer.Type.Integer
      -> GHC.Integer.Type.Integer
      -> GHC.Integer.Type.Integer
      -> Lib.RunStats)
     -> Data.Conduit.Internal.Pipe.Pipe
          Lib.AlignedRead
          Lib.AlignedRead
          Data.Void.Void
          ()
          (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
          b1)
    -> (# Lib.AlignedRead
          -> Data.Conduit.Internal.Pipe.Pipe
               Lib.AlignedRead
               Lib.AlignedRead
               Data.Void.Void
               ()
               (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
               b1,
          ()
          -> Data.Conduit.Internal.Pipe.Pipe
               Lib.AlignedRead
               Lib.AlignedRead
               Data.Void.Void
               ()
               (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
               b1 #)
  {- Arity: 1, Strictness: <L,C(U)>, Inline: [0],
     Unfolding: (\ @ b1
                   (w :: (GHC.Integer.Type.Integer
                          -> GHC.Integer.Type.Integer
                          -> GHC.Integer.Type.Integer
                          -> Lib.RunStats)
                         -> Data.Conduit.Internal.Pipe.Pipe
                              Lib.AlignedRead
                              Lib.AlignedRead
                              Data.Void.Void
                              ()
                              (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                              b1) ->
                 Lib.$wloop1
                   Lib.defaultBed2
                   @ b1
                   (\ (a1 :: GHC.Integer.Type.Integer) ->
                    let {
                      lvl1009 :: GHC.Types.Double
                      = case GHC.Integer.Type.doubleFromInteger a1 of wild2 { DEFAULT ->
                        GHC.Types.D# wild2 }
                    } in
                    w (\ (mapd :: GHC.Integer.Type.Integer)
                         (trimd :: GHC.Integer.Type.Integer)
                         (trimd2z :: GHC.Integer.Type.Integer) ->
                       Lib.RunStats
                         a1
                         mapd
                         trimd
                         trimd2z
                         (case GHC.Integer.Type.doubleFromInteger
                                 trimd of wild2 { DEFAULT ->
                          case lvl1009 of wild3 { GHC.Types.D# y ->
                          case GHC.Prim./## wild2 y of wild4 { DEFAULT ->
                          GHC.Types.D# (GHC.Prim.*## wild4 100.0##) } } })
                         (case GHC.Integer.Type.doubleFromInteger mapd of wild2 { DEFAULT ->
                          case lvl1009 of wild3 { GHC.Types.D# y ->
                          case GHC.Prim./## wild2 y of wild4 { DEFAULT ->
                          GHC.Types.D# (GHC.Prim.*## wild4 100.0##) } } })))) -}
7a25015f55191e825511d2ef54dfd9c1
  $wfoldlM_loop ::
    GHC.Types.SPEC
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.MutableArray# GHC.Prim.RealWorld Lib.BedRecord
    -> GHC.Prim.Int#
    -> [Lib.BedRecord]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Vector.Vector Lib.BedRecord #)
  {- Arity: 7, Strictness: <S,1*U><L,U><L,U><S,U><L,U><S,1*U><S,U>,
     Inline: [0] -}
6ff2d01a1cdb363cd9883bf47586e475
  $wfoldlM_loop1 ::
    GHC.Types.SPEC
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.MutableArray# GHC.Prim.RealWorld Lib.BedRecord
    -> GHC.Prim.Int#
    -> [Lib.BedRecord]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Vector.Vector Lib.BedRecord #)
  {- Arity: 7, Strictness: <S,1*U><L,U><L,U><S,U><L,U><S,1*U><S,U>,
     Inline: [0] -}
b81a51cb6ed8d03ba61bb1710f4aa48b
  $wfoldlM_loop2 ::
    GHC.Types.SPEC
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.MutableArray# GHC.Prim.RealWorld Lib.BedRecord
    -> GHC.Prim.Int#
    -> [Lib.BedRecord]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Vector.Vector Lib.BedRecord #)
  {- Arity: 7, Strictness: <S,1*U><L,U><L,U><S,U><L,U><S,1*U><S,U>,
     Inline: [0] -}
591714cdac574e4e254d0ce4a79fb913
  $wfoldlM_loop3 ::
    GHC.Types.SPEC
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.MutableArray# GHC.Prim.RealWorld Lib.BedRecord
    -> GHC.Prim.Int#
    -> [Lib.BedRecord]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Vector.Vector Lib.BedRecord #)
  {- Arity: 7, Strictness: <S,1*U><L,U><L,U><S,U><L,U><S,1*U><S,U>,
     Inline: [0] -}
fc5f6bec25aea47f67f53427011ccfad
  $wfoldlM_loop4 ::
    GHC.Types.SPEC
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.MutableArray# GHC.Prim.RealWorld Lib.BedRecord
    -> GHC.Prim.Int#
    -> [Lib.BedRecord]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Vector.Vector Lib.BedRecord #)
  {- Arity: 7, Strictness: <S,1*U><L,U><L,U><S,U><L,U><S,1*U><S,U>,
     Inline: [0] -}
82f6f6f0e98320184afc0e3f7af469ff
  $wgetAlignedLength ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Integer.Type.Integer
  {- Arity: 4, Strictness: <S,U><L,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.$wparseCigar
                        @ [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                        ww
                        ww1
                        ww2
                        ww3
                        ww3
                        0#
                        0#
                        Data.Attoparsec.Internal.Types.Complete
                        (Data.Attoparsec.ByteString.Internal.failK
                           @ [(GHC.Integer.Type.Integer,
                               Data.ByteString.Internal.ByteString)])
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [GHC.Base.String]
                               -> GHC.Base.String
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString
                                    [(GHC.Integer.Type.Integer,
                                      Data.ByteString.Internal.ByteString)]>_R)
                        (Data.Attoparsec.ByteString.Internal.successK
                           @ [(GHC.Integer.Type.Integer,
                               Data.ByteString.Internal.ByteString)])
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [(GHC.Integer.Type.Integer,
                                    Data.ByteString.Internal.ByteString)]
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString
                                    [(GHC.Integer.Type.Integer,
                                      Data.ByteString.Internal.ByteString)]>_R) of wild {
                   Data.Attoparsec.Internal.Types.Fail ds6 ds7 err
                   -> case ds7 of wild1 { DEFAULT ->
                      case GHC.List.badHead ret_ty GHC.Integer.Type.Integer of {} }
                   Data.Attoparsec.Internal.Types.Partial ipv
                   -> case Lib.checkCigarSeqlen1 ret_ty GHC.Integer.Type.Integer of {}
                   Data.Attoparsec.Internal.Types.Done ds6 a1
                   -> Lib.getAlignedLength_go a1 Lib.defaultBed2 }) -}
c71abdfc46a0ac97bfd160c3fc69c024
  $wgetTrimdcigCoordDiff ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
  {- Arity: 6, Strictness: <S,U><L,U><S,U><S,U><L,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Integer.Type.Integer)
                   (ww5 :: GHC.Integer.Type.Integer) ->
                 case Lib.addtrimtag5 of wild1 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                 let {
                   $j :: GHC.Integer.Type.Integer <join 0>
                   = GHC.Integer.Type.minusInteger
                       (GHC.Integer.Type.minusInteger ww5 ww4)
                       (Lib.getTrimdcigCoordDiff_go
                          (Lib.$wmapcig ww ww1 ww2 ww3)
                          Lib.defaultBed2)
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim./=# ww3 dt7) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqAddr# ww dt4) of wild3 {
                        GHC.Types.False
                        -> case Data.ByteString.Internal.$wcompareBytes
                                  ww
                                  ww1
                                  ww2
                                  ww3
                                  dt4
                                  dt5
                                  dt6
                                  dt7 of wild4 {
                             DEFAULT -> $j GHC.Types.EQ -> Lib.defaultBed2 }
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# ww2 dt6) of wild4 {
                             GHC.Types.False
                             -> case Data.ByteString.Internal.$wcompareBytes
                                       ww
                                       ww1
                                       ww2
                                       ww3
                                       dt4
                                       dt5
                                       dt6
                                       dt7 of wild5 {
                                  DEFAULT -> $j GHC.Types.EQ -> Lib.defaultBed2 }
                             GHC.Types.True -> Lib.defaultBed2 } }
                   GHC.Types.True -> $j } }) -}
435ea3a80912c3371c842f8caed45192
  $wgetcigseqdiff ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Integer.Type.Integer
  {- Arity: 5, Strictness: <S,U><L,U><S,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#) ->
                 GHC.Integer.Type.minusInteger
                   (GHC.Integer.Type.smallInteger ww4)
                   (Lib.getcigseqdiff_go
                      (Lib.$wmapcig ww ww1 ww2 ww3)
                      Lib.defaultBed2)) -}
5ff739c5e33c727e0fcc469e6f96396f
  $wgetcol ::
    GHC.Types.Int
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Array# (Data.Vector.Vector a)
    -> Data.Vector.Vector a
  {- Arity: 4, Strictness: <L,U(U)><L,U><S,U><L,U>, Inline: [0],
     Unfolding: (\ @ a
                   (w :: GHC.Types.Int)
                   (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Array# (Data.Vector.Vector a)) ->
                 case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Vector.Vector a #)
                        (\ (s114 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newArray#
                                @ a
                                @ (Control.Monad.Primitive.PrimState
                                     (GHC.ST.ST GHC.Prim.RealWorld))
                                ww1
                                (Data.Vector.Mutable.uninitialised @ a)
                                s114
                                  `cast`
                                (Nth:2
                                     (Nth:2
                                          (Trans
                                               (<GHC.ST.STRep
                                                   GHC.Prim.RealWorld
                                                   (Data.Primitive.Array.MutableArray
                                                      (Control.Monad.Primitive.PrimState
                                                         (GHC.ST.ST GHC.Prim.RealWorld))
                                                      a)>_R
                                                ->_R Sym (GHC.ST.N:ST[0]
                                                              <GHC.Prim.RealWorld>_N
                                                              <Data.Primitive.Array.MutableArray
                                                                 (Control.Monad.Primitive.PrimState
                                                                    (GHC.ST.ST GHC.Prim.RealWorld))
                                                                 a>_R))
                                               (((GHC.Prim.State#
                                                    (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                              <GHC.Prim.RealWorld>_N)))_R
                                                 ->_R ((#,#)
                                                         <'GHC.Types.TupleRep '[]>_R
                                                         <'GHC.Types.LiftedRep>_R
                                                         (GHC.Prim.State#
                                                            (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                      <GHC.Prim.RealWorld>_N)))_R
                                                         <Data.Primitive.Array.MutableArray
                                                            (Control.Monad.Primitive.PrimState
                                                               (GHC.ST.ST GHC.Prim.RealWorld))
                                                            a>_R)_R)
                                                ->_R <GHC.ST.ST
                                                        GHC.Prim.RealWorld
                                                        (Data.Primitive.Array.MutableArray
                                                           (Control.Monad.Primitive.PrimState
                                                              (GHC.ST.ST GHC.Prim.RealWorld))
                                                           a)>_R)))) of ds6 { (#,#) ipv ipv1 ->
                         letrec {
                           $wfoldlM'_loop :: GHC.Types.SPEC
                                             -> GHC.Prim.Int#
                                             -> GHC.Prim.Int#
                                             -> GHC.Prim.State# GHC.Prim.RealWorld
                                             -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                   Data.Vector.Vector a #)
                             <join 4> {- Arity: 4, Strictness: <S,1*U><L,U><S,U><S,U>,
                                         Inline: [0] -}
                           = \ (w1 :: GHC.Types.SPEC)
                               (ww3 :: GHC.Prim.Int#)
                               (ww4 :: GHC.Prim.Int#)
                               (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                             case w1 of ds7 { DEFAULT ->
                             case GHC.Prim.tagToEnum#
                                    @ GHC.Types.Bool
                                    (GHC.Prim.>=# ww4 ww1) of wild {
                               GHC.Types.False
                               -> case GHC.Prim.writeArray#
                                         @ (Control.Monad.Primitive.PrimState
                                              (GHC.ST.ST GHC.Prim.RealWorld))
                                         @ a
                                         ipv1
                                         ww3
                                         (case w of wild1 { GHC.Types.I# x ->
                                          let {
                                            file :: GHC.Prim.Addr# = "./Data/Vector/Generic.hs"#
                                          } in
                                          case GHC.Prim.indexArray#
                                                 @ (Data.Vector.Vector a)
                                                 ww2
                                                 (GHC.Prim.+# ww ww4) of ds8 { Unit# ipv2 ->
                                          case GHC.Prim.tagToEnum#
                                                 @ GHC.Types.Bool
                                                 (GHC.Prim.>=# x 0#) of wild2 {
                                            GHC.Types.False
                                            -> case ipv2 of v2 { Data.Vector.Vector ipv3 ipv4 ipv5 ->
                                               Lib.getcol1 @ a ipv4 x file }
                                            GHC.Types.True
                                            -> case ipv2 of v2 { Data.Vector.Vector ipv3 ipv4 ipv5 ->
                                               case GHC.Prim.tagToEnum#
                                                      @ GHC.Types.Bool
                                                      (GHC.Prim.<# x ipv4) of wild3 {
                                                 GHC.Types.False -> Lib.getcol1 @ a ipv4 x file
                                                 GHC.Types.True
                                                 -> case GHC.Prim.indexArray#
                                                           @ a
                                                           ipv5
                                                           (GHC.Prim.+#
                                                              ipv3
                                                              x) of ds9 { Unit# ipv6 ->
                                                    ipv6 } } } } } })
                                         w2
                                           `cast`
                                         (Nth:2
                                              (Nth:2
                                                   (Trans
                                                        (<GHC.ST.STRep GHC.Prim.RealWorld ()>_R
                                                         ->_R Sym (GHC.ST.N:ST[0]
                                                                       <GHC.Prim.RealWorld>_N
                                                                       <()>_R))
                                                        (((GHC.Prim.State#
                                                             (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                       <GHC.Prim.RealWorld>_N)))_R
                                                          ->_R ((#,#)
                                                                  <'GHC.Types.TupleRep '[]>_R
                                                                  <'GHC.Types.LiftedRep>_R
                                                                  (GHC.Prim.State#
                                                                     (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                               <GHC.Prim.RealWorld>_N)))_R
                                                                  <()>_R)_R)
                                                         ->_R <GHC.ST.ST
                                                                 GHC.Prim.RealWorld
                                                                 ()>_R)))) of s'# { DEFAULT ->
                                  $wfoldlM'_loop
                                    GHC.Types.SPEC
                                    (GHC.Prim.+# ww3 1#)
                                    (GHC.Prim.+# ww4 1#)
                                    s'#
                                      `cast`
                                    (Nth:2
                                         (Nth:3
                                              (Nth:2
                                                   (Trans
                                                        (((GHC.Prim.State#
                                                             (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                  <GHC.Prim.RealWorld>_N))_R
                                                          ->_R ((#,#)
                                                                  <'GHC.Types.TupleRep '[]>_R
                                                                  <'GHC.Types.LiftedRep>_R
                                                                  (GHC.Prim.State#
                                                                     (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                          <GHC.Prim.RealWorld>_N))_R
                                                                  <()>_R)_R)
                                                         ->_R <GHC.ST.ST GHC.Prim.RealWorld ()>_R)
                                                        (<GHC.ST.STRep GHC.Prim.RealWorld ()>_R
                                                         ->_R GHC.ST.N:ST[0]
                                                                  <GHC.Prim.RealWorld>_N
                                                                  <()>_R))))) }
                               GHC.Types.True
                               -> case GHC.Prim.unsafeFreezeArray#
                                         @ (Control.Monad.Primitive.PrimState
                                              (GHC.ST.ST GHC.Prim.RealWorld))
                                         @ a
                                         ipv1
                                         w2
                                           `cast`
                                         (Nth:2
                                              (Nth:2
                                                   (Trans
                                                        (<GHC.ST.STRep
                                                            GHC.Prim.RealWorld
                                                            (Data.Primitive.Array.Array a)>_R
                                                         ->_R Sym (GHC.ST.N:ST[0]
                                                                       <GHC.Prim.RealWorld>_N
                                                                       <Data.Primitive.Array.Array
                                                                          a>_R))
                                                        (((GHC.Prim.State#
                                                             (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                       <GHC.Prim.RealWorld>_N)))_R
                                                          ->_R ((#,#)
                                                                  <'GHC.Types.TupleRep '[]>_R
                                                                  <'GHC.Types.LiftedRep>_R
                                                                  (GHC.Prim.State#
                                                                     (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                               <GHC.Prim.RealWorld>_N)))_R
                                                                  <Data.Primitive.Array.Array
                                                                     a>_R)_R)
                                                         ->_R <GHC.ST.ST
                                                                 GHC.Prim.RealWorld
                                                                 (Data.Primitive.Array.Array
                                                                    a)>_R)))) of ds8 { (#,#) ipv2 ipv3 ->
                                  (# ipv2
                                       `cast`
                                     (Nth:2
                                          (Nth:3
                                               (Nth:2
                                                    (Trans
                                                         (((GHC.Prim.State#
                                                              (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                   <GHC.Prim.RealWorld>_N))_R
                                                           ->_R ((#,#)
                                                                   <'GHC.Types.TupleRep '[]>_R
                                                                   <'GHC.Types.LiftedRep>_R
                                                                   (GHC.Prim.State#
                                                                      (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                           <GHC.Prim.RealWorld>_N))_R
                                                                   <Data.Primitive.Array.Array
                                                                      a>_R)_R)
                                                          ->_R <GHC.ST.ST
                                                                  GHC.Prim.RealWorld
                                                                  (Data.Primitive.Array.Array a)>_R)
                                                         (<GHC.ST.STRep
                                                             GHC.Prim.RealWorld
                                                             (Data.Primitive.Array.Array a)>_R
                                                          ->_R GHC.ST.N:ST[0]
                                                                   <GHC.Prim.RealWorld>_N
                                                                   <Data.Primitive.Array.Array
                                                                      a>_R))))),
                                     Data.Vector.Vector @ a 0# ww3 ipv3 #) } } }
                         } in
                         $wfoldlM'_loop
                           GHC.Types.SPEC
                           0#
                           0#
                           ipv
                             `cast`
                           (Nth:2
                                (Nth:3
                                     (Nth:2
                                          (Trans
                                               (((GHC.Prim.State#
                                                    (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                         <GHC.Prim.RealWorld>_N))_R
                                                 ->_R ((#,#)
                                                         <'GHC.Types.TupleRep '[]>_R
                                                         <'GHC.Types.LiftedRep>_R
                                                         (GHC.Prim.State#
                                                            (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                 <GHC.Prim.RealWorld>_N))_R
                                                         <Data.Primitive.Array.MutableArray
                                                            (Control.Monad.Primitive.PrimState
                                                               (GHC.ST.ST GHC.Prim.RealWorld))
                                                            a>_R)_R)
                                                ->_R <GHC.ST.ST
                                                        GHC.Prim.RealWorld
                                                        (Data.Primitive.Array.MutableArray
                                                           (Control.Monad.Primitive.PrimState
                                                              (GHC.ST.ST GHC.Prim.RealWorld))
                                                           a)>_R)
                                               (<GHC.ST.STRep
                                                   GHC.Prim.RealWorld
                                                   (Data.Primitive.Array.MutableArray
                                                      (Control.Monad.Primitive.PrimState
                                                         (GHC.ST.ST GHC.Prim.RealWorld))
                                                      a)>_R
                                                ->_R GHC.ST.N:ST[0]
                                                         <GHC.Prim.RealWorld>_N
                                                         <Data.Primitive.Array.MutableArray
                                                            (Control.Monad.Primitive.PrimState
                                                               (GHC.ST.ST GHC.Prim.RealWorld))
                                                            a>_R))))) }) of ds6 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
0bf7ab269d11633fdecc9e372c00e49f
  $wgl ::
    [Data.ByteString.Internal.ByteString]
    -> GHC.Prim.Int# -> GHC.Prim.Int#
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,U>, Inline: [0] -}
3f869950b5a45effe579eb271fbac5f9
  $wgo ::
    [Lib.AlignedRead] -> (# [Lib.AlignedRead], [Lib.AlignedRead] #)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>, Inline: [0] -}
527ea53f74c6e4a7ef7fc676778348da
  $wgo1 ::
    [Lib.AlignedRead] -> (# [Lib.AlignedRead], [Lib.AlignedRead] #)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>, Inline: [0] -}
2bfc337997af8c21e7fac5237156549f
  $wgo2 ::
    [Lib.AlignedRead] -> (# [Lib.AlignedRead], [Lib.AlignedRead] #)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>, Inline: [0] -}
044435cf0b6fea2350c36f6c3d007403
  $wgo3 ::
    GHC.Prim.Int#
    -> Data.Set.Internal.Set Lib.UChr
    -> [Lib.UChr]
    -> Data.Set.Internal.Set Lib.UChr
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
ca97a63a3fb22bc3866b8cd0f5d07832
  $wgo4 :: [Lib.UChr] -> GHC.Prim.Int# -> GHC.Prim.Int#
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,U>, Inline: [0] -}
ac70a85d16ed31b4ef541f0fbc4dd231
  $wgo5 ::
    GHC.Prim.Addr#
    -> GHC.Prim.Addr#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 3, HasNoCafRefs, Strictness: <S,U><S,U><S,U>,
     Inline: [0] -}
0a0c266e04847e08eb648593944e0ea4
  $wgo6 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         ()
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
25fcb2041e50df9d5a1d9a327c330468
  $wgo7 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         ()
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
7629679f0f9d74637221ef4952294436
  $whdralnparser ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.AlignedRead
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.AlignedRead
                            r) ->
                 Lib.$wsamhdrparser
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w
                   w1
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (a1 :: Data.ByteString.Internal.ByteString)[OneShot] ->
                    case t'
                           `cast`
                         (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww7 { Data.Attoparsec.ByteString.Buffer.Buf ww8 ww9 ww10 ww11 ww12 ww13 ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww14 { GHC.Types.I# ww15 ->
                    Lib.$wmany_v1
                      @ r
                      ww8
                      ww9
                      ww10
                      ww11
                      ww12
                      ww13
                      ww15
                      more'
                      (\ (t'1 :: Data.Attoparsec.Internal.Types.State
                                   Data.ByteString.Internal.ByteString)
                         (pos'1 :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                         (more'1 :: Data.Attoparsec.Internal.Types.More)[OneShot]
                         (a3 :: [Data.ByteString.Internal.ByteString])[OneShot] ->
                       case pos'1
                              `cast`
                            (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                       w2
                         t'1
                         nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                         more'1
                         (Lib.AlignedRead
                            Lib.hdralnparser2
                            Lib.$fShowAlignedRead2
                            Lib.NONE
                            Lib.defaultBed2
                            Lib.defaultBed2
                            Lib.defaultBed2
                            Lib.addtrimtag5
                            Lib.addtrimtag5
                            Lib.defaultAlignment_v
                            Lib.defaultAlignment_v
                            Lib.addtrimtag5
                            Lib.defaultBed2
                            Lib.defaultBed2
                            Lib.defaultAlignment1
                            Lib.defaultAlignment1
                            Lib.defaultAlignment1
                            Lib.defaultAlignment1
                            GHC.Types.False
                            GHC.Types.False
                            (GHC.Types.[] @ Lib.BedRecord)
                            (GHC.Types.[] @ Lib.BedRecord)
                            GHC.Types.False
                            GHC.Types.False
                            Lib.defaultBed2
                            Lib.defaultBed2
                            (GHC.Types.: @ Data.ByteString.Internal.ByteString a1 a3)
                            GHC.Types.True
                            Lib.defaultAlignment1
                            Lib.defaultAlignment1
                            Lib.defaultBed
                            GHC.Types.False) }) } })) -}
c7ef7eabeb631d39d7afe0a590a0e0c4
  $whdralnparserEOL ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.PairedAln
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.PairedAln
                            r) ->
                 Lib.$wsamhdrparserEOL
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w
                   w1
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (a1 :: Data.ByteString.Internal.ByteString)[OneShot] ->
                    case t'
                           `cast`
                         (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww7 { Data.Attoparsec.ByteString.Buffer.Buf ww8 ww9 ww10 ww11 ww12 ww13 ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww14 { GHC.Types.I# ww15 ->
                    Lib.$wmany_v2
                      @ r
                      ww8
                      ww9
                      ww10
                      ww11
                      ww12
                      ww13
                      ww15
                      more'
                      (\ (t'1 :: Data.Attoparsec.Internal.Types.State
                                   Data.ByteString.Internal.ByteString)
                         (pos'1 :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                         (more'1 :: Data.Attoparsec.Internal.Types.More)[OneShot]
                         (a3 :: [Data.ByteString.Internal.ByteString])[OneShot] ->
                       case pos'1
                              `cast`
                            (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                       w2
                         t'1
                         nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                         more'1
                         (Lib.PairedAln
                            (Lib.AlignedRead
                               Lib.hdralnparser2
                               Lib.$fShowAlignedRead2
                               Lib.NONE
                               Lib.defaultBed2
                               Lib.defaultBed2
                               Lib.defaultBed2
                               Lib.addtrimtag5
                               Lib.addtrimtag5
                               Lib.defaultAlignment_v
                               Lib.defaultAlignment_v
                               Lib.addtrimtag5
                               Lib.defaultBed2
                               Lib.defaultBed2
                               Lib.defaultAlignment1
                               Lib.defaultAlignment1
                               Lib.defaultAlignment1
                               Lib.defaultAlignment1
                               GHC.Types.False
                               GHC.Types.False
                               (GHC.Types.[] @ Lib.BedRecord)
                               (GHC.Types.[] @ Lib.BedRecord)
                               GHC.Types.False
                               GHC.Types.False
                               Lib.defaultBed2
                               Lib.defaultBed2
                               (GHC.Types.: @ Data.ByteString.Internal.ByteString a1 a3)
                               GHC.Types.True
                               Lib.defaultAlignment1
                               Lib.defaultAlignment1
                               Lib.defaultBed
                               GHC.Types.False)
                            Lib.defaultAlignment
                            (GHC.Types.[] @ Lib.AlignedRead)
                            (GHC.Types.[] @ Lib.AlignedRead)) }) } })) -}
fd1ee49b1e0682c830349b5face0b7f8
  $whdralnparserEOL' ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.AlignedRead
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.AlignedRead
                            r) ->
                 Lib.$wsamhdrparserEOL
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w
                   w1
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (a1 :: Data.ByteString.Internal.ByteString)[OneShot] ->
                    case t'
                           `cast`
                         (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww7 { Data.Attoparsec.ByteString.Buffer.Buf ww8 ww9 ww10 ww11 ww12 ww13 ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww14 { GHC.Types.I# ww15 ->
                    Lib.$wmany_v3
                      @ r
                      ww8
                      ww9
                      ww10
                      ww11
                      ww12
                      ww13
                      ww15
                      more'
                      (\ (t'1 :: Data.Attoparsec.Internal.Types.State
                                   Data.ByteString.Internal.ByteString)
                         (pos'1 :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                         (more'1 :: Data.Attoparsec.Internal.Types.More)[OneShot]
                         (a3 :: [Data.ByteString.Internal.ByteString])[OneShot] ->
                       case pos'1
                              `cast`
                            (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                       w2
                         t'1
                         nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                         more'1
                         (Lib.AlignedRead
                            Lib.hdralnparser2
                            Lib.$fShowAlignedRead2
                            Lib.NONE
                            Lib.defaultBed2
                            Lib.defaultBed2
                            Lib.defaultBed2
                            Lib.addtrimtag5
                            Lib.addtrimtag5
                            Lib.defaultAlignment_v
                            Lib.defaultAlignment_v
                            Lib.addtrimtag5
                            Lib.defaultBed2
                            Lib.defaultBed2
                            Lib.defaultAlignment1
                            Lib.defaultAlignment1
                            Lib.defaultAlignment1
                            Lib.defaultAlignment1
                            GHC.Types.False
                            GHC.Types.False
                            (GHC.Types.[] @ Lib.BedRecord)
                            (GHC.Types.[] @ Lib.BedRecord)
                            GHC.Types.False
                            GHC.Types.False
                            Lib.defaultBed2
                            Lib.defaultBed2
                            (GHC.Types.: @ Data.ByteString.Internal.ByteString a1 a3)
                            GHC.Types.True
                            Lib.defaultAlignment1
                            Lib.defaultAlignment1
                            Lib.defaultBed
                            GHC.Types.False) }) } })) -}
31bf26dca82eb129ba1887dd9a461107
  $whdrchromp ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.UChr
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <L,U><L,U><L,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
f4fd6197457c1327cdefbe8864468768
  $witypep ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (ww :: GHC.Prim.Int#)
                   (w1 :: Data.Attoparsec.Internal.Types.More)
                   (w2 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w3 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 Lib.itypep_m
                   `cast`
                 (Data.Attoparsec.Internal.Types.N:Parser[0]
                      <Data.ByteString.Internal.ByteString>_N
                      <Data.ByteString.Internal.ByteString>_R)
                   @ r
                   w
                   (GHC.Types.I# ww)
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                   w1
                   w2
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)
                      (more' :: Data.Attoparsec.Internal.Types.More)
                      (a1 :: Data.ByteString.Internal.ByteString) ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                    w3
                      t'
                      nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                      more'
                      Lib.itypep_v })) -}
a81bac5039a1da70c10f225e3a7f161a
  $wix ::
    GHC.Prim.Int#
    -> GHC.Prim.Int# -> GHC.Prim.Int# -> GHC.Prim.Array# a -> a
  {- Arity: 4, Strictness: <S,U><S,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ @ a
                   (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Array# a) ->
                 let {
                   file :: GHC.Prim.Addr# = "./Data/Vector/Generic.hs"#
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 0#) of wild1 {
                   GHC.Types.False -> Lib.getcol1 @ a ww2 ww file
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<# ww ww2) of wild3 {
                        GHC.Types.False -> Lib.getcol1 @ a ww2 ww file
                        GHC.Types.True
                        -> case GHC.Prim.indexArray#
                                  @ a
                                  ww3
                                  (GHC.Prim.+# ww1 ww) of ds6 { Unit# ipv ->
                           ipv } } }) -}
d4a7c6b264083264fa63c0d9e3f6f535
  $wloop ::
    GHC.Integer.Type.Integer
    -> forall b.
       (GHC.Integer.Type.Integer
        -> Data.Conduit.Internal.Pipe.Pipe
             Lib.AlignedRead
             Lib.AlignedRead
             Data.Void.Void
             ()
             (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
             b)
       -> (# Lib.AlignedRead
             -> Data.Conduit.Internal.Pipe.Pipe
                  Lib.AlignedRead
                  Lib.AlignedRead
                  Data.Void.Void
                  ()
                  (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  b,
             ()
             -> Data.Conduit.Internal.Pipe.Pipe
                  Lib.AlignedRead
                  Lib.AlignedRead
                  Data.Void.Void
                  ()
                  (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  b #)
  {- Arity: 2, Strictness: <S,1*U><L,C(U)>, Inline: [0] -}
6a26599a7103237e3397db02b18730cc
  $wloop1 ::
    GHC.Integer.Type.Integer
    -> forall b.
       (GHC.Integer.Type.Integer
        -> Data.Conduit.Internal.Pipe.Pipe
             Lib.AlignedRead
             Lib.AlignedRead
             Data.Void.Void
             ()
             (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
             b)
       -> (# Lib.AlignedRead
             -> Data.Conduit.Internal.Pipe.Pipe
                  Lib.AlignedRead
                  Lib.AlignedRead
                  Data.Void.Void
                  ()
                  (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  b,
             ()
             -> Data.Conduit.Internal.Pipe.Pipe
                  Lib.AlignedRead
                  Lib.AlignedRead
                  Data.Void.Void
                  ()
                  (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  b #)
  {- Arity: 2, Strictness: <S,1*U><L,C(U)>, Inline: [0] -}
2558517fa3c555fe6b0ea59856104648
  $wloop2 ::
    GHC.Integer.Type.Integer
    -> forall b.
       (GHC.Integer.Type.Integer
        -> Data.Conduit.Internal.Pipe.Pipe
             Lib.AlignedRead
             Lib.AlignedRead
             Data.Void.Void
             ()
             (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
             b)
       -> (# Lib.AlignedRead
             -> Data.Conduit.Internal.Pipe.Pipe
                  Lib.AlignedRead
                  Lib.AlignedRead
                  Data.Void.Void
                  ()
                  (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  b,
             ()
             -> Data.Conduit.Internal.Pipe.Pipe
                  Lib.AlignedRead
                  Lib.AlignedRead
                  Data.Void.Void
                  ()
                  (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  b #)
  {- Arity: 2, Strictness: <S,1*U><L,C(U)>, Inline: [0] -}
871680c8a98548ba1071badd33bf1fbd
  $wlvl :: GHC.Prim.Int# -> Lib.ChromNameFormat
  {- Arity: 1, Strictness: <B,U>x, Inline: [0] -}
56a346888d4ebe522e3d0b31a72b285d
  $wlvl1 :: GHC.Prim.Int# -> Lib.UChr
  {- Arity: 1, Strictness: <B,U>x, Inline: [0] -}
ddf9bad0339762439f423c2489f8f389
  $wlvl2 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Types.Bool
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.countDs2 of wild1 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim./=# ww3 dt7) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqAddr# ww dt4) of wild3 {
                        GHC.Types.False
                        -> case Data.ByteString.Internal.$wcompareBytes
                                  ww
                                  ww1
                                  ww2
                                  ww3
                                  dt4
                                  dt5
                                  dt6
                                  dt7 of wild4 {
                             DEFAULT -> GHC.Types.False GHC.Types.EQ -> GHC.Types.True }
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# ww2 dt6) of wild4 {
                             GHC.Types.False
                             -> case Data.ByteString.Internal.$wcompareBytes
                                       ww
                                       ww1
                                       ww2
                                       ww3
                                       dt4
                                       dt5
                                       dt6
                                       dt7 of wild5 {
                                  DEFAULT -> GHC.Types.False GHC.Types.EQ -> GHC.Types.True }
                             GHC.Types.True -> GHC.Types.True } }
                   GHC.Types.True -> GHC.Types.False } }) -}
5822322f14d3c6ea36f974a874d62b7a
  $wlvl3 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Types.Bool
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.countDs2 of wild1 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim./=# ww3 dt7) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqAddr# ww dt4) of wild3 {
                        GHC.Types.False
                        -> case Data.ByteString.Internal.$wcompareBytes
                                  ww
                                  ww1
                                  ww2
                                  ww3
                                  dt4
                                  dt5
                                  dt6
                                  dt7 of wild4 {
                             DEFAULT -> GHC.Types.True GHC.Types.EQ -> GHC.Types.False }
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# ww2 dt6) of wild4 {
                             GHC.Types.False
                             -> case Data.ByteString.Internal.$wcompareBytes
                                       ww
                                       ww1
                                       ww2
                                       ww3
                                       dt4
                                       dt5
                                       dt6
                                       dt7 of wild5 {
                                  DEFAULT -> GHC.Types.True GHC.Types.EQ -> GHC.Types.False }
                             GHC.Types.True -> GHC.Types.False } }
                   GHC.Types.True -> GHC.Types.True } }) -}
d2671184c1b9f9cdb74ccb82c8371882
  $wlvl4 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Types.Bool
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.countDs2 of wild1 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim./=# ww3 dt7) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqAddr# ww dt4) of wild3 {
                        GHC.Types.False
                        -> case Data.ByteString.Internal.$wcompareBytes
                                  ww
                                  ww1
                                  ww2
                                  ww3
                                  dt4
                                  dt5
                                  dt6
                                  dt7 of wild4 {
                             DEFAULT -> GHC.Types.True GHC.Types.EQ -> GHC.Types.False }
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# ww2 dt6) of wild4 {
                             GHC.Types.False
                             -> case Data.ByteString.Internal.$wcompareBytes
                                       ww
                                       ww1
                                       ww2
                                       ww3
                                       dt4
                                       dt5
                                       dt6
                                       dt7 of wild5 {
                                  DEFAULT -> GHC.Types.True GHC.Types.EQ -> GHC.Types.False }
                             GHC.Types.True -> GHC.Types.False } }
                   GHC.Types.True -> GHC.Types.True } }) -}
1334d250963d9cb69287a7ed9ee540b2
  $wlvl5 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.AlignedRead
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.AlignedRead
                            r) ->
                 Lib.$whdralnparser
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                      (_pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (_ctx :: [GHC.Base.String])[OneShot]
                      (_msg :: GHC.Base.String)[OneShot] ->
                    case t'
                           `cast`
                         (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww7 { Data.Attoparsec.ByteString.Buffer.Buf ww8 ww9 ww10 ww11 ww12 ww13 ->
                    Lib.$walnparser @ r ww8 ww9 ww10 ww11 ww12 ww13 ww6 more' w1 w2 })
                   w2) -}
ab8f0d4d27281410ca106ee09a6ed889
  $wlvl6 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Types.Bool
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.countDs2 of wild1 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim./=# ww3 dt7) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqAddr# ww dt4) of wild3 {
                        GHC.Types.False
                        -> case Data.ByteString.Internal.$wcompareBytes
                                  ww
                                  ww1
                                  ww2
                                  ww3
                                  dt4
                                  dt5
                                  dt6
                                  dt7 of wild4 {
                             DEFAULT -> GHC.Types.True GHC.Types.EQ -> GHC.Types.False }
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# ww2 dt6) of wild4 {
                             GHC.Types.False
                             -> case Data.ByteString.Internal.$wcompareBytes
                                       ww
                                       ww1
                                       ww2
                                       ww3
                                       dt4
                                       dt5
                                       dt6
                                       dt7 of wild5 {
                                  DEFAULT -> GHC.Types.True GHC.Types.EQ -> GHC.Types.False }
                             GHC.Types.True -> GHC.Types.False } }
                   GHC.Types.True -> GHC.Types.True } }) -}
22cc3051f792067b811a5f6695d232d5
  $wmIDp ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <L,U><L,U><L,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
c8fddba5e81e8f7dc1bc3ace2cca8b3a
  $wmakeTrimmedUpdates ::
    Lib.PairedAln
    -> (# Lib.AlignedRead, Lib.AlignedRead, [Lib.AlignedRead],
          [Lib.AlignedRead] #)
  {- Arity: 1,
     Strictness: <L,1*U(U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)>,
     Inline: [0],
     Unfolding: (\ (w :: Lib.PairedAln) ->
                 let {
                   p :: Lib.PairedAln
                   = Lib.updateZeroTrimdPairFields
                       (Lib.updateZeroTrimdPairFlags (Lib.updateTrimdPairFields w))
                 } in
                 let {
                   ww :: [Lib.AlignedRead]
                   = case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                     GHC.Base.map
                       @ Lib.AlignedRead
                       @ Lib.AlignedRead
                       Lib.updateTrimdAlnFields
                       ds9 }
                 } in
                 let {
                   ww1 :: [Lib.AlignedRead]
                   = case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                     GHC.Base.map
                       @ Lib.AlignedRead
                       @ Lib.AlignedRead
                       Lib.updateTrimdAlnFields
                       ds8 }
                 } in
                 let {
                   ww2 :: Lib.AlignedRead
                   = case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                     Lib.updateTrimdAlnFields ds7 }
                 } in
                 let {
                   ww3 :: Lib.AlignedRead
                   = case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                     Lib.updateTrimdAlnFields ds6 }
                 } in
                 case Lib.checkInsertSize
                        Lib.makeTrimmedUpdates2
                        Lib.makeTrimmedUpdates1
                        (Lib.PairedAln ww3 ww2 ww1 ww) of wild {
                   GHC.Types.False -> (# ww3, ww2, ww1, ww #)
                   GHC.Types.True
                   -> case ww3 of wild1 { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                      case ds24 of wild2 {
                        GHC.Types.False -> (# wild1, ww2, ww1, ww #)
                        GHC.Types.True
                        -> case ww2 of wild3 { Lib.AlignedRead ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ->
                           case ds55 of wild4 {
                             GHC.Types.False -> (# wild1, wild3, ww1, ww #)
                             GHC.Types.True
                             -> (# Lib.AlignedRead
                                     ds6
                                     (case ds7 of wild5 { GHC.Types.I# x# ->
                                      GHC.Types.I# (GHC.Prim.orI# x# 2#) })
                                     ds8
                                     ds9
                                     ds10
                                     ds11
                                     ds12
                                     ds13
                                     ds14
                                     ds15
                                     ds16
                                     ds17
                                     ds18
                                     ds19
                                     ds20
                                     ds21
                                     ds22
                                     ds23
                                     GHC.Types.True
                                     ds25
                                     ds26
                                     ds27
                                     ds28
                                     ds29
                                     ds30
                                     ds31
                                     ds32
                                     ds33
                                     ds34
                                     ds35
                                     ds36,
                                   Lib.AlignedRead
                                     ds37
                                     (case ds38 of wild5 { GHC.Types.I# x# ->
                                      GHC.Types.I# (GHC.Prim.orI# x# 2#) })
                                     ds39
                                     ds40
                                     ds41
                                     ds42
                                     ds43
                                     ds44
                                     ds45
                                     ds46
                                     ds47
                                     ds48
                                     ds49
                                     ds50
                                     ds51
                                     ds52
                                     ds53
                                     ds54
                                     GHC.Types.True
                                     ds56
                                     ds57
                                     ds58
                                     ds59
                                     ds60
                                     ds61
                                     ds62
                                     ds63
                                     ds64
                                     ds65
                                     ds66
                                     ds67,
                                   ww1, ww #) } } } } }) -}
d6a5e8ce0abd3efdb45eccd1b49941fd
  $wmakechrbedmap ::
    GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Array# Lib.BedRecord
    -> Data.Map.Internal.Map
         Lib.UChr (Data.IntMap.Internal.IntMap Lib.BedRecord)
  {- Arity: 3, Strictness: <L,U><S,U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Array# Lib.BedRecord) ->
                 letrec {
                   $wgo45 :: GHC.Prim.Int# -> [Lib.BedRecord]
                     {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                   = \ (ww3 :: GHC.Prim.Int#) ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.>=# ww3 ww1) of wild {
                       GHC.Types.False
                       -> case GHC.Prim.indexArray#
                                 @ Lib.BedRecord
                                 ww2
                                 (GHC.Prim.+# ww ww3) of ds6 { Unit# ipv ->
                          GHC.Types.: @ Lib.BedRecord ipv ($wgo45 (GHC.Prim.+# ww3 1#)) }
                       GHC.Types.True -> GHC.Types.[] @ Lib.BedRecord }
                 } in
                 let {
                   bbychr :: [[Lib.BedRecord]]
                   = Data.OldList.groupBy
                       @ Lib.BedRecord
                       Lib.createprimerbedmaps3
                       ($wgo45 0#)
                 } in
                 Lib.$sfromList
                   @ (Data.IntMap.Internal.IntMap Lib.BedRecord)
                   (Lib.createprimerbedmaps_go
                      bbychr
                      (GHC.Base.map
                         @ [Lib.BedRecord]
                         @ (Data.IntMap.Internal.IntMap Lib.BedRecord)
                         Lib.makebedmap
                         bbychr))) -}
d87f517ede3dd00382680724f79a6059
  $wmakeprimertups ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> [(GHC.Types.Int, Lib.BedRecord)]
  {- Arity: 4, Strictness: <L,U><S,U><S,U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: GHC.Integer.Type.Integer)
                   (ww3 :: Data.ByteString.Internal.ByteString) ->
                 let {
                   pe :: GHC.Integer.Type.Integer
                   = GHC.Integer.Type.plusInteger ww2 Lib.makeprimertups1
                 } in
                 let {
                   ps :: GHC.Integer.Type.Integer
                   = GHC.Integer.Type.minusInteger ww1 Lib.makeprimertups1
                 } in
                 letrec {
                   go19 :: GHC.Integer.Type.Integer
                           -> [Lib.BedRecord] -> [(GHC.Types.Int, Lib.BedRecord)]
                     {- Arity: 2, Strictness: <S,U><L,1*U> -}
                   = \ (x :: GHC.Integer.Type.Integer) (eta :: [Lib.BedRecord]) ->
                     case GHC.Integer.Type.gtInteger# x pe of wild { DEFAULT ->
                     case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild of wild1 {
                       GHC.Types.False
                       -> case eta of wild2 {
                            [] -> GHC.Types.[] @ (GHC.Types.Int, Lib.BedRecord)
                            : y ys
                            -> GHC.Types.:
                                 @ (GHC.Types.Int, Lib.BedRecord)
                                 (case GHC.Integer.Type.integerToInt x of wild3 { DEFAULT ->
                                  GHC.Types.I# wild3 },
                                  y)
                                 (go19 (GHC.Integer.Type.plusInteger x Lib.expandcigar1) ys) }
                       GHC.Types.True -> GHC.Types.[] @ (GHC.Types.Int, Lib.BedRecord) } }
                 } in
                 go19
                   ps
                   (case GHC.Integer.Type.integerToInt
                           (GHC.Integer.Type.plusInteger
                              (GHC.Integer.Type.minusInteger pe ps)
                              Lib.expandcigar1) of wild { DEFAULT ->
                    case GHC.Prim.tagToEnum#
                           @ GHC.Types.Bool
                           (GHC.Prim.<# 0# wild) of wild1 {
                      GHC.Types.False -> GHC.Types.[] @ Lib.BedRecord
                      GHC.Types.True
                      -> let {
                           b :: Lib.BedRecord = Lib.BedRecord ww ww1 ww2 ww3
                         } in
                         let {
                           lvl1009 :: [Lib.BedRecord]
                           = GHC.Types.: @ Lib.BedRecord b (GHC.Types.[] @ Lib.BedRecord)
                         } in
                         letrec {
                           $wxs :: GHC.Prim.Int# -> [Lib.BedRecord]
                             {- Arity: 1, Strictness: <S,1*U>, Inline: [0] -}
                           = \ (ww4 :: GHC.Prim.Int#) ->
                             case ww4 of ds6 {
                               DEFAULT
                               -> GHC.Types.: @ Lib.BedRecord b ($wxs (GHC.Prim.-# ds6 1#))
                               1# -> lvl1009 }
                         } in
                         $wxs wild } })) -}
cc2b35d5b98cc62681e72aef11de4b09
  $wmany_v ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
81cbe65c86097b172227bc1549c6a3f7
  $wmany_v1 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [Data.ByteString.Internal.ByteString]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
dfb5849e4c90abeba79cdd9338f1ffa9
  $wmany_v2 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [Data.ByteString.Internal.ByteString]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
8bb5f9e2ba6a55380eba387515d9c6b5
  $wmany_v3 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [Data.ByteString.Internal.ByteString]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
f42adfe40aee7073ac342357e7142e94
  $wmany_v4 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [Lib.PairedAln]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
26aa09fe5fa300161a332b5cdf1b6988
  $wmapcig ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> [(GHC.Integer.Type.Integer,
         Data.ByteString.Internal.ByteString)]
  {- Arity: 4, Strictness: <S,U><L,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.$wparseCigar
                        @ [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                        ww
                        ww1
                        ww2
                        ww3
                        ww3
                        0#
                        0#
                        Data.Attoparsec.Internal.Types.Complete
                        (Data.Attoparsec.ByteString.Internal.failK
                           @ [(GHC.Integer.Type.Integer,
                               Data.ByteString.Internal.ByteString)])
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [GHC.Base.String]
                               -> GHC.Base.String
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString
                                    [(GHC.Integer.Type.Integer,
                                      Data.ByteString.Internal.ByteString)]>_R)
                        (Data.Attoparsec.ByteString.Internal.successK
                           @ [(GHC.Integer.Type.Integer,
                               Data.ByteString.Internal.ByteString)])
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [(GHC.Integer.Type.Integer,
                                    Data.ByteString.Internal.ByteString)]
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString
                                    [(GHC.Integer.Type.Integer,
                                      Data.ByteString.Internal.ByteString)]>_R) of wild {
                   Data.Attoparsec.Internal.Types.Fail ds6 ds7 err
                   -> case ds7 of wild1 { DEFAULT ->
                      GHC.List.badHead
                        @ [(GHC.Integer.Type.Integer,
                            Data.ByteString.Internal.ByteString)] }
                   Data.Attoparsec.Internal.Types.Partial ipv
                   -> case Lib.checkCigarSeqlen1
                      ret_ty [(GHC.Integer.Type.Integer,
                               Data.ByteString.Internal.ByteString)]
                      of {}
                   Data.Attoparsec.Internal.Types.Done ds6 a1 -> a1 }) -}
a08d86bf0726deeb482e65b3214cb281
  $wmasterparser ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.MasterRecord
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
29607972629300713718861f38293c05
  $wnoclip ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Types.Bool
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.noclip2 of wild1 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                 let {
                   $j :: GHC.Types.Bool <join 0>
                   = case Lib.noclip1 of wild2 { Data.ByteString.Internal.PS dt1 dt2 dt3 dt10 ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim./=# ww3 dt10) of wild3 {
                       GHC.Types.False
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.eqAddr# ww dt1) of wild4 {
                            GHC.Types.False
                            -> case Data.ByteString.Internal.$wcompareBytes
                                      ww
                                      ww1
                                      ww2
                                      ww3
                                      dt1
                                      dt2
                                      dt3
                                      dt10 of wild5 {
                                 DEFAULT -> GHC.Types.True GHC.Types.EQ -> GHC.Types.False }
                            GHC.Types.True
                            -> case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.==# ww2 dt3) of wild5 {
                                 GHC.Types.False
                                 -> case Data.ByteString.Internal.$wcompareBytes
                                           ww
                                           ww1
                                           ww2
                                           ww3
                                           dt1
                                           dt2
                                           dt3
                                           dt10 of wild6 {
                                      DEFAULT -> GHC.Types.True GHC.Types.EQ -> GHC.Types.False }
                                 GHC.Types.True -> GHC.Types.False } }
                       GHC.Types.True -> GHC.Types.True } }
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim./=# ww3 dt7) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqAddr# ww dt4) of wild3 {
                        GHC.Types.False
                        -> case Data.ByteString.Internal.$wcompareBytes
                                  ww
                                  ww1
                                  ww2
                                  ww3
                                  dt4
                                  dt5
                                  dt6
                                  dt7 of wild4 {
                             DEFAULT -> $j GHC.Types.EQ -> GHC.Types.False }
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# ww2 dt6) of wild4 {
                             GHC.Types.False
                             -> case Data.ByteString.Internal.$wcompareBytes
                                       ww
                                       ww1
                                       ww2
                                       ww3
                                       dt4
                                       dt5
                                       dt6
                                       dt7 of wild5 {
                                  DEFAULT -> $j GHC.Types.EQ -> GHC.Types.False }
                             GHC.Types.True -> GHC.Types.False } }
                   GHC.Types.True -> $j } }) -}
fcb5b468a6f8bb800bfb229397ef4ebc
  $wnohardclip ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Types.Bool
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.noclip2 of wild1 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim./=# ww3 dt7) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqAddr# ww dt4) of wild3 {
                        GHC.Types.False
                        -> case Data.ByteString.Internal.$wcompareBytes
                                  ww
                                  ww1
                                  ww2
                                  ww3
                                  dt4
                                  dt5
                                  dt6
                                  dt7 of wild4 {
                             DEFAULT -> GHC.Types.True GHC.Types.EQ -> GHC.Types.False }
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# ww2 dt6) of wild4 {
                             GHC.Types.False
                             -> case Data.ByteString.Internal.$wcompareBytes
                                       ww
                                       ww1
                                       ww2
                                       ww3
                                       dt4
                                       dt5
                                       dt6
                                       dt7 of wild5 {
                                  DEFAULT -> GHC.Types.True GHC.Types.EQ -> GHC.Types.False }
                             GHC.Types.True -> GHC.Types.False } }
                   GHC.Types.True -> GHC.Types.True } }) -}
1aa17519e7018955509b572c565a7015
  $wnomapCigToNomapRname ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Lib.UChr
    -> Lib.UChr
  {- Arity: 5, Strictness: <L,U><L,U><L,U><S,U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (w :: Lib.UChr) ->
                 case Lib.addtrimtag5 of wild1 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim./=# ww3 dt7) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqAddr# ww dt4) of wild3 {
                        GHC.Types.False
                        -> case Data.ByteString.Internal.$wcompareBytes
                                  ww
                                  ww1
                                  ww2
                                  ww3
                                  dt4
                                  dt5
                                  dt6
                                  dt7 of wild4 {
                             DEFAULT -> w GHC.Types.EQ -> Lib.NONE }
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# ww2 dt6) of wild4 {
                             GHC.Types.False
                             -> case Data.ByteString.Internal.$wcompareBytes
                                       ww
                                       ww1
                                       ww2
                                       ww3
                                       dt4
                                       dt5
                                       dt6
                                       dt7 of wild5 {
                                  DEFAULT -> w GHC.Types.EQ -> Lib.NONE }
                             GHC.Types.True -> Lib.NONE } }
                   GHC.Types.True -> w } }) -}
af156cdcfad5d9cd7df5145a35ab41c4
  $wnopadding ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Types.Bool
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.noclip2 of wild1 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                 let {
                   $j :: GHC.Types.Bool <join 0>
                   = case Lib.countDs2 of wild2 { Data.ByteString.Internal.PS dt1 dt2 dt3 dt10 ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim./=# ww3 dt10) of wild3 {
                       GHC.Types.False
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.eqAddr# ww dt1) of wild4 {
                            GHC.Types.False
                            -> case Data.ByteString.Internal.$wcompareBytes
                                      ww
                                      ww1
                                      ww2
                                      ww3
                                      dt1
                                      dt2
                                      dt3
                                      dt10 of wild5 {
                                 DEFAULT -> GHC.Types.True GHC.Types.EQ -> GHC.Types.False }
                            GHC.Types.True
                            -> case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.==# ww2 dt3) of wild5 {
                                 GHC.Types.False
                                 -> case Data.ByteString.Internal.$wcompareBytes
                                           ww
                                           ww1
                                           ww2
                                           ww3
                                           dt1
                                           dt2
                                           dt3
                                           dt10 of wild6 {
                                      DEFAULT -> GHC.Types.True GHC.Types.EQ -> GHC.Types.False }
                                 GHC.Types.True -> GHC.Types.False } }
                       GHC.Types.True -> GHC.Types.True } }
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim./=# ww3 dt7) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqAddr# ww dt4) of wild3 {
                        GHC.Types.False
                        -> case Data.ByteString.Internal.$wcompareBytes
                                  ww
                                  ww1
                                  ww2
                                  ww3
                                  dt4
                                  dt5
                                  dt6
                                  dt7 of wild4 {
                             DEFAULT -> $j GHC.Types.EQ -> GHC.Types.False }
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# ww2 dt6) of wild4 {
                             GHC.Types.False
                             -> case Data.ByteString.Internal.$wcompareBytes
                                       ww
                                       ww1
                                       ww2
                                       ww3
                                       dt4
                                       dt5
                                       dt6
                                       dt7 of wild5 {
                                  DEFAULT -> $j GHC.Types.EQ -> GHC.Types.False }
                             GHC.Types.True -> GHC.Types.False } }
                   GHC.Types.True -> $j } }) -}
ba745b81205bbd9329680a89d7b5ec11
  $woptasp ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
fca847ad0c32e52118d1399086e6ef58
  $woptfieldp ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5, Strictness: <L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (ww :: GHC.Prim.Int#)
                   (w1 :: Data.Attoparsec.Internal.Types.More)
                   (w2 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w3 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 let {
                   pos1 :: GHC.Types.Int = GHC.Types.I# ww
                 } in
                 let {
                   lose :: Data.Attoparsec.Internal.Types.Failure
                             Data.ByteString.Internal.ByteString
                             (Data.Attoparsec.Internal.Types.State
                                Data.ByteString.Internal.ByteString)
                             r
                     {- Arity: 5, Strictness: <L,U><L,A><L,U><L,A><L,A>,
                        Unfolding: InlineRule (5, True, True)
                                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                                               Data.ByteString.Internal.ByteString)
                                      (_pos' :: Data.Attoparsec.Internal.Types.Pos)
                                      (more' :: Data.Attoparsec.Internal.Types.More)
                                      (_ctx :: [GHC.Base.String])
                                      (_msg :: GHC.Base.String) ->
                                    Lib.optfieldp2
                                      @ r
                                      t'
                                      pos1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                                      more'
                                      w2
                                      w3) -}
                   = \ (t' :: Data.Attoparsec.Internal.Types.State
                                Data.ByteString.Internal.ByteString)
                       (_pos' :: Data.Attoparsec.Internal.Types.Pos)
                       (more' :: Data.Attoparsec.Internal.Types.More)
                       (_ctx :: [GHC.Base.String])
                       (_msg :: GHC.Base.String) ->
                     Lib.$woptxsp @ r t' ww more' w2 w3
                 } in
                 Lib.$woptnmp
                   @ r
                   w
                   ww
                   w1
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                      (_pos' :: Data.Attoparsec.Internal.Types.Pos)
                      (more' :: Data.Attoparsec.Internal.Types.More)
                      (_ctx :: [GHC.Base.String])
                      (_msg :: GHC.Base.String) ->
                    Lib.$woptasp @ r t' ww more' lose w3)
                   w3) -}
c7adb4491cc8212de1b530ce40fc11b4
  $woptfieldpEOL ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         GHC.Types.Char
         r
    -> Data.Attoparsec.ByteString.Internal.Result r
  {- Arity: 10,
     Strictness: <L,U><L,U><L,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            GHC.Types.Char
                            r) ->
                 let {
                   $wsucc1 :: Data.Attoparsec.Internal.Types.State
                                Data.ByteString.Internal.ByteString
                              -> GHC.Prim.Int#
                              -> Data.Attoparsec.Internal.Types.More
                              -> GHC.Word.Word8
                              -> Data.Attoparsec.Internal.Types.IResult
                                   Data.ByteString.Internal.ByteString r
                     {- Arity: 4, Strictness: <L,U><L,U><L,U><L,1*U(U)>, Inline: [0] -}
                   = \ (w3 :: Data.Attoparsec.Internal.Types.State
                                Data.ByteString.Internal.ByteString)
                       (ww7 :: GHC.Prim.Int#)[OneShot]
                       (w4 :: Data.Attoparsec.Internal.Types.More)[OneShot]
                       (w5 :: GHC.Word.Word8)[OneShot] ->
                     let {
                       c2 :: GHC.Types.Char
                       = case w5 of wild { GHC.Word.W8# x# ->
                         GHC.Types.C# (GHC.Prim.chr# (GHC.Prim.word2Int# x#)) }
                     } in
                     case Data.Attoparsec.ByteString.FastSet.memberWord8
                            (case c2 of wild { GHC.Types.C# c# ->
                             GHC.Word.W8#
                               (GHC.Prim.narrow8Word# (GHC.Prim.int2Word# (GHC.Prim.ord# c#))) })
                            Lib.optfieldpEOL_ds of wild {
                       GHC.Types.False
                       -> w2
                            w3
                            (GHC.Types.I# (GHC.Prim.+# ww7 1#))
                              `cast`
                            (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                            w4
                            c2
                       GHC.Types.True
                       -> w1
                            w3
                            (GHC.Types.I# ww7)
                              `cast`
                            (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                            w4
                            (GHC.Types.[] @ GHC.Base.String)
                            Lib.optfieldpEOL4 }
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww3 (GHC.Prim.+# ww6 1#)) of wild1 {
                   GHC.Types.False
                   -> Data.Attoparsec.ByteString.Internal.$wensureSuspended
                        @ r
                        Lib.optfieldpEOL3
                        (Data.Attoparsec.ByteString.Buffer.Buf ww ww1 ww2 ww3 ww4 ww5)
                        ww6
                        w
                        w1
                          `cast`
                        (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [GHC.Base.String]
                               -> GHC.Base.String
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString r>_R)
                        (\ (t' :: Data.Attoparsec.ByteString.Buffer.Buffer)
                           (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                           (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                           (bs' :: Data.ByteString.Internal.ByteString)[OneShot] ->
                         case bs' of wild2 { Data.ByteString.Internal.PS dt7 dt8 dt9 dt10 ->
                         case GHC.Prim.readWord8OffAddr#
                                @ GHC.Prim.RealWorld
                                (GHC.Prim.plusAddr# dt7 dt9)
                                0#
                                GHC.Prim.realWorld# of ds6 { (#,#) ipv1 ipv2 ->
                         case GHC.Prim.touch#
                                @ 'GHC.Types.LiftedRep
                                @ GHC.ForeignPtr.ForeignPtrContents
                                dt8
                                ipv1 of s' { DEFAULT ->
                         case pos'
                                `cast`
                              (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                         $wsucc1
                           t'
                             `cast`
                           (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])))
                           ww8
                           more'
                           (GHC.Word.W8# ipv2) } } } })
                   GHC.Types.True
                   -> $wsucc1
                        (Data.Attoparsec.ByteString.Buffer.Buf ww ww1 ww2 ww3 ww4 ww5)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])))
                        ww6
                        w
                        (case GHC.Prim.readWord8OffAddr#
                                @ GHC.Prim.RealWorld
                                (GHC.Prim.plusAddr# ww (GHC.Prim.+# ww2 ww6))
                                0#
                                GHC.Prim.realWorld# of ds6 { (#,#) ipv1 ipv2 ->
                         case GHC.Prim.touch#
                                @ 'GHC.Types.LiftedRep
                                @ GHC.ForeignPtr.ForeignPtrContents
                                ww1
                                ipv1 of s' { DEFAULT ->
                         GHC.Word.W8# ipv2 } }) }) -}
9eb099c054c1742850a2bf510c52de66
  $woptfieldstotalp ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
0621ae26682f430ec7e5419bbe61ecff
  $woptidp ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (ww :: GHC.Prim.Int#)
                   (w1 :: Data.Attoparsec.Internal.Types.More)
                   (w2 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w3 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 let {
                   nt :: GHC.Types.Int = GHC.Types.I# ww
                 } in
                 let {
                   lvl1009 :: Data.Attoparsec.Internal.Types.State
                                Data.ByteString.Internal.ByteString
                              -> Data.Attoparsec.Internal.Types.Pos
                              -> Data.Attoparsec.Internal.Types.More
                              -> Data.ByteString.Internal.ByteString
                              -> Data.Attoparsec.Internal.Types.IResult
                                   Data.ByteString.Internal.ByteString r
                     {- Arity: 4, Strictness: <L,U><S,1*U(U)><L,U><L,A>,
                        Unfolding: InlineRule (4, True, False)
                                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                                               Data.ByteString.Internal.ByteString)
                                      (pos' :: Data.Attoparsec.Internal.Types.Pos)
                                      (more' :: Data.Attoparsec.Internal.Types.More)
                                      (a1 :: Data.ByteString.Internal.ByteString) ->
                                    case pos'
                                           `cast`
                                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                                    w3
                                      t'
                                      nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                                      more'
                                      Lib.optidp_v2 }) -}
                   = \ (t' :: Data.Attoparsec.Internal.Types.State
                                Data.ByteString.Internal.ByteString)
                       (pos' :: Data.Attoparsec.Internal.Types.Pos)
                       (more' :: Data.Attoparsec.Internal.Types.More)
                       (a1 :: Data.ByteString.Internal.ByteString) ->
                     case pos'
                            `cast`
                          (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                     w3
                       t'
                       nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                       more'
                       Lib.optidp_v2 }
                 } in
                 let {
                   lvl1010 :: Data.Attoparsec.Internal.Types.State
                                Data.ByteString.Internal.ByteString
                              -> Data.Attoparsec.Internal.Types.Pos
                              -> Data.Attoparsec.Internal.Types.More
                              -> Data.ByteString.Internal.ByteString
                              -> Data.Attoparsec.Internal.Types.IResult
                                   Data.ByteString.Internal.ByteString r
                     {- Arity: 4, Strictness: <L,U><S,1*U(U)><L,U><L,A>,
                        Unfolding: InlineRule (4, True, False)
                                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                                               Data.ByteString.Internal.ByteString)
                                      (pos' :: Data.Attoparsec.Internal.Types.Pos)
                                      (more' :: Data.Attoparsec.Internal.Types.More)
                                      (a1 :: Data.ByteString.Internal.ByteString) ->
                                    case pos'
                                           `cast`
                                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                                    w3
                                      t'
                                      nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                                      more'
                                      Lib.optidp_v1 }) -}
                   = \ (t' :: Data.Attoparsec.Internal.Types.State
                                Data.ByteString.Internal.ByteString)
                       (pos' :: Data.Attoparsec.Internal.Types.Pos)
                       (more' :: Data.Attoparsec.Internal.Types.More)
                       (a1 :: Data.ByteString.Internal.ByteString) ->
                     case pos'
                            `cast`
                          (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                     w3
                       t'
                       nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                       more'
                       Lib.optidp_v1 }
                 } in
                 let {
                   lose :: Data.Attoparsec.Internal.Types.Failure
                             Data.ByteString.Internal.ByteString
                             (Data.Attoparsec.Internal.Types.State
                                Data.ByteString.Internal.ByteString)
                             r
                     {- Arity: 5, Strictness: <L,U><L,A><L,U><L,A><L,A>,
                        Unfolding: InlineRule (5, True, True)
                                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                                               Data.ByteString.Internal.ByteString)
                                      (_pos' :: Data.Attoparsec.Internal.Types.Pos)
                                      (more' :: Data.Attoparsec.Internal.Types.More)
                                      (_ctx :: [GHC.Base.String])
                                      (_msg :: GHC.Base.String) ->
                                    Lib.optidp_m2
                                      `cast`
                                    (Data.Attoparsec.Internal.Types.N:Parser[0]
                                         <Data.ByteString.Internal.ByteString>_N
                                         <Data.ByteString.Internal.ByteString>_R)
                                      @ r
                                      t'
                                      nt `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                                      more'
                                      w2
                                      lvl1010) -}
                   = \ (t' :: Data.Attoparsec.Internal.Types.State
                                Data.ByteString.Internal.ByteString)
                       (_pos' :: Data.Attoparsec.Internal.Types.Pos)
                       (more' :: Data.Attoparsec.Internal.Types.More)
                       (_ctx :: [GHC.Base.String])
                       (_msg :: GHC.Base.String) ->
                     Lib.optidp_m2
                       `cast`
                     (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)
                       @ r
                       t'
                       nt `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                       more'
                       w2
                       lvl1010
                 } in
                 Lib.optidp_m1
                   `cast`
                 (Data.Attoparsec.Internal.Types.N:Parser[0]
                      <Data.ByteString.Internal.ByteString>_N
                      <Data.ByteString.Internal.ByteString>_R)
                   @ r
                   w
                   nt `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                   w1
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                      (_pos' :: Data.Attoparsec.Internal.Types.Pos)
                      (more' :: Data.Attoparsec.Internal.Types.More)
                      (_ctx :: [GHC.Base.String])
                      (_msg :: GHC.Base.String) ->
                    Lib.optidp_m
                      `cast`
                    (Data.Attoparsec.Internal.Types.N:Parser[0]
                         <Data.ByteString.Internal.ByteString>_N
                         <Data.ByteString.Internal.ByteString>_R)
                      @ r
                      t'
                      nt `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                      more'
                      lose
                      lvl1009)
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)
                      (more' :: Data.Attoparsec.Internal.Types.More)
                      (a1 :: Data.ByteString.Internal.ByteString) ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                    w3
                      t'
                      nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                      more'
                      Lib.optidp_v })) -}
4fb61478c9a800809e0ae55e0378333f
  $woptnmp ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
3431cf9059a5a10b22bc3a37add0f9d2
  $woptxsp ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
ad4cd5255443caad9800315b5894a42a
  $wp ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
b1ee2c380efe86366d43c03fc83a20fd
  $wp1 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.PairedAln
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.PairedAln
                            r) ->
                 Lib.$whdralnparserEOL
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                      (_pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (_ctx :: [GHC.Base.String])[OneShot]
                      (_msg :: GHC.Base.String)[OneShot] ->
                    case t'
                           `cast`
                         (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww7 { Data.Attoparsec.ByteString.Buffer.Buf ww8 ww9 ww10 ww11 ww12 ww13 ->
                    Lib.$wpairedalnparser
                      @ r
                      ww8
                      ww9
                      ww10
                      ww11
                      ww12
                      ww13
                      ww6
                      more'
                      w1
                      w2 })
                   w2) -}
d5d2dbc8805f0ac2d656659621069d6d
  $wpairedalnparser ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.PairedAln
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
87c24b97472a0a58954af7426da4efa4
  $wparseAln ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Either.Either GHC.Base.String Lib.AlignedRead
  {- Arity: 4, Strictness: <S,U><L,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.$walnparser
                        @ Lib.AlignedRead
                        ww
                        ww1
                        ww2
                        ww3
                        ww3
                        0#
                        0#
                        Data.Attoparsec.Internal.Types.Complete
                        (Data.Attoparsec.ByteString.Internal.failK @ Lib.AlignedRead)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [GHC.Base.String]
                               -> GHC.Base.String
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString Lib.AlignedRead>_R)
                        (Data.Attoparsec.ByteString.Internal.successK @ Lib.AlignedRead)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> Lib.AlignedRead
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString
                                    Lib.AlignedRead>_R) of wild {
                   Data.Attoparsec.Internal.Types.Fail ds6 ds7 err
                   -> case ds7 of wild1 {
                        [] -> Data.Either.Left @ GHC.Base.String @ Lib.AlignedRead err
                        : ipv ipv1
                        -> Data.Either.Left
                             @ [GHC.Types.Char]
                             @ Lib.AlignedRead
                             (GHC.Base.++
                                @ GHC.Types.Char
                                (Data.OldList.intercalate_$spoly_go
                                   @ GHC.Types.Char
                                   ipv
                                   (Data.OldList.prependToAll
                                      @ [GHC.Types.Char]
                                      Lib.parseAln3
                                      ipv1))
                                (GHC.CString.unpackAppendCString# Lib.parseAln2 err)) }
                   Data.Attoparsec.Internal.Types.Partial ipv -> Lib.parseAln1
                   Data.Attoparsec.Internal.Types.Done ds6 a1
                   -> Data.Either.Right @ GHC.Base.String @ Lib.AlignedRead a1 }) -}
3828672fd15e6bd5827205f197e3e63e
  $wparseBED ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Either.Either GHC.Base.String Lib.BedRecord
  {- Arity: 4, Strictness: <S,U><L,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.$wbedrecparser
                        @ Lib.BedRecord
                        ww
                        ww1
                        ww2
                        ww3
                        ww3
                        0#
                        0#
                        Data.Attoparsec.Internal.Types.Complete
                        (Data.Attoparsec.ByteString.Internal.failK @ Lib.BedRecord)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [GHC.Base.String]
                               -> GHC.Base.String
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString Lib.BedRecord>_R)
                        (Data.Attoparsec.ByteString.Internal.successK @ Lib.BedRecord)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> Lib.BedRecord
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString Lib.BedRecord>_R) of wild {
                   Data.Attoparsec.Internal.Types.Fail ds6 ds7 err
                   -> case ds7 of wild1 {
                        [] -> Data.Either.Left @ GHC.Base.String @ Lib.BedRecord err
                        : ipv ipv1
                        -> Data.Either.Left
                             @ [GHC.Types.Char]
                             @ Lib.BedRecord
                             (GHC.Base.++
                                @ GHC.Types.Char
                                (Data.OldList.intercalate_$spoly_go
                                   @ GHC.Types.Char
                                   ipv
                                   (Data.OldList.prependToAll
                                      @ [GHC.Types.Char]
                                      Lib.parseAln3
                                      ipv1))
                                (GHC.CString.unpackAppendCString# Lib.parseAln2 err)) }
                   Data.Attoparsec.Internal.Types.Partial ipv -> Lib.parseBED1
                   Data.Attoparsec.Internal.Types.Done ds6 a1
                   -> Data.Either.Right @ GHC.Base.String @ Lib.BedRecord a1 }) -}
d1020c725f6cf2cf043714ef0decc44e
  $wparseBEDPE ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Either.Either GHC.Base.String Lib.BEDPE
  {- Arity: 4, Strictness: <S,U><L,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.$wbedPEparser
                        @ Lib.BEDPE
                        ww
                        ww1
                        ww2
                        ww3
                        ww3
                        0#
                        0#
                        Data.Attoparsec.Internal.Types.Complete
                        (Data.Attoparsec.ByteString.Internal.failK @ Lib.BEDPE)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [GHC.Base.String]
                               -> GHC.Base.String
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString Lib.BEDPE>_R)
                        (Data.Attoparsec.ByteString.Internal.successK @ Lib.BEDPE)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> Lib.BEDPE
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString Lib.BEDPE>_R) of wild {
                   Data.Attoparsec.Internal.Types.Fail ds6 ds7 err
                   -> case ds7 of wild1 {
                        [] -> Data.Either.Left @ GHC.Base.String @ Lib.BEDPE err
                        : ipv ipv1
                        -> Data.Either.Left
                             @ [GHC.Types.Char]
                             @ Lib.BEDPE
                             (GHC.Base.++
                                @ GHC.Types.Char
                                (Data.OldList.intercalate_$spoly_go
                                   @ GHC.Types.Char
                                   ipv
                                   (Data.OldList.prependToAll
                                      @ [GHC.Types.Char]
                                      Lib.parseAln3
                                      ipv1))
                                (GHC.CString.unpackAppendCString# Lib.parseAln2 err)) }
                   Data.Attoparsec.Internal.Types.Partial ipv -> Lib.parseBEDPE1
                   Data.Attoparsec.Internal.Types.Done ds6 a1
                   -> Data.Either.Right @ GHC.Base.String @ Lib.BEDPE a1 }) -}
a03dda0a0238453e9dd9ae292039a930
  $wparseCigar ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                            r) ->
                 let {
                   ww7 :: GHC.Types.Int = GHC.Types.I# ww6
                 } in
                 let {
                   w5 :: Data.Attoparsec.Internal.Types.Failure
                           Data.ByteString.Internal.ByteString
                           (Data.Attoparsec.Internal.Types.State
                              Data.ByteString.Internal.ByteString)
                           r
                     {- Arity: 5,
                        Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><L,A><L,U><L,A><L,A>,
                        Unfolding: InlineRule (5, True, True)
                                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                                               Data.ByteString.Internal.ByteString)
                                      (_pos' :: Data.Attoparsec.Internal.Types.Pos)
                                      (more' :: Data.Attoparsec.Internal.Types.More)
                                      (_ctx :: [GHC.Base.String])
                                      (_msg :: GHC.Base.String) ->
                                    Lib.checkCigarSeqlen2
                                      @ r
                                      t'
                                      ww7 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                                      more'
                                      w1
                                      w2) -}
                   = \ (t' :: Data.Attoparsec.Internal.Types.State
                                Data.ByteString.Internal.ByteString)
                       (_pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                       (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                       (_ctx :: [GHC.Base.String])[OneShot]
                       (_msg :: GHC.Base.String)[OneShot] ->
                     case t'
                            `cast`
                          (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww8 { Data.Attoparsec.ByteString.Buffer.Buf ww9 ww10 ww11 ww12 ww13 ww14 ->
                     Lib.$wstarcigarP @ r ww9 ww10 ww11 ww12 ww13 ww14 ww6 more' w1 w2 }
                 } in
                 Lib.$wp
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w
                   w5
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (a1 :: (GHC.Integer.Type.Integer,
                              Data.ByteString.Internal.ByteString))[OneShot] ->
                    case t'
                           `cast`
                         (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww8 { Data.Attoparsec.ByteString.Buffer.Buf ww9 ww10 ww11 ww12 ww13 ww14 ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww15 { GHC.Types.I# ww16 ->
                    Lib.$wmany_v
                      @ r
                      ww9
                      ww10
                      ww11
                      ww12
                      ww13
                      ww14
                      ww16
                      more'
                      (\ (t'1 :: Data.Attoparsec.Internal.Types.State
                                   Data.ByteString.Internal.ByteString)
                         (pos'1 :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                         (more'1 :: Data.Attoparsec.Internal.Types.More)[OneShot]
                         (a3 :: [(GHC.Integer.Type.Integer,
                                  Data.ByteString.Internal.ByteString)])[OneShot] ->
                       case pos'1
                              `cast`
                            (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                       w2
                         t'1
                         nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                         more'1
                         (GHC.Types.:
                            @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                            a1
                            a3) }) } })) -}
e9b987237045ab203248c1ac2648b1f6
  $wparsePairedAlns ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [Lib.PairedAln]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
c8df7f3ec9f2e3d4c89808a5eba03610
  $wparsePairedAlns' ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [[Lib.AlignedRead]]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
3f96a04a3e3876f3d1423acc3cc9b6dd
  $wparsePairedAlnsFromSAM ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Either.Either GHC.Base.String [Lib.PairedAln]
  {- Arity: 4, Strictness: <S,U><L,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.$wparsePairedAlns
                        @ [Lib.PairedAln]
                        ww
                        ww1
                        ww2
                        ww3
                        ww3
                        0#
                        0#
                        Data.Attoparsec.Internal.Types.Complete
                        (Data.Attoparsec.ByteString.Internal.failK @ [Lib.PairedAln])
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [GHC.Base.String]
                               -> GHC.Base.String
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString [Lib.PairedAln]>_R)
                        (Data.Attoparsec.ByteString.Internal.successK @ [Lib.PairedAln])
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [Lib.PairedAln]
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString
                                    [Lib.PairedAln]>_R) of wild {
                   Data.Attoparsec.Internal.Types.Fail ds6 ds7 err
                   -> case ds7 of wild1 {
                        [] -> Data.Either.Left @ GHC.Base.String @ [Lib.PairedAln] err
                        : ipv ipv1
                        -> Data.Either.Left
                             @ [GHC.Types.Char]
                             @ [Lib.PairedAln]
                             (GHC.Base.++
                                @ GHC.Types.Char
                                (Data.OldList.intercalate_$spoly_go
                                   @ GHC.Types.Char
                                   ipv
                                   (Data.OldList.prependToAll
                                      @ [GHC.Types.Char]
                                      Lib.parseAln3
                                      ipv1))
                                (GHC.CString.unpackAppendCString# Lib.parseAln2 err)) }
                   Data.Attoparsec.Internal.Types.Partial ipv
                   -> Lib.parsePairedAlnsFromSAM1
                   Data.Attoparsec.Internal.Types.Done ds6 a1
                   -> Data.Either.Right @ GHC.Base.String @ [Lib.PairedAln] a1 }) -}
5ea728a75f773042894ed489d0cbbf49
  $wparsePairedAlnsOrHdr ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [Lib.PairedAln]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [Lib.PairedAln]
                            r) ->
                 Lib.$wp1
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w
                   w1
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (a1 :: Lib.PairedAln)[OneShot] ->
                    case t'
                           `cast`
                         (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww7 { Data.Attoparsec.ByteString.Buffer.Buf ww8 ww9 ww10 ww11 ww12 ww13 ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww14 { GHC.Types.I# ww15 ->
                    Lib.$wmany_v4
                      @ r
                      ww8
                      ww9
                      ww10
                      ww11
                      ww12
                      ww13
                      ww15
                      more'
                      (\ (t'1 :: Data.Attoparsec.Internal.Types.State
                                   Data.ByteString.Internal.ByteString)
                         (pos'1 :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                         (more'1 :: Data.Attoparsec.Internal.Types.More)[OneShot]
                         (a3 :: [Lib.PairedAln])[OneShot] ->
                       case pos'1
                              `cast`
                            (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                       w2
                         t'1
                         nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                         more'1
                         (GHC.Types.: @ Lib.PairedAln a1 a3) }) } })) -}
d043066bd4eaf1a445346050bf0f005f
  $wparseReadsetsFromSAM ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> [[Lib.AlignedRead]]
  {- Arity: 4, Strictness: <S,U><L,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.$wparsePairedAlns'
                        @ [[Lib.AlignedRead]]
                        ww
                        ww1
                        ww2
                        ww3
                        ww3
                        0#
                        0#
                        Data.Attoparsec.Internal.Types.Complete
                        (Data.Attoparsec.ByteString.Internal.failK @ [[Lib.AlignedRead]])
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [GHC.Base.String]
                               -> GHC.Base.String
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString [[Lib.AlignedRead]]>_R)
                        (Data.Attoparsec.ByteString.Internal.successK
                           @ [[Lib.AlignedRead]])
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [[Lib.AlignedRead]]
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString
                                    [[Lib.AlignedRead]]>_R) of wild {
                   Data.Attoparsec.Internal.Types.Fail ds6 ds7 err
                   -> case ds7 of wild1 { DEFAULT ->
                      GHC.Types.[] @ [Lib.AlignedRead] }
                   Data.Attoparsec.Internal.Types.Partial ipv
                   -> case Lib.parseReadsetsFromSAM1 ret_ty [[Lib.AlignedRead]] of {}
                   Data.Attoparsec.Internal.Types.Done ds6 a1 -> a1 }) -}
34922bbf03b04884c790f065a34dd35e
  $wparsechkBED ::
    GHC.Prim.Int#
    -> GHC.Prim.Int# -> [GHC.Types.Int] -> [GHC.Types.Char]
  {- Arity: 3, Strictness: <S,U><S,U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.Int#)
                   (w :: [GHC.Types.Int]) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==# ww ww1) of wild {
                   GHC.Types.False
                   -> GHC.CString.unpackAppendCString#
                        Lib.createprimerbedmaps13
                        (case GHC.List.$wlenAcc @ GHC.Types.Int w 0# of ww2 { DEFAULT ->
                         case GHC.Show.$wshowSignedInt
                                0#
                                ww2
                                (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                         GHC.Base.++
                           @ GHC.Types.Char
                           (GHC.Types.: @ GHC.Types.Char ww5 ww6)
                           (GHC.CString.unpackAppendCString#
                              Lib.createprimerbedmaps12
                              (case GHC.Show.$wshowSignedInt
                                      0#
                                      ww
                                      (GHC.Types.[] @ GHC.Types.Char) of ww3 { (#,#) ww7 ww8 ->
                               GHC.Base.++
                                 @ GHC.Types.Char
                                 (GHC.Types.: @ GHC.Types.Char ww7 ww8)
                                 Lib.parsechkBED3 })) } })
                   GHC.Types.True
                   -> GHC.CString.unpackAppendCString#
                        Lib.createprimerbedmaps9
                        (case GHC.Show.$wshowSignedInt
                                0#
                                ww
                                (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                         GHC.Base.++
                           @ GHC.Types.Char
                           (GHC.Types.: @ GHC.Types.Char ww5 ww6)
                           Lib.parsechkBED1 }) }) -}
2474353de32038d65128b37cf72bb646
  $wparsechkMaster ::
    GHC.Prim.Int#
    -> GHC.Prim.Int# -> [GHC.Types.Int] -> [GHC.Types.Char]
  {- Arity: 3, Strictness: <S,U><S,U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.Int#)
                   (w :: [GHC.Types.Int]) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==# ww ww1) of wild {
                   GHC.Types.False
                   -> GHC.CString.unpackAppendCString#
                        Lib.createprimerbedmaps13
                        (case GHC.List.$wlenAcc @ GHC.Types.Int w 0# of ww2 { DEFAULT ->
                         case GHC.Show.$wshowSignedInt
                                0#
                                ww2
                                (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                         GHC.Base.++
                           @ GHC.Types.Char
                           (GHC.Types.: @ GHC.Types.Char ww5 ww6)
                           (GHC.CString.unpackAppendCString#
                              Lib.createprimerbedmaps12
                              (case GHC.Show.$wshowSignedInt
                                      0#
                                      ww
                                      (GHC.Types.[] @ GHC.Types.Char) of ww3 { (#,#) ww7 ww8 ->
                               GHC.Base.++
                                 @ GHC.Types.Char
                                 (GHC.Types.: @ GHC.Types.Char ww7 ww8)
                                 Lib.createprimerbedmaps10 })) } })
                   GHC.Types.True
                   -> GHC.CString.unpackAppendCString#
                        Lib.createprimerbedmaps9
                        (case GHC.Show.$wshowSignedInt
                                0#
                                ww
                                (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                         GHC.Base.++
                           @ GHC.Types.Char
                           (GHC.Types.: @ GHC.Types.Char ww5 ww6)
                           Lib.createprimerbedmaps7 }) }) -}
1aed94ab779b48d8ff011dd001db6af2
  $wparsechkSAM ::
    GHC.Prim.Int#
    -> GHC.Prim.Int# -> [GHC.Types.Int] -> [GHC.Types.Char]
  {- Arity: 3, Strictness: <S,U><S,U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.Int#)
                   (w :: [GHC.Types.Int]) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==# ww ww1) of wild {
                   GHC.Types.False
                   -> GHC.CString.unpackAppendCString#
                        Lib.createprimerbedmaps13
                        (case GHC.List.$wlenAcc @ GHC.Types.Int w 0# of ww2 { DEFAULT ->
                         case GHC.Show.$wshowSignedInt
                                0#
                                ww2
                                (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                         GHC.Base.++
                           @ GHC.Types.Char
                           (GHC.Types.: @ GHC.Types.Char ww5 ww6)
                           (GHC.CString.unpackAppendCString#
                              Lib.createprimerbedmaps12
                              (case GHC.Show.$wshowSignedInt
                                      0#
                                      ww
                                      (GHC.Types.[] @ GHC.Types.Char) of ww3 { (#,#) ww7 ww8 ->
                               GHC.Base.++
                                 @ GHC.Types.Char
                                 (GHC.Types.: @ GHC.Types.Char ww7 ww8)
                                 Lib.parsechkSAM3 })) } })
                   GHC.Types.True
                   -> GHC.CString.unpackAppendCString#
                        Lib.createprimerbedmaps9
                        (case GHC.Show.$wshowSignedInt
                                0#
                                ww
                                (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                         GHC.Base.++
                           @ GHC.Types.Char
                           (GHC.Types.: @ GHC.Types.Char ww5 ww6)
                           Lib.parsechkSAM1 }) }) -}
048c1337f4ec2ccc1625cc04410bfcb2
  $wparsemIDstring ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.ByteString.Internal.ByteString
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 let {
                   midvals :: [Data.ByteString.Internal.ByteString]
                   = case ww3 of ds6 {
                       DEFAULT
                       -> let {
                            lvl1009 :: GHC.Ptr.Ptr GHC.Word.Word8
                            = GHC.Ptr.Ptr @ GHC.Word.Word8 ww
                          } in
                          letrec {
                            $wsplitLoop :: (GHC.Prim.Word# -> GHC.Types.Bool)
                                           -> GHC.Ptr.Ptr GHC.Word.Word8
                                           -> GHC.Prim.Int#
                                           -> GHC.Types.Int
                                           -> GHC.Prim.Int#
                                           -> GHC.ForeignPtr.ForeignPtr GHC.Word.Word8
                                           -> GHC.Prim.State# GHC.Prim.RealWorld
                                           -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                 [Data.ByteString.Internal.ByteString] #)
                              {- Arity: 7,
                                 Strictness: <L,U><L,1*U(U)><S,U><L,1*U(U)><S,U><L,U(U,U)><S,U>,
                                 Inline: [0] -}
                            = \ (w :: GHC.Prim.Word# -> GHC.Types.Bool)
                                (w1 :: GHC.Ptr.Ptr GHC.Word.Word8)
                                (ww4 :: GHC.Prim.Int#)
                                (w2 :: GHC.Types.Int)
                                (ww5 :: GHC.Prim.Int#)
                                (w3 :: GHC.ForeignPtr.ForeignPtr GHC.Word.Word8)
                                (w4 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                              case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# ww4 ww5) of wild1 {
                                GHC.Types.False
                                -> case w1 of wild2 { GHC.Ptr.Ptr a ->
                                   case w2 of wild3 { GHC.Types.I# x1 ->
                                   case GHC.Prim.readWord8OffAddr#
                                          @ GHC.Prim.RealWorld
                                          a
                                          (GHC.Prim.+# x1 ww4)
                                          w4 of ds7 { (#,#) ipv ipv1 ->
                                   case w ipv1 of wild5 {
                                     GHC.Types.False
                                     -> $wsplitLoop w wild2 (GHC.Prim.+# ww4 1#) wild3 ww5 w3 ipv
                                     GHC.Types.True
                                     -> (# ipv,
                                           GHC.Types.:
                                             @ Data.ByteString.Internal.ByteString
                                             (case w3 of dt { GHC.ForeignPtr.ForeignPtr dt1 dt2 ->
                                              Data.ByteString.Internal.PS dt1 dt2 x1 ww4 })
                                             (case w of pred'1 { DEFAULT ->
                                              case w3 of fp'1 { GHC.ForeignPtr.ForeignPtr ipv2 ipv3 ->
                                              case $wsplitLoop
                                                     pred'1
                                                     lvl1009
                                                     0#
                                                     (GHC.Types.I#
                                                        (GHC.Prim.+# (GHC.Prim.+# x1 ww4) 1#))
                                                     (GHC.Prim.-# (GHC.Prim.-# ww5 ww4) 1#)
                                                     fp'1
                                                     GHC.Prim.realWorld# of ds8 { (#,#) ipv4 ipv5 ->
                                              case GHC.Prim.touch#
                                                     @ 'GHC.Types.LiftedRep
                                                     @ GHC.ForeignPtr.ForeignPtrContents
                                                     ww1
                                                     ipv4 of s' { DEFAULT ->
                                              ipv5 } } } }) #) } } } }
                                GHC.Types.True
                                -> (# w4,
                                      GHC.Types.:
                                        @ Data.ByteString.Internal.ByteString
                                        (case w3 of dt { GHC.ForeignPtr.ForeignPtr dt1 dt2 ->
                                         case w2 of dt3 { GHC.Types.I# dt4 ->
                                         Data.ByteString.Internal.PS dt1 dt2 dt4 ww4 } })
                                        (GHC.Types.[] @ Data.ByteString.Internal.ByteString) #) }
                          } in
                          case $wsplitLoop
                                 Lib.parsemIDstring2
                                 lvl1009
                                 0#
                                 (GHC.Types.I# ww2)
                                 ds6
                                 (GHC.ForeignPtr.ForeignPtr @ GHC.Word.Word8 ww ww1)
                                 GHC.Prim.realWorld# of ds7 { (#,#) ipv ipv1 ->
                          case GHC.Prim.touch#
                                 @ 'GHC.Types.LiftedRep
                                 @ GHC.ForeignPtr.ForeignPtrContents
                                 ww1
                                 ipv of s' { DEFAULT ->
                          Lib.parsemIDstring_go ipv1 } }
                       0# -> GHC.Types.[] @ Data.ByteString.Internal.ByteString }
                 } in
                 case GHC.List.$wlenAcc
                        @ Data.ByteString.Internal.ByteString
                        midvals
                        0# of ww4 { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<=# ww4 0#) of wild {
                   GHC.Types.False
                   -> GHC.List.head @ Data.ByteString.Internal.ByteString midvals
                   GHC.Types.True -> Lib.parsemIDstring1 } }) -}
0298b9f5496e7bc3ce785a211d9eae53
  $wparsesignedint ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Integer.Type.Integer
  {- Arity: 4, Strictness: <S,U><L,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Data.Attoparsec.ByteString.Char8.$wdouble
                        @ GHC.Types.Double
                        ww
                        ww1
                        ww2
                        ww3
                        ww3
                        0#
                        0#
                        Data.Attoparsec.Internal.Types.Complete
                        (Data.Attoparsec.ByteString.Internal.failK @ GHC.Types.Double)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [GHC.Base.String]
                               -> GHC.Base.String
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString GHC.Types.Double>_R)
                        (Data.Attoparsec.ByteString.Internal.successK @ GHC.Types.Double)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> GHC.Types.Double
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString
                                    GHC.Types.Double>_R) of wild {
                   Data.Attoparsec.Internal.Types.Fail ds6 ds7 err
                   -> case ds7 of wild1 { DEFAULT ->
                      case GHC.List.badHead ret_ty GHC.Integer.Type.Integer of {} }
                   Data.Attoparsec.Internal.Types.Partial ipv
                   -> case Lib.parsesignedint1 ret_ty GHC.Integer.Type.Integer of {}
                   Data.Attoparsec.Internal.Types.Done ds6 a1
                   -> case a1 of wild1 { GHC.Types.D# x ->
                      case GHC.Integer.Type.decodeDoubleInteger
                             x of ds7 { (#,#) ipv ipv1 ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<# ipv1 0#) of wild2 {
                        GHC.Types.False -> GHC.Integer.Type.shiftLInteger ipv ipv1
                        GHC.Types.True
                        -> let {
                             s :: GHC.Prim.Int# = GHC.Prim.negateInt# ipv1
                           } in
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.># s 52#) of wild3 {
                             GHC.Types.False
                             -> case GHC.Integer.Type.integerToInt ipv of n { DEFAULT ->
                                GHC.Integer.Type.smallInteger (GHC.Prim.uncheckedIShiftRA# n s) }
                             GHC.Types.True
                             -> case GHC.Integer.Type.ltInteger#
                                       ipv
                                       Lib.defaultBed2 of wild4 { DEFAULT ->
                                case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild4 of wild5 {
                                  GHC.Types.False -> Lib.defaultBed2
                                  GHC.Types.True -> Lib.updateTrimdAlnFields1 } } } } } } }) -}
dcacf17f539ee6b6f2f72c189b360e44
  $wpoly_go1 ::
    GHC.Prim.Int#
    -> Data.Map.Internal.Map GHC.Types.Int a
    -> [(GHC.Types.Int, a)]
    -> Data.Map.Internal.Map GHC.Types.Int a
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
c0d5567b5b0f1e2fe8bbee9d3b57373a
  $wpoly_go8 ::
    GHC.Prim.Int#
    -> Data.Map.Internal.Map Lib.UChr a
    -> [(Lib.UChr, a)]
    -> Data.Map.Internal.Map Lib.UChr a
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
03342933f55a059f6292ea1657bae0c4
  $wsafemapcig ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Base.Maybe Lib.CigarMap
  {- Arity: 4, Strictness: <S,U><L,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 let {
                   cigtups :: [[(GHC.Integer.Type.Integer,
                                 Data.ByteString.Internal.ByteString)]]
                   = case Lib.$wparseCigar
                            @ [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                            ww
                            ww1
                            ww2
                            ww3
                            ww3
                            0#
                            0#
                            Data.Attoparsec.Internal.Types.Complete
                            (Data.Attoparsec.ByteString.Internal.failK
                               @ [(GHC.Integer.Type.Integer,
                                   Data.ByteString.Internal.ByteString)])
                              `cast`
                            (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                             ->_R <Data.Attoparsec.Internal.Types.Pos
                                   -> Data.Attoparsec.Internal.Types.More
                                   -> [GHC.Base.String]
                                   -> GHC.Base.String
                                   -> Data.Attoparsec.Internal.Types.IResult
                                        Data.ByteString.Internal.ByteString
                                        [(GHC.Integer.Type.Integer,
                                          Data.ByteString.Internal.ByteString)]>_R)
                            (Data.Attoparsec.ByteString.Internal.successK
                               @ [(GHC.Integer.Type.Integer,
                                   Data.ByteString.Internal.ByteString)])
                              `cast`
                            (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                             ->_R <Data.Attoparsec.Internal.Types.Pos
                                   -> Data.Attoparsec.Internal.Types.More
                                   -> [(GHC.Integer.Type.Integer,
                                        Data.ByteString.Internal.ByteString)]
                                   -> Data.Attoparsec.Internal.Types.IResult
                                        Data.ByteString.Internal.ByteString
                                        [(GHC.Integer.Type.Integer,
                                          Data.ByteString.Internal.ByteString)]>_R) of wild {
                       Data.Attoparsec.Internal.Types.Fail ds6 ds7 err
                       -> case ds7 of wild1 { DEFAULT ->
                          GHC.Types.[]
                            @ [(GHC.Integer.Type.Integer,
                                Data.ByteString.Internal.ByteString)] }
                       Data.Attoparsec.Internal.Types.Partial ipv
                       -> case Lib.checkCigarSeqlen1
                          ret_ty [[(GHC.Integer.Type.Integer,
                                    Data.ByteString.Internal.ByteString)]]
                          of {}
                       Data.Attoparsec.Internal.Types.Done ds6 a1
                       -> GHC.Types.:
                            @ [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                            a1
                            (GHC.Types.[]
                               @ [(GHC.Integer.Type.Integer,
                                   Data.ByteString.Internal.ByteString)]) }
                 } in
                 case GHC.List.$wlenAcc
                        @ [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                        cigtups
                        0# of ww4 { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.># ww4 0#) of wild {
                   GHC.Types.False -> GHC.Base.Nothing @ Lib.CigarMap
                   GHC.Types.True
                   -> GHC.Base.Just
                        @ [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                        (GHC.List.head
                           @ [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                           cigtups) } }) -}
b293c92cef24a8b18d54b1b17708332c
  $wsamhdrparser ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <L,U><L,U><L,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
8d1076329d87c944f4346ecb909232e8
  $wsamhdrparserEOL ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <L,U><L,U><L,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
634aa283196490a980fad7d0dc221093
  $wseqp ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
17738148c20c6648fae468f5056df2d2
  $wshiftcrds ::
    (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
    -> GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> (# GHC.Integer.Type.Integer,
          Data.ByteString.Internal.ByteString #)
  {- Arity: 5, Strictness: <L,1*U(1*U,A)><L,U><L,U><L,U><S,U>,
     Inline: [0] -}
613aaf6073533c782ede52e216b73f2b
  $wspaces ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 8, Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More) ->
                 Lib.$wgo7 @ r ww ww1 ww2 ww3 ww4 ww5 ww6 w (Lib.spaces2 @ r)) -}
a8c5bf37d73170fcf1fd02ad37f7d850
  $wstarcigarP ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <L,U><L,U><L,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
2a7e3ac87818db706f0b6e56af4a2ee1
  $wtrimprimerPairsE ::
    Lib.CMap
    -> Lib.CMap
    -> Lib.PairedAln
    -> (# Lib.AlignedRead, Lib.AlignedRead, [Lib.AlignedRead],
          [Lib.AlignedRead] #)
  {- Arity: 3,
     Strictness: <L,U><L,U><L,1*U(1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,A,A,A,U,U,U,U,U,U,U,U,U),1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,A,A,A,U,U,U,U,U,U,U,U,U),1*U,1*U)>,
     Inline: [0],
     Unfolding: (\ (w :: Lib.CMap)
                   (w1 :: Lib.CMap)
                   (w2 :: Lib.PairedAln) ->
                 case Lib.$wmakeTrimmedUpdates
                        (let {
                           w3 :: Lib.PairedAln
                           = case w2 of ww { Lib.PairedAln ww1 ww2 ww3 ww4 ->
                             let {
                               addpints :: Lib.AlignedRead -> Lib.AlignedRead {- Arity: 1 -}
                               = Lib.addprimerints w w1
                             } in
                             Lib.PairedAln
                               (Lib.addprimerints w w1 ww1)
                               (Lib.addprimerints w w1 ww2)
                               (GHC.Base.map @ Lib.AlignedRead @ Lib.AlignedRead addpints ww3)
                               (GHC.Base.map @ Lib.AlignedRead @ Lib.AlignedRead addpints ww4) }
                         } in
                         Lib.PairedAln
                           (case w3 of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                            Lib.trimalignment ds6 })
                           (case w3 of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                            Lib.trimalignment ds7 })
                           (case w3 of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                            GHC.Base.map
                              @ Lib.AlignedRead
                              @ Lib.AlignedRead
                              Lib.trimalignment
                              ds8 })
                           (case w3 of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                            GHC.Base.map
                              @ Lib.AlignedRead
                              @ Lib.AlignedRead
                              Lib.trimalignment
                              ds9 })) of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 (# ww1, ww2,
                    GHC.List.filter
                      @ Lib.AlignedRead
                      Lib.removeNonPrimaryZeroLengthAlignments1
                      ww3,
                    GHC.List.filter
                      @ Lib.AlignedRead
                      Lib.removeNonPrimaryZeroLengthAlignments1
                      ww4 #) }) -}
a6cdd289e0742234ceb797df235131aa
  $wtxtfieldp ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
09447cdeeca19fe043efc80e09158144
  $wuchrparser ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.UChr
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
b324e019ef71ee34dcb81ed35a14cc0f
  $wupdateCigB ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.ByteString.Internal.ByteString
  {- Arity: 6, Strictness: <L,U><L,1*U><S,U><L,U><S,U><S,U>,
     Inline: [0] -}
22959e1a9b3648f9f21ea220521a08be
  $wupdateCigF ::
    GHC.Integer.Type.Integer
    -> GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.ByteString.Internal.ByteString
  {- Arity: 5, Strictness: <L,1*U><S,U><L,U><S,U><S,U>,
     Inline: [0] -}
3545277e8deb8140a8c04a2b171273c9
  $wupdateCigR ::
    GHC.Integer.Type.Integer
    -> GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.ByteString.Internal.ByteString
  {- Arity: 5, Strictness: <L,1*U><S,U><L,U><S,U><S,U>,
     Inline: [0] -}
92877c0f192e3e3a8ab753764ead8067
  $wvalidateTrimdPairAlnStart ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,1*U><S,1*U><S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Integer.Type.Integer)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: GHC.Integer.Type.Integer)
                   (ww3 :: GHC.Integer.Type.Integer) ->
                 case GHC.Integer.Type.eqInteger# ww2 ww1 of wild { DEFAULT ->
                 case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild of wild1 {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case GHC.Integer.Type.eqInteger# ww ww3 of wild2 { DEFAULT ->
                      GHC.Prim.tagToEnum# @ GHC.Types.Bool wild2 } } }) -}
21071c975426d6ea93962a8c0a55430b
  data AlignedRead
    = AlignedRead {qname :: Data.ByteString.Internal.ByteString,
                   flag :: GHC.Types.Int,
                   rname :: Lib.UChr,
                   pos :: GHC.Integer.Type.Integer,
                   endpos :: GHC.Integer.Type.Integer,
                   mapqual :: GHC.Integer.Type.Integer,
                   cigar :: Data.ByteString.Internal.ByteString,
                   trimdcigar :: Data.ByteString.Internal.ByteString,
                   cigmap :: Lib.CigarMap,
                   trimdcigmap :: Lib.CigarMap,
                   rnext :: Data.ByteString.Internal.ByteString,
                   pnext :: GHC.Integer.Type.Integer,
                   tlen :: GHC.Integer.Type.Integer,
                   refseq :: Data.ByteString.Internal.ByteString,
                   basequal :: Data.ByteString.Internal.ByteString,
                   optfields :: Data.ByteString.Internal.ByteString,
                   strand :: Data.ByteString.Internal.ByteString,
                   paired :: GHC.Types.Bool,
                   mapped :: GHC.Types.Bool,
                   fint :: [Lib.BedRecord],
                   rint :: [Lib.BedRecord],
                   pintflag :: GHC.Types.Bool,
                   trimdflag :: GHC.Types.Bool,
                   trimdpos :: GHC.Integer.Type.Integer,
                   trimdendpos :: GHC.Integer.Type.Integer,
                   headerstrings :: Lib.Header,
                   isheader :: GHC.Types.Bool,
                   mid :: Data.ByteString.Internal.ByteString,
                   xmid :: Data.ByteString.Internal.ByteString,
                   tbed :: Lib.BedRecord,
                   trimdToZeroLength :: GHC.Types.Bool}
c38682d8085121b6de769463314594e0
  type Alignments = [Lib.AlignedRead]
6fd17409ced991b6d652e98da75d1169
  type BED = Data.Vector.Vector Lib.BedRecord
9bef29ed1835da52d687e9f588f6f1bf
  data BEDPE
    = BEDPE {chr1 :: Lib.UChr,
             start1 :: GHC.Integer.Type.Integer,
             end1 :: GHC.Integer.Type.Integer,
             chr2 :: Lib.UChr,
             start2 :: GHC.Integer.Type.Integer,
             end2 :: GHC.Integer.Type.Integer,
             bedpename :: Data.ByteString.Internal.ByteString}
ef5f9f8f2a0af6e57cd7c067fe8a7828
  type BedMap = Data.IntMap.Internal.IntMap Lib.BedRecord
ec17ee0811cea74621c0d656d7cc2daf
  data BedRecord
    = BedRecord {bedchr :: Lib.UChr,
                 bedstart :: GHC.Integer.Type.Integer,
                 bedend :: GHC.Integer.Type.Integer,
                 bedname :: Data.ByteString.Internal.ByteString}
e9eb3e39be67475631483ec1f124ecec
  type CMap = Data.Map.Internal.Map Lib.UChr Lib.BedMap
871680c8a98548ba1071badd33bf1fbd
  data ChromNameFormat = GRC | UCSC
a973e3450b34d3764c2789988674e77e
  type CigarMap =
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
655dfa095dd2790c77e192a109b1b804
  type Header = [Data.ByteString.Internal.ByteString]
e84d95f7c553a7e98bb578b6a27683cc
  data MasterRecord
    = MasterRecord {mchrom :: Lib.UChr,
                    mtargetstart :: GHC.Integer.Type.Integer,
                    mtargetend :: GHC.Integer.Type.Integer,
                    mampname :: Data.ByteString.Internal.ByteString,
                    mforstart :: GHC.Integer.Type.Integer,
                    mforend :: GHC.Integer.Type.Integer,
                    mrevstart :: GHC.Integer.Type.Integer,
                    mrevend :: GHC.Integer.Type.Integer,
                    mforname :: Data.ByteString.Internal.ByteString,
                    mrevname :: Data.ByteString.Internal.ByteString,
                    mforseq :: Data.ByteString.Internal.ByteString,
                    mrevseq :: Data.ByteString.Internal.ByteString}
26e2207e507d4bc5b47a3c19f626e7fd
  data MidFamily
    = MidFamily {chrom :: Lib.UChr,
                 alnstart :: GHC.Integer.Type.Integer,
                 alnend :: GHC.Integer.Type.Integer,
                 midseq :: Data.ByteString.Internal.ByteString,
                 alns :: [Lib.AlignedRead],
                 alncount :: GHC.Integer.Type.Integer,
                 txposedcount :: GHC.Integer.Type.Integer,
                 postxposdcnt :: GHC.Integer.Type.Integer,
                 negtxposdcnt :: GHC.Integer.Type.Integer,
                 targetbed :: Lib.BedRecord}
f06645d095bf16235fbe38a1fa974f4c
  data Opts
    = Opts {bedpeformat :: GHC.Types.Bool,
            incoordsfile :: GHC.Base.String,
            insamfile :: GHC.Base.String,
            outfilename :: GHC.Base.String}
21071c975426d6ea93962a8c0a55430b
  data PairedAln
    = PairedAln {r1prim :: Lib.AlignedRead,
                 r2prim :: Lib.AlignedRead,
                 r1secs :: [Lib.AlignedRead],
                 r2secs :: [Lib.AlignedRead]}
21071c975426d6ea93962a8c0a55430b
  axiom Lib.Rep_AlignedRead::
      GHC.Generics.Rep Lib.AlignedRead
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "AlignedRead"
               "Lib"
               "primerclip-0.3.3.0-GfuurxY2OUOHPk7lKZLXUc"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "AlignedRead" 'GHC.Generics.PrefixI 'GHC.Types.True)
               ((((GHC.Generics.S1
                     ('GHC.Generics.MetaSel
                        ('GHC.Base.Just "qname")
                        'GHC.Generics.NoSourceUnpackedness
                        'GHC.Generics.NoSourceStrictness
                        'GHC.Generics.DecidedLazy)
                     (GHC.Generics.Rec0 Data.ByteString.Internal.ByteString)
                   GHC.Generics.:*: (GHC.Generics.S1
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "flag")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 GHC.Types.Int)
                                     GHC.Generics.:*: GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "rname")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0 Lib.UChr)))
                  GHC.Generics.:*: ((GHC.Generics.S1
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "pos")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                                     GHC.Generics.:*: GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "endpos")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0
                                                           GHC.Integer.Type.Integer))
                                    GHC.Generics.:*: (GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "mapqual")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                                                      GHC.Generics.:*: GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just "cigar")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            Data.ByteString.Internal.ByteString))))
                 GHC.Generics.:*: (((GHC.Generics.S1
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "trimdcigar")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 Data.ByteString.Internal.ByteString)
                                     GHC.Generics.:*: GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "cigmap")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0 Lib.CigarMap))
                                    GHC.Generics.:*: (GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "trimdcigmap")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0 Lib.CigarMap)
                                                      GHC.Generics.:*: GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just "rnext")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            Data.ByteString.Internal.ByteString)))
                                   GHC.Generics.:*: ((GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "pnext")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                                                      GHC.Generics.:*: GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just "tlen")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            GHC.Integer.Type.Integer))
                                                     GHC.Generics.:*: (GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just
                                                                               "refseq")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            Data.ByteString.Internal.ByteString)
                                                                       GHC.Generics.:*: GHC.Generics.S1
                                                                                          ('GHC.Generics.MetaSel
                                                                                             ('GHC.Base.Just
                                                                                                "basequal")
                                                                                             'GHC.Generics.NoSourceUnpackedness
                                                                                             'GHC.Generics.NoSourceStrictness
                                                                                             'GHC.Generics.DecidedLazy)
                                                                                          (GHC.Generics.Rec0
                                                                                             Data.ByteString.Internal.ByteString)))))
                GHC.Generics.:*: ((((GHC.Generics.S1
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "optfields")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 Data.ByteString.Internal.ByteString)
                                     GHC.Generics.:*: GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "strand")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0
                                                           Data.ByteString.Internal.ByteString))
                                    GHC.Generics.:*: (GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "paired")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0 GHC.Types.Bool)
                                                      GHC.Generics.:*: GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just
                                                                               "mapped")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            GHC.Types.Bool)))
                                   GHC.Generics.:*: ((GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "fint")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0 [Lib.BedRecord])
                                                      GHC.Generics.:*: GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just "rint")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            [Lib.BedRecord]))
                                                     GHC.Generics.:*: (GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just
                                                                               "pintflag")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            GHC.Types.Bool)
                                                                       GHC.Generics.:*: GHC.Generics.S1
                                                                                          ('GHC.Generics.MetaSel
                                                                                             ('GHC.Base.Just
                                                                                                "trimdflag")
                                                                                             'GHC.Generics.NoSourceUnpackedness
                                                                                             'GHC.Generics.NoSourceStrictness
                                                                                             'GHC.Generics.DecidedLazy)
                                                                                          (GHC.Generics.Rec0
                                                                                             GHC.Types.Bool))))
                                  GHC.Generics.:*: (((GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "trimdpos")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                                                      GHC.Generics.:*: GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just
                                                                               "trimdendpos")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            GHC.Integer.Type.Integer))
                                                     GHC.Generics.:*: (GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just
                                                                               "headerstrings")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            Lib.Header)
                                                                       GHC.Generics.:*: GHC.Generics.S1
                                                                                          ('GHC.Generics.MetaSel
                                                                                             ('GHC.Base.Just
                                                                                                "isheader")
                                                                                             'GHC.Generics.NoSourceUnpackedness
                                                                                             'GHC.Generics.NoSourceStrictness
                                                                                             'GHC.Generics.DecidedLazy)
                                                                                          (GHC.Generics.Rec0
                                                                                             GHC.Types.Bool)))
                                                    GHC.Generics.:*: ((GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just "mid")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            Data.ByteString.Internal.ByteString)
                                                                       GHC.Generics.:*: GHC.Generics.S1
                                                                                          ('GHC.Generics.MetaSel
                                                                                             ('GHC.Base.Just
                                                                                                "xmid")
                                                                                             'GHC.Generics.NoSourceUnpackedness
                                                                                             'GHC.Generics.NoSourceStrictness
                                                                                             'GHC.Generics.DecidedLazy)
                                                                                          (GHC.Generics.Rec0
                                                                                             Data.ByteString.Internal.ByteString))
                                                                      GHC.Generics.:*: (GHC.Generics.S1
                                                                                          ('GHC.Generics.MetaSel
                                                                                             ('GHC.Base.Just
                                                                                                "tbed")
                                                                                             'GHC.Generics.NoSourceUnpackedness
                                                                                             'GHC.Generics.NoSourceStrictness
                                                                                             'GHC.Generics.DecidedLazy)
                                                                                          (GHC.Generics.Rec0
                                                                                             Lib.BedRecord)
                                                                                        GHC.Generics.:*: GHC.Generics.S1
                                                                                                           ('GHC.Generics.MetaSel
                                                                                                              ('GHC.Base.Just
                                                                                                                 "trimdToZeroLength")
                                                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                                                              'GHC.Generics.NoSourceStrictness
                                                                                                              'GHC.Generics.DecidedLazy)
                                                                                                           (GHC.Generics.Rec0
                                                                                                              GHC.Types.Bool)))))))
9bef29ed1835da52d687e9f588f6f1bf
  axiom Lib.Rep_BEDPE::
      GHC.Generics.Rep Lib.BEDPE
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "BEDPE"
               "Lib"
               "primerclip-0.3.3.0-GfuurxY2OUOHPk7lKZLXUc"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "BEDPE" 'GHC.Generics.PrefixI 'GHC.Types.True)
               ((GHC.Generics.S1
                   ('GHC.Generics.MetaSel
                      ('GHC.Base.Just "chr1")
                      'GHC.Generics.NoSourceUnpackedness
                      'GHC.Generics.NoSourceStrictness
                      'GHC.Generics.DecidedLazy)
                   (GHC.Generics.Rec0 Lib.UChr)
                 GHC.Generics.:*: (GHC.Generics.S1
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "start1")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                                   GHC.Generics.:*: GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "end1")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0 GHC.Integer.Type.Integer)))
                GHC.Generics.:*: ((GHC.Generics.S1
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "chr2")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 Lib.UChr)
                                   GHC.Generics.:*: GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "start2")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0 GHC.Integer.Type.Integer))
                                  GHC.Generics.:*: (GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "end2")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                                                    GHC.Generics.:*: GHC.Generics.S1
                                                                       ('GHC.Generics.MetaSel
                                                                          ('GHC.Base.Just
                                                                             "bedpename")
                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                          'GHC.Generics.NoSourceStrictness
                                                                          'GHC.Generics.DecidedLazy)
                                                                       (GHC.Generics.Rec0
                                                                          Data.ByteString.Internal.ByteString)))))
ec17ee0811cea74621c0d656d7cc2daf
  axiom Lib.Rep_BedRecord::
      GHC.Generics.Rep Lib.BedRecord
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "BedRecord"
               "Lib"
               "primerclip-0.3.3.0-GfuurxY2OUOHPk7lKZLXUc"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "BedRecord" 'GHC.Generics.PrefixI 'GHC.Types.True)
               ((GHC.Generics.S1
                   ('GHC.Generics.MetaSel
                      ('GHC.Base.Just "bedchr")
                      'GHC.Generics.NoSourceUnpackedness
                      'GHC.Generics.NoSourceStrictness
                      'GHC.Generics.DecidedLazy)
                   (GHC.Generics.Rec0 Lib.UChr)
                 GHC.Generics.:*: GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "bedstart")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Integer.Type.Integer))
                GHC.Generics.:*: (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "bedend")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "bedname")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0
                                                        Data.ByteString.Internal.ByteString))))
21071c975426d6ea93962a8c0a55430b
  axiom Lib.Rep_PairedAln::
      GHC.Generics.Rep Lib.PairedAln
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "PairedAln"
               "Lib"
               "primerclip-0.3.3.0-GfuurxY2OUOHPk7lKZLXUc"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "PairedAln" 'GHC.Generics.PrefixI 'GHC.Types.True)
               ((GHC.Generics.S1
                   ('GHC.Generics.MetaSel
                      ('GHC.Base.Just "r1prim")
                      'GHC.Generics.NoSourceUnpackedness
                      'GHC.Generics.NoSourceStrictness
                      'GHC.Generics.DecidedLazy)
                   (GHC.Generics.Rec0 Lib.AlignedRead)
                 GHC.Generics.:*: GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "r2prim")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 Lib.AlignedRead))
                GHC.Generics.:*: (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "r1secs")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 [Lib.AlignedRead])
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "r2secs")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 [Lib.AlignedRead]))))
56a346888d4ebe522e3d0b31a72b285d
  axiom Lib.Rep_UChr::
      GHC.Generics.Rep Lib.UChr
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "UChr"
               "Lib"
               "primerclip-0.3.3.0-GfuurxY2OUOHPk7lKZLXUc"
               'GHC.Types.False)
            ((((((GHC.Generics.C1
                    ('GHC.Generics.MetaCons
                       "C1" 'GHC.Generics.PrefixI 'GHC.Types.False)
                    GHC.Generics.U1
                  GHC.Generics.:+: (GHC.Generics.C1
                                      ('GHC.Generics.MetaCons
                                         "C2" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                      GHC.Generics.U1
                                    GHC.Generics.:+: GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "C3"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1))
                 GHC.Generics.:+: (GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "C4" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: (GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "C5"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1
                                                     GHC.Generics.:+: GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "C6"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1)))
                GHC.Generics.:+: ((GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "C7" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: (GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "C8"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1
                                                     GHC.Generics.:+: GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "C9"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1))
                                  GHC.Generics.:+: ((GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "C10"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1
                                                     GHC.Generics.:+: GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "C11"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1)
                                                    GHC.Generics.:+: (GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "C12"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "C13"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1))))
               GHC.Generics.:+: (((GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "C14" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: (GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "C15"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1
                                                     GHC.Generics.:+: GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "C16"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1))
                                  GHC.Generics.:+: ((GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "C17"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1
                                                     GHC.Generics.:+: GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "C18"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1)
                                                    GHC.Generics.:+: (GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "C19"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "C20"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1)))
                                 GHC.Generics.:+: ((GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "C21"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1
                                                    GHC.Generics.:+: (GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "C22"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "CX"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1))
                                                   GHC.Generics.:+: ((GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "CY"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "CMT"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1)
                                                                     GHC.Generics.:+: (GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "Chr1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "Chr2"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1)))))
              GHC.Generics.:+: ((((GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "Chr3" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: (GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "Chr4"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1
                                                     GHC.Generics.:+: GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "Chr5"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1))
                                  GHC.Generics.:+: ((GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "Chr6"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1
                                                     GHC.Generics.:+: GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "Chr7"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1)
                                                    GHC.Generics.:+: (GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "Chr8"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "Chr9"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1)))
                                 GHC.Generics.:+: ((GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "Chr10"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1
                                                    GHC.Generics.:+: (GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "Chr11"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "Chr12"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1))
                                                   GHC.Generics.:+: ((GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "Chr13"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "Chr14"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1)
                                                                     GHC.Generics.:+: (GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "Chr15"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "Chr16"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1))))
                                GHC.Generics.:+: (((GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "Chr17"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1
                                                    GHC.Generics.:+: (GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "Chr18"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "Chr19"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1))
                                                   GHC.Generics.:+: ((GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "Chr20"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "Chr21"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1)
                                                                     GHC.Generics.:+: (GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "Chr22"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "ChrX"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1)))
                                                  GHC.Generics.:+: ((GHC.Generics.C1
                                                                       ('GHC.Generics.MetaCons
                                                                          "ChrY"
                                                                          'GHC.Generics.PrefixI
                                                                          'GHC.Types.False)
                                                                       GHC.Generics.U1
                                                                     GHC.Generics.:+: (GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "ChrM"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000207P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1))
                                                                    GHC.Generics.:+: ((GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000226P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000229P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1)
                                                                                      GHC.Generics.:+: (GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000231P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1
                                                                                                        GHC.Generics.:+: GHC.Generics.C1
                                                                                                                           ('GHC.Generics.MetaCons
                                                                                                                              "GL000210P1"
                                                                                                                              'GHC.Generics.PrefixI
                                                                                                                              'GHC.Types.False)
                                                                                                                           GHC.Generics.U1))))))
             GHC.Generics.:+: (((((GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "GL000239P1" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: (GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "GL000235P1"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1
                                                     GHC.Generics.:+: GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "GL000201P1"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1))
                                  GHC.Generics.:+: ((GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "GL000247P1"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1
                                                     GHC.Generics.:+: GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "GL000245P1"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1)
                                                    GHC.Generics.:+: (GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "GL000197P1"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000203P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1)))
                                 GHC.Generics.:+: ((GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "GL000246P1"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1
                                                    GHC.Generics.:+: (GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "GL000249P1"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000196P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1))
                                                   GHC.Generics.:+: ((GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "GL000248P1"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000244P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1)
                                                                     GHC.Generics.:+: (GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000238P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000202P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1))))
                                GHC.Generics.:+: (((GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "GL000234P1"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1
                                                    GHC.Generics.:+: (GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "GL000232P1"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000206P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1))
                                                   GHC.Generics.:+: ((GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "GL000240P1"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000236P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1)
                                                                     GHC.Generics.:+: (GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000241P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000243P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1)))
                                                  GHC.Generics.:+: ((GHC.Generics.C1
                                                                       ('GHC.Generics.MetaCons
                                                                          "GL000242P1"
                                                                          'GHC.Generics.PrefixI
                                                                          'GHC.Types.False)
                                                                       GHC.Generics.U1
                                                                     GHC.Generics.:+: (GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000230P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000237P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1))
                                                                    GHC.Generics.:+: ((GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000233P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000204P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1)
                                                                                      GHC.Generics.:+: (GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000198P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1
                                                                                                        GHC.Generics.:+: GHC.Generics.C1
                                                                                                                           ('GHC.Generics.MetaCons
                                                                                                                              "GL000208P1"
                                                                                                                              'GHC.Generics.PrefixI
                                                                                                                              'GHC.Types.False)
                                                                                                                           GHC.Generics.U1)))))
                               GHC.Generics.:+: ((((GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "GL000191P1"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1
                                                    GHC.Generics.:+: (GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "GL000227P1"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000228P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1))
                                                   GHC.Generics.:+: ((GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "GL000214P1"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000221P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1)
                                                                     GHC.Generics.:+: (GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000209P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000218P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1)))
                                                  GHC.Generics.:+: ((GHC.Generics.C1
                                                                       ('GHC.Generics.MetaCons
                                                                          "GL000220P1"
                                                                          'GHC.Generics.PrefixI
                                                                          'GHC.Types.False)
                                                                       GHC.Generics.U1
                                                                     GHC.Generics.:+: (GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000213P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000211P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1))
                                                                    GHC.Generics.:+: ((GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000199P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000217P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1)
                                                                                      GHC.Generics.:+: (GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000216P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1
                                                                                                        GHC.Generics.:+: GHC.Generics.C1
                                                                                                                           ('GHC.Generics.MetaCons
                                                                                                                              "GL000215P1"
                                                                                                                              'GHC.Generics.PrefixI
                                                                                                                              'GHC.Types.False)
                                                                                                                           GHC.Generics.U1))))
                                                 GHC.Generics.:+: (((GHC.Generics.C1
                                                                       ('GHC.Generics.MetaCons
                                                                          "GL000205P1"
                                                                          'GHC.Generics.PrefixI
                                                                          'GHC.Types.False)
                                                                       GHC.Generics.U1
                                                                     GHC.Generics.:+: (GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000219P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000224P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1))
                                                                    GHC.Generics.:+: ((GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000223P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000195P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1)
                                                                                      GHC.Generics.:+: (GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000212P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1
                                                                                                        GHC.Generics.:+: GHC.Generics.C1
                                                                                                                           ('GHC.Generics.MetaCons
                                                                                                                              "GL000222P1"
                                                                                                                              'GHC.Generics.PrefixI
                                                                                                                              'GHC.Types.False)
                                                                                                                           GHC.Generics.U1)))
                                                                   GHC.Generics.:+: ((GHC.Generics.C1
                                                                                        ('GHC.Generics.MetaCons
                                                                                           "GL000200P1"
                                                                                           'GHC.Generics.PrefixI
                                                                                           'GHC.Types.False)
                                                                                        GHC.Generics.U1
                                                                                      GHC.Generics.:+: (GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000193P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1
                                                                                                        GHC.Generics.:+: GHC.Generics.C1
                                                                                                                           ('GHC.Generics.MetaCons
                                                                                                                              "GL000194P1"
                                                                                                                              'GHC.Generics.PrefixI
                                                                                                                              'GHC.Types.False)
                                                                                                                           GHC.Generics.U1))
                                                                                     GHC.Generics.:+: ((GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000225P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1
                                                                                                        GHC.Generics.:+: GHC.Generics.C1
                                                                                                                           ('GHC.Generics.MetaCons
                                                                                                                              "GL000192P1"
                                                                                                                              'GHC.Generics.PrefixI
                                                                                                                              'GHC.Types.False)
                                                                                                                           GHC.Generics.U1)
                                                                                                       GHC.Generics.:+: (GHC.Generics.C1
                                                                                                                           ('GHC.Generics.MetaCons
                                                                                                                              "NC_007605"
                                                                                                                              'GHC.Generics.PrefixI
                                                                                                                              'GHC.Types.False)
                                                                                                                           GHC.Generics.U1
                                                                                                                         GHC.Generics.:+: GHC.Generics.C1
                                                                                                                                            ('GHC.Generics.MetaCons
                                                                                                                                               "NONE"
                                                                                                                                               'GHC.Generics.PrefixI
                                                                                                                                               'GHC.Types.False)
                                                                                                                                            GHC.Generics.U1)))))))
8edcc2498c46c20d06182ee101cd5654
  data RunStats
    = RunStats {alnsTotal :: GHC.Integer.Type.Integer,
                alnsMapped :: GHC.Integer.Type.Integer,
                alnsTrimd :: GHC.Integer.Type.Integer,
                alnsTrimdToZero :: GHC.Integer.Type.Integer,
                trimmedPct :: GHC.Types.Double,
                mappedPct :: GHC.Types.Double}
8752605886ddac7b88a11c44fd16774f
  type SAM = (Lib.Header, Lib.Alignments)
8559d0b44695806151a5bc1692dff6d3
  data SAMFlag
    = SAMFlag {pairedRead :: GHC.Types.Bool,
               mateMapped :: GHC.Types.Bool,
               notMapped :: GHC.Types.Bool,
               pairNotMapped :: GHC.Types.Bool,
               queryPlus :: GHC.Types.Bool,
               mateNeg :: GHC.Types.Bool,
               fstInPair :: GHC.Types.Bool,
               sndInPair :: GHC.Types.Bool,
               notPrimary :: GHC.Types.Bool,
               failedQC :: GHC.Types.Bool,
               dupRead :: GHC.Types.Bool,
               intflag :: GHC.Types.Int}
56a346888d4ebe522e3d0b31a72b285d
  data UChr
    = C1
    | C2
    | C3
    | C4
    | C5
    | C6
    | C7
    | C8
    | C9
    | C10
    | C11
    | C12
    | C13
    | C14
    | C15
    | C16
    | C17
    | C18
    | C19
    | C20
    | C21
    | C22
    | CX
    | CY
    | CMT
    | Chr1
    | Chr2
    | Chr3
    | Chr4
    | Chr5
    | Chr6
    | Chr7
    | Chr8
    | Chr9
    | Chr10
    | Chr11
    | Chr12
    | Chr13
    | Chr14
    | Chr15
    | Chr16
    | Chr17
    | Chr18
    | Chr19
    | Chr20
    | Chr21
    | Chr22
    | ChrX
    | ChrY
    | ChrM
    | GL000207P1
    | GL000226P1
    | GL000229P1
    | GL000231P1
    | GL000210P1
    | GL000239P1
    | GL000235P1
    | GL000201P1
    | GL000247P1
    | GL000245P1
    | GL000197P1
    | GL000203P1
    | GL000246P1
    | GL000249P1
    | GL000196P1
    | GL000248P1
    | GL000244P1
    | GL000238P1
    | GL000202P1
    | GL000234P1
    | GL000232P1
    | GL000206P1
    | GL000240P1
    | GL000236P1
    | GL000241P1
    | GL000243P1
    | GL000242P1
    | GL000230P1
    | GL000237P1
    | GL000233P1
    | GL000204P1
    | GL000198P1
    | GL000208P1
    | GL000191P1
    | GL000227P1
    | GL000228P1
    | GL000214P1
    | GL000221P1
    | GL000209P1
    | GL000218P1
    | GL000220P1
    | GL000213P1
    | GL000211P1
    | GL000199P1
    | GL000217P1
    | GL000216P1
    | GL000215P1
    | GL000205P1
    | GL000219P1
    | GL000224P1
    | GL000223P1
    | GL000195P1
    | GL000212P1
    | GL000222P1
    | GL000200P1
    | GL000193P1
    | GL000194P1
    | GL000225P1
    | GL000192P1
    | NC_007605
    | NONE
793c345aae91fa02866d1e24b6025244
  addprimerints ::
    Lib.CMap -> Lib.CMap -> Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,1*U><L,1*U><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,A,A,A,U,U,U,U,U,U,U,U,U)>,
     Unfolding: (\ (fpmap :: Lib.CMap)
                   (rpmap :: Lib.CMap)
                   (aln :: Lib.AlignedRead) ->
                 case aln of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 let {
                   starthits :: [Lib.BedRecord]
                   = Data.Maybe.catMaybes1
                       @ Lib.BedRecord
                       (GHC.Base.map
                          @ (Data.IntMap.Internal.IntMap Lib.BedRecord)
                          @ (GHC.Base.Maybe Lib.BedRecord)
                          (let {
                             lvl1009 :: GHC.Types.Int
                             = case GHC.Integer.Type.integerToInt ds9 of wild1 { DEFAULT ->
                               GHC.Types.I# wild1 }
                           } in
                           \ (bmap :: Data.IntMap.Internal.IntMap Lib.BedRecord) ->
                           Data.IntMap.Internal.lookup @ Lib.BedRecord lvl1009 bmap)
                          (Data.Maybe.catMaybes1
                             @ (Data.IntMap.Internal.IntMap Lib.BedRecord)
                             (GHC.Types.:
                                @ (GHC.Base.Maybe (Data.IntMap.Internal.IntMap Lib.BedRecord))
                                (Lib.$slookup1
                                   @ (Data.IntMap.Internal.IntMap Lib.BedRecord)
                                   ds8
                                   fpmap)
                                (GHC.Types.[]
                                   @ (GHC.Base.Maybe
                                        (Data.IntMap.Internal.IntMap Lib.BedRecord))))))
                 } in
                 let {
                   endhits :: [Lib.BedRecord]
                   = Data.Maybe.catMaybes1
                       @ Lib.BedRecord
                       (GHC.Base.map
                          @ (Data.IntMap.Internal.IntMap Lib.BedRecord)
                          @ (GHC.Base.Maybe Lib.BedRecord)
                          (let {
                             lvl1009 :: GHC.Types.Int
                             = case GHC.Integer.Type.integerToInt ds10 of wild1 { DEFAULT ->
                               GHC.Types.I# wild1 }
                           } in
                           \ (bmap :: Data.IntMap.Internal.IntMap Lib.BedRecord) ->
                           Data.IntMap.Internal.lookup @ Lib.BedRecord lvl1009 bmap)
                          (Data.Maybe.catMaybes1
                             @ (Data.IntMap.Internal.IntMap Lib.BedRecord)
                             (GHC.Types.:
                                @ (GHC.Base.Maybe (Data.IntMap.Internal.IntMap Lib.BedRecord))
                                (Lib.$slookup1
                                   @ (Data.IntMap.Internal.IntMap Lib.BedRecord)
                                   ds8
                                   rpmap)
                                (GHC.Types.[]
                                   @ (GHC.Base.Maybe
                                        (Data.IntMap.Internal.IntMap Lib.BedRecord))))))
                 } in
                 Lib.AlignedRead
                   ds6
                   ds7
                   ds8
                   ds9
                   ds10
                   ds11
                   ds12
                   ds13
                   ds14
                   ds15
                   ds16
                   ds17
                   ds18
                   ds19
                   ds20
                   ds21
                   ds22
                   ds23
                   ds24
                   starthits
                   endhits
                   (case GHC.List.$wlenAcc
                           @ Lib.BedRecord
                           (Data.OldList.sortBy
                              @ Lib.BedRecord
                              Lib.$fOrdBedRecord_$ccompare
                              (GHC.Base.++ @ Lib.BedRecord starthits endhits))
                           0# of ww2 { DEFAULT ->
                    GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.># ww2 0#) })
                   ds28
                   ds29
                   ds30
                   ds31
                   ds32
                   ds33
                   ds34
                   ds35
                   ds36 }) -}
d73fe40c6992589728fca0be71a26598
  addprimerintsPairedAln ::
    Lib.CMap -> Lib.CMap -> Lib.PairedAln -> Lib.PairedAln
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U><L,U><S,1*U(1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,A,A,A,U,U,U,U,U,U,U,U,U),1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,A,A,A,U,U,U,U,U,U,U,U,U),1*U,1*U)>m,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Lib.CMap) (w1 :: Lib.CMap) (w2 :: Lib.PairedAln) ->
                 case w2 of ww { Lib.PairedAln ww1 ww2 ww3 ww4 ->
                 let {
                   addpints :: Lib.AlignedRead -> Lib.AlignedRead {- Arity: 1 -}
                   = Lib.addprimerints w w1
                 } in
                 Lib.PairedAln
                   (Lib.addprimerints w w1 ww1)
                   (Lib.addprimerints w w1 ww2)
                   (GHC.Base.map @ Lib.AlignedRead @ Lib.AlignedRead addpints ww3)
                   (GHC.Base.map
                      @ Lib.AlignedRead
                      @ Lib.AlignedRead
                      addpints
                      ww4) }) -}
e67e1dca2905e145222eca0a372ad067
  addtrimtag :: Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 1,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLSLLLLLLLL),1*U(U,U(U),U,U,U,U,U,U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Unfolding: (\ (a :: Lib.AlignedRead) ->
                 case a of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 let {
                   $j :: Lib.AlignedRead <join 0>
                   = case ds28 of wild1 {
                       GHC.Types.False -> wild
                       GHC.Types.True
                       -> Lib.AlignedRead
                            ds6
                            (case ds7 of wild2 { GHC.Types.I# x# ->
                             GHC.Types.I# (GHC.Prim.orI# (GHC.Prim.andI# x# -3#) 4#) })
                            ds8
                            ds9
                            ds10
                            ds11
                            ds12
                            ds13
                            ds14
                            ds15
                            ds16
                            ds17
                            ds18
                            ds19
                            ds20
                            (Data.ByteString.concat
                               (GHC.Types.:
                                  @ Data.ByteString.Internal.ByteString
                                  ds21
                                  Lib.addtrimtag6))
                            ds22
                            ds23
                            ds24
                            ds25
                            ds26
                            ds27
                            GHC.Types.True
                            ds29
                            ds30
                            ds31
                            ds32
                            ds33
                            ds34
                            ds35
                            ds36 }
                 } in
                 case ds28 of wild1 {
                   GHC.Types.False -> $j
                   GHC.Types.True
                   -> case ds13 of wild2 { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                      case Lib.addtrimtag5 of wild3 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim./=# dt3 dt7) of wild4 {
                        GHC.Types.False
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.eqAddr# dt dt4) of wild5 {
                             GHC.Types.False
                             -> case Data.ByteString.Internal.$wcompareBytes
                                       dt
                                       dt1
                                       dt2
                                       dt3
                                       dt4
                                       dt5
                                       dt6
                                       dt7 of wild6 {
                                  DEFAULT
                                  -> Lib.AlignedRead
                                       ds6
                                       ds7
                                       ds8
                                       ds9
                                       ds10
                                       ds11
                                       ds12
                                       wild2
                                       ds14
                                       ds15
                                       ds16
                                       ds17
                                       ds18
                                       ds19
                                       ds20
                                       (Data.ByteString.concat
                                          (GHC.Types.:
                                             @ Data.ByteString.Internal.ByteString
                                             ds21
                                             Lib.addtrimtag1))
                                       ds22
                                       ds23
                                       ds24
                                       ds25
                                       ds26
                                       ds27
                                       GHC.Types.True
                                       ds29
                                       ds30
                                       ds31
                                       ds32
                                       ds33
                                       ds34
                                       ds35
                                       ds36
                                  GHC.Types.EQ -> $j }
                             GHC.Types.True
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.==# dt2 dt6) of wild6 {
                                  GHC.Types.False
                                  -> case Data.ByteString.Internal.$wcompareBytes
                                            dt
                                            dt1
                                            dt2
                                            dt3
                                            dt4
                                            dt5
                                            dt6
                                            dt7 of wild7 {
                                       DEFAULT
                                       -> Lib.AlignedRead
                                            ds6
                                            ds7
                                            ds8
                                            ds9
                                            ds10
                                            ds11
                                            ds12
                                            wild2
                                            ds14
                                            ds15
                                            ds16
                                            ds17
                                            ds18
                                            ds19
                                            ds20
                                            (Data.ByteString.concat
                                               (GHC.Types.:
                                                  @ Data.ByteString.Internal.ByteString
                                                  ds21
                                                  Lib.addtrimtag1))
                                            ds22
                                            ds23
                                            ds24
                                            ds25
                                            ds26
                                            ds27
                                            GHC.Types.True
                                            ds29
                                            ds30
                                            ds31
                                            ds32
                                            ds33
                                            ds34
                                            ds35
                                            ds36
                                       GHC.Types.EQ -> $j }
                                  GHC.Types.True -> $j } }
                        GHC.Types.True
                        -> Lib.AlignedRead
                             ds6
                             ds7
                             ds8
                             ds9
                             ds10
                             ds11
                             ds12
                             wild2
                             ds14
                             ds15
                             ds16
                             ds17
                             ds18
                             ds19
                             ds20
                             (Data.ByteString.concat
                                (GHC.Types.:
                                   @ Data.ByteString.Internal.ByteString
                                   ds21
                                   Lib.addtrimtag1))
                             ds22
                             ds23
                             ds24
                             ds25
                             ds26
                             ds27
                             GHC.Types.True
                             ds29
                             ds30
                             ds31
                             ds32
                             ds33
                             ds34
                             ds35
                             ds36 } } } } }) -}
4a23243ff2daecd2b2a10ed6197d231c
  addtrimtag1 :: [Data.ByteString.Internal.ByteString]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.ByteString.Internal.ByteString
                   Lib.addtrimtag4
                   Lib.addtrimtag2) -}
089c0001cdde7c96277ac6d5ae2573fc
  addtrimtag2 :: [Data.ByteString.Internal.ByteString]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.ByteString.Internal.ByteString
                   Lib.addtrimtag3
                   (GHC.Types.[] @ Data.ByteString.Internal.ByteString)) -}
7d7f2e62f930294bc3d7a9eaef33f76b
  addtrimtag3 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.addtrimtag_addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.addtrimtag_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
0c8a841c66b9b26f3e015d1d5ee245e1
  addtrimtag4 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.addtrimtag_addr#1
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.addtrimtag_addr#1
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
34732daf8a70938bf18d0d3949e42648
  addtrimtag5 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.addtrimtag_addr#2
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.addtrimtag_addr#2
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
86b5bb3acc153c64ac291efb96e09dd0
  addtrimtag6 :: [Data.ByteString.Internal.ByteString]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.ByteString.Internal.ByteString
                   Lib.addtrimtag4
                   Lib.addtrimtag7) -}
0215f213ebcc8417c24b7bdb99e74cd9
  addtrimtag7 :: [Data.ByteString.Internal.ByteString]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.ByteString.Internal.ByteString
                   Lib.addtrimtag8
                   (GHC.Types.[] @ Data.ByteString.Internal.ByteString)) -}
c29d934ea46796133f2cfe7d6761758f
  addtrimtag8 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.addtrimtag_addr#3
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.addtrimtag_addr#3
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
624dee8a79197a096c59c5360fdfe82b
  addtrimtag_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("CO:Z:primer_trimmed"#) -}
97a0a3d5e072d75ec4990a37b69db6c2
  addtrimtag_addr#1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("\t"#) -}
c34ae435037452f345ac625992bc0a09
  addtrimtag_addr#2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("*"#) -}
a5f80574bfad2e9ca18659ea89b4ee6a
  addtrimtag_addr#3 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("CO:Z:zero_alignment_length_after_primer_trim"#) -}
1c04f6113897057a53ef3c760dab7286
  adjustcrds ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> [(GHC.Integer.Type.Integer,
         Data.ByteString.Internal.ByteString)]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (cigs :: [(GHC.Integer.Type.Integer,
                              Data.ByteString.Internal.ByteString)]) ->
                 case cigs of wild {
                   []
                   -> GHC.Types.[]
                        @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                   : x xs
                   -> GHC.Types.:
                        @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                        x
                        (case GHC.List.$wscanlGo
                                @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                                @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                                @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                                @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                                Lib.shiftcrds
                                x
                                xs of ww { (#,#) ww1 ww2 ->
                         ww2 }) }) -}
5cfd6e5ea83533baec90311447a0ba8e
  alignmentsetparser ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString [Lib.AlignedRead]
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.alignmentsetparser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <[Lib.AlignedRead]>_R)) -}
50cae2766d16e3d7f2b11427d64d2d7b
  alignmentsetparser1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [Lib.AlignedRead]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [Lib.AlignedRead]
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$walignmentsetparser
                   @ r
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww8
                   w2
                   w3
                   w4 } }) -}
cd6293d905144068574a03b743952f34
  allPairedAln ::
    (Lib.AlignedRead -> GHC.Types.Bool)
    -> Lib.PairedAln -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <C(S),C(U)><L,U(1*U,1*U,1*U,U)>,
     Unfolding: (\ (b :: Lib.AlignedRead -> GHC.Types.Bool)
                   (p :: Lib.PairedAln) ->
                 case b (case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                         ds6 }) of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case b (case p of wild1 { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                              ds7 }) of wild1 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case p of wild2 { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                           let {
                             $j :: GHC.Types.Bool <join 0>
                             = letrec {
                                 go19 :: [Lib.AlignedRead] -> GHC.Types.Bool
                                   <join 1> {- Arity: 1, Strictness: <S,1*U> -}
                                 = \ (ds10 :: [Lib.AlignedRead]) ->
                                   case ds10 of wild3 {
                                     [] -> GHC.Types.False
                                     : y ys
                                     -> case b y of wild4 {
                                          GHC.Types.False -> go19 ys
                                          GHC.Types.True -> GHC.Types.True } }
                               } in
                               go19 ds9
                           } in
                           letrec {
                             go19 :: [Lib.AlignedRead] -> GHC.Types.Bool
                               <join 1> {- Arity: 1, Strictness: <S,1*U> -}
                             = \ (ds10 :: [Lib.AlignedRead]) ->
                               case ds10 of wild3 {
                                 [] -> GHC.Types.False
                                 : y ys
                                 -> case b y of wild4 {
                                      GHC.Types.False -> go19 ys GHC.Types.True -> $j } }
                           } in
                           go19 ds8 } } }) -}
26e2207e507d4bc5b47a3c19f626e7fd
  alncount :: Lib.MidFamily -> GHC.Integer.Type.Integer
  RecSel Left Lib.MidFamily
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSLLLL),1*U(A,A,A,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MidFamily) ->
                 case ds6 of wild { Lib.MidFamily ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds12 }) -}
26e2207e507d4bc5b47a3c19f626e7fd
  alnend :: Lib.MidFamily -> GHC.Integer.Type.Integer
  RecSel Left Lib.MidFamily
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLL),1*U(A,A,1*U,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MidFamily) ->
                 case ds6 of wild { Lib.MidFamily ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds9 }) -}
8e817b5a2c5ce2072d69bfa293d60a30
  alnparser ::
    Data.Attoparsec.ByteString.Internal.Parser Lib.AlignedRead
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.alnparser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <Lib.AlignedRead>_R)) -}
fab7a4adc4f98ded63e54f023c915249
  alnparser1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.AlignedRead
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.AlignedRead
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$walnparser @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
26e2207e507d4bc5b47a3c19f626e7fd
  alns :: Lib.MidFamily -> [Lib.AlignedRead]
  RecSel Left Lib.MidFamily
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLLLLL),1*U(A,A,A,A,1*U,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MidFamily) ->
                 case ds6 of wild { Lib.MidFamily ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds11 }) -}
8edcc2498c46c20d06182ee101cd5654
  alnsMapped :: Lib.RunStats -> GHC.Integer.Type.Integer
  RecSel Left Lib.RunStats
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLL),1*U(A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.RunStats) ->
                 case ds6 of wild { Lib.RunStats ds7 ds8 ds9 ds10 ds11 ds12 ->
                 ds8 }) -}
8accf6ed745b3c6f56e8b27a5fb60b86
  alnsToPairedAln :: [Lib.AlignedRead] -> Lib.PairedAln
  {- Arity: 1, Strictness: <S,1*U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: [Lib.AlignedRead]) ->
                 case Lib.$walnsToPairedAln w of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 Lib.PairedAln ww1 ww2 ww3 ww4 }) -}
f3e613b8bdc1926dabd86c4f2d308058
  alnsToPairedAln1 :: Lib.AlignedRead
  {- Strictness: x -}
8edcc2498c46c20d06182ee101cd5654
  alnsTotal :: Lib.RunStats -> GHC.Integer.Type.Integer
  RecSel Left Lib.RunStats
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLL),1*U(1*U,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.RunStats) ->
                 case ds6 of wild { Lib.RunStats ds7 ds8 ds9 ds10 ds11 ds12 ->
                 ds7 }) -}
8edcc2498c46c20d06182ee101cd5654
  alnsTrimd :: Lib.RunStats -> GHC.Integer.Type.Integer
  RecSel Left Lib.RunStats
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLL),1*U(A,A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.RunStats) ->
                 case ds6 of wild { Lib.RunStats ds7 ds8 ds9 ds10 ds11 ds12 ->
                 ds9 }) -}
8edcc2498c46c20d06182ee101cd5654
  alnsTrimdToZero :: Lib.RunStats -> GHC.Integer.Type.Integer
  RecSel Left Lib.RunStats
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLL),1*U(A,A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.RunStats) ->
                 case ds6 of wild { Lib.RunStats ds7 ds8 ds9 ds10 ds11 ds12 ->
                 ds10 }) -}
26e2207e507d4bc5b47a3c19f626e7fd
  alnstart :: Lib.MidFamily -> GHC.Integer.Type.Integer
  RecSel Left Lib.MidFamily
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLLLLL),1*U(A,1*U,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MidFamily) ->
                 case ds6 of wild { Lib.MidFamily ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds8 }) -}
c7bc06282183c87a98eec6db87b85c1e
  anyPairedAln ::
    (Lib.AlignedRead -> GHC.Types.Bool)
    -> Lib.PairedAln -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <C(S),C(U)><L,U(1*U,1*U,1*U,U)>,
     Unfolding: (\ (b :: Lib.AlignedRead -> GHC.Types.Bool)
                   (p :: Lib.PairedAln) ->
                 case b (case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                         ds6 }) of wild {
                   GHC.Types.False
                   -> case b (case p of wild1 { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                              ds7 }) of wild1 {
                        GHC.Types.False
                        -> case p of wild2 { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                           let {
                             $j :: GHC.Types.Bool <join 0>
                             = letrec {
                                 go19 :: [Lib.AlignedRead] -> GHC.Types.Bool
                                   <join 1> {- Arity: 1, Strictness: <S,1*U> -}
                                 = \ (ds10 :: [Lib.AlignedRead]) ->
                                   case ds10 of wild3 {
                                     [] -> GHC.Types.False
                                     : y ys
                                     -> case b y of wild4 {
                                          GHC.Types.False -> go19 ys
                                          GHC.Types.True -> GHC.Types.True } }
                               } in
                               go19 ds9
                           } in
                           letrec {
                             go19 :: [Lib.AlignedRead] -> GHC.Types.Bool
                               <join 1> {- Arity: 1, Strictness: <S,1*U> -}
                             = \ (ds10 :: [Lib.AlignedRead]) ->
                               case ds10 of wild3 {
                                 [] -> $j
                                 : y ys
                                 -> case b y of wild4 {
                                      GHC.Types.False -> go19 ys
                                      GHC.Types.True -> GHC.Types.True } }
                           } in
                           go19 ds8 }
                        GHC.Types.True -> GHC.Types.True }
                   GHC.Types.True -> GHC.Types.True }) -}
e2f3790d8593531e872424073de264fa
  anyPrimerIntAln :: Lib.PairedAln -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(S(LLLLLLLLLLLLLLLLLLLLLSLLLLLLLLL)LLL),1*U(1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A),1*U,U)>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.PairedAln) ->
                 case w of ww { Lib.PairedAln ww1 ww2 ww3 ww4 ->
                 case ww1 of ww5 { Lib.AlignedRead ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ww36 ->
                 Lib.$wanyPrimerIntAln ww27 ww2 ww3 ww4 } }) -}
b84572b9b2144d5c0bc629330af2a4e7
  anyPrimerIntAln_go :: [Lib.AlignedRead] -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
21071c975426d6ea93962a8c0a55430b
  basequal :: Lib.AlignedRead -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLSLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds21 }) -}
a6cf0547f2888cbdb469cf89092d97de
  bedPEparser :: Data.Attoparsec.ByteString.Internal.Parser Lib.BEDPE
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.bedPEparser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <Lib.BEDPE>_R)) -}
2893523b0498854457a035d84267598a
  bedPEparser1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.BEDPE
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.BEDPE
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wbedPEparser @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
ec17ee0811cea74621c0d656d7cc2daf
  bedchr :: Lib.BedRecord -> Lib.UChr
  RecSel Left Lib.BedRecord
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLLL),1*U(1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.BedRecord) ->
                 case ds6 of wild { Lib.BedRecord ds7 ds8 ds9 ds10 -> ds7 }) -}
ec17ee0811cea74621c0d656d7cc2daf
  bedend :: Lib.BedRecord -> GHC.Integer.Type.Integer
  RecSel Left Lib.BedRecord
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLSL),1*U(A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.BedRecord) ->
                 case ds6 of wild { Lib.BedRecord ds7 ds8 ds9 ds10 -> ds9 }) -}
71d0d01c4426c97b2ec3122d18a046ed
  bedmaplookup ::
    GHC.Integer.Type.Integer
    -> Data.IntMap.Internal.IntMap Lib.BedRecord
    -> GHC.Base.Maybe Lib.BedRecord
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (pos1 :: GHC.Integer.Type.Integer)
                   (bmap :: Data.IntMap.Internal.IntMap Lib.BedRecord) ->
                 case GHC.Integer.Type.integerToInt pos1 of wild { DEFAULT ->
                 Data.IntMap.Internal.$wlookup @ Lib.BedRecord wild bmap }) -}
ec17ee0811cea74621c0d656d7cc2daf
  bedname :: Lib.BedRecord -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.BedRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLS),1*U(A,A,A,1*U(U,U,U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.BedRecord) ->
                 case ds6 of wild { Lib.BedRecord ds7 ds8 ds9 ds10 -> ds10 }) -}
6134225630c51081af572928b6764791
  bedpeToFbed :: Lib.BEDPE -> Lib.BedRecord
  {- Arity: 1, Strictness: <L,U(1*U,1*U,1*U,A,A,A,1*U)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.BEDPE) ->
                 Lib.BedRecord
                   (case w of wild { Lib.BEDPE ds6 ds7 ds8 ds9 ds10 ds11 ds12 ->
                    ds6 })
                   (case w of wild { Lib.BEDPE ds6 ds7 ds8 ds9 ds10 ds11 ds12 ->
                    ds7 })
                   (case w of wild { Lib.BEDPE ds6 ds7 ds8 ds9 ds10 ds11 ds12 ->
                    ds8 })
                   (GHC.Base.mappend
                      @ Data.ByteString.Internal.ByteString
                      Data.ByteString.Internal.$fMonoidByteString
                      (case w of wild { Lib.BEDPE ds6 ds7 ds8 ds9 ds10 ds11 ds12 ->
                       ds12 })
                      Lib.bedpeToFbed1)) -}
6531f70d4a7b00d33124fe14869a4195
  bedpeToFbed1 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.bedpeToFbed_addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.bedpeToFbed_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
2e42fd8cd250c6c81de13447044dd3d5
  bedpeToFbed_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("_F"#) -}
a9253ac989581d73e0fcf1f71450c8a5
  bedpeToRbed :: Lib.BEDPE -> Lib.BedRecord
  {- Arity: 1, Strictness: <L,U(A,A,A,1*U,1*U,1*U,1*U)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.BEDPE) ->
                 Lib.BedRecord
                   (case w of wild { Lib.BEDPE ds6 ds7 ds8 ds9 ds10 ds11 ds12 ->
                    ds9 })
                   (case w of wild { Lib.BEDPE ds6 ds7 ds8 ds9 ds10 ds11 ds12 ->
                    ds10 })
                   (case w of wild { Lib.BEDPE ds6 ds7 ds8 ds9 ds10 ds11 ds12 ->
                    ds11 })
                   (GHC.Base.mappend
                      @ Data.ByteString.Internal.ByteString
                      Data.ByteString.Internal.$fMonoidByteString
                      (case w of wild { Lib.BEDPE ds6 ds7 ds8 ds9 ds10 ds11 ds12 ->
                       ds12 })
                      Lib.bedpeToRbed1)) -}
94cdee67d869847b1b4eb8616ee18f97
  bedpeToRbed1 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.bedpeToRbed_addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.bedpeToRbed_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
abb74902644daf4c9ef41cd222931b6d
  bedpeToRbed_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("_R"#) -}
f06645d095bf16235fbe38a1fa974f4c
  bedpeformat :: Lib.Opts -> GHC.Types.Bool
  RecSel Left Lib.Opts
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLLL),1*U(1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.Opts) ->
                 case ds6 of wild { Lib.Opts ds7 ds8 ds9 ds10 -> ds7 }) -}
9bef29ed1835da52d687e9f588f6f1bf
  bedpename :: Lib.BEDPE -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.BEDPE
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLS),1*U(A,A,A,A,A,A,1*U(U,U,U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.BEDPE) ->
                 case ds6 of wild { Lib.BEDPE ds7 ds8 ds9 ds10 ds11 ds12 ds13 ->
                 ds13 }) -}
86aa92ed3028cd41c1a2416eb0a64495
  bedrecparser ::
    Data.Attoparsec.ByteString.Internal.Parser Lib.BedRecord
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.bedrecparser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <Lib.BedRecord>_R)) -}
b393fd13308bf2ef0fbb46479318751a
  bedrecparser1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.BedRecord
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.BedRecord
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wbedrecparser @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
ec17ee0811cea74621c0d656d7cc2daf
  bedstart :: Lib.BedRecord -> GHC.Integer.Type.Integer
  RecSel Left Lib.BedRecord
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSLL),1*U(A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.BedRecord) ->
                 case ds6 of wild { Lib.BedRecord ds7 ds8 ds9 ds10 -> ds8 }) -}
1590f59cfefe4e6897e5dee015a99ef9
  boolZeroLengthCigar ::
    Data.ByteString.Internal.ByteString -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S(SLSS),1*U(U,U,U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.ByteString.Internal.ByteString) ->
                 case w of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wboolZeroLengthCigar ww1 ww2 ww3 ww4 }) -}
76aebf623b2dba66b379cb8c41629247
  boolZeroLengthCigar_go :: [GHC.Types.Char] -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S,1*U> -}
29f11e4f95287817319f00b4053f9d05
  calcMappedCount ::
    GHC.Real.Integral i =>
    Data.Conduit.Internal.Conduit.ConduitM
      Lib.AlignedRead
      c
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      i
  {- Arity: 1, HasNoCafRefs,
     Strictness: <L,1*U(1*U(1*U(C(C1(U)),A,A,A,A,A,C(U)),A,A),A,A,A,A,A,A,A,A)> -}
b2d895a0bc322b56aa6cb5772046afd2
  calcMappedCount1 ::
    (GHC.Integer.Type.Integer
     -> Data.Conduit.Internal.Pipe.Pipe
          Lib.AlignedRead
          Lib.AlignedRead
          c
          ()
          (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
          b1)
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         c
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         b1
  {- Arity: 1, Strictness: <L,C(U)> -}
d7aa278258399344a9e172aab72ca8c7
  calcNotMappedPct ::
    Data.Conduit.Internal.Conduit.Sink
      Lib.AlignedRead
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      GHC.Types.Double
  {- Arity: 1, Strictness: <L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Lib.calcNotMappedPct1
                  `cast`
                (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                          <Lib.AlignedRead>_N
                          <Data.Void.Void>_N
                          <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                          <GHC.Types.Double>_R)) -}
ec6319f7ec38a9454a2383a135730f8c
  calcNotMappedPct1 ::
    (GHC.Types.Double
     -> Data.Conduit.Internal.Pipe.Pipe
          Lib.AlignedRead
          Lib.AlignedRead
          Data.Void.Void
          ()
          (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
          b1)
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         b1
  {- Arity: 1, Strictness: <L,C(U)>,
     Unfolding: (\ @ b1
                   (eta :: GHC.Types.Double
                           -> Data.Conduit.Internal.Pipe.Pipe
                                Lib.AlignedRead
                                Lib.AlignedRead
                                Data.Void.Void
                                ()
                                (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                                b1) ->
                 Data.Conduit.Internal.Conduit.$fApplicativeZipSink2
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ Lib.AlignedRead
                   @ (GHC.Integer.Type.Integer -> GHC.Types.Double)
                   @ GHC.Integer.Type.Integer
                   Lib.$s$fMonadResourceT
                   Lib.calcNotMappedPct3
                     `cast`
                   (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                             <Lib.AlignedRead>_N
                             <Data.Void.Void>_N
                             <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                             <GHC.Integer.Type.Integer -> GHC.Types.Double>_R))
                   Lib.calcNotMappedPct2
                     `cast`
                   (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                             <Lib.AlignedRead>_N
                             <Data.Void.Void>_N
                             <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                             <GHC.Integer.Type.Integer>_R))
                   @ b1
                   (\ (a1 :: (GHC.Integer.Type.Integer -> GHC.Types.Double,
                              GHC.Integer.Type.Integer)) ->
                    eta (case a1 of wild { (,) x ds6 -> x ds6 }))) -}
98874efb2818cc48fb244d176d39cc61
  calcNotMappedPct2 ::
    (GHC.Integer.Type.Integer
     -> Data.Conduit.Internal.Pipe.Pipe
          Lib.AlignedRead
          Lib.AlignedRead
          Data.Void.Void
          ()
          (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
          b)
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         b
  {- Arity: 1, Strictness: <L,C(U)>m2,
     Unfolding: (\ @ b
                   (w :: GHC.Integer.Type.Integer
                         -> Data.Conduit.Internal.Pipe.Pipe
                              Lib.AlignedRead
                              Lib.AlignedRead
                              Data.Void.Void
                              ()
                              (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                              b) ->
                 case Lib.$wloop Lib.defaultBed2 @ b w of ww { (#,#) ww1 ww2 ->
                 Data.Conduit.Internal.Pipe.NeedInput
                   @ Lib.AlignedRead
                   @ Lib.AlignedRead
                   @ Data.Void.Void
                   @ ()
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ b
                   ww1
                   ww2 }) -}
cf92159219a30191d886d4caf16595a0
  calcNotMappedPct3 ::
    ((GHC.Integer.Type.Integer -> GHC.Types.Double)
     -> Data.Conduit.Internal.Pipe.Pipe
          Lib.AlignedRead
          Lib.AlignedRead
          Data.Void.Void
          ()
          (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
          b1)
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         b1
  {- Arity: 1, Strictness: <L,C(U)> -}
0d1a4686d947d082470c08b9f8c1b89e
  calcRunStats ::
    Data.Conduit.Internal.Conduit.ZipSink
      Lib.AlignedRead
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      Lib.RunStats
  {- Arity: 1, Strictness: <L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Lib.calcRunStats1
                  `cast`
                (Trans
                     (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                               <Lib.AlignedRead>_N
                               <Data.Void.Void>_N
                               <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                               <Lib.RunStats>_R))
                     (Sym (Data.Conduit.Internal.Conduit.N:ZipSink[0]
                               <Lib.AlignedRead>_N) <Control.Monad.Trans.Resource.Internal.ResourceT
                                                       GHC.Types.IO>_N <Lib.RunStats>_N)) -}
32c5632091fd34672f9ffe78396639be
  calcRunStats1 ::
    (Lib.RunStats
     -> Data.Conduit.Internal.Pipe.Pipe
          Lib.AlignedRead
          Lib.AlignedRead
          Data.Void.Void
          ()
          (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
          b1)
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         b1
  {- Arity: 1, Strictness: <L,C(U)>,
     Unfolding: (\ @ b1
                   (eta :: Lib.RunStats
                           -> Data.Conduit.Internal.Pipe.Pipe
                                Lib.AlignedRead
                                Lib.AlignedRead
                                Data.Void.Void
                                ()
                                (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                                b1) ->
                 Data.Conduit.Internal.Conduit.$fApplicativeZipSink2
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ Lib.AlignedRead
                   @ (GHC.Integer.Type.Integer -> Lib.RunStats)
                   @ GHC.Integer.Type.Integer
                   Lib.$s$fMonadResourceT
                   Lib.calcRunStats3
                     `cast`
                   (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                             <Lib.AlignedRead>_N
                             <Data.Void.Void>_N
                             <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                             <GHC.Integer.Type.Integer -> Lib.RunStats>_R))
                   (Lib.calcRunStats2 @ Data.Void.Void)
                     `cast`
                   (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                             <Lib.AlignedRead>_N
                             <Data.Void.Void>_N
                             <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                             <GHC.Integer.Type.Integer>_R))
                   @ b1
                   (\ (a1 :: (GHC.Integer.Type.Integer -> Lib.RunStats,
                              GHC.Integer.Type.Integer)) ->
                    eta (case a1 of wild { (,) x ds6 -> x ds6 }))) -}
1d89ed7ef20852411e11d234dde2c147
  calcRunStats2 ::
    (GHC.Integer.Type.Integer
     -> Data.Conduit.Internal.Pipe.Pipe
          Lib.AlignedRead
          Lib.AlignedRead
          c
          ()
          (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
          b1)
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         c
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         b1
  {- Arity: 1, Strictness: <L,C(U)> -}
7b69f790d2167eba38c99dfc078d493a
  calcRunStats3 ::
    ((GHC.Integer.Type.Integer -> Lib.RunStats)
     -> Data.Conduit.Internal.Pipe.Pipe
          Lib.AlignedRead
          Lib.AlignedRead
          Data.Void.Void
          ()
          (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
          b1)
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         b1
  {- Arity: 1, Strictness: <L,C(U)>,
     Unfolding: (\ @ b1
                   (eta :: (GHC.Integer.Type.Integer -> Lib.RunStats)
                           -> Data.Conduit.Internal.Pipe.Pipe
                                Lib.AlignedRead
                                Lib.AlignedRead
                                Data.Void.Void
                                ()
                                (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                                b1) ->
                 Data.Conduit.Internal.Conduit.$fApplicativeZipSink2
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ Lib.AlignedRead
                   @ (GHC.Integer.Type.Integer
                      -> GHC.Integer.Type.Integer -> Lib.RunStats)
                   @ GHC.Integer.Type.Integer
                   Lib.$s$fMonadResourceT
                   Lib.calcRunStats5
                     `cast`
                   (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                             <Lib.AlignedRead>_N
                             <Data.Void.Void>_N
                             <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                             <GHC.Integer.Type.Integer
                              -> GHC.Integer.Type.Integer -> Lib.RunStats>_R))
                   (Lib.calcRunStats4 @ Data.Void.Void)
                     `cast`
                   (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                             <Lib.AlignedRead>_N
                             <Data.Void.Void>_N
                             <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                             <GHC.Integer.Type.Integer>_R))
                   @ b1
                   (\ (a1 :: (GHC.Integer.Type.Integer
                              -> GHC.Integer.Type.Integer -> Lib.RunStats,
                              GHC.Integer.Type.Integer)) ->
                    eta (case a1 of wild { (,) x ds6 -> x ds6 }))) -}
d91142fc7cf412b3bbb448bc49e3dc5a
  calcRunStats4 ::
    (GHC.Integer.Type.Integer
     -> Data.Conduit.Internal.Pipe.Pipe
          Lib.AlignedRead
          Lib.AlignedRead
          c
          ()
          (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
          b1)
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         c
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         b1
  {- Arity: 1, Strictness: <L,C(U)> -}
7cdadcc8c2ff97e69e685a89d371e45c
  calcRunStats5 ::
    ((GHC.Integer.Type.Integer
      -> GHC.Integer.Type.Integer -> Lib.RunStats)
     -> Data.Conduit.Internal.Pipe.Pipe
          Lib.AlignedRead
          Lib.AlignedRead
          Data.Void.Void
          ()
          (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
          b1)
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         b1
  {- Arity: 1, Strictness: <L,C(U)>,
     Unfolding: (\ @ b1
                   (eta :: (GHC.Integer.Type.Integer
                            -> GHC.Integer.Type.Integer -> Lib.RunStats)
                           -> Data.Conduit.Internal.Pipe.Pipe
                                Lib.AlignedRead
                                Lib.AlignedRead
                                Data.Void.Void
                                ()
                                (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                                b1) ->
                 Data.Conduit.Internal.Conduit.$fApplicativeZipSink2
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ Lib.AlignedRead
                   @ (GHC.Integer.Type.Integer
                      -> GHC.Integer.Type.Integer
                      -> GHC.Integer.Type.Integer
                      -> Lib.RunStats)
                   @ GHC.Integer.Type.Integer
                   Lib.$s$fMonadResourceT
                   Lib.calcRunStats6
                     `cast`
                   (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                             <Lib.AlignedRead>_N
                             <Data.Void.Void>_N
                             <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                             <GHC.Integer.Type.Integer
                              -> GHC.Integer.Type.Integer
                              -> GHC.Integer.Type.Integer
                              -> Lib.RunStats>_R))
                   (Lib.calcMappedCount1 @ Data.Void.Void)
                     `cast`
                   (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                             <Lib.AlignedRead>_N
                             <Data.Void.Void>_N
                             <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                             <GHC.Integer.Type.Integer>_R))
                   @ b1
                   (\ (a1 :: (GHC.Integer.Type.Integer
                              -> GHC.Integer.Type.Integer
                              -> GHC.Integer.Type.Integer
                              -> Lib.RunStats,
                              GHC.Integer.Type.Integer)) ->
                    eta (case a1 of wild { (,) x ds6 -> x ds6 }))) -}
399b764aedd1c04adbdb2d2d01df9044
  calcRunStats6 ::
    ((GHC.Integer.Type.Integer
      -> GHC.Integer.Type.Integer
      -> GHC.Integer.Type.Integer
      -> Lib.RunStats)
     -> Data.Conduit.Internal.Pipe.Pipe
          Lib.AlignedRead
          Lib.AlignedRead
          Data.Void.Void
          ()
          (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
          b1)
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         b1
  {- Arity: 1, Strictness: <L,C(U)>m2, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ @ b1
                   (w :: (GHC.Integer.Type.Integer
                          -> GHC.Integer.Type.Integer
                          -> GHC.Integer.Type.Integer
                          -> Lib.RunStats)
                         -> Data.Conduit.Internal.Pipe.Pipe
                              Lib.AlignedRead
                              Lib.AlignedRead
                              Data.Void.Void
                              ()
                              (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                              b1) ->
                 case Lib.$wds @ b1 w of ww { (#,#) ww1 ww2 ->
                 Data.Conduit.Internal.Pipe.NeedInput
                   @ Lib.AlignedRead
                   @ Lib.AlignedRead
                   @ Data.Void.Void
                   @ ()
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ b1
                   ww1
                   ww2 }) -}
bac34f13005f7084d625d887fd3abc9b
  calcTrimdToZero ::
    GHC.Real.Integral i =>
    Data.Conduit.Internal.Conduit.ConduitM
      Lib.AlignedRead
      c
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      i
  {- Arity: 1, HasNoCafRefs,
     Strictness: <L,1*U(1*U(1*U(C(C1(U)),A,A,A,A,A,C(U)),A,A),A,A,A,A,A,A,A,A)> -}
3101289ece0001b902db4debe525fea4
  calcTrimmedPct ::
    Data.Conduit.Internal.Conduit.Sink
      Lib.AlignedRead
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      GHC.Types.Double
  {- Arity: 1, Strictness: <L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Lib.calcTrimmedPct1
                  `cast`
                (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                          <Lib.AlignedRead>_N
                          <Data.Void.Void>_N
                          <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                          <GHC.Types.Double>_R)) -}
6690eccf9e91f0d268e66e58ef777ddc
  calcTrimmedPct1 ::
    (GHC.Types.Double
     -> Data.Conduit.Internal.Pipe.Pipe
          Lib.AlignedRead
          Lib.AlignedRead
          Data.Void.Void
          ()
          (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
          b1)
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         b1
  {- Arity: 1, Strictness: <L,C(U)>,
     Unfolding: (\ @ b1
                   (eta :: GHC.Types.Double
                           -> Data.Conduit.Internal.Pipe.Pipe
                                Lib.AlignedRead
                                Lib.AlignedRead
                                Data.Void.Void
                                ()
                                (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                                b1) ->
                 Data.Conduit.Internal.Conduit.$fApplicativeZipSink2
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ Lib.AlignedRead
                   @ (GHC.Integer.Type.Integer -> GHC.Types.Double)
                   @ GHC.Integer.Type.Integer
                   Lib.$s$fMonadResourceT
                   Lib.calcTrimmedPct3
                     `cast`
                   (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                             <Lib.AlignedRead>_N
                             <Data.Void.Void>_N
                             <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                             <GHC.Integer.Type.Integer -> GHC.Types.Double>_R))
                   Lib.calcTrimmedPct2
                     `cast`
                   (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                             <Lib.AlignedRead>_N
                             <Data.Void.Void>_N
                             <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                             <GHC.Integer.Type.Integer>_R))
                   @ b1
                   (\ (a1 :: (GHC.Integer.Type.Integer -> GHC.Types.Double,
                              GHC.Integer.Type.Integer)) ->
                    eta (case a1 of wild { (,) x ds6 -> x ds6 }))) -}
f025b0331ad0c07a31de09f94bd6e47b
  calcTrimmedPct2 ::
    (GHC.Integer.Type.Integer
     -> Data.Conduit.Internal.Pipe.Pipe
          Lib.AlignedRead
          Lib.AlignedRead
          Data.Void.Void
          ()
          (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
          b)
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         b
  {- Arity: 1, Strictness: <L,C(U)>m2,
     Unfolding: (\ @ b
                   (w :: GHC.Integer.Type.Integer
                         -> Data.Conduit.Internal.Pipe.Pipe
                              Lib.AlignedRead
                              Lib.AlignedRead
                              Data.Void.Void
                              ()
                              (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                              b) ->
                 case Lib.$wloop2 Lib.defaultBed2 @ b w of ww { (#,#) ww1 ww2 ->
                 Data.Conduit.Internal.Pipe.NeedInput
                   @ Lib.AlignedRead
                   @ Lib.AlignedRead
                   @ Data.Void.Void
                   @ ()
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ b
                   ww1
                   ww2 }) -}
4250cb79bf03324deb263fe3387a6422
  calcTrimmedPct3 ::
    ((GHC.Integer.Type.Integer -> GHC.Types.Double)
     -> Data.Conduit.Internal.Pipe.Pipe
          Lib.AlignedRead
          Lib.AlignedRead
          Data.Void.Void
          ()
          (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
          b1)
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         b1
  {- Arity: 1, Strictness: <L,C(U)> -}
bb369afa2043203d3411d0a1dcb88ce4
  calculateTrimStats ::
    Data.Conduit.Internal.Conduit.ConduitM
      Lib.AlignedRead
      c
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      GHC.Integer.Type.Integer
  {- Arity: 1, Strictness: <L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Lib.calcRunStats4
                  `cast`
                (forall (c2 :: <*>_N).
                 Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                          <Lib.AlignedRead>_N
                          <c2>_N
                          <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                          <GHC.Integer.Type.Integer>_R)) -}
6bcae276cae6e790f9f233d02f09083f
  checkChromNameMatchStatus ::
    Lib.Header -> Lib.BED -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,U><S(SSS),1*U(U,U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.checkChromNameMatchStatus1
                  `cast`
                (<Lib.Header>_R
                 ->_R <Lib.BED>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
ebd3c26c0d2d78d2d203b4854d2bcc89
  checkChromNameMatchStatus1 ::
    Lib.Header
    -> Lib.BED
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U><S(SSS),1*U(U,U,U)><S,U>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Lib.Header)
                   (w1 :: Lib.BED)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w1 of ww { Data.Vector.Vector ww1 ww2 ww3 ->
                 Lib.$wcheckChromNameMatchStatus w ww1 ww2 ww3 w2 }) -}
0b56f8c855cb5521ba0953141a86d1a1
  checkChromNameMatchStatus2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Lib.checkChromNameMatchStatus3) -}
7f4d6757cab4fcf2e400be16bd3ceae1
  checkChromNameMatchStatus3 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("SAM and BED chromosome name formats match."#) -}
4a4132c786b7a5fe79afe3ad77b6cb35
  checkChromNameMatchStatus4 :: GHC.Types.IO ()
  {- Strictness: x -}
007b7b7317f0e3bd016c0d471a5556f8
  checkChromNameMatchStatus5 ::
    Data.Either.Either GHC.Base.String Lib.UChr
  {- Strictness: x -}
a510ba4d33f678e7f6b759aca5ce72e3
  checkCigarSeqlen :: Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 1,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLSLLLL),1*U(U,U,U,U,U,U,U(U,U,U,U),U(U,U,U,U),U,U,U,U,U,U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Unfolding: (\ (a :: Lib.AlignedRead) ->
                 case a of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 case ds32 of wild1 {
                   GHC.Types.False
                   -> case ds13 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                      case Lib.$wsafemapcig ww1 ww2 ww3 ww4 of wild2 {
                        GHC.Base.Nothing -> Lib.defaultAlignment
                        GHC.Base.Just a1
                        -> case ds12 of ww5 { Data.ByteString.Internal.PS ww6 ww7 ww8 ww9 ->
                           case Lib.$wcigseqlenHdrPassTest ww6 ww7 ww8 ww9 ww ds19 of wild3 {
                             GHC.Types.False -> Lib.defaultAlignment
                             GHC.Types.True -> wild } } } }
                   GHC.Types.True -> wild } }) -}
fa50ced6b0ae796663b7b474d8f59c46
  checkCigarSeqlen1 ::
    Data.Either.Either
      GHC.Base.String
      [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
  {- Strictness: x -}
42df11c7571ddbceb864f61a67616082
  checkCigarSeqlen2 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wstarcigarP @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
d9b5e68fe7721055c1d6eedc3f57f9d7
  checkInsertSize ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer -> Lib.PairedAln -> GHC.Types.Bool
  {- Arity: 3, Strictness: <S,U><L,U><L,U(1*U,1*U,1*U,1*U)>,
     Unfolding: (\ (minsz :: GHC.Integer.Type.Integer)
                   (maxsz :: GHC.Integer.Type.Integer)
                   (p :: Lib.PairedAln) ->
                 case GHC.Base.map
                        @ Lib.AlignedRead
                        @ GHC.Integer.Type.Integer
                        Lib.tlen
                        (GHC.Types.:
                           @ Lib.AlignedRead
                           (case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 -> ds6 })
                           (GHC.Types.:
                              @ Lib.AlignedRead
                              (case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 -> ds7 })
                              (case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                               GHC.Base.++ @ Lib.AlignedRead ds8 ds9 }))) of wild {
                   [] -> case GHC.List.minimum1 ret_ty GHC.Types.Bool of {}
                   : ipv ipv1
                   -> case GHC.Integer.Type.geInteger#
                             (GHC.List.minimum_go ipv1 ipv)
                             minsz of wild1 { DEFAULT ->
                      case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild1 of wild2 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case GHC.Integer.Type.leInteger#
                                  (GHC.List.maximum_go ipv1 ipv)
                                  maxsz of wild3 { DEFAULT ->
                           GHC.Prim.tagToEnum# @ GHC.Types.Bool wild3 } } } }) -}
ebd8c13c97b18353f4135a761c99cd04
  checkcigseqlen :: Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 1,
     Strictness: <S(LLLLLLLS(SLSS)LLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,1*U(U,U,U,U),1*U(U,U,U,U),A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.AlignedRead) ->
                 case w of ww { Lib.AlignedRead ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ->
                 case ww8 of ww32 { Data.ByteString.Internal.PS ww33 ww34 ww35 ww36 ->
                 Lib.$wcheckcigseqlen ww7 ww33 ww34 ww35 ww36 ww14 } }) -}
e33d00395ce984c10a1ea794dc20d891
  checkcigseqlen2 :: Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 1,
     Strictness: <S(LLLLLLS(SLSS)LLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,1*U(U,U,U,U),1*U(U,U,U,U),A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.AlignedRead) ->
                 case w of ww { Lib.AlignedRead ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ->
                 case ww7 of ww32 { Data.ByteString.Internal.PS ww33 ww34 ww35 ww36 ->
                 Lib.$wcheckcigseqlen2 ww33 ww34 ww35 ww36 ww8 ww14 } }) -}
5296cb013026110d354c5fe632cadf3c
  checknonzeroCigMatch :: Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLSLLLL),1*U(A,A,A,A,A,A,A,1*U(U,U,U,1*U),A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,1*U,A,A,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.AlignedRead) ->
                 case w of ww { Lib.AlignedRead ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ->
                 Lib.$wchecknonzeroCigMatch ww8 ww19 ww27 }) -}
177cd6c3c68c0565c413368bbc65e81e
  checkpos :: GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer
  {- Arity: 1, HasNoCafRefs, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (i :: GHC.Integer.Type.Integer) ->
                 case GHC.Integer.Type.ltInteger#
                        i
                        Lib.defaultBed2 of wild { DEFAULT ->
                 case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild of wild1 {
                   GHC.Types.False -> i GHC.Types.True -> Lib.defaultBed2 } }) -}
9bef29ed1835da52d687e9f588f6f1bf
  chr1 :: Lib.BEDPE -> Lib.UChr
  RecSel Left Lib.BEDPE
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLL),1*U(1*U,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.BEDPE) ->
                 case ds6 of wild { Lib.BEDPE ds7 ds8 ds9 ds10 ds11 ds12 ds13 ->
                 ds7 }) -}
9bef29ed1835da52d687e9f588f6f1bf
  chr2 :: Lib.BEDPE -> Lib.UChr
  RecSel Left Lib.BEDPE
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLL),1*U(A,A,A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.BEDPE) ->
                 case ds6 of wild { Lib.BEDPE ds7 ds8 ds9 ds10 ds11 ds12 ds13 ->
                 ds10 }) -}
26e2207e507d4bc5b47a3c19f626e7fd
  chrom :: Lib.MidFamily -> Lib.UChr
  RecSel Left Lib.MidFamily
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLL),1*U(1*U,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MidFamily) ->
                 case ds6 of wild { Lib.MidFamily ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds7 }) -}
21071c975426d6ea93962a8c0a55430b
  cigar :: Lib.AlignedRead -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLSLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds13 }) -}
ebd064b0fe24565eed8afb87c505f2cb
  cigarP ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString
      [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.cigarP1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <[(GHC.Integer.Type.Integer,
                             Data.ByteString.Internal.ByteString)]>_R)) -}
6ad2e9f67ca86206def09e3c98d86139
  cigarP1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wcigarP @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
21071c975426d6ea93962a8c0a55430b
  cigmap :: Lib.AlignedRead -> Lib.CigarMap
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLSLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds15 }) -}
4ee825f907a56576e1ff753985955146
  cigseqlenHdrPassTest :: Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 1,
     Strictness: <S(LLLLLLS(SLSS)LLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,1*U(U,U,U,U),1*U(U,U,U,U),A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.AlignedRead) ->
                 case w of ww { Lib.AlignedRead ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ->
                 case ww7 of ww32 { Data.ByteString.Internal.PS ww33 ww34 ww35 ww36 ->
                 Lib.$wcigseqlenHdrPassTest ww33 ww34 ww35 ww36 ww8 ww14 } }) -}
0a02ddc142aa351cf23d0d3684cb4681
  clearNamesAndPositions :: Lib.PairedAln -> Lib.PairedAln
  {- Arity: 1,
     Strictness: <S,1*U(1*U(U,U,A,A,U,U,U,U,U,U,A,A,A,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),1*U(U,U,A,A,U,U,U,U,U,U,A,A,A,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (p :: Lib.PairedAln) ->
                 case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                 Lib.PairedAln
                   (case ds6 of wild1 { Lib.AlignedRead ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ->
                    Lib.AlignedRead
                      ds10
                      ds11
                      Lib.NONE
                      Lib.defaultBed2
                      ds14
                      ds15
                      ds16
                      ds17
                      ds18
                      ds19
                      Lib.addtrimtag5
                      Lib.defaultBed2
                      Lib.defaultBed2
                      ds23
                      ds24
                      ds25
                      ds26
                      ds27
                      ds28
                      ds29
                      ds30
                      ds31
                      ds32
                      ds33
                      ds34
                      ds35
                      ds36
                      ds37
                      ds38
                      ds39
                      ds40 })
                   (case ds7 of wild1 { Lib.AlignedRead ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ->
                    Lib.AlignedRead
                      ds10
                      ds11
                      Lib.NONE
                      Lib.defaultBed2
                      ds14
                      ds15
                      ds16
                      ds17
                      ds18
                      ds19
                      Lib.addtrimtag5
                      Lib.defaultBed2
                      Lib.defaultBed2
                      ds23
                      ds24
                      ds25
                      ds26
                      ds27
                      ds28
                      ds29
                      ds30
                      ds31
                      ds32
                      ds33
                      ds34
                      ds35
                      ds36
                      ds37
                      ds38
                      ds39
                      ds40 })
                   ds8
                   ds9 }) -}
56c72253cb09dfa70b58f9249b97b501
  clearNonRealCigar :: Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 1,
     Strictness: <S(LLLLLLLS(SLSS)LLLLLLLLLLLLLLLLLLLLLLL),1*U(U,U,U,U,U,U,U,U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Unfolding: (\ (a :: Lib.AlignedRead) ->
                 case a of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 case ds13 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 let {
                   $j :: Lib.AlignedRead <join 0>
                   = Lib.AlignedRead
                       ds6
                       ds7
                       ds8
                       ds9
                       ds10
                       Lib.defaultBed2
                       ds12
                       Lib.addtrimtag5
                       ds14
                       ds15
                       ds16
                       ds17
                       Lib.defaultBed2
                       ds19
                       ds20
                       ds21
                       ds22
                       ds23
                       GHC.Types.False
                       ds25
                       ds26
                       ds27
                       ds28
                       Lib.defaultBed2
                       Lib.defaultBed2
                       ds31
                       ds32
                       ds33
                       ds34
                       ds35
                       GHC.Types.True
                 } in
                 letrec {
                   go19 :: [GHC.Types.Char] -> Lib.AlignedRead
                     <join 1> {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds37 :: [GHC.Types.Char]) ->
                     case ds37 of wild1 {
                       [] -> $j
                       : y ys
                       -> case GHC.List.elem
                                 @ GHC.Types.Char
                                 GHC.Classes.$fEqChar
                                 y
                                 Lib.clearNonRealCigar1 of wild2 {
                            GHC.Types.False -> go19 ys GHC.Types.True -> wild } }
                 } in
                 go19
                   (Data.ByteString.Internal.$wunpackAppendCharsLazy
                      ww1
                      ww2
                      ww3
                      ww4
                      (GHC.Types.[] @ GHC.Types.Char)) } }) -}
7dfe85cd047bfdd65af32452c0171d1c
  clearNonRealCigar1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Lib.clearNonRealCigar2) -}
81ecb9beeba5b7b6070148d8bcd07341
  clearNonRealCigar2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("MIDN"#) -}
ea9c547d2c764774456425734edce3f6
  clearR1primNextFields :: Lib.PairedAln -> Lib.PairedAln
  {- Arity: 1,
     Strictness: <S(S(LLLLLLLLLLLLLLLLLLSLLLLLLLLLLLL)LLL),1*U(1*U(U,U,U,U,U,U,U,U,U,U,A,A,A,U,U,U,U,U,1*U,U,U,U,U,U,U,U,U,U,U,U,U),U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)>m,
     Unfolding: (\ (p :: Lib.PairedAln) ->
                 case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                 case ds6 of wild1 { Lib.AlignedRead ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ->
                 case ds28 of wild2 {
                   GHC.Types.False
                   -> Lib.PairedAln
                        (Lib.AlignedRead
                           ds10
                           ds11
                           Lib.NONE
                           Lib.defaultBed2
                           ds14
                           ds15
                           ds16
                           ds17
                           ds18
                           ds19
                           Lib.addtrimtag5
                           Lib.defaultBed2
                           Lib.defaultBed2
                           ds23
                           ds24
                           ds25
                           ds26
                           ds27
                           GHC.Types.False
                           ds29
                           ds30
                           ds31
                           ds32
                           ds33
                           ds34
                           ds35
                           ds36
                           ds37
                           ds38
                           ds39
                           ds40)
                        (case ds7 of wild3 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                         Lib.AlignedRead
                           ds41
                           ds42
                           Lib.NONE
                           Lib.defaultBed2
                           ds45
                           ds46
                           ds47
                           ds48
                           ds49
                           ds50
                           Lib.addtrimtag5
                           Lib.defaultBed2
                           Lib.defaultBed2
                           ds54
                           ds55
                           ds56
                           ds57
                           ds58
                           ds59
                           ds60
                           ds61
                           ds62
                           ds63
                           ds64
                           ds65
                           ds66
                           ds67
                           ds68
                           ds69
                           ds70
                           ds71 })
                        ds8
                        ds9
                   GHC.Types.True
                   -> Lib.PairedAln
                        (Lib.AlignedRead
                           ds10
                           ds11
                           ds12
                           ds13
                           ds14
                           ds15
                           ds16
                           ds17
                           ds18
                           ds19
                           Lib.addtrimtag5
                           Lib.defaultBed2
                           Lib.defaultBed2
                           ds23
                           ds24
                           ds25
                           ds26
                           ds27
                           GHC.Types.True
                           ds29
                           ds30
                           ds31
                           ds32
                           ds33
                           ds34
                           ds35
                           ds36
                           ds37
                           ds38
                           ds39
                           ds40)
                        ds7
                        ds8
                        ds9 } } }) -}
1d9c28c4d91aa51709edf580e7c8a5e0
  clearR2primNextFields :: Lib.PairedAln -> Lib.PairedAln
  {- Arity: 1,
     Strictness: <S(LS(LLLLLLLLLLLLLLLLLLSLLLLLLLLLLLL)LL),1*U(U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),1*U(U,U,U,U,U,U,U,U,U,U,A,A,A,U,U,U,U,U,1*U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)>m,
     Unfolding: (\ (p :: Lib.PairedAln) ->
                 case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                 case ds7 of wild1 { Lib.AlignedRead ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ->
                 case ds28 of wild2 {
                   GHC.Types.False
                   -> Lib.PairedAln
                        (case ds6 of wild3 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                         Lib.AlignedRead
                           ds41
                           ds42
                           Lib.NONE
                           Lib.defaultBed2
                           ds45
                           ds46
                           ds47
                           ds48
                           ds49
                           ds50
                           Lib.addtrimtag5
                           Lib.defaultBed2
                           Lib.defaultBed2
                           ds54
                           ds55
                           ds56
                           ds57
                           ds58
                           ds59
                           ds60
                           ds61
                           ds62
                           ds63
                           ds64
                           ds65
                           ds66
                           ds67
                           ds68
                           ds69
                           ds70
                           ds71 })
                        (Lib.AlignedRead
                           ds10
                           ds11
                           Lib.NONE
                           Lib.defaultBed2
                           ds14
                           ds15
                           ds16
                           ds17
                           ds18
                           ds19
                           Lib.addtrimtag5
                           Lib.defaultBed2
                           Lib.defaultBed2
                           ds23
                           ds24
                           ds25
                           ds26
                           ds27
                           GHC.Types.False
                           ds29
                           ds30
                           ds31
                           ds32
                           ds33
                           ds34
                           ds35
                           ds36
                           ds37
                           ds38
                           ds39
                           ds40)
                        ds8
                        ds9
                   GHC.Types.True
                   -> Lib.PairedAln
                        ds6
                        (Lib.AlignedRead
                           ds10
                           ds11
                           ds12
                           ds13
                           ds14
                           ds15
                           ds16
                           ds17
                           ds18
                           ds19
                           Lib.addtrimtag5
                           Lib.defaultBed2
                           Lib.defaultBed2
                           ds23
                           ds24
                           ds25
                           ds26
                           ds27
                           GHC.Types.True
                           ds29
                           ds30
                           ds31
                           ds32
                           ds33
                           ds34
                           ds35
                           ds36
                           ds37
                           ds38
                           ds39
                           ds40)
                        ds8
                        ds9 } } }) -}
5d495fa0ac76764d79b604a7ce9dd309
  collectPrimIntAlns :: [Lib.PairedAln] -> [Lib.PairedAln]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ps :: [Lib.PairedAln]) ->
                 GHC.Base.build
                   @ Lib.PairedAln
                   (\ @ b
                      (c2 :: Lib.PairedAln -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ Lib.PairedAln
                      @ b
                      (GHC.List.filterFB @ Lib.PairedAln @ b c2 Lib.anyPrimerIntAln)
                      n
                      ps)) -}
6b633afe35568419891e2f3950b3d29d
  contractcigar ::
    Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
  {- Arity: 1, Strictness: <S(SLSS),1*U(U,U,U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.ByteString.Internal.ByteString) ->
                 case w of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wcontractcigar ww1 ww2 ww3 ww4 }) -}
ce94c646e84a79cd077baaed379fd494
  contractcigar1 ::
    Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
  {- Arity: 1, Strictness: <L,U(U,U,U,U)>,
     Unfolding: (\ (x :: Data.ByteString.Internal.ByteString) ->
                 GHC.Base.mappend
                   @ Data.ByteString.Internal.ByteString
                   Data.ByteString.Internal.$fMonoidByteString
                   (case x of wild { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                    case GHC.Show.$wshowSignedInt
                           0#
                           dt3
                           (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                    let {
                      cs :: [GHC.Types.Char] = GHC.Types.: @ GHC.Types.Char ww5 ww6
                    } in
                    case GHC.List.$wlenAcc @ GHC.Types.Char cs 0# of ww { DEFAULT ->
                    Data.ByteString.Internal.$wunsafePackLenChars ww cs } } })
                   (case x of wild { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                    case GHC.Prim.tagToEnum#
                           @ GHC.Types.Bool
                           (GHC.Prim.<=# dt3 0#) of wild1 {
                      GHC.Types.False
                      -> case GHC.Prim.readWord8OffAddr#
                                @ GHC.Prim.RealWorld
                                (GHC.Prim.plusAddr# dt dt2)
                                0#
                                GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                         case GHC.Prim.touch#
                                @ 'GHC.Types.LiftedRep
                                @ GHC.ForeignPtr.ForeignPtrContents
                                dt1
                                ipv of s' { DEFAULT ->
                         case GHC.Magic.runRW#
                                @ ('GHC.Types.TupleRep
                                     '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                                @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     Data.ByteString.Internal.ByteString #)
                                (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                 case GHC.Prim.newPinnedByteArray#
                                        @ GHC.Prim.RealWorld
                                        1#
                                        s of ds7 { (#,#) ipv2 ipv3 ->
                                 let {
                                   ipv4 :: GHC.Prim.Addr#
                                   = GHC.Prim.byteArrayContents#
                                       ipv3
                                         `cast`
                                       (UnsafeCo representational (GHC.Prim.MutableByteArray#
                                                                     GHC.Prim.RealWorld) GHC.Prim.ByteArray#)
                                 } in
                                 case GHC.Prim.writeWord8OffAddr#
                                        @ GHC.Prim.RealWorld
                                        ipv4
                                        0#
                                        (GHC.Prim.narrow8Word# ipv1)
                                        ipv2 of s114 { DEFAULT ->
                                 let {
                                   ipv5 :: GHC.ForeignPtr.ForeignPtrContents
                                   = GHC.ForeignPtr.PlainPtr ipv3
                                 } in
                                 case GHC.Prim.touch#
                                        @ 'GHC.Types.LiftedRep
                                        @ GHC.ForeignPtr.ForeignPtrContents
                                        ipv5
                                        s114 of s'1 { DEFAULT ->
                                 (# s'1,
                                    Data.ByteString.Internal.PS
                                      ipv4
                                      ipv5
                                      0#
                                      1# #) } } }) of ds7 { (#,#) ipv2 ipv3 ->
                         ipv3 } } }
                      GHC.Types.True
                      -> case Lib.contractcigar2
                         ret_ty Data.ByteString.Internal.ByteString
                         of {} } })) -}
993f7825af71a71f514db46a285109a3
  contractcigar2 :: GHC.Word.Word8
  {- Strictness: x -}
542ab4857fa6479d70c488095fc7945a
  countDs ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> GHC.Integer.Type.Integer
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (cs :: [(GHC.Integer.Type.Integer,
                            Data.ByteString.Internal.ByteString)]) ->
                 Lib.countDs_gl
                   (GHC.Base.build
                      @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                      (\ @ b
                         (c2 :: (GHC.Integer.Type.Integer,
                                 Data.ByteString.Internal.ByteString)
                                -> b -> b)[OneShot]
                         (n :: b)[OneShot] ->
                       GHC.Base.foldr
                         @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                         @ b
                         (GHC.List.filterFB
                            @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                            @ b
                            c2
                            Lib.countDs1)
                         n
                         cs))
                   Data.OldList.genericLength1) -}
fa68e813dbc89c8b41d23657a5c540f1
  countDs1 ::
    (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
    -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S(LS(SLSS)),1*U(A,1*U(U,U,U,U))>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: (GHC.Integer.Type.Integer,
                          Data.ByteString.Internal.ByteString)) ->
                 case w of ww { (,) ww1 ww2 ->
                 case ww2 of ww3 { Data.ByteString.Internal.PS ww4 ww5 ww6 ww7 ->
                 Lib.$wlvl2 ww4 ww5 ww6 ww7 } }) -}
72741c3be5d387ecafa1f8aa8919314b
  countDs2 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.countDs_addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.countDs_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
295d6554fed047d24d56a3b68c8f512a
  countDs_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("D"#) -}
009c1b4ed21c5e1e384981b45532280a
  countDs_gl ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
3448c58ddfbf554b867225499096e02a
  createprimerbedmaps ::
    Lib.Opts
    -> GHC.Types.IO
         (Data.Map.Internal.Map
            Lib.UChr (Data.IntMap.Internal.IntMap Lib.BedRecord),
          Data.Map.Internal.Map
            Lib.UChr (Data.IntMap.Internal.IntMap Lib.BedRecord))
  {- Arity: 2, Strictness: <S(SLLL),1*U(1*U,U,A,A)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.createprimerbedmaps1
                  `cast`
                (<Lib.Opts>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <(Data.Map.Internal.Map
                                   Lib.UChr (Data.IntMap.Internal.IntMap Lib.BedRecord),
                                 Data.Map.Internal.Map
                                   Lib.UChr (Data.IntMap.Internal.IntMap Lib.BedRecord))>_R)) -}
824ddc78dbc7501e732a7ef477a05496
  createprimerbedmaps1 ::
    Lib.Opts
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Data.Map.Internal.Map
             Lib.UChr (Data.IntMap.Internal.IntMap Lib.BedRecord),
           Data.Map.Internal.Map
             Lib.UChr (Data.IntMap.Internal.IntMap Lib.BedRecord)) #)
  {- Arity: 2, Strictness: <S(SLLL),1*U(1*U,U,A,A)><S,U>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.Opts) (w1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Lib.Opts ww1 ww2 ww3 ww4 ->
                 Lib.$wcreateprimerbedmaps ww1 ww2 w1 }) -}
36270b3b3cd69ff006c03d74e5ab73a8
  createprimerbedmaps10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Lib.createprimerbedmaps11) -}
2449d686d235ce3908f51fec8c80d745
  createprimerbedmaps11 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: (" master records failed to parse (see masterparsefails.log)\n"#) -}
bf6d7773a41facf4b4efeb297604fa9d
  createprimerbedmaps12 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (" of "#) -}
45d8c535bb216960eafcd40e565a1478
  createprimerbedmaps13 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("WARNING: "#) -}
2422c31ae32edfeb6a02071d88fb0fe1
  createprimerbedmaps14 ::
    Data.ByteString.Internal.ByteString
    -> Data.Either.Either GHC.Base.String Lib.MasterRecord
  {- Arity: 1,
     Unfolding: (Data.Attoparsec.ByteString.Internal.parseOnly
                   @ Lib.MasterRecord
                   Lib.createprimerbedmaps15
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                             <Data.ByteString.Internal.ByteString>_N <Lib.MasterRecord>_R))) -}
f3f4c5c3d93b383cea238f3c8af90ff7
  createprimerbedmaps15 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.MasterRecord
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.MasterRecord
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wmasterparser @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
ee21e0fb4a554ba6df4b9a42e9532226
  createprimerbedmaps16 ::
    GHC.Types.Int
    -> Data.Either.Either GHC.Base.String Lib.MasterRecord
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><S,1*U>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds6 :: GHC.Types.Int)
                   (x :: Data.Either.Either
                           GHC.Base.String Lib.MasterRecord)[OneShot] ->
                 Data.Either.isRight @ GHC.Base.String @ Lib.MasterRecord x) -}
3e35e4269a8507c93022cda73112445a
  createprimerbedmaps2 ::
    GHC.IO.FilePath
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [Lib.BEDPE] #)
  {- Arity: 2, Strictness: <L,U><S,U> -}
a2c7c9e320184b8fc66580af2dc49714
  createprimerbedmaps3 ::
    Lib.BedRecord -> Lib.BedRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(U,A,A,A)><S(SLLL),1*U(U,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.BedRecord) (y :: Lib.BedRecord) ->
                 case x of wild { Lib.BedRecord ds6 ds7 ds8 ds9 ->
                 case ds6 of x1 { DEFAULT ->
                 case y of wild1 { Lib.BedRecord ds10 ds11 ds12 ds13 ->
                 case ds10 of x2 { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x1 of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x2 of b# { DEFAULT ->
                 GHC.Prim.tagToEnum#
                   @ GHC.Types.Bool
                   (GHC.Prim.==# a# b#) } } } } } }) -}
55b739177b5afcb68b6b1da0f52def35
  createprimerbedmaps4 ::
    GHC.IO.FilePath
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [Lib.MasterRecord] #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (fp :: GHC.IO.FilePath)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case System.IO.withBinaryFile1
                        @ Data.ByteString.Internal.ByteString
                        fp
                        GHC.IO.IOMode.ReadMode
                        Data.ByteString.readFile2
                          `cast`
                        (<GHC.IO.Handle.Types.Handle>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Data.ByteString.Internal.ByteString>_R))
                        eta of ds6 { (#,#) ipv ipv1 ->
                 let {
                   ipv2 :: [Data.ByteString.Internal.ByteString]
                   = case ipv1 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                     Data.ByteString.Char8.$wlines ww1 ww2 ww3 ww4 }
                 } in
                 let {
                   ds7 :: (Data.Map.Internal.Map
                             GHC.Types.Int
                             (Data.Either.Either GHC.Base.String Lib.MasterRecord),
                           Data.Map.Internal.Map
                             GHC.Types.Int
                             (Data.Either.Either GHC.Base.String Lib.MasterRecord))
                   = case Data.Map.Internal.$wpoly_go3
                            @ GHC.Types.Int
                            @ (Data.Either.Either GHC.Base.String Lib.MasterRecord)
                            Lib.createprimerbedmaps16
                            (Lib.$sfromList2
                               @ (Data.Either.Either GHC.Base.String Lib.MasterRecord)
                               (Lib.createprimerbedmaps_go1
                                  0#
                                  (GHC.Base.map
                                     @ Data.ByteString.Internal.ByteString
                                     @ (Data.Either.Either GHC.Base.String Lib.MasterRecord)
                                     Lib.createprimerbedmaps14
                                     ipv2))) of ww { (#,#) ww1 ww2 ->
                     (ww1, ww2) }
                 } in
                 let {
                   succs :: [Lib.MasterRecord]
                   = case ds7 of wild { (,) succm failm ->
                     Lib.createprimerbedmaps_go13
                       (GHC.Types.[] @ Lib.MasterRecord)
                       succm }
                 } in
                 let {
                   failedlinenums :: [GHC.Types.Int]
                   = case ds7 of wild { (,) succm failm ->
                     Data.Map.Internal.keys_go
                       @ GHC.Types.Int
                       @ (Data.Either.Either GHC.Base.String Lib.MasterRecord)
                       (GHC.Types.[] @ GHC.Types.Int)
                       failm }
                 } in
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        (case GHC.List.$wlenAcc
                                @ Data.ByteString.Internal.ByteString
                                ipv2
                                0# of ww2 { DEFAULT ->
                         case GHC.List.$wlenAcc
                                @ Lib.MasterRecord
                                succs
                                0# of ww1 { DEFAULT ->
                         Lib.$wparsechkMaster ww2 ww1 failedlinenums } })
                        GHC.Types.True
                        ipv of ds8 { (#,#) ipv3 ipv4 ->
                 case System.IO.withBinaryFile1
                        @ ()
                        Lib.createprimerbedmaps5
                        GHC.IO.IOMode.WriteMode
                        (\ (ds9 :: GHC.IO.Handle.Types.Handle)[OneShot]
                           (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case Data.ByteString.Char8.unlines
                                (GHC.Base.map
                                   @ GHC.Types.Int
                                   @ Data.ByteString.Internal.ByteString
                                   (GHC.List.!! @ Data.ByteString.Internal.ByteString ipv2)
                                   failedlinenums) of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                         Data.ByteString.$whPut ds9 ww1 ww2 ww3 ww4 eta1 })
                          `cast`
                        (<GHC.IO.Handle.Types.Handle>_R
                         ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                        ipv3 of ds9 { (#,#) ipv5 ipv6 ->
                 (# ipv5, succs #) } } }) -}
843c8f4715e3bb2f71f5b95375444215
  createprimerbedmaps5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Lib.createprimerbedmaps6) -}
2cebb6b9e56d714c5cb092c21ccd4277
  createprimerbedmaps6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("masterparsefails.log"#) -}
b3089d561db52b223b5a4ce0c361493c
  createprimerbedmaps7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Lib.createprimerbedmaps8) -}
f345367167a864de01a8bd62315fbbc7
  createprimerbedmaps8 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: (" master records parsed successfully.\n"#) -}
9e0a72bdeaf5a4e839dc4dcea71cbfd4
  createprimerbedmaps9 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("all "#) -}
f041232158c43bdcb6acda39812497e1
  createprimerbedmaps_go ::
    [[Lib.BedRecord]]
    -> [Data.IntMap.Internal.IntMap Lib.BedRecord]
    -> [(Lib.UChr, Data.IntMap.Internal.IntMap Lib.BedRecord)]
  {- Arity: 2, Strictness: <S,1*U><L,1*U> -}
292c2825a5c4449eb4bfa4947b8de38b
  createprimerbedmaps_go1 ::
    GHC.Prim.Int#
    -> [Data.Either.Either GHC.Base.String Lib.MasterRecord]
    -> [(GHC.Types.Int,
         Data.Either.Either GHC.Base.String Lib.MasterRecord)]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U> -}
3d4a1bf7d335af3a4053420b49b2da2b
  createprimerbedmaps_go13 ::
    [Lib.MasterRecord]
    -> Data.Map.Internal.Map
         GHC.Types.Int (Data.Either.Either GHC.Base.String Lib.MasterRecord)
    -> [Lib.MasterRecord]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U><S,1*U> -}
9cdc8fecf2059aee5608bbf4e1706f45
  defaultAlignment :: Lib.AlignedRead
  {- Unfolding: (Lib.AlignedRead
                   Lib.defaultAlignment3
                   Lib.$fShowAlignedRead2
                   Lib.NONE
                   Lib.defaultBed2
                   Lib.defaultBed2
                   Lib.defaultBed2
                   Lib.addtrimtag5
                   Lib.addtrimtag5
                   Lib.defaultAlignment_v
                   Lib.defaultAlignment_v
                   Lib.addtrimtag5
                   Lib.defaultBed2
                   Lib.defaultBed2
                   Lib.defaultAlignment1
                   Lib.defaultAlignment1
                   Lib.defaultAlignment1
                   Lib.defaultAlignment1
                   GHC.Types.False
                   GHC.Types.False
                   (GHC.Types.[] @ Lib.BedRecord)
                   (GHC.Types.[] @ Lib.BedRecord)
                   GHC.Types.False
                   GHC.Types.False
                   Lib.defaultBed2
                   Lib.defaultBed2
                   (GHC.Types.[] @ Data.ByteString.Internal.ByteString)
                   GHC.Types.False
                   Lib.defaultAlignment1
                   Lib.defaultAlignment1
                   Lib.defaultBed
                   GHC.Types.False) -}
9c06d4fe829fb6e3e7a6bf401f3e0a74
  defaultAlignment1 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.List.$wlenAcc
                        @ GHC.Types.Char
                        (GHC.Types.[] @ GHC.Types.Char)
                        0# of ww { DEFAULT ->
                 Data.ByteString.Internal.$wunsafePackLenChars
                   ww
                   (GHC.Types.[] @ GHC.Types.Char) }) -}
e11158a8089a6db3c8e7f64c98365936
  defaultAlignment2 ::
    (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
  {- Strictness: m,
     Unfolding: ((Lib.defaultBed2, Lib.addtrimtag5)) -}
bb2b9d17a73406d8b8a2fb1adb3252f7
  defaultAlignment3 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.defaultAlignment_addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.defaultAlignment_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
41d9e26937d6b4bc38c410376c79ee8a
  defaultAlignment_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("NONE"#) -}
43281a98157bbced36b47aba12e952c1
  defaultAlignment_v ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                   Lib.defaultAlignment2
                   (GHC.Types.[]
                      @ (GHC.Integer.Type.Integer,
                         Data.ByteString.Internal.ByteString))) -}
85ac3579dc8db49a14548ee6a6ebfcc2
  defaultBEDPE :: Lib.BEDPE
  {- Strictness: m,
     Unfolding: (Lib.BEDPE
                   Lib.NONE
                   Lib.defaultBed2
                   Lib.defaultBed2
                   Lib.NONE
                   Lib.defaultBed2
                   Lib.defaultBed2
                   Lib.defaultBEDPE1) -}
41df530f4ee602c88c6df81c7720b32b
  defaultBEDPE1 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.defaultBEDPE_addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.defaultBEDPE_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
ca0a2373dfb73de36c2fd4e017bb01b0
  defaultBEDPE_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("DEFAULTBEDPE"#) -}
e5432b89b633024cf9306ab3adcb757d
  defaultBed :: Lib.BedRecord
  {- Strictness: m,
     Unfolding: (Lib.BedRecord
                   Lib.NONE
                   Lib.defaultBed2
                   Lib.defaultBed2
                   Lib.defaultBed1) -}
1c8dfc1db5f16fb17bef906c6dc1a45f
  defaultBed1 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.defaultBed_addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.defaultBed_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
3eeba775dfb62ca133c91cdf96e8640d
  defaultBed2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
816f9ccbeb54f59feb907c9b2295ac93
  defaultBed_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("DEFAULT"#) -}
194d3f045ddc391746ade267729daabc
  defaultMasterRec :: Lib.MasterRecord
  {- Unfolding: (Lib.MasterRecord
                   Lib.NONE
                   Lib.defaultBed2
                   Lib.defaultBed2
                   Lib.defaultMasterRec1
                   Lib.defaultBed2
                   Lib.defaultBed2
                   Lib.defaultBed2
                   Lib.defaultBed2
                   Lib.defaultMasterRec1
                   Lib.defaultMasterRec1
                   Lib.defaultMasterRec1
                   Lib.defaultMasterRec1) -}
74b5a22d0f047674586ed3181f6c09a5
  defaultMasterRec1 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.defaultMasterRec_addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.defaultMasterRec_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
308db41fb8f6ccd28ff07d6420dc7108
  defaultMasterRec_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("EMPTY"#) -}
07b8ac03a127651301b27c41b9881e55
  defaultMidFam :: Lib.MidFamily
  {- Strictness: m,
     Unfolding: (Lib.MidFamily
                   Lib.NONE
                   Lib.defaultBed2
                   Lib.defaultBed2
                   Lib.defaultMasterRec1
                   (GHC.Types.[] @ Lib.AlignedRead)
                   Lib.defaultBed2
                   Lib.defaultBed2
                   Lib.defaultBed2
                   Lib.defaultBed2
                   Lib.defaultBed) -}
0b030412a15880efb65555c2e1ecc000
  defaultPairedAln :: Lib.PairedAln
  {- Strictness: m,
     Unfolding: (Lib.PairedAln
                   Lib.defaultAlignment
                   Lib.defaultAlignment
                   (GHC.Types.[] @ Lib.AlignedRead)
                   (GHC.Types.[] @ Lib.AlignedRead)) -}
8559d0b44695806151a5bc1692dff6d3
  dupRead :: Lib.SAMFlag -> GHC.Types.Bool
  RecSel Left Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLSL),1*U(A,A,A,A,A,A,A,A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.SAMFlag) ->
                 case ds6 of wild { Lib.SAMFlag ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds17 }) -}
9bef29ed1835da52d687e9f588f6f1bf
  end1 :: Lib.BEDPE -> GHC.Integer.Type.Integer
  RecSel Left Lib.BEDPE
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLL),1*U(A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.BEDPE) ->
                 case ds6 of wild { Lib.BEDPE ds7 ds8 ds9 ds10 ds11 ds12 ds13 ->
                 ds9 }) -}
9bef29ed1835da52d687e9f588f6f1bf
  end2 :: Lib.BEDPE -> GHC.Integer.Type.Integer
  RecSel Left Lib.BEDPE
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSL),1*U(A,A,A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.BEDPE) ->
                 case ds6 of wild { Lib.BEDPE ds7 ds8 ds9 ds10 ds11 ds12 ds13 ->
                 ds12 }) -}
21071c975426d6ea93962a8c0a55430b
  endpos :: Lib.AlignedRead -> GHC.Integer.Type.Integer
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds11 }) -}
34bf5c898b594b2b13c6f162c5e32ed1
  expandcigar :: Lib.CigarMap -> Data.ByteString.Internal.ByteString
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (cmap :: Lib.CigarMap) ->
                 Data.ByteString.concat (Lib.expandcigar_go cmap)) -}
3c092e9367119452bef18549bf9fa559
  expandcigar1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
9d786e96a1798a68fcaa3de8cfbc37cd
  expandcigar2 ::
    Lib.CigarMap
    -> [(GHC.Integer.Type.Integer,
         Data.ByteString.Internal.ByteString)]
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (cmap :: Lib.CigarMap) ->
                 case Data.ByteString.concat
                        (Lib.expandcigar_go
                           cmap) of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 let {
                   ops :: [Data.ByteString.Internal.ByteString]
                   = GHC.Base.map
                       @ GHC.Types.Char
                       @ Data.ByteString.Internal.ByteString
                       Data.ByteString.Char8.singleton
                       (Data.ByteString.Internal.$wunpackAppendCharsLazy
                          ww1
                          ww2
                          ww3
                          ww4
                          (GHC.Types.[] @ GHC.Types.Char))
                 } in
                 let {
                   lim :: GHC.Integer.Type.Integer
                   = Lib.expandcigar2_gl ops Data.OldList.genericLength1
                 } in
                 letrec {
                   go19 :: GHC.Integer.Type.Integer
                           -> [Data.ByteString.Internal.ByteString]
                           -> [(GHC.Integer.Type.Integer,
                                Data.ByteString.Internal.ByteString)]
                     {- Arity: 2, Strictness: <S,U><L,1*U> -}
                   = \ (x :: GHC.Integer.Type.Integer)
                       (eta :: [Data.ByteString.Internal.ByteString]) ->
                     case GHC.Integer.Type.gtInteger# x lim of wild { DEFAULT ->
                     case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild of wild1 {
                       GHC.Types.False
                       -> case eta of wild2 {
                            []
                            -> GHC.Types.[]
                                 @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                            : y ys
                            -> GHC.Types.:
                                 @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                                 (x, y)
                                 (go19 (GHC.Integer.Type.plusInteger x Lib.expandcigar1) ys) }
                       GHC.Types.True
                       -> GHC.Types.[]
                            @ (GHC.Integer.Type.Integer,
                               Data.ByteString.Internal.ByteString) } }
                 } in
                 go19 Lib.expandcigar1 ops }) -}
f5515b831d1f4d81b75250e05f00e336
  expandcigar2_gl ::
    [Data.ByteString.Internal.ByteString]
    -> GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
410aed46891109ce96f78ba6b1c3e7af
  expandcigar_go ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> [Data.ByteString.Internal.ByteString]
  {- Arity: 1, Strictness: <S,1*U> -}
8abddd9eda65855fe94d389a2b8b1664
  exrights :: Data.Either.Either a1 a2 -> a2
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a @ a1 (x :: Data.Either.Either a a1) ->
                 case x of wild {
                   Data.Either.Left ipv -> GHC.List.badHead @ a1
                   Data.Either.Right a2 -> a2 }) -}
b1166d3c23a838b56baf18f03734dc0e
  exrights2 :: [a] -> GHC.Base.Maybe a
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (xs :: [a]) ->
                 case GHC.List.$wlenAcc @ a xs 0# of ww2 {
                   DEFAULT -> GHC.Base.Just @ a (GHC.List.head @ a xs)
                   0# -> GHC.Base.Nothing @ a }) -}
8559d0b44695806151a5bc1692dff6d3
  failedQC :: Lib.SAMFlag -> GHC.Types.Bool
  RecSel Left Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLSLL),1*U(A,A,A,A,A,A,A,A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.SAMFlag) ->
                 case ds6 of wild { Lib.SAMFlag ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds16 }) -}
eb5dbe1fdc8b80fcbb5677040353ee2a
  filtpadassoc ::
    [(GHC.Types.Int, Data.ByteString.Internal.ByteString)]
    -> [(GHC.Types.Int, Data.ByteString.Internal.ByteString)]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (asclist :: [(GHC.Types.Int,
                                 Data.ByteString.Internal.ByteString)]) ->
                 GHC.Base.build
                   @ (GHC.Types.Int, Data.ByteString.Internal.ByteString)
                   (\ @ b
                      (c2 :: (GHC.Types.Int, Data.ByteString.Internal.ByteString)
                             -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ (GHC.Types.Int, Data.ByteString.Internal.ByteString)
                      @ b
                      (GHC.List.filterFB
                         @ (GHC.Types.Int, Data.ByteString.Internal.ByteString)
                         @ b
                         c2
                         Lib.filtpadassoc1)
                      n
                      asclist)) -}
3c8df95d6438e2f23681aac89544c468
  filtpadassoc1 ::
    (GHC.Types.Int, Data.ByteString.Internal.ByteString)
    -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S(LS(SLSS)),1*U(A,1*U(U,U,U,U))>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: (GHC.Types.Int, Data.ByteString.Internal.ByteString)) ->
                 case w of ww { (,) ww1 ww2 ->
                 case ww2 of ww3 { Data.ByteString.Internal.PS ww4 ww5 ww6 ww7 ->
                 Lib.$wlvl3 ww4 ww5 ww6 ww7 } }) -}
31327477113caeeaaced34bf64269fa7
  filtpadcmap :: Lib.CigarMap -> Lib.CigarMap
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (cmap :: Lib.CigarMap) ->
                 GHC.Base.build
                   @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                   (\ @ b
                      (c2 :: (GHC.Integer.Type.Integer,
                              Data.ByteString.Internal.ByteString)
                             -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                      @ b
                      (GHC.List.filterFB
                         @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                         @ b
                         c2
                         Lib.filtpadcmap1)
                      n
                      cmap)) -}
662aa7ce78bc8a33a6f07b7480208b00
  filtpadcmap1 ::
    (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
    -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S(LS(SLSS)),1*U(A,1*U(U,U,U,U))>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: (GHC.Integer.Type.Integer,
                          Data.ByteString.Internal.ByteString)) ->
                 case w of ww { (,) ww1 ww2 ->
                 case ww2 of ww3 { Data.ByteString.Internal.PS ww4 ww5 ww6 ww7 ->
                 Lib.$wlvl4 ww4 ww5 ww6 ww7 } }) -}
5570041da486e9f283594c247bff5642
  findByQname ::
    Data.ByteString.Internal.ByteString
    -> [Lib.AlignedRead] -> [Lib.AlignedRead]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U(U,U,U,U)><S,1*U>,
     Unfolding: (\ (name :: Data.ByteString.Internal.ByteString)
                   (as :: [Lib.AlignedRead]) ->
                 GHC.List.filter
                   @ Lib.AlignedRead
                   (\ (x :: Lib.AlignedRead) ->
                    case x of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                    case ds6 of wild1 { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                    case name of wild2 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                    case GHC.Prim.tagToEnum#
                           @ GHC.Types.Bool
                           (GHC.Prim./=# dt3 dt7) of wild3 {
                      GHC.Types.False
                      -> case GHC.Prim.tagToEnum#
                                @ GHC.Types.Bool
                                (GHC.Prim.eqAddr# dt dt4) of wild4 {
                           GHC.Types.False
                           -> case Data.ByteString.Internal.$wcompareBytes
                                     dt
                                     dt1
                                     dt2
                                     dt3
                                     dt4
                                     dt5
                                     dt6
                                     dt7 of wild5 {
                                DEFAULT -> GHC.Types.False GHC.Types.EQ -> GHC.Types.True }
                           GHC.Types.True
                           -> case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.==# dt2 dt6) of wild5 {
                                GHC.Types.False
                                -> case Data.ByteString.Internal.$wcompareBytes
                                          dt
                                          dt1
                                          dt2
                                          dt3
                                          dt4
                                          dt5
                                          dt6
                                          dt7 of wild6 {
                                     DEFAULT -> GHC.Types.False GHC.Types.EQ -> GHC.Types.True }
                                GHC.Types.True -> GHC.Types.True } }
                      GHC.Types.True -> GHC.Types.False } } } })
                   as) -}
21071c975426d6ea93962a8c0a55430b
  fint :: Lib.AlignedRead -> [Lib.BedRecord]
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLSLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds26 }) -}
21071c975426d6ea93962a8c0a55430b
  flag :: Lib.AlignedRead -> GHC.Types.Int
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds8 }) -}
bdf0e54530a94433a291cf550a762570
  flattenPairedAln :: Lib.PairedAln -> [Lib.AlignedRead]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(1*U,1*U,1*U,1*U)>,
     Unfolding: (\ (p :: Lib.PairedAln) ->
                 Data.OldList.sortBy
                   @ Lib.AlignedRead
                   Lib.$fOrdAlignedRead_$ccompare
                   (GHC.Types.:
                      @ Lib.AlignedRead
                      (case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 -> ds6 })
                      (GHC.Types.:
                         @ Lib.AlignedRead
                         (case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 -> ds7 })
                         (case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                          GHC.Base.++ @ Lib.AlignedRead ds8 ds9 })))) -}
fa43bef3e236e0861332c09cd14bce9d
  flipClrBit :: GHC.Types.Int -> GHC.Types.Int -> GHC.Types.Int
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>m,
     Unfolding: InlineRule (2, True, True)
                (\ (x :: GHC.Types.Int) (y :: GHC.Types.Int) ->
                 Data.Bits.$fBitsInt_$cclearBit y x) -}
0f2cecbbc2c3b275f84cb0c886027d0d
  flipSetBit :: GHC.Types.Int -> GHC.Types.Int -> GHC.Types.Int
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,1*U(U)>m,
     Unfolding: InlineRule (2, True, True)
                (\ (x :: GHC.Types.Int) (y :: GHC.Types.Int) ->
                 Data.Bits.$fBitsInt_$csetBit y x) -}
f864ec082d1c46b1b5c694229924b299
  flipTstBit :: GHC.Types.Int -> GHC.Types.Int -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,1*U(U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: GHC.Types.Int) (y :: GHC.Types.Int) ->
                 case y of wild { GHC.Types.I# x# ->
                 case x of wild1 { GHC.Types.I# i# ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# i# 64#) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.andI#
                             x#
                             (GHC.Prim.uncheckedIShiftL# 1# i#) of wild4 {
                        DEFAULT -> GHC.Types.True 0# -> GHC.Types.False }
                   GHC.Types.True -> GHC.Types.False } } }) -}
8559d0b44695806151a5bc1692dff6d3
  fstInPair :: Lib.SAMFlag -> GHC.Types.Bool
  RecSel Left Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLSLLLLL),1*U(A,A,A,A,A,A,1*U,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.SAMFlag) ->
                 case ds6 of wild { Lib.SAMFlag ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds13 }) -}
d2a0cadc2a17f0c21787842931fb55db
  genLogFilePath :: GHC.IO.FilePath -> GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (fp :: GHC.IO.FilePath) ->
                 case GHC.List.$wlenAcc @ GHC.Types.Char fp 0# of ww { DEFAULT ->
                 case Data.ByteString.Internal.$wunsafePackLenChars
                        ww
                        fp of wild { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                 let {
                   parts :: [Data.ByteString.Internal.ByteString]
                   = case dt3 of ds6 {
                       DEFAULT
                       -> letrec {
                            $wloop3 :: GHC.Prim.Int# -> [Data.ByteString.Internal.ByteString]
                              {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                            = \ (ww1 :: GHC.Prim.Int#) ->
                              case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                                    -> GHC.Prim.Int#
                                                                    -> GHC.Prim.Word#
                                                                    -> GHC.Prim.State#
                                                                         GHC.Prim.RealWorld
                                                                    -> (# GHC.Prim.State#
                                                                            GHC.Prim.RealWorld,
                                                                          GHC.Prim.Addr# #)}
                                     (GHC.Prim.plusAddr# dt (GHC.Prim.+# dt2 ww1))
                                     46#
                                     (GHC.Prim.int2Word# (GHC.Prim.-# ds6 ww1))
                                     GHC.Prim.realWorld# of wild2 { (#,#) ds7 ds8 ->
                              case GHC.Prim.touch#
                                     @ 'GHC.Types.LiftedRep
                                     @ GHC.ForeignPtr.ForeignPtrContents
                                     dt1
                                     ds7 of s' { DEFAULT ->
                              case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.eqAddr# ds8 __NULL) of wild3 {
                                GHC.Types.False
                                -> let {
                                     i :: GHC.Types.Int
                                     = case GHC.Prim.touch#
                                              @ 'GHC.Types.LiftedRep
                                              @ GHC.ForeignPtr.ForeignPtrContents
                                              dt1
                                              GHC.Prim.realWorld# of s'1 { DEFAULT ->
                                       GHC.Types.I#
                                         (GHC.Prim.minusAddr# ds8 (GHC.Prim.plusAddr# dt dt2)) }
                                   } in
                                   GHC.Types.:
                                     @ Data.ByteString.Internal.ByteString
                                     (case i of wild4 { GHC.Types.I# x1 ->
                                      Data.ByteString.Internal.PS
                                        dt
                                        dt1
                                        (GHC.Prim.+# dt2 ww1)
                                        (GHC.Prim.-# x1 ww1) })
                                     (case i of wild4 { GHC.Types.I# x1 ->
                                      $wloop3 (GHC.Prim.+# x1 1#) })
                                GHC.Types.True
                                -> GHC.Types.:
                                     @ Data.ByteString.Internal.ByteString
                                     (Data.ByteString.Internal.PS
                                        dt
                                        dt1
                                        (GHC.Prim.+# dt2 ww1)
                                        (GHC.Prim.-# ds6 ww1))
                                     (GHC.Types.[] @ Data.ByteString.Internal.ByteString) } } }
                          } in
                          $wloop3 0#
                       0# -> GHC.Types.[] @ Data.ByteString.Internal.ByteString }
                 } in
                 case GHC.List.$wlenAcc
                        @ Data.ByteString.Internal.ByteString
                        parts
                        0# of ww2 { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# ww2 2#) of wild1 {
                   GHC.Types.False
                   -> case GHC.Base.mappend
                             @ Data.ByteString.Internal.ByteString
                             Data.ByteString.Internal.$fMonoidByteString
                             (case parts of wild2 {
                                [] -> GHC.List.badHead @ Data.ByteString.Internal.ByteString
                                : x ds6 -> x })
                             Lib.genLogFilePath3 of ww1 { Data.ByteString.Internal.PS ww3 ww4 ww5 ww6 ->
                      Data.ByteString.Internal.$wunpackAppendCharsLazy
                        ww3
                        ww4
                        ww5
                        ww6
                        (GHC.Types.[] @ GHC.Types.Char) }
                   GHC.Types.True -> Lib.genLogFilePath1 } } } }) -}
6a30142e452380cb30553a073a7bac6f
  genLogFilePath1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.genLogFilePath2) -}
2a5b8aa25e553fb5b2019ec0a8b27d4e
  genLogFilePath2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("primerclip_runstats.log"#) -}
4a6e67da9d3838ffb6326fc76eef8d92
  genLogFilePath3 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.genLogFilePath_addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.genLogFilePath_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
4ac93fa30b65821a4681cb752bec4649
  genLogFilePath_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("_primerclip_runstats.log"#) -}
07f83aa3001c8dd7482b06897254a784
  getAlignedLength ::
    Data.ByteString.Internal.ByteString -> GHC.Integer.Type.Integer
  {- Arity: 1, Strictness: <S(SLSS),1*U(U,U,U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.ByteString.Internal.ByteString) ->
                 case w of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wgetAlignedLength ww1 ww2 ww3 ww4 }) -}
2d4d1315634b2290549eca93cf148374
  getAlignedLength_go ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
964c3a83e13ca2e7b0f58487b5a9e5ca
  getFPrimerBEDfromMaster :: Lib.MasterRecord -> Lib.BedRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <L,U(1*U,A,A,A,1*U,1*U,A,A,1*U,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (mr :: Lib.MasterRecord) ->
                 Lib.BedRecord
                   (case mr of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds6 })
                   (case mr of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds10 })
                   (case mr of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds11 })
                   (case mr of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds14 })) -}
715608e3c2fbb503c89624fd5c17d437
  getMasterFile :: GHC.IO.FilePath -> GHC.Types.IO [Lib.MasterRecord]
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.createprimerbedmaps4
                  `cast`
                (<GHC.IO.FilePath>_R
                 ->_R Sym (GHC.Types.N:IO[0] <[Lib.MasterRecord]>_R)) -}
4751fe30c512ed14117362d98b216695
  getNclips ::
    [Data.ByteString.Internal.ByteString]
    -> GHC.Types.Char -> [Data.ByteString.Internal.ByteString]
  {- Arity: 2, Strictness: <S,1*U><L,U(U)>,
     Unfolding: (\ (ciggrps :: [Data.ByteString.Internal.ByteString])
                   (cigchar :: GHC.Types.Char) ->
                 letrec {
                   go19 :: [Data.ByteString.Internal.ByteString]
                           -> [Data.ByteString.Internal.ByteString]
                     {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds6 :: [Data.ByteString.Internal.ByteString]) ->
                     case ds6 of wild {
                       [] -> GHC.Types.[] @ Data.ByteString.Internal.ByteString
                       : y ys
                       -> case y of wild1 { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                          case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.<=# dt3 0#) of wild2 {
                            GHC.Types.False
                            -> case GHC.Magic.runRW#
                                      @ ('GHC.Types.TupleRep
                                           '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                                      @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                                           Data.ByteString.Internal.ByteString #)
                                      (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                       case GHC.Prim.noDuplicate#
                                              @ GHC.Prim.RealWorld
                                              s of s' { DEFAULT ->
                                       case GHC.Prim.tagToEnum#
                                              @ GHC.Types.Bool
                                              (GHC.Prim.<# dt3 0#) of wild3 {
                                         GHC.Types.False
                                         -> case GHC.Prim.newPinnedByteArray#
                                                   @ GHC.Prim.RealWorld
                                                   dt3
                                                   s' of ds7 { (#,#) ipv ipv1 ->
                                            let {
                                              ipv2 :: GHC.Prim.Addr#
                                              = GHC.Prim.byteArrayContents#
                                                  ipv1
                                                    `cast`
                                                  (UnsafeCo representational (GHC.Prim.MutableByteArray#
                                                                                GHC.Prim.RealWorld) GHC.Prim.ByteArray#)
                                            } in
                                            let {
                                              ipv3 :: GHC.ForeignPtr.ForeignPtrContents
                                              = GHC.ForeignPtr.PlainPtr ipv1
                                            } in
                                            let {
                                              lvl1009 :: Data.ByteString.Internal.ByteString
                                              = Data.ByteString.Internal.PS ipv2 ipv3 0# dt3
                                            } in
                                            letrec {
                                              $wgo45 :: GHC.Prim.Addr#
                                                        -> GHC.Prim.Addr#
                                                        -> GHC.Prim.Addr#
                                                        -> GHC.Prim.State# GHC.Prim.RealWorld
                                                        -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                              Data.ByteString.Internal.ByteString #)
                                                <join 4> {- Arity: 4,
                                                            Strictness: <S,U><S,U><S,U><S,U>,
                                                            Inline: [0] -}
                                              = \ (ww :: GHC.Prim.Addr#)
                                                  (ww1 :: GHC.Prim.Addr#)
                                                  (ww2 :: GHC.Prim.Addr#)
                                                  (w :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                                case GHC.Prim.tagToEnum#
                                                       @ GHC.Types.Bool
                                                       (GHC.Prim.eqAddr# ww ww2) of wild4 {
                                                  GHC.Types.False
                                                  -> case GHC.Prim.readWord8OffAddr#
                                                            @ GHC.Prim.RealWorld
                                                            ww
                                                            0#
                                                            w of ds8 { (#,#) ipv4 ipv5 ->
                                                     case cigchar of wild5 { GHC.Types.C# y1 ->
                                                     case GHC.Prim.tagToEnum#
                                                            @ GHC.Types.Bool
                                                            (GHC.Prim.eqChar#
                                                               (GHC.Prim.chr#
                                                                  (GHC.Prim.word2Int# ipv5))
                                                               y1) of wild6 {
                                                       GHC.Types.False
                                                       -> $wgo45
                                                            (GHC.Prim.plusAddr# ww 1#)
                                                            ww1
                                                            ww2
                                                            ipv4
                                                       GHC.Types.True
                                                       -> case GHC.Prim.writeWord8OffAddr#
                                                                 @ GHC.Prim.RealWorld
                                                                 ww1
                                                                 0#
                                                                 ipv5
                                                                 ipv4 of s114 { DEFAULT ->
                                                          $wgo45
                                                            (GHC.Prim.plusAddr# ww 1#)
                                                            (GHC.Prim.plusAddr# ww1 1#)
                                                            ww2
                                                            s114 } } } }
                                                  GHC.Types.True
                                                  -> case GHC.Prim.touch#
                                                            @ 'GHC.Types.LiftedRep
                                                            @ GHC.ForeignPtr.ForeignPtrContents
                                                            dt1
                                                            w of s'1 { DEFAULT ->
                                                     let {
                                                       ipv6 :: GHC.Prim.Int#
                                                       = GHC.Prim.minusAddr# ww1 ipv2
                                                     } in
                                                     case GHC.Prim.tagToEnum#
                                                            @ GHC.Types.Bool
                                                            (GHC.Prim.>=# ipv6 dt3) of wild5 {
                                                       GHC.Types.False
                                                       -> case GHC.Prim.tagToEnum#
                                                                 @ GHC.Types.Bool
                                                                 (GHC.Prim.<# ipv6 0#) of wild6 {
                                                            GHC.Types.False
                                                            -> case GHC.Prim.newPinnedByteArray#
                                                                      @ GHC.Prim.RealWorld
                                                                      ipv6
                                                                      s'1 of ds8 { (#,#) ipv7 ipv8 ->
                                                               let {
                                                                 ipv9 :: GHC.Prim.Addr#
                                                                 = GHC.Prim.byteArrayContents#
                                                                     ipv8
                                                                       `cast`
                                                                     (UnsafeCo representational (GHC.Prim.MutableByteArray#
                                                                                                   GHC.Prim.RealWorld) GHC.Prim.ByteArray#)
                                                               } in
                                                               case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                                                                     -> GHC.Prim.Addr#
                                                                                                     -> GHC.Prim.Word#
                                                                                                     -> GHC.Prim.State#
                                                                                                          GHC.Prim.RealWorld
                                                                                                     -> (# GHC.Prim.State#
                                                                                                             GHC.Prim.RealWorld,
                                                                                                           GHC.Prim.Addr# #)}
                                                                      ipv9
                                                                      ipv2
                                                                      (GHC.Prim.int2Word# ipv6)
                                                                      ipv7 of wild7 { (#,#) ds9 ds10 ->
                                                               let {
                                                                 ipv10 :: GHC.ForeignPtr.ForeignPtrContents
                                                                 = GHC.ForeignPtr.PlainPtr ipv8
                                                               } in
                                                               case GHC.Prim.touch#
                                                                      @ 'GHC.Types.LiftedRep
                                                                      @ GHC.ForeignPtr.ForeignPtrContents
                                                                      ipv10
                                                                      ds9 of s'2 { DEFAULT ->
                                                               case GHC.Prim.touch#
                                                                      @ 'GHC.Types.LiftedRep
                                                                      @ GHC.ForeignPtr.ForeignPtrContents
                                                                      ipv3
                                                                      s'2 of s'3 { DEFAULT ->
                                                               (# s'3,
                                                                  Data.ByteString.Internal.PS
                                                                    ipv9
                                                                    ipv10
                                                                    0#
                                                                    ipv6 #) } } } }
                                                            GHC.Types.True
                                                            -> case GHC.ForeignPtr.mallocPlainForeignPtrBytes2
                                                               ret_ty (# GHC.Prim.State#
                                                                           GHC.Prim.RealWorld,
                                                                         Data.ByteString.Internal.ByteString #)
                                                               of {} }
                                                       GHC.Types.True
                                                       -> case GHC.Prim.touch#
                                                                 @ 'GHC.Types.LiftedRep
                                                                 @ GHC.ForeignPtr.ForeignPtrContents
                                                                 ipv3
                                                                 s'1 of s'2 { DEFAULT ->
                                                          (# s'2, lvl1009 #) } } } }
                                            } in
                                            $wgo45
                                              (GHC.Prim.plusAddr# dt dt2)
                                              ipv2
                                              (GHC.Prim.plusAddr# dt (GHC.Prim.+# dt2 dt3))
                                              ipv }
                                         GHC.Types.True
                                         -> case GHC.ForeignPtr.mallocPlainForeignPtrBytes2
                                            ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                      Data.ByteString.Internal.ByteString #)
                                            of {} } }) of ds7 { (#,#) ipv ipv1 ->
                               case ipv1 of wild3 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                               case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.># dt7 0#) of wild4 {
                                 GHC.Types.False -> go19 ys
                                 GHC.Types.True
                                 -> GHC.Types.:
                                      @ Data.ByteString.Internal.ByteString
                                      wild3
                                      (go19 ys) } } }
                            GHC.Types.True
                            -> case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.># dt3 0#) of wild3 {
                                 GHC.Types.False -> go19 ys
                                 GHC.Types.True
                                 -> GHC.Types.:
                                      @ Data.ByteString.Internal.ByteString
                                      wild1
                                      (go19 ys) } } } }
                 } in
                 go19 ciggrps) -}
2d475deb6d5464569d97ee8322b03573
  getNonHeaderAlns :: [Lib.AlignedRead] -> [Lib.AlignedRead]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (as :: [Lib.AlignedRead]) ->
                 GHC.Base.build
                   @ Lib.AlignedRead
                   (\ @ b
                      (c2 :: Lib.AlignedRead -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ Lib.AlignedRead
                      @ b
                      (GHC.List.filterFB @ Lib.AlignedRead @ b c2 Lib.getNonHeaderAlns1)
                      n
                      as)) -}
9dfb86018c4e8c2b862ffa401b610e05
  getNonHeaderAlns1 :: Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLSLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.AlignedRead) ->
                 case x of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 case ds32 of wild1 {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False } }) -}
5d29097c6cdc7d7b01f0546c5878c007
  getRPrimerBEDfromMaster :: Lib.MasterRecord -> Lib.BedRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <L,U(1*U,A,A,A,A,A,1*U,1*U,A,1*U,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (mr :: Lib.MasterRecord) ->
                 Lib.BedRecord
                   (case mr of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds6 })
                   (case mr of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds12 })
                   (case mr of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds13 })
                   (case mr of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds15 })) -}
709df4b479ad238cc3234d7fa7cd04aa
  getRight ::
    Data.Either.Either t (a, Lib.AlignedRead) -> Lib.AlignedRead
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ t @ a (e :: Data.Either.Either t (a, Lib.AlignedRead)) ->
                 case e of wild {
                   Data.Either.Left ds6 -> Lib.defaultAlignment
                   Data.Either.Right x -> Data.Tuple.snd @ a @ Lib.AlignedRead x }) -}
7dfff4225f8390ae1fca5f2cca0415bd
  getRightM ::
    (GHC.Show.Show a1, Control.Monad.IO.Class.MonadIO m) =>
    Data.Either.Either a1 (a2, Lib.AlignedRead) -> m Lib.AlignedRead
  {- Arity: 3,
     Strictness: <L,U(A,C(U),A)><S(SL),U(1*U(A,A,1*C1(C1(U)),1*C1(U),A),1*C1(U))><S,1*U>,
     Unfolding: (\ @ m109 :: * -> *
                   @ a
                   @ a1
                   ($dShow :: GHC.Show.Show a)
                   ($dMonadIO :: Control.Monad.IO.Class.MonadIO m109)
                   (eta :: Data.Either.Either a (a1, Lib.AlignedRead)) ->
                 let {
                   $dMonad :: GHC.Base.Monad m109
                   = Control.Monad.IO.Class.$p1MonadIO @ m109 $dMonadIO
                 } in
                 case eta of wild {
                   Data.Either.Left e
                   -> GHC.Base.>>
                        @ m109
                        $dMonad
                        @ ()
                        @ Lib.AlignedRead
                        (Control.Monad.IO.Class.liftIO
                           @ m109
                           $dMonadIO
                           @ ()
                           (\ (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            System.IO.appendFile2
                              @ ()
                              Lib.getRightM1
                              GHC.IO.IOMode.WriteMode
                              (\ (hdl :: GHC.IO.Handle.Types.Handle)[OneShot] ->
                               GHC.IO.Handle.Text.hPutStr2
                                 hdl
                                 (GHC.Show.show @ a $dShow e)
                                 GHC.Types.False)
                                `cast`
                              (<GHC.IO.Handle.Types.Handle>_R
                               ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                              eta1)
                             `cast`
                           (Sym (GHC.Types.N:IO[0] <()>_R)))
                        (GHC.Base.return
                           @ m109
                           $dMonad
                           @ Lib.AlignedRead
                           Lib.defaultAlignment)
                   Data.Either.Right a2
                   -> GHC.Base.return
                        @ m109
                        $dMonad
                        @ Lib.AlignedRead
                        (case a2 of wild1 { (,) ds6 y -> y }) }) -}
0bb52aefc8bd17233e5a396917f78f51
  getRightM1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.getRightM2) -}
1afbdd625281bc6502b86a01042ee814
  getRightM2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("samparsefails.log"#) -}
f3a6319b10b3e9c5d98d2eff1ed97fe7
  getTargetBEDfromMaster :: Lib.MasterRecord -> Lib.BedRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <L,U(1*U,1*U,1*U,1*U,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (mr :: Lib.MasterRecord) ->
                 Lib.BedRecord
                   (case mr of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds6 })
                   (case mr of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds7 })
                   (case mr of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds8 })
                   (case mr of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds9 })) -}
a610718a67770d15e1c42afbff948e65
  getTrimdcigCoordDiff :: Lib.AlignedRead -> GHC.Integer.Type.Integer
  {- Arity: 1,
     Strictness: <S(LLLLLLLS(SLSS)LLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,U,1*U,A,A,A,A,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.AlignedRead) ->
                 case w of ww { Lib.AlignedRead ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ->
                 case ww8 of ww32 { Data.ByteString.Internal.PS ww33 ww34 ww35 ww36 ->
                 Lib.$wgetTrimdcigCoordDiff ww33 ww34 ww35 ww36 ww24 ww25 } }) -}
1bc46ad155a9ec7ba47360b15f52a3d1
  getTrimdcigCoordDiff_go ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
9d2e0803e39e6596385f642010ae9673
  getcigseqdiff :: Lib.AlignedRead -> GHC.Integer.Type.Integer
  {- Arity: 1,
     Strictness: <S(LLLLLLLS(SLSS)LLLLLS(LLLS)LLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,1*U(A,A,A,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.AlignedRead) ->
                 case w of ww { Lib.AlignedRead ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ->
                 case ww8 of ww32 { Data.ByteString.Internal.PS ww33 ww34 ww35 ww36 ->
                 case ww14 of ww37 { Data.ByteString.Internal.PS ww38 ww39 ww40 ww41 ->
                 Lib.$wgetcigseqdiff ww33 ww34 ww35 ww36 ww41 } } }) -}
38631184825c2bff372e0c9a632d7958
  getcigseqdiff_go ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
b2b83553730c7bbe216c741452dcaf3a
  getcol ::
    GHC.Types.Int
    -> Data.Vector.Vector (Data.Vector.Vector a)
    -> Data.Vector.Vector a
  {- Arity: 2, Strictness: <L,U(U)><S(SSS),1*U(U,U,U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   (w :: GHC.Types.Int)
                   (w1 :: Data.Vector.Vector (Data.Vector.Vector a)) ->
                 case w1 of ww { Data.Vector.Vector ww1 ww2 ww3 ->
                 Lib.$wgetcol @ a w ww1 ww2 ww3 }) -}
ed53ce32c1f722661231bb293c918ab3
  getcol1 :: GHC.Prim.Int# -> GHC.Prim.Int# -> GHC.Prim.Addr# -> a
  {- Arity: 3, Strictness: <B,U><B,U><B,U>x -}
89c568a270f2d5bfc46688dd02a6b716
  getlengths ::
    GHC.Base.Functor f =>
    f Data.ByteString.Internal.ByteString -> f GHC.Types.Int
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ f8 :: * -> *
                   ($dFunctor :: GHC.Base.Functor f8)
                   (seqs :: f8 Data.ByteString.Internal.ByteString) ->
                 GHC.Base.fmap
                   @ f8
                   $dFunctor
                   @ Data.ByteString.Internal.ByteString
                   @ GHC.Types.Int
                   Data.ByteString.length
                   seqs) -}
a80891441bfb041b2a46a241aca808b0
  hdralnparser ::
    Data.Attoparsec.ByteString.Internal.Parser Lib.AlignedRead
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.hdralnparser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <Lib.AlignedRead>_R)) -}
1162d6a42c4fd6bec6b74164f5f3f5d0
  hdralnparser1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.AlignedRead
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.AlignedRead
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$whdralnparser @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
3f7977b3d6dadcf8e1df6de6447fe79d
  hdralnparser2 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.hdralnparser_addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.hdralnparser_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
38e4309549398cff88c43fd293b58c6a
  hdralnparserEOL ::
    Data.Attoparsec.ByteString.Internal.Parser Lib.PairedAln
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.hdralnparserEOL1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <Lib.PairedAln>_R)) -}
ff57e50db4d4cf5fa992abdeedb3d729
  hdralnparserEOL' ::
    Data.Attoparsec.ByteString.Internal.Parser Lib.AlignedRead
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.hdralnparserEOL'1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <Lib.AlignedRead>_R)) -}
1a19e8cd607d0095dee92fe2291265bf
  hdralnparserEOL'1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.AlignedRead
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.AlignedRead
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$whdralnparserEOL'
                   @ r
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww8
                   w2
                   w3
                   w4 } }) -}
b9f2fc9dd2f15b792ff7b727ba0ef591
  hdralnparserEOL1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.PairedAln
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.PairedAln
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$whdralnparserEOL
                   @ r
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww8
                   w2
                   w3
                   w4 } }) -}
a63ff0adb4557123e78865c3a1616117
  hdralnparser_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("HEADERLINE"#) -}
3446403eb4857174073c25fe7fad800b
  hdrchromp :: Data.Attoparsec.ByteString.Internal.Parser Lib.UChr
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.hdrchromp1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <Lib.UChr>_R)) -}
b28071108a3302f02b29d8c4711c97fc
  hdrchromp1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.UChr
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.UChr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$whdrchromp @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
21071c975426d6ea93962a8c0a55430b
  headerstrings :: Lib.AlignedRead -> Lib.Header
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLSLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds32 }) -}
340519fd84ca20ec4f586b0cfbc89f53
  headsafeAln :: [Lib.AlignedRead] -> Lib.AlignedRead
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (as :: [Lib.AlignedRead]) ->
                 case as of wild { [] -> Lib.alnsToPairedAln1 : ds6 ds7 -> ds6 }) -}
f06645d095bf16235fbe38a1fa974f4c
  incoordsfile :: Lib.Opts -> GHC.Base.String
  RecSel Left Lib.Opts
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSLL),1*U(A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.Opts) ->
                 case ds6 of wild { Lib.Opts ds7 ds8 ds9 ds10 -> ds8 }) -}
f06645d095bf16235fbe38a1fa974f4c
  insamfile :: Lib.Opts -> GHC.Base.String
  RecSel Left Lib.Opts
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLSL),1*U(A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.Opts) ->
                 case ds6 of wild { Lib.Opts ds7 ds8 ds9 ds10 -> ds9 }) -}
8559d0b44695806151a5bc1692dff6d3
  intflag :: Lib.SAMFlag -> GHC.Types.Int
  RecSel Left Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLS),1*U(A,A,A,A,A,A,A,A,A,A,A,1*U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.SAMFlag) ->
                 case ds6 of wild { Lib.SAMFlag ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds18 }) -}
ba3f5080f32adf8016f850ae065162ce
  intgr2int :: GHC.Integer.Type.Integer -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m,
     Unfolding: InlineRule (1, True, False)
                (\ (n :: GHC.Integer.Type.Integer) ->
                 case GHC.Integer.Type.integerToInt n of wild { DEFAULT ->
                 GHC.Types.I# wild }) -}
21071c975426d6ea93962a8c0a55430b
  isheader :: Lib.AlignedRead -> GHC.Types.Bool
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLSLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds33 }) -}
4df552760d3ad11a42a45e9185536793
  itypep ::
    Data.Attoparsec.ByteString.Internal.Parser
      Data.ByteString.Internal.ByteString
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.itypep1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)) -}
b98bf1384eb693156ef6b72dd63f5f1a
  itypep1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww { GHC.Types.I# ww1 ->
                 Lib.$witypep @ r w ww1 w2 w3 w4 }) -}
eddb9a8a27930a1c479b3c9c517bfd23
  itypep2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.itypep_addr#) -}
e653eb0cccd2bd3bb064b9abb29b7dea
  itypep_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("i"#) -}
0926fbd9213c74474c612a2b0bd8f6a1
  itypep_m ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString
      Data.ByteString.Internal.ByteString
  {- Unfolding: (Data.Attoparsec.ByteString.Char8.$fIsStringParser_$cfromString
                   @ Data.ByteString.Internal.ByteString
                   (GHC.Types.Eq#
                      @ *
                      @ *
                      @ Data.ByteString.Internal.ByteString
                      @ Data.ByteString.Internal.ByteString
                      @~ <Data.ByteString.Internal.ByteString>_N)
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Data.ByteString.Internal.ByteString>_N <Data.ByteString.Internal.ByteString>_N)
                   Lib.itypep2) -}
1762097d50e54c88ea11726683fd3d02
  itypep_v :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.itypep_addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.itypep_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
11993cfc1deb3bfd24bb8e42425f7908
  ix :: GHC.Types.Int -> Data.Vector.Vector a -> a
  {- Arity: 2, Strictness: <S(S),1*U(U)><S(SSS),1*U(U,U,U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a (w :: GHC.Types.Int) (w1 :: Data.Vector.Vector a) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Data.Vector.Vector ww3 ww4 ww5 ->
                 Lib.$wix @ a ww1 ww3 ww4 ww5 } }) -}
4ed555dd060702734ff5c09fc5ee2c36
  justbedmaps :: [GHC.Base.Maybe Lib.BedRecord] -> [Lib.BedRecord]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, True)
                (Data.Maybe.catMaybes @ Lib.BedRecord) -}
234bd12a4be97e493e01af35849878be
  justchrmaps ::
    [GHC.Base.Maybe (Data.IntMap.Internal.IntMap Lib.BedRecord)]
    -> [Data.IntMap.Internal.IntMap Lib.BedRecord]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, True)
                (Data.Maybe.catMaybes
                   @ (Data.IntMap.Internal.IntMap Lib.BedRecord)) -}
341eb89b044640692ab87efa9c0209fe
  mIDp ::
    Data.Attoparsec.ByteString.Internal.Parser
      Data.ByteString.Internal.ByteString
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.mIDp1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)) -}
2476e7d91075329fd5bbe0e493d4d7fe
  mIDp1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wmIDp @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
52fd469a7270873a781f22f9983101b5
  makeMRNMexplicit :: Lib.PairedAln -> Lib.PairedAln
  {- Arity: 1,
     Strictness: <S(S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLS)LLL),1*U(U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)>m,
     Unfolding: (\ (p :: Lib.PairedAln) ->
                 case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                 case ds6 of wild1 { Lib.AlignedRead ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ->
                 let {
                   $j :: Lib.PairedAln <join 0> {- Strictness: m -}
                   = let {
                       r2pRNAME :: Data.ByteString.Internal.ByteString
                       = case ds7 of wild2 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                         let {
                           cs :: [GHC.Types.Char] = Lib.$fShowUChr_$cshow ds43
                         } in
                         case GHC.List.$wlenAcc @ GHC.Types.Char cs 0# of ww { DEFAULT ->
                         Data.ByteString.Internal.$wunsafePackLenChars ww cs } }
                     } in
                     let {
                       r1pRNAME :: Data.ByteString.Internal.ByteString
                       = let {
                           cs :: [GHC.Types.Char] = Lib.$fShowUChr_$cshow ds12
                         } in
                         case GHC.List.$wlenAcc @ GHC.Types.Char cs 0# of ww { DEFAULT ->
                         Data.ByteString.Internal.$wunsafePackLenChars ww cs }
                     } in
                     Lib.PairedAln
                       (Lib.AlignedRead
                          ds10
                          ds11
                          ds12
                          ds13
                          ds14
                          ds15
                          ds16
                          ds17
                          ds18
                          ds19
                          r2pRNAME
                          ds21
                          ds22
                          ds23
                          ds24
                          ds25
                          ds26
                          ds27
                          ds28
                          ds29
                          ds30
                          ds31
                          ds32
                          ds33
                          ds34
                          ds35
                          ds36
                          ds37
                          ds38
                          ds39
                          ds40)
                       (case ds7 of wild2 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                        Lib.AlignedRead
                          ds41
                          ds42
                          ds43
                          ds44
                          ds45
                          ds46
                          ds47
                          ds48
                          ds49
                          ds50
                          r1pRNAME
                          ds52
                          ds53
                          ds54
                          ds55
                          ds56
                          ds57
                          ds58
                          ds59
                          ds60
                          ds61
                          ds62
                          ds63
                          ds64
                          ds65
                          ds66
                          ds67
                          ds68
                          ds69
                          ds70
                          ds71 })
                       (GHC.Base.map
                          @ Lib.AlignedRead
                          @ Lib.AlignedRead
                          (\ (x :: Lib.AlignedRead) ->
                           case x of wild2 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                           Lib.AlignedRead
                             ds41
                             ds42
                             ds43
                             ds44
                             ds45
                             ds46
                             ds47
                             ds48
                             ds49
                             ds50
                             r2pRNAME
                             ds52
                             ds53
                             ds54
                             ds55
                             ds56
                             ds57
                             ds58
                             ds59
                             ds60
                             ds61
                             ds62
                             ds63
                             ds64
                             ds65
                             ds66
                             ds67
                             ds68
                             ds69
                             ds70
                             ds71 })
                          ds8)
                       (GHC.Base.map
                          @ Lib.AlignedRead
                          @ Lib.AlignedRead
                          (\ (x :: Lib.AlignedRead) ->
                           case x of wild2 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                           Lib.AlignedRead
                             ds41
                             ds42
                             ds43
                             ds44
                             ds45
                             ds46
                             ds47
                             ds48
                             ds49
                             ds50
                             r1pRNAME
                             ds52
                             ds53
                             ds54
                             ds55
                             ds56
                             ds57
                             ds58
                             ds59
                             ds60
                             ds61
                             ds62
                             ds63
                             ds64
                             ds65
                             ds66
                             ds67
                             ds68
                             ds69
                             ds70
                             ds71 })
                          ds9)
                 } in
                 case ds40 of wild2 {
                   GHC.Types.False
                   -> let {
                        $j1 :: Lib.PairedAln <join 0> {- Strictness: m -}
                        = case ds7 of wild3 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                          case ds71 of wild4 {
                            GHC.Types.False
                            -> letrec {
                                 go19 :: [Lib.AlignedRead] -> Lib.PairedAln
                                   <join 1> {- Arity: 1, Strictness: <S,1*U>m -}
                                 = \ (ds72 :: [Lib.AlignedRead]) ->
                                   case ds72 of wild5 {
                                     [] -> wild
                                     : y ys
                                     -> case y of wild6 { Lib.AlignedRead ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ds90 ds91 ds92 ds93 ds94 ds95 ds96 ds97 ds98 ds99 ds100 ds101 ds102 ds103 ->
                                        case ds103 of wild7 {
                                          GHC.Types.False -> go19 ys GHC.Types.True -> $j } } }
                               } in
                               go19 ds9
                            GHC.Types.True -> $j } }
                      } in
                      letrec {
                        go19 :: [Lib.AlignedRead] -> Lib.PairedAln
                          <join 1> {- Arity: 1, Strictness: <S,1*U>m -}
                        = \ (ds41 :: [Lib.AlignedRead]) ->
                          case ds41 of wild3 {
                            [] -> $j1
                            : y ys
                            -> case y of wild4 { Lib.AlignedRead ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ->
                               case ds72 of wild5 {
                                 GHC.Types.False -> go19 ys GHC.Types.True -> $j } } }
                      } in
                      go19 ds8
                   GHC.Types.True -> $j } } }) -}
91634be1298319e7f26e927ae148bbc3
  makeTrimmedUpdates :: Lib.PairedAln -> Lib.PairedAln
  {- Arity: 1,
     Strictness: <L,1*U(U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.PairedAln) ->
                 case Lib.$wmakeTrimmedUpdates w of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 Lib.PairedAln ww1 ww2 ww3 ww4 }) -}
d40ebc3a91883bf9dd5246bc2283af5c
  makeTrimmedUpdates1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1200) -}
7ed529ff59162571660f57afc82ccddf
  makeTrimmedUpdates2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (-1200) -}
e57e7df83bab97c45bcfe23acf6fa2ad
  makebedmap ::
    [Lib.BedRecord] -> Data.IntMap.Internal.IntMap Lib.BedRecord
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (bs :: [Lib.BedRecord]) ->
                 Data.IntMap.Strict.fromList1
                   @ Lib.BedRecord
                   (Data.IntMap.Internal.Nil @ Lib.BedRecord)
                   (Lib.makebedmap_go bs)) -}
bf5549c07b0afe217b37d6b95ac6696b
  makebedmap_go ::
    [Lib.BedRecord] -> [(GHC.Types.Int, Lib.BedRecord)]
  {- Arity: 1, Strictness: <S,1*U> -}
56f288736ecae247bfff0aec0021292c
  makechrbedmap ::
    Lib.BED
    -> Data.Map.Internal.Map
         Lib.UChr (Data.IntMap.Internal.IntMap Lib.BedRecord)
  {- Arity: 1, Strictness: <S(SSS),1*U(U,U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.BED) ->
                 case w of ww { Data.Vector.Vector ww1 ww2 ww3 ->
                 Lib.$wmakechrbedmap ww1 ww2 ww3 }) -}
8eef1795a064af1f2affb312a4d0e72d
  makeprimertups :: Lib.BedRecord -> [(GHC.Types.Int, Lib.BedRecord)]
  {- Arity: 1, Strictness: <S(LSSL),1*U(U,U,U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.BedRecord) ->
                 case w of ww { Lib.BedRecord ww1 ww2 ww3 ww4 ->
                 Lib.$wmakeprimertups ww1 ww2 ww3 ww4 }) -}
554789f13e1f17f8259e4161993de98d
  makeprimertups1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (2) -}
e84d95f7c553a7e98bb578b6a27683cc
  mampname :: Lib.MasterRecord -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.MasterRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLLLLLLL),1*U(A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MasterRecord) ->
                 case ds6 of wild { Lib.MasterRecord ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds10 }) -}
abb1a64c561d17991940d87c36377b90
  mapcig :: Data.ByteString.Internal.ByteString -> Lib.CigarMap
  {- Arity: 1, Strictness: <S(SLSS),1*U(U,U,U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.ByteString.Internal.ByteString) ->
                 case w of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wmapcig ww1 ww2 ww3 ww4 }) -}
6803fa023cc75e89e87a74daaf0860b6
  mapfst :: GHC.Num.Num a => (a -> c) -> (a, b) -> (c, b)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,A><L,1*C1(U)><S,1*U(U,U)>m,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   @ c2
                   @ b
                   ($dNum :: GHC.Num.Num a)
                   (f8 :: a -> c2)
                   (ds6 :: (a, b)) ->
                 case ds6 of wild { (,) x y -> (f8 x, y) }) -}
21071c975426d6ea93962a8c0a55430b
  mapped :: Lib.AlignedRead -> GHC.Types.Bool
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLSLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds25 }) -}
8edcc2498c46c20d06182ee101cd5654
  mappedPct :: Lib.RunStats -> GHC.Types.Double
  RecSel Left Lib.RunStats
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLS),1*U(A,A,A,A,A,1*U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.RunStats) ->
                 case ds6 of wild { Lib.RunStats ds7 ds8 ds9 ds10 ds11 ds12 ->
                 ds12 }) -}
21071c975426d6ea93962a8c0a55430b
  mapqual :: Lib.AlignedRead -> GHC.Integer.Type.Integer
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds12 }) -}
14e322833c4985a64819ca2fa0877ffe
  masterRecToTargetBED :: Lib.MasterRecord -> Lib.BedRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <L,U(1*U,1*U,1*U,1*U,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (m109 :: Lib.MasterRecord) ->
                 Lib.BedRecord
                   (case m109 of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds6 })
                   (case m109 of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds7 })
                   (case m109 of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds8 })
                   (case m109 of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds9 })) -}
099c905e32ace2d37762f1bda2228a41
  masterToFPrimerBED :: [Lib.MasterRecord] -> Lib.BED
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (mrecs :: [Lib.MasterRecord]) ->
                 case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                             Data.Vector.Vector Lib.BedRecord #)
                        (\ (s114 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newArray#
                                @ Lib.BedRecord
                                @ (Control.Monad.Primitive.PrimState
                                     (GHC.ST.ST GHC.Prim.RealWorld))
                                0#
                                (Data.Vector.Mutable.uninitialised @ Lib.BedRecord)
                                s114
                                  `cast`
                                (Nth:2
                                     (Nth:2
                                          (Trans
                                               (<GHC.ST.STRep
                                                   GHC.Prim.RealWorld
                                                   (Data.Primitive.Array.MutableArray
                                                      (Control.Monad.Primitive.PrimState
                                                         (GHC.ST.ST GHC.Prim.RealWorld))
                                                      Lib.BedRecord)>_R
                                                ->_R Sym (GHC.ST.N:ST[0]
                                                              <GHC.Prim.RealWorld>_N
                                                              <Data.Primitive.Array.MutableArray
                                                                 (Control.Monad.Primitive.PrimState
                                                                    (GHC.ST.ST GHC.Prim.RealWorld))
                                                                 Lib.BedRecord>_R))
                                               (((GHC.Prim.State#
                                                    (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                              <GHC.Prim.RealWorld>_N)))_R
                                                 ->_R ((#,#)
                                                         <'GHC.Types.TupleRep '[]>_R
                                                         <'GHC.Types.LiftedRep>_R
                                                         (GHC.Prim.State#
                                                            (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                      <GHC.Prim.RealWorld>_N)))_R
                                                         <Data.Primitive.Array.MutableArray
                                                            (Control.Monad.Primitive.PrimState
                                                               (GHC.ST.ST GHC.Prim.RealWorld))
                                                            Lib.BedRecord>_R)_R)
                                                ->_R <GHC.ST.ST
                                                        GHC.Prim.RealWorld
                                                        (Data.Primitive.Array.MutableArray
                                                           (Control.Monad.Primitive.PrimState
                                                              (GHC.ST.ST GHC.Prim.RealWorld))
                                                           Lib.BedRecord)>_R)))) of ds6 { (#,#) ipv ipv1 ->
                         Lib.$wfoldlM_loop3
                           GHC.Types.SPEC
                           0#
                           0#
                           ipv1
                             `cast`
                           (GHC.Prim.MutableArray#
                              (Control.Monad.Primitive.D:R:PrimStateST[0] <GHC.Prim.RealWorld>_N)
                              <Lib.BedRecord>_R)_R
                           0#
                           (GHC.Base.map
                              @ Lib.MasterRecord
                              @ Lib.BedRecord
                              Lib.getFPrimerBEDfromMaster
                              (Data.OldList.sortBy
                                 @ Lib.MasterRecord
                                 Lib.$fOrdMasterRecord_$ccompare
                                 mrecs))
                           ipv
                             `cast`
                           (Nth:2
                                (Nth:3
                                     (Nth:2
                                          (Trans
                                               (((GHC.Prim.State#
                                                    (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                         <GHC.Prim.RealWorld>_N))_R
                                                 ->_R ((#,#)
                                                         <'GHC.Types.TupleRep '[]>_R
                                                         <'GHC.Types.LiftedRep>_R
                                                         (GHC.Prim.State#
                                                            (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                 <GHC.Prim.RealWorld>_N))_R
                                                         <Data.Primitive.Array.MutableArray
                                                            (Control.Monad.Primitive.PrimState
                                                               (GHC.ST.ST GHC.Prim.RealWorld))
                                                            Lib.BedRecord>_R)_R)
                                                ->_R <GHC.ST.ST
                                                        GHC.Prim.RealWorld
                                                        (Data.Primitive.Array.MutableArray
                                                           (Control.Monad.Primitive.PrimState
                                                              (GHC.ST.ST GHC.Prim.RealWorld))
                                                           Lib.BedRecord)>_R)
                                               (<GHC.ST.STRep
                                                   GHC.Prim.RealWorld
                                                   (Data.Primitive.Array.MutableArray
                                                      (Control.Monad.Primitive.PrimState
                                                         (GHC.ST.ST GHC.Prim.RealWorld))
                                                      Lib.BedRecord)>_R
                                                ->_R GHC.ST.N:ST[0]
                                                         <GHC.Prim.RealWorld>_N
                                                         <Data.Primitive.Array.MutableArray
                                                            (Control.Monad.Primitive.PrimState
                                                               (GHC.ST.ST GHC.Prim.RealWorld))
                                                            Lib.BedRecord>_R))))) }) of ds6 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
835ae8e0f516569fa8bece0b21468066
  masterToRPrimerBED :: [Lib.MasterRecord] -> Lib.BED
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (mrecs :: [Lib.MasterRecord]) ->
                 case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                             Data.Vector.Vector Lib.BedRecord #)
                        (\ (s114 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newArray#
                                @ Lib.BedRecord
                                @ (Control.Monad.Primitive.PrimState
                                     (GHC.ST.ST GHC.Prim.RealWorld))
                                0#
                                (Data.Vector.Mutable.uninitialised @ Lib.BedRecord)
                                s114
                                  `cast`
                                (Nth:2
                                     (Nth:2
                                          (Trans
                                               (<GHC.ST.STRep
                                                   GHC.Prim.RealWorld
                                                   (Data.Primitive.Array.MutableArray
                                                      (Control.Monad.Primitive.PrimState
                                                         (GHC.ST.ST GHC.Prim.RealWorld))
                                                      Lib.BedRecord)>_R
                                                ->_R Sym (GHC.ST.N:ST[0]
                                                              <GHC.Prim.RealWorld>_N
                                                              <Data.Primitive.Array.MutableArray
                                                                 (Control.Monad.Primitive.PrimState
                                                                    (GHC.ST.ST GHC.Prim.RealWorld))
                                                                 Lib.BedRecord>_R))
                                               (((GHC.Prim.State#
                                                    (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                              <GHC.Prim.RealWorld>_N)))_R
                                                 ->_R ((#,#)
                                                         <'GHC.Types.TupleRep '[]>_R
                                                         <'GHC.Types.LiftedRep>_R
                                                         (GHC.Prim.State#
                                                            (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                      <GHC.Prim.RealWorld>_N)))_R
                                                         <Data.Primitive.Array.MutableArray
                                                            (Control.Monad.Primitive.PrimState
                                                               (GHC.ST.ST GHC.Prim.RealWorld))
                                                            Lib.BedRecord>_R)_R)
                                                ->_R <GHC.ST.ST
                                                        GHC.Prim.RealWorld
                                                        (Data.Primitive.Array.MutableArray
                                                           (Control.Monad.Primitive.PrimState
                                                              (GHC.ST.ST GHC.Prim.RealWorld))
                                                           Lib.BedRecord)>_R)))) of ds6 { (#,#) ipv ipv1 ->
                         Lib.$wfoldlM_loop2
                           GHC.Types.SPEC
                           0#
                           0#
                           ipv1
                             `cast`
                           (GHC.Prim.MutableArray#
                              (Control.Monad.Primitive.D:R:PrimStateST[0] <GHC.Prim.RealWorld>_N)
                              <Lib.BedRecord>_R)_R
                           0#
                           (GHC.Base.map
                              @ Lib.MasterRecord
                              @ Lib.BedRecord
                              Lib.getRPrimerBEDfromMaster
                              (Data.OldList.sortBy
                                 @ Lib.MasterRecord
                                 Lib.$fOrdMasterRecord_$ccompare
                                 mrecs))
                           ipv
                             `cast`
                           (Nth:2
                                (Nth:3
                                     (Nth:2
                                          (Trans
                                               (((GHC.Prim.State#
                                                    (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                         <GHC.Prim.RealWorld>_N))_R
                                                 ->_R ((#,#)
                                                         <'GHC.Types.TupleRep '[]>_R
                                                         <'GHC.Types.LiftedRep>_R
                                                         (GHC.Prim.State#
                                                            (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                 <GHC.Prim.RealWorld>_N))_R
                                                         <Data.Primitive.Array.MutableArray
                                                            (Control.Monad.Primitive.PrimState
                                                               (GHC.ST.ST GHC.Prim.RealWorld))
                                                            Lib.BedRecord>_R)_R)
                                                ->_R <GHC.ST.ST
                                                        GHC.Prim.RealWorld
                                                        (Data.Primitive.Array.MutableArray
                                                           (Control.Monad.Primitive.PrimState
                                                              (GHC.ST.ST GHC.Prim.RealWorld))
                                                           Lib.BedRecord)>_R)
                                               (<GHC.ST.STRep
                                                   GHC.Prim.RealWorld
                                                   (Data.Primitive.Array.MutableArray
                                                      (Control.Monad.Primitive.PrimState
                                                         (GHC.ST.ST GHC.Prim.RealWorld))
                                                      Lib.BedRecord)>_R
                                                ->_R GHC.ST.N:ST[0]
                                                         <GHC.Prim.RealWorld>_N
                                                         <Data.Primitive.Array.MutableArray
                                                            (Control.Monad.Primitive.PrimState
                                                               (GHC.ST.ST GHC.Prim.RealWorld))
                                                            Lib.BedRecord>_R))))) }) of ds6 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
b92fc5cc374b37f5c62ccce08303a88c
  masterToTargetBED :: [Lib.MasterRecord] -> Lib.BED
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (mrecs :: [Lib.MasterRecord]) ->
                 case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                             Data.Vector.Vector Lib.BedRecord #)
                        (\ (s114 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newArray#
                                @ Lib.BedRecord
                                @ (Control.Monad.Primitive.PrimState
                                     (GHC.ST.ST GHC.Prim.RealWorld))
                                0#
                                (Data.Vector.Mutable.uninitialised @ Lib.BedRecord)
                                s114
                                  `cast`
                                (Nth:2
                                     (Nth:2
                                          (Trans
                                               (<GHC.ST.STRep
                                                   GHC.Prim.RealWorld
                                                   (Data.Primitive.Array.MutableArray
                                                      (Control.Monad.Primitive.PrimState
                                                         (GHC.ST.ST GHC.Prim.RealWorld))
                                                      Lib.BedRecord)>_R
                                                ->_R Sym (GHC.ST.N:ST[0]
                                                              <GHC.Prim.RealWorld>_N
                                                              <Data.Primitive.Array.MutableArray
                                                                 (Control.Monad.Primitive.PrimState
                                                                    (GHC.ST.ST GHC.Prim.RealWorld))
                                                                 Lib.BedRecord>_R))
                                               (((GHC.Prim.State#
                                                    (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                              <GHC.Prim.RealWorld>_N)))_R
                                                 ->_R ((#,#)
                                                         <'GHC.Types.TupleRep '[]>_R
                                                         <'GHC.Types.LiftedRep>_R
                                                         (GHC.Prim.State#
                                                            (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                      <GHC.Prim.RealWorld>_N)))_R
                                                         <Data.Primitive.Array.MutableArray
                                                            (Control.Monad.Primitive.PrimState
                                                               (GHC.ST.ST GHC.Prim.RealWorld))
                                                            Lib.BedRecord>_R)_R)
                                                ->_R <GHC.ST.ST
                                                        GHC.Prim.RealWorld
                                                        (Data.Primitive.Array.MutableArray
                                                           (Control.Monad.Primitive.PrimState
                                                              (GHC.ST.ST GHC.Prim.RealWorld))
                                                           Lib.BedRecord)>_R)))) of ds6 { (#,#) ipv ipv1 ->
                         Lib.$wfoldlM_loop4
                           GHC.Types.SPEC
                           0#
                           0#
                           ipv1
                             `cast`
                           (GHC.Prim.MutableArray#
                              (Control.Monad.Primitive.D:R:PrimStateST[0] <GHC.Prim.RealWorld>_N)
                              <Lib.BedRecord>_R)_R
                           0#
                           (GHC.Base.map
                              @ Lib.MasterRecord
                              @ Lib.BedRecord
                              Lib.getTargetBEDfromMaster
                              (Data.OldList.sortBy
                                 @ Lib.MasterRecord
                                 Lib.$fOrdMasterRecord_$ccompare
                                 mrecs))
                           ipv
                             `cast`
                           (Nth:2
                                (Nth:3
                                     (Nth:2
                                          (Trans
                                               (((GHC.Prim.State#
                                                    (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                         <GHC.Prim.RealWorld>_N))_R
                                                 ->_R ((#,#)
                                                         <'GHC.Types.TupleRep '[]>_R
                                                         <'GHC.Types.LiftedRep>_R
                                                         (GHC.Prim.State#
                                                            (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                 <GHC.Prim.RealWorld>_N))_R
                                                         <Data.Primitive.Array.MutableArray
                                                            (Control.Monad.Primitive.PrimState
                                                               (GHC.ST.ST GHC.Prim.RealWorld))
                                                            Lib.BedRecord>_R)_R)
                                                ->_R <GHC.ST.ST
                                                        GHC.Prim.RealWorld
                                                        (Data.Primitive.Array.MutableArray
                                                           (Control.Monad.Primitive.PrimState
                                                              (GHC.ST.ST GHC.Prim.RealWorld))
                                                           Lib.BedRecord)>_R)
                                               (<GHC.ST.STRep
                                                   GHC.Prim.RealWorld
                                                   (Data.Primitive.Array.MutableArray
                                                      (Control.Monad.Primitive.PrimState
                                                         (GHC.ST.ST GHC.Prim.RealWorld))
                                                      Lib.BedRecord)>_R
                                                ->_R GHC.ST.N:ST[0]
                                                         <GHC.Prim.RealWorld>_N
                                                         <Data.Primitive.Array.MutableArray
                                                            (Control.Monad.Primitive.PrimState
                                                               (GHC.ST.ST GHC.Prim.RealWorld))
                                                            Lib.BedRecord>_R))))) }) of ds6 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
247b4566232ece3fccfe00cf11e43b50
  masterparser ::
    Data.Attoparsec.ByteString.Internal.Parser Lib.MasterRecord
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.createprimerbedmaps15
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <Lib.MasterRecord>_R)) -}
8559d0b44695806151a5bc1692dff6d3
  mateMapped :: Lib.SAMFlag -> GHC.Types.Bool
  RecSel Left Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLLLLLLL),1*U(A,1*U,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.SAMFlag) ->
                 case ds6 of wild { Lib.SAMFlag ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds8 }) -}
8559d0b44695806151a5bc1692dff6d3
  mateNeg :: Lib.SAMFlag -> GHC.Types.Bool
  RecSel Left Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSLLLLLL),1*U(A,A,A,A,A,1*U,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.SAMFlag) ->
                 case ds6 of wild { Lib.SAMFlag ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds12 }) -}
e84d95f7c553a7e98bb578b6a27683cc
  mchrom :: Lib.MasterRecord -> Lib.UChr
  RecSel Left Lib.MasterRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(1*U,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MasterRecord) ->
                 case ds6 of wild { Lib.MasterRecord ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds7 }) -}
e84d95f7c553a7e98bb578b6a27683cc
  mforend :: Lib.MasterRecord -> GHC.Integer.Type.Integer
  RecSel Left Lib.MasterRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSLLLLLL),1*U(A,A,A,A,A,1*U,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MasterRecord) ->
                 case ds6 of wild { Lib.MasterRecord ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds12 }) -}
e84d95f7c553a7e98bb578b6a27683cc
  mforname :: Lib.MasterRecord -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.MasterRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLSLLL),1*U(A,A,A,A,A,A,A,A,1*U(U,U,U,U),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MasterRecord) ->
                 case ds6 of wild { Lib.MasterRecord ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds15 }) -}
e84d95f7c553a7e98bb578b6a27683cc
  mforseq :: Lib.MasterRecord -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.MasterRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLSL),1*U(A,A,A,A,A,A,A,A,A,A,1*U(U,U,U,U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MasterRecord) ->
                 case ds6 of wild { Lib.MasterRecord ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds17 }) -}
e84d95f7c553a7e98bb578b6a27683cc
  mforstart :: Lib.MasterRecord -> GHC.Integer.Type.Integer
  RecSel Left Lib.MasterRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLLLLLLL),1*U(A,A,A,A,1*U,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MasterRecord) ->
                 case ds6 of wild { Lib.MasterRecord ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds11 }) -}
21071c975426d6ea93962a8c0a55430b
  mid :: Lib.AlignedRead -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLSLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U,U,U,U),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds34 }) -}
26e2207e507d4bc5b47a3c19f626e7fd
  midseq :: Lib.MidFamily -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.MidFamily
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLLLLL),1*U(A,A,A,1*U(U,U,U,U),A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MidFamily) ->
                 case ds6 of wild { Lib.MidFamily ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds10 }) -}
e84d95f7c553a7e98bb578b6a27683cc
  mrevend :: Lib.MasterRecord -> GHC.Integer.Type.Integer
  RecSel Left Lib.MasterRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLSLLLL),1*U(A,A,A,A,A,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MasterRecord) ->
                 case ds6 of wild { Lib.MasterRecord ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds14 }) -}
e84d95f7c553a7e98bb578b6a27683cc
  mrevname :: Lib.MasterRecord -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.MasterRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLSLL),1*U(A,A,A,A,A,A,A,A,A,1*U(U,U,U,U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MasterRecord) ->
                 case ds6 of wild { Lib.MasterRecord ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds16 }) -}
e84d95f7c553a7e98bb578b6a27683cc
  mrevseq :: Lib.MasterRecord -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.MasterRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLS),1*U(A,A,A,A,A,A,A,A,A,A,A,1*U(U,U,U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MasterRecord) ->
                 case ds6 of wild { Lib.MasterRecord ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds18 }) -}
e84d95f7c553a7e98bb578b6a27683cc
  mrevstart :: Lib.MasterRecord -> GHC.Integer.Type.Integer
  RecSel Left Lib.MasterRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLSLLLLL),1*U(A,A,A,A,A,A,1*U,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MasterRecord) ->
                 case ds6 of wild { Lib.MasterRecord ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds13 }) -}
e84d95f7c553a7e98bb578b6a27683cc
  mtargetend :: Lib.MasterRecord -> GHC.Integer.Type.Integer
  RecSel Left Lib.MasterRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLL),1*U(A,A,1*U,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MasterRecord) ->
                 case ds6 of wild { Lib.MasterRecord ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds9 }) -}
e84d95f7c553a7e98bb578b6a27683cc
  mtargetstart :: Lib.MasterRecord -> GHC.Integer.Type.Integer
  RecSel Left Lib.MasterRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLLLLLLL),1*U(A,1*U,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MasterRecord) ->
                 case ds6 of wild { Lib.MasterRecord ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds8 }) -}
26e2207e507d4bc5b47a3c19f626e7fd
  negtxposdcnt :: Lib.MidFamily -> GHC.Integer.Type.Integer
  RecSel Left Lib.MidFamily
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLSL),1*U(A,A,A,A,A,A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MidFamily) ->
                 case ds6 of wild { Lib.MidFamily ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds15 }) -}
a235e4067d20bb00988f53f9efd90424
  noclip ::
    (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
    -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S(LS(SLSS)),1*U(A,1*U(U,U,U,U))>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: (GHC.Integer.Type.Integer,
                          Data.ByteString.Internal.ByteString)) ->
                 case w of ww { (,) ww1 ww2 ->
                 case ww2 of ww3 { Data.ByteString.Internal.PS ww4 ww5 ww6 ww7 ->
                 Lib.$wnoclip ww4 ww5 ww6 ww7 } }) -}
b8003c4ce65497f27e9f0ab16ace9b86
  noclip1 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.noclip_addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.noclip_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
f99febd1da99553d671481ac3329de0d
  noclip2 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.noclip_addr#1
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.noclip_addr#1
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
b39c8279d24c543521fe7e5a06e4fa57
  noclip_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("S"#) -}
8ee32158cafa4d768de2e5ac6f68654a
  noclip_addr#1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("H"#) -}
1764d4aecde3e04429bb9c767e828686
  nohardclip ::
    (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
    -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S(LS(SLSS)),1*U(A,1*U(U,U,U,U))>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: (GHC.Integer.Type.Integer,
                          Data.ByteString.Internal.ByteString)) ->
                 case w of ww { (,) ww1 ww2 ->
                 case ww2 of ww3 { Data.ByteString.Internal.PS ww4 ww5 ww6 ww7 ->
                 Lib.$wnohardclip ww4 ww5 ww6 ww7 } }) -}
0a7382567dea613e4b1961822b989d16
  nomapCigToNomapRname ::
    Data.ByteString.Internal.ByteString -> Lib.UChr -> Lib.UChr
  {- Arity: 2, Strictness: <S(SLSS),1*U(U,U,U,U)><L,1*U>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.ByteString.Internal.ByteString) (w1 :: Lib.UChr) ->
                 case w of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wnomapCigToNomapRname ww1 ww2 ww3 ww4 w1 }) -}
e8589923d781f67425346bcee65ff573
  nopadding ::
    (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
    -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S(LS(SLSS)),1*U(A,1*U(U,U,U,U))>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: (GHC.Integer.Type.Integer,
                          Data.ByteString.Internal.ByteString)) ->
                 case w of ww { (,) ww1 ww2 ->
                 case ww2 of ww3 { Data.ByteString.Internal.PS ww4 ww5 ww6 ww7 ->
                 Lib.$wnopadding ww4 ww5 ww6 ww7 } }) -}
8559d0b44695806151a5bc1692dff6d3
  notMapped :: Lib.SAMFlag -> GHC.Types.Bool
  RecSel Left Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLL),1*U(A,A,1*U,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.SAMFlag) ->
                 case ds6 of wild { Lib.SAMFlag ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds9 }) -}
8559d0b44695806151a5bc1692dff6d3
  notPrimary :: Lib.SAMFlag -> GHC.Types.Bool
  RecSel Left Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLSLLL),1*U(A,A,A,A,A,A,A,A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.SAMFlag) ->
                 case ds6 of wild { Lib.SAMFlag ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds15 }) -}
9d5715e257a13ade6f5fb19dc61e4351
  optargs :: Options.Applicative.Types.Parser Lib.Opts
  {- Unfolding: (Options.Applicative.Types.MultP
                   @ Lib.Opts
                   @ GHC.Base.String
                   Lib.optargs8
                   Lib.optargs1) -}
647f2287b82dd3cc37f054290a87e8b6
  optargs1 :: Options.Applicative.Types.Parser GHC.Base.String
  {- Strictness: m4,
     Unfolding: (Options.Applicative.Types.AltP
                   @ GHC.Base.String
                   Lib.optargs2
                   (Options.Applicative.Types.$fAlternativeParser_$cempty
                      @ GHC.Base.String)) -}
9af88ecb05d1605f1a5454a0669ca6a6
  optargs10 :: Options.Applicative.Types.Parser GHC.Base.String
  {- Strictness: m2,
     Unfolding: (Options.Applicative.Types.OptP
                   @ GHC.Base.String
                   Lib.optargs11) -}
8d425544e878c0ae4cce878df8c5ed56
  optargs11 :: Options.Applicative.Types.Option GHC.Base.String
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.Option
                   @ GHC.Base.String
                   Lib.optargs6
                   Lib.optargs12) -}
ec524a233c6a68c94e36df2700400d81
  optargs12 :: Options.Applicative.Types.OptProperties
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.OptProperties
                   Options.Applicative.Types.Visible
                   (GHC.Base.Nothing @ Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                     `cast`
                   (Sym (Options.Applicative.Help.Chunk.N:Chunk[0]) <Text.PrettyPrint.ANSI.Leijen.Internal.Doc>_N)
                   Lib.optargs_var1
                   (GHC.Base.Nothing @ GHC.Base.String)
                   (GHC.Base.Nothing
                      @ (Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                         -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc))) -}
bda76d4757e5bef46b7674c1853afd8b
  optargs13 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("SAM_INFILE"#) -}
0eec073f37b1f25fd996c6c60c6777f8
  optargs14 ::
    Options.Applicative.Types.Parser
      (GHC.Base.String -> GHC.Base.String -> Lib.Opts)
  {- Unfolding: (Options.Applicative.Types.MultP
                   @ (GHC.Base.String -> GHC.Base.String -> Lib.Opts)
                   @ GHC.Base.String
                   Lib.optargs20
                   Lib.optargs15) -}
1030cc45e1e94beffeb8727a61a9c456
  optargs15 :: Options.Applicative.Types.Parser GHC.Base.String
  {- Strictness: m4,
     Unfolding: (Options.Applicative.Types.AltP
                   @ GHC.Base.String
                   Lib.optargs16
                   (Options.Applicative.Types.$fAlternativeParser_$cempty
                      @ GHC.Base.String)) -}
2ddecc04da7cd2a074dbc07593026286
  optargs16 :: Options.Applicative.Types.Parser GHC.Base.String
  {- Strictness: m2,
     Unfolding: (Options.Applicative.Types.OptP
                   @ GHC.Base.String
                   Lib.optargs17) -}
2366149a0b930daba5380c2993ade7ef
  optargs17 :: Options.Applicative.Types.Option GHC.Base.String
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.Option
                   @ GHC.Base.String
                   Lib.optargs6
                   Lib.optargs18) -}
a15068d84f30e6fcff275793a43109e1
  optargs18 :: Options.Applicative.Types.OptProperties
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.OptProperties
                   Options.Applicative.Types.Visible
                   (GHC.Base.Nothing @ Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                     `cast`
                   (Sym (Options.Applicative.Help.Chunk.N:Chunk[0]) <Text.PrettyPrint.ANSI.Leijen.Internal.Doc>_N)
                   Lib.optargs_var2
                   (GHC.Base.Nothing @ GHC.Base.String)
                   (GHC.Base.Nothing
                      @ (Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                         -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc))) -}
912aed3702088df2c04e4ad616305db5
  optargs19 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("PRIMER_COORDS_INFILE"#) -}
699365fbbd1ab3255b7c8170958a6cad
  optargs2 :: Options.Applicative.Types.Parser GHC.Base.String
  {- Strictness: m2,
     Unfolding: (Options.Applicative.Types.OptP
                   @ GHC.Base.String
                   Lib.optargs3) -}
1983e9c28f52ecf248c4b9886aa82fac
  optargs20 ::
    Options.Applicative.Types.Parser
      (GHC.Base.String -> GHC.Base.String -> GHC.Base.String -> Lib.Opts)
  {- Unfolding: (Options.Applicative.Types.$fApplicativeParser_$cfmap
                   @ GHC.Types.Bool
                   @ (GHC.Base.String
                      -> GHC.Base.String -> GHC.Base.String -> Lib.Opts)
                   Lib.Opts
                   Lib.optargs21) -}
2ce26f24f3cda03fa4aed6b218e229f2
  optargs21 :: Options.Applicative.Types.Parser GHC.Types.Bool
  {- Strictness: m4,
     Unfolding: (Options.Applicative.Types.AltP
                   @ GHC.Types.Bool
                   Lib.optargs22
                   Options.Applicative.Builder.switch1) -}
42dfc811cecba15d21a84539c66db600
  optargs22 :: Options.Applicative.Types.Parser GHC.Types.Bool
  {- Strictness: m4,
     Unfolding: (Options.Applicative.Types.AltP
                   @ GHC.Types.Bool
                   Lib.optargs23
                   (Options.Applicative.Types.$fAlternativeParser_$cempty
                      @ GHC.Types.Bool)) -}
04008b293566512fd6865a25643769b4
  optargs23 :: Options.Applicative.Types.Parser GHC.Types.Bool
  {- Strictness: m2,
     Unfolding: (Options.Applicative.Types.OptP
                   @ GHC.Types.Bool
                   Lib.optargs24) -}
543f6bbe5587f312f1153c62b4d2a916
  optargs24 :: Options.Applicative.Types.Option GHC.Types.Bool
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.Option
                   @ GHC.Types.Bool
                   Lib.optargs27
                   Lib.optargs25) -}
f56c9a0c51e62da8e09b1a392f1660bf
  optargs25 :: Options.Applicative.Types.OptProperties
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.OptProperties
                   Options.Applicative.Types.Visible
                   Lib.optargs_lvl7
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Base.Nothing @ GHC.Base.String)
                   (GHC.Base.Nothing
                      @ (Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                         -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc))) -}
c3834e6867abfba33144b2b9dc6e98b4
  optargs26 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("add this switch to use BEDPE coordinate input format (default format is master file)"#) -}
f995909f5f6d700ec4696f9fa85c3466
  optargs27 :: Options.Applicative.Types.OptReader GHC.Types.Bool
  {- Strictness: m2,
     Unfolding: (Options.Applicative.Types.FlagReader
                   @ GHC.Types.Bool
                   Lib.optargs28
                   GHC.Types.True) -}
9133d68e5b734e2534f3299c9a42bc0f
  optargs28 :: [Options.Applicative.Types.OptName]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Options.Applicative.Types.OptName
                   Lib.optargs_n1
                   Lib.optargs29) -}
13eb8483625081d84e966fe974b08bce
  optargs29 :: [Options.Applicative.Types.OptName]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Options.Applicative.Types.OptName
                   Lib.optargs_n
                   (GHC.Types.[] @ Options.Applicative.Types.OptName)) -}
4ee2f542b34c2647c3e682e10e064206
  optargs3 :: Options.Applicative.Types.Option GHC.Base.String
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.Option
                   @ GHC.Base.String
                   Lib.optargs6
                   Lib.optargs4) -}
9b9e91d63b54bf02e6a88674c43a5c44
  optargs30 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# Lib.optargs31) -}
643a438a8a58f259e66de81e9f5ea275
  optargs31 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("bedpe"#) -}
c2abff285fef76f3e818aca4bd522b03
  optargs4 :: Options.Applicative.Types.OptProperties
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.OptProperties
                   Options.Applicative.Types.Visible
                   (GHC.Base.Nothing @ Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                     `cast`
                   (Sym (Options.Applicative.Help.Chunk.N:Chunk[0]) <Text.PrettyPrint.ANSI.Leijen.Internal.Doc>_N)
                   Lib.optargs_var
                   (GHC.Base.Nothing @ GHC.Base.String)
                   (GHC.Base.Nothing
                      @ (Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                         -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc))) -}
ed8bb2d90f2b8a08dccd41edbfdcbe92
  optargs5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("OUTPUT_SAM_FILENAME"#) -}
e94b02bf1165c09a714b328229b19c96
  optargs6 :: Options.Applicative.Types.OptReader GHC.Base.String
  {- HasNoCafRefs, Strictness: m3,
     Unfolding: (Options.Applicative.Types.ArgReader
                   @ GHC.Base.String
                   Lib.optargs7) -}
04bb23bbf0944f7c98f831fd6dcdb145
  optargs7 :: Options.Applicative.Types.CReader GHC.Base.String
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Options.Applicative.Types.CReader
                   @ GHC.Base.String
                   Options.Applicative.Types.$fMonoidCompleter3
                     `cast`
                   (Trans
                        (<GHC.Base.String>_R
                         ->_R Sym (GHC.Types.N:IO[0] <[GHC.Base.String]>_R))
                        (Sym (Options.Applicative.Types.N:Completer[0])))
                   (Data.Either.Right
                      @ Options.Applicative.Types.ParseError
                      @ GHC.Base.String)
                     `cast`
                   (Trans
                        (<GHC.Base.String>_R
                         ->_R Nth:3
                                  (Trans
                                       (<Control.Monad.Trans.Except.ExceptT
                                           Options.Applicative.Types.ParseError
                                           Data.Functor.Identity.Identity
                                           GHC.Base.String>_R
                                        ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                                      <Data.Either.Either
                                                         Options.Applicative.Types.ParseError
                                                         GHC.Base.String>_R))
                                       (<Control.Monad.Trans.Except.ExceptT
                                           Options.Applicative.Types.ParseError
                                           Data.Functor.Identity.Identity
                                           GHC.Base.String>_R
                                        ->_R Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                      <Options.Applicative.Types.ParseError>_N
                                                      <Data.Functor.Identity.Identity>_R
                                                      <GHC.Base.String>_N))))
                        (Trans
                             (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                       <*>_N
                                       <GHC.Base.String>_R
                                       <Control.Monad.Trans.Except.Except
                                          Options.Applicative.Types.ParseError>_R
                                       <GHC.Base.String>_N))
                             (Sym (Options.Applicative.Types.N:ReadM[0]) <GHC.Base.String>_N)))) -}
80dd056ea94ef315ac3dcfb0690c666e
  optargs8 ::
    Options.Applicative.Types.Parser (GHC.Base.String -> Lib.Opts)
  {- Unfolding: (Options.Applicative.Types.MultP
                   @ (GHC.Base.String -> Lib.Opts)
                   @ GHC.Base.String
                   Lib.optargs14
                   Lib.optargs9) -}
e002b3173a88771749ab828fd6f61d53
  optargs9 :: Options.Applicative.Types.Parser GHC.Base.String
  {- Strictness: m4,
     Unfolding: (Options.Applicative.Types.AltP
                   @ GHC.Base.String
                   Lib.optargs10
                   (Options.Applicative.Types.$fAlternativeParser_$cempty
                      @ GHC.Base.String)) -}
bdb272108936e5d9871bc55536a8a12e
  optargs_lvl7 ::
    Options.Applicative.Help.Chunk.Chunk
      Text.PrettyPrint.ANSI.Leijen.Internal.Doc
  {- Unfolding: (Options.Applicative.Help.Chunk.paragraph_go
                   (GHC.CString.unpackCString# Lib.optargs26)) -}
aee0e99d823acb7b28521d10c5f531f9
  optargs_n :: Options.Applicative.Types.OptName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (Options.Applicative.Types.OptShort 'b'#) -}
fb41611f694425a65cea8c18a1770d8d
  optargs_n1 :: Options.Applicative.Types.OptName
  {- Strictness: m2,
     Unfolding: (Options.Applicative.Types.OptLong Lib.optargs30) -}
703d054dc58784ee5e9c87178d7219ad
  optargs_var :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# Lib.optargs5) -}
e58ae01dae6899688225d3095022c3d0
  optargs_var1 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# Lib.optargs13) -}
72f50d071409c7b76862f26db7481f46
  optargs_var2 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# Lib.optargs19) -}
fbeb6e6a9c64ace85603f29e30cf00f8
  optasp ::
    Data.Attoparsec.ByteString.Internal.Parser
      Data.ByteString.Internal.ByteString
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.optasp1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)) -}
d8ed773641d41e84861c41ed036cb675
  optasp1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww { GHC.Types.I# ww1 ->
                 Lib.$woptasp @ r w ww1 w2 w3 w4 }) -}
7024f6841c65f3218f1b218fa17d6915
  optfieldp ::
    Data.Attoparsec.ByteString.Internal.Parser
      Data.ByteString.Internal.ByteString
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.optfieldp1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)) -}
5c6e8291f046c3a2f901033c5c901111
  optfieldp1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww { GHC.Types.I# ww1 ->
                 Lib.$woptfieldp @ r w ww1 w2 w3 w4 }) -}
00b8a4588352bdcf89b6309b52fb5678
  optfieldp2 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww { GHC.Types.I# ww1 ->
                 Lib.$woptxsp @ r w ww1 w2 w3 w4 }) -}
7cca586312dfeb1e5bd886648821d9d8
  optfieldpEOL ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString [GHC.Types.Char]
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.optfieldpEOL1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <[GHC.Types.Char]>_R)) -}
ba14583eb2d82df86bb857b07a2f870e
  optfieldpEOL1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [GHC.Types.Char]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w2 :: Data.Attoparsec.Internal.Types.State
                            Data.ByteString.Internal.ByteString)
                   (w3 :: Data.Attoparsec.Internal.Types.Pos)
                   (w4 :: Data.Attoparsec.Internal.Types.More)
                   (w5 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w6 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [GHC.Types.Char]
                            r) ->
                 case w3
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww { GHC.Types.I# ww1 ->
                 Data.Attoparsec.Combinator.$w$smanyTill1
                   @ GHC.Types.Char
                   @ ()
                   Lib.optfieldpEOL2
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                             <Data.ByteString.Internal.ByteString>_N <GHC.Types.Char>_R))
                   Data.Attoparsec.ByteString.Internal.endOfLine1
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                             <Data.ByteString.Internal.ByteString>_N <()>_R))
                   @ r
                   w2
                   ww1
                   w4
                   w5
                   w6 }) -}
5801efb4c85a178188b267669257c318
  optfieldpEOL2 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         GHC.Types.Char
         r
    -> Data.Attoparsec.ByteString.Internal.Result r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            GHC.Types.Char
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$woptfieldpEOL @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
2b316160cfd9b4d2690ce4cea5fec177
  optfieldpEOL3 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
3ff9cba48d1ff6c44dc5fb9209af01ea
  optfieldpEOL4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.optfieldpEOL5) -}
c8fd4318622677d7db7daf6a388a141f
  optfieldpEOL5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Failed reading: satisfyWith"#) -}
d8bdc48e6613b2cbd65c9f0adf47d92b
  optfieldpEOL6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("\r\n"#) -}
e7298e4b628bfbd01d8850e72f66ccdc
  optfieldpEOL_ds :: Data.Attoparsec.ByteString.FastSet.FastSet
  {- Unfolding: (Data.Attoparsec.ByteString.FastSet.charClass
                   (GHC.CString.unpackCString# Lib.optfieldpEOL6)) -}
21071c975426d6ea93962a8c0a55430b
  optfields :: Lib.AlignedRead -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLSLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds22 }) -}
112daf9efc62dcf1be87678362667f40
  optfieldsp ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString
      [Data.ByteString.Internal.ByteString]
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.optfieldsp1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <[Data.ByteString.Internal.ByteString]>_R)) -}
4d73f0982482c69bf1ab86ac0c489c8d
  optfieldsp1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [Data.ByteString.Internal.ByteString]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w2 :: Data.Attoparsec.Internal.Types.State
                            Data.ByteString.Internal.ByteString)
                   (w3 :: Data.Attoparsec.Internal.Types.Pos)
                   (w4 :: Data.Attoparsec.Internal.Types.More)
                   (w5 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w6 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [Data.ByteString.Internal.ByteString]
                            r) ->
                 case w3
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww { GHC.Types.I# ww1 ->
                 Data.Attoparsec.Combinator.$w$ssepBy'1
                   @ Data.ByteString.Internal.ByteString
                   @ GHC.Types.Char
                   Lib.optfieldsp5
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                             <Data.ByteString.Internal.ByteString>_N
                             <Data.ByteString.Internal.ByteString>_R))
                   Data.Attoparsec.ByteString.Char8.space
                   @ r
                   w2
                   ww1
                   w4
                   w6 }) -}
2c53099f011a369c6fd911aaabc46692
  optfieldsp2 ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString [[GHC.Types.Char]]
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.optfieldsp6
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <[[GHC.Types.Char]]>_R)) -}
4096a26fec8ce293178454eec0036e7f
  optfieldsp3 ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString
      [Data.ByteString.Internal.ByteString]
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.optfieldsp1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <[Data.ByteString.Internal.ByteString]>_R)) -}
ac0b53bf2ea7cfc9ead436278bcc9d11
  optfieldsp5 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wtxtfieldp @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w4 } }) -}
098e59dec0a07ffe072be2caaa7ffb41
  optfieldsp6 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [[GHC.Types.Char]]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w2 :: Data.Attoparsec.Internal.Types.State
                            Data.ByteString.Internal.ByteString)
                   (w3 :: Data.Attoparsec.Internal.Types.Pos)
                   (w4 :: Data.Attoparsec.Internal.Types.More)
                   (w5 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w6 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [[GHC.Types.Char]]
                            r) ->
                 case w3
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww { GHC.Types.I# ww1 ->
                 Data.Attoparsec.Combinator.$w$ssepBy'1
                   @ [GHC.Types.Char]
                   @ GHC.Types.Char
                   Lib.optfieldpEOL1
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                             <Data.ByteString.Internal.ByteString>_N <[GHC.Types.Char]>_R))
                   Data.Attoparsec.ByteString.Char8.space
                   @ r
                   w2
                   ww1
                   w4
                   w6 }) -}
e79338b6f7ecedf7e58d37a93dc553ee
  optfieldstotalp ::
    Data.Attoparsec.ByteString.Internal.Parser
      Data.ByteString.Internal.ByteString
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.optfieldstotalp1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)) -}
5b2848ff835a9b5742072920de1f352d
  optfieldstotalp1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$woptfieldstotalp @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w4 } }) -}
3aa819420ca24afb3bbfe8dc3c600473
  optidp ::
    Data.Attoparsec.ByteString.Internal.Parser
      Data.ByteString.Internal.ByteString
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.optidp1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)) -}
522f8d44a0acf14c68bf1f2697af27e5
  optidp1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww { GHC.Types.I# ww1 ->
                 Lib.$woptidp @ r w ww1 w2 w3 w4 }) -}
acb38a5daedbb76aa4fdeb29b959e9cf
  optidp2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.optidp_addr#1) -}
ef62ea067905e8a349fe0e2f5f3b71f1
  optidp3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.optidp_addr#) -}
d15de64a18aeb658441b9e44533ed35e
  optidp4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.optidp_addr#2) -}
bdd10524f3f7412457ba5795719435cb
  optidp_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("NM"#) -}
4d90571f5474ebc8a76f09b829c04bc5
  optidp_addr#1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("AS"#) -}
de08251cbe4404275559d5cc0a3b0254
  optidp_addr#2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("XS"#) -}
e040c5d1c5671545bf86470892353221
  optidp_m ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString
      Data.ByteString.Internal.ByteString
  {- Unfolding: (Data.Attoparsec.ByteString.Char8.$fIsStringParser_$cfromString
                   @ Data.ByteString.Internal.ByteString
                   (GHC.Types.Eq#
                      @ *
                      @ *
                      @ Data.ByteString.Internal.ByteString
                      @ Data.ByteString.Internal.ByteString
                      @~ <Data.ByteString.Internal.ByteString>_N)
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Data.ByteString.Internal.ByteString>_N <Data.ByteString.Internal.ByteString>_N)
                   Lib.optidp2) -}
b1c1b893ba7837fda2c9a109bbaecedb
  optidp_m1 ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString
      Data.ByteString.Internal.ByteString
  {- Unfolding: (Data.Attoparsec.ByteString.Char8.$fIsStringParser_$cfromString
                   @ Data.ByteString.Internal.ByteString
                   (GHC.Types.Eq#
                      @ *
                      @ *
                      @ Data.ByteString.Internal.ByteString
                      @ Data.ByteString.Internal.ByteString
                      @~ <Data.ByteString.Internal.ByteString>_N)
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Data.ByteString.Internal.ByteString>_N <Data.ByteString.Internal.ByteString>_N)
                   Lib.optidp3) -}
2bdab0442e31e292550194e1c79664c6
  optidp_m2 ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString
      Data.ByteString.Internal.ByteString
  {- Unfolding: (Data.Attoparsec.ByteString.Char8.$fIsStringParser_$cfromString
                   @ Data.ByteString.Internal.ByteString
                   (GHC.Types.Eq#
                      @ *
                      @ *
                      @ Data.ByteString.Internal.ByteString
                      @ Data.ByteString.Internal.ByteString
                      @~ <Data.ByteString.Internal.ByteString>_N)
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Data.ByteString.Internal.ByteString>_N <Data.ByteString.Internal.ByteString>_N)
                   Lib.optidp4) -}
abe6f283bc156f8c51c39969f9217858
  optidp_v :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.optidp_addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.optidp_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
66057e6d2563a7209297c3bed094243c
  optidp_v1 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.optidp_addr#2
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.optidp_addr#2
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
753638541028c5d7d4d66a7a629ce74f
  optidp_v2 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.optidp_addr#1
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.optidp_addr#1
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
b15b7bf1618475a21134989bbfc12d6c
  optnmp ::
    Data.Attoparsec.ByteString.Internal.Parser
      Data.ByteString.Internal.ByteString
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.optnmp1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)) -}
927c13e03e08bd2901403304f24160fd
  optnmp1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww { GHC.Types.I# ww1 ->
                 Lib.$woptnmp @ r w ww1 w2 w3 w4 }) -}
907d43ce54682da66b0f156ab8bd4708
  optxsp ::
    Data.Attoparsec.ByteString.Internal.Parser
      Data.ByteString.Internal.ByteString
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.optfieldp2
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)) -}
f06645d095bf16235fbe38a1fa974f4c
  outfilename :: Lib.Opts -> GHC.Base.String
  RecSel Left Lib.Opts
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLS),1*U(A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.Opts) ->
                 case ds6 of wild { Lib.Opts ds7 ds8 ds9 ds10 -> ds10 }) -}
8559d0b44695806151a5bc1692dff6d3
  pairNotMapped :: Lib.SAMFlag -> GHC.Types.Bool
  RecSel Left Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLLLLLLL),1*U(A,A,A,1*U,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.SAMFlag) ->
                 case ds6 of wild { Lib.SAMFlag ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds10 }) -}
21071c975426d6ea93962a8c0a55430b
  paired :: Lib.AlignedRead -> GHC.Types.Bool
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLSLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds24 }) -}
5a5dc9a767eb4f677ffebef92f7ee8b2
  pairedAlnToTuple ::
    Lib.PairedAln
    -> (Lib.AlignedRead, Lib.AlignedRead, [Lib.AlignedRead],
        [Lib.AlignedRead])
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(1*U,1*U,1*U,1*U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (p :: Lib.PairedAln) ->
                 (case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 -> ds6 },
                  case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 -> ds7 },
                  case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 -> ds8 },
                  case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 -> ds9 })) -}
8559d0b44695806151a5bc1692dff6d3
  pairedRead :: Lib.SAMFlag -> GHC.Types.Bool
  RecSel Left Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(1*U,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.SAMFlag) ->
                 case ds6 of wild { Lib.SAMFlag ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds7 }) -}
d1431994e170e0389ddf6431bdd3b51e
  pairedalnparser ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString Lib.PairedAln
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.pairedalnparser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <Lib.PairedAln>_R)) -}
8c0aa5e0c7e77f5c5fd71f409c2b092c
  pairedalnparser1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.PairedAln
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.PairedAln
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wpairedalnparser
                   @ r
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww8
                   w2
                   w3
                   w4 } }) -}
181d424bd733efee813c891eca5b131f
  parseAln ::
    Data.ByteString.Internal.ByteString
    -> Data.Either.Either GHC.Base.String Lib.AlignedRead
  {- Arity: 1, Strictness: <S(SLSS),1*U(U,U,U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.ByteString.Internal.ByteString) ->
                 case w of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wparseAln ww1 ww2 ww3 ww4 }) -}
45347a18a17866b7ea74401296d27a93
  parseAln1 :: Data.Either.Either GHC.Base.String Lib.AlignedRead
  {- Strictness: x -}
8712c539c9ee9c6421abc92dbcc73077
  parseAln2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (": "#) -}
0e6f77bb6726899f3da5e7eb1e978e45
  parseAln3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.parseAln4) -}
c4d23716401b26cedee619dff920037e
  parseAln4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (" > "#) -}
a2e6f24cfd3cda03a72456bd3f3fd098
  parseAlns ::
    [Data.ByteString.Internal.ByteString] -> Lib.Alignments
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (as :: [Data.ByteString.Internal.ByteString]) ->
                 Data.Either.rights
                   @ GHC.Base.String
                   @ Lib.AlignedRead
                   (GHC.Base.build
                      @ (Data.Either.Either GHC.Base.String Lib.AlignedRead)
                      (\ @ b1
                         (c2 :: Data.Either.Either GHC.Base.String Lib.AlignedRead
                                -> b1 -> b1)[OneShot]
                         (n :: b1)[OneShot] ->
                       GHC.Base.foldr
                         @ Data.ByteString.Internal.ByteString
                         @ b1
                         (GHC.Base.mapFB
                            @ (Data.Either.Either GHC.Base.String Lib.AlignedRead)
                            @ b1
                            @ Data.ByteString.Internal.ByteString
                            c2
                            Lib.parseAlns1)
                         n
                         as))) -}
efc609a9870ccbcbda5ca8b2cd30e230
  parseAlns1 ::
    Data.ByteString.Internal.ByteString
    -> Data.Either.Either GHC.Base.String Lib.AlignedRead
  {- Arity: 1,
     Unfolding: (Data.Attoparsec.ByteString.Internal.parseOnly
                   @ Lib.AlignedRead
                   Lib.alnparser1
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                             <Data.ByteString.Internal.ByteString>_N <Lib.AlignedRead>_R))) -}
cc5df0be9ce24d37ce39566cfac1d7d0
  parseBED ::
    Data.ByteString.Internal.ByteString
    -> Data.Either.Either GHC.Base.String Lib.BedRecord
  {- Arity: 1, Strictness: <S(SLSS),1*U(U,U,U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.ByteString.Internal.ByteString) ->
                 case w of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wparseBED ww1 ww2 ww3 ww4 }) -}
559b35bde31635d18b2cc84dca083aac
  parseBED1 :: Data.Either.Either GHC.Base.String Lib.BedRecord
  {- Strictness: x -}
fac0c9b6f630121f8dd7c198c3bdb466
  parseBEDPE ::
    Data.ByteString.Internal.ByteString
    -> Data.Either.Either GHC.Base.String Lib.BEDPE
  {- Arity: 1, Strictness: <S(SLSS),1*U(U,U,U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.ByteString.Internal.ByteString) ->
                 case w of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wparseBEDPE ww1 ww2 ww3 ww4 }) -}
3156f3fd9346b17f7ca1ba104259cb9e
  parseBEDPE1 :: Data.Either.Either GHC.Base.String Lib.BEDPE
  {- Strictness: x -}
1e542d3d77aebfe8922c4c625031f288
  parseCigar ::
    Data.ByteString.Internal.ByteString
    -> Data.Either.Either
         GHC.Base.String
         [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
  {- Arity: 1,
     Unfolding: (Data.Attoparsec.ByteString.Internal.parseOnly
                   @ [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                   Lib.parseCigar1
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                             <Data.ByteString.Internal.ByteString>_N
                             <[(GHC.Integer.Type.Integer,
                                Data.ByteString.Internal.ByteString)]>_R))) -}
ef72c2e8a1c17fa294be93ebbcc2a2ca
  parseCigar1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wparseCigar @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
0a37015a09df79c6645162e3b26260e6
  parsePairedAlns ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString [Lib.PairedAln]
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.parsePairedAlns1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <[Lib.PairedAln]>_R)) -}
5c08aa2368df0fe2fcdfdfcf0f16442a
  parsePairedAlns' ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString [[Lib.AlignedRead]]
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.parsePairedAlns'1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <[[Lib.AlignedRead]]>_R)) -}
edca70dad63975a226214000e7592702
  parsePairedAlns'1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [[Lib.AlignedRead]]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [[Lib.AlignedRead]]
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wparsePairedAlns'
                   @ r
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww8
                   w2
                   w3
                   w4 } }) -}
6903fce602b748f419ee227bba2a33b0
  parsePairedAlns1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [Lib.PairedAln]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [Lib.PairedAln]
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wparsePairedAlns
                   @ r
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww8
                   w2
                   w3
                   w4 } }) -}
8bd706e9ac9a2a21ae64a07fc3b1714d
  parsePairedAlnsFromSAM ::
    Data.ByteString.Internal.ByteString
    -> Data.Either.Either GHC.Base.String [Lib.PairedAln]
  {- Arity: 1, Strictness: <S(SLSS),1*U(U,U,U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.ByteString.Internal.ByteString) ->
                 case w of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wparsePairedAlnsFromSAM ww1 ww2 ww3 ww4 }) -}
a6e5ad6cc68734cd8ec26b8d235a5f44
  parsePairedAlnsFromSAM1 ::
    Data.Either.Either GHC.Base.String [Lib.PairedAln]
  {- Strictness: x -}
fdd8919a17fb6d6d82f4a86c9ae6417f
  parsePairedAlnsOrHdr ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString [Lib.PairedAln]
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.parsePairedAlnsOrHdr1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <[Lib.PairedAln]>_R)) -}
49419b428be4ed6582a5494ff0d643c7
  parsePairedAlnsOrHdr1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [Lib.PairedAln]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [Lib.PairedAln]
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wparsePairedAlnsOrHdr
                   @ r
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww8
                   w2
                   w3
                   w4 } }) -}
ac06fee11668c1a13882c85633355db2
  parseReadsetsFromSAM ::
    Data.ByteString.Internal.ByteString -> [[Lib.AlignedRead]]
  {- Arity: 1, Strictness: <S(SLSS),1*U(U,U,U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.ByteString.Internal.ByteString) ->
                 case w of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wparseReadsetsFromSAM ww1 ww2 ww3 ww4 }) -}
64393eee244ea73f625b118ca4bcce5a
  parseReadsetsFromSAM1 ::
    Data.Either.Either GHC.Base.String [[Lib.AlignedRead]]
  {- Strictness: x -}
1074263d4d17bfdda307568c40557155
  parsechkBED ::
    GHC.Types.Int
    -> GHC.Types.Int -> [GHC.Types.Int] -> GHC.Base.String
  {- Arity: 3, Strictness: <S(S),1*U(U)><S(S),1*U(U)><L,1*U>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: GHC.Types.Int)
                   (w2 :: [GHC.Types.Int]) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { GHC.Types.I# ww3 ->
                 Lib.$wparsechkBED ww1 ww3 w2 } }) -}
f0248b03acafc2189ec34ea15fec48fb
  parsechkBED1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.parsechkBED2) -}
f746c13e6be74e5ba7a4ed27658ab968
  parsechkBED2 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: (" primer BEDPE records parsed successfully.\n"#) -}
b9429f07a1e41c8acabc1dc0f81e6b63
  parsechkBED3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.parsechkBED4) -}
a0d2261f00778d697ce7cfccc4e4f7e9
  parsechkBED4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: (" primer BEDPE records failed to parse (see bedparsefails.log)\n"#) -}
bc60cc8388f9f8b84b589b08dc353376
  parsechkMaster ::
    GHC.Types.Int
    -> GHC.Types.Int -> [GHC.Types.Int] -> GHC.Base.String
  {- Arity: 3, Strictness: <S(S),1*U(U)><S(S),1*U(U)><L,1*U>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: GHC.Types.Int)
                   (w2 :: [GHC.Types.Int]) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { GHC.Types.I# ww3 ->
                 Lib.$wparsechkMaster ww1 ww3 w2 } }) -}
3b2aa2314e094888e771f79db0384fe8
  parsechkSAM ::
    GHC.Types.Int
    -> GHC.Types.Int -> [GHC.Types.Int] -> GHC.Base.String
  {- Arity: 3, Strictness: <S(S),1*U(U)><S(S),1*U(U)><L,1*U>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: GHC.Types.Int)
                   (w2 :: [GHC.Types.Int]) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { GHC.Types.I# ww3 ->
                 Lib.$wparsechkSAM ww1 ww3 w2 } }) -}
05eca7967b4b8fc5b4bbe00acbe848f7
  parsechkSAM1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.parsechkSAM2) -}
ef4f55456d238d1a1357ae72d0c5e31c
  parsechkSAM2 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: (" SAM alignments parsed successfully.\n"#) -}
ba56b55958d194dc4058c41f720add57
  parsechkSAM3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.parsechkSAM4) -}
b88985a20f8f003d64cc44e7d52021ca
  parsechkSAM4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: (" SAM alignments failed to parse (see samparsefails.log)\n"#) -}
af79dbde959124d0d5ba536e57669319
  parsedbl ::
    Data.ByteString.Internal.ByteString
    -> Data.Either.Either GHC.Base.String GHC.Types.Double
  {- Arity: 1,
     Unfolding: (Data.Attoparsec.ByteString.Internal.parseOnly
                   @ GHC.Types.Double
                   Data.Attoparsec.ByteString.Char8.double1
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                             <Data.ByteString.Internal.ByteString>_N <GHC.Types.Double>_R))) -}
041dadc1ccb8b57b21428f8b2e9ba38f
  parseint ::
    Data.ByteString.Internal.ByteString
    -> Data.Either.Either GHC.Base.String GHC.Integer.Type.Integer
  {- Arity: 1,
     Unfolding: (Data.Attoparsec.ByteString.Internal.parseOnly
                   @ GHC.Integer.Type.Integer
                   Data.Attoparsec.ByteString.Char8.decimal6
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                             <Data.ByteString.Internal.ByteString>_N
                             <GHC.Integer.Type.Integer>_R))) -}
bd2f4c202921b8281ffff18ad943e807
  parsemIDstring ::
    Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
  {- Arity: 1, Strictness: <S(SLSS),1*U(U,U,U,1*U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.ByteString.Internal.ByteString) ->
                 case w of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wparsemIDstring ww1 ww2 ww3 ww4 }) -}
b30c31a59d5e4fc8c464bcd45cda453f
  parsemIDstring1 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.parsemIDstring_addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.parsemIDstring_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
f6af56e734f42b040272e10c2a7f75e1
  parsemIDstring2 :: GHC.Prim.Word# -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (c# :: GHC.Prim.Word#) ->
                 case c# of wild {
                   DEFAULT -> GHC.Types.False
                   9## -> GHC.Types.True
                   10## -> GHC.Types.True
                   11## -> GHC.Types.True
                   12## -> GHC.Types.True
                   13## -> GHC.Types.True
                   32## -> GHC.Types.True
                   160## -> GHC.Types.True }) -}
8a43f7b072ef34acf45a1a890610e381
  parsemIDstring_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("NOMIDSTRING"#) -}
d6f39784c60f4de2dee0e2bcaf2698ba
  parsemIDstring_go ::
    [Data.ByteString.Internal.ByteString]
    -> [Data.ByteString.Internal.ByteString]
  {- Arity: 1, Strictness: <S,1*U> -}
67d8c5510957d872591511fcee73b515
  parsesignedint ::
    Data.ByteString.Internal.ByteString -> GHC.Integer.Type.Integer
  {- Arity: 1, Strictness: <S(SLSS),1*U(U,U,U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.ByteString.Internal.ByteString) ->
                 case w of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wparsesignedint ww1 ww2 ww3 ww4 }) -}
0807e9c96e1182c3c85b74b79ba5b2be
  parsesignedint1 ::
    Data.Either.Either GHC.Base.String GHC.Types.Double
  {- Strictness: x -}
21071c975426d6ea93962a8c0a55430b
  pintflag :: Lib.AlignedRead -> GHC.Types.Bool
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLSLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds28 }) -}
21071c975426d6ea93962a8c0a55430b
  pnext :: Lib.AlignedRead -> GHC.Integer.Type.Integer
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLSLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds18 }) -}
21071c975426d6ea93962a8c0a55430b
  pos :: Lib.AlignedRead -> GHC.Integer.Type.Integer
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds10 }) -}
26e2207e507d4bc5b47a3c19f626e7fd
  postxposdcnt :: Lib.MidFamily -> GHC.Integer.Type.Integer
  RecSel Left Lib.MidFamily
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLSLL),1*U(A,A,A,A,A,A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MidFamily) ->
                 case ds6 of wild { Lib.MidFamily ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds14 }) -}
e7e2790b8037d3175df9e0e1315ecd78
  primaryR1filter :: Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LS(S)LLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: Lib.AlignedRead) ->
                 case a of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 case ds7 of wild1 { GHC.Types.I# x# ->
                 case GHC.Prim.andI# x# 256# of wild2 {
                   DEFAULT -> GHC.Types.False
                   0#
                   -> case GHC.Prim.andI# x# 64# of wild3 {
                        DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } } } }) -}
c2615795a8443d0022d1e864cbd06d69
  primaryR2filter :: Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LS(S)LLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: Lib.AlignedRead) ->
                 case a of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 case ds7 of wild1 { GHC.Types.I# x# ->
                 case GHC.Prim.andI# x# 256# of wild2 {
                   DEFAULT -> GHC.Types.False
                   0#
                   -> case GHC.Prim.andI# x# 64# of wild3 {
                        DEFAULT -> GHC.Types.False 0# -> GHC.Types.True } } } }) -}
cdb05ad2d43e6bf2ffa1e8a64020b9c0
  printAlignment ::
    Lib.AlignedRead -> Data.ByteString.Internal.ByteString
  {- Arity: 1,
     Strictness: <L,U(1*U,1*U(U),1*U,A,A,U,A,1*U,A,A,1*U(U,U,U,U),1*U,U,1*U,1*U,1*U,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A)> -}
38665edcb07b67d6ae0a9df060297c6f
  printAlignmentOrHdr ::
    Lib.AlignedRead -> Data.ByteString.Internal.ByteString
  {- Arity: 1,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLSLLLL),1*U(U,1*U(U),1*U,A,A,U,A,U,A,A,U(U,U,U,U),1*U,U,U,U,U,A,A,A,A,A,A,A,1*U,A,1*U,1*U,A,A,A,A)> -}
f9f34d422dae1fb64ff6f4ba70d5d235
  printAlnStreamToFile ::
    Control.Monad.Trans.Resource.Internal.MonadResource m =>
    GHC.IO.FilePath
    -> Data.Conduit.Internal.Conduit.ConduitM Lib.AlignedRead c m ()
  {- Arity: 2,
     Strictness: <L,U(U(U(A,C(C1(U)),A,C(U),A),C(U)),C(U))><L,U> -}
21071c975426d6ea93962a8c0a55430b
  qname :: Lib.AlignedRead -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(1*U(U,U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds7 }) -}
8559d0b44695806151a5bc1692dff6d3
  queryPlus :: Lib.SAMFlag -> GHC.Types.Bool
  RecSel Left Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLLLLLLL),1*U(A,A,A,A,1*U,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.SAMFlag) ->
                 case ds6 of wild { Lib.SAMFlag ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds11 }) -}
21071c975426d6ea93962a8c0a55430b
  r1prim :: Lib.PairedAln -> Lib.AlignedRead
  RecSel Left Lib.PairedAln
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.PairedAln) ->
                 case ds6 of wild { Lib.PairedAln ds7 ds8 ds9 ds10 -> ds7 }) -}
21071c975426d6ea93962a8c0a55430b
  r1secs :: Lib.PairedAln -> [Lib.AlignedRead]
  RecSel Left Lib.PairedAln
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLSL),1*U(A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.PairedAln) ->
                 case ds6 of wild { Lib.PairedAln ds7 ds8 ds9 ds10 -> ds9 }) -}
21071c975426d6ea93962a8c0a55430b
  r2prim :: Lib.PairedAln -> Lib.AlignedRead
  RecSel Left Lib.PairedAln
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLL),1*U(A,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.PairedAln) ->
                 case ds6 of wild { Lib.PairedAln ds7 ds8 ds9 ds10 -> ds8 }) -}
21071c975426d6ea93962a8c0a55430b
  r2secs :: Lib.PairedAln -> [Lib.AlignedRead]
  RecSel Left Lib.PairedAln
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLS),1*U(A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.PairedAln) ->
                 case ds6 of wild { Lib.PairedAln ds7 ds8 ds9 ds10 -> ds10 }) -}
551a30b7ad134bddf22c0e1d289b8c79
  rdint :: GHC.Base.String -> GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>, Unfolding: (Lib.toBinInt) -}
352c29311c54d82a01014aa179285546
  read1filter :: Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LS(S)LLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: Lib.AlignedRead) ->
                 case a of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 case ds7 of wild1 { GHC.Types.I# x# ->
                 case GHC.Prim.andI# x# 64# of wild2 {
                   DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } } }) -}
f6cd79cc0b59491ea7770c43f0461f8e
  readBEDPE :: GHC.IO.FilePath -> GHC.Types.IO [Lib.BEDPE]
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.createprimerbedmaps2
                  `cast`
                (<GHC.IO.FilePath>_R
                 ->_R Sym (GHC.Types.N:IO[0] <[Lib.BEDPE]>_R)) -}
b1adc7707839231bbf320e38a27bef07
  readSAM :: GHC.IO.FilePath -> GHC.Types.IO [Lib.AlignedRead]
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.readSAM1
                  `cast`
                (<GHC.IO.FilePath>_R
                 ->_R Sym (GHC.Types.N:IO[0] <[Lib.AlignedRead]>_R)) -}
a55e560e2d2bc468c90952c71382dbc8
  readSAM1 ::
    GHC.IO.FilePath
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [Lib.AlignedRead] #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (fp :: GHC.IO.FilePath)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case System.IO.withBinaryFile1
                        @ Data.ByteString.Internal.ByteString
                        fp
                        GHC.IO.IOMode.ReadMode
                        Data.ByteString.readFile2
                          `cast`
                        (<GHC.IO.Handle.Types.Handle>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Data.ByteString.Internal.ByteString>_R))
                        eta of ds6 { (#,#) ipv ipv1 ->
                 (# ipv,
                    case ipv1 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                    Data.Either.rights
                      @ GHC.Base.String
                      @ Lib.AlignedRead
                      (GHC.Base.map
                         @ Data.ByteString.Internal.ByteString
                         @ (Data.Either.Either GHC.Base.String Lib.AlignedRead)
                         Lib.readSAM2
                         (Data.ByteString.Char8.$wlines ww1 ww2 ww3 ww4)) } #) }) -}
45e0ae98ca1d81ce9f0950aebb8a2c64
  readSAM2 ::
    Data.ByteString.Internal.ByteString
    -> Data.Either.Either GHC.Base.String Lib.AlignedRead
  {- Arity: 1,
     Unfolding: (Data.Attoparsec.ByteString.Internal.parseOnly
                   @ Lib.AlignedRead
                   Lib.readSAM3
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                             <Data.ByteString.Internal.ByteString>_N <Lib.AlignedRead>_R))) -}
3bd79601270de92cc8227cd329363222
  readSAM3 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.AlignedRead
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.AlignedRead
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wlvl5 @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
acb02a0e5154288dadd45f37985c7cdc
  readSAMFlag :: GHC.Types.Int -> Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(U)>,
     Unfolding: (\ (flag1 :: GHC.Types.Int) ->
                 Lib.SAMFlag
                   (case flag1 of wild { GHC.Types.I# x# ->
                    case GHC.Prim.andI# x# 1# of wild1 {
                      DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } })
                   (case flag1 of wild { GHC.Types.I# x# ->
                    case GHC.Prim.andI# x# 2# of wild1 {
                      DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } })
                   (case flag1 of wild { GHC.Types.I# x# ->
                    case GHC.Prim.andI# x# 4# of wild1 {
                      DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } })
                   (case flag1 of wild { GHC.Types.I# x# ->
                    case GHC.Prim.andI# x# 8# of wild1 {
                      DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } })
                   (case flag1 of wild { GHC.Types.I# x# ->
                    case GHC.Prim.andI# x# 16# of wild1 {
                      DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } })
                   (case flag1 of wild { GHC.Types.I# x# ->
                    case GHC.Prim.andI# x# 32# of wild1 {
                      DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } })
                   (case flag1 of wild { GHC.Types.I# x# ->
                    case GHC.Prim.andI# x# 64# of wild1 {
                      DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } })
                   (case flag1 of wild { GHC.Types.I# x# ->
                    case GHC.Prim.andI# x# 128# of wild1 {
                      DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } })
                   (case flag1 of wild { GHC.Types.I# x# ->
                    case GHC.Prim.andI# x# 256# of wild1 {
                      DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } })
                   (case flag1 of wild { GHC.Types.I# x# ->
                    case GHC.Prim.andI# x# 512# of wild1 {
                      DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } })
                   (case flag1 of wild { GHC.Types.I# x# ->
                    case GHC.Prim.andI# x# 1024# of wild1 {
                      DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } })
                   flag1) -}
f2918486198647c8d8a23c49bce52c24
  readSAMnameset ::
    GHC.IO.FilePath -> GHC.Types.IO [[Lib.AlignedRead]]
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.readSAMnameset1
                  `cast`
                (<GHC.IO.FilePath>_R
                 ->_R Sym (GHC.Types.N:IO[0] <[[Lib.AlignedRead]]>_R)) -}
daad388a4a0682f9c7016407a3c228a8
  readSAMnameset1 ::
    GHC.IO.FilePath
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [[Lib.AlignedRead]] #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (fp :: GHC.IO.FilePath)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case System.IO.withBinaryFile1
                        @ Data.ByteString.Internal.ByteString
                        fp
                        GHC.IO.IOMode.ReadMode
                        Data.ByteString.readFile2
                          `cast`
                        (<GHC.IO.Handle.Types.Handle>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Data.ByteString.Internal.ByteString>_R))
                        eta of ds6 { (#,#) ipv ipv1 ->
                 (# ipv, Lib.parseReadsetsFromSAM ipv1 #) }) -}
1e45302e2e4937e98fce37f8286c4536
  readSAMtoPairedAlns ::
    GHC.IO.FilePath -> GHC.Types.IO (Lib.AlignedRead, [Lib.PairedAln])
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.readSAMtoPairedAlns1
                  `cast`
                (<GHC.IO.FilePath>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <(Lib.AlignedRead, [Lib.PairedAln])>_R)) -}
22e5830acc18dc68392b6318faedb5e5
  readSAMtoPairedAlns1 ::
    GHC.IO.FilePath
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Lib.AlignedRead, [Lib.PairedAln]) #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (fp :: GHC.IO.FilePath)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case System.IO.withBinaryFile1
                        @ Data.ByteString.Internal.ByteString
                        fp
                        GHC.IO.IOMode.ReadMode
                        Data.ByteString.readFile2
                          `cast`
                        (<GHC.IO.Handle.Types.Handle>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Data.ByteString.Internal.ByteString>_R))
                        eta of ds6 { (#,#) ipv ipv1 ->
                 (# ipv,
                    let {
                      ipv2 :: [[Lib.AlignedRead]]
                      = case ipv1 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                        Lib.$wparseReadsetsFromSAM ww1 ww2 ww3 ww4 }
                    } in
                    (Lib.safegetheader ipv2,
                     case ipv2 of wild {
                       [] -> case GHC.List.scanl2 ret_ty [Lib.PairedAln] of {}
                       : ds7 xs
                       -> GHC.Base.map
                            @ [Lib.AlignedRead]
                            @ Lib.PairedAln
                            Lib.alnsToPairedAln
                            xs }) #) }) -}
40954ec022557ca9d286d05c99916182
  readint :: GHC.Base.String -> GHC.Integer.Type.Integer
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (s :: GHC.Base.String) ->
                 case Text.Read.readEither8
                        @ GHC.Integer.Type.Integer
                        (Text.ParserCombinators.ReadP.run
                           @ GHC.Integer.Type.Integer
                           Lib.readint3
                           s) of wild {
                   [] -> Lib.readint2
                   : x ds6
                   -> case ds6 of wild1 { [] -> x : ipv ipv1 -> Lib.readint1 } }) -}
dc9a4f7a9175daead64104e8a80db6e3
  readint1 :: GHC.Integer.Type.Integer
  {- Strictness: x -}
f66a53df1c4d9c06733998d2ef39e0a8
  readint2 :: GHC.Integer.Type.Integer
  {- Strictness: x -}
65d6a151fbb4d94a213e9dc959e4557f
  readint3 :: Text.ParserCombinators.ReadP.P GHC.Integer.Type.Integer
  {- Unfolding: (GHC.Read.$fReadInteger_$sreadNumber
                   GHC.Read.$fReadInteger2
                   Text.ParserCombinators.ReadPrec.minPrec
                   @ GHC.Integer.Type.Integer
                   (Text.Read.readEither7 @ GHC.Integer.Type.Integer)) -}
21071c975426d6ea93962a8c0a55430b
  refseq :: Lib.AlignedRead -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLSLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds20 }) -}
e6190112067afb270221364bc783d17c
  removeDs ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> [(GHC.Integer.Type.Integer,
         Data.ByteString.Internal.ByteString)]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (cs :: [(GHC.Integer.Type.Integer,
                            Data.ByteString.Internal.ByteString)]) ->
                 GHC.Base.build
                   @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                   (\ @ b
                      (c2 :: (GHC.Integer.Type.Integer,
                              Data.ByteString.Internal.ByteString)
                             -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                      @ b
                      (GHC.List.filterFB
                         @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                         @ b
                         c2
                         Lib.removeDs1)
                      n
                      cs)) -}
f97ecb07dd77510f0b89be991f88abde
  removeDs1 ::
    (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
    -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S(LS(SLSS)),1*U(A,1*U(U,U,U,U))>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: (GHC.Integer.Type.Integer,
                          Data.ByteString.Internal.ByteString)) ->
                 case w of ww { (,) ww1 ww2 ->
                 case ww2 of ww3 { Data.ByteString.Internal.PS ww4 ww5 ww6 ww7 ->
                 Lib.$wlvl6 ww4 ww5 ww6 ww7 } }) -}
8d22280b33858bdc014c5834a3cdde61
  removeNonPrimaryZeroLengthAlignments ::
    Lib.PairedAln -> Lib.PairedAln
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,1*U,1*U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (p :: Lib.PairedAln) ->
                 case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                 Lib.PairedAln
                   ds6
                   ds7
                   (GHC.Base.build
                      @ Lib.AlignedRead
                      (\ @ b
                         (c2 :: Lib.AlignedRead -> b -> b)[OneShot]
                         (n :: b)[OneShot] ->
                       GHC.Base.foldr
                         @ Lib.AlignedRead
                         @ b
                         (GHC.List.filterFB
                            @ Lib.AlignedRead
                            @ b
                            c2
                            Lib.removeNonPrimaryZeroLengthAlignments1)
                         n
                         ds8))
                   (GHC.Base.build
                      @ Lib.AlignedRead
                      (\ @ b
                         (c2 :: Lib.AlignedRead -> b -> b)[OneShot]
                         (n :: b)[OneShot] ->
                       GHC.Base.foldr
                         @ Lib.AlignedRead
                         @ b
                         (GHC.List.filterFB
                            @ Lib.AlignedRead
                            @ b
                            c2
                            Lib.removeNonPrimaryZeroLengthAlignments1)
                         n
                         ds9)) }) -}
56902645c464bdfee6e42dbb3a0de61e
  removeNonPrimaryZeroLengthAlignments1 ::
    Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLS),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.AlignedRead) ->
                 case x of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 case ds36 of wild1 {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False } }) -}
3ee2a0da43672f83e587cba0d56256f3
  rightOrDefault ::
    Data.Either.Either GHC.Base.String Lib.AlignedRead
    -> Lib.AlignedRead
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (e :: Data.Either.Either GHC.Base.String Lib.AlignedRead) ->
                 case e of wild {
                   Data.Either.Left ds6 -> Lib.defaultAlignment
                   Data.Either.Right a -> a }) -}
a9b73ea1ad060bdc0ccfd205804ba9bc
  rightOrDefaultPaird ::
    Data.Either.Either
      Data.Conduit.Attoparsec.ParseError
      (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln])
    -> [Lib.PairedAln]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (e :: Data.Either.Either
                           Data.Conduit.Attoparsec.ParseError
                           (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln])) ->
                 case e of wild {
                   Data.Either.Left ds6 -> GHC.Types.[] @ Lib.PairedAln
                   Data.Either.Right a
                   -> Data.Tuple.snd
                        @ Data.Conduit.Attoparsec.PositionRange
                        @ [Lib.PairedAln]
                        a }) -}
21071c975426d6ea93962a8c0a55430b
  rint :: Lib.AlignedRead -> [Lib.BedRecord]
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLSLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds27 }) -}
21071c975426d6ea93962a8c0a55430b
  rname :: Lib.AlignedRead -> Lib.UChr
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds9 }) -}
21071c975426d6ea93962a8c0a55430b
  rnext :: Lib.AlignedRead -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLSLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds17 }) -}
dadf3da0e978d3f77efcd518bf8945de
  safegetheader :: [[Lib.AlignedRead]] -> Lib.AlignedRead
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: [[Lib.AlignedRead]]) ->
                 letrec {
                   go19 :: [[Lib.AlignedRead]] -> [Lib.AlignedRead]
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (ds6 :: [[Lib.AlignedRead]]) ->
                     case ds6 of wild {
                       [] -> GHC.Types.[] @ Lib.AlignedRead
                       : y ys -> GHC.Base.++ @ Lib.AlignedRead y (go19 ys) }
                 } in
                 case go19 w of wild {
                   [] -> Lib.safegetheader2
                   : ds6 ds7
                   -> case w of wild1 {
                        [] -> case GHC.List.badHead ret_ty Lib.AlignedRead of {}
                        : x ds8
                        -> case x of wild2 {
                             [] -> case GHC.List.badHead ret_ty Lib.AlignedRead of {}
                             : x1 ds9
                             -> case x1 of wild3 { Lib.AlignedRead ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ->
                                case ds36 of wild4 {
                                  GHC.Types.False -> Lib.safegetheader1
                                  GHC.Types.True
                                  -> Lib.AlignedRead
                                       ds10
                                       ds11
                                       ds12
                                       ds13
                                       ds14
                                       ds15
                                       ds16
                                       ds17
                                       ds18
                                       ds19
                                       ds20
                                       ds21
                                       ds22
                                       ds23
                                       ds24
                                       ds25
                                       ds26
                                       ds27
                                       ds28
                                       ds29
                                       ds30
                                       ds31
                                       ds32
                                       ds33
                                       ds34
                                       ds35
                                       GHC.Types.True
                                       ds37
                                       ds38
                                       ds39
                                       ds40 } } } } }) -}
30ec93e43b45d5b73f4d2083e8714354
  safegetheader1 :: Lib.AlignedRead
  {- Strictness: x -}
04a7e7920ae1a7092a2e175204730b5f
  safegetheader2 :: Lib.AlignedRead
  {- Strictness: x -}
a83468ef58cb5be1fc9a7fd22dd0fdc6
  safemapcig ::
    Data.ByteString.Internal.ByteString -> GHC.Base.Maybe Lib.CigarMap
  {- Arity: 1, Strictness: <S(SLSS),1*U(U,U,U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.ByteString.Internal.ByteString) ->
                 case w of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wsafemapcig ww1 ww2 ww3 ww4 }) -}
d38fb281b679760c6af678a6f019e42e
  samhdrparser ::
    Data.Attoparsec.ByteString.Internal.Parser
      Data.ByteString.Internal.ByteString
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.samhdrparser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)) -}
7261f08c0cfad6f3a241167e5ccc3c9e
  samhdrparser1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wsamhdrparser @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
de15f81a95e2b11267123d3bb3ef570f
  samhdrparserEOL ::
    Data.Attoparsec.ByteString.Internal.Parser
      Data.ByteString.Internal.ByteString
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.samhdrparserEOL1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)) -}
c9096380b0ad5b25671b11c4a1183037
  samhdrparserEOL1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wsamhdrparserEOL
                   @ r
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww8
                   w2
                   w3
                   w4 } }) -}
1307d0dd111f9e59fbe592b438ffe3c7
  secalnp ::
    Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.ByteString.Internal.Parser Lib.AlignedRead
  {- Arity: 6,
     Strictness: <S(LLLS),1*U(U,U,U,U)><S(LLLSLL),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.secalnp1
                  `cast`
                (<Data.ByteString.Internal.ByteString>_R
                 ->_R Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                               <Data.ByteString.Internal.ByteString>_N <Lib.AlignedRead>_R)) -}
3aa8ae24b6e171fb5e16fa25ac8bf24c
  secalnp1 ::
    Data.ByteString.Internal.ByteString
    -> forall r.
       Data.Attoparsec.Internal.Types.State
         Data.ByteString.Internal.ByteString
       -> Data.Attoparsec.Internal.Types.Pos
       -> Data.Attoparsec.Internal.Types.More
       -> Data.Attoparsec.Internal.Types.Failure
            Data.ByteString.Internal.ByteString
            (Data.Attoparsec.Internal.Types.State
               Data.ByteString.Internal.ByteString)
            r
       -> Data.Attoparsec.Internal.Types.Success
            Data.ByteString.Internal.ByteString
            (Data.Attoparsec.Internal.Types.State
               Data.ByteString.Internal.ByteString)
            Lib.AlignedRead
            r
       -> Data.Attoparsec.Internal.Types.IResult
            Data.ByteString.Internal.ByteString r
  {- Arity: 6,
     Strictness: <S(LLLS),1*U(U,U,U,U)><S(LLLSLL),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))> -}
35a9042ff547683bc459a8be812fc910
  seqp ::
    Data.Attoparsec.ByteString.Internal.Parser
      Data.ByteString.Internal.ByteString
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.seqp1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)) -}
3f06e6198d7e44d13f4a3cc85316cf4f
  seqp1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wseqp @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w4 } }) -}
9ab8ee71c1d5ba9c04c6f921ed47f573
  setMapdProperPairBit :: Lib.PairedAln -> Lib.PairedAln
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S,1*U(1*U(U,1*U(U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),1*U(U,1*U(U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.PairedAln) ->
                 case w of ww { Lib.PairedAln ww1 ww2 ww3 ww4 ->
                 Lib.PairedAln
                   (case ww1 of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                    Lib.AlignedRead
                      ds6
                      (case ds7 of wild1 { GHC.Types.I# x# ->
                       GHC.Types.I# (GHC.Prim.orI# x# 2#) })
                      ds8
                      ds9
                      ds10
                      ds11
                      ds12
                      ds13
                      ds14
                      ds15
                      ds16
                      ds17
                      ds18
                      ds19
                      ds20
                      ds21
                      ds22
                      ds23
                      ds24
                      ds25
                      ds26
                      ds27
                      ds28
                      ds29
                      ds30
                      ds31
                      ds32
                      ds33
                      ds34
                      ds35
                      ds36 })
                   (case ww2 of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                    Lib.AlignedRead
                      ds6
                      (case ds7 of wild1 { GHC.Types.I# x# ->
                       GHC.Types.I# (GHC.Prim.orI# x# 2#) })
                      ds8
                      ds9
                      ds10
                      ds11
                      ds12
                      ds13
                      ds14
                      ds15
                      ds16
                      ds17
                      ds18
                      ds19
                      ds20
                      ds21
                      ds22
                      ds23
                      ds24
                      ds25
                      ds26
                      ds27
                      ds28
                      ds29
                      ds30
                      ds31
                      ds32
                      ds33
                      ds34
                      ds35
                      ds36 })
                   ww3
                   ww4 }) -}
b5a01070dc1ac5daa63d2cdc7128d741
  setMateRname :: Lib.PairedAln -> Lib.PairedAln
  {- Arity: 1,
     Strictness: <S(S(LS(S)LLLLLLLLLLLLLLLLLLLLLLLLLLLLL)S(LS(S)LLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LL),1*U(U(U,U(U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U(U,U(U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)>m,
     Unfolding: (\ (p :: Lib.PairedAln) ->
                 case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                 case ds7 of ww { Lib.AlignedRead ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ->
                 case ww2 of ww32 { GHC.Types.I# ww33 ->
                 let {
                   newr2secs :: [Lib.AlignedRead]
                   = let {
                       lvl1009 :: Data.ByteString.Internal.ByteString
                       = case ds6 of wild1 { Lib.AlignedRead ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ->
                         let {
                           cs :: [GHC.Types.Char] = Lib.$fShowUChr_$cshow ds12
                         } in
                         case GHC.List.$wlenAcc @ GHC.Types.Char cs 0# of ww34 { DEFAULT ->
                         Data.ByteString.Internal.$wunsafePackLenChars ww34 cs } }
                     } in
                     GHC.Base.map
                       @ Lib.AlignedRead
                       @ Lib.AlignedRead
                       (\ (y :: Lib.AlignedRead) ->
                        case y of wild1 { Lib.AlignedRead ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ->
                        Lib.AlignedRead
                          ds10
                          ds11
                          ds12
                          ds13
                          ds14
                          ds15
                          ds16
                          ds17
                          ds18
                          ds19
                          lvl1009
                          ds21
                          ds22
                          ds23
                          ds24
                          ds25
                          ds26
                          ds27
                          ds28
                          ds29
                          ds30
                          ds31
                          ds32
                          ds33
                          ds34
                          ds35
                          ds36
                          ds37
                          ds38
                          ds39
                          ds40 })
                       ds9
                 } in
                 let {
                   newr2p :: Data.ByteString.Internal.ByteString
                   = case ds6 of wild1 { Lib.AlignedRead ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ->
                     let {
                       cs :: [GHC.Types.Char] = Lib.$fShowUChr_$cshow ds12
                     } in
                     case GHC.List.$wlenAcc @ GHC.Types.Char cs 0# of ww34 { DEFAULT ->
                     Data.ByteString.Internal.$wunsafePackLenChars ww34 cs } }
                 } in
                 case GHC.Prim.andI# ww33 4# of wild1 {
                   DEFAULT
                   -> case ds6 of wild2 { Lib.AlignedRead ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ->
                      case ds11 of wild3 { GHC.Types.I# x# ->
                      case GHC.Prim.andI# x# 4# of wild4 {
                        DEFAULT -> wild
                        0#
                        -> Lib.PairedAln
                             wild2
                             (Lib.AlignedRead
                                ww1
                                ww32
                                ww3
                                ww4
                                ww5
                                ww6
                                ww7
                                ww8
                                ww9
                                ww10
                                newr2p
                                ww12
                                ww13
                                ww14
                                ww15
                                ww16
                                ww17
                                ww18
                                ww19
                                ww20
                                ww21
                                ww22
                                ww23
                                ww24
                                ww25
                                ww26
                                ww27
                                ww28
                                ww29
                                ww30
                                ww31)
                             ds8
                             newr2secs } } }
                   0#
                   -> case ds6 of wild2 { Lib.AlignedRead ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ->
                      case ds11 of wild3 { GHC.Types.I# x# ->
                      let {
                        newr1secs :: [Lib.AlignedRead]
                        = let {
                            lvl1009 :: Data.ByteString.Internal.ByteString
                            = let {
                                cs :: [GHC.Types.Char] = Lib.$fShowUChr_$cshow ww3
                              } in
                              case GHC.List.$wlenAcc @ GHC.Types.Char cs 0# of ww34 { DEFAULT ->
                              Data.ByteString.Internal.$wunsafePackLenChars ww34 cs }
                          } in
                          GHC.Base.map
                            @ Lib.AlignedRead
                            @ Lib.AlignedRead
                            (\ (y :: Lib.AlignedRead) ->
                             case y of wild4 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                             Lib.AlignedRead
                               ds41
                               ds42
                               ds43
                               ds44
                               ds45
                               ds46
                               ds47
                               ds48
                               ds49
                               ds50
                               lvl1009
                               ds52
                               ds53
                               ds54
                               ds55
                               ds56
                               ds57
                               ds58
                               ds59
                               ds60
                               ds61
                               ds62
                               ds63
                               ds64
                               ds65
                               ds66
                               ds67
                               ds68
                               ds69
                               ds70
                               ds71 })
                            ds8
                      } in
                      let {
                        newr1p :: Data.ByteString.Internal.ByteString
                        = let {
                            cs :: [GHC.Types.Char] = Lib.$fShowUChr_$cshow ww3
                          } in
                          case GHC.List.$wlenAcc @ GHC.Types.Char cs 0# of ww34 { DEFAULT ->
                          Data.ByteString.Internal.$wunsafePackLenChars ww34 cs }
                      } in
                      case GHC.Prim.andI# x# 4# of wild4 {
                        DEFAULT
                        -> Lib.PairedAln
                             (Lib.AlignedRead
                                ds10
                                wild3
                                ds12
                                ds13
                                ds14
                                ds15
                                ds16
                                ds17
                                ds18
                                ds19
                                newr1p
                                ds21
                                ds22
                                ds23
                                ds24
                                ds25
                                ds26
                                ds27
                                ds28
                                ds29
                                ds30
                                ds31
                                ds32
                                ds33
                                ds34
                                ds35
                                ds36
                                ds37
                                ds38
                                ds39
                                ds40)
                             ww
                             newr1secs
                             ds9
                        0#
                        -> Lib.PairedAln
                             (Lib.AlignedRead
                                ds10
                                wild3
                                ds12
                                ds13
                                ds14
                                ds15
                                ds16
                                ds17
                                ds18
                                ds19
                                newr1p
                                ds21
                                ds22
                                ds23
                                ds24
                                ds25
                                ds26
                                ds27
                                ds28
                                ds29
                                ds30
                                ds31
                                ds32
                                ds33
                                ds34
                                ds35
                                ds36
                                ds37
                                ds38
                                ds39
                                ds40)
                             (Lib.AlignedRead
                                ww1
                                ww32
                                ww3
                                ww4
                                ww5
                                ww6
                                ww7
                                ww8
                                ww9
                                ww10
                                newr2p
                                ww12
                                ww13
                                ww14
                                ww15
                                ww16
                                ww17
                                ww18
                                ww19
                                ww20
                                ww21
                                ww22
                                ww23
                                ww24
                                ww25
                                ww26
                                ww27
                                ww28
                                ww29
                                ww30
                                ww31)
                             newr1secs
                             newr2secs } } } } } } }) -}
1ddc761de64fa4228d1e78e98102f954
  setProperInsertSizeRange ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer -> Lib.PairedAln -> Lib.PairedAln
  {- Arity: 3,
     Strictness: <S,U><L,U><S,1*U(U(U,U(U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U(U,U(U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)>m,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Integer.Type.Integer)
                   (w1 :: GHC.Integer.Type.Integer)
                   (w2 :: Lib.PairedAln) ->
                 case w2 of ww { Lib.PairedAln ww1 ww2 ww3 ww4 ->
                 case Lib.checkInsertSize
                        w
                        w1
                        (Lib.PairedAln ww1 ww2 ww3 ww4) of wild {
                   GHC.Types.False -> Lib.PairedAln ww1 ww2 ww3 ww4
                   GHC.Types.True
                   -> case ww1 of wild1 { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                      case ds24 of wild2 {
                        GHC.Types.False -> Lib.PairedAln wild1 ww2 ww3 ww4
                        GHC.Types.True
                        -> case ww2 of wild3 { Lib.AlignedRead ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ->
                           case ds55 of wild4 {
                             GHC.Types.False -> Lib.PairedAln wild1 wild3 ww3 ww4
                             GHC.Types.True
                             -> Lib.PairedAln
                                  (Lib.AlignedRead
                                     ds6
                                     (case ds7 of wild5 { GHC.Types.I# x# ->
                                      GHC.Types.I# (GHC.Prim.orI# x# 2#) })
                                     ds8
                                     ds9
                                     ds10
                                     ds11
                                     ds12
                                     ds13
                                     ds14
                                     ds15
                                     ds16
                                     ds17
                                     ds18
                                     ds19
                                     ds20
                                     ds21
                                     ds22
                                     ds23
                                     GHC.Types.True
                                     ds25
                                     ds26
                                     ds27
                                     ds28
                                     ds29
                                     ds30
                                     ds31
                                     ds32
                                     ds33
                                     ds34
                                     ds35
                                     ds36)
                                  (Lib.AlignedRead
                                     ds37
                                     (case ds38 of wild5 { GHC.Types.I# x# ->
                                      GHC.Types.I# (GHC.Prim.orI# x# 2#) })
                                     ds39
                                     ds40
                                     ds41
                                     ds42
                                     ds43
                                     ds44
                                     ds45
                                     ds46
                                     ds47
                                     ds48
                                     ds49
                                     ds50
                                     ds51
                                     ds52
                                     ds53
                                     ds54
                                     GHC.Types.True
                                     ds56
                                     ds57
                                     ds58
                                     ds59
                                     ds60
                                     ds61
                                     ds62
                                     ds63
                                     ds64
                                     ds65
                                     ds66
                                     ds67)
                                  ww3
                                  ww4 } } } } } }) -}
065c790750230d420a38c196d33a438d
  setProperPairMapFlagBit :: GHC.Types.Int -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (flg :: GHC.Types.Int) ->
                 case flg of wild { GHC.Types.I# x# ->
                 GHC.Types.I# (GHC.Prim.orI# x# 2#) }) -}
af65eb7fdfab7f7b193f8b918557083e
  setZeroLengthAlnFlag :: GHC.Types.Int -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (flg :: GHC.Types.Int) ->
                 case flg of wild { GHC.Types.I# x# ->
                 GHC.Types.I#
                   (GHC.Prim.andI#
                      (GHC.Prim.andI# (GHC.Prim.orI# (GHC.Prim.andI# x# -3#) 4#) -257#)
                      -2049#) }) -}
f4d0b7b3cbd2ecbb149ebcf47dae2b0d
  setZeroLengthPairFlag :: GHC.Types.Int -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (flg :: GHC.Types.Int) ->
                 case flg of wild { GHC.Types.I# x# ->
                 GHC.Types.I# (GHC.Prim.orI# (GHC.Prim.andI# x# -3#) 8#) }) -}
a175e770054164a32892cc9a33d8a3d2
  setpintflag :: Data.Foldable.Foldable t => t a -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLC(S(S))LLLLL),1*U(A,A,A,A,A,A,A,A,A,A,1*C1(U(U)),A,A,A,A,A)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ t :: * -> *
                   @ a
                   ($dFoldable :: Data.Foldable.Foldable t)
                   (hits :: t a) ->
                 case Data.Foldable.length
                        @ t
                        $dFoldable
                        @ a
                        hits of wild { GHC.Types.I# x ->
                 GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.># x 0#) }) -}
91d78d9db6c9fef355da5f3bea7f4e8e
  shiftcrds ::
    (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
    -> (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
    -> (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
  {- Arity: 2,
     Strictness: <L,1*U(1*U,A)><S(LS(SLSS)),1*U(A,1*U(U,U,U,U))>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: (GHC.Integer.Type.Integer,
                          Data.ByteString.Internal.ByteString))
                   (w1 :: (GHC.Integer.Type.Integer,
                           Data.ByteString.Internal.ByteString)) ->
                 case w1 of ww { (,) ww1 ww2 ->
                 case ww2 of ww3 { Data.ByteString.Internal.PS ww4 ww5 ww6 ww7 ->
                 case Lib.$wshiftcrds w ww4 ww5 ww6 ww7 of ww8 { (#,#) ww9 ww10 ->
                 (ww9, ww10) } } }) -}
d2818865e4d86badde6e193a5697f1a8
  showChrom :: Lib.ChromNameFormat -> Lib.UChr -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (fmt :: Lib.ChromNameFormat) (chr :: Lib.UChr) ->
                 case fmt of wild {
                   Lib.GRC
                   -> case chr of wild1 {
                        DEFAULT -> Lib.showChrom51
                        Lib.Chr1 -> Lib.showChrom50
                        Lib.Chr2 -> Lib.showChrom49
                        Lib.Chr3 -> Lib.showChrom48
                        Lib.Chr4 -> Lib.showChrom47
                        Lib.Chr5 -> Lib.showChrom46
                        Lib.Chr6 -> Lib.showChrom45
                        Lib.Chr7 -> Lib.showChrom44
                        Lib.Chr8 -> Lib.showChrom43
                        Lib.Chr9 -> Lib.showChrom42
                        Lib.Chr10 -> Lib.showChrom41
                        Lib.Chr11 -> Lib.showChrom40
                        Lib.Chr12 -> Lib.showChrom39
                        Lib.Chr13 -> Lib.showChrom38
                        Lib.Chr14 -> Lib.showChrom37
                        Lib.Chr15 -> Lib.showChrom36
                        Lib.Chr16 -> Lib.showChrom35
                        Lib.Chr17 -> Lib.showChrom34
                        Lib.Chr18 -> Lib.showChrom33
                        Lib.Chr19 -> Lib.showChrom32
                        Lib.Chr20 -> Lib.showChrom31
                        Lib.Chr21 -> Lib.showChrom30
                        Lib.Chr22 -> Lib.showChrom29
                        Lib.ChrX -> Lib.showChrom28
                        Lib.ChrY -> Lib.showChrom27
                        Lib.ChrM -> Lib.showChrom26 }
                   Lib.UCSC
                   -> case chr of wild1 {
                        DEFAULT -> Lib.showChrom51
                        Lib.Chr1 -> Lib.showChrom25
                        Lib.Chr2 -> Lib.showChrom24
                        Lib.Chr3 -> Lib.showChrom23
                        Lib.Chr4 -> Lib.showChrom22
                        Lib.Chr5 -> Lib.showChrom21
                        Lib.Chr6 -> Lib.showChrom20
                        Lib.Chr7 -> Lib.showChrom19
                        Lib.Chr8 -> Lib.showChrom18
                        Lib.Chr9 -> Lib.showChrom17
                        Lib.Chr10 -> Lib.showChrom16
                        Lib.Chr11 -> Lib.showChrom15
                        Lib.Chr12 -> Lib.showChrom14
                        Lib.Chr13 -> Lib.showChrom13
                        Lib.Chr14 -> Lib.showChrom12
                        Lib.Chr15 -> Lib.showChrom11
                        Lib.Chr16 -> Lib.showChrom10
                        Lib.Chr17 -> Lib.showChrom9
                        Lib.Chr18 -> Lib.showChrom8
                        Lib.Chr19 -> Lib.showChrom7
                        Lib.Chr20 -> Lib.showChrom6
                        Lib.Chr21 -> Lib.showChrom5
                        Lib.Chr22 -> Lib.showChrom4
                        Lib.ChrX -> Lib.showChrom3
                        Lib.ChrY -> Lib.showChrom2
                        Lib.ChrM -> Lib.showChrom1 } }) -}
ebd48a0a63bfb4c2ece923869d5f5f9c
  showChrom1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#) -}
564dc2cf5a4b41a90649497e766d2fe3
  showChrom10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#9) -}
80cef8b2ca82a45b88bda09b4bda5279
  showChrom11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#10) -}
d89fd5063e35ee225a58437dff6136fc
  showChrom12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#11) -}
a0a62bf9e1da699b7eb88856ee39d739
  showChrom13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#12) -}
a38798e2f28f870b947f8e5a0f978e10
  showChrom14 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#13) -}
02082fd94320c109218dfe7ec1158db6
  showChrom15 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#14) -}
ab5e68cf3e65fc8923f2045f8bf2c6ef
  showChrom16 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#15) -}
e0e5ca695cdcdeadcad41d0c308ae356
  showChrom17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#16) -}
3786db1477f3b5f90519028e209c1516
  showChrom18 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#17) -}
5617da723ded6da9df61fafe45cece8b
  showChrom19 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#18) -}
f27f08d3c7de374233c890e90fe507d9
  showChrom2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#1) -}
31698285c40a415255d36100ae00c6e4
  showChrom20 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#19) -}
6778e68286541253838c42365fa729a6
  showChrom21 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#20) -}
4259e64594f439901ef5793bedf948c6
  showChrom22 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#21) -}
d587495b82fdc02d4d5f47637e0d2178
  showChrom23 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#22) -}
0c17040c85fdb7cac53ceba056227b3e
  showChrom24 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#23) -}
57f6f151106acb50f22431c879364f8c
  showChrom25 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#24) -}
8556ca84b7527aaf4385bee320567fed
  showChrom26 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#25) -}
b6a508c7b9396f5ad3317b8b55d8fe24
  showChrom27 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#26) -}
c348eab0a01c94fa277f3a2ae619a159
  showChrom28 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#27) -}
efb971ec9ccd6d9ce7c0ae1d0bc5e2db
  showChrom29 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#28) -}
e09e8b7f3636eb152adb09b71a2dce6d
  showChrom3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#2) -}
676e34f91dbd8a6d6b885bec564a54a9
  showChrom30 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#29) -}
7e7982422f7405c9b7909f9d1ff4c1fb
  showChrom31 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#30) -}
7f3a37f3132fd3ba9ca5929fbd6ec997
  showChrom32 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#31) -}
84a20840188569778de83e6df012a8d5
  showChrom33 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#32) -}
77579a9909584443da99ca9cc9e5f2e1
  showChrom34 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#33) -}
62f3a46312e0c3ca2ca30ce2d762a041
  showChrom35 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#34) -}
06744d28224509ebf7e4bf9e1ac25095
  showChrom36 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#35) -}
9baa51cbf76e55b47d3583ace6a70c72
  showChrom37 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#36) -}
19edb6e269433d98cb07dd44e63baafc
  showChrom38 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#37) -}
6cb7d7487b048b50656ef83a23529433
  showChrom39 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#38) -}
59be199aca04c74ae2cd218e1bf4981e
  showChrom4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#3) -}
1eec0b2fa25397c9177c4fa50bf9e61e
  showChrom40 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#39) -}
70985383859ce03843b70dcd15dc1fd6
  showChrom41 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#40) -}
7b4f41d8ab26e954a8f486ef908b9312
  showChrom42 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#41) -}
94b3b9c52ce9eea40c250e392116406a
  showChrom43 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#42) -}
92037baf6c5b3c79a21e0e49afd5f05d
  showChrom44 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#43) -}
1b0644f6e07d9a28e99267effb847b2a
  showChrom45 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#44) -}
7d23503fd94b7d1f18b864a91627d34b
  showChrom46 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#45) -}
87df6887f86be5589786d4276591161a
  showChrom47 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#46) -}
153af30dd0230700351a045a4c047c17
  showChrom48 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#47) -}
8b7f2b34fa594fc104b7045dda92c405
  showChrom49 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#48) -}
23717f911c98c85ad4fd618f6a0b0c01
  showChrom5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#4) -}
80b64ab0d9213115bdb44fe40a1e9282
  showChrom50 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#49) -}
330b8d81eeb8cf605b64319db9c6daf6
  showChrom51 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.addtrimtag_addr#2) -}
dfe2132180f555685c35329eef007731
  showChrom6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#5) -}
0afb027a4db70890c6275f284803d467
  showChrom7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#6) -}
e011f73cf25ea82f1a736df3feb50946
  showChrom8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#7) -}
4002bd933d09049de2a90caa9ada547d
  showChrom9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#8) -}
4de9d18c5d74acd1f9781b4a0814204f
  showChrom_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chrM"#) -}
a145a73bcdd6a0ee9a1b0f3b8e9e5019
  showChrom_addr#1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chrY"#) -}
3eed2d35b14995c9ccb979b3a0dbfbad
  showChrom_addr#10 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr15"#) -}
903948d33bee6823b846c5089b7a4ef1
  showChrom_addr#11 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr14"#) -}
33426c2b1ceb3f170dbecb6c577f470b
  showChrom_addr#12 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr13"#) -}
f54be805118c17298f9aa55746678978
  showChrom_addr#13 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr12"#) -}
a5f680618df150438a9243dae34c9266
  showChrom_addr#14 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr11"#) -}
4d2b1ac8733b6d488ceb09479d84ae45
  showChrom_addr#15 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr10"#) -}
896d8325b4a03e5c2116e93469ad14b6
  showChrom_addr#16 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr9"#) -}
a95fcc1660b2c1938e82bc1fe6137f22
  showChrom_addr#17 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr8"#) -}
9a138c90bb8469a768f1846cf5e992c9
  showChrom_addr#18 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr7"#) -}
c90a67ef12f0ad830ccd58011fe05b6a
  showChrom_addr#19 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr6"#) -}
1a01bc7c56492f0c77f57aa57c202f12
  showChrom_addr#2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chrX"#) -}
8b5513d0dd2c3a7d36faac13a35c3132
  showChrom_addr#20 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr5"#) -}
8a0821ee989f8ab6d79da691f2beb6b9
  showChrom_addr#21 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr4"#) -}
7544c0db823214b7fe903e39ebf6909d
  showChrom_addr#22 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr3"#) -}
f58bb3f54c26071f518b3233f4ab4cbc
  showChrom_addr#23 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr2"#) -}
891e219db0541ac0ed94de41a97106e6
  showChrom_addr#24 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr1"#) -}
a866daa3c56a3c2a6c2769342d6ae05a
  showChrom_addr#25 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("MT"#) -}
b67a79e888480561f3d00d36bcf33732
  showChrom_addr#26 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Y"#) -}
c3800c1d03af53d84050a21054f00737
  showChrom_addr#27 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("X"#) -}
bc83fe7756302b4625107b51316b198b
  showChrom_addr#28 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("22"#) -}
86485e5f5aa350a3272949b943c47dfc
  showChrom_addr#29 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("21"#) -}
af06b7316c0a240d02e3637d6ca265aa
  showChrom_addr#3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr22"#) -}
07db88aba794f925cef5d95b924005f9
  showChrom_addr#30 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("20"#) -}
667a257ef41928649670de2536ecaaff
  showChrom_addr#31 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("19"#) -}
15bcaa59f9365d4976c384e9ec51757e
  showChrom_addr#32 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("18"#) -}
dde728125f032806c8edae374cc45bad
  showChrom_addr#33 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("17"#) -}
1a5246bc2ba0e13ee8aadbf584d34148
  showChrom_addr#34 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("16"#) -}
d236fa7d97b252ec606504f90b23835a
  showChrom_addr#35 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("15"#) -}
4b369025be8c7e110bf19c40a56c0075
  showChrom_addr#36 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("14"#) -}
323eb2258fdfc7adbaaf95275b8ebdc7
  showChrom_addr#37 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("13"#) -}
8b0e170dd9ed3d688673369282f4bc7b
  showChrom_addr#38 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("12"#) -}
819bc1d5af2c2fc26983a24bb271686e
  showChrom_addr#39 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("11"#) -}
30ef38f0ec5b70810ff6b4bcb3921a3e
  showChrom_addr#4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr21"#) -}
036d6facfa081639e14952e8b2bd8f9e
  showChrom_addr#40 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("10"#) -}
751bc0b8aaec412db23ca4aac6627692
  showChrom_addr#41 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("9"#) -}
99f9b2761ad295c5b493e86d67f09ec3
  showChrom_addr#42 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("8"#) -}
2260373e8af438bc7ead5c4e5739e7ca
  showChrom_addr#43 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("7"#) -}
6fcf61fce151486e15d74c05f90fdc70
  showChrom_addr#44 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("6"#) -}
eef9d8a7a4e0628c8fd14c137af931f9
  showChrom_addr#45 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("5"#) -}
bfd9e7aaa6773390c9023f30adbf9eb8
  showChrom_addr#46 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("4"#) -}
d7fe3829e167f082f23885fc81a42b87
  showChrom_addr#47 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("3"#) -}
5c4129ea60b0348fa1a23ed71f016ab5
  showChrom_addr#48 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("2"#) -}
73b2364ce983a68c0893dbca86a069b5
  showChrom_addr#49 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("1"#) -}
49a2ef5a8cb600f5ad426282b7ab9745
  showChrom_addr#5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr20"#) -}
b079b723f154b0c09dea1a4a25e4ee24
  showChrom_addr#6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr19"#) -}
078765a0af4a4d0e58cba7a1ead908bd
  showChrom_addr#7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr18"#) -}
de976e5539743dc888a286234b5f1a33
  showChrom_addr#8 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr17"#) -}
e2f87a7419db421cffe5a8f3ef926c3a
  showChrom_addr#9 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr16"#) -}
b8a6a62621ac7c293c8ad20c889b8b99
  showcigar ::
    (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
    -> Data.ByteString.Internal.ByteString
  {- Arity: 1, Strictness: <L,U(U,1*U)>,
     Unfolding: (\ (cm :: (GHC.Integer.Type.Integer,
                           Data.ByteString.Internal.ByteString)) ->
                 GHC.Base.mappend
                   @ Data.ByteString.Internal.ByteString
                   Data.ByteString.Internal.$fMonoidByteString
                   (case cm of wild { (,) x ds6 ->
                    case GHC.Show.$w$cshowsPrec4
                           0#
                           x
                           (GHC.Types.[] @ GHC.Types.Char) of ww2 { (#,#) ww3 ww4 ->
                    let {
                      cs :: [GHC.Types.Char] = GHC.Types.: @ GHC.Types.Char ww3 ww4
                    } in
                    case GHC.List.$wlenAcc @ GHC.Types.Char cs 0# of ww { DEFAULT ->
                    Data.ByteString.Internal.$wunsafePackLenChars ww cs } } })
                   (case cm of wild { (,) ds6 y -> y })) -}
8e1ec131c8498d67d0d103e4165adfcd
  skipcolon :: Data.Attoparsec.ByteString.Internal.Parser ()
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.skipcolon_go1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <()>_R)) -}
d49cc5c111d083dd9de8a19b0fe452de
  skipcolon_go1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         ()
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            ()
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wgo6 @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w4 } }) -}
8559d0b44695806151a5bc1692dff6d3
  sndInPair :: Lib.SAMFlag -> GHC.Types.Bool
  RecSel Left Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLSLLLL),1*U(A,A,A,A,A,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.SAMFlag) ->
                 case ds6 of wild { Lib.SAMFlag ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds14 }) -}
d42c274808a8582145221d225043783a
  spaces ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString [()]
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,A><L,A>,
     Unfolding: InlineRule (0, True, True)
                Lib.spaces1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <[()]>_R)) -}
f8fc0ee2e2a1799391462158e2f19f2f
  spaces1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [()]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,A><L,A>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [()]
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wspaces @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 } }) -}
3f324cadca033d26e3ad0ac705606370
  spaces2 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> ()
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 4,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,A> -}
12f2e884be48e547c495ba5179e630ff
  starcigarP ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString
      [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.checkCigarSeqlen2
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <[(GHC.Integer.Type.Integer,
                             Data.ByteString.Internal.ByteString)]>_R)) -}
9bef29ed1835da52d687e9f588f6f1bf
  start1 :: Lib.BEDPE -> GHC.Integer.Type.Integer
  RecSel Left Lib.BEDPE
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLL),1*U(A,1*U,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.BEDPE) ->
                 case ds6 of wild { Lib.BEDPE ds7 ds8 ds9 ds10 ds11 ds12 ds13 ->
                 ds8 }) -}
9bef29ed1835da52d687e9f588f6f1bf
  start2 :: Lib.BEDPE -> GHC.Integer.Type.Integer
  RecSel Left Lib.BEDPE
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLL),1*U(A,A,A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.BEDPE) ->
                 case ds6 of wild { Lib.BEDPE ds7 ds8 ds9 ds10 ds11 ds12 ds13 ->
                 ds11 }) -}
21071c975426d6ea93962a8c0a55430b
  strand :: Lib.AlignedRead -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLSLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds23 }) -}
b9d1ee3308a3fc67d8622b8e11b4edd6
  sumMatches ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> GHC.Integer.Type.Integer
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (cigs :: [(GHC.Integer.Type.Integer,
                              Data.ByteString.Internal.ByteString)]) ->
                 Lib.getAlignedLength_go cigs Lib.defaultBed2) -}
4adaf55e9da199508ec29c1f677c2e51
  sumRefMatches ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> GHC.Integer.Type.Integer
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (cigs :: [(GHC.Integer.Type.Integer,
                              Data.ByteString.Internal.ByteString)]) ->
                 Lib.getTrimdcigCoordDiff_go cigs Lib.defaultBed2) -}
c938d1da83af1270a532f7be729059a8
  sumSeqMatches ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> GHC.Integer.Type.Integer
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (cigs :: [(GHC.Integer.Type.Integer,
                              Data.ByteString.Internal.ByteString)]) ->
                 Lib.getcigseqdiff_go cigs Lib.defaultBed2) -}
cc7c885b6879ffaef09964224ea2b510
  sumSoftClipCigOps ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> GHC.Types.Int
  {- Arity: 1, Strictness: <S,1*U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: [(GHC.Integer.Type.Integer,
                           Data.ByteString.Internal.ByteString)]) ->
                 case Lib.$wgl (Lib.sumSoftClipCigOps_go w) 0# of ww { DEFAULT ->
                 GHC.Types.I# ww }) -}
49db6c9829318812777453974149b0d1
  sumSoftClipCigOps_go ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> [Data.ByteString.Internal.ByteString]
  {- Arity: 1, Strictness: <S,1*U> -}
9057f5554730ffbb8a38011262706079
  taketrim ::
    GHC.Integer.Type.Integer
    -> [(GHC.Integer.Type.Integer,
         Data.ByteString.Internal.ByteString)]
    -> [(GHC.Integer.Type.Integer,
         Data.ByteString.Internal.ByteString)]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U>,
     Unfolding: (\ (cnt :: GHC.Integer.Type.Integer)
                   (cs :: [(GHC.Integer.Type.Integer,
                            Data.ByteString.Internal.ByteString)]) ->
                 GHC.List.takeWhile
                   @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                   (\ (x :: (GHC.Integer.Type.Integer,
                             Data.ByteString.Internal.ByteString)) ->
                    case x of wild { (,) x1 ds6 ->
                    case GHC.Integer.Type.leInteger# x1 cnt of wild1 { DEFAULT ->
                    GHC.Prim.tagToEnum# @ GHC.Types.Bool wild1 } })
                   cs) -}
26e2207e507d4bc5b47a3c19f626e7fd
  targetbed :: Lib.MidFamily -> Lib.BedRecord
  RecSel Left Lib.MidFamily
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLS),1*U(A,A,A,A,A,A,A,A,A,1*U(U,U,U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MidFamily) ->
                 case ds6 of wild { Lib.MidFamily ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds16 }) -}
21071c975426d6ea93962a8c0a55430b
  tbed :: Lib.AlignedRead -> Lib.BedRecord
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLSL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U,U,U,U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds36 }) -}
21071c975426d6ea93962a8c0a55430b
  tlen :: Lib.AlignedRead -> GHC.Integer.Type.Integer
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLSLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds19 }) -}
f2a0a5eaa4450f03c1e0bc69679c1a03
  toBin :: GHC.Types.Int -> GHC.Base.String
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (n :: GHC.Types.Int) ->
                 case Data.Digits.mDigitsRev
                        @ GHC.Types.Int
                        GHC.Real.$fIntegralInt
                        Lib.toBin1
                        n of wild {
                   GHC.Base.Nothing
                   -> case Data.Maybe.fromJust1 ret_ty [GHC.Types.Char] of {}
                   GHC.Base.Just x1
                   -> Lib.toBin_go
                        (GHC.List.reverse1
                           @ GHC.Types.Int
                           x1
                           (GHC.Types.[] @ GHC.Types.Int)) }) -}
67115f70e32e2649dc774801882c1a11
  toBin1 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 2#) -}
0505a92be25cf1fe44df054e14dc9b26
  toBinInt :: GHC.Base.String -> GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (n :: GHC.Base.String) ->
                 case Text.Read.readEither8
                        @ GHC.Types.Int
                        (Text.ParserCombinators.ReadP.run
                           @ GHC.Types.Int
                           Lib.toBinInt3
                           n) of wild {
                   [] -> Lib.toBinInt2
                   : x ds6
                   -> case ds6 of wild1 { [] -> x : ipv ipv1 -> Lib.toBinInt1 } }) -}
2d6ea2d2c422a27b3109e17d5ae4362b
  toBinInt1 :: GHC.Types.Int
  {- Strictness: x -}
4260f76c9d6828f9472235709c17b9f2
  toBinInt2 :: GHC.Types.Int
  {- Strictness: x -}
f99329f56da3f778a975e77f41ef6a6f
  toBinInt3 :: Text.ParserCombinators.ReadP.P GHC.Types.Int
  {- Unfolding: (GHC.Read.$fReadInt_$sreadNumber
                   GHC.Read.$fReadInt2
                   Text.ParserCombinators.ReadPrec.minPrec
                   @ GHC.Types.Int
                   (Text.Read.readEither7 @ GHC.Types.Int)) -}
d2a9aff4bd41607206390136b3f3653b
  toBin_go :: [GHC.Types.Int] -> [GHC.Types.Char]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
8d0e8dae1db7b086f15ce46cc1047027
  trimPairedAlns :: Lib.PairedAln -> Lib.PairedAln
  {- Arity: 1,
     Strictness: <L,U(1*U(U,U(U),U,U,U,U,U(U,U,U,U),A,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),1*U(U,U(U),U,U,U,U,U(U,U,U,U),A,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),1*U,1*U)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.PairedAln) ->
                 Lib.PairedAln
                   (case w of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                    Lib.trimalignment ds6 })
                   (case w of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                    Lib.trimalignment ds7 })
                   (case w of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                    GHC.Base.map
                      @ Lib.AlignedRead
                      @ Lib.AlignedRead
                      Lib.trimalignment
                      ds8 })
                   (case w of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                    GHC.Base.map
                      @ Lib.AlignedRead
                      @ Lib.AlignedRead
                      Lib.trimalignment
                      ds9 })) -}
ff13974849be1a14e7222d1df4debaa1
  trimalignment :: Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 1,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLSLLLLLLLLLLL),1*U(U,U(U),U,U,U,U,U(U,U,U,U),A,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Unfolding: (\ (a :: Lib.AlignedRead) ->
                 case a of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 let {
                   mapdaln :: GHC.Types.Bool
                   = case ds7 of wild1 { GHC.Types.I# x# ->
                     case GHC.Prim.andI# x# 4# of wild2 {
                       DEFAULT -> GHC.Types.False 0# -> GHC.Types.True } }
                 } in
                 let {
                   $j :: Lib.AlignedRead <join 0>
                   = let {
                       $j1 :: Lib.AlignedRead <join 0>
                       = let {
                           $j2 :: Lib.AlignedRead <join 0>
                           = case GHC.Classes.$fEq[]_$c==
                                    @ Lib.BedRecord
                                    Lib.$fEqBedRecord
                                    ds25
                                    (GHC.Types.[] @ Lib.BedRecord) of wild1 {
                               GHC.Types.False
                               -> Lib.AlignedRead
                                    ds6
                                    ds7
                                    ds8
                                    ds9
                                    ds10
                                    ds11
                                    ds12
                                    ds12
                                    ds14
                                    ds15
                                    ds16
                                    ds17
                                    ds18
                                    ds19
                                    ds20
                                    ds21
                                    ds22
                                    ds23
                                    ds24
                                    ds25
                                    ds26
                                    ds27
                                    ds28
                                    ds29
                                    ds30
                                    ds31
                                    ds32
                                    ds33
                                    ds34
                                    ds35
                                    ds36
                               GHC.Types.True
                               -> case GHC.Classes.$fEq[]_$c==
                                         @ Lib.BedRecord
                                         Lib.$fEqBedRecord
                                         ds26
                                         (GHC.Types.[] @ Lib.BedRecord) of wild2 { DEFAULT ->
                                  Lib.AlignedRead
                                    ds6
                                    ds7
                                    ds8
                                    ds9
                                    ds10
                                    ds11
                                    ds12
                                    ds12
                                    ds14
                                    ds15
                                    ds16
                                    ds17
                                    ds18
                                    ds19
                                    ds20
                                    ds21
                                    ds22
                                    ds23
                                    ds24
                                    ds25
                                    ds26
                                    ds27
                                    ds28
                                    ds29
                                    ds30
                                    ds31
                                    ds32
                                    ds33
                                    ds34
                                    ds35
                                    ds36 } }
                         } in
                         case GHC.Classes.$fEq[]_$c==
                                @ Lib.BedRecord
                                Lib.$fEqBedRecord
                                ds25
                                (GHC.Types.[] @ Lib.BedRecord) of wild1 {
                           GHC.Types.False -> $j2
                           GHC.Types.True
                           -> case GHC.Classes.$fEq[]_$c==
                                     @ Lib.BedRecord
                                     Lib.$fEqBedRecord
                                     ds26
                                     (GHC.Types.[] @ Lib.BedRecord) of wild2 {
                                GHC.Types.False
                                -> case mapdaln of wild3 {
                                     GHC.Types.False -> $j2 GHC.Types.True -> Lib.trimrev wild }
                                GHC.Types.True -> $j2 } }
                     } in
                     case GHC.Classes.$fEq[]_$c==
                            @ Lib.BedRecord
                            Lib.$fEqBedRecord
                            ds25
                            (GHC.Types.[] @ Lib.BedRecord) of wild1 {
                       GHC.Types.False
                       -> case GHC.Classes.$fEq[]_$c==
                                 @ Lib.BedRecord
                                 Lib.$fEqBedRecord
                                 ds26
                                 (GHC.Types.[] @ Lib.BedRecord) of wild2 {
                            GHC.Types.False -> $j1
                            GHC.Types.True
                            -> case mapdaln of wild3 {
                                 GHC.Types.False -> $j1 GHC.Types.True -> Lib.trimfwd wild } }
                       GHC.Types.True -> $j1 }
                 } in
                 case GHC.Classes.$fEq[]_$c==
                        @ Lib.BedRecord
                        Lib.$fEqBedRecord
                        ds25
                        (GHC.Types.[] @ Lib.BedRecord) of wild1 {
                   GHC.Types.False
                   -> case GHC.Classes.$fEq[]_$c==
                             @ Lib.BedRecord
                             Lib.$fEqBedRecord
                             ds26
                             (GHC.Types.[] @ Lib.BedRecord) of wild2 {
                        GHC.Types.False
                        -> case mapdaln of wild3 {
                             GHC.Types.False -> $j GHC.Types.True -> Lib.trimboth wild }
                        GHC.Types.True -> $j }
                   GHC.Types.True -> $j } }) -}
167d9206f03ca667a925bc841988b179
  trimboth :: Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 1,
     Strictness: <S,1*U(U,U,U,U,U,U,U(U,U,U,U),A,U,A,U,U,U,U,U,U,U,U,U,U,U,U,A,A,A,U,U,U,U,U,A)>,
     Unfolding: (\ (a :: Lib.AlignedRead) ->
                 case a of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 let {
                   newendpos :: GHC.Integer.Type.Integer
                   = case ds26 of wild1 {
                       [] -> case GHC.List.badHead ret_ty GHC.Integer.Type.Integer of {}
                       : x ds37
                       -> case x of wild2 { Lib.BedRecord ds38 ds39 ds40 ds41 -> ds39 } }
                 } in
                 let {
                   rdiff :: GHC.Integer.Type.Integer
                   = GHC.Integer.Type.minusInteger ds10 newendpos
                 } in
                 let {
                   tendpos :: GHC.Integer.Type.Integer
                   = case GHC.Integer.Type.ltInteger#
                            rdiff
                            Lib.defaultBed2 of wild1 { DEFAULT ->
                     case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild1 of wild2 {
                       GHC.Types.False -> newendpos GHC.Types.True -> ds10 } }
                 } in
                 let {
                   newpos :: GHC.Integer.Type.Integer
                   = case ds25 of wild1 {
                       [] -> case GHC.List.badHead ret_ty GHC.Integer.Type.Integer of {}
                       : x ds37
                       -> case x of wild2 { Lib.BedRecord ds38 ds39 ds40 ds41 -> ds40 } }
                 } in
                 let {
                   fdiff :: GHC.Integer.Type.Integer
                   = GHC.Integer.Type.minusInteger newpos ds9
                 } in
                 let {
                   newcig :: Data.ByteString.Internal.ByteString
                   = case ds12 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                     Lib.$wupdateCigB fdiff rdiff ww1 ww2 ww3 ww4 }
                 } in
                 let {
                   tpos :: GHC.Integer.Type.Integer
                   = case GHC.Integer.Type.ltInteger#
                            fdiff
                            Lib.defaultBed2 of wild1 { DEFAULT ->
                     case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild1 of wild2 {
                       GHC.Types.False -> newpos GHC.Types.True -> ds9 } }
                 } in
                 Lib.AlignedRead
                   ds6
                   ds7
                   ds8
                   ds9
                   ds10
                   ds11
                   ds12
                   newcig
                   ds14
                   (case newcig of wild1 { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                    case Lib.$wparseCigar
                           @ [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                           dt
                           dt1
                           dt2
                           dt3
                           dt3
                           0#
                           0#
                           Data.Attoparsec.Internal.Types.Complete
                           (Data.Attoparsec.ByteString.Internal.failK
                              @ [(GHC.Integer.Type.Integer,
                                  Data.ByteString.Internal.ByteString)])
                             `cast`
                           (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                            ->_R <Data.Attoparsec.Internal.Types.Pos
                                  -> Data.Attoparsec.Internal.Types.More
                                  -> [GHC.Base.String]
                                  -> GHC.Base.String
                                  -> Data.Attoparsec.Internal.Types.IResult
                                       Data.ByteString.Internal.ByteString
                                       [(GHC.Integer.Type.Integer,
                                         Data.ByteString.Internal.ByteString)]>_R)
                           (Data.Attoparsec.ByteString.Internal.successK
                              @ [(GHC.Integer.Type.Integer,
                                  Data.ByteString.Internal.ByteString)])
                             `cast`
                           (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                            ->_R <Data.Attoparsec.Internal.Types.Pos
                                  -> Data.Attoparsec.Internal.Types.More
                                  -> [(GHC.Integer.Type.Integer,
                                       Data.ByteString.Internal.ByteString)]
                                  -> Data.Attoparsec.Internal.Types.IResult
                                       Data.ByteString.Internal.ByteString
                                       [(GHC.Integer.Type.Integer,
                                         Data.ByteString.Internal.ByteString)]>_R) of wild2 {
                      Data.Attoparsec.Internal.Types.Fail ds37 ds38 err
                      -> case ds38 of wild3 { DEFAULT ->
                         GHC.List.badHead
                           @ [(GHC.Integer.Type.Integer,
                               Data.ByteString.Internal.ByteString)] }
                      Data.Attoparsec.Internal.Types.Partial ipv
                      -> case Lib.checkCigarSeqlen1 ret_ty Lib.CigarMap of {}
                      Data.Attoparsec.Internal.Types.Done ds37 a1 -> a1 } })
                   ds16
                   ds17
                   ds18
                   ds19
                   ds20
                   ds21
                   ds22
                   ds23
                   ds24
                   ds25
                   ds26
                   ds27
                   (case GHC.Integer.Type.neqInteger# ds9 tpos of wild1 { DEFAULT ->
                    case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild1 of wild2 {
                      GHC.Types.False -> GHC.Integer.Type.neqInteger ds10 tendpos
                      GHC.Types.True -> GHC.Types.True } })
                   tpos
                   tendpos
                   ds31
                   ds32
                   ds33
                   ds34
                   ds35
                   (Lib.boolZeroLengthCigar newcig) }) -}
21071c975426d6ea93962a8c0a55430b
  trimdToZeroLength :: Lib.AlignedRead -> GHC.Types.Bool
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLS),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds37 }) -}
21071c975426d6ea93962a8c0a55430b
  trimdcigar ::
    Lib.AlignedRead -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLSLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds14 }) -}
21071c975426d6ea93962a8c0a55430b
  trimdcigmap :: Lib.AlignedRead -> Lib.CigarMap
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLSLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds16 }) -}
21071c975426d6ea93962a8c0a55430b
  trimdendpos :: Lib.AlignedRead -> GHC.Integer.Type.Integer
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLSLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds31 }) -}
21071c975426d6ea93962a8c0a55430b
  trimdflag :: Lib.AlignedRead -> GHC.Types.Bool
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLSLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds29 }) -}
21071c975426d6ea93962a8c0a55430b
  trimdpos :: Lib.AlignedRead -> GHC.Integer.Type.Integer
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLSLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds30 }) -}
3d0a0fedff07761bc6cc2e9718381ce8
  trimfwd :: Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 1,
     Strictness: <S,1*U(U,U,U,U,U,U,U(U,U,U,U),A,U,A,U,U,U,U,U,U,U,U,U,U,U,U,A,A,U,U,U,U,U,U,A)>,
     Unfolding: (\ (a :: Lib.AlignedRead) ->
                 case a of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 let {
                   newpos :: GHC.Integer.Type.Integer
                   = case ds25 of wild1 {
                       [] -> case GHC.List.badHead ret_ty GHC.Integer.Type.Integer of {}
                       : x ds37
                       -> case x of wild2 { Lib.BedRecord ds38 ds39 ds40 ds41 -> ds40 } }
                 } in
                 let {
                   fdiff :: GHC.Integer.Type.Integer
                   = GHC.Integer.Type.minusInteger newpos ds9
                 } in
                 let {
                   newcig :: Data.ByteString.Internal.ByteString
                   = case ds12 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                     Lib.$wupdateCigF fdiff ww1 ww2 ww3 ww4 }
                 } in
                 let {
                   tpos :: GHC.Integer.Type.Integer
                   = case GHC.Integer.Type.ltInteger#
                            fdiff
                            Lib.defaultBed2 of wild1 { DEFAULT ->
                     case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild1 of wild2 {
                       GHC.Types.False -> newpos GHC.Types.True -> ds9 } }
                 } in
                 Lib.AlignedRead
                   ds6
                   ds7
                   ds8
                   ds9
                   ds10
                   ds11
                   ds12
                   newcig
                   ds14
                   (case newcig of wild1 { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                    case Lib.$wparseCigar
                           @ [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                           dt
                           dt1
                           dt2
                           dt3
                           dt3
                           0#
                           0#
                           Data.Attoparsec.Internal.Types.Complete
                           (Data.Attoparsec.ByteString.Internal.failK
                              @ [(GHC.Integer.Type.Integer,
                                  Data.ByteString.Internal.ByteString)])
                             `cast`
                           (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                            ->_R <Data.Attoparsec.Internal.Types.Pos
                                  -> Data.Attoparsec.Internal.Types.More
                                  -> [GHC.Base.String]
                                  -> GHC.Base.String
                                  -> Data.Attoparsec.Internal.Types.IResult
                                       Data.ByteString.Internal.ByteString
                                       [(GHC.Integer.Type.Integer,
                                         Data.ByteString.Internal.ByteString)]>_R)
                           (Data.Attoparsec.ByteString.Internal.successK
                              @ [(GHC.Integer.Type.Integer,
                                  Data.ByteString.Internal.ByteString)])
                             `cast`
                           (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                            ->_R <Data.Attoparsec.Internal.Types.Pos
                                  -> Data.Attoparsec.Internal.Types.More
                                  -> [(GHC.Integer.Type.Integer,
                                       Data.ByteString.Internal.ByteString)]
                                  -> Data.Attoparsec.Internal.Types.IResult
                                       Data.ByteString.Internal.ByteString
                                       [(GHC.Integer.Type.Integer,
                                         Data.ByteString.Internal.ByteString)]>_R) of wild2 {
                      Data.Attoparsec.Internal.Types.Fail ds37 ds38 err
                      -> case ds38 of wild3 { DEFAULT ->
                         GHC.List.badHead
                           @ [(GHC.Integer.Type.Integer,
                               Data.ByteString.Internal.ByteString)] }
                      Data.Attoparsec.Internal.Types.Partial ipv
                      -> case Lib.checkCigarSeqlen1 ret_ty Lib.CigarMap of {}
                      Data.Attoparsec.Internal.Types.Done ds37 a1 -> a1 } })
                   ds16
                   ds17
                   ds18
                   ds19
                   ds20
                   ds21
                   ds22
                   ds23
                   ds24
                   ds25
                   ds26
                   ds27
                   (case GHC.Integer.Type.neqInteger# ds9 tpos of wild1 { DEFAULT ->
                    GHC.Prim.tagToEnum# @ GHC.Types.Bool wild1 })
                   tpos
                   ds30
                   ds31
                   ds32
                   ds33
                   ds34
                   ds35
                   (Lib.boolZeroLengthCigar newcig) }) -}
8edcc2498c46c20d06182ee101cd5654
  trimmedPct :: Lib.RunStats -> GHC.Types.Double
  RecSel Left Lib.RunStats
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSL),1*U(A,A,A,A,1*U(U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.RunStats) ->
                 case ds6 of wild { Lib.RunStats ds7 ds8 ds9 ds10 ds11 ds12 ->
                 ds11 }) -}
93cff559b12cfd9296c10038305017da
  trimprimerPairsE ::
    Lib.CMap -> Lib.CMap -> Lib.PairedAln -> Lib.PairedAln
  {- Arity: 3,
     Strictness: <L,U><L,U><L,1*U(1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,A,A,A,U,U,U,U,U,U,U,U,U),1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,A,A,A,U,U,U,U,U,U,U,U,U),1*U,1*U)>m,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Lib.CMap) (w1 :: Lib.CMap) (w2 :: Lib.PairedAln) ->
                 case Lib.$wtrimprimerPairsE
                        w
                        w1
                        w2 of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 Lib.PairedAln ww1 ww2 ww3 ww4 }) -}
1bcd37f6b3c1ec80c3d77f10b330bdce
  trimprimersE ::
    Lib.CMap -> Lib.CMap -> Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 3,
     Strictness: <L,1*U><L,1*U><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,A,A,A,U,U,U,U,U,U,U,U,U)>,
     Unfolding: InlineRule (3, True, False)
                (\ (fmap :: Lib.CMap) (rmap :: Lib.CMap) (a :: Lib.AlignedRead) ->
                 Lib.trimalignment (Lib.addprimerints fmap rmap a)) -}
762b55d9a7e09837020c71c87ecf66ca
  trimrem ::
    GHC.Integer.Type.Integer
    -> [(GHC.Integer.Type.Integer,
         Data.ByteString.Internal.ByteString)]
    -> [(GHC.Integer.Type.Integer,
         Data.ByteString.Internal.ByteString)]
  {- Arity: 2, Strictness: <L,U><S,1*U>,
     Unfolding: (\ (cnt :: GHC.Integer.Type.Integer)
                   (cs :: [(GHC.Integer.Type.Integer,
                            Data.ByteString.Internal.ByteString)]) ->
                 let {
                   rem :: [(GHC.Integer.Type.Integer,
                            Data.ByteString.Internal.ByteString)]
                   = GHC.List.dropWhile
                       @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                       (\ (x :: (GHC.Integer.Type.Integer,
                                 Data.ByteString.Internal.ByteString)) ->
                        case x of wild { (,) x1 ds6 ->
                        case GHC.Integer.Type.leInteger# x1 cnt of wild1 { DEFAULT ->
                        GHC.Prim.tagToEnum# @ GHC.Types.Bool wild1 } })
                       cs
                 } in
                 case GHC.List.$wlenAcc
                        @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                        rem
                        0# of ww2 {
                   DEFAULT
                   -> case rem of wild {
                        []
                        -> case GHC.List.badHead
                           ret_ty [(GHC.Integer.Type.Integer,
                                    Data.ByteString.Internal.ByteString)]
                           of {}
                        : x ds6
                        -> case x of wild1 { (,) ds7 y ->
                           case y of wild2 { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                           case Lib.countDs2 of wild3 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim./=# dt3 dt7) of wild4 {
                             GHC.Types.False
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.eqAddr# dt dt4) of wild5 {
                                  GHC.Types.False
                                  -> case Data.ByteString.Internal.$wcompareBytes
                                            dt
                                            dt1
                                            dt2
                                            dt3
                                            dt4
                                            dt5
                                            dt6
                                            dt7 of wild6 {
                                       DEFAULT -> wild GHC.Types.EQ -> ds6 }
                                  GHC.Types.True
                                  -> case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.==# dt2 dt6) of wild6 {
                                       GHC.Types.False
                                       -> case Data.ByteString.Internal.$wcompareBytes
                                                 dt
                                                 dt1
                                                 dt2
                                                 dt3
                                                 dt4
                                                 dt5
                                                 dt6
                                                 dt7 of wild7 {
                                            DEFAULT -> wild GHC.Types.EQ -> ds6 }
                                       GHC.Types.True -> ds6 } }
                             GHC.Types.True -> wild } } } } }
                   0#
                   -> GHC.Types.[]
                        @ (GHC.Integer.Type.Integer,
                           Data.ByteString.Internal.ByteString) }) -}
917dd45395d9a9c318f76b3367cb2836
  trimrev :: Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 1,
     Strictness: <S,1*U(U,U,U,U,U,U,U(U,U,U,U),A,U,A,U,U,U,U,U,U,U,U,U,U,U,U,A,U,A,U,U,U,U,U,A)>,
     Unfolding: (\ (a :: Lib.AlignedRead) ->
                 case a of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 let {
                   newendpos :: GHC.Integer.Type.Integer
                   = case ds26 of wild1 {
                       [] -> case GHC.List.badHead ret_ty GHC.Integer.Type.Integer of {}
                       : x ds37
                       -> case x of wild2 { Lib.BedRecord ds38 ds39 ds40 ds41 -> ds39 } }
                 } in
                 let {
                   rdiff :: GHC.Integer.Type.Integer
                   = GHC.Integer.Type.minusInteger ds10 newendpos
                 } in
                 let {
                   newcig :: Data.ByteString.Internal.ByteString
                   = case ds12 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                     Lib.$wupdateCigR rdiff ww1 ww2 ww3 ww4 }
                 } in
                 let {
                   tendpos :: GHC.Integer.Type.Integer
                   = case GHC.Integer.Type.ltInteger#
                            rdiff
                            Lib.defaultBed2 of wild1 { DEFAULT ->
                     case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild1 of wild2 {
                       GHC.Types.False -> newendpos GHC.Types.True -> ds10 } }
                 } in
                 Lib.AlignedRead
                   ds6
                   ds7
                   ds8
                   ds9
                   ds10
                   ds11
                   ds12
                   newcig
                   ds14
                   (case newcig of wild1 { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                    case Lib.$wparseCigar
                           @ [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                           dt
                           dt1
                           dt2
                           dt3
                           dt3
                           0#
                           0#
                           Data.Attoparsec.Internal.Types.Complete
                           (Data.Attoparsec.ByteString.Internal.failK
                              @ [(GHC.Integer.Type.Integer,
                                  Data.ByteString.Internal.ByteString)])
                             `cast`
                           (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                            ->_R <Data.Attoparsec.Internal.Types.Pos
                                  -> Data.Attoparsec.Internal.Types.More
                                  -> [GHC.Base.String]
                                  -> GHC.Base.String
                                  -> Data.Attoparsec.Internal.Types.IResult
                                       Data.ByteString.Internal.ByteString
                                       [(GHC.Integer.Type.Integer,
                                         Data.ByteString.Internal.ByteString)]>_R)
                           (Data.Attoparsec.ByteString.Internal.successK
                              @ [(GHC.Integer.Type.Integer,
                                  Data.ByteString.Internal.ByteString)])
                             `cast`
                           (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                            ->_R <Data.Attoparsec.Internal.Types.Pos
                                  -> Data.Attoparsec.Internal.Types.More
                                  -> [(GHC.Integer.Type.Integer,
                                       Data.ByteString.Internal.ByteString)]
                                  -> Data.Attoparsec.Internal.Types.IResult
                                       Data.ByteString.Internal.ByteString
                                       [(GHC.Integer.Type.Integer,
                                         Data.ByteString.Internal.ByteString)]>_R) of wild2 {
                      Data.Attoparsec.Internal.Types.Fail ds37 ds38 err
                      -> case ds38 of wild3 { DEFAULT ->
                         GHC.List.badHead
                           @ [(GHC.Integer.Type.Integer,
                               Data.ByteString.Internal.ByteString)] }
                      Data.Attoparsec.Internal.Types.Partial ipv
                      -> case Lib.checkCigarSeqlen1 ret_ty Lib.CigarMap of {}
                      Data.Attoparsec.Internal.Types.Done ds37 a1 -> a1 } })
                   ds16
                   ds17
                   ds18
                   ds19
                   ds20
                   ds21
                   ds22
                   ds23
                   ds24
                   ds25
                   ds26
                   ds27
                   (case GHC.Integer.Type.neqInteger#
                           ds10
                           tendpos of wild1 { DEFAULT ->
                    GHC.Prim.tagToEnum# @ GHC.Types.Bool wild1 })
                   ds29
                   tendpos
                   ds31
                   ds32
                   ds33
                   ds34
                   ds35
                   (Lib.boolZeroLengthCigar newcig) }) -}
26e2207e507d4bc5b47a3c19f626e7fd
  txposedcount :: Lib.MidFamily -> GHC.Integer.Type.Integer
  RecSel Left Lib.MidFamily
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLSLLL),1*U(A,A,A,A,A,A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MidFamily) ->
                 case ds6 of wild { Lib.MidFamily ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds13 }) -}
7299d757c16366d1d718af81bbbc4d0b
  txtfieldp ::
    Data.Attoparsec.ByteString.Internal.Parser
      Data.ByteString.Internal.ByteString
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.optfieldsp5
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)) -}
b359b254552cf7f85704f7d4b99b890c
  uchrparser :: Data.Attoparsec.ByteString.Internal.Parser Lib.UChr
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.uchrparser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <Lib.UChr>_R)) -}
ea811b2929ce9587e69659fab57df5a1
  uchrparser1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.UChr
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.UChr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wuchrparser @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
b81e54a2749adf7cb3b456ebd088009e
  updateCigB ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
  {- Arity: 3, Strictness: <L,U><L,1*U><S(SLSS),1*U(U,U,U,U)>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Integer.Type.Integer)
                   (w1 :: GHC.Integer.Type.Integer)
                   (w2 :: Data.ByteString.Internal.ByteString) ->
                 case w2 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wupdateCigB w w1 ww1 ww2 ww3 ww4 }) -}
e30ef3f3a7c0dee6e153b48adfc07f24
  updateCigF ::
    GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
  {- Arity: 2, Strictness: <L,1*U><S(SLSS),1*U(U,U,U,U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Integer.Type.Integer)
                   (w1 :: Data.ByteString.Internal.ByteString) ->
                 case w1 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wupdateCigF w ww1 ww2 ww3 ww4 }) -}
24d60627cea15840278cdd865f3e0c84
  updateCigR ::
    GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
  {- Arity: 2, Strictness: <L,1*U><S(SLSS),1*U(U,U,U,U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Integer.Type.Integer)
                   (w1 :: Data.ByteString.Internal.ByteString) ->
                 case w1 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wupdateCigR w ww1 ww2 ww3 ww4 }) -}
ed70f8f4903ccaf73615859bc4ed4a33
  updatePairedAlnTrimdFields :: Lib.PairedAln -> Lib.PairedAln
  {- Arity: 1,
     Strictness: <L,U(1*U(U,U(U),U,U,U,U,U,U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),1*U(U,U(U),U,U,U,U,U,U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),1*U,1*U)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.PairedAln) ->
                 Lib.PairedAln
                   (case w of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                    Lib.updateTrimdAlnFields ds6 })
                   (case w of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                    Lib.updateTrimdAlnFields ds7 })
                   (case w of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                    GHC.Base.map
                      @ Lib.AlignedRead
                      @ Lib.AlignedRead
                      Lib.updateTrimdAlnFields
                      ds8 })
                   (case w of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                    GHC.Base.map
                      @ Lib.AlignedRead
                      @ Lib.AlignedRead
                      Lib.updateTrimdAlnFields
                      ds9 })) -}
6799c84b2ef5396d9d9b74857c93ca03
  updateR1nextfields :: Lib.PairedAln -> Lib.PairedAln
  {- Arity: 1,
     Strictness: <S,1*U(U,U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.PairedAln) ->
                 case w of ww { Lib.PairedAln ww1 ww2 ww3 ww4 ->
                 let {
                   ds6 :: (Lib.AlignedRead, [Lib.AlignedRead])
                   = let {
                       trimdposR2 :: GHC.Integer.Type.Integer
                       = case ww2 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                         ds30 }
                     } in
                     case GHC.Base.map
                            @ Lib.AlignedRead
                            @ Lib.AlignedRead
                            (\ (x :: Lib.AlignedRead) ->
                             case x of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                             Lib.AlignedRead
                               ds7
                               ds8
                               ds9
                               ds10
                               ds11
                               ds12
                               ds13
                               ds14
                               ds15
                               ds16
                               ds17
                               trimdposR2
                               ds19
                               ds20
                               ds21
                               ds22
                               ds23
                               ds24
                               ds25
                               ds26
                               ds27
                               ds28
                               ds29
                               ds30
                               ds31
                               ds32
                               ds33
                               ds34
                               ds35
                               ds36
                               ds37 })
                            (GHC.Types.: @ Lib.AlignedRead ww1 ww3) of wild {
                       [] -> Lib.updateTrimdPairFields2
                       : newpr1 newsecr1s -> (newpr1, newsecr1s) }
                 } in
                 Lib.PairedAln
                   (case ds6 of ds7 { (,) newpr1 newsecr1s -> newpr1 })
                   ww2
                   (case ds6 of ds7 { (,) newpr1 newsecr1s -> newsecr1s })
                   ww4 }) -}
4f91f3f1afce6d071b7823a4aa58295c
  updateR2nextfields :: Lib.PairedAln -> Lib.PairedAln
  {- Arity: 1,
     Strictness: <S,1*U(U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U,U)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.PairedAln) ->
                 case w of ww { Lib.PairedAln ww1 ww2 ww3 ww4 ->
                 let {
                   ds6 :: (Lib.AlignedRead, [Lib.AlignedRead])
                   = let {
                       trimdposR1 :: GHC.Integer.Type.Integer
                       = case ww1 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                         ds30 }
                     } in
                     case GHC.Base.map
                            @ Lib.AlignedRead
                            @ Lib.AlignedRead
                            (\ (x :: Lib.AlignedRead) ->
                             case x of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                             Lib.AlignedRead
                               ds7
                               ds8
                               ds9
                               ds10
                               ds11
                               ds12
                               ds13
                               ds14
                               ds15
                               ds16
                               ds17
                               trimdposR1
                               ds19
                               ds20
                               ds21
                               ds22
                               ds23
                               ds24
                               ds25
                               ds26
                               ds27
                               ds28
                               ds29
                               ds30
                               ds31
                               ds32
                               ds33
                               ds34
                               ds35
                               ds36
                               ds37 })
                            (GHC.Types.: @ Lib.AlignedRead ww2 ww4) of wild {
                       [] -> Lib.updateTrimdPairFields1
                       : newpr2 newsecr2s -> (newpr2, newsecr2s) }
                 } in
                 Lib.PairedAln
                   ww1
                   (case ds6 of ds7 { (,) newpr2 newsecr2s -> newpr2 })
                   ww3
                   (case ds6 of ds7 { (,) newpr2 newsecr2s -> newsecr2s }) }) -}
b81057f1df7bb68bb58aa6a6b92d7a5f
  updateTrimdAlnFields :: Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 1,
     Strictness: <S(LLLLLLLS(SLSS)LLLLLLLLLLLLLLLLLLLLLLL),1*U(U,U(U),U,U,U,U,U,U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Unfolding: (\ (a :: Lib.AlignedRead) ->
                 case a of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 case ds13 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 let {
                   $j :: Lib.AlignedRead <join 0>
                   = Lib.AlignedRead
                       ds6
                       ds7
                       ds8
                       ds9
                       ds10
                       ds11
                       ds12
                       ww
                       ds14
                       ds15
                       ds16
                       ds17
                       ds18
                       ds19
                       ds20
                       (Data.ByteString.concat
                          (GHC.Types.:
                             @ Data.ByteString.Internal.ByteString
                             ds21
                             Lib.addtrimtag1))
                       ds22
                       ds23
                       ds24
                       ds25
                       ds26
                       ds27
                       ds28
                       ds29
                       ds30
                       ds31
                       ds32
                       ds33
                       ds34
                       ds35
                       ds36
                 } in
                 let {
                   $j1 :: Lib.AlignedRead <join 0>
                   = case ds28 of wild1 {
                       GHC.Types.False -> wild
                       GHC.Types.True
                       -> Lib.AlignedRead
                            ds6
                            (Lib.setZeroLengthAlnFlag ds7)
                            Lib.NONE
                            ds9
                            ds10
                            Lib.defaultBed2
                            ds12
                            Lib.addtrimtag5
                            ds14
                            ds15
                            ds16
                            ds17
                            ds18
                            ds19
                            ds20
                            (Data.ByteString.concat
                               (GHC.Types.:
                                  @ Data.ByteString.Internal.ByteString
                                  ds21
                                  Lib.addtrimtag6))
                            ds22
                            ds23
                            GHC.Types.False
                            ds25
                            ds26
                            ds27
                            GHC.Types.True
                            Lib.updateTrimdAlnFields1
                            Lib.defaultBed2
                            ds31
                            ds32
                            ds33
                            ds34
                            ds35
                            ds36 }
                 } in
                 letrec {
                   go19 :: [GHC.Types.Char] -> Lib.AlignedRead
                     <join 1> {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds37 :: [GHC.Types.Char]) ->
                     case ds37 of wild1 {
                       [] -> $j1
                       : y ys
                       -> case GHC.List.elem
                                 @ GHC.Types.Char
                                 GHC.Classes.$fEqChar
                                 y
                                 Lib.clearNonRealCigar1 of wild2 {
                            GHC.Types.False -> go19 ys GHC.Types.True -> $j } }
                 } in
                 go19
                   (Data.ByteString.Internal.$wunpackAppendCharsLazy
                      ww1
                      ww2
                      ww3
                      ww4
                      (GHC.Types.[] @ GHC.Types.Char)) } }) -}
2c416b262ec5a6edee6d26e85472d418
  updateTrimdAlnFields1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (-1) -}
3f0f10f87c04421ed3e28b38e7bcb4e5
  updateTrimdPairFields :: Lib.PairedAln -> Lib.PairedAln
  {- Arity: 1,
     Strictness: <S(S(LLLLLLLLLLLLLLLLLLLLLLSLLLLLLLL)LLL),1*U(U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)>m,
     Unfolding: (\ (pa :: Lib.PairedAln) ->
                 case pa of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                 case ds6 of wild1 { Lib.AlignedRead ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ->
                 let {
                   $j :: Lib.PairedAln <join 0> {- Strictness: m -}
                   = case ds32 of wild2 {
                       GHC.Types.False
                       -> case ds7 of wild3 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                          case ds63 of wild4 {
                            GHC.Types.False -> wild
                            GHC.Types.True
                            -> let {
                                 ds72 :: (Lib.AlignedRead, [Lib.AlignedRead])
                                 = case GHC.Base.map
                                          @ Lib.AlignedRead
                                          @ Lib.AlignedRead
                                          (\ (x :: Lib.AlignedRead) ->
                                           case x of wild5 { Lib.AlignedRead ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ds90 ds91 ds92 ds93 ds94 ds95 ds96 ds97 ds98 ds99 ds100 ds101 ds102 ds103 ->
                                           Lib.AlignedRead
                                             ds73
                                             ds74
                                             ds75
                                             ds76
                                             ds77
                                             ds78
                                             ds79
                                             ds80
                                             ds81
                                             ds82
                                             ds83
                                             ds64
                                             ds85
                                             ds86
                                             ds87
                                             ds88
                                             ds89
                                             ds90
                                             ds91
                                             ds92
                                             ds93
                                             ds94
                                             ds95
                                             ds96
                                             ds97
                                             ds98
                                             ds99
                                             ds100
                                             ds101
                                             ds102
                                             ds103 })
                                          (GHC.Types.: @ Lib.AlignedRead wild1 ds8) of wild5 {
                                     [] -> Lib.updateTrimdPairFields2
                                     : newpr1 newsecr1s -> (newpr1, newsecr1s) }
                               } in
                               Lib.PairedAln
                                 (case ds72 of ds73 { (,) newpr1 newsecr1s -> newpr1 })
                                 wild3
                                 (case ds72 of ds73 { (,) newpr1 newsecr1s -> newsecr1s })
                                 ds9 } }
                       GHC.Types.True
                       -> let {
                            ds41 :: (Lib.AlignedRead, [Lib.AlignedRead])
                            = case GHC.Base.map
                                     @ Lib.AlignedRead
                                     @ Lib.AlignedRead
                                     (\ (x :: Lib.AlignedRead) ->
                                      case x of wild3 { Lib.AlignedRead ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ->
                                      Lib.AlignedRead
                                        ds42
                                        ds43
                                        ds44
                                        ds45
                                        ds46
                                        ds47
                                        ds48
                                        ds49
                                        ds50
                                        ds51
                                        ds52
                                        ds33
                                        ds54
                                        ds55
                                        ds56
                                        ds57
                                        ds58
                                        ds59
                                        ds60
                                        ds61
                                        ds62
                                        ds63
                                        ds64
                                        ds65
                                        ds66
                                        ds67
                                        ds68
                                        ds69
                                        ds70
                                        ds71
                                        ds72 })
                                     (GHC.Types.: @ Lib.AlignedRead ds7 ds9) of wild3 {
                                [] -> Lib.updateTrimdPairFields1
                                : newpr2 newsecr2s -> (newpr2, newsecr2s) }
                          } in
                          Lib.PairedAln
                            wild1
                            (case ds41 of ds42 { (,) newpr2 newsecr2s -> newpr2 })
                            ds8
                            (case ds41 of ds42 { (,) newpr2 newsecr2s -> newsecr2s }) }
                 } in
                 case ds32 of wild2 {
                   GHC.Types.False -> $j
                   GHC.Types.True
                   -> case ds7 of wild3 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                      case ds63 of wild4 {
                        GHC.Types.False -> $j
                        GHC.Types.True
                        -> let {
                             ds72 :: (Lib.AlignedRead, [Lib.AlignedRead])
                             = case GHC.Base.map
                                      @ Lib.AlignedRead
                                      @ Lib.AlignedRead
                                      (\ (x :: Lib.AlignedRead) ->
                                       case x of wild5 { Lib.AlignedRead ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ds90 ds91 ds92 ds93 ds94 ds95 ds96 ds97 ds98 ds99 ds100 ds101 ds102 ds103 ->
                                       Lib.AlignedRead
                                         ds73
                                         ds74
                                         ds75
                                         ds76
                                         ds77
                                         ds78
                                         ds79
                                         ds80
                                         ds81
                                         ds82
                                         ds83
                                         ds33
                                         ds85
                                         ds86
                                         ds87
                                         ds88
                                         ds89
                                         ds90
                                         ds91
                                         ds92
                                         ds93
                                         ds94
                                         ds95
                                         ds96
                                         ds97
                                         ds98
                                         ds99
                                         ds100
                                         ds101
                                         ds102
                                         ds103 })
                                      (GHC.Types.: @ Lib.AlignedRead wild3 ds9) of wild5 {
                                 [] -> Lib.updateTrimdPairFields1
                                 : newpr2 newsecr2s -> (newpr2, newsecr2s) }
                           } in
                           let {
                             pa1 :: Lib.AlignedRead
                             = case ds72 of ds73 { (,) newpr2 newsecr2s -> newpr2 }
                           } in
                           let {
                             ds73 :: (Lib.AlignedRead, [Lib.AlignedRead])
                             = let {
                                 trimdposR2 :: GHC.Integer.Type.Integer
                                 = case pa1 of wild5 { Lib.AlignedRead ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ds90 ds91 ds92 ds93 ds94 ds95 ds96 ds97 ds98 ds99 ds100 ds101 ds102 ds103 ds104 ->
                                   ds97 }
                               } in
                               case GHC.Base.map
                                      @ Lib.AlignedRead
                                      @ Lib.AlignedRead
                                      (\ (x :: Lib.AlignedRead) ->
                                       case x of wild5 { Lib.AlignedRead ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ds90 ds91 ds92 ds93 ds94 ds95 ds96 ds97 ds98 ds99 ds100 ds101 ds102 ds103 ds104 ->
                                       Lib.AlignedRead
                                         ds74
                                         ds75
                                         ds76
                                         ds77
                                         ds78
                                         ds79
                                         ds80
                                         ds81
                                         ds82
                                         ds83
                                         ds84
                                         trimdposR2
                                         ds86
                                         ds87
                                         ds88
                                         ds89
                                         ds90
                                         ds91
                                         ds92
                                         ds93
                                         ds94
                                         ds95
                                         ds96
                                         ds97
                                         ds98
                                         ds99
                                         ds100
                                         ds101
                                         ds102
                                         ds103
                                         ds104 })
                                      (GHC.Types.: @ Lib.AlignedRead wild1 ds8) of wild5 {
                                 [] -> Lib.updateTrimdPairFields2
                                 : newpr1 newsecr1s -> (newpr1, newsecr1s) }
                           } in
                           Lib.PairedAln
                             (case ds73 of ds74 { (,) newpr1 newsecr1s -> newpr1 })
                             pa1
                             (case ds73 of ds74 { (,) newpr1 newsecr1s -> newsecr1s })
                             (case ds72 of ds74 { (,) newpr2 newsecr2s ->
                              newsecr2s }) } } } } }) -}
781893a9f6bf9298546d75ad3630717e
  updateTrimdPairFields1 :: (Lib.AlignedRead, [Lib.AlignedRead])
  {- Strictness: x -}
f69b27fa9f67aedce6f07e72d9d16774
  updateTrimdPairFields2 :: (Lib.AlignedRead, [Lib.AlignedRead])
  {- Strictness: x -}
078d26d5d364a1ee2f05af822c800b72
  updateZeroTrimdPairFields :: Lib.PairedAln -> Lib.PairedAln
  {- Arity: 1,
     Strictness: <S(S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLS)LLL),1*U(U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)>m,
     Unfolding: (\ (p :: Lib.PairedAln) ->
                 case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                 case ds6 of wild1 { Lib.AlignedRead ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ->
                 let {
                   primR2zerotrimmed :: GHC.Types.Bool
                   = case ds7 of wild2 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                     ds71 }
                 } in
                 let {
                   $j :: Lib.PairedAln <join 0> {- Strictness: m -}
                   = case ds40 of wild2 {
                       GHC.Types.False
                       -> case primR2zerotrimmed of wild3 {
                            GHC.Types.False -> wild
                            GHC.Types.True
                            -> case ds28 of wild4 {
                                 GHC.Types.False
                                 -> Lib.PairedAln
                                      (Lib.AlignedRead
                                         ds10
                                         ds11
                                         Lib.NONE
                                         Lib.defaultBed2
                                         ds14
                                         ds15
                                         ds16
                                         ds17
                                         ds18
                                         ds19
                                         Lib.addtrimtag5
                                         Lib.defaultBed2
                                         Lib.defaultBed2
                                         ds23
                                         ds24
                                         ds25
                                         ds26
                                         ds27
                                         GHC.Types.False
                                         ds29
                                         ds30
                                         ds31
                                         ds32
                                         ds33
                                         ds34
                                         ds35
                                         ds36
                                         ds37
                                         ds38
                                         ds39
                                         GHC.Types.False)
                                      (case ds7 of wild5 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                                       Lib.AlignedRead
                                         ds41
                                         ds42
                                         Lib.NONE
                                         Lib.defaultBed2
                                         ds45
                                         ds46
                                         ds47
                                         ds48
                                         ds49
                                         ds50
                                         Lib.addtrimtag5
                                         Lib.defaultBed2
                                         Lib.defaultBed2
                                         ds54
                                         ds55
                                         ds56
                                         ds57
                                         ds58
                                         ds59
                                         ds60
                                         ds61
                                         ds62
                                         ds63
                                         ds64
                                         ds65
                                         ds66
                                         ds67
                                         ds68
                                         ds69
                                         ds70
                                         ds71 })
                                      ds8
                                      ds9
                                 GHC.Types.True
                                 -> Lib.PairedAln
                                      (Lib.AlignedRead
                                         ds10
                                         ds11
                                         ds12
                                         ds13
                                         ds14
                                         ds15
                                         ds16
                                         ds17
                                         ds18
                                         ds19
                                         Lib.addtrimtag5
                                         Lib.defaultBed2
                                         Lib.defaultBed2
                                         ds23
                                         ds24
                                         ds25
                                         ds26
                                         ds27
                                         GHC.Types.True
                                         ds29
                                         ds30
                                         ds31
                                         ds32
                                         ds33
                                         ds34
                                         ds35
                                         ds36
                                         ds37
                                         ds38
                                         ds39
                                         GHC.Types.False)
                                      ds7
                                      ds8
                                      ds9 } }
                       GHC.Types.True
                       -> case ds7 of wild3 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                          case ds59 of wild4 {
                            GHC.Types.False
                            -> Lib.PairedAln
                                 (Lib.AlignedRead
                                    ds10
                                    ds11
                                    Lib.NONE
                                    Lib.defaultBed2
                                    ds14
                                    ds15
                                    ds16
                                    ds17
                                    ds18
                                    ds19
                                    Lib.addtrimtag5
                                    Lib.defaultBed2
                                    Lib.defaultBed2
                                    ds23
                                    ds24
                                    ds25
                                    ds26
                                    ds27
                                    ds28
                                    ds29
                                    ds30
                                    ds31
                                    ds32
                                    ds33
                                    ds34
                                    ds35
                                    ds36
                                    ds37
                                    ds38
                                    ds39
                                    GHC.Types.True)
                                 (Lib.AlignedRead
                                    ds41
                                    ds42
                                    Lib.NONE
                                    Lib.defaultBed2
                                    ds45
                                    ds46
                                    ds47
                                    ds48
                                    ds49
                                    ds50
                                    Lib.addtrimtag5
                                    Lib.defaultBed2
                                    Lib.defaultBed2
                                    ds54
                                    ds55
                                    ds56
                                    ds57
                                    ds58
                                    GHC.Types.False
                                    ds60
                                    ds61
                                    ds62
                                    ds63
                                    ds64
                                    ds65
                                    ds66
                                    ds67
                                    ds68
                                    ds69
                                    ds70
                                    ds71)
                                 ds8
                                 ds9
                            GHC.Types.True
                            -> Lib.PairedAln
                                 wild1
                                 (Lib.AlignedRead
                                    ds41
                                    ds42
                                    ds43
                                    ds44
                                    ds45
                                    ds46
                                    ds47
                                    ds48
                                    ds49
                                    ds50
                                    Lib.addtrimtag5
                                    Lib.defaultBed2
                                    Lib.defaultBed2
                                    ds54
                                    ds55
                                    ds56
                                    ds57
                                    ds58
                                    GHC.Types.True
                                    ds60
                                    ds61
                                    ds62
                                    ds63
                                    ds64
                                    ds65
                                    ds66
                                    ds67
                                    ds68
                                    ds69
                                    ds70
                                    ds71)
                                 ds8
                                 ds9 } } }
                 } in
                 case ds40 of wild2 {
                   GHC.Types.False -> $j
                   GHC.Types.True
                   -> case primR2zerotrimmed of wild3 {
                        GHC.Types.False -> $j
                        GHC.Types.True
                        -> case ds28 of wild4 {
                             GHC.Types.False
                             -> case ds7 of wild5 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                                case ds59 of wild6 {
                                  GHC.Types.False
                                  -> Lib.PairedAln
                                       (Lib.AlignedRead
                                          ds10
                                          ds11
                                          Lib.NONE
                                          Lib.defaultBed2
                                          ds14
                                          ds15
                                          ds16
                                          ds17
                                          ds18
                                          ds19
                                          Lib.addtrimtag5
                                          Lib.defaultBed2
                                          Lib.defaultBed2
                                          ds23
                                          ds24
                                          ds25
                                          ds26
                                          ds27
                                          GHC.Types.False
                                          ds29
                                          ds30
                                          ds31
                                          ds32
                                          ds33
                                          ds34
                                          ds35
                                          ds36
                                          ds37
                                          ds38
                                          ds39
                                          GHC.Types.True)
                                       (Lib.AlignedRead
                                          ds41
                                          ds42
                                          Lib.NONE
                                          Lib.defaultBed2
                                          ds45
                                          ds46
                                          ds47
                                          ds48
                                          ds49
                                          ds50
                                          Lib.addtrimtag5
                                          Lib.defaultBed2
                                          Lib.defaultBed2
                                          ds54
                                          ds55
                                          ds56
                                          ds57
                                          ds58
                                          GHC.Types.False
                                          ds60
                                          ds61
                                          ds62
                                          ds63
                                          ds64
                                          ds65
                                          ds66
                                          ds67
                                          ds68
                                          ds69
                                          ds70
                                          ds71)
                                       ds8
                                       ds9
                                  GHC.Types.True
                                  -> Lib.PairedAln
                                       (Lib.AlignedRead
                                          ds10
                                          ds11
                                          Lib.NONE
                                          Lib.defaultBed2
                                          ds14
                                          ds15
                                          ds16
                                          ds17
                                          ds18
                                          ds19
                                          Lib.addtrimtag5
                                          Lib.defaultBed2
                                          Lib.defaultBed2
                                          ds23
                                          ds24
                                          ds25
                                          ds26
                                          ds27
                                          GHC.Types.False
                                          ds29
                                          ds30
                                          ds31
                                          ds32
                                          ds33
                                          ds34
                                          ds35
                                          ds36
                                          ds37
                                          ds38
                                          ds39
                                          GHC.Types.True)
                                       (Lib.AlignedRead
                                          ds41
                                          ds42
                                          Lib.NONE
                                          Lib.defaultBed2
                                          ds45
                                          ds46
                                          ds47
                                          ds48
                                          ds49
                                          ds50
                                          Lib.addtrimtag5
                                          Lib.defaultBed2
                                          Lib.defaultBed2
                                          ds54
                                          ds55
                                          ds56
                                          ds57
                                          ds58
                                          GHC.Types.True
                                          ds60
                                          ds61
                                          ds62
                                          ds63
                                          ds64
                                          ds65
                                          ds66
                                          ds67
                                          ds68
                                          ds69
                                          ds70
                                          ds71)
                                       ds8
                                       ds9 } }
                             GHC.Types.True
                             -> case ds7 of wild5 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                                case ds59 of wild6 {
                                  GHC.Types.False
                                  -> Lib.PairedAln
                                       (Lib.AlignedRead
                                          ds10
                                          ds11
                                          Lib.NONE
                                          Lib.defaultBed2
                                          ds14
                                          ds15
                                          ds16
                                          ds17
                                          ds18
                                          ds19
                                          Lib.addtrimtag5
                                          Lib.defaultBed2
                                          Lib.defaultBed2
                                          ds23
                                          ds24
                                          ds25
                                          ds26
                                          ds27
                                          GHC.Types.True
                                          ds29
                                          ds30
                                          ds31
                                          ds32
                                          ds33
                                          ds34
                                          ds35
                                          ds36
                                          ds37
                                          ds38
                                          ds39
                                          GHC.Types.True)
                                       (Lib.AlignedRead
                                          ds41
                                          ds42
                                          Lib.NONE
                                          Lib.defaultBed2
                                          ds45
                                          ds46
                                          ds47
                                          ds48
                                          ds49
                                          ds50
                                          Lib.addtrimtag5
                                          Lib.defaultBed2
                                          Lib.defaultBed2
                                          ds54
                                          ds55
                                          ds56
                                          ds57
                                          ds58
                                          GHC.Types.False
                                          ds60
                                          ds61
                                          ds62
                                          ds63
                                          ds64
                                          ds65
                                          ds66
                                          ds67
                                          ds68
                                          ds69
                                          ds70
                                          ds71)
                                       ds8
                                       ds9
                                  GHC.Types.True
                                  -> Lib.PairedAln
                                       (Lib.AlignedRead
                                          ds10
                                          ds11
                                          ds12
                                          ds13
                                          ds14
                                          ds15
                                          ds16
                                          ds17
                                          ds18
                                          ds19
                                          Lib.addtrimtag5
                                          Lib.defaultBed2
                                          Lib.defaultBed2
                                          ds23
                                          ds24
                                          ds25
                                          ds26
                                          ds27
                                          GHC.Types.True
                                          ds29
                                          ds30
                                          ds31
                                          ds32
                                          ds33
                                          ds34
                                          ds35
                                          ds36
                                          ds37
                                          ds38
                                          ds39
                                          GHC.Types.True)
                                       (Lib.AlignedRead
                                          ds41
                                          ds42
                                          ds43
                                          ds44
                                          ds45
                                          ds46
                                          ds47
                                          ds48
                                          ds49
                                          ds50
                                          Lib.addtrimtag5
                                          Lib.defaultBed2
                                          Lib.defaultBed2
                                          ds54
                                          ds55
                                          ds56
                                          ds57
                                          ds58
                                          GHC.Types.True
                                          ds60
                                          ds61
                                          ds62
                                          ds63
                                          ds64
                                          ds65
                                          ds66
                                          ds67
                                          ds68
                                          ds69
                                          ds70
                                          ds71)
                                       ds8
                                       ds9 } } } } } } }) -}
02325ee05920392627060320aad7e6bb
  updateZeroTrimdPairFlags :: Lib.PairedAln -> Lib.PairedAln
  {- Arity: 1,
     Strictness: <S(S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLS)LLL),1*U(U(U,U(U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U(U,U(U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)>m,
     Unfolding: (\ (pa :: Lib.PairedAln) ->
                 case pa of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                 case ds6 of wild1 { Lib.AlignedRead ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ->
                 let {
                   newMRNMp :: Lib.PairedAln = Lib.setMateRname wild
                 } in
                 let {
                   r2pMRNM :: Lib.AlignedRead
                   = case newMRNMp of wild2 { Lib.PairedAln ds41 ds42 ds43 ds44 ->
                     ds42 }
                 } in
                 let {
                   r1pMRNM :: Lib.AlignedRead
                   = case newMRNMp of wild2 { Lib.PairedAln ds41 ds42 ds43 ds44 ->
                     ds41 }
                 } in
                 let {
                   r1sMRNMs :: [Lib.AlignedRead]
                   = case newMRNMp of wild2 { Lib.PairedAln ds41 ds42 ds43 ds44 ->
                     ds43 }
                 } in
                 let {
                   r1Zs :: [Lib.AlignedRead]
                   = GHC.Base.map
                       @ Lib.AlignedRead
                       @ Lib.AlignedRead
                       Lib.updateZeroTrimdPairFlags_clrFlagMapBits
                       r1sMRNMs
                 } in
                 let {
                   r2sMRNMs :: [Lib.AlignedRead]
                   = case newMRNMp of wild2 { Lib.PairedAln ds41 ds42 ds43 ds44 ->
                     ds44 }
                 } in
                 let {
                   r2Zs :: [Lib.AlignedRead]
                   = GHC.Base.map
                       @ Lib.AlignedRead
                       @ Lib.AlignedRead
                       Lib.updateZeroTrimdPairFlags_clrFlagMapBits
                       r2sMRNMs
                 } in
                 let {
                   r2zerotrimd :: GHC.Types.Bool
                   = case ds7 of wild2 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                     ds71 }
                 } in
                 let {
                   $j :: Lib.PairedAln <join 0> {- Strictness: m -}
                   = case ds40 of wild2 {
                       GHC.Types.False
                       -> case r2zerotrimd of wild3 {
                            GHC.Types.False -> wild
                            GHC.Types.True
                            -> Lib.PairedAln
                                 (case r1pMRNM of wild4 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                                  Lib.AlignedRead
                                    ds41
                                    (case ds42 of wild5 { GHC.Types.I# x# ->
                                     GHC.Types.I# (GHC.Prim.orI# (GHC.Prim.andI# x# -3#) 8#) })
                                    ds43
                                    ds44
                                    ds45
                                    ds46
                                    ds47
                                    ds48
                                    ds49
                                    ds50
                                    ds51
                                    ds52
                                    ds53
                                    ds54
                                    ds55
                                    ds56
                                    ds57
                                    ds58
                                    ds59
                                    ds60
                                    ds61
                                    ds62
                                    ds63
                                    ds64
                                    ds65
                                    ds66
                                    ds67
                                    ds68
                                    ds69
                                    ds70
                                    ds71 })
                                 r2pMRNM
                                 r1Zs
                                 r2sMRNMs }
                       GHC.Types.True
                       -> Lib.PairedAln
                            r1pMRNM
                            (case r2pMRNM of wild3 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                             Lib.AlignedRead
                               ds41
                               (case ds42 of wild4 { GHC.Types.I# x# ->
                                GHC.Types.I# (GHC.Prim.orI# (GHC.Prim.andI# x# -3#) 8#) })
                               ds43
                               ds44
                               ds45
                               ds46
                               ds47
                               ds48
                               ds49
                               ds50
                               ds51
                               ds52
                               ds53
                               ds54
                               ds55
                               ds56
                               ds57
                               ds58
                               ds59
                               ds60
                               ds61
                               ds62
                               ds63
                               ds64
                               ds65
                               ds66
                               ds67
                               ds68
                               ds69
                               ds70
                               ds71 })
                            r1sMRNMs
                            r2Zs }
                 } in
                 case ds40 of wild2 {
                   GHC.Types.False -> $j
                   GHC.Types.True
                   -> case r2zerotrimd of wild3 {
                        GHC.Types.False -> $j
                        GHC.Types.True
                        -> Lib.PairedAln
                             (case r1pMRNM of wild4 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                              Lib.AlignedRead
                                ds41
                                (case ds42 of wild5 { GHC.Types.I# x# ->
                                 GHC.Types.I# (GHC.Prim.orI# (GHC.Prim.andI# x# -3#) 8#) })
                                ds43
                                ds44
                                ds45
                                ds46
                                ds47
                                ds48
                                ds49
                                ds50
                                ds51
                                ds52
                                ds53
                                ds54
                                ds55
                                ds56
                                ds57
                                ds58
                                ds59
                                ds60
                                ds61
                                ds62
                                ds63
                                ds64
                                ds65
                                ds66
                                ds67
                                ds68
                                ds69
                                ds70
                                ds71 })
                             (case r2pMRNM of wild4 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                              Lib.AlignedRead
                                ds41
                                (case ds42 of wild5 { GHC.Types.I# x# ->
                                 GHC.Types.I# (GHC.Prim.orI# (GHC.Prim.andI# x# -3#) 8#) })
                                ds43
                                ds44
                                ds45
                                ds46
                                ds47
                                ds48
                                ds49
                                ds50
                                ds51
                                ds52
                                ds53
                                ds54
                                ds55
                                ds56
                                ds57
                                ds58
                                ds59
                                ds60
                                ds61
                                ds62
                                ds63
                                ds64
                                ds65
                                ds66
                                ds67
                                ds68
                                ds69
                                ds70
                                ds71 })
                             r1Zs
                             r2Zs } } } }) -}
23016eb62ed09932957f9e95f16d1ad4
  updateZeroTrimdPairFlags_clrFlagMapBits ::
    Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S,1*U(U,1*U(U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.AlignedRead) ->
                 case x of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 Lib.AlignedRead
                   ds6
                   (case ds7 of wild1 { GHC.Types.I# x# ->
                    GHC.Types.I# (GHC.Prim.orI# (GHC.Prim.andI# x# -3#) 8#) })
                   ds8
                   ds9
                   ds10
                   ds11
                   ds12
                   ds13
                   ds14
                   ds15
                   ds16
                   ds17
                   ds18
                   ds19
                   ds20
                   ds21
                   ds22
                   ds23
                   ds24
                   ds25
                   ds26
                   ds27
                   ds28
                   ds29
                   ds30
                   ds31
                   ds32
                   ds33
                   ds34
                   ds35
                   ds36 }) -}
f8ea55197c6553925d582f45d98a64ef
  validateTrimdPairAlnStart :: Lib.PairedAln -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(S(LLLLLLLLLLLLLLLLLLLLLLLSLLLLLLL)S(LLLLLLLLLLLSLLLLLLLLLLLLLLLLLLL)LL),1*U(1*U(A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A),1*U(A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A),A,A)>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.PairedAln) ->
                 case w of ww { Lib.PairedAln ww1 ww2 ww3 ww4 ->
                 case ww1 of ww5 { Lib.AlignedRead ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ww36 ->
                 case ww2 of ww37 { Lib.AlignedRead ww38 ww39 ww40 ww41 ww42 ww43 ww44 ww45 ww46 ww47 ww48 ww49 ww50 ww51 ww52 ww53 ww54 ww55 ww56 ww57 ww58 ww59 ww60 ww61 ww62 ww63 ww64 ww65 ww66 ww67 ww68 ->
                 Lib.$wvalidateTrimdPairAlnStart ww17 ww29 ww49 ww61 } } }) -}
9da30058f67abaf52741380c8f80aafa
  writeRunStats :: GHC.IO.FilePath -> Lib.RunStats -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,U><L,U(U,U,U,U,1*U(U),1*U(U))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.writeRunStats1
                  `cast`
                (<GHC.IO.FilePath>_R
                 ->_R <Lib.RunStats>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
3f07c457751b23a0fedb6e1378b9d904
  writeRunStats1 ::
    GHC.IO.FilePath
    -> Lib.RunStats
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U><L,U(U,U,U,U,1*U(U),1*U(U))><S,U> -}
21071c975426d6ea93962a8c0a55430b
  xmid :: Lib.AlignedRead -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLSLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U,U,U,U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds35 }) -}
instance GHC.Enum.Bounded [Lib.ChromNameFormat]
  = Lib.$fBoundedChromNameFormat
instance GHC.Enum.Bounded [Lib.UChr] = Lib.$fBoundedUChr
instance GHC.Enum.Enum [Lib.ChromNameFormat]
  = Lib.$fEnumChromNameFormat
instance GHC.Enum.Enum [Lib.UChr] = Lib.$fEnumUChr
instance GHC.Classes.Eq [Lib.AlignedRead] = Lib.$fEqAlignedRead
instance GHC.Classes.Eq [Lib.BEDPE] = Lib.$fEqBEDPE
instance GHC.Classes.Eq [Lib.BedRecord] = Lib.$fEqBedRecord
instance GHC.Classes.Eq [Lib.ChromNameFormat]
  = Lib.$fEqChromNameFormat
instance GHC.Classes.Eq [Lib.MasterRecord] = Lib.$fEqMasterRecord
instance GHC.Classes.Eq [Lib.MidFamily] = Lib.$fEqMidFamily
instance GHC.Classes.Eq [Lib.Opts] = Lib.$fEqOpts
instance GHC.Classes.Eq [Lib.PairedAln] = Lib.$fEqPairedAln
instance GHC.Classes.Eq [Lib.RunStats] = Lib.$fEqRunStats
instance GHC.Classes.Eq [Lib.SAMFlag] = Lib.$fEqSAMFlag
instance GHC.Classes.Eq [Lib.UChr] = Lib.$fEqUChr
instance GHC.Generics.Generic [Lib.AlignedRead]
  = Lib.$fGenericAlignedRead
instance GHC.Generics.Generic [Lib.BEDPE] = Lib.$fGenericBEDPE
instance GHC.Generics.Generic [Lib.BedRecord]
  = Lib.$fGenericBedRecord
instance GHC.Generics.Generic [Lib.PairedAln]
  = Lib.$fGenericPairedAln
instance GHC.Generics.Generic [Lib.UChr] = Lib.$fGenericUChr
instance GHC.Classes.Ord [Lib.AlignedRead] = Lib.$fOrdAlignedRead
instance GHC.Classes.Ord [Lib.BEDPE] = Lib.$fOrdBEDPE
instance GHC.Classes.Ord [Lib.BedRecord] = Lib.$fOrdBedRecord
instance GHC.Classes.Ord [Lib.ChromNameFormat]
  = Lib.$fOrdChromNameFormat
instance GHC.Classes.Ord [Lib.MasterRecord] = Lib.$fOrdMasterRecord
instance GHC.Classes.Ord [Lib.MidFamily] = Lib.$fOrdMidFamily
instance GHC.Classes.Ord [Lib.PairedAln] = Lib.$fOrdPairedAln
instance GHC.Classes.Ord [Lib.UChr] = Lib.$fOrdUChr
instance GHC.Read.Read [Lib.ChromNameFormat]
  = Lib.$fReadChromNameFormat
instance GHC.Read.Read [Lib.RunStats] = Lib.$fReadRunStats
instance GHC.Show.Show [Lib.AlignedRead] = Lib.$fShowAlignedRead
instance GHC.Show.Show [Lib.BEDPE] = Lib.$fShowBEDPE
instance GHC.Show.Show [Lib.BedRecord] = Lib.$fShowBedRecord
instance GHC.Show.Show [Lib.ChromNameFormat]
  = Lib.$fShowChromNameFormat
instance GHC.Show.Show [Lib.MasterRecord] = Lib.$fShowMasterRecord
instance GHC.Show.Show [Lib.MidFamily] = Lib.$fShowMidFamily
instance GHC.Show.Show [Lib.Opts] = Lib.$fShowOpts
instance GHC.Show.Show [Lib.PairedAln] = Lib.$fShowPairedAln
instance GHC.Show.Show [Lib.RunStats] = Lib.$fShowRunStats
instance GHC.Show.Show [Lib.SAMFlag] = Lib.$fShowSAMFlag
instance GHC.Show.Show [Lib.UChr] = Lib.$fShowUChr
family instance GHC.Generics.Rep [Lib.PairedAln]
  = Lib.Rep_PairedAln
family instance GHC.Generics.Rep [Lib.AlignedRead]
  = Lib.Rep_AlignedRead
family instance GHC.Generics.Rep [Lib.BEDPE] = Lib.Rep_BEDPE
family instance GHC.Generics.Rep [Lib.BedRecord]
  = Lib.Rep_BedRecord
family instance GHC.Generics.Rep [Lib.UChr] = Lib.Rep_UChr
"SPEC/Lib $fApplicativeResourceT @ IO" [orphan] forall (v :: GHC.Base.Applicative
                                                               GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT @ GHC.Types.IO
                                                               v
  = Lib.$s$fApplicativeResourceT
"SPEC/Lib $fApplicativeResourceT_$cpure @ IO" [orphan] forall ($dApplicative :: GHC.Base.Applicative
                                                                                  GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT_$cpure @ GHC.Types.IO
                                                                      $dApplicative
  = Lib.$s$fApplicativeResourceT_$cpure
"SPEC/Lib $fEq(,) @ Integer @ ByteString" [orphan] forall (v1 :: GHC.Classes.Eq
                                                                   Data.ByteString.Internal.ByteString)
                                                          (v :: GHC.Classes.Eq
                                                                  GHC.Integer.Type.Integer)
  GHC.Classes.$fEq(,) @ GHC.Integer.Type.Integer
                      @ Data.ByteString.Internal.ByteString
                      v
                      v1
  = Lib.$s$fEq(,)
"SPEC/Lib $fFunctorResourceT @ IO" [orphan] forall (v :: GHC.Base.Functor
                                                           GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fFunctorResourceT @ GHC.Types.IO
                                                           v
  = Lib.$s$fApplicativeResourceT_$s$fFunctorResourceT
"SPEC/Lib $fMonadResourceT @ IO" [orphan] forall (v :: GHC.Base.Monad
                                                         GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadResourceT @ GHC.Types.IO
                                                         v
  = Lib.$s$fMonadResourceT
"SPEC/Lib $fMonadResourceT_$c>> @ IO" [orphan] forall ($dMonad :: GHC.Base.Monad
                                                                    GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadResourceT_$c>> @ GHC.Types.IO
                                                              $dMonad
  = Lib.$s$fMonadResourceT_$s$fMonadResourceT_$c>>
"SPEC/Lib fromList @ Int _" [orphan] forall @ a
                                            ($dOrd :: GHC.Classes.Ord GHC.Types.Int)
  Data.Map.Strict.Internal.fromList @ GHC.Types.Int @ a $dOrd
  = Lib.$sfromList2 @ a
"SPEC/Lib fromList @ UChr" forall ($dOrd :: GHC.Classes.Ord
                                              Lib.UChr)
  Data.Set.Internal.fromList @ Lib.UChr $dOrd = Lib.$sfromList4
"SPEC/Lib fromList @ UChr _" forall @ a
                                    ($dOrd :: GHC.Classes.Ord Lib.UChr)
  Data.Map.Strict.Internal.fromList @ Lib.UChr @ a $dOrd
  = Lib.$sfromList @ a
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False



==================== FINAL INTERFACE ====================
2019-07-02 15:28:49.251809 UTC

interface main:Main 8022
  interface hash: 79dd6a76af8e4591e3409a74a63bf8c9
  ABI hash: 55d8e8aa71774501e77b3933778c4b19
  export-list hash: 05f8937bbf6a00941448a1bc14d94054
  orphan hash: a18b965d16d349d6bc32b0ba550a0dd7
  flag hash: 6530bc3b79cd5b8b32ac6728d7f620ba
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
  Main.runPrimerTrimmingPE
  Main.runPrimerTrimmingPE_Fastq
  Main.runPrimerTrimmingSE
  Main.runPrimerTrimmingSE_Fastq
  Main.selectRunmode
module dependencies:
package dependencies: QuickCheck-2.10.1 ansi-terminal-0.8.0.2
                      ansi-wl-pprint-0.6.8.2 array-0.5.2.0 attoparsec-0.13.2.2
                      base-4.10.1.0 binary-0.8.5.1 bytestring-0.10.8.2 colour-2.3.4
                      conduit-1.3.0 conduit-extra-1.3.0 containers-0.5.10.2
                      deepseq-1.4.3.0 digits-0.3.1 directory-1.3.0.2 exceptions-0.8.3
                      filepath-1.4.1.2 ghc-boot-th-8.2.2 ghc-prim-0.5.1.1
                      hashable-1.2.7.0 integer-gmp-1.0.1.0 integer-logarithms-1.0.2.1
                      mono-traversable-1.0.8.1 mtl-2.2.2 optparse-applicative-0.14.2.0
                      pretty-1.1.3.3 primerclip-0.3.8.0 primitive-0.6.3.0 process-1.6.1.0
                      random-1.1 resourcet-1.2.0 scientific-0.3.5.2 split-0.2.3.3
                      stm-2.4.5.0 template-haskell-2.12.0.0 text-1.2.3.0 tf-random-0.5
                      time-1.8.0.2 transformers-0.5.2.0 unix-2.7.2.2
                      unliftio-core-0.1.1.0 unordered-containers-0.2.9.0 vector-0.12.0.1
                      vector-algorithms-0.7.0.1
orphans: colour-2.3.4:Data.Colour
         vector-0.12.0.1:Data.Vector.Unboxed
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         hashable-1.2.7.0:Data.Hashable.Generic
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         text-1.2.3.0:Data.Text.Lazy text-1.2.3.0:Data.Text
         binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.0:Data.Text.Show stm-2.4.5.0:Control.Monad.STM
         transformers-0.5.2.0:Control.Monad.Trans.Error
         base-4.10.1.0:GHC.Float base-4.10.1.0:GHC.Base
family instance modules: attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.10.1.0:Control.Applicative base-4.10.1.0:Data.Complex
                         base-4.10.1.0:Data.Either base-4.10.1.0:Data.Functor.Compose
                         base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity
                         base-4.10.1.0:Data.Functor.Product base-4.10.1.0:Data.Functor.Sum
                         base-4.10.1.0:Data.List.NonEmpty base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Semigroup base-4.10.1.0:Data.Type.Equality
                         base-4.10.1.0:Data.Version base-4.10.1.0:Data.Void
                         base-4.10.1.0:GHC.Exts base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats
                         conduit-1.3.0:Data.Conduit.Internal.Conduit
                         conduit-1.3.0:Data.Conduit.Internal.Pipe
                         containers-0.5.10.2:Data.IntMap.Internal
                         containers-0.5.10.2:Data.IntSet.Internal
                         containers-0.5.10.2:Data.Map.Internal
                         containers-0.5.10.2:Data.Sequence.Internal
                         containers-0.5.10.2:Data.Set.Internal containers-0.5.10.2:Data.Tree
                         ghc-boot-th-8.2.2:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.2.2:GHC.LanguageExtensions.Type
                         mono-traversable-1.0.8.1:Data.MonoTraversable
                         mono-traversable-1.0.8.1:Data.NonNull
                         mono-traversable-1.0.8.1:Data.Sequences
                         pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3:Text.PrettyPrint.HughesPJ primerclip-0.3.8.0:Lib
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         resourcet-1.2.0:Control.Monad.Trans.Resource.Internal
                         template-haskell-2.12.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.0:Data.Text text-1.2.3.0:Data.Text.Lazy
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
import  -/  attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8 75eb155dd50974f74df242dc5b5f3c20
import  -/  base-4.10.1.0:Control.Applicative 99577a9c463ffe4790a1d37547a345bd
import  -/  base-4.10.1.0:Control.Monad ebed2e8e7444944e0c1d827c6faf40a4
import  -/  base-4.10.1.0:Data.Either d7dae5d9bf298dee616e465c14b5d60e
import  -/  base-4.10.1.0:Data.List 4ab7fa2a1b87502b23af891a384f0506
import  -/  base-4.10.1.0:Data.Maybe 07738c5485acb328136bb15596f8b845
import  -/  base-4.10.1.0:Data.Semigroup 92914a5d9e5176805d2364209875f6ed
import  -/  base-4.10.1.0:GHC.Base 782fd99b5e36f3698a26179a49afca64
import  -/  base-4.10.1.0:GHC.Err 514b3a24b22e9d7d731c2d0d02d10842
import  -/  base-4.10.1.0:GHC.List e3060fbeb44ce0038e6b4dedf2dd9cf1
import  -/  base-4.10.1.0:Prelude 31945b7d0084063347fc52506d3a4020
import  -/  base-4.10.1.0:System.IO 6e5bb580370d8d71dc5888f723cea4b4
import  -/  bytestring-0.10.8.2:Data.ByteString.Char8 ad3bf7657730adeac35cbb427299ea44
import  -/  conduit-1.3.0:Conduit 9ca771118110a6d629536df1c70cfb0c
import  -/  conduit-1.3.0:Data.Conduit 214df678ad51311214f3e8dc14f14854
import  -/  conduit-1.3.0:Data.Conduit.Combinators 879a6b83242087f07896e92d4cc7d0e9
import  -/  conduit-1.3.0:Data.Conduit.Combinators.Unqualified bb15af616225f302b124833678fb569b
import  -/  conduit-1.3.0:Data.Conduit.Internal.Conduit 2e849a9a0bf7ebe9e17389aa7226446c
import  -/  conduit-extra-1.3.0:Data.Conduit.Attoparsec b4907557e083a7d91d1ea01e01aba9c2
import  -/  conduit-extra-1.3.0:Data.Conduit.Binary 41355976e14d2e02c70b000849dc465d
import  -/  containers-0.5.10.2:Data.IntMap.Strict 7892d40daae1f0118150f998d9c28567
import  -/  containers-0.5.10.2:Data.Map.Strict 194f5b0a9785a91a43562790aa6787fc
import  -/  ghc-prim-0.5.1.1:GHC.Classes 93e2660065dce9329577e83d76d8f0d4
import  -/  ghc-prim-0.5.1.1:GHC.Types b1fd0716441595db508c1a74387bf394
import  -/  optparse-applicative-0.14.2.0:Options.Applicative 93a6ca444e605eb4e5fada3ed41aa455
import  -/  optparse-applicative-0.14.2.0:Options.Applicative.Builder 9b4b35d95a3739ae48e6b42cbe90c8ed
import  -/  optparse-applicative-0.14.2.0:Options.Applicative.Extra 3e7572295fe04361b13fe1be6a5ecfc7
import  -/  primerclip-0.3.8.0:Lib 1327b99cb8d2727f8eb79a095cb87ea5
4dbf1aa03245061c15538bc68261fcdf
  $s$fApplicativeResourceT ::
    GHC.Base.Applicative
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  Main.$s$fApplicativeResourceT_$s$fFunctorResourceT
                  (\ @ a (eta :: a) ->
                   let {
                     x :: GHC.Prim.State# GHC.Prim.RealWorld
                          -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                       {- Arity: 1 -}
                     = \ (s :: GHC.Prim.State# GHC.Prim.RealWorld) -> (# s, eta #)
                   } in
                   (\ (ds :: GHC.IORef.IORef
                               Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                    x)
                     `cast`
                   (Trans
                        (<GHC.IORef.IORef
                            Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                         ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                        (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                  <GHC.Types.IO>_R <a>_N))))
                  (\ @ a
                     @ b
                     (ds :: Control.Monad.Trans.Resource.Internal.ResourceT
                              GHC.Types.IO (a -> b))
                     (ds1 :: Control.Monad.Trans.Resource.Internal.ResourceT
                               GHC.Types.IO a)
                     (r :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (ds
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <a -> b>_N)
                           r)
                          `cast`
                        (GHC.Types.N:IO[0] <a -> b>_R)
                          s of ds2 { (#,#) ipv ipv1 ->
                   case (ds1
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <a>_N)
                           r)
                          `cast`
                        (GHC.Types.N:IO[0] <a>_R)
                          ipv of ds3 { (#,#) ipv2 ipv3 ->
                   (# ipv2, ipv1 ipv3 #) } })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   Trans
                       (<Control.Monad.Trans.Resource.Internal.ResourceT
                           GHC.Types.IO (a -> b)>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO a>_R
                        ->_R <GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                        ->_R Sym (GHC.Types.N:IO[0] <b>_R))
                       (<Control.Monad.Trans.Resource.Internal.ResourceT
                           GHC.Types.IO (a -> b)>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO a>_R
                        ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                      <GHC.Types.IO>_R <b>_N)))
                  (\ @ a
                     @ b
                     @ c
                     (eta :: a -> b -> c)
                     (eta1 :: Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO a)
                     (eta2 :: Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b)
                     (eta3 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (eta1
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <a>_N)
                           eta3)
                          `cast`
                        (GHC.Types.N:IO[0] <a>_R)
                          s of ds { (#,#) ipv ipv1 ->
                   case (eta2
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <b>_N)
                           eta3)
                          `cast`
                        (GHC.Types.N:IO[0] <b>_R)
                          ipv of ds1 { (#,#) ipv2 ipv3 ->
                   (# ipv2, eta ipv1 ipv3 #) } })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N).
                   Trans
                       (<a -> b -> c>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO a>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b>_R
                        ->_R <GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                        ->_R Sym (GHC.Types.N:IO[0] <c>_R))
                       (<a -> b -> c>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO a>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b>_R
                        ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                      <GHC.Types.IO>_R <c>_N)))
                  (\ @ a
                     @ b
                     (eta :: Control.Monad.Trans.Resource.Internal.ResourceT
                               GHC.Types.IO a)
                     (eta1 :: Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b)
                     (eta2 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (eta
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <a>_N)
                           eta2)
                          `cast`
                        (GHC.Types.N:IO[0] <a>_R)
                          s of ds { (#,#) ipv ipv1 ->
                   (eta1
                      `cast`
                    (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                         <GHC.Types.IO>_R <b>_N)
                      eta2)
                     `cast`
                   (GHC.Types.N:IO[0] <b>_R)
                     ipv })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   Trans
                       (<Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b>_R
                        ->_R <GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                        ->_R Sym (GHC.Types.N:IO[0] <b>_R))
                       (<Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b>_R
                        ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                      <GHC.Types.IO>_R <b>_N)))
                  (\ @ a
                     @ b
                     (eta1 :: Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO a)
                     (eta2 :: Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b)
                     (eta3 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (eta1
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <a>_N)
                           eta3)
                          `cast`
                        (GHC.Types.N:IO[0] <a>_R)
                          s of ds { (#,#) ipv ipv1 ->
                   case (eta2
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <b>_N)
                           eta3)
                          `cast`
                        (GHC.Types.N:IO[0] <b>_R)
                          ipv of ds1 { (#,#) ipv2 ipv3 ->
                   (# ipv2, ipv1 #) } })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   Trans
                       (<Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b>_R
                        ->_R <GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                        ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                       (<Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b>_R
                        ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                      <GHC.Types.IO>_R <a>_N))) -}
7b41713d7866cba5f7537248f00a15e1
  $s$fApplicativeResourceT_$cpure ::
    a -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,A><S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (eta :: a) ->
                 let {
                   x :: GHC.Prim.State# GHC.Prim.RealWorld
                        -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                     {- Arity: 1 -}
                   = \ (s :: GHC.Prim.State# GHC.Prim.RealWorld) -> (# s, eta #)
                 } in
                 (\ (ds :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                  x)
                   `cast`
                 (Trans
                      (<GHC.IORef.IORef
                          Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                       ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                      (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                <GHC.Types.IO>_R <a>_N)))) -}
b3f1c6bd82613ab91b28b878a0134e99
  $s$fApplicativeResourceT_$s$fFunctorResourceT ::
    GHC.Base.Functor
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  (\ @ a
                     @ b
                     (f :: a -> b)
                     (ds :: Control.Monad.Trans.Resource.Internal.ResourceT
                              GHC.Types.IO a)
                     (r :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (ds
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <a>_N)
                           r)
                          `cast`
                        (GHC.Types.N:IO[0] <a>_R)
                          s of ds1 { (#,#) ipv ipv1 ->
                   (# ipv, f ipv1 #) })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   Trans
                       (<a -> b>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO a>_R
                        ->_R <GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                        ->_R Sym (GHC.Types.N:IO[0] <b>_R))
                       (<a -> b>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO a>_R
                        ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                      <GHC.Types.IO>_R <b>_N)))
                  (\ @ a
                     @ b
                     (x :: a)
                     (eta :: Control.Monad.Trans.Resource.Internal.ResourceT
                               GHC.Types.IO b)
                     (eta1 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (eta
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <b>_N)
                           eta1)
                          `cast`
                        (GHC.Types.N:IO[0] <b>_R)
                          s of ds { (#,#) ipv ipv1 ->
                   (# ipv, x #) })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   Trans
                       (<a>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b>_R
                        ->_R <GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                        ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                       (<a>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b>_R
                        ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                      <GHC.Types.IO>_R <a>_N))) -}
6bb7b65b3845d7a95991a1a11296ffc7
  $s$fMonadIOResourceT ::
    Control.Monad.IO.Class.MonadIO
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  Main.$s$fMonadIOResourceT_$s$fMonadResourceT
                  (\ @ a
                     (eta :: GHC.Types.IO a)
                     (ds :: GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                   eta)
                    `cast`
                  (forall (a :: <*>_N).
                   <GHC.Types.IO a>_R
                   ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                 <GHC.Types.IO>_R <a>_N)) -}
a50d06e986f79dcca2e0f39530238e59
  $s$fMonadIOResourceT_$cliftIO ::
    GHC.Types.IO a
    -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ a
                   (eta :: GHC.Types.IO a)
                   (ds :: GHC.IORef.IORef
                            Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                 eta)
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.Types.IO a>_R
                 ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                               <GHC.Types.IO>_R <a>_N)) -}
569d45414e8b1a4901d477c084e4ec46
  $s$fMonadIOResourceT_$s$fMonadResourceT ::
    GHC.Base.Monad
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  Main.$s$fApplicativeResourceT
                  (\ @ a
                     @ b
                     (ds :: Control.Monad.Trans.Resource.Internal.ResourceT
                              GHC.Types.IO a)
                     (f :: a
                           -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO b)
                     (r :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (ds
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <a>_N)
                           r)
                          `cast`
                        (GHC.Types.N:IO[0] <a>_R)
                          s of ds1 { (#,#) ipv ipv1 ->
                   ((f ipv1)
                      `cast`
                    (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                         <GHC.Types.IO>_R <b>_N)
                      r)
                     `cast`
                   (GHC.Types.N:IO[0] <b>_R)
                     ipv })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   Trans
                       (<Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                        ->_R <a
                              -> Control.Monad.Trans.Resource.Internal.ResourceT
                                   GHC.Types.IO b>_R
                        ->_R <GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                        ->_R Sym (GHC.Types.N:IO[0] <b>_R))
                       (<Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                        ->_R <a
                              -> Control.Monad.Trans.Resource.Internal.ResourceT
                                   GHC.Types.IO b>_R
                        ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                      <GHC.Types.IO>_R <b>_N)))
                  Main.$s$fMonadIOResourceT_$s$fMonadResourceT_$c>>
                  (\ @ a (eta :: a) ->
                   let {
                     x :: GHC.Prim.State# GHC.Prim.RealWorld
                          -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                       {- Arity: 1 -}
                     = \ (s :: GHC.Prim.State# GHC.Prim.RealWorld) -> (# s, eta #)
                   } in
                   (\ (ds :: GHC.IORef.IORef
                               Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                    x)
                     `cast`
                   (Trans
                        (<GHC.IORef.IORef
                            Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                         ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                        (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                  <GHC.Types.IO>_R <a>_N))))
                  (\ @ a ->
                   GHC.Err.errorWithoutStackTrace
                     @ 'GHC.Types.LiftedRep
                     @ (Control.Monad.Trans.Resource.Internal.ResourceT
                          GHC.Types.IO a)) -}
290afafad513b886a5a62fc8a49fbb11
  $s$fMonadIOResourceT_$s$fMonadResourceT_$c>> ::
    Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
    -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO b
    -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO b
  {- Arity: 4, HasNoCafRefs,
     Strictness: <C(C(S(SL))),1*C1(C1(U(U,A)))><L,1*C1(C1(U(U,U)))><L,U><S,U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ a
                   @ b
                   (m1 :: Control.Monad.Trans.Resource.Internal.ResourceT
                            GHC.Types.IO a)
                   (k :: Control.Monad.Trans.Resource.Internal.ResourceT
                           GHC.Types.IO b)
                   (r :: GHC.IORef.IORef
                           Control.Monad.Trans.Resource.Internal.ReleaseMap)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (m1
                         `cast`
                       (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                            <GHC.Types.IO>_R <a>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0] <a>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 (k `cast`
                  (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                       <GHC.Types.IO>_R <b>_N)
                    r)
                   `cast`
                 (GHC.Types.N:IO[0] <b>_R)
                   ipv })
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N).
                 Trans
                     (<Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                      ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                              GHC.Types.IO b>_R
                      ->_R <GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                      ->_R Sym (GHC.Types.N:IO[0] <b>_R))
                     (<Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                      ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                              GHC.Types.IO b>_R
                      ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                    <GHC.Types.IO>_R <b>_N))) -}
be799c2ee19cccb045d5e31318b1be7b
  $s$fMonadResourceResourceT ::
    Control.Monad.Trans.Resource.Internal.MonadResource
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  Main.$s$fMonadIOResourceT
                  (\ @ a
                     (eta :: Control.Monad.Trans.Resource.Internal.ResourceT
                               GHC.Types.IO a)
                     (eta1 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                   eta
                     `cast`
                   (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                        <GHC.Types.IO>_R <a>_N)
                     eta1)
                    `cast`
                  (forall (a :: <*>_N).
                   <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                   ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                 <GHC.Types.IO>_R <a>_N)) -}
18abf8ed7120a165217dfd4af7f44029
  $s$fMonadResourceResourceT1 ::
    Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
    -> GHC.IORef.IORef Control.Monad.Trans.Resource.Internal.ReleaseMap
    -> GHC.Types.IO a
  {- Arity: 2, HasNoCafRefs, Strictness: <C(S),1*C1(U)><L,U>,
     Unfolding: InlineRule (2, True, True)
                (\ @ a
                   (eta :: Control.Monad.Trans.Resource.Internal.ResourceT
                             GHC.Types.IO a)
                   (eta1 :: GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                 eta
                   `cast`
                 (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                      <GHC.Types.IO>_R <a>_N)
                   eta1) -}
9d72b2fddb818bcd8919052935e0f1f3
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule3 Main.$trModule1) -}
3108ceeaf5a318be844de422b45de9d8
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule2) -}
e5875966b74dad2d29772660b8a75e33
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Main"#) -}
33bd129667974f0a0ba4a893af79107d
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule4) -}
d026be77cb9ced20e35a61514e0458aa
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
de79e3ceed57e8349d5b5b77c6e02c3c
  $wrunPrimerTrimmingPE ::
    GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Lib.RunStats #)
  {- Arity: 5, Strictness: <S,1*U><L,U><L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Types.Bool)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Base.String)
                   (ww3 :: GHC.Base.String)
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Lib.$wcreateprimerbedmaps ww ww1 w of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) fmp rmp ->
                 (Control.Monad.Trans.Resource.runResourceT
                    @ GHC.Types.IO
                    @ Lib.RunStats
                    Control.Monad.IO.Unlift.$fMonadUnliftIOIO
                    (Data.Conduit.Internal.Pipe.runPipe
                       @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                       @ Lib.RunStats
                       Main.$s$fMonadIOResourceT_$s$fMonadResourceT
                       (Data.Conduit.Internal.Pipe.injectLeftovers
                          @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                          @ ()
                          @ Data.Void.Void
                          @ ()
                          @ Lib.RunStats
                          @ Data.Void.Void
                          Main.$s$fMonadIOResourceT_$s$fMonadResourceT
                          (Main.main_goRight7
                             ((Data.Conduit.Combinators.sourceFile
                                 @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                                 @ ()
                                 Main.$s$fMonadResourceResourceT
                                 ww2)
                                `cast`
                              (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                                   <()>_N
                                   <Data.ByteString.Internal.ByteString>_N
                                   <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                                   <()>_R)
                                @ ()
                                (Data.Conduit.Internal.Pipe.Done
                                   @ ()
                                   @ ()
                                   @ Data.ByteString.Internal.ByteString
                                   @ ()
                                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                                   @ ()))
                             (Main.main_goRight6
                                Main.main5
                                (Main.main_goRight5
                                   Main.main_go8
                                   (Main.main_goRight4
                                      Main.main_go6
                                        `cast`
                                      (Data.Conduit.Internal.Pipe.Pipe
                                         <[Lib.PairedAln]>_N
                                         <[Lib.PairedAln]>_N
                                         (Data.MonoTraversable.D:R:Element[][0] <Lib.PairedAln>_N)
                                         <()>_N
                                         <Control.Monad.Trans.Resource.Internal.ResourceT
                                            GHC.Types.IO>_N
                                         <()>_N)_R
                                      (Main.main_goRight3
                                         (letrec {
                                            go12 :: Data.Conduit.Internal.Pipe.Pipe
                                                      Lib.PairedAln
                                                      Lib.PairedAln
                                                      Lib.PairedAln
                                                      ()
                                                      (Control.Monad.Trans.Resource.Internal.ResourceT
                                                         GHC.Types.IO)
                                                      ()
                                            = Data.Conduit.Internal.Pipe.NeedInput
                                                @ Lib.PairedAln
                                                @ Lib.PairedAln
                                                @ Lib.PairedAln
                                                @ ()
                                                @ (Control.Monad.Trans.Resource.Internal.ResourceT
                                                     GHC.Types.IO)
                                                @ ()
                                                go13
                                                (Data.Conduit.Internal.Pipe.Done
                                                   @ Lib.PairedAln
                                                   @ Lib.PairedAln
                                                   @ Lib.PairedAln
                                                   @ ()
                                                   @ (Control.Monad.Trans.Resource.Internal.ResourceT
                                                        GHC.Types.IO)
                                                   @ ())
                                            go13 :: Lib.PairedAln
                                                    -> Data.Conduit.Internal.Pipe.Pipe
                                                         Lib.PairedAln
                                                         Lib.PairedAln
                                                         Lib.PairedAln
                                                         ()
                                                         (Control.Monad.Trans.Resource.Internal.ResourceT
                                                            GHC.Types.IO)
                                                         ()
                                              {- Arity: 1,
                                                 Strictness: <L,1*U(1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,A,A,A,U,U,U,U,U,U,U,U,U),1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,A,A,A,U,U,U,U,U,U,U,U,U),1*U,1*U)> -}
                                            = \ (i1 :: Lib.PairedAln) ->
                                              Data.Conduit.Internal.Pipe.HaveOutput
                                                @ Lib.PairedAln
                                                @ Lib.PairedAln
                                                @ Lib.PairedAln
                                                @ ()
                                                @ (Control.Monad.Trans.Resource.Internal.ResourceT
                                                     GHC.Types.IO)
                                                @ ()
                                                go12
                                                (Lib.trimprimerPairsE fmp rmp i1)
                                          } in
                                          go12)
                                         (Main.main_goRight2
                                            Main.main_go4
                                            (Main.main_goRight1
                                               Main.main_go2
                                                 `cast`
                                               (Data.Conduit.Internal.Pipe.Pipe
                                                  <[Lib.AlignedRead]>_N
                                                  <[Lib.AlignedRead]>_N
                                                  (Data.MonoTraversable.D:R:Element[][0]
                                                       <Lib.AlignedRead>_N)
                                                  <()>_N
                                                  <Control.Monad.Trans.Resource.Internal.ResourceT
                                                     GHC.Types.IO>_N
                                                  <()>_N)_R
                                               (Main.main_goRight
                                                  Main.main_go
                                                  (Data.Conduit.Internal.Conduit.$fApplicativeZipSink2
                                                     @ (Control.Monad.Trans.Resource.Internal.ResourceT
                                                          GHC.Types.IO)
                                                     @ Lib.AlignedRead
                                                     @ (Lib.RunStats -> Lib.RunStats)
                                                     @ Lib.RunStats
                                                     Main.$s$fMonadIOResourceT_$s$fMonadResourceT
                                                     (\ @ b2
                                                        (h :: (Lib.RunStats -> Lib.RunStats)
                                                              -> Data.Conduit.Internal.Pipe.Pipe
                                                                   Lib.AlignedRead
                                                                   Lib.AlignedRead
                                                                   Data.Void.Void
                                                                   ()
                                                                   (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                      GHC.Types.IO)
                                                                   b2)[OneShot] ->
                                                      let {
                                                        lvl18 :: Data.Conduit.Internal.Pipe.Pipe
                                                                   Lib.AlignedRead
                                                                   Lib.AlignedRead
                                                                   Data.Void.Void
                                                                   ()
                                                                   (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                      GHC.Types.IO)
                                                                   b2
                                                        = h (GHC.Base.breakpoint @ Lib.RunStats)
                                                      } in
                                                      (Lib.printAlnStreamToFile
                                                         @ (Control.Monad.Trans.Resource.Internal.ResourceT
                                                              GHC.Types.IO)
                                                         @ Data.Void.Void
                                                         Main.$s$fMonadResourceResourceT
                                                         ww3)
                                                        `cast`
                                                      (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                                                           <Lib.AlignedRead>_N
                                                           <Data.Void.Void>_N
                                                           <Control.Monad.Trans.Resource.Internal.ResourceT
                                                              GHC.Types.IO>_N
                                                           <()>_R)
                                                        @ b2
                                                        (\ (a4 :: ()) -> lvl18))
                                                       `cast`
                                                     (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                                                               <Lib.AlignedRead>_N
                                                               <Data.Void.Void>_N
                                                               <Control.Monad.Trans.Resource.Internal.ResourceT
                                                                  GHC.Types.IO>_N
                                                               <Lib.RunStats -> Lib.RunStats>_R))
                                                     Lib.calcRunStats1
                                                       `cast`
                                                     (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                                                               <Lib.AlignedRead>_N
                                                               <Data.Void.Void>_N
                                                               <Control.Monad.Trans.Resource.Internal.ResourceT
                                                                  GHC.Types.IO>_N
                                                               <Lib.RunStats>_R))
                                                     @ Lib.RunStats
                                                     Main.main4))))))))))))
                   `cast`
                 (GHC.Types.N:IO[0] <Lib.RunStats>_R)
                   ipv } }) -}
367a58a7dc1e7dc36c9777531d05b215
  $wrunPrimerTrimmingPE_Fastq ::
    GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Lib.RunStats #)
  {- Arity: 5, Strictness: <S,1*U><L,U><L,U><L,1*U><S,U>,
     Inline: [0] -}
c1c2af6fbb59a21a0ca05d575e25af88
  $wrunPrimerTrimmingSE ::
    GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Lib.RunStats #)
  {- Arity: 5, Strictness: <S,1*U><L,U><L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Types.Bool)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Base.String)
                   (ww3 :: GHC.Base.String)
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Lib.$wcreateprimerbedmaps ww ww1 w of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) fmp rmp ->
                 (Control.Monad.Trans.Resource.runResourceT
                    @ GHC.Types.IO
                    @ Lib.RunStats
                    Control.Monad.IO.Unlift.$fMonadUnliftIOIO
                    (Data.Conduit.Internal.Pipe.runPipe
                       @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                       @ Lib.RunStats
                       Main.$s$fMonadIOResourceT_$s$fMonadResourceT
                       (Data.Conduit.Internal.Pipe.injectLeftovers
                          @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                          @ ()
                          @ Data.Void.Void
                          @ ()
                          @ Lib.RunStats
                          @ Data.Void.Void
                          Main.$s$fMonadIOResourceT_$s$fMonadResourceT
                          (Main.main_goRight19
                             ((Data.Conduit.Combinators.sourceFile
                                 @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                                 @ ()
                                 Main.$s$fMonadResourceResourceT
                                 ww2)
                                `cast`
                              (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                                   <()>_N
                                   <Data.ByteString.Internal.ByteString>_N
                                   <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                                   <()>_R)
                                @ ()
                                (Data.Conduit.Internal.Pipe.Done
                                   @ ()
                                   @ ()
                                   @ Data.ByteString.Internal.ByteString
                                   @ ()
                                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                                   @ ()))
                             (Main.main_goRight18
                                Main.main6
                                (Main.main_goRight17
                                   Main.main_go20
                                   (Main.main_goRight16
                                      Main.main_go18
                                        `cast`
                                      (Data.Conduit.Internal.Pipe.Pipe
                                         <[Lib.AlignedRead]>_N
                                         <[Lib.AlignedRead]>_N
                                         (Data.MonoTraversable.D:R:Element[][0] <Lib.AlignedRead>_N)
                                         <()>_N
                                         <Control.Monad.Trans.Resource.Internal.ResourceT
                                            GHC.Types.IO>_N
                                         <()>_N)_R
                                      (Main.main_goRight15
                                         (letrec {
                                            go12 :: Data.Conduit.Internal.Pipe.Pipe
                                                      Lib.AlignedRead
                                                      Lib.AlignedRead
                                                      Lib.AlignedRead
                                                      ()
                                                      (Control.Monad.Trans.Resource.Internal.ResourceT
                                                         GHC.Types.IO)
                                                      ()
                                            = Data.Conduit.Internal.Pipe.NeedInput
                                                @ Lib.AlignedRead
                                                @ Lib.AlignedRead
                                                @ Lib.AlignedRead
                                                @ ()
                                                @ (Control.Monad.Trans.Resource.Internal.ResourceT
                                                     GHC.Types.IO)
                                                @ ()
                                                go13
                                                (Data.Conduit.Internal.Pipe.Done
                                                   @ Lib.AlignedRead
                                                   @ Lib.AlignedRead
                                                   @ Lib.AlignedRead
                                                   @ ()
                                                   @ (Control.Monad.Trans.Resource.Internal.ResourceT
                                                        GHC.Types.IO)
                                                   @ ())
                                            go13 :: Lib.AlignedRead
                                                    -> Data.Conduit.Internal.Pipe.Pipe
                                                         Lib.AlignedRead
                                                         Lib.AlignedRead
                                                         Lib.AlignedRead
                                                         ()
                                                         (Control.Monad.Trans.Resource.Internal.ResourceT
                                                            GHC.Types.IO)
                                                         ()
                                              {- Arity: 1,
                                                 Strictness: <L,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,A,A,A,U,U,U,U,U,U,U,U,U)> -}
                                            = \ (i1 :: Lib.AlignedRead) ->
                                              Data.Conduit.Internal.Pipe.HaveOutput
                                                @ Lib.AlignedRead
                                                @ Lib.AlignedRead
                                                @ Lib.AlignedRead
                                                @ ()
                                                @ (Control.Monad.Trans.Resource.Internal.ResourceT
                                                     GHC.Types.IO)
                                                @ ()
                                                go12
                                                (Lib.trimprimersE fmp rmp i1)
                                          } in
                                          go12)
                                         (Main.main_goRight14
                                            Main.main_go16
                                            (Data.Conduit.Internal.Conduit.$fApplicativeZipSink2
                                               @ (Control.Monad.Trans.Resource.Internal.ResourceT
                                                    GHC.Types.IO)
                                               @ Lib.AlignedRead
                                               @ (Lib.RunStats -> Lib.RunStats)
                                               @ Lib.RunStats
                                               Main.$s$fMonadIOResourceT_$s$fMonadResourceT
                                               (\ @ b2
                                                  (h :: (Lib.RunStats -> Lib.RunStats)
                                                        -> Data.Conduit.Internal.Pipe.Pipe
                                                             Lib.AlignedRead
                                                             Lib.AlignedRead
                                                             Data.Void.Void
                                                             ()
                                                             (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                GHC.Types.IO)
                                                             b2)[OneShot] ->
                                                let {
                                                  lvl18 :: Data.Conduit.Internal.Pipe.Pipe
                                                             Lib.AlignedRead
                                                             Lib.AlignedRead
                                                             Data.Void.Void
                                                             ()
                                                             (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                GHC.Types.IO)
                                                             b2
                                                  = h (GHC.Base.breakpoint @ Lib.RunStats)
                                                } in
                                                (Lib.printAlnStreamToFile
                                                   @ (Control.Monad.Trans.Resource.Internal.ResourceT
                                                        GHC.Types.IO)
                                                   @ Data.Void.Void
                                                   Main.$s$fMonadResourceResourceT
                                                   ww3)
                                                  `cast`
                                                (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                                                     <Lib.AlignedRead>_N
                                                     <Data.Void.Void>_N
                                                     <Control.Monad.Trans.Resource.Internal.ResourceT
                                                        GHC.Types.IO>_N
                                                     <()>_R)
                                                  @ b2
                                                  (\ (a4 :: ()) -> lvl18))
                                                 `cast`
                                               (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                                                         <Lib.AlignedRead>_N
                                                         <Data.Void.Void>_N
                                                         <Control.Monad.Trans.Resource.Internal.ResourceT
                                                            GHC.Types.IO>_N
                                                         <Lib.RunStats -> Lib.RunStats>_R))
                                               Lib.calcRunStats1
                                                 `cast`
                                               (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                                                         <Lib.AlignedRead>_N
                                                         <Data.Void.Void>_N
                                                         <Control.Monad.Trans.Resource.Internal.ResourceT
                                                            GHC.Types.IO>_N
                                                         <Lib.RunStats>_R))
                                               @ Lib.RunStats
                                               Main.main4))))))))))
                   `cast`
                 (GHC.Types.N:IO[0] <Lib.RunStats>_R)
                   ipv } }) -}
acc37ecbb05accea26801496a6e6173b
  $wrunPrimerTrimmingSE_Fastq ::
    GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Lib.RunStats #)
  {- Arity: 5, Strictness: <S,1*U><L,U><L,U><L,1*U><S,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Types.Bool)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Base.String)
                   (ww3 :: GHC.Base.String)
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Lib.$wcreateprimerbedmaps ww ww1 w of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) fmp rmp ->
                 (Control.Monad.Trans.Resource.runResourceT
                    @ GHC.Types.IO
                    @ Lib.RunStats
                    Control.Monad.IO.Unlift.$fMonadUnliftIOIO
                    (Data.Conduit.Internal.Pipe.runPipe
                       @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                       @ Lib.RunStats
                       Main.$s$fMonadIOResourceT_$s$fMonadResourceT
                       (Data.Conduit.Internal.Pipe.injectLeftovers
                          @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                          @ ()
                          @ Data.Void.Void
                          @ ()
                          @ Lib.RunStats
                          @ Data.Void.Void
                          Main.$s$fMonadIOResourceT_$s$fMonadResourceT
                          (Main.main_goRight13
                             ((Data.Conduit.Combinators.sourceFile
                                 @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                                 @ ()
                                 Main.$s$fMonadResourceResourceT
                                 ww2)
                                `cast`
                              (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                                   <()>_N
                                   <Data.ByteString.Internal.ByteString>_N
                                   <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                                   <()>_R)
                                @ ()
                                (Data.Conduit.Internal.Pipe.Done
                                   @ ()
                                   @ ()
                                   @ Data.ByteString.Internal.ByteString
                                   @ ()
                                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                                   @ ()))
                             (Main.main_goRight12
                                Main.main6
                                (Main.main_goRight11
                                   Main.main_go14
                                   (Main.main_goRight10
                                      Main.main_go12
                                        `cast`
                                      (Data.Conduit.Internal.Pipe.Pipe
                                         <[Lib.AlignedRead]>_N
                                         <[Lib.AlignedRead]>_N
                                         (Data.MonoTraversable.D:R:Element[][0] <Lib.AlignedRead>_N)
                                         <()>_N
                                         <Control.Monad.Trans.Resource.Internal.ResourceT
                                            GHC.Types.IO>_N
                                         <()>_N)_R
                                      (Main.main_goRight9
                                         (letrec {
                                            go12 :: Data.Conduit.Internal.Pipe.Pipe
                                                      Lib.AlignedRead
                                                      Lib.AlignedRead
                                                      Lib.AlignedRead
                                                      ()
                                                      (Control.Monad.Trans.Resource.Internal.ResourceT
                                                         GHC.Types.IO)
                                                      ()
                                            = Data.Conduit.Internal.Pipe.NeedInput
                                                @ Lib.AlignedRead
                                                @ Lib.AlignedRead
                                                @ Lib.AlignedRead
                                                @ ()
                                                @ (Control.Monad.Trans.Resource.Internal.ResourceT
                                                     GHC.Types.IO)
                                                @ ()
                                                go13
                                                (Data.Conduit.Internal.Pipe.Done
                                                   @ Lib.AlignedRead
                                                   @ Lib.AlignedRead
                                                   @ Lib.AlignedRead
                                                   @ ()
                                                   @ (Control.Monad.Trans.Resource.Internal.ResourceT
                                                        GHC.Types.IO)
                                                   @ ())
                                            go13 :: Lib.AlignedRead
                                                    -> Data.Conduit.Internal.Pipe.Pipe
                                                         Lib.AlignedRead
                                                         Lib.AlignedRead
                                                         Lib.AlignedRead
                                                         ()
                                                         (Control.Monad.Trans.Resource.Internal.ResourceT
                                                            GHC.Types.IO)
                                                         ()
                                              {- Arity: 1,
                                                 Strictness: <L,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,A,A,A,U,U,U,U,U,U,U,U,U)> -}
                                            = \ (i1 :: Lib.AlignedRead) ->
                                              Data.Conduit.Internal.Pipe.HaveOutput
                                                @ Lib.AlignedRead
                                                @ Lib.AlignedRead
                                                @ Lib.AlignedRead
                                                @ ()
                                                @ (Control.Monad.Trans.Resource.Internal.ResourceT
                                                     GHC.Types.IO)
                                                @ ()
                                                go12
                                                (Lib.trimprimersE fmp rmp i1)
                                          } in
                                          go12)
                                         (Main.main_goRight8
                                            Main.main_go10
                                            (Data.Conduit.Internal.Conduit.$fApplicativeZipSink2
                                               @ (Control.Monad.Trans.Resource.Internal.ResourceT
                                                    GHC.Types.IO)
                                               @ Lib.AlignedRead
                                               @ (Lib.RunStats -> Lib.RunStats)
                                               @ Lib.RunStats
                                               Main.$s$fMonadIOResourceT_$s$fMonadResourceT
                                               (\ @ b2
                                                  (h :: (Lib.RunStats -> Lib.RunStats)
                                                        -> Data.Conduit.Internal.Pipe.Pipe
                                                             Lib.AlignedRead
                                                             Lib.AlignedRead
                                                             Data.Void.Void
                                                             ()
                                                             (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                GHC.Types.IO)
                                                             b2)[OneShot] ->
                                                let {
                                                  lvl18 :: Data.Conduit.Internal.Pipe.Pipe
                                                             Lib.AlignedRead
                                                             Lib.AlignedRead
                                                             Data.Void.Void
                                                             ()
                                                             (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                GHC.Types.IO)
                                                             b2
                                                  = h (GHC.Base.breakpoint @ Lib.RunStats)
                                                } in
                                                (Lib.printAlnStreamToFastq1
                                                   @ (Control.Monad.Trans.Resource.Internal.ResourceT
                                                        GHC.Types.IO)
                                                   Main.$s$fMonadResourceResourceT
                                                   (GHC.List.reverse1
                                                      @ GHC.Types.Char
                                                      (Main.$wunsafeDrop
                                                         @ GHC.Types.Char
                                                         4#
                                                         (GHC.List.reverse1
                                                            @ GHC.Types.Char
                                                            ww3
                                                            (GHC.Types.[] @ GHC.Types.Char)))
                                                      (GHC.Types.[] @ GHC.Types.Char)))
                                                  `cast`
                                                (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                                                     <Lib.AlignedRead>_N
                                                     <Data.Void.Void>_N
                                                     <Control.Monad.Trans.Resource.Internal.ResourceT
                                                        GHC.Types.IO>_N
                                                     <()>_R)
                                                  @ b2
                                                  (\ (a4 :: ()) -> lvl18))
                                                 `cast`
                                               (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                                                         <Lib.AlignedRead>_N
                                                         <Data.Void.Void>_N
                                                         <Control.Monad.Trans.Resource.Internal.ResourceT
                                                            GHC.Types.IO>_N
                                                         <Lib.RunStats -> Lib.RunStats>_R))
                                               Lib.calcRunStats1
                                                 `cast`
                                               (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                                                         <Lib.AlignedRead>_N
                                                         <Data.Void.Void>_N
                                                         <Control.Monad.Trans.Resource.Internal.ResourceT
                                                            GHC.Types.IO>_N
                                                         <Lib.RunStats>_R))
                                               @ Lib.RunStats
                                               Main.main4))))))))))
                   `cast`
                 (GHC.Types.N:IO[0] <Lib.RunStats>_R)
                   ipv } }) -}
5d5033c8206075f1257765bba15e3505
  $wselectRunmode ::
    GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Lib.RunStats #)
  {- Arity: 7, Strictness: <S,1*U><S,U><S,U><L,U><L,U><L,U><S,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Types.Bool)
                   (ww1 :: GHC.Types.Bool)
                   (ww2 :: GHC.Types.Bool)
                   (ww3 :: GHC.Base.String)
                   (ww4 :: GHC.Base.String)
                   (ww5 :: GHC.Base.String)
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 let {
                   $j :: (# GHC.Prim.State# GHC.Prim.RealWorld, Lib.RunStats #)
                     <join 0>
                   = let {
                       $j1 :: (# GHC.Prim.State# GHC.Prim.RealWorld, Lib.RunStats #)
                         <join 0>
                       = case ww1 of wild {
                           GHC.Types.False
                           -> case Main.main7
                              ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, Lib.RunStats #)
                              of {}
                           GHC.Types.True
                           -> case ww2 of wild1 {
                                GHC.Types.False -> Main.$wrunPrimerTrimmingSE ww ww3 ww4 ww5 w
                                GHC.Types.True
                                -> Main.$wrunPrimerTrimmingSE_Fastq ww ww3 ww4 ww5 w } }
                     } in
                     case ww1 of wild {
                       GHC.Types.False
                       -> case ww2 of wild1 {
                            GHC.Types.False -> $j1
                            GHC.Types.True
                            -> Main.$wrunPrimerTrimmingPE_Fastq ww ww3 ww4 ww5 w }
                       GHC.Types.True -> $j1 }
                 } in
                 case ww1 of wild {
                   GHC.Types.False
                   -> case ww2 of wild1 {
                        GHC.Types.False -> Main.$wrunPrimerTrimmingPE ww ww3 ww4 ww5 w
                        GHC.Types.True -> $j }
                   GHC.Types.True -> $j }) -}
00bb2257859340c278f030fbdf7c8098
  $wunsafeDrop :: GHC.Prim.Int# -> [a1] -> [a1]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U><S,1*U>,
     Inline: [0] -}
9f320c5bc725406724f7d2313d3728bd
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
f93ee26f4e2035d422b90f1ee4c84e52
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Options.Applicative.Extra.customExecParser1
                        @ Lib.Opts
                        Options.Applicative.Builder.defaultPrefs
                        Main.main8
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of ww { Lib.Opts ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case Main.$wselectRunmode
                        ww1
                        ww2
                        ww3
                        ww4
                        ww5
                        ww6
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main2
                        GHC.Types.True
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 Lib.writeRunStats1 ww6 ipv3 ipv4 } } } }) -}
87c0ac08fb1b1f4b4243e63b87491b28
  main10 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("primerclip -- Swift Biosciences Accel-Amplicon targeted panel primer trimming tool v0.3.9"#) -}
b1196c2f506ac8c843696c988508f587
  main11 ::
    Options.Applicative.Help.Chunk.Chunk
      Text.PrettyPrint.ANSI.Leijen.Internal.Doc
  {- Unfolding: (Options.Applicative.Help.Chunk.paragraph_go
                   (GHC.CString.unpackCString# Main.main12)) -}
3e8e95e384d385b735cd152e8a5267c7
  main12 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Trim PCR primer sequences from aligned reads"#) -}
cf8eb0f52567005ba6e58c9588335a90
  main13 :: Options.Applicative.Types.Parser Lib.Opts
  {- Unfolding: (Options.Applicative.Types.MultP
                   @ Lib.Opts
                   @ Lib.Opts
                   (Options.Applicative.Extra.helper @ Lib.Opts)
                   Lib.optargs) -}
0b6fb2daa7cfa74c533e4360adb7c33b
  main14 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
8362be34db12b2cc75133cb624f436b6
  main2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main3) -}
e7aa5b3fc07001c1efb3b3cbc4024390
  main3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("primer trimming complete."#) -}
f56af682d1ffe71f40f5c0b040e1ba8c
  main4 ::
    (Lib.RunStats -> Lib.RunStats, Lib.RunStats)
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*U(1*C1(U),U)>m3,
     Unfolding: (\ (a4 :: (Lib.RunStats -> Lib.RunStats,
                           Lib.RunStats)) ->
                 Data.Conduit.Internal.Pipe.Done
                   @ Lib.AlignedRead
                   @ Lib.AlignedRead
                   @ Data.Void.Void
                   @ ()
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ Lib.RunStats
                   (case a4 of wild { (,) x ds -> x ds })) -}
67a774d11ee6802859f76e5599d0613d
  main5 ::
    Data.Conduit.Internal.Pipe.Pipe
      Data.ByteString.Internal.ByteString
      Data.ByteString.Internal.ByteString
      (Data.Either.Either
         Data.Conduit.Attoparsec.ParseError
         (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln]))
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
  {- Unfolding: (Data.Conduit.Attoparsec.$w$sconduitParserEither
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ [Lib.PairedAln]
                   Lib.parseSAMtoPairedAlns1
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                             <Data.ByteString.Internal.ByteString>_N <[Lib.PairedAln]>_R))
                   @ ()
                   (Data.Conduit.Internal.Pipe.Done
                      @ Data.ByteString.Internal.ByteString
                      @ Data.ByteString.Internal.ByteString
                      @ (Data.Either.Either
                           Data.Conduit.Attoparsec.ParseError
                           (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln]))
                      @ ()
                      @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                      @ ())) -}
e1594b7112c4350b29a78994afc2bdb1
  main6 ::
    Data.Conduit.Internal.Pipe.Pipe
      Data.ByteString.Internal.ByteString
      Data.ByteString.Internal.ByteString
      (Data.Either.Either
         Data.Conduit.Attoparsec.ParseError
         (Data.Conduit.Attoparsec.PositionRange, [Lib.AlignedRead]))
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
  {- Unfolding: (Data.Conduit.Attoparsec.$w$sconduitParserEither
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ [Lib.AlignedRead]
                   Lib.parseSingleAlnsOrHdr1
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                             <Data.ByteString.Internal.ByteString>_N <[Lib.AlignedRead]>_R))
                   @ ()
                   (Data.Conduit.Internal.Pipe.Done
                      @ Data.ByteString.Internal.ByteString
                      @ Data.ByteString.Internal.ByteString
                      @ (Data.Either.Either
                           Data.Conduit.Attoparsec.ParseError
                           (Data.Conduit.Attoparsec.PositionRange, [Lib.AlignedRead]))
                      @ ()
                      @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                      @ ())) -}
57de78c57a23c625406e2b41f153d2e5
  main7 :: GHC.Types.IO Lib.RunStats
  {- Strictness: x -}
a4bbae2ce12f3a5301a3f4d51318b242
  main8 :: Options.Applicative.Types.ParserInfo Lib.Opts
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.ParserInfo
                   @ Lib.Opts
                   Main.main13
                   GHC.Types.True
                   Main.main11
                   Main.main9
                   (GHC.Base.Nothing @ Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                     `cast`
                   (Sym (Options.Applicative.Help.Chunk.N:Chunk[0]) <Text.PrettyPrint.ANSI.Leijen.Internal.Doc>_N)
                   Options.Applicative.Builder.info1
                   Options.Applicative.Types.Intersperse) -}
f6a84d94a8f26c0b8627cfdd95d6cde8
  main9 ::
    Options.Applicative.Help.Chunk.Chunk
      Text.PrettyPrint.ANSI.Leijen.Internal.Doc
  {- Unfolding: (Options.Applicative.Help.Chunk.paragraph_go
                   (GHC.CString.unpackCString# Main.main10)) -}
303ca063fb0700d4580e2c18f03e6b72
  main_go ::
    Data.Conduit.Internal.Pipe.Pipe
      Lib.AlignedRead
      Lib.AlignedRead
      Lib.AlignedRead
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
  {- Strictness: m2,
     Unfolding: (Data.Conduit.Internal.Pipe.NeedInput
                   @ Lib.AlignedRead
                   @ Lib.AlignedRead
                   @ Lib.AlignedRead
                   @ ()
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ ()
                   Main.main_go1
                   (Data.Conduit.Internal.Pipe.Done
                      @ Lib.AlignedRead
                      @ Lib.AlignedRead
                      @ Lib.AlignedRead
                      @ ()
                      @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                      @ ())) -}
5323b41309f8bc2bd49e9842d04f95ab
  main_go1 ::
    Lib.AlignedRead
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Lib.AlignedRead
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         ()
  {- Arity: 1,
     Strictness: <S(S(LLLS)LLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)> -}
25da7b53b5b9bcb2e5d31626aeff4e85
  main_go10 ::
    Data.Conduit.Internal.Pipe.Pipe
      Lib.AlignedRead
      Lib.AlignedRead
      Lib.AlignedRead
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
  {- Strictness: m2,
     Unfolding: (Data.Conduit.Internal.Pipe.NeedInput
                   @ Lib.AlignedRead
                   @ Lib.AlignedRead
                   @ Lib.AlignedRead
                   @ ()
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ ()
                   Main.main_go11
                   (Data.Conduit.Internal.Pipe.Done
                      @ Lib.AlignedRead
                      @ Lib.AlignedRead
                      @ Lib.AlignedRead
                      @ ()
                      @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                      @ ())) -}
8b00dd42a4ae82c99e1b2b15770b0787
  main_go11 ::
    Lib.AlignedRead
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Lib.AlignedRead
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         ()
  {- Arity: 1,
     Strictness: <S(S(LLLS)LLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)> -}
e4f01af8260e9fdf84599737090386b2
  main_go12 ::
    Data.Conduit.Internal.Pipe.Pipe
      [Lib.AlignedRead]
      [Lib.AlignedRead]
      (Data.MonoTraversable.Element [Lib.AlignedRead])
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Data.Conduit.Internal.Pipe.NeedInput
                   @ [Lib.AlignedRead]
                   @ [Lib.AlignedRead]
                   @ (Data.MonoTraversable.Element [Lib.AlignedRead])
                   @ ()
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ ()
                   Main.main_go13
                   (Data.Conduit.Internal.Pipe.Done
                      @ [Lib.AlignedRead]
                      @ [Lib.AlignedRead]
                      @ Lib.AlignedRead
                      @ ()
                      @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                      @ ())
                     `cast`
                   (<()>_R
                    ->_R (Data.Conduit.Internal.Pipe.Pipe
                            <[Lib.AlignedRead]>_N
                            <[Lib.AlignedRead]>_N
                            (Sym (Data.MonoTraversable.D:R:Element[][0] <Lib.AlignedRead>_N))
                            <()>_N
                            <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                            <()>_N)_R)) -}
8c3cafa930d625d5491b2ebef6d33848
  main_go13 ::
    [Lib.AlignedRead]
    -> Data.Conduit.Internal.Pipe.Pipe
         [Lib.AlignedRead]
         [Lib.AlignedRead]
         (Data.MonoTraversable.Element [Lib.AlignedRead])
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         ()
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
669355538569e49cdfbf88f67fe3daba
  main_go14 ::
    Data.Conduit.Internal.Pipe.Pipe
      (Data.Either.Either
         Data.Conduit.Attoparsec.ParseError
         (Data.Conduit.Attoparsec.PositionRange, [Lib.AlignedRead]))
      (Data.Either.Either
         Data.Conduit.Attoparsec.ParseError
         (Data.Conduit.Attoparsec.PositionRange, [Lib.AlignedRead]))
      [Lib.AlignedRead]
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Data.Conduit.Internal.Pipe.NeedInput
                   @ (Data.Either.Either
                        Data.Conduit.Attoparsec.ParseError
                        (Data.Conduit.Attoparsec.PositionRange, [Lib.AlignedRead]))
                   @ (Data.Either.Either
                        Data.Conduit.Attoparsec.ParseError
                        (Data.Conduit.Attoparsec.PositionRange, [Lib.AlignedRead]))
                   @ [Lib.AlignedRead]
                   @ ()
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ ()
                   Main.main_go15
                   (Data.Conduit.Internal.Pipe.Done
                      @ (Data.Either.Either
                           Data.Conduit.Attoparsec.ParseError
                           (Data.Conduit.Attoparsec.PositionRange, [Lib.AlignedRead]))
                      @ (Data.Either.Either
                           Data.Conduit.Attoparsec.ParseError
                           (Data.Conduit.Attoparsec.PositionRange, [Lib.AlignedRead]))
                      @ [Lib.AlignedRead]
                      @ ()
                      @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                      @ ())) -}
4e80bb7d7f67bd062c1c67198be5d9df
  main_go15 ::
    Data.Either.Either
      Data.Conduit.Attoparsec.ParseError
      (Data.Conduit.Attoparsec.PositionRange, [Lib.AlignedRead])
    -> Data.Conduit.Internal.Pipe.Pipe
         (Data.Either.Either
            Data.Conduit.Attoparsec.ParseError
            (Data.Conduit.Attoparsec.PositionRange, [Lib.AlignedRead]))
         (Data.Either.Either
            Data.Conduit.Attoparsec.ParseError
            (Data.Conduit.Attoparsec.PositionRange, [Lib.AlignedRead]))
         [Lib.AlignedRead]
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*U>m1 -}
855bc433face61284f39ed1dc67fe0eb
  main_go16 ::
    Data.Conduit.Internal.Pipe.Pipe
      Lib.AlignedRead
      Lib.AlignedRead
      Lib.AlignedRead
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
  {- Strictness: m2,
     Unfolding: (Data.Conduit.Internal.Pipe.NeedInput
                   @ Lib.AlignedRead
                   @ Lib.AlignedRead
                   @ Lib.AlignedRead
                   @ ()
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ ()
                   Main.main_go17
                   (Data.Conduit.Internal.Pipe.Done
                      @ Lib.AlignedRead
                      @ Lib.AlignedRead
                      @ Lib.AlignedRead
                      @ ()
                      @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                      @ ())) -}
0e9ffa895fa3d7989ea9a9571bc1ebe1
  main_go17 ::
    Lib.AlignedRead
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Lib.AlignedRead
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         ()
  {- Arity: 1,
     Strictness: <S(S(LLLS)LLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)> -}
7ec7674b93c7e1efe515faa9d0e032e9
  main_go18 ::
    Data.Conduit.Internal.Pipe.Pipe
      [Lib.AlignedRead]
      [Lib.AlignedRead]
      (Data.MonoTraversable.Element [Lib.AlignedRead])
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Data.Conduit.Internal.Pipe.NeedInput
                   @ [Lib.AlignedRead]
                   @ [Lib.AlignedRead]
                   @ (Data.MonoTraversable.Element [Lib.AlignedRead])
                   @ ()
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ ()
                   Main.main_go19
                   (Data.Conduit.Internal.Pipe.Done
                      @ [Lib.AlignedRead]
                      @ [Lib.AlignedRead]
                      @ Lib.AlignedRead
                      @ ()
                      @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                      @ ())
                     `cast`
                   (<()>_R
                    ->_R (Data.Conduit.Internal.Pipe.Pipe
                            <[Lib.AlignedRead]>_N
                            <[Lib.AlignedRead]>_N
                            (Sym (Data.MonoTraversable.D:R:Element[][0] <Lib.AlignedRead>_N))
                            <()>_N
                            <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                            <()>_N)_R)) -}
b2f1c464fb88f75d6ac9614b35396b48
  main_go19 ::
    [Lib.AlignedRead]
    -> Data.Conduit.Internal.Pipe.Pipe
         [Lib.AlignedRead]
         [Lib.AlignedRead]
         (Data.MonoTraversable.Element [Lib.AlignedRead])
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         ()
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
f3734d2a3db5b1c5e351a5a272f5ca69
  main_go2 ::
    Data.Conduit.Internal.Pipe.Pipe
      [Lib.AlignedRead]
      [Lib.AlignedRead]
      (Data.MonoTraversable.Element [Lib.AlignedRead])
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Data.Conduit.Internal.Pipe.NeedInput
                   @ [Lib.AlignedRead]
                   @ [Lib.AlignedRead]
                   @ (Data.MonoTraversable.Element [Lib.AlignedRead])
                   @ ()
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ ()
                   Main.main_go3
                   (Data.Conduit.Internal.Pipe.Done
                      @ [Lib.AlignedRead]
                      @ [Lib.AlignedRead]
                      @ Lib.AlignedRead
                      @ ()
                      @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                      @ ())
                     `cast`
                   (<()>_R
                    ->_R (Data.Conduit.Internal.Pipe.Pipe
                            <[Lib.AlignedRead]>_N
                            <[Lib.AlignedRead]>_N
                            (Sym (Data.MonoTraversable.D:R:Element[][0] <Lib.AlignedRead>_N))
                            <()>_N
                            <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                            <()>_N)_R)) -}
e67dcc772b8e75e380642f8c17faf067
  main_go20 ::
    Data.Conduit.Internal.Pipe.Pipe
      (Data.Either.Either
         Data.Conduit.Attoparsec.ParseError
         (Data.Conduit.Attoparsec.PositionRange, [Lib.AlignedRead]))
      (Data.Either.Either
         Data.Conduit.Attoparsec.ParseError
         (Data.Conduit.Attoparsec.PositionRange, [Lib.AlignedRead]))
      [Lib.AlignedRead]
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Data.Conduit.Internal.Pipe.NeedInput
                   @ (Data.Either.Either
                        Data.Conduit.Attoparsec.ParseError
                        (Data.Conduit.Attoparsec.PositionRange, [Lib.AlignedRead]))
                   @ (Data.Either.Either
                        Data.Conduit.Attoparsec.ParseError
                        (Data.Conduit.Attoparsec.PositionRange, [Lib.AlignedRead]))
                   @ [Lib.AlignedRead]
                   @ ()
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ ()
                   Main.main_go21
                   (Data.Conduit.Internal.Pipe.Done
                      @ (Data.Either.Either
                           Data.Conduit.Attoparsec.ParseError
                           (Data.Conduit.Attoparsec.PositionRange, [Lib.AlignedRead]))
                      @ (Data.Either.Either
                           Data.Conduit.Attoparsec.ParseError
                           (Data.Conduit.Attoparsec.PositionRange, [Lib.AlignedRead]))
                      @ [Lib.AlignedRead]
                      @ ()
                      @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                      @ ())) -}
aae67adefa6d113ee85ae543dcb3df23
  main_go21 ::
    Data.Either.Either
      Data.Conduit.Attoparsec.ParseError
      (Data.Conduit.Attoparsec.PositionRange, [Lib.AlignedRead])
    -> Data.Conduit.Internal.Pipe.Pipe
         (Data.Either.Either
            Data.Conduit.Attoparsec.ParseError
            (Data.Conduit.Attoparsec.PositionRange, [Lib.AlignedRead]))
         (Data.Either.Either
            Data.Conduit.Attoparsec.ParseError
            (Data.Conduit.Attoparsec.PositionRange, [Lib.AlignedRead]))
         [Lib.AlignedRead]
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*U>m1 -}
0fac227864120ef282a4bd7208948bf8
  main_go3 ::
    [Lib.AlignedRead]
    -> Data.Conduit.Internal.Pipe.Pipe
         [Lib.AlignedRead]
         [Lib.AlignedRead]
         (Data.MonoTraversable.Element [Lib.AlignedRead])
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         ()
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
8c6b55a802bff9e4e4ba0d61180a5815
  main_go4 ::
    Data.Conduit.Internal.Pipe.Pipe
      Lib.PairedAln
      Lib.PairedAln
      [Lib.AlignedRead]
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Data.Conduit.Internal.Pipe.NeedInput
                   @ Lib.PairedAln
                   @ Lib.PairedAln
                   @ [Lib.AlignedRead]
                   @ ()
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ ()
                   Main.main_go5
                   (Data.Conduit.Internal.Pipe.Done
                      @ Lib.PairedAln
                      @ Lib.PairedAln
                      @ [Lib.AlignedRead]
                      @ ()
                      @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                      @ ())) -}
6179f5435de905215d3cbb0d01cf57ab
  main_go5 ::
    Lib.PairedAln
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.PairedAln
         Lib.PairedAln
         [Lib.AlignedRead]
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(U,U,U,U)>m1 -}
1d6dd8ffb4e5069552f5020f221ec9e1
  main_go6 ::
    Data.Conduit.Internal.Pipe.Pipe
      [Lib.PairedAln]
      [Lib.PairedAln]
      (Data.MonoTraversable.Element [Lib.PairedAln])
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Data.Conduit.Internal.Pipe.NeedInput
                   @ [Lib.PairedAln]
                   @ [Lib.PairedAln]
                   @ (Data.MonoTraversable.Element [Lib.PairedAln])
                   @ ()
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ ()
                   Main.main_go7
                   (Data.Conduit.Internal.Pipe.Done
                      @ [Lib.PairedAln]
                      @ [Lib.PairedAln]
                      @ Lib.PairedAln
                      @ ()
                      @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                      @ ())
                     `cast`
                   (<()>_R
                    ->_R (Data.Conduit.Internal.Pipe.Pipe
                            <[Lib.PairedAln]>_N
                            <[Lib.PairedAln]>_N
                            (Sym (Data.MonoTraversable.D:R:Element[][0] <Lib.PairedAln>_N))
                            <()>_N
                            <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                            <()>_N)_R)) -}
b8ca615e144324195097894c85c08df5
  main_go7 ::
    [Lib.PairedAln]
    -> Data.Conduit.Internal.Pipe.Pipe
         [Lib.PairedAln]
         [Lib.PairedAln]
         (Data.MonoTraversable.Element [Lib.PairedAln])
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         ()
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
ed7888a9bf1516b685f0ab088419e6d3
  main_go8 ::
    Data.Conduit.Internal.Pipe.Pipe
      (Data.Either.Either
         Data.Conduit.Attoparsec.ParseError
         (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln]))
      (Data.Either.Either
         Data.Conduit.Attoparsec.ParseError
         (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln]))
      [Lib.PairedAln]
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Data.Conduit.Internal.Pipe.NeedInput
                   @ (Data.Either.Either
                        Data.Conduit.Attoparsec.ParseError
                        (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln]))
                   @ (Data.Either.Either
                        Data.Conduit.Attoparsec.ParseError
                        (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln]))
                   @ [Lib.PairedAln]
                   @ ()
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ ()
                   Main.main_go9
                   (Data.Conduit.Internal.Pipe.Done
                      @ (Data.Either.Either
                           Data.Conduit.Attoparsec.ParseError
                           (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln]))
                      @ (Data.Either.Either
                           Data.Conduit.Attoparsec.ParseError
                           (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln]))
                      @ [Lib.PairedAln]
                      @ ()
                      @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                      @ ())) -}
a08c1433944b91fd5d5786c4fa5035c9
  main_go9 ::
    Data.Either.Either
      Data.Conduit.Attoparsec.ParseError
      (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln])
    -> Data.Conduit.Internal.Pipe.Pipe
         (Data.Either.Either
            Data.Conduit.Attoparsec.ParseError
            (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln]))
         (Data.Either.Either
            Data.Conduit.Attoparsec.ParseError
            (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln]))
         [Lib.PairedAln]
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*U>m1 -}
aa1b85c082ea733b256f78caed6a8c09
  main_goRight ::
    Data.Conduit.Internal.Pipe.Pipe
      Lib.AlignedRead
      Lib.AlignedRead
      Lib.AlignedRead
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U> -}
928650332789a5a2212930bc8b8567d8
  main_goRight1 ::
    Data.Conduit.Internal.Pipe.Pipe
      [Lib.AlignedRead]
      [Lib.AlignedRead]
      Lib.AlignedRead
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
    -> Data.Conduit.Internal.Pipe.Pipe
         [Lib.AlignedRead]
         [Lib.AlignedRead]
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U> -}
78782cf4b23cf173803792f5245b339d
  main_goRight10 ::
    Data.Conduit.Internal.Pipe.Pipe
      [Lib.AlignedRead]
      [Lib.AlignedRead]
      Lib.AlignedRead
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
    -> Data.Conduit.Internal.Pipe.Pipe
         [Lib.AlignedRead]
         [Lib.AlignedRead]
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U> -}
73bce6bf82a01603e37cb7164a9b08ae
  main_goRight11 ::
    Data.Conduit.Internal.Pipe.Pipe
      (Data.Either.Either
         Data.Conduit.Attoparsec.ParseError
         (Data.Conduit.Attoparsec.PositionRange, [Lib.AlignedRead]))
      (Data.Either.Either
         Data.Conduit.Attoparsec.ParseError
         (Data.Conduit.Attoparsec.PositionRange, [Lib.AlignedRead]))
      [Lib.AlignedRead]
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
    -> Data.Conduit.Internal.Pipe.Pipe
         [Lib.AlignedRead]
         [Lib.AlignedRead]
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
    -> Data.Conduit.Internal.Pipe.Pipe
         (Data.Either.Either
            Data.Conduit.Attoparsec.ParseError
            (Data.Conduit.Attoparsec.PositionRange, [Lib.AlignedRead]))
         (Data.Either.Either
            Data.Conduit.Attoparsec.ParseError
            (Data.Conduit.Attoparsec.PositionRange, [Lib.AlignedRead]))
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U> -}
b22e052d3a4dab570ac97ae0b8b094cd
  main_goRight12 ::
    Data.Conduit.Internal.Pipe.Pipe
      Data.ByteString.Internal.ByteString
      Data.ByteString.Internal.ByteString
      (Data.Either.Either
         Data.Conduit.Attoparsec.ParseError
         (Data.Conduit.Attoparsec.PositionRange, [Lib.AlignedRead]))
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
    -> Data.Conduit.Internal.Pipe.Pipe
         (Data.Either.Either
            Data.Conduit.Attoparsec.ParseError
            (Data.Conduit.Attoparsec.PositionRange, [Lib.AlignedRead]))
         (Data.Either.Either
            Data.Conduit.Attoparsec.ParseError
            (Data.Conduit.Attoparsec.PositionRange, [Lib.AlignedRead]))
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
    -> Data.Conduit.Internal.Pipe.Pipe
         Data.ByteString.Internal.ByteString
         Data.ByteString.Internal.ByteString
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U> -}
9f1dc9aec08114e813bd152a60b6b4e2
  main_goRight13 ::
    Data.Conduit.Internal.Pipe.Pipe
      ()
      ()
      Data.ByteString.Internal.ByteString
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
    -> Data.Conduit.Internal.Pipe.Pipe
         Data.ByteString.Internal.ByteString
         Data.ByteString.Internal.ByteString
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
    -> Data.Conduit.Internal.Pipe.Pipe
         ()
         ()
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U> -}
358319d7a3a36136163a70da65eb521a
  main_goRight14 ::
    Data.Conduit.Internal.Pipe.Pipe
      Lib.AlignedRead
      Lib.AlignedRead
      Lib.AlignedRead
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U> -}
bf04bc81e2b417cf1b414140f813e827
  main_goRight15 ::
    Data.Conduit.Internal.Pipe.Pipe
      Lib.AlignedRead
      Lib.AlignedRead
      Lib.AlignedRead
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U> -}
733bab4a95422e396399c8704373f5b2
  main_goRight16 ::
    Data.Conduit.Internal.Pipe.Pipe
      [Lib.AlignedRead]
      [Lib.AlignedRead]
      Lib.AlignedRead
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
    -> Data.Conduit.Internal.Pipe.Pipe
         [Lib.AlignedRead]
         [Lib.AlignedRead]
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U> -}
99aa10008c4874ec5abf63fdebeb9099
  main_goRight17 ::
    Data.Conduit.Internal.Pipe.Pipe
      (Data.Either.Either
         Data.Conduit.Attoparsec.ParseError
         (Data.Conduit.Attoparsec.PositionRange, [Lib.AlignedRead]))
      (Data.Either.Either
         Data.Conduit.Attoparsec.ParseError
         (Data.Conduit.Attoparsec.PositionRange, [Lib.AlignedRead]))
      [Lib.AlignedRead]
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
    -> Data.Conduit.Internal.Pipe.Pipe
         [Lib.AlignedRead]
         [Lib.AlignedRead]
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
    -> Data.Conduit.Internal.Pipe.Pipe
         (Data.Either.Either
            Data.Conduit.Attoparsec.ParseError
            (Data.Conduit.Attoparsec.PositionRange, [Lib.AlignedRead]))
         (Data.Either.Either
            Data.Conduit.Attoparsec.ParseError
            (Data.Conduit.Attoparsec.PositionRange, [Lib.AlignedRead]))
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U> -}
2d27f355764a4c42b5080a4566cb6c55
  main_goRight18 ::
    Data.Conduit.Internal.Pipe.Pipe
      Data.ByteString.Internal.ByteString
      Data.ByteString.Internal.ByteString
      (Data.Either.Either
         Data.Conduit.Attoparsec.ParseError
         (Data.Conduit.Attoparsec.PositionRange, [Lib.AlignedRead]))
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
    -> Data.Conduit.Internal.Pipe.Pipe
         (Data.Either.Either
            Data.Conduit.Attoparsec.ParseError
            (Data.Conduit.Attoparsec.PositionRange, [Lib.AlignedRead]))
         (Data.Either.Either
            Data.Conduit.Attoparsec.ParseError
            (Data.Conduit.Attoparsec.PositionRange, [Lib.AlignedRead]))
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
    -> Data.Conduit.Internal.Pipe.Pipe
         Data.ByteString.Internal.ByteString
         Data.ByteString.Internal.ByteString
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U> -}
6c83630f7b75e2dd6875add7e36b5e09
  main_goRight19 ::
    Data.Conduit.Internal.Pipe.Pipe
      ()
      ()
      Data.ByteString.Internal.ByteString
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
    -> Data.Conduit.Internal.Pipe.Pipe
         Data.ByteString.Internal.ByteString
         Data.ByteString.Internal.ByteString
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
    -> Data.Conduit.Internal.Pipe.Pipe
         ()
         ()
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U> -}
ff8d25eeb3eca31f1acbed41ccc0c369
  main_goRight2 ::
    Data.Conduit.Internal.Pipe.Pipe
      Lib.PairedAln
      Lib.PairedAln
      [Lib.AlignedRead]
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
    -> Data.Conduit.Internal.Pipe.Pipe
         [Lib.AlignedRead]
         [Lib.AlignedRead]
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.PairedAln
         Lib.PairedAln
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U> -}
d12588fe719ab13485c09ec45b801e4c
  main_goRight3 ::
    Data.Conduit.Internal.Pipe.Pipe
      Lib.PairedAln
      Lib.PairedAln
      Lib.PairedAln
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.PairedAln
         Lib.PairedAln
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.PairedAln
         Lib.PairedAln
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U> -}
b0fc480e0a9e87088a149b509b5285a6
  main_goRight4 ::
    Data.Conduit.Internal.Pipe.Pipe
      [Lib.PairedAln]
      [Lib.PairedAln]
      Lib.PairedAln
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.PairedAln
         Lib.PairedAln
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
    -> Data.Conduit.Internal.Pipe.Pipe
         [Lib.PairedAln]
         [Lib.PairedAln]
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U> -}
6d1260b5221ff63b2e5e1d4f152d2b50
  main_goRight5 ::
    Data.Conduit.Internal.Pipe.Pipe
      (Data.Either.Either
         Data.Conduit.Attoparsec.ParseError
         (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln]))
      (Data.Either.Either
         Data.Conduit.Attoparsec.ParseError
         (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln]))
      [Lib.PairedAln]
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
    -> Data.Conduit.Internal.Pipe.Pipe
         [Lib.PairedAln]
         [Lib.PairedAln]
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
    -> Data.Conduit.Internal.Pipe.Pipe
         (Data.Either.Either
            Data.Conduit.Attoparsec.ParseError
            (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln]))
         (Data.Either.Either
            Data.Conduit.Attoparsec.ParseError
            (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln]))
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U> -}
1261c2a57e2a979e16eaa450f4efc73d
  main_goRight6 ::
    Data.Conduit.Internal.Pipe.Pipe
      Data.ByteString.Internal.ByteString
      Data.ByteString.Internal.ByteString
      (Data.Either.Either
         Data.Conduit.Attoparsec.ParseError
         (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln]))
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
    -> Data.Conduit.Internal.Pipe.Pipe
         (Data.Either.Either
            Data.Conduit.Attoparsec.ParseError
            (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln]))
         (Data.Either.Either
            Data.Conduit.Attoparsec.ParseError
            (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln]))
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
    -> Data.Conduit.Internal.Pipe.Pipe
         Data.ByteString.Internal.ByteString
         Data.ByteString.Internal.ByteString
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U> -}
12bf9d9cc57f694c57259d7b87d64d49
  main_goRight7 ::
    Data.Conduit.Internal.Pipe.Pipe
      ()
      ()
      Data.ByteString.Internal.ByteString
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
    -> Data.Conduit.Internal.Pipe.Pipe
         Data.ByteString.Internal.ByteString
         Data.ByteString.Internal.ByteString
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
    -> Data.Conduit.Internal.Pipe.Pipe
         ()
         ()
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U> -}
22c18aaae6879d00e18cfc31681116a2
  main_goRight8 ::
    Data.Conduit.Internal.Pipe.Pipe
      Lib.AlignedRead
      Lib.AlignedRead
      Lib.AlignedRead
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U> -}
af2ce8e0f97171f895f47558c01a5be3
  main_goRight9 ::
    Data.Conduit.Internal.Pipe.Pipe
      Lib.AlignedRead
      Lib.AlignedRead
      Lib.AlignedRead
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U> -}
b50d4afd75117e9245b92fe7f22379cc
  runPrimerTrimmingPE :: Lib.Opts -> GHC.Types.IO Lib.RunStats
  {- Arity: 2, Strictness: <S(SLLLLL),1*U(1*U,A,A,U,U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.runPrimerTrimmingPE1
                  `cast`
                (<Lib.Opts>_R ->_R Sym (GHC.Types.N:IO[0] <Lib.RunStats>_R)) -}
f6179f059ed66f4f88b88471519eb062
  runPrimerTrimmingPE1 ::
    Lib.Opts
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Lib.RunStats #)
  {- Arity: 2, Strictness: <S(SLLLLL),1*U(1*U,A,A,U,U,U)><S,U>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.Opts) (w1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Lib.Opts ww1 ww2 ww3 ww4 ww5 ww6 ->
                 Main.$wrunPrimerTrimmingPE ww1 ww4 ww5 ww6 w1 }) -}
45974cb33d3701dd25a25c94cb3b8c26
  runPrimerTrimmingPE_Fastq :: Lib.Opts -> GHC.Types.IO Lib.RunStats
  {- Arity: 2, Strictness: <S(SLLLLL),1*U(1*U,A,A,U,U,1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.runPrimerTrimmingPE_Fastq1
                  `cast`
                (<Lib.Opts>_R ->_R Sym (GHC.Types.N:IO[0] <Lib.RunStats>_R)) -}
2a8a85084635737766833c8cffaf19b9
  runPrimerTrimmingPE_Fastq1 ::
    Lib.Opts
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Lib.RunStats #)
  {- Arity: 2, Strictness: <S(SLLLLL),1*U(1*U,A,A,U,U,1*U)><S,U>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.Opts) (w1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Lib.Opts ww1 ww2 ww3 ww4 ww5 ww6 ->
                 Main.$wrunPrimerTrimmingPE_Fastq ww1 ww4 ww5 ww6 w1 }) -}
484516404479e7e1b7313355d9c48661
  runPrimerTrimmingSE :: Lib.Opts -> GHC.Types.IO Lib.RunStats
  {- Arity: 2, Strictness: <S(SLLLLL),1*U(1*U,A,A,U,U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.runPrimerTrimmingSE1
                  `cast`
                (<Lib.Opts>_R ->_R Sym (GHC.Types.N:IO[0] <Lib.RunStats>_R)) -}
e618cf7f1ace156aed9f14a43b682a19
  runPrimerTrimmingSE1 ::
    Lib.Opts
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Lib.RunStats #)
  {- Arity: 2, Strictness: <S(SLLLLL),1*U(1*U,A,A,U,U,U)><S,U>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.Opts) (w1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Lib.Opts ww1 ww2 ww3 ww4 ww5 ww6 ->
                 Main.$wrunPrimerTrimmingSE ww1 ww4 ww5 ww6 w1 }) -}
44f047afec3d9cf5cce546a988d89dad
  runPrimerTrimmingSE_Fastq :: Lib.Opts -> GHC.Types.IO Lib.RunStats
  {- Arity: 2, Strictness: <S(SLLLLL),1*U(1*U,A,A,U,U,1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.runPrimerTrimmingSE_Fastq1
                  `cast`
                (<Lib.Opts>_R ->_R Sym (GHC.Types.N:IO[0] <Lib.RunStats>_R)) -}
f8ecffd0d70df35ce6c1b30061b0f965
  runPrimerTrimmingSE_Fastq1 ::
    Lib.Opts
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Lib.RunStats #)
  {- Arity: 2, Strictness: <S(SLLLLL),1*U(1*U,A,A,U,U,1*U)><S,U>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.Opts) (w1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Lib.Opts ww1 ww2 ww3 ww4 ww5 ww6 ->
                 Main.$wrunPrimerTrimmingSE_Fastq ww1 ww4 ww5 ww6 w1 }) -}
acb115fbed8ca3262f12cdef8f3e579f
  selectRunmode :: Lib.Opts -> GHC.Types.IO Lib.RunStats
  {- Arity: 2, Strictness: <S(SSSLLL),1*U(1*U,U,U,U,U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.selectRunmode1
                  `cast`
                (<Lib.Opts>_R ->_R Sym (GHC.Types.N:IO[0] <Lib.RunStats>_R)) -}
5e8cdbf94eb37920b91cee3fa8d9a528
  selectRunmode1 ::
    Lib.Opts
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Lib.RunStats #)
  {- Arity: 2, Strictness: <S(SSSLLL),1*U(1*U,U,U,U,U,U)><S,U>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.Opts) (w1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Lib.Opts ww1 ww2 ww3 ww4 ww5 ww6 ->
                 Main.$wselectRunmode ww1 ww2 ww3 ww4 ww5 ww6 w1 }) -}
"SPEC/Main $fApplicativeResourceT @ IO" [orphan] forall (v :: GHC.Base.Applicative
                                                                GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT @ GHC.Types.IO
                                                               v
  = Main.$s$fApplicativeResourceT
"SPEC/Main $fApplicativeResourceT_$cpure @ IO" [orphan] forall ($dApplicative :: GHC.Base.Applicative
                                                                                   GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT_$cpure @ GHC.Types.IO
                                                                      $dApplicative
  = Main.$s$fApplicativeResourceT_$cpure
"SPEC/Main $fFunctorResourceT @ IO" [orphan] forall (v :: GHC.Base.Functor
                                                            GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fFunctorResourceT @ GHC.Types.IO
                                                           v
  = Main.$s$fApplicativeResourceT_$s$fFunctorResourceT
"SPEC/Main $fMonadIOResourceT @ IO" [orphan] forall (v :: Control.Monad.IO.Class.MonadIO
                                                            GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadIOResourceT @ GHC.Types.IO
                                                           v
  = Main.$s$fMonadIOResourceT
"SPEC/Main $fMonadIOResourceT_$cliftIO @ IO" [orphan] forall ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                             GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadIOResourceT_$cliftIO @ GHC.Types.IO
                                                                    $dMonadIO
  = Main.$s$fMonadIOResourceT_$cliftIO
"SPEC/Main $fMonadResourceResourceT @ IO" [orphan] forall (v :: Control.Monad.IO.Class.MonadIO
                                                                  GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadResourceResourceT @ GHC.Types.IO
                                                                 v
  = Main.$s$fMonadResourceResourceT
"SPEC/Main $fMonadResourceResourceT1 @ IO" [orphan] forall ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                           GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadResourceResourceT1 @ GHC.Types.IO
                                                                  $dMonadIO
  = Main.$s$fMonadResourceResourceT1
"SPEC/Main $fMonadResourceT @ IO" [orphan] forall (v :: GHC.Base.Monad
                                                          GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadResourceT @ GHC.Types.IO
                                                         v
  = Main.$s$fMonadIOResourceT_$s$fMonadResourceT
"SPEC/Main $fMonadResourceT_$c>> @ IO" [orphan] forall ($dMonad :: GHC.Base.Monad
                                                                     GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadResourceT_$c>> @ GHC.Types.IO
                                                              $dMonad
  = Main.$s$fMonadIOResourceT_$s$fMonadResourceT_$c>>
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False



==================== FINAL INTERFACE ====================
2017-10-18 17:05:19.053961 UTC

interface main@main:Main 8002
  interface hash: 6250d534437e60e5f93d1e87d9283707
  ABI hash: 8f7014f788016a8867fd613c8c32fd25
  export-list hash: daf972843d0c463b1b7137fb11f6a6ea
  orphan hash: bfed17c02fefe1be677919c9b850f198
  flag hash: a8fb33b9d9be518d7eae50e6e61296cf
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.calculateTrimStats
  Main.cargs
  Main.chunkEvery
  Main.main
  Main.printAlnStreamToFile
  Main.runPrimerTrimming
  Main.trimprimers
  Main.trimprimersE
  Main.Cmd{Main.Cmd masterfile outsamfile samfile}
module dependencies:
package dependencies: QuickCheck-2.9.2@QuickCheck-2.9.2-Jyj4gc4JxkEIgGFLAsGhs9
                      ansi-terminal-0.6.2.3@ansi-terminal-0.6.2.3-4HPxin1iv6RAndS8lH3nzo
                      ansi-wl-pprint-0.6.7.3@ansi-wl-pprint-0.6.7.3-3GSHFrIr1fs45bsgKkZbLF
                      array-0.5.1.1@array-0.5.1.1
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-HhuV3U7exg79UmloYn3kX2
                      base-4.9.1.0
                      base16-bytestring-0.1.1.6@base16-bytestring-0.1.1.6-4E2p94lTx8gIceMhu8Kl9o
                      base64-bytestring-1.0.0.1@base64-bytestring-1.0.0.1-4O9TExPPz6eI82Yj7L4SIj
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      chunked-data-0.3.0@chunked-data-0.3.0-9yVtbG7WxDXAouokjxBoYn
                      conduit-1.2.10@conduit-1.2.10-GgLn1U1QYcf9wsQecuZ1A4
                      conduit-combinators-1.1.1@conduit-combinators-1.1.1-6ruYzXuPCuQzxO1r1KimU
                      conduit-extra-1.1.15@conduit-extra-1.1.15-8sHNT28fM12994kb54uPaH
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      digits-0.3.1@digits-0.3.1-6oiBpqLKU4HFf04HYYakY
                      directory-1.3.0.0@directory-1.3.0.0
                      exceptions-0.8.3@exceptions-0.8.3-ADEDRATtUrMK1JW4zMQ9U
                      filepath-1.4.1.1@filepath-1.4.1.1
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      hashable-1.2.6.0@hashable-1.2.6.0-3EXxoqeEgbfAKr6aGkye6x
                      integer-gmp-1.0.0.1
                      integer-logarithms-1.0.1@integer-logarithms-1.0.1-IEHCuEd5sG4JjSjlx7m5JF
                      lifted-base-0.2.3.10@lifted-base-0.2.3.10-BoEavBFIcriDza63doCjS2
                      mmorph-1.0.9@mmorph-1.0.9-5bASEvmIkr5CpdAYXwPsn0
                      monad-control-1.0.1.0@monad-control-1.0.1.0-LQwQ0Hi5p0oAccTfTzbfD5
                      mono-traversable-1.0.2@mono-traversable-1.0.2-2XfkX4kmUKV9EdqqkFHQ4
                      mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      mwc-random-0.13.5.0@mwc-random-0.13.5.0-Dp3Ri46ZxJuCFZWIowNqha
                      optparse-applicative-0.13.2.0@optparse-applicative-0.13.2.0-34EUj6Bj0pDLtYR0AoQs8j
                      parallel-3.2.1.1@parallel-3.2.1.1-KQJHWCcq2Ka569Stb10nhx
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primerclip-0.1.0.0@primerclip-0.1.0.0-6szpezlnZs7LOO6rWohIBg
                      primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH
                      process-1.4.3.0@process-1.4.3.0
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      resourcet-1.1.9@resourcet-1.1.9-Ej57FoSD8NQLck5u9CwWz8
                      scientific-0.3.4.12@scientific-0.3.4.12-J9HRl69dpDBBzAMKxlfkoh
                      split-0.2.3.1@split-0.2.3.1-FWyXC6nhV0H3AfM8IzrEFk
                      stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
                      streaming-commons-0.1.17@streaming-commons-0.1.17-pXxQEId7Ie1SLoOLcDazB
                      template-haskell-2.11.1.0
                      text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR
                      tf-random-0.5@tf-random-0.5-BGjMgO8m67W8CHiEl15kZ7
                      time-1.6.0.1@time-1.6.0.1 transformers-0.5.2.0@transformers-0.5.2.0
                      transformers-base-0.4.4@transformers-base-0.4.4-GKSs0LKukAL8ymq2naFmrH
                      unix-2.7.2.1@unix-2.7.2.1
                      unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-1XEErQCPPPc2SEtcHHNx9o
                      vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG
                      vector-algorithms-0.7.0.1@vector-algorithms-0.7.0.1-C2u1KYklHg84I6SQQVEAin
orphans: attoparsec-0.13.1.0@attoparsec-0.13.1.0-HhuV3U7exg79UmloYn3kX2:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.1.0@attoparsec-0.13.1.0-HhuV3U7exg79UmloYn3kX2:Data.Attoparsec.Text.Internal
         base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.6.0@hashable-1.2.6.0-3EXxoqeEgbfAKr6aGkye6x:Data.Hashable.Generic
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed
family instance modules: attoparsec-0.13.1.0@attoparsec-0.13.1.0-HhuV3U7exg79UmloYn3kX2:Data.Attoparsec.Internal.Types
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Compose
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         conduit-1.2.10@conduit-1.2.10-GgLn1U1QYcf9wsQecuZ1A4:Data.Conduit.Internal.Conduit
                         conduit-1.2.10@conduit-1.2.10-GgLn1U1QYcf9wsQecuZ1A4:Data.Conduit.Internal.Pipe
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         monad-control-1.0.1.0@monad-control-1.0.1.0-LQwQ0Hi5p0oAccTfTzbfD5:Control.Monad.Trans.Control
                         mono-traversable-1.0.2@mono-traversable-1.0.2-2XfkX4kmUKV9EdqqkFHQ4:Data.MonoTraversable
                         mono-traversable-1.0.2@mono-traversable-1.0.2-2XfkX4kmUKV9EdqqkFHQ4:Data.NonNull
                         mono-traversable-1.0.2@mono-traversable-1.0.2-2XfkX4kmUKV9EdqqkFHQ4:Data.Sequences
                         mwc-random-0.13.5.0@mwc-random-0.13.5.0-Dp3Ri46ZxJuCFZWIowNqha:System.Random.MWC
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primerclip-0.1.0.0@primerclip-0.1.0.0-6szpezlnZs7LOO6rWohIBg:Lib
                         primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH:Control.Monad.Primitive
                         resourcet-1.1.9@resourcet-1.1.9-Ej57FoSD8NQLck5u9CwWz8:Control.Monad.Trans.Resource.Internal
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
                         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Lazy
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-1XEErQCPPPc2SEtcHHNx9o:Data.HashMap.Base
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-1XEErQCPPPc2SEtcHHNx9o:Data.HashSet
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Primitive
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Storable
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed.Base
import  -/  base-4.9.1.0:Control.Applicative 32430a90492e727f4bd80db71c28600c
import  -/  base-4.9.1.0:Control.Monad a6784c5dab0d75c63dabec5a37843f98
import  -/  base-4.9.1.0:Data.Functor 5ab1dc703df5b482e77efb697833ca3c
import  -/  base-4.9.1.0:Data.List 07ae2acca6538aa0800bd0a993ac6ac1
import  -/  base-4.9.1.0:Data.Maybe d876c4ffe4b3c43755a781e8ad860d88
import  -/  base-4.9.1.0:Data.OldList 27987919d8da2f92e3f472ca81f730f8
import  -/  base-4.9.1.0:Data.Semigroup fc55c71ff629dcbd821309c310055959
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.List ab8c4e523e6c479c549d3bcd5fc4a439
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-4.9.1.0:System.IO e4a64a8e3dce8616da54f0ee7104f7db
import  -/  bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Char8 64661030f691dd1495e363eeda7a5344
import  -/  conduit-1.2.10@conduit-1.2.10-GgLn1U1QYcf9wsQecuZ1A4:Data.Conduit e1821bb6fffe882fe955240027b231ab
import  -/  conduit-1.2.10@conduit-1.2.10-GgLn1U1QYcf9wsQecuZ1A4:Data.Conduit.Internal.Conduit 8ce3b9b86ab5c05f009c4983cd402a46
import  -/  conduit-combinators-1.1.1@conduit-combinators-1.1.1-6ruYzXuPCuQzxO1r1KimU:Conduit 3613c556e142008d222f3ec4e8242420
import  -/  conduit-combinators-1.1.1@conduit-combinators-1.1.1-6ruYzXuPCuQzxO1r1KimU:Data.Conduit.Combinators.Unqualified 0c5c4ba2ed69c19704f62d7919b1380c
import  -/  conduit-extra-1.1.15@conduit-extra-1.1.15-8sHNT28fM12994kb54uPaH:Data.Conduit.Attoparsec 45e7187316b836b2c78dfcda64db00a6
import  -/  conduit-extra-1.1.15@conduit-extra-1.1.15-8sHNT28fM12994kb54uPaH:Data.Conduit.Binary 6603188230cc506ad6096ba7447f637b
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Strict ed6a6dc2532da5c9a45406821568538c
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map.Strict 9d0c0962e53270a0a3fb5cb63723a381
import  -/  deepseq-1.4.2.0@deepseq-1.4.2.0:Control.DeepSeq 3b9ddb93b8ec16cf9a98d6096b46c390
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  optparse-applicative-0.13.2.0@optparse-applicative-0.13.2.0-34EUj6Bj0pDLtYR0AoQs8j:Options.Applicative 3b2110c868e49e0d86cded098f24e0d2
import  -/  optparse-applicative-0.13.2.0@optparse-applicative-0.13.2.0-34EUj6Bj0pDLtYR0AoQs8j:Options.Applicative.Builder cddcfb07a988339795d2e38d4387ac76
import  -/  optparse-applicative-0.13.2.0@optparse-applicative-0.13.2.0-34EUj6Bj0pDLtYR0AoQs8j:Options.Applicative.Extra 149b9f0d4c43ee9476133f84e028bc40
import  -/  optparse-applicative-0.13.2.0@optparse-applicative-0.13.2.0-34EUj6Bj0pDLtYR0AoQs8j:Options.Applicative.Types ce7b38f2adf864314131dd747c72d2ba
import  -/  parallel-3.2.1.1@parallel-3.2.1.1-KQJHWCcq2Ka569Stb10nhx:Control.Parallel.Strategies bff321f08df8772d046cee2e9eeac42e
import  -/  primerclip-0.1.0.0@primerclip-0.1.0.0-6szpezlnZs7LOO6rWohIBg:Lib 63c3615d19f7baf237afbd09c77d512e
import  -/  text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.IO d1ddb4c76b86ec795cc5ee286ec187f5
3c24ba07eb6c97e755e818a67d74e3bc
  $fEqCmd :: GHC.Classes.Eq Main.Cmd
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:. @ Main.Cmd Main.$fEqCmd_$c== Main.$fEqCmd_$c/= -}
3c24ba07eb6c97e755e818a67d74e3bc
  $fEqCmd_$c/= :: Main.Cmd -> Main.Cmd -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U,1*U)><S(SLL),1*U(1*U,1*U,1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Main.Cmd) (b :: Main.Cmd) ->
                 case Main.$fEqCmd_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
3c24ba07eb6c97e755e818a67d74e3bc
  $fEqCmd_$c== :: Main.Cmd -> Main.Cmd -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U,1*U)><S(SLL),1*U(1*U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Main.Cmd) (w1 :: Main.Cmd) ->
                 case w of ww { Main.Cmd ww1 ww2 ww3 ->
                 case w1 of ww4 { Main.Cmd ww5 ww6 ww7 ->
                 Main.$w$c== ww1 ww2 ww3 ww5 ww6 ww7 } }) -}
3c24ba07eb6c97e755e818a67d74e3bc
  $fShowCmd :: GHC.Show.Show Main.Cmd
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Main.Cmd
                  Main.$fShowCmd_$cshowsPrec
                  Main.$fShowCmd_$cshow
                  Main.$fShowCmd_$cshowList -}
3c24ba07eb6c97e755e818a67d74e3bc
  $fShowCmd1 :: Main.Cmd -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: Main.Cmd) (w1 :: GHC.Base.String) ->
                 case w of ww { Main.Cmd ww1 ww2 ww3 ->
                 Main.$w$cshowsPrec 0# ww1 ww2 ww3 w1 }) -}
87e1d85f6f3e1573124bb12eaa244a89
  $fShowCmd2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "}"#) -}
8e8421e54c3c51a3cd140f8ffda07ad5
  $fShowCmd3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "outsamfile = "#) -}
9d746e3573c6c16f57b60c290e7b41b7
  $fShowCmd4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "masterfile = "#) -}
d95cf73c6291ff45f106721c45c318fd
  $fShowCmd5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ", "#) -}
76416234aff10492269a97be9a6f1554
  $fShowCmd6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "samfile = "#) -}
7a30887cbdaed86f0d47ad10f9a2c9f1
  $fShowCmd7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Cmd {"#) -}
3c24ba07eb6c97e755e818a67d74e3bc
  $fShowCmd_$cshow :: Main.Cmd -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Main.Cmd) ->
                 Main.$fShowCmd_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
3c24ba07eb6c97e755e818a67d74e3bc
  $fShowCmd_$cshowList :: [Main.Cmd] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__ @ Main.Cmd Main.$fShowCmd1) -}
3c24ba07eb6c97e755e818a67d74e3bc
  $fShowCmd_$cshowsPrec ::
    GHC.Types.Int -> Main.Cmd -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U,1*U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Main.Cmd) (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Main.Cmd ww3 ww4 ww5 ->
                 Main.$w$cshowsPrec ww1 ww3 ww4 ww5 w2 } }) -}
ffe787835a7a1860338941124400c7dd
  $s$fApplicativeResourceT ::
    GHC.Base.Applicative
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  Main.$s$fApplicativeResourceT_$s$fApplicativeResourceT_$cp1Applicative
                  Main.$s$fApplicativeResourceT_$s$fApplicativeResourceT_$cpure
                  (Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT_$c<*>
                     @ GHC.Types.IO
                     GHC.Base.$fApplicativeIO)
                  (Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT_$c*>
                     @ GHC.Types.IO
                     GHC.Base.$fApplicativeIO)
                  (Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT_$c<*
                     @ GHC.Types.IO
                     GHC.Base.$fApplicativeIO) -}
ba5dd95215f156068b129a03e00ebdf5
  $s$fApplicativeResourceT_$dFunctor :: GHC.Base.Functor GHC.Types.IO
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) GHC.Base.$fFunctorIO -}
63720e3b6e759122404dab6e8cba004b
  $s$fApplicativeResourceT_$s$fApplicativeResourceT_$cp1Applicative ::
    GHC.Base.Functor
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fApplicativeResourceT_$s$fFunctorResourceT -}
a5ff5ebce2abbab0cf04f19cca73e283
  $s$fApplicativeResourceT_$s$fApplicativeResourceT_$cpure ::
    a -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,A><S,U>,
     Unfolding: InlineRule (1, True, True)
                (\ @ a
                   (eta :: a)
                   (eta1 :: GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap)
                   (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (GHC.Base.returnIO @ a eta) `cast` (GHC.Types.N:IO[0] <a>_R) eta2)
                  `cast`
                (forall (a :: <*>_N).
                 <a>_R
                 ->_R Trans
                          (<GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                           ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                          (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                    <GHC.Types.IO>_R <a>_N))) -}
f3f904abec7fa397567d9e19456fea86
  $s$fApplicativeResourceT_$s$fFunctorResourceT ::
    GHC.Base.Functor
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  (Control.Monad.Trans.Resource.Internal.$fFunctorResourceT_$cfmap
                     @ GHC.Types.IO
                     Main.$s$fApplicativeResourceT_$dFunctor)
                  (Control.Monad.Trans.Resource.Internal.$fFunctorResourceT_$c<$
                     @ GHC.Types.IO
                     Main.$s$fApplicativeResourceT_$dFunctor) -}
d813d13eb16731dff302be82c01c3e4a
  $s$fApplicativeZipSink_$c*>_$s$fMonadIOResourceT_$cp1MonadIO ::
    GHC.Base.Monad
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fApplicativeZipSink_$c*>_$s$fMonadResourceT -}
def8f57d6286563a666f3ca95b55aa9e
  $s$fApplicativeZipSink_$c*>_$s$fMonadResourceT ::
    GHC.Base.Monad
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  (Control.Monad.Trans.Resource.Internal.$fMonadResourceT_$cp1Monad
                     @ GHC.Types.IO
                     Main.$s$fApplicativeZipSink_$c*>_g1)
                  (Control.Monad.Trans.Resource.Internal.$fMonadResourceT_$c>>=
                     @ GHC.Types.IO
                     Main.$s$fApplicativeZipSink_$c*>_g1)
                  (Control.Monad.Trans.Resource.Internal.$fMonadResourceT_$c>>
                     @ GHC.Types.IO
                     Main.$s$fApplicativeZipSink_$c*>_g1)
                  (Control.Monad.Trans.Resource.Internal.$fMonadResourceT_$creturn
                     @ GHC.Types.IO
                     Main.$s$fApplicativeZipSink_$c*>_g1)
                  (Control.Monad.Trans.Resource.Internal.$fMonadResourceT_$cfail
                     @ GHC.Types.IO
                     Main.$s$fApplicativeZipSink_$c*>_g1) -}
b317b6a8548f692db59ff0d262a56f44
  $s$fApplicativeZipSink_$c*>_g1 :: GHC.Base.Monad GHC.Types.IO
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) GHC.Base.$fMonadIO -}
39a3148db40d2fc3be5bbc634d8197a3
  $s$fMonadBasebResourceT ::
    Control.Monad.Base.MonadBase
      GHC.Types.IO
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Types.IO
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  GHC.Base.$fApplicativeIO
                  Main.$s$fMonadBasebResourceT_$s$fMonadResourceResourceT_$cp3MonadResource
                  GHC.Base.$fMonadIO
                  Main.$s$fApplicativeZipSink_$c*>_$s$fMonadIOResourceT_$cp1MonadIO
                  Main.$s$fMonadBasebResourceT_$s$fMonadIOResourceT_$cliftIO -}
6d856931eed029b8686da4a25f690175
  $s$fMonadBasebResourceT_$s$fMonadIOResourceT_$cliftIO ::
    GHC.Types.IO a
    -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,A>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (eta :: GHC.Types.IO a) ->
                 let {
                   eta1 :: GHC.Types.IO a = GHC.Base.id @ (GHC.Types.IO a) eta
                 } in
                 (\ (ds2 :: GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                  eta1)
                   `cast`
                 (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                           <GHC.Types.IO>_R <a>_N))) -}
f8ef65d6673f0f6903a632f4a1224b62
  $s$fMonadBasebResourceT_$s$fMonadResourceResourceT_$cp3MonadResource ::
    GHC.Base.Applicative
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fApplicativeResourceT -}
13117a2c30705362d756414401493d4c
  $s$fMonadIOResourceT ::
    Control.Monad.IO.Class.MonadIO
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  Main.$s$fApplicativeZipSink_$c*>_$s$fMonadIOResourceT_$cp1MonadIO
                  Main.$s$fMonadBasebResourceT_$s$fMonadIOResourceT_$cliftIO -}
e956543bcf8c20b746d671d88dd4bf5c
  $s$fMonadResourceResourceT ::
    Control.Monad.Trans.Resource.Internal.MonadResource
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  Main.$s$fMonadResourceResourceT_$s$fMonadResourceResourceT_$cp1MonadResource
                  Main.$s$fMonadResourceResourceT_$s$fMonadResourceResourceT_$cp2MonadResource
                  Main.$s$fMonadBasebResourceT_$s$fMonadResourceResourceT_$cp3MonadResource
                  Main.$s$fMonadResourceResourceT_$s$fMonadResourceResourceT_$cp4MonadResource
                  (Control.Monad.Trans.Resource.Internal.$fMonadResourceResourceT_$cliftResourceT
                     @ GHC.Types.IO
                     Control.Monad.Catch.$fMonadThrowIO
                     Control.Monad.Base.$fMonadBaseIOIO
                     Control.Monad.IO.Class.$fMonadIOIO
                     GHC.Base.$fApplicativeIO) -}
6c87c03e2b572a45a8b890dcdb236e7c
  $s$fMonadResourceResourceT_$s$fMonadResourceResourceT_$cp1MonadResource ::
    Control.Monad.Catch.MonadThrow
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fMonadResourceResourceT_$s$fMonadThrowResourceT -}
fc1bf93a48a386bfe89cd3e356aae759
  $s$fMonadResourceResourceT_$s$fMonadResourceResourceT_$cp2MonadResource ::
    Control.Monad.IO.Class.MonadIO
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) Main.$s$fMonadIOResourceT -}
9aa563f1122981e23f0cadf1973c329d
  $s$fMonadResourceResourceT_$s$fMonadResourceResourceT_$cp4MonadResource ::
    Control.Monad.Base.MonadBase
      GHC.Types.IO
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fMonadBasebResourceT -}
22614342c5d0bca4e62cc2fb61cfb167
  $s$fMonadResourceResourceT_$s$fMonadThrowResourceT ::
    Control.Monad.Catch.MonadThrow
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  Main.$s$fApplicativeZipSink_$c*>_$s$fMonadIOResourceT_$cp1MonadIO
                  Main.$s$fMonadResourceResourceT_$s$fMonadThrowResourceT_$cthrowM -}
aa8bfb27e674f4b3c1a51b51271b81f2
  $s$fMonadResourceResourceT_$s$fMonadThrowResourceT_$cthrowM ::
    GHC.Exception.Exception e =>
    e -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
  {- Arity: 4, HasNoCafRefs,
     Strictness: <B,1*U(A,A,1*C1(U),A,A)><B,U><B,A><B,U>x,
     Unfolding: InlineRule (1, True, True)
                (\ @ e
                   @ a
                   (eta :: GHC.Exception.Exception e)
                   (x :: e)
                   (eta1 :: GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap)
                   (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (GHC.IO.throwIO @ e @ a eta x) `cast` (GHC.Types.N:IO[0] <a>_R)
                   eta2)
                  `cast`
                (forall (e :: <*>_N) (a :: <*>_N).
                 <GHC.Exception.Exception e>_R
                 ->_R <e>_R
                 ->_R Trans
                          (<GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                           ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                          (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                    <GHC.Types.IO>_R <a>_N))) -}
93e1824a03b56a104e5cb7d88c594fb2
  $tc'Cmd :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7121388747227716206##
                   2008801125535667301##
                   Main.$trModule
                   Main.$tc'Cmd1) -}
214056d70f3751b083740fc92c9e81fa
  $tc'Cmd1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Cmd"#) -}
49940ed3209dc55ec46e705eeb137154
  $tcCmd :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10739131892797576262##
                   11963618654651401271##
                   Main.$trModule
                   Main.$tcCmd1) -}
7c074cb7a855a539f4f2f002d7eba83a
  $tcCmd1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Cmd"#) -}
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
618ad4e92c7dcb7a762407006b0de06a
  $w$c== ::
    GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><S,1*U><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.String)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Base.String)
                   (ww3 :: GHC.Base.String)
                   (ww4 :: GHC.Base.String)
                   (ww5 :: GHC.Base.String) ->
                 case GHC.Base.eqString ww ww3 of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case GHC.Base.eqString ww1 ww4 of wild1 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True -> GHC.Base.eqString ww2 ww5 } }) -}
04256b68bf1a2651e2c104729776aafa
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 5, Strictness: <S,U><L,1*U><L,1*U><L,1*U><L,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Base.String)
                   (ww3 :: GHC.Base.String)
                   (w :: GHC.Base.String) ->
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       Main.$fShowCmd7
                       (GHC.Base.++
                          @ GHC.Types.Char
                          Main.$fShowCmd6
                          (GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows6
                             (GHC.Show.showLitString
                                ww1
                                (GHC.Types.:
                                   @ GHC.Types.Char
                                   GHC.Show.shows6
                                   (GHC.Base.++
                                      @ GHC.Types.Char
                                      Main.$fShowCmd5
                                      (GHC.Base.++
                                         @ GHC.Types.Char
                                         Main.$fShowCmd4
                                         (GHC.Types.:
                                            @ GHC.Types.Char
                                            GHC.Show.shows6
                                            (GHC.Show.showLitString
                                               ww2
                                               (GHC.Types.:
                                                  @ GHC.Types.Char
                                                  GHC.Show.shows6
                                                  (GHC.Base.++
                                                     @ GHC.Types.Char
                                                     Main.$fShowCmd5
                                                     (GHC.Base.++
                                                        @ GHC.Types.Char
                                                        Main.$fShowCmd3
                                                        (GHC.Types.:
                                                           @ GHC.Types.Char
                                                           GHC.Show.shows6
                                                           (GHC.Show.showLitString
                                                              ww3
                                                              (GHC.Types.:
                                                                 @ GHC.Types.Char
                                                                 GHC.Show.shows6
                                                                 (GHC.Base.++
                                                                    @ GHC.Types.Char
                                                                    Main.$fShowCmd2
                                                                    x)))))))))))))))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False -> p w
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows7
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 w)) }) -}
2841f4809a91bef0f0c7c1a1effa2876
  $wtrimprimersE ::
    Lib.CMap
    -> Lib.CMap
    -> Data.ByteString.Internal.ByteString
    -> GHC.Types.Int
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> Lib.CigarMap
    -> Data.ByteString.Internal.ByteString
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Lib.Header
    -> GHC.Types.Bool
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> Lib.BedRecord
    -> Lib.AlignedRead
  {- Arity: 27,
     Strictness: <L,1*U><L,1*U><L,U><L,U><L,U><L,U><L,U><L,U><L,U(U,U,U,U)><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0] -}
3c24ba07eb6c97e755e818a67d74e3bc
  data Cmd
    = Cmd {samfile :: GHC.Base.String,
           masterfile :: GHC.Base.String,
           outsamfile :: GHC.Base.String}
535b825bd8880ccaad6a804b7f120ba7
  calculateTrimStats ::
    Data.Conduit.Internal.Conduit.ConduitM
      Lib.AlignedRead
      c
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      GHC.Integer.Type.Integer
  {- Arity: 1, Strictness: <L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Main.calculateTrimStats1
                  `cast`
                (forall (c1 :: <*>_N).
                 Sym (Data.Conduit.Internal.Conduit.N:ConduitM[0]
                          <Lib.AlignedRead>_N
                          <c1>_N
                          <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                          <GHC.Integer.Type.Integer>_R)) -}
c58b2f8937ef648332f26ea3fefa739f
  calculateTrimStats1 ::
    (GHC.Integer.Type.Integer
     -> Data.Conduit.Internal.Pipe.Pipe
          Lib.AlignedRead
          Lib.AlignedRead
          c
          ()
          (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
          b1)
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         c
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         b1
  {- Arity: 1, Strictness: <L,C(U)> -}
9809b6aa7453f437ba2e6efed3a7d831
  cargs :: Options.Applicative.Types.Parser Main.Cmd
  {- Unfolding: (Options.Applicative.Types.MultP
                   @ Main.Cmd
                   @ GHC.Base.String
                   Main.cargs7
                   Main.cargs1) -}
913c9e9068321b4f595700bae5fe83ed
  cargs1 :: Options.Applicative.Types.Parser GHC.Base.String
  {- Strictness: m4,
     Unfolding: (Options.Applicative.Types.AltP
                   @ GHC.Base.String
                   Main.cargs2
                   (Options.Applicative.Types.$fAlternativeParser_$cempty
                      @ GHC.Base.String)) -}
55551e64ce3ca3d99b2983c208364b59
  cargs10 :: Options.Applicative.Types.Option GHC.Base.String
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.Option
                   @ GHC.Base.String
                   Main.cargs5
                   Main.cargs11) -}
d48bf8ec9d7e58834de1b1bdc4840aed
  cargs11 :: Options.Applicative.Types.OptProperties
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.OptProperties
                   Options.Applicative.Types.Visible
                   (GHC.Base.Nothing @ Text.PrettyPrint.ANSI.Leijen.Doc)
                     `cast`
                   (Sym (Options.Applicative.Help.Chunk.N:Chunk[0]) <Text.PrettyPrint.ANSI.Leijen.Doc>_N)
                   Main.cargs_var1
                   (GHC.Base.Nothing @ GHC.Base.String)) -}
b575e57e7c061e70cc1c01af1216d2bf
  cargs12 ::
    Options.Applicative.Types.Parser
      (GHC.Base.String -> GHC.Base.String -> Main.Cmd)
  {- Unfolding: (Options.Applicative.Types.$fApplicativeParser_$cfmap
                   @ GHC.Base.String
                   @ (GHC.Base.String -> GHC.Base.String -> Main.Cmd)
                   Main.Cmd
                   Main.cargs13) -}
21bfea77ad23f9da105f6ee87923cab8
  cargs13 :: Options.Applicative.Types.Parser GHC.Base.String
  {- Unfolding: (Options.Applicative.Types.AltP
                   @ GHC.Base.String
                   Main.cargs14
                   (Options.Applicative.Types.$fAlternativeParser_$cempty
                      @ GHC.Base.String)) -}
ce587d55e7f4d57c0235d81e9628c139
  cargs14 :: Options.Applicative.Types.Parser GHC.Base.String
  {- Unfolding: (Options.Applicative.Types.OptP
                   @ GHC.Base.String
                   Main.cargs15) -}
5fc49c3eb0cefb6ac300a96f2314854c
  cargs15 :: Options.Applicative.Types.Option GHC.Base.String
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.Option
                   @ GHC.Base.String
                   Main.cargs5
                   Main.cargs16) -}
1217c21349740880bf4b55911f8f6837
  cargs16 :: Options.Applicative.Types.OptProperties
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.OptProperties
                   Options.Applicative.Types.Visible
                   (GHC.Base.Nothing @ Text.PrettyPrint.ANSI.Leijen.Doc)
                     `cast`
                   (Sym (Options.Applicative.Help.Chunk.N:Chunk[0]) <Text.PrettyPrint.ANSI.Leijen.Doc>_N)
                   Main.cargs_var2
                   (GHC.Base.Nothing @ GHC.Base.String)) -}
ca29aacbb8ef7941ce455b5920d67796
  cargs2 :: Options.Applicative.Types.Parser GHC.Base.String
  {- Strictness: m2,
     Unfolding: (Options.Applicative.Types.OptP
                   @ GHC.Base.String
                   Main.cargs3) -}
7db4b87986bbed0598ffaa8f1146f34f
  cargs3 :: Options.Applicative.Types.Option GHC.Base.String
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.Option
                   @ GHC.Base.String
                   Main.cargs5
                   Main.cargs4) -}
9da3746e531105f7c1415daf0cc9fc7a
  cargs4 :: Options.Applicative.Types.OptProperties
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.OptProperties
                   Options.Applicative.Types.Visible
                   (GHC.Base.Nothing @ Text.PrettyPrint.ANSI.Leijen.Doc)
                     `cast`
                   (Sym (Options.Applicative.Help.Chunk.N:Chunk[0]) <Text.PrettyPrint.ANSI.Leijen.Doc>_N)
                   Main.cargs_var
                   (GHC.Base.Nothing @ GHC.Base.String)) -}
3ca2df43c3fa9e0f7e036732c3d29a85
  cargs5 :: Options.Applicative.Types.OptReader GHC.Base.String
  {- HasNoCafRefs, Strictness: m3,
     Unfolding: (Options.Applicative.Types.ArgReader
                   @ GHC.Base.String
                   Main.cargs6) -}
ae080a417fee6c3670e3dc170ec1c459
  cargs6 :: Options.Applicative.Types.CReader GHC.Base.String
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Options.Applicative.Types.CReader
                   @ GHC.Base.String
                   Options.Applicative.Types.$fMonoidCompleter4
                     `cast`
                   (Trans
                        (<GHC.Base.String>_R
                         ->_R Sym (GHC.Types.N:IO[0] <[GHC.Base.String]>_R))
                        (Sym (Options.Applicative.Types.N:Completer[0])))
                   (Data.Either.Right
                      @ Options.Applicative.Types.ParseError
                      @ GHC.Base.String)
                     `cast`
                   (Trans
                        (<GHC.Base.String>_R
                         ->_R Trans
                                  (Sym (Data.Functor.Identity.N:Identity[0]
                                            <Data.Either.Either
                                               Options.Applicative.Types.ParseError
                                               GHC.Base.String>_R))
                                  (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                            <Options.Applicative.Types.ParseError>_N
                                            <Data.Functor.Identity.Identity>_R
                                            <GHC.Base.String>_N)))
                        (Trans
                             (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                       <*>_N
                                       <GHC.Base.String>_R
                                       <Control.Monad.Trans.Except.Except
                                          Options.Applicative.Types.ParseError>_R
                                       <GHC.Base.String>_N))
                             (Sym (Options.Applicative.Types.N:ReadM[0]) <GHC.Base.String>_N)))) -}
fe836bb3a10d0b77ac22c14caf47f60c
  cargs7 ::
    Options.Applicative.Types.Parser (GHC.Base.String -> Main.Cmd)
  {- Unfolding: (Options.Applicative.Types.MultP
                   @ (GHC.Base.String -> Main.Cmd)
                   @ GHC.Base.String
                   Main.cargs12
                   Main.cargs8) -}
47ae5f1b0ee5929bd3612671486aa457
  cargs8 :: Options.Applicative.Types.Parser GHC.Base.String
  {- Strictness: m4,
     Unfolding: (Options.Applicative.Types.AltP
                   @ GHC.Base.String
                   Main.cargs9
                   (Options.Applicative.Types.$fAlternativeParser_$cempty
                      @ GHC.Base.String)) -}
2c8714721e18f354b17000306b471fbd
  cargs9 :: Options.Applicative.Types.Parser GHC.Base.String
  {- Strictness: m2,
     Unfolding: (Options.Applicative.Types.OptP
                   @ GHC.Base.String
                   Main.cargs10) -}
8a5cf29aecc1ca607d8c430da9dc3c43
  cargs_var :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString#
                   "OUTPUT_SAM_FILENAME"#) -}
bf6732bccf60669e6d972dce445be7f4
  cargs_var1 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "PRIMER_BED_INFILE"#) -}
8a6a0151c93c832affbe0f269434a9f7
  cargs_var2 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "SAM_INFILE"#) -}
51e6e6eb85303be58d021acefa5386fb
  chunkEvery :: GHC.Types.Int -> [a] -> [[a]]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U(U)><S,1*U> -}
65786c2d8ebab02cddffbf8e845d1694
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
609df03bdcc5faac1d83a2efa9282ca1
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case System.Environment.getArgs1 s of ds2 { (#,#) ipv ipv1 ->
                 case Options.Applicative.Extra.customExecParser2
                        @ Main.Cmd
                        (Options.Applicative.Extra.execParserPure
                           @ Main.Cmd
                           Options.Applicative.Builder.defaultPrefs
                           Main.main5
                           ipv1)
                        ipv of ds3 { (#,#) ipv2 ipv3 ->
                 case Main.main4 ipv3 ipv2 of ds4 { (#,#) ipv4 ipv5 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        (case GHC.Show.$w$cshowsPrec1
                                0#
                                ipv5
                                (GHC.Types.[] @ GHC.Types.Char) of ww2 { (#,#) ww3 ww4 ->
                         GHC.Base.++
                           @ GHC.Types.Char
                           (GHC.Types.: @ GHC.Types.Char ww3 ww4)
                           Main.main3 })
                        GHC.Types.True
                        ipv4 of ds5 { (#,#) ipv6 ipv7 ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   Main.main2
                   GHC.Types.True
                   ipv6 } } } }) -}
1f5fc748b96bfc29e5eebf923fe4e33c
  main10 :: Options.Applicative.Types.Parser Main.Cmd
  {- Unfolding: (Options.Applicative.Types.MultP
                   @ Main.Cmd
                   @ Main.Cmd
                   (Options.Applicative.Extra.helper @ Main.Cmd)
                   Main.cargs) -}
a37e00bd701a879d6ad8f30d6af5c2c5
  main11 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
0abd85aa198eee0dc13ffde316acf9bb
  main2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "primers trimming complete."#) -}
dfc5114ab36e8a308df328b52ff05607
  main3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   " alignments trimmed of primer sequence."#) -}
fc23b97bd8d14ac996301e21a090873f
  main4 ::
    Main.Cmd
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Integer.Type.Integer #)
  {- Arity: 2, Strictness: <L,U(1*U,1*U,1*U)><S,U> -}
fa3abd33b395fb30ab53c0552ef54939
  main5 :: Options.Applicative.Types.ParserInfo Main.Cmd
  {- Unfolding: (Options.Applicative.Types.ParserInfo
                   @ Main.Cmd
                   Main.main10
                   GHC.Types.True
                   Main.main8
                   Main.main6
                   (GHC.Base.Nothing @ Text.PrettyPrint.ANSI.Leijen.Doc)
                     `cast`
                   (Sym (Options.Applicative.Help.Chunk.N:Chunk[0]) <Text.PrettyPrint.ANSI.Leijen.Doc>_N)
                   Options.Applicative.Builder.info1
                   GHC.Types.True) -}
91c89c1a46ec4ccf053979d86ec4b9f3
  main6 ::
    Options.Applicative.Help.Chunk.Chunk
      Text.PrettyPrint.ANSI.Leijen.Doc
  {- Unfolding: (Data.OldList.wordsFB
                   @ (Options.Applicative.Help.Chunk.Chunk
                        Text.PrettyPrint.ANSI.Leijen.Doc)
                   Options.Applicative.Help.Chunk.paragraph1
                   (GHC.Base.Nothing @ Text.PrettyPrint.ANSI.Leijen.Doc)
                     `cast`
                   (Sym (Options.Applicative.Help.Chunk.N:Chunk[0]) <Text.PrettyPrint.ANSI.Leijen.Doc>_N)
                   Main.main7) -}
1c4efb2c613d770f694c4c070cde4ce9
  main7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "primerclip -- Swift Biosciences post-alignment primer trim tool v0.0.2 for illumina paired-end reads"#) -}
857b4ca7b8c597f51d474340aee97ed3
  main8 ::
    Options.Applicative.Help.Chunk.Chunk
      Text.PrettyPrint.ANSI.Leijen.Doc
  {- Unfolding: (Data.OldList.wordsFB
                   @ (Options.Applicative.Help.Chunk.Chunk
                        Text.PrettyPrint.ANSI.Leijen.Doc)
                   Options.Applicative.Help.Chunk.paragraph1
                   (GHC.Base.Nothing @ Text.PrettyPrint.ANSI.Leijen.Doc)
                     `cast`
                   (Sym (Options.Applicative.Help.Chunk.N:Chunk[0]) <Text.PrettyPrint.ANSI.Leijen.Doc>_N)
                   Main.main9) -}
e2fc34ba69b88177e83e828cee1e8675
  main9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Trim PCR primer sequences from aligned reads"#) -}
ee6798363a12f3cb345418c319b608a1
  masterfile :: Main.Cmd -> GHC.Base.String
  RecSel Left Main.Cmd
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds2 :: Main.Cmd) ->
                 case ds2 of wild { Main.Cmd ds3 ds4 ds5 -> ds4 }) -}
9a7b5e17e7c79ae981a7da86fa452158
  outsamfile :: Main.Cmd -> GHC.Base.String
  RecSel Left Main.Cmd
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds2 :: Main.Cmd) ->
                 case ds2 of wild { Main.Cmd ds3 ds4 ds5 -> ds5 }) -}
d54bcccfa7d7d15f0fd4938198d729ec
  printAlnStreamToFile ::
    Control.Monad.Trans.Resource.Internal.MonadResource m =>
    GHC.IO.FilePath
    -> Data.Conduit.Internal.Conduit.ConduitM Lib.AlignedRead c m ()
  {- Arity: 1, Strictness: <L,U(U,U,A,A,C(U))> -}
a685fcf3aefd9d2e85946959aad4ca53
  printAlnStreamToFile1 ::
    GHC.IO.FilePath
    -> forall b.
       (()
        -> Data.Conduit.Internal.Pipe.Pipe
             Lib.AlignedRead
             Lib.AlignedRead
             c
             ()
             (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
             b)
       -> Data.Conduit.Internal.Pipe.Pipe
            Lib.AlignedRead
            Lib.AlignedRead
            c
            ()
            (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
            b
  {- Arity: 2, Strictness: <L,U><L,C(U)> -}
6db13595af0a4a36b4656603c23b67e5
  runPrimerTrimming ::
    Main.Cmd -> GHC.Types.IO GHC.Integer.Type.Integer
  {- Arity: 2, Strictness: <L,U(1*U,1*U,1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main4
                  `cast`
                (<Main.Cmd>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Integer.Type.Integer>_R)) -}
c3b254852ff98af35129d20f96f3eab7
  samfile :: Main.Cmd -> GHC.Base.String
  RecSel Left Main.Cmd
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLL),1*U(1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds2 :: Main.Cmd) ->
                 case ds2 of wild { Main.Cmd ds3 ds4 ds5 -> ds3 }) -}
8466a9d59b759bd4f52913266c94c367
  trimprimers ::
    [Lib.MasterRecord] -> Lib.Alignments -> Lib.Alignments
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
acf84c0f4bbf1cf358f1af532dc096d6
  trimprimersE ::
    Lib.CMap -> Lib.CMap -> Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 3,
     Strictness: <L,1*U><L,1*U><S,1*U(U,U,U,U,U,U,U(U,U,U,U),A,U,U,U,U,U,U,U,U,U,U,A,A,A,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Lib.CMap) (w1 :: Lib.CMap) (w2 :: Lib.AlignedRead) ->
                 case w2 of ww { Lib.AlignedRead ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ->
                 Main.$wtrimprimersE
                   w
                   w1
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww22
                   ww23
                   ww24
                   ww25
                   ww26
                   ww27
                   ww28
                   ww29 }) -}
instance GHC.Classes.Eq [Main.Cmd] = Main.$fEqCmd
instance GHC.Show.Show [Main.Cmd] = Main.$fShowCmd
"SPEC/Main $fApplicativeResourceT @ IO" [ALWAYS] forall ($dApplicative :: GHC.Base.Applicative
                                                                            GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT @ GHC.Types.IO
                                                               $dApplicative
  = Main.$s$fApplicativeResourceT
"SPEC/Main $fApplicativeResourceT_$cp1Applicative @ IO" [ALWAYS] forall ($dApplicative :: GHC.Base.Applicative
                                                                                            GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT_$cp1Applicative @ GHC.Types.IO
                                                                               $dApplicative
  = Main.$s$fApplicativeResourceT_$s$fApplicativeResourceT_$cp1Applicative
"SPEC/Main $fApplicativeResourceT_$cpure @ IO" [ALWAYS] forall ($dApplicative :: GHC.Base.Applicative
                                                                                   GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT_$cpure @ GHC.Types.IO
                                                                      $dApplicative
  = Main.$s$fApplicativeResourceT_$s$fApplicativeResourceT_$cpure
"SPEC/Main $fFunctorResourceT @ IO" [ALWAYS] forall ($dFunctor :: GHC.Base.Functor
                                                                    GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fFunctorResourceT @ GHC.Types.IO
                                                           $dFunctor
  = Main.$s$fApplicativeResourceT_$s$fFunctorResourceT
"SPEC/Main $fMonadBasebResourceT @ IO @ IO" [ALWAYS] forall ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                              GHC.Types.IO
                                                                              GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadBasebResourceT @ GHC.Types.IO
                                                              @ GHC.Types.IO
                                                              $dMonadBase
  = Main.$s$fMonadBasebResourceT
"SPEC/Main $fMonadIOResourceT @ IO" [ALWAYS] forall ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                    GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadIOResourceT @ GHC.Types.IO
                                                           $dMonadIO
  = Main.$s$fMonadIOResourceT
"SPEC/Main $fMonadIOResourceT_$cliftIO @ IO" [ALWAYS] forall ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                             GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadIOResourceT_$cliftIO @ GHC.Types.IO
                                                                    $dMonadIO
  = Main.$s$fMonadBasebResourceT_$s$fMonadIOResourceT_$cliftIO
"SPEC/Main $fMonadIOResourceT_$cp1MonadIO @ IO" [ALWAYS] forall ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadIOResourceT_$cp1MonadIO @ GHC.Types.IO
                                                                       $dMonadIO
  = Main.$s$fApplicativeZipSink_$c*>_$s$fMonadIOResourceT_$cp1MonadIO
"SPEC/Main $fMonadResourceResourceT @ IO" [ALWAYS] forall ($dApplicative :: GHC.Base.Applicative
                                                                              GHC.Types.IO)
                                                          ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                          GHC.Types.IO)
                                                          ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                            GHC.Types.IO
                                                                            GHC.Types.IO)
                                                          ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                             GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadResourceResourceT @ GHC.Types.IO
                                                                 $dMonadThrow
                                                                 $dMonadBase
                                                                 $dMonadIO
                                                                 $dApplicative
  = Main.$s$fMonadResourceResourceT
"SPEC/Main $fMonadResourceResourceT_$cp1MonadResource @ IO" [ALWAYS] forall ($dApplicative :: GHC.Base.Applicative
                                                                                                GHC.Types.IO)
                                                                            ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                            GHC.Types.IO)
                                                                            ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                              GHC.Types.IO
                                                                                              GHC.Types.IO)
                                                                            ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                               GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadResourceResourceT_$cp1MonadResource @ GHC.Types.IO
                                                                                   $dMonadThrow
                                                                                   $dMonadBase
                                                                                   $dMonadIO
                                                                                   $dApplicative
  = Main.$s$fMonadResourceResourceT_$s$fMonadResourceResourceT_$cp1MonadResource
"SPEC/Main $fMonadResourceResourceT_$cp2MonadResource @ IO" [ALWAYS] forall ($dApplicative :: GHC.Base.Applicative
                                                                                                GHC.Types.IO)
                                                                            ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                            GHC.Types.IO)
                                                                            ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                              GHC.Types.IO
                                                                                              GHC.Types.IO)
                                                                            ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                               GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadResourceResourceT_$cp2MonadResource @ GHC.Types.IO
                                                                                   $dMonadThrow
                                                                                   $dMonadBase
                                                                                   $dMonadIO
                                                                                   $dApplicative
  = Main.$s$fMonadResourceResourceT_$s$fMonadResourceResourceT_$cp2MonadResource
"SPEC/Main $fMonadResourceResourceT_$cp3MonadResource @ IO" [ALWAYS] forall ($dApplicative :: GHC.Base.Applicative
                                                                                                GHC.Types.IO)
                                                                            ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                            GHC.Types.IO)
                                                                            ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                              GHC.Types.IO
                                                                                              GHC.Types.IO)
                                                                            ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                               GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadResourceResourceT_$cp3MonadResource @ GHC.Types.IO
                                                                                   $dMonadThrow
                                                                                   $dMonadBase
                                                                                   $dMonadIO
                                                                                   $dApplicative
  = Main.$s$fMonadBasebResourceT_$s$fMonadResourceResourceT_$cp3MonadResource
"SPEC/Main $fMonadResourceResourceT_$cp4MonadResource @ IO" [ALWAYS] forall ($dApplicative :: GHC.Base.Applicative
                                                                                                GHC.Types.IO)
                                                                            ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                            GHC.Types.IO)
                                                                            ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                              GHC.Types.IO
                                                                                              GHC.Types.IO)
                                                                            ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                               GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadResourceResourceT_$cp4MonadResource @ GHC.Types.IO
                                                                                   $dMonadThrow
                                                                                   $dMonadBase
                                                                                   $dMonadIO
                                                                                   $dApplicative
  = Main.$s$fMonadResourceResourceT_$s$fMonadResourceResourceT_$cp4MonadResource
"SPEC/Main $fMonadResourceT @ IO" [ALWAYS] forall ($dMonad :: GHC.Base.Monad
                                                                GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadResourceT @ GHC.Types.IO
                                                         $dMonad
  = Main.$s$fApplicativeZipSink_$c*>_$s$fMonadResourceT
"SPEC/Main $fMonadThrowResourceT @ IO" [ALWAYS] forall ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                          GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadThrowResourceT @ GHC.Types.IO
                                                              $dMonadThrow
  = Main.$s$fMonadResourceResourceT_$s$fMonadThrowResourceT
"SPEC/Main $fMonadThrowResourceT_$cthrowM @ IO" [ALWAYS] forall ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                   GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadThrowResourceT_$cthrowM @ GHC.Types.IO
                                                                       $dMonadThrow
  = Main.$s$fMonadResourceResourceT_$s$fMonadThrowResourceT_$cthrowM
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False



==================== FINAL INTERFACE ====================
2018-12-06 15:55:18.00258 UTC

interface main:Main 8022
  interface hash: ca379598c6a1f2986255c324d99ce819
  ABI hash: 5d7582754aee5f7ed97f960efb1dce2f
  export-list hash: 666b3a93123f852fe50c5f1afb00fbf6
  orphan hash: c1811aa0029753b86ccea20d9e3802f0
  flag hash: a9e85ae641149fb93eca9ee4b8dbb1a5
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
  Main.runPrimerTrimmingPE
  Main.runPrimerTrimmingSE
  Main.runPrimerTrimmingSEpar
module dependencies:
package dependencies: QuickCheck-2.10.1 ansi-terminal-0.8.0.2
                      ansi-wl-pprint-0.6.8.2 array-0.5.2.0 async-2.1.1.1
                      attoparsec-0.13.2.2 base-4.10.1.0 binary-0.8.5.1
                      bytestring-0.10.8.2 cereal-0.5.5.0 cereal-conduit-0.8.0
                      colour-2.3.4 conduit-1.3.0 conduit-extra-1.3.0 containers-0.5.10.2
                      deepseq-1.4.3.0 digits-0.3.1 directory-1.3.0.2 exceptions-0.8.3
                      filepath-1.4.1.2 ghc-boot-th-8.2.2 ghc-prim-0.5.1.1
                      hashable-1.2.7.0 integer-gmp-1.0.1.0 integer-logarithms-1.0.2.1
                      monad-loops-0.4.3 mono-traversable-1.0.8.1 mtl-2.2.2
                      optparse-applicative-0.14.2.0 pretty-1.1.3.3 primerclip-0.3.5.0
                      primitive-0.6.3.0 process-1.6.1.0 random-1.1 resourcet-1.2.0
                      scientific-0.3.5.2 split-0.2.3.3 stm-2.4.5.0 stm-chans-3.0.0.4
                      stm-conduit-4.0.0 template-haskell-2.12.0.0 text-1.2.3.0
                      tf-random-0.5 time-1.8.0.2 transformers-0.5.2.0 unix-2.7.2.2
                      unliftio-0.2.4.0 unliftio-core-0.1.1.0 unordered-containers-0.2.9.0
                      vector-0.12.0.1 vector-algorithms-0.7.0.1
orphans: colour-2.3.4:Data.Colour
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.0:Data.Text.Lazy
         vector-0.12.0.1:Data.Vector.Unboxed
         vector-0.12.0.1:Data.Vector.Fusion.Bundle text-1.2.3.0:Data.Text
         binary-0.8.5.1:Data.Binary.Generic text-1.2.3.0:Data.Text.Show
         transformers-0.5.2.0:Control.Monad.Trans.Error
         bytestring-0.10.8.2:Data.ByteString.Builder
         stm-2.4.5.0:Control.Monad.STM time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian base-4.10.1.0:GHC.Float
         base-4.10.1.0:GHC.Base
family instance modules: attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.10.1.0:Control.Applicative base-4.10.1.0:Data.Complex
                         base-4.10.1.0:Data.Either base-4.10.1.0:Data.Functor.Compose
                         base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity
                         base-4.10.1.0:Data.Functor.Product base-4.10.1.0:Data.Functor.Sum
                         base-4.10.1.0:Data.List.NonEmpty base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Semigroup base-4.10.1.0:Data.Type.Equality
                         base-4.10.1.0:Data.Version base-4.10.1.0:Data.Void
                         base-4.10.1.0:GHC.Exts base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats
                         conduit-1.3.0:Data.Conduit.Internal.Conduit
                         conduit-1.3.0:Data.Conduit.Internal.Pipe
                         containers-0.5.10.2:Data.IntMap.Internal
                         containers-0.5.10.2:Data.IntSet.Internal
                         containers-0.5.10.2:Data.Map.Internal
                         containers-0.5.10.2:Data.Sequence.Internal
                         containers-0.5.10.2:Data.Set.Internal containers-0.5.10.2:Data.Tree
                         ghc-boot-th-8.2.2:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.2.2:GHC.LanguageExtensions.Type
                         mono-traversable-1.0.8.1:Data.MonoTraversable
                         mono-traversable-1.0.8.1:Data.NonNull
                         mono-traversable-1.0.8.1:Data.Sequences
                         pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3:Text.PrettyPrint.HughesPJ primerclip-0.3.5.0:Lib
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         resourcet-1.2.0:Control.Monad.Trans.Resource.Internal
                         stm-conduit-4.0.0:Data.Conduit.Async.Composition
                         template-haskell-2.12.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.0:Data.Text text-1.2.3.0:Data.Text.Lazy
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
import  -/  async-2.1.1.1:Control.Concurrent.Async a74559d4db8f72c7612bd64726df13b3
import  -/  attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8 75eb155dd50974f74df242dc5b5f3c20
import  -/  base-4.10.1.0:Control.Applicative 99577a9c463ffe4790a1d37547a345bd
import  -/  base-4.10.1.0:Control.Concurrent 54b4f33006223552c60861a4a302d698
import  -/  base-4.10.1.0:Control.Monad ebed2e8e7444944e0c1d827c6faf40a4
import  -/  base-4.10.1.0:Data.Either d7dae5d9bf298dee616e465c14b5d60e
import  -/  base-4.10.1.0:Data.List 4ab7fa2a1b87502b23af891a384f0506
import  -/  base-4.10.1.0:Data.Maybe 07738c5485acb328136bb15596f8b845
import  -/  base-4.10.1.0:Data.Semigroup 92914a5d9e5176805d2364209875f6ed
import  -/  base-4.10.1.0:GHC.Base 782fd99b5e36f3698a26179a49afca64
import  -/  base-4.10.1.0:GHC.Conc.Sync 3cf9d980bef04043684377f638021935
import  -/  base-4.10.1.0:Prelude 31945b7d0084063347fc52506d3a4020
import  -/  bytestring-0.10.8.2:Data.ByteString.Char8 ad3bf7657730adeac35cbb427299ea44
import  -/  conduit-1.3.0:Conduit 9ca771118110a6d629536df1c70cfb0c
import  -/  conduit-1.3.0:Data.Conduit 214df678ad51311214f3e8dc14f14854
import  -/  conduit-1.3.0:Data.Conduit.Combinators 879a6b83242087f07896e92d4cc7d0e9
import  -/  conduit-1.3.0:Data.Conduit.Combinators.Unqualified bb15af616225f302b124833678fb569b
import  -/  conduit-1.3.0:Data.Conduit.Internal.Conduit 2e849a9a0bf7ebe9e17389aa7226446c
import  -/  conduit-extra-1.3.0:Data.Conduit.Attoparsec b4907557e083a7d91d1ea01e01aba9c2
import  -/  conduit-extra-1.3.0:Data.Conduit.Binary 41355976e14d2e02c70b000849dc465d
import  -/  containers-0.5.10.2:Data.IntMap.Strict 7892d40daae1f0118150f998d9c28567
import  -/  containers-0.5.10.2:Data.Map.Strict 194f5b0a9785a91a43562790aa6787fc
import  -/  ghc-prim-0.5.1.1:GHC.Classes 93e2660065dce9329577e83d76d8f0d4
import  -/  ghc-prim-0.5.1.1:GHC.Types b1fd0716441595db508c1a74387bf394
import  -/  optparse-applicative-0.14.2.0:Options.Applicative 93a6ca444e605eb4e5fada3ed41aa455
import  -/  optparse-applicative-0.14.2.0:Options.Applicative.Builder 9b4b35d95a3739ae48e6b42cbe90c8ed
import  -/  optparse-applicative-0.14.2.0:Options.Applicative.Extra 3e7572295fe04361b13fe1be6a5ecfc7
import  -/  primerclip-0.3.5.0:Lib c1177298f8e26222690ec765970b580b
import  -/  resourcet-1.2.0:Control.Monad.Trans.Resource 59bed121960bb36beb220cea6866eaf0
import  -/  stm-2.4.5.0:Control.Concurrent.STM 3bb51322d75ab2fab7591237a88b8007
import  -/  stm-chans-3.0.0.4:Control.Concurrent.STM.TBMChan acca77460a090c1ed3df9f0da52b36ca
import  -/  stm-chans-3.0.0.4:Control.Concurrent.STM.TBMQueue 5289cd696d0e3c7851a915e59b1a48cb
import  -/  stm-conduit-4.0.0:Data.Conduit.Async 8308f75678684573ed9a7b78a14e6b8c
import  -/  stm-conduit-4.0.0:Data.Conduit.TQueue 9b91d61af4b8c3586e6cc0dfc709ef49
82814822e5b3b05c873e7ed497a40172
  $s$fApplicativeResourceT ::
    GHC.Base.Applicative
      (Control.Monad.Trans.Resource.Internal.ResourceT
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO))
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT
                       (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO))
                  Main.$s$fApplicativeResourceT_$s$fFunctorResourceT
                  (\ @ a (eta :: a) ->
                   let {
                     x :: GHC.Prim.State# GHC.Prim.RealWorld
                          -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                       {- Arity: 1 -}
                     = \ (s :: GHC.Prim.State# GHC.Prim.RealWorld) -> (# s, eta #)
                   } in
                   let {
                     x1 :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                       {- Arity: 2 -}
                     = \ (ds2 :: GHC.IORef.IORef
                                   Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                       x
                   } in
                   (\ (ds2 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                    x1)
                     `cast`
                   (Trans
                        (<GHC.IORef.IORef
                            Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                         ->_R Trans
                                  (<GHC.IORef.IORef
                                      Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                                   ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                                  (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                            <GHC.Types.IO>_R <a>_N)))
                        (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                  <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_R
                                  <a>_N))))
                  (\ @ a
                     @ b
                     (ds2 :: Control.Monad.Trans.Resource.Internal.ResourceT
                               (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                               (a -> b))
                     (ds3 :: Control.Monad.Trans.Resource.Internal.ResourceT
                               (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO) a)
                     (r :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                   let {
                     ds4 :: Control.Monad.Trans.Resource.Internal.ResourceT
                              GHC.Types.IO (a -> b)
                     = ds2
                         `cast`
                       (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                            <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_R
                            <a -> b>_N)
                         r
                   } in
                   let {
                     ds5 :: Control.Monad.Trans.Resource.Internal.ResourceT
                              GHC.Types.IO a
                     = ds3
                         `cast`
                       (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                            <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_R
                            <a>_N)
                         r
                   } in
                   (\ (r1 :: GHC.IORef.IORef
                               Control.Monad.Trans.Resource.Internal.ReleaseMap)
                      (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                    case (ds4
                            `cast`
                          (Trans
                               (Nth:2
                                    (Trans
                                         (<Control.Monad.Trans.Resource.Internal.ResourceT
                                             GHC.Types.IO (a -> b)>_R
                                          ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                                  GHC.Types.IO a>_R
                                          ->_R Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                   <GHC.Types.IO>_R <b>_N)
                                         (<Control.Monad.Trans.Resource.Internal.ResourceT
                                             GHC.Types.IO (a -> b)>_R
                                          ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                                  GHC.Types.IO a>_R
                                          ->_R <GHC.IORef.IORef
                                                  Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                                          ->_R GHC.Types.N:IO[0] <b>_R)))
                               (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                    <GHC.Types.IO>_R <a -> b>_N))
                            r1)
                           `cast`
                         (GHC.Types.N:IO[0] <a -> b>_R)
                           s of ds6 { (#,#) ipv ipv1 ->
                    case (ds5
                            `cast`
                          (Trans
                               (Nth:2
                                    (Nth:3
                                         (Trans
                                              (<Control.Monad.Trans.Resource.Internal.ResourceT
                                                  GHC.Types.IO (a -> b)>_R
                                               ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                                       GHC.Types.IO a>_R
                                               ->_R Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                        <GHC.Types.IO>_R <b>_N)
                                              (<Control.Monad.Trans.Resource.Internal.ResourceT
                                                  GHC.Types.IO (a -> b)>_R
                                               ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                                       GHC.Types.IO a>_R
                                               ->_R <GHC.IORef.IORef
                                                       Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                                               ->_R GHC.Types.N:IO[0] <b>_R))))
                               (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                    <GHC.Types.IO>_R <a>_N))
                            r1)
                           `cast`
                         (GHC.Types.N:IO[0] <a>_R)
                           ipv of ds7 { (#,#) ipv2 ipv3 ->
                    (# ipv2, ipv1 ipv3 #) } })
                     `cast`
                   (Nth:3
                        (Nth:3
                             (Trans
                                  (<Control.Monad.Trans.Resource.Internal.ResourceT
                                      GHC.Types.IO (a -> b)>_R
                                   ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                           GHC.Types.IO a>_R
                                   ->_R <GHC.IORef.IORef
                                           Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                                   ->_R Sym (GHC.Types.N:IO[0] <b>_R))
                                  (<Control.Monad.Trans.Resource.Internal.ResourceT
                                      GHC.Types.IO (a -> b)>_R
                                   ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                           GHC.Types.IO a>_R
                                   ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                 <GHC.Types.IO>_R <b>_N))))))
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   <Control.Monad.Trans.Resource.Internal.ResourceT
                      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                      (a -> b)>_R
                   ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                           (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO) a>_R
                   ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                 <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_R
                                 <b>_N))
                  (\ @ a
                     @ b
                     @ c
                     (eta :: a -> b -> c)
                     (eta1 :: Control.Monad.Trans.Resource.Internal.ResourceT
                                (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO) a)
                     (eta2 :: Control.Monad.Trans.Resource.Internal.ResourceT
                                (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO) b)
                     (eta3 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                   let {
                     ds2 :: Control.Monad.Trans.Resource.Internal.ResourceT
                              GHC.Types.IO a
                     = eta1
                         `cast`
                       (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                            <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_R
                            <a>_N)
                         eta3
                   } in
                   let {
                     ds3 :: Control.Monad.Trans.Resource.Internal.ResourceT
                              GHC.Types.IO b
                     = eta2
                         `cast`
                       (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                            <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_R
                            <b>_N)
                         eta3
                   } in
                   (\ (r :: GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap)
                      (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                    case (ds2
                            `cast`
                          (Trans
                               (Nth:2
                                    (Nth:3
                                         (Trans
                                              (<a -> b -> c>_R
                                               ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                                       GHC.Types.IO a>_R
                                               ->_R Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                        <GHC.Types.IO>_R <b -> c>_N)
                                              (<a -> b -> c>_R
                                               ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                                       GHC.Types.IO a>_R
                                               ->_R <GHC.IORef.IORef
                                                       Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                                               ->_R GHC.Types.N:IO[0] <b -> c>_R))))
                               (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                    <GHC.Types.IO>_R <a>_N))
                            r)
                           `cast`
                         (GHC.Types.N:IO[0] <a>_R)
                           s of ds4 { (#,#) ipv ipv1 ->
                    case (ds3
                            `cast`
                          (Trans
                               (Nth:2
                                    (Nth:3
                                         (Trans
                                              (<Control.Monad.Trans.Resource.Internal.ResourceT
                                                  GHC.Types.IO (b -> c)>_R
                                               ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                                       GHC.Types.IO b>_R
                                               ->_R Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                        <GHC.Types.IO>_R <c>_N)
                                              (<Control.Monad.Trans.Resource.Internal.ResourceT
                                                  GHC.Types.IO (b -> c)>_R
                                               ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                                       GHC.Types.IO b>_R
                                               ->_R <GHC.IORef.IORef
                                                       Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                                               ->_R GHC.Types.N:IO[0] <c>_R))))
                               (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                    <GHC.Types.IO>_R <b>_N))
                            r)
                           `cast`
                         (GHC.Types.N:IO[0] <b>_R)
                           ipv of ds5 { (#,#) ipv2 ipv3 ->
                    (# ipv2, eta ipv1 ipv3 #) } })
                     `cast`
                   (Nth:3
                        (Nth:3
                             (Trans
                                  (<Control.Monad.Trans.Resource.Internal.ResourceT
                                      GHC.Types.IO (b -> c)>_R
                                   ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                           GHC.Types.IO b>_R
                                   ->_R <GHC.IORef.IORef
                                           Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                                   ->_R Sym (GHC.Types.N:IO[0] <c>_R))
                                  (<Control.Monad.Trans.Resource.Internal.ResourceT
                                      GHC.Types.IO (b -> c)>_R
                                   ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                           GHC.Types.IO b>_R
                                   ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                 <GHC.Types.IO>_R <c>_N))))))
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N).
                   <a -> b -> c>_R
                   ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                           (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO) a>_R
                   ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                           (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO) b>_R
                   ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                 <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_R
                                 <c>_N))
                  (\ @ a
                     @ b
                     (eta :: Control.Monad.Trans.Resource.Internal.ResourceT
                               (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO) a)
                     (eta1 :: Control.Monad.Trans.Resource.Internal.ResourceT
                                (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO) b)
                     (eta2 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                   let {
                     ds2 :: Control.Monad.Trans.Resource.Internal.ResourceT
                              GHC.Types.IO a
                     = eta
                         `cast`
                       (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                            <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_R
                            <a>_N)
                         eta2
                   } in
                   let {
                     ds3 :: Control.Monad.Trans.Resource.Internal.ResourceT
                              GHC.Types.IO b
                     = eta1
                         `cast`
                       (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                            <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_R
                            <b>_N)
                         eta2
                   } in
                   (\ (r :: GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap)
                      (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                    case (ds2
                            `cast`
                          (Trans
                               (Nth:2
                                    (Nth:3
                                         (Trans
                                              (<a -> b -> b>_R
                                               ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                                       GHC.Types.IO a>_R
                                               ->_R Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                        <GHC.Types.IO>_R <b -> b>_N)
                                              (<a -> b -> b>_R
                                               ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                                       GHC.Types.IO a>_R
                                               ->_R <GHC.IORef.IORef
                                                       Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                                               ->_R GHC.Types.N:IO[0] <b -> b>_R))))
                               (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                    <GHC.Types.IO>_R <a>_N))
                            r)
                           `cast`
                         (GHC.Types.N:IO[0] <a>_R)
                           s of ds4 { (#,#) ipv ipv1 ->
                    (ds3
                       `cast`
                     (Trans
                          (Nth:2
                               (Nth:3
                                    (Trans
                                         (<Control.Monad.Trans.Resource.Internal.ResourceT
                                             GHC.Types.IO (b -> b)>_R
                                          ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                                  GHC.Types.IO b>_R
                                          ->_R Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                   <GHC.Types.IO>_R <b>_N)
                                         (<Control.Monad.Trans.Resource.Internal.ResourceT
                                             GHC.Types.IO (b -> b)>_R
                                          ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                                  GHC.Types.IO b>_R
                                          ->_R <GHC.IORef.IORef
                                                  Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                                          ->_R GHC.Types.N:IO[0] <b>_R))))
                          (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                               <GHC.Types.IO>_R <b>_N))
                       r)
                      `cast`
                    (GHC.Types.N:IO[0] <b>_R)
                      ipv })
                     `cast`
                   (Nth:3
                        (Nth:3
                             (Trans
                                  (<Control.Monad.Trans.Resource.Internal.ResourceT
                                      GHC.Types.IO (b -> b)>_R
                                   ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                           GHC.Types.IO b>_R
                                   ->_R <GHC.IORef.IORef
                                           Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                                   ->_R Sym (GHC.Types.N:IO[0] <b>_R))
                                  (<Control.Monad.Trans.Resource.Internal.ResourceT
                                      GHC.Types.IO (b -> b)>_R
                                   ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                           GHC.Types.IO b>_R
                                   ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                 <GHC.Types.IO>_R <b>_N))))))
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   <Control.Monad.Trans.Resource.Internal.ResourceT
                      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO) a>_R
                   ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                           (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO) b>_R
                   ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                 <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_R
                                 <b>_N))
                  (\ @ a
                     @ b
                     (eta1 :: Control.Monad.Trans.Resource.Internal.ResourceT
                                (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO) a)
                     (eta2 :: Control.Monad.Trans.Resource.Internal.ResourceT
                                (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO) b)
                     (eta3 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                   let {
                     ds2 :: Control.Monad.Trans.Resource.Internal.ResourceT
                              GHC.Types.IO a
                     = eta1
                         `cast`
                       (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                            <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_R
                            <a>_N)
                         eta3
                   } in
                   let {
                     ds3 :: Control.Monad.Trans.Resource.Internal.ResourceT
                              GHC.Types.IO b
                     = eta2
                         `cast`
                       (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                            <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_R
                            <b>_N)
                         eta3
                   } in
                   (\ (r :: GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap)
                      (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                    case (ds2
                            `cast`
                          (Trans
                               (Nth:2
                                    (Nth:3
                                         (Trans
                                              (<a -> b -> a>_R
                                               ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                                       GHC.Types.IO a>_R
                                               ->_R Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                        <GHC.Types.IO>_R <b -> a>_N)
                                              (<a -> b -> a>_R
                                               ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                                       GHC.Types.IO a>_R
                                               ->_R <GHC.IORef.IORef
                                                       Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                                               ->_R GHC.Types.N:IO[0] <b -> a>_R))))
                               (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                    <GHC.Types.IO>_R <a>_N))
                            r)
                           `cast`
                         (GHC.Types.N:IO[0] <a>_R)
                           s of ds4 { (#,#) ipv ipv1 ->
                    case (ds3
                            `cast`
                          (Trans
                               (Nth:2
                                    (Nth:3
                                         (Trans
                                              (<Control.Monad.Trans.Resource.Internal.ResourceT
                                                  GHC.Types.IO (b -> a)>_R
                                               ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                                       GHC.Types.IO b>_R
                                               ->_R Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                        <GHC.Types.IO>_R <a>_N)
                                              (<Control.Monad.Trans.Resource.Internal.ResourceT
                                                  GHC.Types.IO (b -> a)>_R
                                               ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                                       GHC.Types.IO b>_R
                                               ->_R <GHC.IORef.IORef
                                                       Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                                               ->_R GHC.Types.N:IO[0] <a>_R))))
                               (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                    <GHC.Types.IO>_R <b>_N))
                            r)
                           `cast`
                         (GHC.Types.N:IO[0] <b>_R)
                           ipv of ds5 { (#,#) ipv2 ipv3 ->
                    (# ipv2, ipv1 #) } })
                     `cast`
                   (Nth:3
                        (Nth:3
                             (Trans
                                  (<Control.Monad.Trans.Resource.Internal.ResourceT
                                      GHC.Types.IO (b -> a)>_R
                                   ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                           GHC.Types.IO b>_R
                                   ->_R <GHC.IORef.IORef
                                           Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                                   ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                                  (<Control.Monad.Trans.Resource.Internal.ResourceT
                                      GHC.Types.IO (b -> a)>_R
                                   ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                           GHC.Types.IO b>_R
                                   ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                 <GHC.Types.IO>_R <a>_N))))))
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   <Control.Monad.Trans.Resource.Internal.ResourceT
                      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO) a>_R
                   ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                           (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO) b>_R
                   ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                 <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_R
                                 <a>_N)) -}
882011cf600f948a2abbb9ee07638f7f
  $s$fApplicativeResourceT1 ::
    GHC.Base.Applicative
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  Main.$s$fApplicativeResourceT_$s$fFunctorResourceT1
                  (\ @ a (eta :: a) ->
                   let {
                     x :: GHC.Prim.State# GHC.Prim.RealWorld
                          -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                       {- Arity: 1 -}
                     = \ (s :: GHC.Prim.State# GHC.Prim.RealWorld) -> (# s, eta #)
                   } in
                   (\ (ds2 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                    x)
                     `cast`
                   (Trans
                        (<GHC.IORef.IORef
                            Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                         ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                        (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                  <GHC.Types.IO>_R <a>_N))))
                  (\ @ a
                     @ b
                     (ds2 :: Control.Monad.Trans.Resource.Internal.ResourceT
                               GHC.Types.IO (a -> b))
                     (ds3 :: Control.Monad.Trans.Resource.Internal.ResourceT
                               GHC.Types.IO a)
                     (r :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (ds2
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <a -> b>_N)
                           r)
                          `cast`
                        (GHC.Types.N:IO[0] <a -> b>_R)
                          s of ds4 { (#,#) ipv ipv1 ->
                   case (ds3
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <a>_N)
                           r)
                          `cast`
                        (GHC.Types.N:IO[0] <a>_R)
                          ipv of ds5 { (#,#) ipv2 ipv3 ->
                   (# ipv2, ipv1 ipv3 #) } })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   Trans
                       (<Control.Monad.Trans.Resource.Internal.ResourceT
                           GHC.Types.IO (a -> b)>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO a>_R
                        ->_R <GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                        ->_R Sym (GHC.Types.N:IO[0] <b>_R))
                       (<Control.Monad.Trans.Resource.Internal.ResourceT
                           GHC.Types.IO (a -> b)>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO a>_R
                        ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                      <GHC.Types.IO>_R <b>_N)))
                  (\ @ a
                     @ b
                     @ c
                     (eta :: a -> b -> c)
                     (eta1 :: Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO a)
                     (eta2 :: Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b)
                     (eta3 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (eta1
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <a>_N)
                           eta3)
                          `cast`
                        (GHC.Types.N:IO[0] <a>_R)
                          s of ds2 { (#,#) ipv ipv1 ->
                   case (eta2
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <b>_N)
                           eta3)
                          `cast`
                        (GHC.Types.N:IO[0] <b>_R)
                          ipv of ds3 { (#,#) ipv2 ipv3 ->
                   (# ipv2, eta ipv1 ipv3 #) } })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N).
                   Trans
                       (<a -> b -> c>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO a>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b>_R
                        ->_R <GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                        ->_R Sym (GHC.Types.N:IO[0] <c>_R))
                       (<a -> b -> c>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO a>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b>_R
                        ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                      <GHC.Types.IO>_R <c>_N)))
                  (\ @ a
                     @ b
                     (eta :: Control.Monad.Trans.Resource.Internal.ResourceT
                               GHC.Types.IO a)
                     (eta1 :: Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b)
                     (eta2 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (eta
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <a>_N)
                           eta2)
                          `cast`
                        (GHC.Types.N:IO[0] <a>_R)
                          s of ds2 { (#,#) ipv ipv1 ->
                   (eta1
                      `cast`
                    (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                         <GHC.Types.IO>_R <b>_N)
                      eta2)
                     `cast`
                   (GHC.Types.N:IO[0] <b>_R)
                     ipv })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   Trans
                       (<Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b>_R
                        ->_R <GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                        ->_R Sym (GHC.Types.N:IO[0] <b>_R))
                       (<Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b>_R
                        ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                      <GHC.Types.IO>_R <b>_N)))
                  (\ @ a
                     @ b
                     (eta1 :: Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO a)
                     (eta2 :: Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b)
                     (eta3 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (eta1
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <a>_N)
                           eta3)
                          `cast`
                        (GHC.Types.N:IO[0] <a>_R)
                          s of ds2 { (#,#) ipv ipv1 ->
                   case (eta2
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <b>_N)
                           eta3)
                          `cast`
                        (GHC.Types.N:IO[0] <b>_R)
                          ipv of ds3 { (#,#) ipv2 ipv3 ->
                   (# ipv2, ipv1 #) } })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   Trans
                       (<Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b>_R
                        ->_R <GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                        ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                       (<Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b>_R
                        ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                      <GHC.Types.IO>_R <a>_N))) -}
9decdea0030e52564138a9da0e895664
  $s$fApplicativeResourceT_$cpure1 ::
    a -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,A><S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (eta :: a) ->
                 let {
                   x :: GHC.Prim.State# GHC.Prim.RealWorld
                        -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                     {- Arity: 1 -}
                   = \ (s :: GHC.Prim.State# GHC.Prim.RealWorld) -> (# s, eta #)
                 } in
                 (\ (ds2 :: GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                  x)
                   `cast`
                 (Trans
                      (<GHC.IORef.IORef
                          Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                       ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                      (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                <GHC.Types.IO>_R <a>_N)))) -}
10d2e08476019a61420540ace2e9fa04
  $s$fApplicativeResourceT_$s$fFunctorResourceT ::
    GHC.Base.Functor
      (Control.Monad.Trans.Resource.Internal.ResourceT
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO))
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT
                       (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO))
                  (\ @ a
                     @ b
                     (f :: a -> b)
                     (ds2 :: Control.Monad.Trans.Resource.Internal.ResourceT
                               (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO) a)
                     (r :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                   let {
                     ds3 :: Control.Monad.Trans.Resource.Internal.ResourceT
                              GHC.Types.IO a
                     = ds2
                         `cast`
                       (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                            <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_R
                            <a>_N)
                         r
                   } in
                   (\ (r1 :: GHC.IORef.IORef
                               Control.Monad.Trans.Resource.Internal.ReleaseMap)
                      (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                    case (ds3
                            `cast`
                          (Trans
                               (Nth:2
                                    (Nth:3
                                         (Trans
                                              (<a -> b>_R
                                               ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                                       GHC.Types.IO a>_R
                                               ->_R Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                        <GHC.Types.IO>_R <b>_N)
                                              (<a -> b>_R
                                               ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                                       GHC.Types.IO a>_R
                                               ->_R <GHC.IORef.IORef
                                                       Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                                               ->_R GHC.Types.N:IO[0] <b>_R))))
                               (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                    <GHC.Types.IO>_R <a>_N))
                            r1)
                           `cast`
                         (GHC.Types.N:IO[0] <a>_R)
                           s of ds4 { (#,#) ipv ipv1 ->
                    (# ipv, f ipv1 #) })
                     `cast`
                   (Nth:3
                        (Nth:3
                             (Trans
                                  (<a -> b>_R
                                   ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                           GHC.Types.IO a>_R
                                   ->_R <GHC.IORef.IORef
                                           Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                                   ->_R Sym (GHC.Types.N:IO[0] <b>_R))
                                  (<a -> b>_R
                                   ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                           GHC.Types.IO a>_R
                                   ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                 <GHC.Types.IO>_R <b>_N))))))
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   <a -> b>_R
                   ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                           (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO) a>_R
                   ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                 <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_R
                                 <b>_N))
                  (\ @ a
                     @ b
                     (x :: a)
                     (eta :: Control.Monad.Trans.Resource.Internal.ResourceT
                               (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO) b)
                     (eta1 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                   let {
                     ds2 :: Control.Monad.Trans.Resource.Internal.ResourceT
                              GHC.Types.IO b
                     = eta
                         `cast`
                       (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                            <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_R
                            <b>_N)
                         eta1
                   } in
                   (\ (r :: GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap)
                      (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                    case (ds2
                            `cast`
                          (Trans
                               (Nth:2
                                    (Nth:3
                                         (Trans
                                              (<b -> a>_R
                                               ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                                       GHC.Types.IO b>_R
                                               ->_R Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                        <GHC.Types.IO>_R <a>_N)
                                              (<b -> a>_R
                                               ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                                       GHC.Types.IO b>_R
                                               ->_R <GHC.IORef.IORef
                                                       Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                                               ->_R GHC.Types.N:IO[0] <a>_R))))
                               (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                    <GHC.Types.IO>_R <b>_N))
                            r)
                           `cast`
                         (GHC.Types.N:IO[0] <b>_R)
                           s of ds3 { (#,#) ipv ipv1 ->
                    (# ipv, x #) })
                     `cast`
                   (Nth:3
                        (Nth:3
                             (Trans
                                  (<b -> a>_R
                                   ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                           GHC.Types.IO b>_R
                                   ->_R <GHC.IORef.IORef
                                           Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                                   ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                                  (<b -> a>_R
                                   ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                           GHC.Types.IO b>_R
                                   ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                 <GHC.Types.IO>_R <a>_N))))))
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   <a>_R
                   ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                           (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO) b>_R
                   ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                 <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_R
                                 <a>_N)) -}
ba0c5e000222c74800cd3dd4bdaf9d6e
  $s$fApplicativeResourceT_$s$fFunctorResourceT1 ::
    GHC.Base.Functor
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  (\ @ a
                     @ b
                     (f :: a -> b)
                     (ds2 :: Control.Monad.Trans.Resource.Internal.ResourceT
                               GHC.Types.IO a)
                     (r :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (ds2
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <a>_N)
                           r)
                          `cast`
                        (GHC.Types.N:IO[0] <a>_R)
                          s of ds3 { (#,#) ipv ipv1 ->
                   (# ipv, f ipv1 #) })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   Trans
                       (<a -> b>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO a>_R
                        ->_R <GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                        ->_R Sym (GHC.Types.N:IO[0] <b>_R))
                       (<a -> b>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO a>_R
                        ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                      <GHC.Types.IO>_R <b>_N)))
                  (\ @ a
                     @ b
                     (x :: a)
                     (eta :: Control.Monad.Trans.Resource.Internal.ResourceT
                               GHC.Types.IO b)
                     (eta1 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (eta
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <b>_N)
                           eta1)
                          `cast`
                        (GHC.Types.N:IO[0] <b>_R)
                          s of ds2 { (#,#) ipv ipv1 ->
                   (# ipv, x #) })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   Trans
                       (<a>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b>_R
                        ->_R <GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                        ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                       (<a>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b>_R
                        ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                      <GHC.Types.IO>_R <a>_N))) -}
024bea3c9fbe651cd8eb75d1cef1530d
  $s$fMonadIOResourceT ::
    Control.Monad.IO.Class.MonadIO
      (Control.Monad.Trans.Resource.Internal.ResourceT
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO))
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT
                       (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO))
                  Main.$s$fMonadIOResourceT_$s$fMonadResourceT
                  (\ @ a (eta :: GHC.Types.IO a) ->
                   let {
                     x :: GHC.IORef.IORef
                            Control.Monad.Trans.Resource.Internal.ReleaseMap
                          -> GHC.Types.IO a
                       {- Arity: 1 -}
                     = \ (ds2 :: GHC.IORef.IORef
                                   Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                       eta
                   } in
                   (\ (ds2 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                    x)
                     `cast`
                   (Trans
                        (<GHC.IORef.IORef
                            Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                         ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                       <GHC.Types.IO>_R <a>_N))
                        (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                  <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_R
                                  <a>_N)))) -}
e7f628d75daf7c27625d507995f8d23e
  $s$fMonadIOResourceT1 ::
    Control.Monad.IO.Class.MonadIO
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  Main.$s$fMonadIOResourceT_$s$fMonadResourceT1
                  (\ @ a
                     (eta :: GHC.Types.IO a)
                     (ds2 :: GHC.IORef.IORef
                               Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                   eta)
                    `cast`
                  (forall (a :: <*>_N).
                   <GHC.Types.IO a>_R
                   ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                 <GHC.Types.IO>_R <a>_N)) -}
4b93f4c6374055601491a76a36327e12
  $s$fMonadIOResourceT_$cliftIO ::
    GHC.Types.IO a
    -> Control.Monad.Trans.Resource.Internal.ResourceT
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO) a
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><L,A><L,A>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (eta :: GHC.Types.IO a) ->
                 let {
                   x :: GHC.IORef.IORef
                          Control.Monad.Trans.Resource.Internal.ReleaseMap
                        -> GHC.Types.IO a
                     {- Arity: 1 -}
                   = \ (ds2 :: GHC.IORef.IORef
                                 Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                     eta
                 } in
                 (\ (ds2 :: GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                  x)
                   `cast`
                 (Trans
                      (<GHC.IORef.IORef
                          Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                       ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                     <GHC.Types.IO>_R <a>_N))
                      (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_R
                                <a>_N)))) -}
279b6cf4a95b302c1e19fb877f3727ad
  $s$fMonadIOResourceT_$s$fMonadResourceT ::
    GHC.Base.Monad
      (Control.Monad.Trans.Resource.Internal.ResourceT
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO))
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT
                       (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO))
                  Main.$s$fApplicativeResourceT
                  (\ @ a
                     @ b
                     (ds2 :: Control.Monad.Trans.Resource.Internal.ResourceT
                               (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO) a)
                     (f :: a
                           -> Control.Monad.Trans.Resource.Internal.ResourceT
                                (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO) b)
                     (r :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                   let {
                     ds3 :: Control.Monad.Trans.Resource.Internal.ResourceT
                              GHC.Types.IO a
                     = ds2
                         `cast`
                       (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                            <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_R
                            <a>_N)
                         r
                   } in
                   (\ (r1 :: GHC.IORef.IORef
                               Control.Monad.Trans.Resource.Internal.ReleaseMap)
                      (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                    case (ds3
                            `cast`
                          (Trans
                               (Nth:2
                                    (Trans
                                         (<Control.Monad.Trans.Resource.Internal.ResourceT
                                             GHC.Types.IO a>_R
                                          ->_R <a
                                                -> Control.Monad.Trans.Resource.Internal.ResourceT
                                                     GHC.Types.IO b>_R
                                          ->_R Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                   <GHC.Types.IO>_R <b>_N)
                                         (<Control.Monad.Trans.Resource.Internal.ResourceT
                                             GHC.Types.IO a>_R
                                          ->_R <a
                                                -> Control.Monad.Trans.Resource.Internal.ResourceT
                                                     GHC.Types.IO b>_R
                                          ->_R <GHC.IORef.IORef
                                                  Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                                          ->_R GHC.Types.N:IO[0] <b>_R)))
                               (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                    <GHC.Types.IO>_R <a>_N))
                            r1)
                           `cast`
                         (GHC.Types.N:IO[0] <a>_R)
                           s of ds4 { (#,#) ipv ipv1 ->
                    (((f ipv1)
                        `cast`
                      (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                           <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_R
                           <b>_N)
                        r)
                       `cast`
                     (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                          <GHC.Types.IO>_R <b>_N)
                       r1)
                      `cast`
                    (GHC.Types.N:IO[0] <b>_R)
                      ipv })
                     `cast`
                   (Nth:3
                        (Nth:3
                             (Trans
                                  (<Control.Monad.Trans.Resource.Internal.ResourceT
                                      GHC.Types.IO a>_R
                                   ->_R <a
                                         -> Control.Monad.Trans.Resource.Internal.ResourceT
                                              GHC.Types.IO b>_R
                                   ->_R <GHC.IORef.IORef
                                           Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                                   ->_R Sym (GHC.Types.N:IO[0] <b>_R))
                                  (<Control.Monad.Trans.Resource.Internal.ResourceT
                                      GHC.Types.IO a>_R
                                   ->_R <a
                                         -> Control.Monad.Trans.Resource.Internal.ResourceT
                                              GHC.Types.IO b>_R
                                   ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                 <GHC.Types.IO>_R <b>_N))))))
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   <Control.Monad.Trans.Resource.Internal.ResourceT
                      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO) a>_R
                   ->_R <a
                         -> Control.Monad.Trans.Resource.Internal.ResourceT
                              (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO) b>_R
                   ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                 <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_R
                                 <b>_N))
                  Main.$s$fMonadIOResourceT_$s$fMonadResourceT_$c>>
                  (\ @ a (eta :: a) ->
                   let {
                     x :: GHC.Prim.State# GHC.Prim.RealWorld
                          -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                       {- Arity: 1 -}
                     = \ (s :: GHC.Prim.State# GHC.Prim.RealWorld) -> (# s, eta #)
                   } in
                   let {
                     x1 :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                       {- Arity: 2 -}
                     = \ (ds2 :: GHC.IORef.IORef
                                   Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                       x
                   } in
                   (\ (ds2 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                    x1)
                     `cast`
                   (Trans
                        (<GHC.IORef.IORef
                            Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                         ->_R Trans
                                  (<GHC.IORef.IORef
                                      Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                                   ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                                  (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                            <GHC.Types.IO>_R <a>_N)))
                        (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                  <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_R
                                  <a>_N))))
                  (\ @ a ->
                   GHC.Err.errorWithoutStackTrace
                     @ 'GHC.Types.LiftedRep
                     @ (Control.Monad.Trans.Resource.Internal.ResourceT
                          (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                          a)) -}
4a73250991a4aab0c6a25c66e7395e9c
  $s$fMonadIOResourceT_$s$fMonadResourceT1 ::
    GHC.Base.Monad
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  Main.$s$fApplicativeResourceT1
                  (\ @ a
                     @ b
                     (ds2 :: Control.Monad.Trans.Resource.Internal.ResourceT
                               GHC.Types.IO a)
                     (f :: a
                           -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO b)
                     (r :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (ds2
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <a>_N)
                           r)
                          `cast`
                        (GHC.Types.N:IO[0] <a>_R)
                          s of ds3 { (#,#) ipv ipv1 ->
                   ((f ipv1)
                      `cast`
                    (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                         <GHC.Types.IO>_R <b>_N)
                      r)
                     `cast`
                   (GHC.Types.N:IO[0] <b>_R)
                     ipv })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   Trans
                       (<Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                        ->_R <a
                              -> Control.Monad.Trans.Resource.Internal.ResourceT
                                   GHC.Types.IO b>_R
                        ->_R <GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                        ->_R Sym (GHC.Types.N:IO[0] <b>_R))
                       (<Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                        ->_R <a
                              -> Control.Monad.Trans.Resource.Internal.ResourceT
                                   GHC.Types.IO b>_R
                        ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                      <GHC.Types.IO>_R <b>_N)))
                  Main.$s$fMonadIOResourceT_$s$fMonadResourceT_$c>>1
                  (\ @ a (eta :: a) ->
                   let {
                     x :: GHC.Prim.State# GHC.Prim.RealWorld
                          -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                       {- Arity: 1 -}
                     = \ (s :: GHC.Prim.State# GHC.Prim.RealWorld) -> (# s, eta #)
                   } in
                   (\ (ds2 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                    x)
                     `cast`
                   (Trans
                        (<GHC.IORef.IORef
                            Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                         ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                        (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                  <GHC.Types.IO>_R <a>_N))))
                  (\ @ a ->
                   GHC.Err.errorWithoutStackTrace
                     @ 'GHC.Types.LiftedRep
                     @ (Control.Monad.Trans.Resource.Internal.ResourceT
                          GHC.Types.IO a)) -}
f950c0a0a8a58b9758b42db3caf720cb
  $s$fMonadIOResourceT_$s$fMonadResourceT_$c>> ::
    Control.Monad.Trans.Resource.Internal.ResourceT
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO) a
    -> Control.Monad.Trans.Resource.Internal.ResourceT
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO) b
    -> Control.Monad.Trans.Resource.Internal.ResourceT
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO) b
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,1*C1(C(C1(U(U,A))))><L,1*C1(C(C1(U)))><L,U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ a
                   @ b
                   (m1 :: Control.Monad.Trans.Resource.Internal.ResourceT
                            (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO) a)
                   (k :: Control.Monad.Trans.Resource.Internal.ResourceT
                           (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO) b)
                   (r :: GHC.IORef.IORef
                           Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                 let {
                   ds2 :: Control.Monad.Trans.Resource.Internal.ResourceT
                            GHC.Types.IO a
                   = m1
                       `cast`
                     (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                          <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_R
                          <a>_N)
                       r
                 } in
                 (\ (r1 :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap)
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                  case (ds2
                          `cast`
                        (Trans
                             (Nth:2
                                  (Trans
                                       (<Control.Monad.Trans.Resource.Internal.ResourceT
                                           GHC.Types.IO a>_R
                                        ->_R <a
                                              -> Control.Monad.Trans.Resource.Internal.ResourceT
                                                   GHC.Types.IO b>_R
                                        ->_R Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                 <GHC.Types.IO>_R <b>_N)
                                       (<Control.Monad.Trans.Resource.Internal.ResourceT
                                           GHC.Types.IO a>_R
                                        ->_R <a
                                              -> Control.Monad.Trans.Resource.Internal.ResourceT
                                                   GHC.Types.IO b>_R
                                        ->_R <GHC.IORef.IORef
                                                Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                                        ->_R GHC.Types.N:IO[0] <b>_R)))
                             (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                  <GHC.Types.IO>_R <a>_N))
                          r1)
                         `cast`
                       (GHC.Types.N:IO[0] <a>_R)
                         s of ds3 { (#,#) ipv ipv1 ->
                  ((k `cast`
                    (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                         <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_R
                         <b>_N)
                      r)
                     `cast`
                   (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                        <GHC.Types.IO>_R <b>_N)
                     r1)
                    `cast`
                  (GHC.Types.N:IO[0] <b>_R)
                    ipv })
                   `cast`
                 (Nth:3
                      (Nth:3
                           (Trans
                                (<Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                                 ->_R <a
                                       -> Control.Monad.Trans.Resource.Internal.ResourceT
                                            GHC.Types.IO b>_R
                                 ->_R <GHC.IORef.IORef
                                         Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                                 ->_R Sym (GHC.Types.N:IO[0] <b>_R))
                                (<Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                                 ->_R <a
                                       -> Control.Monad.Trans.Resource.Internal.ResourceT
                                            GHC.Types.IO b>_R
                                 ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                               <GHC.Types.IO>_R <b>_N))))))
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N).
                 <Control.Monad.Trans.Resource.Internal.ResourceT
                    (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO) a>_R
                 ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO) b>_R
                 ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                               <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_R
                               <b>_N)) -}
ffb17e54937206d80c2306b83580fe36
  $s$fMonadIOResourceT_$s$fMonadResourceT_$c>>1 ::
    Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
    -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO b
    -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO b
  {- Arity: 4, HasNoCafRefs,
     Strictness: <C(C(S(SL))),1*C1(C1(U(U,A)))><L,1*C1(C1(U(U,U)))><L,U><S,U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ a
                   @ b
                   (m1 :: Control.Monad.Trans.Resource.Internal.ResourceT
                            GHC.Types.IO a)
                   (k :: Control.Monad.Trans.Resource.Internal.ResourceT
                           GHC.Types.IO b)
                   (r :: GHC.IORef.IORef
                           Control.Monad.Trans.Resource.Internal.ReleaseMap)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (m1
                         `cast`
                       (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                            <GHC.Types.IO>_R <a>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0] <a>_R)
                        s of ds2 { (#,#) ipv ipv1 ->
                 (k `cast`
                  (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                       <GHC.Types.IO>_R <b>_N)
                    r)
                   `cast`
                 (GHC.Types.N:IO[0] <b>_R)
                   ipv })
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N).
                 Trans
                     (<Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                      ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                              GHC.Types.IO b>_R
                      ->_R <GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                      ->_R Sym (GHC.Types.N:IO[0] <b>_R))
                     (<Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                      ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                              GHC.Types.IO b>_R
                      ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                    <GHC.Types.IO>_R <b>_N))) -}
13ec05a1fc567db15a0bbb5c7931e3d4
  $s$fMonadResourceResourceT ::
    Control.Monad.Trans.Resource.Internal.MonadResource
      (Control.Monad.Trans.Resource.Internal.ResourceT
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO))
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT
                       (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO))
                  Main.$s$fMonadIOResourceT
                  (\ @ a
                     (eta :: Control.Monad.Trans.Resource.Internal.ResourceT
                               GHC.Types.IO a)
                     (eta1 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                   let {
                     eta2 :: GHC.Types.IO a
                     = eta
                         `cast`
                       (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                            <GHC.Types.IO>_R <a>_N)
                         eta1
                   } in
                   (\ (ds2 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                    eta2)
                     `cast`
                   (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                             <GHC.Types.IO>_R <a>_N)))
                    `cast`
                  (forall (a :: <*>_N).
                   <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                   ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                 <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_R
                                 <a>_N)) -}
e1664501852a3eb70670ec8b295ac60c
  $s$fMonadResourceResourceT1 ::
    Control.Monad.Trans.Resource.Internal.MonadResource
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  Main.$s$fMonadIOResourceT1
                  (\ @ a
                     (eta :: Control.Monad.Trans.Resource.Internal.ResourceT
                               GHC.Types.IO a)
                     (eta1 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                   eta
                     `cast`
                   (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                        <GHC.Types.IO>_R <a>_N)
                     eta1)
                    `cast`
                  (forall (a :: <*>_N).
                   <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                   ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                 <GHC.Types.IO>_R <a>_N)) -}
be5aa823f3cb48164726782fb0ee9b8b
  $s$fMonadResourceResourceT3 ::
    Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
    -> GHC.IORef.IORef Control.Monad.Trans.Resource.Internal.ReleaseMap
    -> GHC.Types.IO a
  {- Arity: 2, HasNoCafRefs, Strictness: <C(S),1*C1(U)><L,U>,
     Unfolding: InlineRule (2, True, True)
                (\ @ a
                   (eta :: Control.Monad.Trans.Resource.Internal.ResourceT
                             GHC.Types.IO a)
                   (eta1 :: GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                 eta
                   `cast`
                 (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                      <GHC.Types.IO>_R <a>_N)
                   eta1) -}
68e740e01cc60e69f6006ddc4293eab5
  $s$fMonadResourceT_$creturn ::
    a
    -> Control.Monad.Trans.Resource.Internal.ResourceT
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO) a
  {- Arity: 4, HasNoCafRefs, Strictness: <L,U><L,A><L,A><S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (eta :: a) ->
                 let {
                   x :: GHC.Prim.State# GHC.Prim.RealWorld
                        -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                     {- Arity: 1 -}
                   = \ (s :: GHC.Prim.State# GHC.Prim.RealWorld) -> (# s, eta #)
                 } in
                 let {
                   x1 :: GHC.IORef.IORef
                           Control.Monad.Trans.Resource.Internal.ReleaseMap
                         -> GHC.Prim.State# GHC.Prim.RealWorld
                         -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                     {- Arity: 2 -}
                   = \ (ds2 :: GHC.IORef.IORef
                                 Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                     x
                 } in
                 (\ (ds2 :: GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                  x1)
                   `cast`
                 (Trans
                      (<GHC.IORef.IORef
                          Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                       ->_R Trans
                                (<GHC.IORef.IORef
                                    Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                                 ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                                (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                          <GHC.Types.IO>_R <a>_N)))
                      (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_R
                                <a>_N)))) -}
3355d3346f30eac30c6ee7e532344445
  $s$fMonadUnliftIOResourceT ::
    Control.Monad.IO.Unlift.MonadUnliftIO
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  Main.$s$fMonadIOResourceT1
                  (Control.Monad.Trans.Resource.Internal.$fMonadUnliftIOResourceT1
                     @ GHC.Types.IO
                     Control.Monad.IO.Unlift.$fMonadUnliftIOIO)
                    `cast`
                  (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                            <GHC.Types.IO>_R
                            <Control.Monad.IO.Unlift.UnliftIO
                               (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)>_N))
                  Main.$s$fMonadUnliftIOResourceT_$s$fMonadUnliftIOResourceT_$cwithRunInIO -}
79cd95f553d7f1ccafb092b88a0d7f90
  $s$fMonadUnliftIOResourceT_$s$fMonadUnliftIOResourceT_$cwithRunInIO ::
    ((forall a.
      Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
      -> GHC.Types.IO a)
     -> GHC.Types.IO b)
    -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO b
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U><S,U>,
     Inline: (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ @ b
                   (ds2 :: (forall a.
                            Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
                            -> GHC.Types.IO a)
                           -> GHC.Types.IO b)
                   (r :: GHC.IORef.IORef
                           Control.Monad.Trans.Resource.Internal.ReleaseMap)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (Control.Monad.Trans.Resource.Internal.$fMonadUnliftIOResourceT1
                         @ GHC.Types.IO
                         Control.Monad.IO.Unlift.$fMonadUnliftIOIO
                         r)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <Control.Monad.IO.Unlift.UnliftIO
                              (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)>_R)
                        s of ds3 { (#,#) ipv ipv1 ->
                 (ds2
                    ipv1
                      `cast`
                    (Control.Monad.IO.Unlift.N:UnliftIO[0]
                         <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_R))
                   `cast`
                 (GHC.Types.N:IO[0] <b>_R)
                   ipv })
                  `cast`
                (forall (b :: <*>_N).
                 Trans
                     (<(forall a.
                        Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
                        -> GHC.Types.IO a)
                       -> GHC.Types.IO b>_R
                      ->_R <GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                      ->_R Sym (GHC.Types.N:IO[0] <b>_R))
                     (<(forall a.
                        Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
                        -> GHC.Types.IO a)
                       -> GHC.Types.IO b>_R
                      ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                    <GHC.Types.IO>_R <b>_N))) -}
9d72b2fddb818bcd8919052935e0f1f3
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule3 Main.$trModule1) -}
3108ceeaf5a318be844de422b45de9d8
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule2) -}
e5875966b74dad2d29772660b8a75e33
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Main"#) -}
33bd129667974f0a0ba4a893af79107d
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule4) -}
d026be77cb9ced20e35a61514e0458aa
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
0df6a1f6b8f29639f4821bd02e2e3ad6
  $wrunPrimerTrimmingPE ::
    GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Lib.RunStats #)
  {- Arity: 5, Strictness: <S,1*U><L,U><L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Types.Bool)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Base.String)
                   (ww3 :: GHC.Base.String)
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Lib.$wcreateprimerbedmaps ww ww1 w of ds2 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) fmp rmp ->
                 (Control.Monad.Trans.Resource.runResourceT
                    @ GHC.Types.IO
                    @ Lib.RunStats
                    Control.Monad.IO.Unlift.$fMonadUnliftIOIO
                    (Data.Conduit.Internal.Pipe.runPipe
                       @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                       @ Lib.RunStats
                       Main.$s$fMonadIOResourceT_$s$fMonadResourceT1
                       (Data.Conduit.Internal.Pipe.injectLeftovers
                          @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                          @ ()
                          @ Data.Void.Void
                          @ ()
                          @ Lib.RunStats
                          @ Data.Void.Void
                          Main.$s$fMonadIOResourceT_$s$fMonadResourceT1
                          (Main.runPrimerTrimmingPE_goRight7
                             ((Data.Conduit.Combinators.sourceFile
                                 @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                                 @ ()
                                 Main.$s$fMonadResourceResourceT1
                                 ww2)
                                `cast`
                              (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                                   <()>_N
                                   <Data.ByteString.Internal.ByteString>_N
                                   <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                                   <()>_R)
                                @ ()
                                (Data.Conduit.Internal.Pipe.Done
                                   @ ()
                                   @ ()
                                   @ Data.ByteString.Internal.ByteString
                                   @ ()
                                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                                   @ ()))
                             (Main.runPrimerTrimmingPE_goRight6
                                Main.runPrimerTrimmingPE3
                                (Main.runPrimerTrimmingPE_goRight5
                                   Main.runPrimerTrimmingPE_go8
                                   (Main.runPrimerTrimmingPE_goRight4
                                      Main.runPrimerTrimmingPE_go6
                                        `cast`
                                      (Data.Conduit.Internal.Pipe.Pipe
                                         <[Lib.PairedAln]>_N
                                         <[Lib.PairedAln]>_N
                                         (Data.MonoTraversable.D:R:Element[][0] <Lib.PairedAln>_N)
                                         <()>_N
                                         <Control.Monad.Trans.Resource.Internal.ResourceT
                                            GHC.Types.IO>_N
                                         <()>_N)_R
                                      (Main.runPrimerTrimmingPE_goRight3
                                         (letrec {
                                            go13 :: Data.Conduit.Internal.Pipe.Pipe
                                                      Lib.PairedAln
                                                      Lib.PairedAln
                                                      Lib.PairedAln
                                                      ()
                                                      (Control.Monad.Trans.Resource.Internal.ResourceT
                                                         GHC.Types.IO)
                                                      ()
                                            = Data.Conduit.Internal.Pipe.NeedInput
                                                @ Lib.PairedAln
                                                @ Lib.PairedAln
                                                @ Lib.PairedAln
                                                @ ()
                                                @ (Control.Monad.Trans.Resource.Internal.ResourceT
                                                     GHC.Types.IO)
                                                @ ()
                                                go14
                                                (Data.Conduit.Internal.Pipe.Done
                                                   @ Lib.PairedAln
                                                   @ Lib.PairedAln
                                                   @ Lib.PairedAln
                                                   @ ()
                                                   @ (Control.Monad.Trans.Resource.Internal.ResourceT
                                                        GHC.Types.IO)
                                                   @ ())
                                            go14 :: Lib.PairedAln
                                                    -> Data.Conduit.Internal.Pipe.Pipe
                                                         Lib.PairedAln
                                                         Lib.PairedAln
                                                         Lib.PairedAln
                                                         ()
                                                         (Control.Monad.Trans.Resource.Internal.ResourceT
                                                            GHC.Types.IO)
                                                         ()
                                              {- Arity: 1,
                                                 Strictness: <L,1*U(1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,A,A,A,U,U,U,U,U,U,U,U,U),1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,A,A,A,U,U,U,U,U,U,U,U,U),1*U,1*U)> -}
                                            = \ (i1 :: Lib.PairedAln) ->
                                              Data.Conduit.Internal.Pipe.HaveOutput
                                                @ Lib.PairedAln
                                                @ Lib.PairedAln
                                                @ Lib.PairedAln
                                                @ ()
                                                @ (Control.Monad.Trans.Resource.Internal.ResourceT
                                                     GHC.Types.IO)
                                                @ ()
                                                go13
                                                (Lib.trimprimerPairsE fmp rmp i1)
                                          } in
                                          go13)
                                         (Main.runPrimerTrimmingPE_goRight2
                                            Main.runPrimerTrimmingPE_go4
                                            (Main.runPrimerTrimmingPE_goRight1
                                               Main.runPrimerTrimmingPE_go2
                                                 `cast`
                                               (Data.Conduit.Internal.Pipe.Pipe
                                                  <[Lib.AlignedRead]>_N
                                                  <[Lib.AlignedRead]>_N
                                                  (Data.MonoTraversable.D:R:Element[][0]
                                                       <Lib.AlignedRead>_N)
                                                  <()>_N
                                                  <Control.Monad.Trans.Resource.Internal.ResourceT
                                                     GHC.Types.IO>_N
                                                  <()>_N)_R
                                               (Main.runPrimerTrimmingPE_goRight
                                                  Main.runPrimerTrimmingPE_go
                                                  (Data.Conduit.Internal.Conduit.$fApplicativeZipSink2
                                                     @ (Control.Monad.Trans.Resource.Internal.ResourceT
                                                          GHC.Types.IO)
                                                     @ Lib.AlignedRead
                                                     @ (Lib.RunStats -> Lib.RunStats)
                                                     @ Lib.RunStats
                                                     Main.$s$fMonadIOResourceT_$s$fMonadResourceT1
                                                     (\ @ b2
                                                        (h :: (Lib.RunStats -> Lib.RunStats)
                                                              -> Data.Conduit.Internal.Pipe.Pipe
                                                                   Lib.AlignedRead
                                                                   Lib.AlignedRead
                                                                   Data.Void.Void
                                                                   ()
                                                                   (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                      GHC.Types.IO)
                                                                   b2)[OneShot] ->
                                                      let {
                                                        lvl34 :: Data.Conduit.Internal.Pipe.Pipe
                                                                   Lib.AlignedRead
                                                                   Lib.AlignedRead
                                                                   Data.Void.Void
                                                                   ()
                                                                   (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                      GHC.Types.IO)
                                                                   b2
                                                        = h (GHC.Base.breakpoint @ Lib.RunStats)
                                                      } in
                                                      (Lib.printAlnStreamToFile
                                                         @ (Control.Monad.Trans.Resource.Internal.ResourceT
                                                              GHC.Types.IO)
                                                         @ Data.Void.Void
                                                         Main.$s$fMonadResourceResourceT1
                                                         ww3)
                                                        `cast`
                                                      (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                                                           <Lib.AlignedRead>_N
                                                           <Data.Void.Void>_N
                                                           <Control.Monad.Trans.Resource.Internal.ResourceT
                                                              GHC.Types.IO>_N
                                                           <()>_R)
                                                        @ b2
                                                        (\ (a4 :: ()) -> lvl34))
                                                       `cast`
                                                     (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                                                               <Lib.AlignedRead>_N
                                                               <Data.Void.Void>_N
                                                               <Control.Monad.Trans.Resource.Internal.ResourceT
                                                                  GHC.Types.IO>_N
                                                               <Lib.RunStats -> Lib.RunStats>_R))
                                                     Lib.calcRunStats1
                                                       `cast`
                                                     (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                                                               <Lib.AlignedRead>_N
                                                               <Data.Void.Void>_N
                                                               <Control.Monad.Trans.Resource.Internal.ResourceT
                                                                  GHC.Types.IO>_N
                                                               <Lib.RunStats>_R))
                                                     @ Lib.RunStats
                                                     Main.runPrimerTrimmingPE2))))))))))))
                   `cast`
                 (GHC.Types.N:IO[0] <Lib.RunStats>_R)
                   ipv } }) -}
fb63c0b0343c4da42182ea20f1b47682
  $wrunPrimerTrimmingSE ::
    GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Lib.RunStats #)
  {- Arity: 5, Strictness: <S,1*U><L,U><L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Types.Bool)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Base.String)
                   (ww3 :: GHC.Base.String)
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Lib.$wcreateprimerbedmaps ww ww1 w of ds2 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) fmp rmp ->
                 (Control.Monad.Trans.Resource.runResourceT
                    @ GHC.Types.IO
                    @ Lib.RunStats
                    Control.Monad.IO.Unlift.$fMonadUnliftIOIO
                    (Data.Conduit.Internal.Pipe.runPipe
                       @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                       @ Lib.RunStats
                       Main.$s$fMonadIOResourceT_$s$fMonadResourceT1
                       (Data.Conduit.Internal.Pipe.injectLeftovers
                          @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                          @ ()
                          @ Data.Void.Void
                          @ ()
                          @ Lib.RunStats
                          @ Data.Void.Void
                          Main.$s$fMonadIOResourceT_$s$fMonadResourceT1
                          (Main.runPrimerTrimmingSE_goRight5
                             ((Data.Conduit.Combinators.sourceFile
                                 @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                                 @ ()
                                 Main.$s$fMonadResourceResourceT1
                                 ww2)
                                `cast`
                              (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                                   <()>_N
                                   <Data.ByteString.Internal.ByteString>_N
                                   <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                                   <()>_R)
                                @ ()
                                (Data.Conduit.Internal.Pipe.Done
                                   @ ()
                                   @ ()
                                   @ Data.ByteString.Internal.ByteString
                                   @ ()
                                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                                   @ ()))
                             (Main.runPrimerTrimmingSE_goRight4
                                Main.runPrimerTrimmingSE2
                                (Main.runPrimerTrimmingSE_goRight3
                                   Main.runPrimerTrimmingSE_go4
                                   (Main.runPrimerTrimmingSE_goRight2
                                      Main.runPrimerTrimmingSE_go2
                                        `cast`
                                      (Data.Conduit.Internal.Pipe.Pipe
                                         <[Lib.AlignedRead]>_N
                                         <[Lib.AlignedRead]>_N
                                         (Data.MonoTraversable.D:R:Element[][0] <Lib.AlignedRead>_N)
                                         <()>_N
                                         <Control.Monad.Trans.Resource.Internal.ResourceT
                                            GHC.Types.IO>_N
                                         <()>_N)_R
                                      (Main.runPrimerTrimmingSE_goRight1
                                         (letrec {
                                            go13 :: Data.Conduit.Internal.Pipe.Pipe
                                                      Lib.AlignedRead
                                                      Lib.AlignedRead
                                                      Lib.AlignedRead
                                                      ()
                                                      (Control.Monad.Trans.Resource.Internal.ResourceT
                                                         GHC.Types.IO)
                                                      ()
                                            = Data.Conduit.Internal.Pipe.NeedInput
                                                @ Lib.AlignedRead
                                                @ Lib.AlignedRead
                                                @ Lib.AlignedRead
                                                @ ()
                                                @ (Control.Monad.Trans.Resource.Internal.ResourceT
                                                     GHC.Types.IO)
                                                @ ()
                                                go14
                                                (Data.Conduit.Internal.Pipe.Done
                                                   @ Lib.AlignedRead
                                                   @ Lib.AlignedRead
                                                   @ Lib.AlignedRead
                                                   @ ()
                                                   @ (Control.Monad.Trans.Resource.Internal.ResourceT
                                                        GHC.Types.IO)
                                                   @ ())
                                            go14 :: Lib.AlignedRead
                                                    -> Data.Conduit.Internal.Pipe.Pipe
                                                         Lib.AlignedRead
                                                         Lib.AlignedRead
                                                         Lib.AlignedRead
                                                         ()
                                                         (Control.Monad.Trans.Resource.Internal.ResourceT
                                                            GHC.Types.IO)
                                                         ()
                                              {- Arity: 1,
                                                 Strictness: <L,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,A,A,A,U,U,U,U,U,U,U,U,U)> -}
                                            = \ (i1 :: Lib.AlignedRead) ->
                                              Data.Conduit.Internal.Pipe.HaveOutput
                                                @ Lib.AlignedRead
                                                @ Lib.AlignedRead
                                                @ Lib.AlignedRead
                                                @ ()
                                                @ (Control.Monad.Trans.Resource.Internal.ResourceT
                                                     GHC.Types.IO)
                                                @ ()
                                                go13
                                                (Lib.trimprimersE fmp rmp i1)
                                          } in
                                          go13)
                                         (Main.runPrimerTrimmingSE_goRight
                                            Main.runPrimerTrimmingSE_go
                                            (Data.Conduit.Internal.Conduit.$fApplicativeZipSink2
                                               @ (Control.Monad.Trans.Resource.Internal.ResourceT
                                                    GHC.Types.IO)
                                               @ Lib.AlignedRead
                                               @ (Lib.RunStats -> Lib.RunStats)
                                               @ Lib.RunStats
                                               Main.$s$fMonadIOResourceT_$s$fMonadResourceT1
                                               (\ @ b2
                                                  (h :: (Lib.RunStats -> Lib.RunStats)
                                                        -> Data.Conduit.Internal.Pipe.Pipe
                                                             Lib.AlignedRead
                                                             Lib.AlignedRead
                                                             Data.Void.Void
                                                             ()
                                                             (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                GHC.Types.IO)
                                                             b2)[OneShot] ->
                                                let {
                                                  lvl34 :: Data.Conduit.Internal.Pipe.Pipe
                                                             Lib.AlignedRead
                                                             Lib.AlignedRead
                                                             Data.Void.Void
                                                             ()
                                                             (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                GHC.Types.IO)
                                                             b2
                                                  = h (GHC.Base.breakpoint @ Lib.RunStats)
                                                } in
                                                (Lib.printAlnStreamToFile
                                                   @ (Control.Monad.Trans.Resource.Internal.ResourceT
                                                        GHC.Types.IO)
                                                   @ Data.Void.Void
                                                   Main.$s$fMonadResourceResourceT1
                                                   ww3)
                                                  `cast`
                                                (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                                                     <Lib.AlignedRead>_N
                                                     <Data.Void.Void>_N
                                                     <Control.Monad.Trans.Resource.Internal.ResourceT
                                                        GHC.Types.IO>_N
                                                     <()>_R)
                                                  @ b2
                                                  (\ (a4 :: ()) -> lvl34))
                                                 `cast`
                                               (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                                                         <Lib.AlignedRead>_N
                                                         <Data.Void.Void>_N
                                                         <Control.Monad.Trans.Resource.Internal.ResourceT
                                                            GHC.Types.IO>_N
                                                         <Lib.RunStats -> Lib.RunStats>_R))
                                               Lib.calcRunStats1
                                                 `cast`
                                               (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                                                         <Lib.AlignedRead>_N
                                                         <Data.Void.Void>_N
                                                         <Control.Monad.Trans.Resource.Internal.ResourceT
                                                            GHC.Types.IO>_N
                                                         <Lib.RunStats>_R))
                                               @ Lib.RunStats
                                               Main.runPrimerTrimmingPE2))))))))))
                   `cast`
                 (GHC.Types.N:IO[0] <Lib.RunStats>_R)
                   ipv } }) -}
d761c48c6ce4ccee32c7d4d7f4a46e76
  $wrunPrimerTrimmingSEpar ::
    GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <S,1*U><L,U><L,U><S,U>, Inline: [0] -}
7d0ad8935e6aada965959819b79d9024
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
a34b2b220ca9d133d93ddac21b587142
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Options.Applicative.Extra.customExecParser1
                        @ Lib.Opts
                        Options.Applicative.Builder.defaultPrefs
                        Main.main2
                        s of ds2 { (#,#) ipv ipv1 ->
                 case ipv1 of ww { Lib.Opts ww1 ww2 ww3 ww4 ww5 ->
                 case Main.$wrunPrimerTrimmingSEpar
                        ww1
                        ww3
                        ww4
                        ipv of ds3 { (#,#) ipv2 ipv3 ->
                 (# ipv2, GHC.Tuple.() #) } } }) -}
19c4fa6834e37f5ea1aca94401df6dd2
  main2 :: Options.Applicative.Types.ParserInfo Lib.Opts
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.ParserInfo
                   @ Lib.Opts
                   Main.main7
                   GHC.Types.True
                   Main.main5
                   Main.main3
                   (GHC.Base.Nothing @ Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                     `cast`
                   (Sym (Options.Applicative.Help.Chunk.N:Chunk[0]) <Text.PrettyPrint.ANSI.Leijen.Internal.Doc>_N)
                   Options.Applicative.Builder.info1
                   Options.Applicative.Types.Intersperse) -}
a06d83a8bc2baa3bd65d6b91f48fe514
  main3 ::
    Options.Applicative.Help.Chunk.Chunk
      Text.PrettyPrint.ANSI.Leijen.Internal.Doc
  {- Unfolding: (Options.Applicative.Help.Chunk.paragraph_go
                   (GHC.CString.unpackCString# Main.main4)) -}
7284cd722fcf0cab5d9636898e21a56c
  main4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("primerclip -- Swift Biosciences Accel-Amplicon targeted panel primer trimming tool v0.3.5"#) -}
6daced60f0e9d262873140556980c19c
  main5 ::
    Options.Applicative.Help.Chunk.Chunk
      Text.PrettyPrint.ANSI.Leijen.Internal.Doc
  {- Unfolding: (Options.Applicative.Help.Chunk.paragraph_go
                   (GHC.CString.unpackCString# Main.main6)) -}
1341dac73e31ae08789f828e3539a446
  main6 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Trim PCR primer sequences from aligned reads (multi-threaded test version)"#) -}
83375f09a882cbf0afc69a474d683839
  main7 :: Options.Applicative.Types.Parser Lib.Opts
  {- Unfolding: (Options.Applicative.Types.MultP
                   @ Lib.Opts
                   @ Lib.Opts
                   (Options.Applicative.Extra.helper @ Lib.Opts)
                   Lib.optargs) -}
480df695f302bc257d0efc80f4699692
  main8 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
88c38103a846078cb2e344ceb1dc6ca4
  runPrimerTrimmingPE :: Lib.Opts -> GHC.Types.IO Lib.RunStats
  {- Arity: 2, Strictness: <S(SLLLL),1*U(1*U,A,U,U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.runPrimerTrimmingPE1
                  `cast`
                (<Lib.Opts>_R ->_R Sym (GHC.Types.N:IO[0] <Lib.RunStats>_R)) -}
8a42c4407b1b25c074e9c29c5ee739a1
  runPrimerTrimmingPE1 ::
    Lib.Opts
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Lib.RunStats #)
  {- Arity: 2, Strictness: <S(SLLLL),1*U(1*U,A,U,U,U)><S,U>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.Opts) (w1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Lib.Opts ww1 ww2 ww3 ww4 ww5 ->
                 Main.$wrunPrimerTrimmingPE ww1 ww3 ww4 ww5 w1 }) -}
7df89a973db86bb400c5c86c531f4f4c
  runPrimerTrimmingPE2 ::
    (Lib.RunStats -> Lib.RunStats, Lib.RunStats)
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*U(1*C1(U),U)>m3,
     Unfolding: (\ (a4 :: (Lib.RunStats -> Lib.RunStats,
                           Lib.RunStats)) ->
                 Data.Conduit.Internal.Pipe.Done
                   @ Lib.AlignedRead
                   @ Lib.AlignedRead
                   @ Data.Void.Void
                   @ ()
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ Lib.RunStats
                   (case a4 of wild { (,) x ds2 -> x ds2 })) -}
92b42a9bd1728ea26e44f56786f11279
  runPrimerTrimmingPE3 ::
    Data.Conduit.Internal.Pipe.Pipe
      Data.ByteString.Internal.ByteString
      Data.ByteString.Internal.ByteString
      (Data.Either.Either
         Data.Conduit.Attoparsec.ParseError
         (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln]))
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
  {- Unfolding: (Data.Conduit.Attoparsec.$w$sconduitParserEither
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ [Lib.PairedAln]
                   Lib.parsePairedAlnsOrHdr1
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                             <Data.ByteString.Internal.ByteString>_N <[Lib.PairedAln]>_R))
                   @ ()
                   (Data.Conduit.Internal.Pipe.Done
                      @ Data.ByteString.Internal.ByteString
                      @ Data.ByteString.Internal.ByteString
                      @ (Data.Either.Either
                           Data.Conduit.Attoparsec.ParseError
                           (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln]))
                      @ ()
                      @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                      @ ())) -}
0f3359bad5cbd3acb1b4db72ae33ac84
  runPrimerTrimmingPE_go ::
    Data.Conduit.Internal.Pipe.Pipe
      Lib.AlignedRead
      Lib.AlignedRead
      Lib.AlignedRead
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
  {- Strictness: m2,
     Unfolding: (Data.Conduit.Internal.Pipe.NeedInput
                   @ Lib.AlignedRead
                   @ Lib.AlignedRead
                   @ Lib.AlignedRead
                   @ ()
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ ()
                   Main.runPrimerTrimmingPE_go1
                   (Data.Conduit.Internal.Pipe.Done
                      @ Lib.AlignedRead
                      @ Lib.AlignedRead
                      @ Lib.AlignedRead
                      @ ()
                      @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                      @ ())) -}
3ff8b771a30939f148d76a3e0288ca61
  runPrimerTrimmingPE_go1 ::
    Lib.AlignedRead
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Lib.AlignedRead
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         ()
  {- Arity: 1,
     Strictness: <S(S(LLLS)LLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)> -}
386ef2ef98e56baa0a8260c52b1b9541
  runPrimerTrimmingPE_go2 ::
    Data.Conduit.Internal.Pipe.Pipe
      [Lib.AlignedRead]
      [Lib.AlignedRead]
      (Data.MonoTraversable.Element [Lib.AlignedRead])
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Data.Conduit.Internal.Pipe.NeedInput
                   @ [Lib.AlignedRead]
                   @ [Lib.AlignedRead]
                   @ (Data.MonoTraversable.Element [Lib.AlignedRead])
                   @ ()
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ ()
                   Main.runPrimerTrimmingPE_go3
                   (Data.Conduit.Internal.Pipe.Done
                      @ [Lib.AlignedRead]
                      @ [Lib.AlignedRead]
                      @ Lib.AlignedRead
                      @ ()
                      @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                      @ ())
                     `cast`
                   (<()>_R
                    ->_R (Data.Conduit.Internal.Pipe.Pipe
                            <[Lib.AlignedRead]>_N
                            <[Lib.AlignedRead]>_N
                            (Sym (Data.MonoTraversable.D:R:Element[][0] <Lib.AlignedRead>_N))
                            <()>_N
                            <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                            <()>_N)_R)) -}
69d261c6bc639ac563be83664012b1d2
  runPrimerTrimmingPE_go3 ::
    [Lib.AlignedRead]
    -> Data.Conduit.Internal.Pipe.Pipe
         [Lib.AlignedRead]
         [Lib.AlignedRead]
         (Data.MonoTraversable.Element [Lib.AlignedRead])
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         ()
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
28a9ec6ad36e161cf204bfcf2f30a033
  runPrimerTrimmingPE_go4 ::
    Data.Conduit.Internal.Pipe.Pipe
      Lib.PairedAln
      Lib.PairedAln
      [Lib.AlignedRead]
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Data.Conduit.Internal.Pipe.NeedInput
                   @ Lib.PairedAln
                   @ Lib.PairedAln
                   @ [Lib.AlignedRead]
                   @ ()
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ ()
                   Main.runPrimerTrimmingPE_go5
                   (Data.Conduit.Internal.Pipe.Done
                      @ Lib.PairedAln
                      @ Lib.PairedAln
                      @ [Lib.AlignedRead]
                      @ ()
                      @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                      @ ())) -}
3ac7d75b61f2ffb38b731e2e3ce532f0
  runPrimerTrimmingPE_go5 ::
    Lib.PairedAln
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.PairedAln
         Lib.PairedAln
         [Lib.AlignedRead]
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(U,U,U,U)>m1 -}
30a48e81840ef639984779c18ba40521
  runPrimerTrimmingPE_go6 ::
    Data.Conduit.Internal.Pipe.Pipe
      [Lib.PairedAln]
      [Lib.PairedAln]
      (Data.MonoTraversable.Element [Lib.PairedAln])
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Data.Conduit.Internal.Pipe.NeedInput
                   @ [Lib.PairedAln]
                   @ [Lib.PairedAln]
                   @ (Data.MonoTraversable.Element [Lib.PairedAln])
                   @ ()
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ ()
                   Main.runPrimerTrimmingPE_go7
                   (Data.Conduit.Internal.Pipe.Done
                      @ [Lib.PairedAln]
                      @ [Lib.PairedAln]
                      @ Lib.PairedAln
                      @ ()
                      @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                      @ ())
                     `cast`
                   (<()>_R
                    ->_R (Data.Conduit.Internal.Pipe.Pipe
                            <[Lib.PairedAln]>_N
                            <[Lib.PairedAln]>_N
                            (Sym (Data.MonoTraversable.D:R:Element[][0] <Lib.PairedAln>_N))
                            <()>_N
                            <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                            <()>_N)_R)) -}
6405f0ce9d1686e6521e3cf02a706a99
  runPrimerTrimmingPE_go7 ::
    [Lib.PairedAln]
    -> Data.Conduit.Internal.Pipe.Pipe
         [Lib.PairedAln]
         [Lib.PairedAln]
         (Data.MonoTraversable.Element [Lib.PairedAln])
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         ()
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
44b209edf8eb9f4dd8b2c038e45245d9
  runPrimerTrimmingPE_go8 ::
    Data.Conduit.Internal.Pipe.Pipe
      (Data.Either.Either
         Data.Conduit.Attoparsec.ParseError
         (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln]))
      (Data.Either.Either
         Data.Conduit.Attoparsec.ParseError
         (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln]))
      [Lib.PairedAln]
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Data.Conduit.Internal.Pipe.NeedInput
                   @ (Data.Either.Either
                        Data.Conduit.Attoparsec.ParseError
                        (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln]))
                   @ (Data.Either.Either
                        Data.Conduit.Attoparsec.ParseError
                        (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln]))
                   @ [Lib.PairedAln]
                   @ ()
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ ()
                   Main.runPrimerTrimmingPE_go9
                   (Data.Conduit.Internal.Pipe.Done
                      @ (Data.Either.Either
                           Data.Conduit.Attoparsec.ParseError
                           (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln]))
                      @ (Data.Either.Either
                           Data.Conduit.Attoparsec.ParseError
                           (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln]))
                      @ [Lib.PairedAln]
                      @ ()
                      @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                      @ ())) -}
6debbbeb99e58af2dfe9ebbc6f0cbbd3
  runPrimerTrimmingPE_go9 ::
    Data.Either.Either
      Data.Conduit.Attoparsec.ParseError
      (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln])
    -> Data.Conduit.Internal.Pipe.Pipe
         (Data.Either.Either
            Data.Conduit.Attoparsec.ParseError
            (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln]))
         (Data.Either.Either
            Data.Conduit.Attoparsec.ParseError
            (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln]))
         [Lib.PairedAln]
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*U>m1 -}
96184ffc1644b56c0f3f55dea33bf317
  runPrimerTrimmingPE_goRight ::
    Data.Conduit.Internal.Pipe.Pipe
      Lib.AlignedRead
      Lib.AlignedRead
      Lib.AlignedRead
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U> -}
da94e396ab2e6b12cc5aca626c2edcff
  runPrimerTrimmingPE_goRight1 ::
    Data.Conduit.Internal.Pipe.Pipe
      [Lib.AlignedRead]
      [Lib.AlignedRead]
      Lib.AlignedRead
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
    -> Data.Conduit.Internal.Pipe.Pipe
         [Lib.AlignedRead]
         [Lib.AlignedRead]
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U> -}
d8bcdb960ab023c6338ef9ceb337649e
  runPrimerTrimmingPE_goRight2 ::
    Data.Conduit.Internal.Pipe.Pipe
      Lib.PairedAln
      Lib.PairedAln
      [Lib.AlignedRead]
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
    -> Data.Conduit.Internal.Pipe.Pipe
         [Lib.AlignedRead]
         [Lib.AlignedRead]
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.PairedAln
         Lib.PairedAln
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U> -}
db21b6f3c9b90be5522866fb265c39ab
  runPrimerTrimmingPE_goRight3 ::
    Data.Conduit.Internal.Pipe.Pipe
      Lib.PairedAln
      Lib.PairedAln
      Lib.PairedAln
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.PairedAln
         Lib.PairedAln
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.PairedAln
         Lib.PairedAln
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U> -}
0d1830e308129b6ecf3d9ade9cc0ed40
  runPrimerTrimmingPE_goRight4 ::
    Data.Conduit.Internal.Pipe.Pipe
      [Lib.PairedAln]
      [Lib.PairedAln]
      Lib.PairedAln
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.PairedAln
         Lib.PairedAln
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
    -> Data.Conduit.Internal.Pipe.Pipe
         [Lib.PairedAln]
         [Lib.PairedAln]
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U> -}
e98069e7f3766369e0bd528c3f1862f2
  runPrimerTrimmingPE_goRight5 ::
    Data.Conduit.Internal.Pipe.Pipe
      (Data.Either.Either
         Data.Conduit.Attoparsec.ParseError
         (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln]))
      (Data.Either.Either
         Data.Conduit.Attoparsec.ParseError
         (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln]))
      [Lib.PairedAln]
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
    -> Data.Conduit.Internal.Pipe.Pipe
         [Lib.PairedAln]
         [Lib.PairedAln]
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
    -> Data.Conduit.Internal.Pipe.Pipe
         (Data.Either.Either
            Data.Conduit.Attoparsec.ParseError
            (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln]))
         (Data.Either.Either
            Data.Conduit.Attoparsec.ParseError
            (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln]))
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U> -}
d747624aece7a606d4d109b6cdac856c
  runPrimerTrimmingPE_goRight6 ::
    Data.Conduit.Internal.Pipe.Pipe
      Data.ByteString.Internal.ByteString
      Data.ByteString.Internal.ByteString
      (Data.Either.Either
         Data.Conduit.Attoparsec.ParseError
         (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln]))
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
    -> Data.Conduit.Internal.Pipe.Pipe
         (Data.Either.Either
            Data.Conduit.Attoparsec.ParseError
            (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln]))
         (Data.Either.Either
            Data.Conduit.Attoparsec.ParseError
            (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln]))
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
    -> Data.Conduit.Internal.Pipe.Pipe
         Data.ByteString.Internal.ByteString
         Data.ByteString.Internal.ByteString
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U> -}
759877c3adc53ad7f731179577189e7c
  runPrimerTrimmingPE_goRight7 ::
    Data.Conduit.Internal.Pipe.Pipe
      ()
      ()
      Data.ByteString.Internal.ByteString
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
    -> Data.Conduit.Internal.Pipe.Pipe
         Data.ByteString.Internal.ByteString
         Data.ByteString.Internal.ByteString
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
    -> Data.Conduit.Internal.Pipe.Pipe
         ()
         ()
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U> -}
44bd5877e91fb9a4633e0923080be1bb
  runPrimerTrimmingSE :: Lib.Opts -> GHC.Types.IO Lib.RunStats
  {- Arity: 2, Strictness: <S(SLLLL),1*U(1*U,A,U,U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.runPrimerTrimmingSE1
                  `cast`
                (<Lib.Opts>_R ->_R Sym (GHC.Types.N:IO[0] <Lib.RunStats>_R)) -}
cc551d1b7f96681d87eebac2631762fd
  runPrimerTrimmingSE1 ::
    Lib.Opts
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Lib.RunStats #)
  {- Arity: 2, Strictness: <S(SLLLL),1*U(1*U,A,U,U,U)><S,U>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.Opts) (w1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Lib.Opts ww1 ww2 ww3 ww4 ww5 ->
                 Main.$wrunPrimerTrimmingSE ww1 ww3 ww4 ww5 w1 }) -}
a1c4af63f68eaa7263c433e5fc214614
  runPrimerTrimmingSE2 ::
    Data.Conduit.Internal.Pipe.Pipe
      Data.ByteString.Internal.ByteString
      Data.ByteString.Internal.ByteString
      (Data.Either.Either
         Data.Conduit.Attoparsec.ParseError
         (Data.Conduit.Attoparsec.PositionRange, [Lib.AlignedRead]))
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
  {- Unfolding: (Data.Conduit.Attoparsec.$w$sconduitParserEither
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ [Lib.AlignedRead]
                   Lib.parseSingleAlnsOrHdr1
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                             <Data.ByteString.Internal.ByteString>_N <[Lib.AlignedRead]>_R))
                   @ ()
                   (Data.Conduit.Internal.Pipe.Done
                      @ Data.ByteString.Internal.ByteString
                      @ Data.ByteString.Internal.ByteString
                      @ (Data.Either.Either
                           Data.Conduit.Attoparsec.ParseError
                           (Data.Conduit.Attoparsec.PositionRange, [Lib.AlignedRead]))
                      @ ()
                      @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                      @ ())) -}
60c8e9958f7201859bd950f1a1c013ac
  runPrimerTrimmingSE_go ::
    Data.Conduit.Internal.Pipe.Pipe
      Lib.AlignedRead
      Lib.AlignedRead
      Lib.AlignedRead
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
  {- Strictness: m2,
     Unfolding: (Data.Conduit.Internal.Pipe.NeedInput
                   @ Lib.AlignedRead
                   @ Lib.AlignedRead
                   @ Lib.AlignedRead
                   @ ()
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ ()
                   Main.runPrimerTrimmingSE_go1
                   (Data.Conduit.Internal.Pipe.Done
                      @ Lib.AlignedRead
                      @ Lib.AlignedRead
                      @ Lib.AlignedRead
                      @ ()
                      @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                      @ ())) -}
bf856f26c7a96a70acecfe31560625ac
  runPrimerTrimmingSE_go1 ::
    Lib.AlignedRead
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Lib.AlignedRead
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         ()
  {- Arity: 1,
     Strictness: <S(S(LLLS)LLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)> -}
3fcc8060ff1a79315c46249d62578f8c
  runPrimerTrimmingSE_go2 ::
    Data.Conduit.Internal.Pipe.Pipe
      [Lib.AlignedRead]
      [Lib.AlignedRead]
      (Data.MonoTraversable.Element [Lib.AlignedRead])
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Data.Conduit.Internal.Pipe.NeedInput
                   @ [Lib.AlignedRead]
                   @ [Lib.AlignedRead]
                   @ (Data.MonoTraversable.Element [Lib.AlignedRead])
                   @ ()
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ ()
                   Main.runPrimerTrimmingSE_go3
                   (Data.Conduit.Internal.Pipe.Done
                      @ [Lib.AlignedRead]
                      @ [Lib.AlignedRead]
                      @ Lib.AlignedRead
                      @ ()
                      @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                      @ ())
                     `cast`
                   (<()>_R
                    ->_R (Data.Conduit.Internal.Pipe.Pipe
                            <[Lib.AlignedRead]>_N
                            <[Lib.AlignedRead]>_N
                            (Sym (Data.MonoTraversable.D:R:Element[][0] <Lib.AlignedRead>_N))
                            <()>_N
                            <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                            <()>_N)_R)) -}
2b42b47639c165f878e5742e19e20574
  runPrimerTrimmingSE_go3 ::
    [Lib.AlignedRead]
    -> Data.Conduit.Internal.Pipe.Pipe
         [Lib.AlignedRead]
         [Lib.AlignedRead]
         (Data.MonoTraversable.Element [Lib.AlignedRead])
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         ()
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
7a22ab082142c7026074b36393db0820
  runPrimerTrimmingSE_go4 ::
    Data.Conduit.Internal.Pipe.Pipe
      (Data.Either.Either
         Data.Conduit.Attoparsec.ParseError
         (Data.Conduit.Attoparsec.PositionRange, [Lib.AlignedRead]))
      (Data.Either.Either
         Data.Conduit.Attoparsec.ParseError
         (Data.Conduit.Attoparsec.PositionRange, [Lib.AlignedRead]))
      [Lib.AlignedRead]
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Data.Conduit.Internal.Pipe.NeedInput
                   @ (Data.Either.Either
                        Data.Conduit.Attoparsec.ParseError
                        (Data.Conduit.Attoparsec.PositionRange, [Lib.AlignedRead]))
                   @ (Data.Either.Either
                        Data.Conduit.Attoparsec.ParseError
                        (Data.Conduit.Attoparsec.PositionRange, [Lib.AlignedRead]))
                   @ [Lib.AlignedRead]
                   @ ()
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ ()
                   Main.runPrimerTrimmingSE_go5
                   (Data.Conduit.Internal.Pipe.Done
                      @ (Data.Either.Either
                           Data.Conduit.Attoparsec.ParseError
                           (Data.Conduit.Attoparsec.PositionRange, [Lib.AlignedRead]))
                      @ (Data.Either.Either
                           Data.Conduit.Attoparsec.ParseError
                           (Data.Conduit.Attoparsec.PositionRange, [Lib.AlignedRead]))
                      @ [Lib.AlignedRead]
                      @ ()
                      @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                      @ ())) -}
34efeba0d3ef85a9509413b51517c9df
  runPrimerTrimmingSE_go5 ::
    Data.Either.Either
      Data.Conduit.Attoparsec.ParseError
      (Data.Conduit.Attoparsec.PositionRange, [Lib.AlignedRead])
    -> Data.Conduit.Internal.Pipe.Pipe
         (Data.Either.Either
            Data.Conduit.Attoparsec.ParseError
            (Data.Conduit.Attoparsec.PositionRange, [Lib.AlignedRead]))
         (Data.Either.Either
            Data.Conduit.Attoparsec.ParseError
            (Data.Conduit.Attoparsec.PositionRange, [Lib.AlignedRead]))
         [Lib.AlignedRead]
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*U>m1 -}
adf150701da460083f66fab361ec4a1a
  runPrimerTrimmingSE_goRight ::
    Data.Conduit.Internal.Pipe.Pipe
      Lib.AlignedRead
      Lib.AlignedRead
      Lib.AlignedRead
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U> -}
d2224ffd185725b629440e896b8d7276
  runPrimerTrimmingSE_goRight1 ::
    Data.Conduit.Internal.Pipe.Pipe
      Lib.AlignedRead
      Lib.AlignedRead
      Lib.AlignedRead
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U> -}
434b60704df1a085f360247408aa7578
  runPrimerTrimmingSE_goRight2 ::
    Data.Conduit.Internal.Pipe.Pipe
      [Lib.AlignedRead]
      [Lib.AlignedRead]
      Lib.AlignedRead
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
    -> Data.Conduit.Internal.Pipe.Pipe
         [Lib.AlignedRead]
         [Lib.AlignedRead]
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U> -}
691ecfc889403cb7266dbe99f4bdf226
  runPrimerTrimmingSE_goRight3 ::
    Data.Conduit.Internal.Pipe.Pipe
      (Data.Either.Either
         Data.Conduit.Attoparsec.ParseError
         (Data.Conduit.Attoparsec.PositionRange, [Lib.AlignedRead]))
      (Data.Either.Either
         Data.Conduit.Attoparsec.ParseError
         (Data.Conduit.Attoparsec.PositionRange, [Lib.AlignedRead]))
      [Lib.AlignedRead]
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
    -> Data.Conduit.Internal.Pipe.Pipe
         [Lib.AlignedRead]
         [Lib.AlignedRead]
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
    -> Data.Conduit.Internal.Pipe.Pipe
         (Data.Either.Either
            Data.Conduit.Attoparsec.ParseError
            (Data.Conduit.Attoparsec.PositionRange, [Lib.AlignedRead]))
         (Data.Either.Either
            Data.Conduit.Attoparsec.ParseError
            (Data.Conduit.Attoparsec.PositionRange, [Lib.AlignedRead]))
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U> -}
68965da6580c75b790696c36aeb3178d
  runPrimerTrimmingSE_goRight4 ::
    Data.Conduit.Internal.Pipe.Pipe
      Data.ByteString.Internal.ByteString
      Data.ByteString.Internal.ByteString
      (Data.Either.Either
         Data.Conduit.Attoparsec.ParseError
         (Data.Conduit.Attoparsec.PositionRange, [Lib.AlignedRead]))
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
    -> Data.Conduit.Internal.Pipe.Pipe
         (Data.Either.Either
            Data.Conduit.Attoparsec.ParseError
            (Data.Conduit.Attoparsec.PositionRange, [Lib.AlignedRead]))
         (Data.Either.Either
            Data.Conduit.Attoparsec.ParseError
            (Data.Conduit.Attoparsec.PositionRange, [Lib.AlignedRead]))
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
    -> Data.Conduit.Internal.Pipe.Pipe
         Data.ByteString.Internal.ByteString
         Data.ByteString.Internal.ByteString
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U> -}
eb32265837d9c213040ff2b1e7e6ff21
  runPrimerTrimmingSE_goRight5 ::
    Data.Conduit.Internal.Pipe.Pipe
      ()
      ()
      Data.ByteString.Internal.ByteString
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
    -> Data.Conduit.Internal.Pipe.Pipe
         Data.ByteString.Internal.ByteString
         Data.ByteString.Internal.ByteString
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
    -> Data.Conduit.Internal.Pipe.Pipe
         ()
         ()
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U> -}
bb2ec2d1911687070f2b6224c2123505
  runPrimerTrimmingSEpar :: Lib.Opts -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <S(SLLLL),1*U(1*U,A,U,U,A)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.runPrimerTrimmingSEpar1
                  `cast`
                (<Lib.Opts>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
9d64624b5460f28d452c3e0d7d377c89
  runPrimerTrimmingSEpar1 ::
    Lib.Opts
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <S(SLLLL),1*U(1*U,A,U,U,A)><S,U>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.Opts) (w1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Lib.Opts ww1 ww2 ww3 ww4 ww5 ->
                 Main.$wrunPrimerTrimmingSEpar ww1 ww3 ww4 w1 }) -}
"SPEC/Main $fApplicativeResourceT @ (ResourceT IO)" [orphan] forall (v :: GHC.Base.Applicative
                                                                            (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                               GHC.Types.IO))
  Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT @ (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                    GHC.Types.IO)
                                                               v
  = Main.$s$fApplicativeResourceT
"SPEC/Main $fApplicativeResourceT @ IO" [orphan] forall (v :: GHC.Base.Applicative
                                                                GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT @ GHC.Types.IO
                                                               v
  = Main.$s$fApplicativeResourceT1
"SPEC/Main $fApplicativeResourceT_$cpure @ IO" [orphan] forall ($dApplicative :: GHC.Base.Applicative
                                                                                   GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT_$cpure @ GHC.Types.IO
                                                                      $dApplicative
  = Main.$s$fApplicativeResourceT_$cpure1
"SPEC/Main $fFunctorResourceT @ (ResourceT IO)" [orphan] forall (v :: GHC.Base.Functor
                                                                        (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                           GHC.Types.IO))
  Control.Monad.Trans.Resource.Internal.$fFunctorResourceT @ (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                GHC.Types.IO)
                                                           v
  = Main.$s$fApplicativeResourceT_$s$fFunctorResourceT
"SPEC/Main $fFunctorResourceT @ IO" [orphan] forall (v :: GHC.Base.Functor
                                                            GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fFunctorResourceT @ GHC.Types.IO
                                                           v
  = Main.$s$fApplicativeResourceT_$s$fFunctorResourceT1
"SPEC/Main $fMonadIOResourceT @ (ResourceT IO)" [orphan] forall (v :: Control.Monad.IO.Class.MonadIO
                                                                        (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                           GHC.Types.IO))
  Control.Monad.Trans.Resource.Internal.$fMonadIOResourceT @ (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                GHC.Types.IO)
                                                           v
  = Main.$s$fMonadIOResourceT
"SPEC/Main $fMonadIOResourceT @ IO" [orphan] forall (v :: Control.Monad.IO.Class.MonadIO
                                                            GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadIOResourceT @ GHC.Types.IO
                                                           v
  = Main.$s$fMonadIOResourceT1
"SPEC/Main $fMonadIOResourceT_$cliftIO @ (ResourceT IO)" [orphan] forall ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                         (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                                            GHC.Types.IO))
  Control.Monad.Trans.Resource.Internal.$fMonadIOResourceT_$cliftIO @ (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                         GHC.Types.IO)
                                                                    $dMonadIO
  = Main.$s$fMonadIOResourceT_$cliftIO
"SPEC/Main $fMonadResourceResourceT @ (ResourceT IO)" [orphan] forall (v :: Control.Monad.IO.Class.MonadIO
                                                                              (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                                 GHC.Types.IO))
  Control.Monad.Trans.Resource.Internal.$fMonadResourceResourceT @ (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                      GHC.Types.IO)
                                                                 v
  = Main.$s$fMonadResourceResourceT
"SPEC/Main $fMonadResourceResourceT @ IO" [orphan] forall (v :: Control.Monad.IO.Class.MonadIO
                                                                  GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadResourceResourceT @ GHC.Types.IO
                                                                 v
  = Main.$s$fMonadResourceResourceT1
"SPEC/Main $fMonadResourceResourceT1 @ IO" [orphan] forall ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                           GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadResourceResourceT1 @ GHC.Types.IO
                                                                  $dMonadIO
  = Main.$s$fMonadResourceResourceT3
"SPEC/Main $fMonadResourceT @ (ResourceT IO)" [orphan] forall (v :: GHC.Base.Monad
                                                                      (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                         GHC.Types.IO))
  Control.Monad.Trans.Resource.Internal.$fMonadResourceT @ (Control.Monad.Trans.Resource.Internal.ResourceT
                                                              GHC.Types.IO)
                                                         v
  = Main.$s$fMonadIOResourceT_$s$fMonadResourceT
"SPEC/Main $fMonadResourceT @ IO" [orphan] forall (v :: GHC.Base.Monad
                                                          GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadResourceT @ GHC.Types.IO
                                                         v
  = Main.$s$fMonadIOResourceT_$s$fMonadResourceT1
"SPEC/Main $fMonadResourceT_$c>> @ (ResourceT IO)" [orphan] forall ($dMonad :: GHC.Base.Monad
                                                                                 (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                                    GHC.Types.IO))
  Control.Monad.Trans.Resource.Internal.$fMonadResourceT_$c>> @ (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                   GHC.Types.IO)
                                                              $dMonad
  = Main.$s$fMonadIOResourceT_$s$fMonadResourceT_$c>>
"SPEC/Main $fMonadResourceT_$c>> @ IO" [orphan] forall ($dMonad :: GHC.Base.Monad
                                                                     GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadResourceT_$c>> @ GHC.Types.IO
                                                              $dMonad
  = Main.$s$fMonadIOResourceT_$s$fMonadResourceT_$c>>1
"SPEC/Main $fMonadResourceT_$creturn @ (ResourceT IO)" [orphan] forall ($dMonad :: GHC.Base.Monad
                                                                                     (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                                        GHC.Types.IO))
  Control.Monad.Trans.Resource.Internal.$fMonadResourceT_$creturn @ (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                       GHC.Types.IO)
                                                                  $dMonad
  = Main.$s$fMonadResourceT_$creturn
"SPEC/Main $fMonadUnliftIOResourceT @ IO" [orphan] forall (v :: Control.Monad.IO.Unlift.MonadUnliftIO
                                                                  GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadUnliftIOResourceT @ GHC.Types.IO
                                                                 v
  = Main.$s$fMonadUnliftIOResourceT
"SPEC/Main $fMonadUnliftIOResourceT_$cwithRunInIO @ IO" [orphan] forall ($dMonadUnliftIO :: Control.Monad.IO.Unlift.MonadUnliftIO
                                                                                              GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadUnliftIOResourceT_$cwithRunInIO @ GHC.Types.IO
                                                                               $dMonadUnliftIO
  = Main.$s$fMonadUnliftIOResourceT_$s$fMonadUnliftIOResourceT_$cwithRunInIO
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False



==================== FINAL INTERFACE ====================
2018-08-24 21:01:45.051463 UTC

interface primerclip-0.3.2.0-4vTju4b4oawFuFWabKwXDg:Lib [family instance module] 8022
  interface hash: 72e6ca3a7ed6faaa1f30fffc47bfdec6
  ABI hash: d6c3349b79a003ab2b811d3feef263dc
  export-list hash: cdbdc0bc1ce33e7433d96336185e29be
  orphan hash: 745484afa5fb85083adb80662f450421
  flag hash: ec690ec25aa83b76b88f0ff85134ee97
  sig of: Nothing
  used TH splices: False
  where
exports:
  Lib.addprimerints
  Lib.addprimerintsPairedAln
  Lib.addtrimtag
  Lib.adjustcrds
  Lib.alignmentsetparser
  Lib.allPairedAln
  Lib.alnparser
  Lib.alnsToPairedAln
  Lib.anyPairedAln
  Lib.anyPrimerIntAln
  Lib.bedPEparser
  Lib.bedmaplookup
  Lib.bedpeToFbed
  Lib.bedpeToRbed
  Lib.bedrecparser
  Lib.boolZeroLengthCigar
  Lib.calcMappedCount
  Lib.calcNotMappedPct
  Lib.calcRunStats
  Lib.calcTrimdToZero
  Lib.calcTrimmedPct
  Lib.calculateTrimStats
  Lib.checkChromNameMatchStatus
  Lib.checkCigarSeqlen
  Lib.checkInsertSize
  Lib.checkcigseqlen
  Lib.checkcigseqlen2
  Lib.checknonzeroCigMatch
  Lib.checkpos
  Lib.cigarP
  Lib.cigseqlenHdrPassTest
  Lib.clearNamesAndPositions
  Lib.clearNonRealCigar
  Lib.clearR1primNextFields
  Lib.clearR2primNextFields
  Lib.collectPrimIntAlns
  Lib.contractcigar
  Lib.countDs
  Lib.createprimerbedmaps
  Lib.defaultAlignment
  Lib.defaultBEDPE
  Lib.defaultBed
  Lib.defaultMasterRec
  Lib.defaultMidFam
  Lib.defaultPairedAln
  Lib.expandcigar
  Lib.expandcigar2
  Lib.exrights
  Lib.exrights2
  Lib.filtpadassoc
  Lib.filtpadcmap
  Lib.findByQname
  Lib.flattenPairedAln
  Lib.flipClrBit
  Lib.flipSetBit
  Lib.flipTstBit
  Lib.genLogFilePath
  Lib.getAlignedLength
  Lib.getFPrimerBEDfromMaster
  Lib.getMasterFile
  Lib.getNclips
  Lib.getNonHeaderAlns
  Lib.getRPrimerBEDfromMaster
  Lib.getRight
  Lib.getRightM
  Lib.getTargetBEDfromMaster
  Lib.getTrimdcigCoordDiff
  Lib.getcigseqdiff
  Lib.getcol
  Lib.getlengths
  Lib.hdralnparser
  Lib.hdralnparserEOL
  Lib.hdralnparserEOL'
  Lib.hdrchromp
  Lib.headsafeAln
  Lib.intgr2int
  Lib.itypep
  Lib.ix
  Lib.justbedmaps
  Lib.justchrmaps
  Lib.mIDp
  Lib.makeMRNMexplicit
  Lib.makeTrimmedUpdates
  Lib.makebedmap
  Lib.makechrbedmap
  Lib.makeprimertups
  Lib.mapcig
  Lib.mapfst
  Lib.masterRecToTargetBED
  Lib.masterToFPrimerBED
  Lib.masterToRPrimerBED
  Lib.masterToTargetBED
  Lib.masterparser
  Lib.noclip
  Lib.nohardclip
  Lib.nomapCigToNomapRname
  Lib.nopadding
  Lib.optargs
  Lib.optasp
  Lib.optfieldp
  Lib.optfieldpEOL
  Lib.optfieldsp
  Lib.optfieldsp2
  Lib.optfieldsp3
  Lib.optfieldstotalp
  Lib.optidp
  Lib.optnmp
  Lib.optxsp
  Lib.pairedAlnToTuple
  Lib.pairedalnparser
  Lib.parseAln
  Lib.parseAlns
  Lib.parseBED
  Lib.parseBEDPE
  Lib.parseCigar
  Lib.parsePairedAlns
  Lib.parsePairedAlns'
  Lib.parsePairedAlnsFromSAM
  Lib.parsePairedAlnsOrHdr
  Lib.parseReadsetsFromSAM
  Lib.parsechkBED
  Lib.parsechkMaster
  Lib.parsechkSAM
  Lib.parsedbl
  Lib.parseint
  Lib.parsemIDstring
  Lib.parsesignedint
  Lib.primaryR1filter
  Lib.primaryR2filter
  Lib.printAlignment
  Lib.printAlignmentOrHdr
  Lib.printAlnStreamToFile
  Lib.rdint
  Lib.read1filter
  Lib.readBEDPE
  Lib.readSAM
  Lib.readSAMFlag
  Lib.readSAMnameset
  Lib.readSAMtoPairedAlns
  Lib.readint
  Lib.removeDs
  Lib.removeNonPrimaryZeroLengthAlignments
  Lib.rightOrDefault
  Lib.rightOrDefaultPaird
  Lib.safegetheader
  Lib.safemapcig
  Lib.samhdrparser
  Lib.samhdrparserEOL
  Lib.secalnp
  Lib.seqp
  Lib.setMapdProperPairBit
  Lib.setMateRname
  Lib.setProperInsertSizeRange
  Lib.setProperPairMapFlagBit
  Lib.setZeroLengthAlnFlag
  Lib.setZeroLengthPairFlag
  Lib.setpintflag
  Lib.shiftcrds
  Lib.showChrom
  Lib.showcigar
  Lib.skipcolon
  Lib.spaces
  Lib.starcigarP
  Lib.sumMatches
  Lib.sumRefMatches
  Lib.sumSeqMatches
  Lib.sumSoftClipCigOps
  Lib.taketrim
  Lib.toBin
  Lib.toBinInt
  Lib.trimPairedAlns
  Lib.trimalignment
  Lib.trimboth
  Lib.trimfwd
  Lib.trimprimerPairsE
  Lib.trimprimersE
  Lib.trimrem
  Lib.trimrev
  Lib.txtfieldp
  Lib.uchrparser
  Lib.updateCigB
  Lib.updateCigF
  Lib.updateCigR
  Lib.updatePairedAlnTrimdFields
  Lib.updateR1nextfields
  Lib.updateR2nextfields
  Lib.updateTrimdAlnFields
  Lib.updateTrimdPairFields
  Lib.updateZeroTrimdPairFields
  Lib.updateZeroTrimdPairFlags
  Lib.validateTrimdPairAlnStart
  Lib.writeRunStats
  Lib.AlignedRead{Lib.AlignedRead basequal cigar cigmap endpos fint flag headerstrings isheader mapped mapqual mid optfields paired pintflag pnext pos qname refseq rint rname rnext strand tbed tlen trimdToZeroLength trimdcigar trimdcigmap trimdendpos trimdflag trimdpos xmid}
  Lib.Alignments
  Lib.BED
  Lib.BEDPE{Lib.BEDPE bedpename chr1 chr2 end1 end2 start1 start2}
  Lib.BedMap
  Lib.BedRecord{Lib.BedRecord bedchr bedend bedname bedstart}
  Lib.CMap
  Lib.ChromNameFormat{Lib.GRC Lib.UCSC}
  Lib.CigarMap
  Lib.Header
  Lib.MasterRecord{Lib.MasterRecord mampname mchrom mforend mforname mforseq mforstart mrevend mrevname mrevseq mrevstart mtargetend mtargetstart}
  Lib.MidFamily{Lib.MidFamily alncount alnend alns alnstart chrom midseq negtxposdcnt postxposdcnt targetbed txposedcount}
  Lib.Opts{Lib.Opts bedpeformat incoordsfile insamfile outfilename}
  Lib.PairedAln{Lib.PairedAln r1prim r1secs r2prim r2secs}
  Lib.RunStats{Lib.RunStats alnsMapped alnsTotal alnsTrimd alnsTrimdToZero mappedPct trimmedPct}
  Lib.SAM
  Lib.SAMFlag{Lib.SAMFlag dupRead failedQC fstInPair intflag mateMapped mateNeg notMapped notPrimary pairNotMapped pairedRead queryPlus sndInPair}
  Lib.UChr{Lib.C1 Lib.C10 Lib.C11 Lib.C12 Lib.C13 Lib.C14 Lib.C15 Lib.C16 Lib.C17 Lib.C18 Lib.C19 Lib.C2 Lib.C20 Lib.C21 Lib.C22 Lib.C3 Lib.C4 Lib.C5 Lib.C6 Lib.C7 Lib.C8 Lib.C9 Lib.CMT Lib.CX Lib.CY Lib.Chr1 Lib.Chr10 Lib.Chr11 Lib.Chr12 Lib.Chr13 Lib.Chr14 Lib.Chr15 Lib.Chr16 Lib.Chr17 Lib.Chr18 Lib.Chr19 Lib.Chr2 Lib.Chr20 Lib.Chr21 Lib.Chr22 Lib.Chr3 Lib.Chr4 Lib.Chr5 Lib.Chr6 Lib.Chr7 Lib.Chr8 Lib.Chr9 Lib.ChrM Lib.ChrX Lib.ChrY Lib.GL000191P1 Lib.GL000192P1 Lib.GL000193P1 Lib.GL000194P1 Lib.GL000195P1 Lib.GL000196P1 Lib.GL000197P1 Lib.GL000198P1 Lib.GL000199P1 Lib.GL000200P1 Lib.GL000201P1 Lib.GL000202P1 Lib.GL000203P1 Lib.GL000204P1 Lib.GL000205P1 Lib.GL000206P1 Lib.GL000207P1 Lib.GL000208P1 Lib.GL000209P1 Lib.GL000210P1 Lib.GL000211P1 Lib.GL000212P1 Lib.GL000213P1 Lib.GL000214P1 Lib.GL000215P1 Lib.GL000216P1 Lib.GL000217P1 Lib.GL000218P1 Lib.GL000219P1 Lib.GL000220P1 Lib.GL000221P1 Lib.GL000222P1 Lib.GL000223P1 Lib.GL000224P1 Lib.GL000225P1 Lib.GL000226P1 Lib.GL000227P1 Lib.GL000228P1 Lib.GL000229P1 Lib.GL000230P1 Lib.GL000231P1 Lib.GL000232P1 Lib.GL000233P1 Lib.GL000234P1 Lib.GL000235P1 Lib.GL000236P1 Lib.GL000237P1 Lib.GL000238P1 Lib.GL000239P1 Lib.GL000240P1 Lib.GL000241P1 Lib.GL000242P1 Lib.GL000243P1 Lib.GL000244P1 Lib.GL000245P1 Lib.GL000246P1 Lib.GL000247P1 Lib.GL000248P1 Lib.GL000249P1 Lib.NC_007605 Lib.NONE}
module dependencies:
package dependencies: QuickCheck-2.10.1 ansi-terminal-0.8.0.2
                      ansi-wl-pprint-0.6.8.2 array-0.5.2.0 attoparsec-0.13.2.2
                      base-4.10.1.0 binary-0.8.5.1 bytestring-0.10.8.2 colour-2.3.4
                      conduit-1.3.0 conduit-extra-1.3.0 containers-0.5.10.2
                      deepseq-1.4.3.0 digits-0.3.1 directory-1.3.0.2 exceptions-0.8.3
                      filepath-1.4.1.2 ghc-boot-th-8.2.2 ghc-prim-0.5.1.1
                      hashable-1.2.7.0 integer-gmp-1.0.1.0 integer-logarithms-1.0.2.1
                      mono-traversable-1.0.8.1 mtl-2.2.2 optparse-applicative-0.14.2.0
                      pretty-1.1.3.3 primitive-0.6.3.0 process-1.6.1.0 random-1.1
                      resourcet-1.2.0 scientific-0.3.5.2 split-0.2.3.3 stm-2.4.5.0
                      template-haskell-2.12.0.0 text-1.2.3.0 tf-random-0.5 time-1.8.0.2
                      transformers-0.5.2.0 unix-2.7.2.2 unliftio-core-0.1.1.0
                      unordered-containers-0.2.9.0 vector-0.12.0.1
                      vector-algorithms-0.7.0.1
orphans: colour-2.3.4:Data.Colour
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         vector-0.12.0.1:Data.Vector.Unboxed
         hashable-1.2.7.0:Data.Hashable.Generic
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         text-1.2.3.0:Data.Text.Lazy text-1.2.3.0:Data.Text
         binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.0:Data.Text.Show stm-2.4.5.0:Control.Monad.STM
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         transformers-0.5.2.0:Control.Monad.Trans.Error
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian base-4.10.1.0:GHC.Float
         base-4.10.1.0:GHC.Base
family instance modules: attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.10.1.0:Control.Applicative base-4.10.1.0:Data.Complex
                         base-4.10.1.0:Data.Either base-4.10.1.0:Data.Functor.Compose
                         base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity
                         base-4.10.1.0:Data.Functor.Product base-4.10.1.0:Data.Functor.Sum
                         base-4.10.1.0:Data.List.NonEmpty base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Semigroup base-4.10.1.0:Data.Type.Equality
                         base-4.10.1.0:Data.Version base-4.10.1.0:Data.Void
                         base-4.10.1.0:GHC.Exts base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats
                         conduit-1.3.0:Data.Conduit.Internal.Conduit
                         conduit-1.3.0:Data.Conduit.Internal.Pipe
                         containers-0.5.10.2:Data.IntMap.Internal
                         containers-0.5.10.2:Data.IntSet.Internal
                         containers-0.5.10.2:Data.Map.Internal
                         containers-0.5.10.2:Data.Sequence.Internal
                         containers-0.5.10.2:Data.Set.Internal containers-0.5.10.2:Data.Tree
                         ghc-boot-th-8.2.2:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.2.2:GHC.LanguageExtensions.Type
                         mono-traversable-1.0.8.1:Data.MonoTraversable
                         mono-traversable-1.0.8.1:Data.NonNull
                         mono-traversable-1.0.8.1:Data.Sequences
                         pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         resourcet-1.2.0:Control.Monad.Trans.Resource.Internal
                         template-haskell-2.12.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.0:Data.Text text-1.2.3.0:Data.Text.Lazy
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
import  -/  attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8 75eb155dd50974f74df242dc5b5f3c20
import  -/  attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Internal b41e9045dc19fd5d4a09f150cf85448c
import  -/  attoparsec-0.13.2.2:Data.Attoparsec.Combinator a2926f2a8e89c11f606f9f2788d9a9cb
import  -/  base-4.10.1.0:Control.Applicative 99577a9c463ffe4790a1d37547a345bd
import  -/  base-4.10.1.0:Control.Exception c134ea327d158f2eebf26e12a1d4ad47
import  -/  base-4.10.1.0:Control.Monad ebed2e8e7444944e0c1d827c6faf40a4
import  -/  base-4.10.1.0:Control.Monad.IO.Class 9d78cd0f73a837f3c00753bd212b9f2c
import  -/  base-4.10.1.0:Data.Bits e0790a03e1e51e2d053ee3f563937f85
import  -/  base-4.10.1.0:Data.Char fe4e3458190deeac19969ce15e33bed9
import  -/  base-4.10.1.0:Data.Either d7dae5d9bf298dee616e465c14b5d60e
import  -/  base-4.10.1.0:Data.Foldable 9ed87455d68e87ff2b5b8725eae9897e
import  -/  base-4.10.1.0:Data.Functor 2ffda4f936b8f474394d93205750aff3
import  -/  base-4.10.1.0:Data.List 4ab7fa2a1b87502b23af891a384f0506
import  -/  base-4.10.1.0:Data.Maybe 07738c5485acb328136bb15596f8b845
import  -/  base-4.10.1.0:Data.Monoid c0108b166e27f747671c7fe4ffb11019
import  -/  base-4.10.1.0:Data.OldList 555420b092ca8cf0a8f9666bc0e07dcf
import  -/  base-4.10.1.0:Data.Ord a6789a2a9217f3ca764324b27739797e
import  -/  base-4.10.1.0:Data.Semigroup 92914a5d9e5176805d2364209875f6ed
import  -/  base-4.10.1.0:Data.Tuple 8fa1305aa5032ea35e2a54fa5f1e78f9
import  -/  base-4.10.1.0:GHC.Base 782fd99b5e36f3698a26179a49afca64
import  -/  base-4.10.1.0:GHC.Enum 5a1ba50c23f92f669e01f8955f202337
import  -/  base-4.10.1.0:GHC.Err 514b3a24b22e9d7d731c2d0d02d10842
import  -/  base-4.10.1.0:GHC.Generics c2a8006cab1f0055555a6c72607a574b
import  -/  base-4.10.1.0:GHC.IO e261d8b68ccf81a359626fa520b57d1d
import  -/  base-4.10.1.0:GHC.List e3060fbeb44ce0038e6b4dedf2dd9cf1
import  -/  base-4.10.1.0:GHC.Num 6e1dc5d36d99a802edb39b92bb1923b8
import  -/  base-4.10.1.0:GHC.Read 0abfbe8a9b13202e313efc3bc2f2a3e6
import  -/  base-4.10.1.0:GHC.Real 3c62834bc25e762eabc44149c4cc142d
import  -/  base-4.10.1.0:GHC.Show 0a8ce2b5e533d1c2cfb7954e6736be45
import  -/  base-4.10.1.0:Prelude 31945b7d0084063347fc52506d3a4020
import  -/  base-4.10.1.0:System.IO 6e5bb580370d8d71dc5888f723cea4b4
import  -/  base-4.10.1.0:Text.ParserCombinators.ReadPrec 043a8dc96e82690dac5a09fb8e44e9bc
import  -/  base-4.10.1.0:Text.Read 9e862e012b3c71e83cb56fb456188f44
import  -/  base-4.10.1.0:Text.Read.Lex aff0420c14a3e1f3bb0ee26cd0646682
import  -/  bytestring-0.10.8.2:Data.ByteString 85ba2d590aae1a6d189ceb9a0f58e145
import  -/  bytestring-0.10.8.2:Data.ByteString.Char8 ad3bf7657730adeac35cbb427299ea44
import  -/  bytestring-0.10.8.2:Data.ByteString.Internal e154f5ecf6a3cd0a27df93e86ed481d7
import  -/  conduit-1.3.0:Conduit 9ca771118110a6d629536df1c70cfb0c
import  -/  conduit-1.3.0:Data.Conduit.Combinators 879a6b83242087f07896e92d4cc7d0e9
import  -/  conduit-1.3.0:Data.Conduit.Combinators.Unqualified bb15af616225f302b124833678fb569b
import  -/  conduit-1.3.0:Data.Conduit.Internal.Conduit 2e849a9a0bf7ebe9e17389aa7226446c
import  -/  conduit-extra-1.3.0:Data.Conduit.Attoparsec b4907557e083a7d91d1ea01e01aba9c2
import  -/  containers-0.5.10.2:Data.IntMap.Internal 924624ced78a2cd70ed8353c7a6b8af9
import  -/  containers-0.5.10.2:Data.IntMap.Strict 7892d40daae1f0118150f998d9c28567
import  -/  containers-0.5.10.2:Data.Map.Internal 33ddbf5aa8c0f2ab26fb6dc5be1b1f4c
import  -/  containers-0.5.10.2:Data.Map.Strict 194f5b0a9785a91a43562790aa6787fc
import  -/  containers-0.5.10.2:Data.Map.Strict.Internal 63726a19357ba6ce3637c9bcf7d38b1e
import  -/  containers-0.5.10.2:Data.Set e0f44b836a00cf82340abfec45686444
import  -/  containers-0.5.10.2:Data.Set.Internal b207250e4d0053f17172bfafbcd5c82f
import  -/  digits-0.3.1:Data.Digits 8f964f24c076b1099e4c6ff0295f6910
import  -/  ghc-prim-0.5.1.1:GHC.Classes 93e2660065dce9329577e83d76d8f0d4
import  -/  ghc-prim-0.5.1.1:GHC.Types b1fd0716441595db508c1a74387bf394
import  -/  integer-gmp-1.0.1.0:GHC.Integer.Type 5fa81108482c33b62ec3ac7464eece96
import  -/  optparse-applicative-0.14.2.0:Options.Applicative 93a6ca444e605eb4e5fada3ed41aa455
import  -/  optparse-applicative-0.14.2.0:Options.Applicative.Builder 9b4b35d95a3739ae48e6b42cbe90c8ed
import  -/  optparse-applicative-0.14.2.0:Options.Applicative.Types a7931747d5b2cb3c7d4ffdf50f620d39
import  -/  process-1.6.1.0:System.Process a8c75295bfaf5f54dccd3871224e84a9
import  -/  resourcet-1.2.0:Control.Monad.Trans.Resource.Internal e6300240cc2a919676aa0b3ac9042d06
import  -/  vector-0.12.0.1:Data.Vector 85d00fd11fb6ff56955506f14ad48bd6
72f14e6fcdc92b42047548db1c03b13e
  $fBoundedChromNameFormat :: GHC.Enum.Bounded Lib.ChromNameFormat
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:. @ Lib.ChromNameFormat Lib.GRC Lib.UCSC -}
3fd0d1813507d3804368ee979449d71a
  $fBoundedUChr :: GHC.Enum.Bounded Lib.UChr
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:. @ Lib.UChr Lib.C1 Lib.NONE -}
72f14e6fcdc92b42047548db1c03b13e
  $fEnumChromNameFormat :: GHC.Enum.Enum Lib.ChromNameFormat
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.ChromNameFormat
                  Lib.$fEnumChromNameFormat_$csucc
                  Lib.$fEnumChromNameFormat_$cpred
                  Lib.$fEnumChromNameFormat_$ctoEnum
                  Lib.$fEnumChromNameFormat_$cfromEnum
                  Lib.$fEnumChromNameFormat_$cenumFrom
                  Lib.$fEnumChromNameFormat_$cenumFromThen
                  Lib.$fEnumChromNameFormat_$cenumFromTo
                  Lib.$fEnumChromNameFormat_$cenumFromThenTo -}
72f14e6fcdc92b42047548db1c03b13e
  $fEnumChromNameFormat1 :: [Lib.ChromNameFormat]
  {- Unfolding: (Lib.$fEnumChromNameFormat_go2 1#) -}
72f14e6fcdc92b42047548db1c03b13e
  $fEnumChromNameFormat2 :: [Lib.ChromNameFormat]
  {- Unfolding: (Lib.$fEnumChromNameFormat_go2 0#) -}
72f14e6fcdc92b42047548db1c03b13e
  $fEnumChromNameFormat3 :: Lib.ChromNameFormat
  {- Strictness: x -}
72f14e6fcdc92b42047548db1c03b13e
  $fEnumChromNameFormat4 :: Lib.ChromNameFormat
  {- Strictness: x -}
72f14e6fcdc92b42047548db1c03b13e
  $fEnumChromNameFormat_$cenumFrom ::
    Lib.ChromNameFormat -> [Lib.ChromNameFormat]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (a :: Lib.ChromNameFormat) ->
                 case a of wild {
                   Lib.GRC -> Lib.$fEnumChromNameFormat2
                   Lib.UCSC -> Lib.$fEnumChromNameFormat1 }) -}
72f14e6fcdc92b42047548db1c03b13e
  $fEnumChromNameFormat_$cenumFromThen ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat -> [Lib.ChromNameFormat]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
72f14e6fcdc92b42047548db1c03b13e
  $fEnumChromNameFormat_$cenumFromThenTo ::
    Lib.ChromNameFormat
    -> Lib.ChromNameFormat
    -> Lib.ChromNameFormat
    -> [Lib.ChromNameFormat]
  {- Arity: 3, Strictness: <S,1*U><S,1*U><S,1*U> -}
72f14e6fcdc92b42047548db1c03b13e
  $fEnumChromNameFormat_$cenumFromTo ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat -> [Lib.ChromNameFormat]
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (x :: Lib.ChromNameFormat)
                   (y :: Lib.ChromNameFormat) ->
                 let {
                   $j :: GHC.Prim.Int# -> [Lib.ChromNameFormat]
                     <join 1> {- Arity: 1, Strictness: <S,U> -}
                   = \ (a# :: GHC.Prim.Int#)[OneShot] ->
                     case y of wild {
                       Lib.GRC
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># a# 0#) of wild1 {
                            GHC.Types.False -> Lib.$fEnumChromNameFormat_go1 a#
                            GHC.Types.True -> GHC.Types.[] @ Lib.ChromNameFormat }
                       Lib.UCSC
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># a# 1#) of wild1 {
                            GHC.Types.False -> Lib.$fEnumChromNameFormat_go a#
                            GHC.Types.True -> GHC.Types.[] @ Lib.ChromNameFormat } }
                 } in
                 case x of wild { Lib.GRC -> $j 0# Lib.UCSC -> $j 1# }) -}
72f14e6fcdc92b42047548db1c03b13e
  $fEnumChromNameFormat_$cfromEnum ::
    Lib.ChromNameFormat -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: Lib.ChromNameFormat) ->
                 case a of wild {
                   Lib.GRC -> GHC.Types.I# 0# Lib.UCSC -> GHC.Types.I# 1# }) -}
72f14e6fcdc92b42047548db1c03b13e
  $fEnumChromNameFormat_$cpred ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: Lib.ChromNameFormat) ->
                 case a of wild {
                   Lib.GRC -> Lib.$fEnumChromNameFormat3 Lib.UCSC -> Lib.GRC }) -}
72f14e6fcdc92b42047548db1c03b13e
  $fEnumChromNameFormat_$csucc ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: Lib.ChromNameFormat) ->
                 case a of wild {
                   Lib.GRC -> Lib.UCSC Lib.UCSC -> Lib.$fEnumChromNameFormat4 }) -}
72f14e6fcdc92b42047548db1c03b13e
  $fEnumChromNameFormat_$ctoEnum ::
    GHC.Types.Int -> Lib.ChromNameFormat
  {- Arity: 1, Strictness: <S(S),1*U(U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Types.Int) ->
                 case w of ww { GHC.Types.I# ww1 -> Lib.$w$ctoEnum ww1 }) -}
72f14e6fcdc92b42047548db1c03b13e
  $fEnumChromNameFormat_go :: GHC.Prim.Int# -> [Lib.ChromNameFormat]
  {- Arity: 1, Strictness: <L,U>m2 -}
72f14e6fcdc92b42047548db1c03b13e
  $fEnumChromNameFormat_go1 :: GHC.Prim.Int# -> [Lib.ChromNameFormat]
  {- Arity: 1, Strictness: <L,U>m2 -}
72f14e6fcdc92b42047548db1c03b13e
  $fEnumChromNameFormat_go2 :: GHC.Prim.Int# -> [Lib.ChromNameFormat]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m2 -}
3fd0d1813507d3804368ee979449d71a
  $fEnumUChr :: GHC.Enum.Enum Lib.UChr
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.UChr
                  Lib.$fEnumUChr_$csucc
                  Lib.$fEnumUChr_$cpred
                  Lib.$fEnumUChr_$ctoEnum
                  Lib.$fEnumUChr_$cfromEnum
                  Lib.$fEnumUChr_$cenumFrom
                  Lib.$fEnumUChr_$cenumFromThen
                  Lib.$fEnumUChr_$cenumFromTo
                  Lib.$fEnumUChr_$cenumFromThenTo -}
3fd0d1813507d3804368ee979449d71a
  $fEnumUChr1 :: Lib.UChr
  {- Strictness: x -}
3fd0d1813507d3804368ee979449d71a
  $fEnumUChr2 :: Lib.UChr
  {- Strictness: x -}
3fd0d1813507d3804368ee979449d71a
  $fEnumUChr_$cenumFrom :: Lib.UChr -> [Lib.UChr]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,U>,
     Unfolding: (\ (a :: Lib.UChr) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr a of a# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.># a# 110#) of wild {
                   GHC.Types.False -> Lib.$fEnumUChr_go a#
                   GHC.Types.True -> GHC.Types.[] @ Lib.UChr } }) -}
3fd0d1813507d3804368ee979449d71a
  $fEnumUChr_$cenumFromThen :: Lib.UChr -> Lib.UChr -> [Lib.UChr]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: (\ (a :: Lib.UChr) (b :: Lib.UChr) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr a of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr b of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.># a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# b# a#) of wild1 {
                        GHC.Types.False
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.># 110# b#) of wild2 {
                             GHC.Types.False
                             -> GHC.Types.:
                                  @ Lib.UChr
                                  (GHC.Prim.tagToEnum# @ Lib.UChr a#)
                                  (let {
                                     delta :: GHC.Prim.Int# = GHC.Prim.-# b# a#
                                   } in
                                   let {
                                     y' :: GHC.Prim.Int# = GHC.Prim.-# 110# delta
                                   } in
                                   letrec {
                                     go_dn :: GHC.Prim.Int# -> [Lib.UChr]
                                       {- Arity: 1, Strictness: <S,U> -}
                                     = \ (x :: GHC.Prim.Int#) ->
                                       case GHC.Prim.tagToEnum#
                                              @ GHC.Types.Bool
                                              (GHC.Prim.<# x y') of wild3 {
                                         GHC.Types.False
                                         -> GHC.Types.:
                                              @ Lib.UChr
                                              (GHC.Prim.tagToEnum# @ Lib.UChr x)
                                              (go_dn (GHC.Prim.+# x delta))
                                         GHC.Types.True
                                         -> GHC.Types.:
                                              @ Lib.UChr
                                              (GHC.Prim.tagToEnum# @ Lib.UChr x)
                                              (GHC.Types.[] @ Lib.UChr) }
                                   } in
                                   go_dn b#)
                             GHC.Types.True
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.># 110# a#) of wild3 {
                                  GHC.Types.False
                                  -> GHC.Types.:
                                       @ Lib.UChr
                                       (GHC.Prim.tagToEnum# @ Lib.UChr a#)
                                       (GHC.Types.[] @ Lib.UChr)
                                  GHC.Types.True -> GHC.Types.[] @ Lib.UChr } }
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<# 110# b#) of wild2 {
                             GHC.Types.False
                             -> GHC.Types.:
                                  @ Lib.UChr
                                  (GHC.Prim.tagToEnum# @ Lib.UChr a#)
                                  (let {
                                     delta :: GHC.Prim.Int# = GHC.Prim.-# b# a#
                                   } in
                                   let {
                                     y' :: GHC.Prim.Int# = GHC.Prim.-# 110# delta
                                   } in
                                   letrec {
                                     go_up :: GHC.Prim.Int# -> [Lib.UChr]
                                       {- Arity: 1, Strictness: <S,U> -}
                                     = \ (x :: GHC.Prim.Int#) ->
                                       case GHC.Prim.tagToEnum#
                                              @ GHC.Types.Bool
                                              (GHC.Prim.># x y') of wild3 {
                                         GHC.Types.False
                                         -> GHC.Types.:
                                              @ Lib.UChr
                                              (GHC.Prim.tagToEnum# @ Lib.UChr x)
                                              (go_up (GHC.Prim.+# x delta))
                                         GHC.Types.True
                                         -> GHC.Types.:
                                              @ Lib.UChr
                                              (GHC.Prim.tagToEnum# @ Lib.UChr x)
                                              (GHC.Types.[] @ Lib.UChr) }
                                   } in
                                   go_up b#)
                             GHC.Types.True
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.<# 110# a#) of wild3 {
                                  GHC.Types.False
                                  -> GHC.Types.:
                                       @ Lib.UChr
                                       (GHC.Prim.tagToEnum# @ Lib.UChr a#)
                                       (GHC.Types.[] @ Lib.UChr)
                                  GHC.Types.True -> GHC.Types.[] @ Lib.UChr } } }
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# b# a#) of wild1 {
                        GHC.Types.False
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.># 0# b#) of wild2 {
                             GHC.Types.False
                             -> GHC.Types.:
                                  @ Lib.UChr
                                  (GHC.Prim.tagToEnum# @ Lib.UChr a#)
                                  (let {
                                     delta :: GHC.Prim.Int# = GHC.Prim.-# b# a#
                                   } in
                                   let {
                                     y' :: GHC.Prim.Int# = GHC.Prim.-# 0# delta
                                   } in
                                   letrec {
                                     go_dn :: GHC.Prim.Int# -> [Lib.UChr]
                                       {- Arity: 1, Strictness: <S,U> -}
                                     = \ (x :: GHC.Prim.Int#) ->
                                       case GHC.Prim.tagToEnum#
                                              @ GHC.Types.Bool
                                              (GHC.Prim.<# x y') of wild3 {
                                         GHC.Types.False
                                         -> GHC.Types.:
                                              @ Lib.UChr
                                              (GHC.Prim.tagToEnum# @ Lib.UChr x)
                                              (go_dn (GHC.Prim.+# x delta))
                                         GHC.Types.True
                                         -> GHC.Types.:
                                              @ Lib.UChr
                                              (GHC.Prim.tagToEnum# @ Lib.UChr x)
                                              (GHC.Types.[] @ Lib.UChr) }
                                   } in
                                   go_dn b#)
                             GHC.Types.True
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.># 0# a#) of wild3 {
                                  GHC.Types.False
                                  -> GHC.Types.:
                                       @ Lib.UChr
                                       (GHC.Prim.tagToEnum# @ Lib.UChr a#)
                                       (GHC.Types.[] @ Lib.UChr)
                                  GHC.Types.True -> GHC.Types.[] @ Lib.UChr } }
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<# 0# b#) of wild2 {
                             GHC.Types.False
                             -> GHC.Types.:
                                  @ Lib.UChr
                                  (GHC.Prim.tagToEnum# @ Lib.UChr a#)
                                  (let {
                                     delta :: GHC.Prim.Int# = GHC.Prim.-# b# a#
                                   } in
                                   let {
                                     y' :: GHC.Prim.Int# = GHC.Prim.-# 0# delta
                                   } in
                                   letrec {
                                     go_up :: GHC.Prim.Int# -> [Lib.UChr]
                                       {- Arity: 1, Strictness: <S,U> -}
                                     = \ (x :: GHC.Prim.Int#) ->
                                       case GHC.Prim.tagToEnum#
                                              @ GHC.Types.Bool
                                              (GHC.Prim.># x y') of wild3 {
                                         GHC.Types.False
                                         -> GHC.Types.:
                                              @ Lib.UChr
                                              (GHC.Prim.tagToEnum# @ Lib.UChr x)
                                              (go_up (GHC.Prim.+# x delta))
                                         GHC.Types.True
                                         -> GHC.Types.:
                                              @ Lib.UChr
                                              (GHC.Prim.tagToEnum# @ Lib.UChr x)
                                              (GHC.Types.[] @ Lib.UChr) }
                                   } in
                                   go_up b#)
                             GHC.Types.True
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.<# 0# a#) of wild3 {
                                  GHC.Types.False
                                  -> GHC.Types.:
                                       @ Lib.UChr
                                       (GHC.Prim.tagToEnum# @ Lib.UChr a#)
                                       (GHC.Types.[] @ Lib.UChr)
                                  GHC.Types.True -> GHC.Types.[] @ Lib.UChr } } } } } }) -}
3fd0d1813507d3804368ee979449d71a
  $fEnumUChr_$cenumFromThenTo ::
    Lib.UChr -> Lib.UChr -> Lib.UChr -> [Lib.UChr]
  {- Arity: 3, Strictness: <S,U><S,U><S,U> -}
3fd0d1813507d3804368ee979449d71a
  $fEnumUChr_$cenumFromTo :: Lib.UChr -> Lib.UChr -> [Lib.UChr]
  {- Arity: 2, Strictness: <S,U><S,U>,
     Unfolding: (\ (x :: Lib.UChr) (y :: Lib.UChr) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr y of a#1 { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.># a# a#1) of wild {
                   GHC.Types.False
                   -> letrec {
                        go20 :: GHC.Prim.Int# -> [Lib.UChr]
                          {- Arity: 1, Strictness: <L,U> -}
                        = \ (x1 :: GHC.Prim.Int#) ->
                          GHC.Types.:
                            @ Lib.UChr
                            (case GHC.Prim.tagToEnum#
                                    @ GHC.Types.Bool
                                    (GHC.Prim.>=# x1 0#) of wild1 {
                               GHC.Types.False -> Lib.$wlvl1 x1
                               GHC.Types.True
                               -> case GHC.Prim.tagToEnum#
                                         @ GHC.Types.Bool
                                         (GHC.Prim.<=# x1 110#) of wild2 {
                                    GHC.Types.False -> Lib.$wlvl1 x1
                                    GHC.Types.True -> GHC.Prim.tagToEnum# @ Lib.UChr x1 } })
                            (case GHC.Prim.tagToEnum#
                                    @ GHC.Types.Bool
                                    (GHC.Prim.==# x1 a#1) of wild1 {
                               GHC.Types.False -> go20 (GHC.Prim.+# x1 1#)
                               GHC.Types.True -> GHC.Types.[] @ Lib.UChr })
                      } in
                      go20 a#
                   GHC.Types.True -> GHC.Types.[] @ Lib.UChr } } }) -}
3fd0d1813507d3804368ee979449d71a
  $fEnumUChr_$cfromEnum :: Lib.UChr -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,U>m,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: Lib.UChr) ->
                 case a of x1 { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x1 of a# { DEFAULT ->
                 GHC.Types.I# a# } }) -}
3fd0d1813507d3804368ee979449d71a
  $fEnumUChr_$cpred :: Lib.UChr -> Lib.UChr
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: Lib.UChr) ->
                 case a of x1 { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x1 of a# {
                   DEFAULT -> GHC.Prim.tagToEnum# @ Lib.UChr (GHC.Prim.+# a# -1#)
                   0# -> Lib.$fEnumUChr1 } }) -}
3fd0d1813507d3804368ee979449d71a
  $fEnumUChr_$csucc :: Lib.UChr -> Lib.UChr
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: Lib.UChr) ->
                 case a of x1 { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x1 of a# {
                   DEFAULT -> GHC.Prim.tagToEnum# @ Lib.UChr (GHC.Prim.+# a# 1#)
                   110# -> Lib.$fEnumUChr2 } }) -}
3fd0d1813507d3804368ee979449d71a
  $fEnumUChr_$ctoEnum :: GHC.Types.Int -> Lib.UChr
  {- Arity: 1, Strictness: <S(S),1*U(U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Types.Int) ->
                 case w of ww { GHC.Types.I# ww1 -> Lib.$w$ctoEnum1 ww1 }) -}
3fd0d1813507d3804368ee979449d71a
  $fEnumUChr_go :: GHC.Prim.Int# -> [Lib.UChr]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m2 -}
eb54c5795cd87d65034c776d841620e0
  $fEqAlignedRead :: GHC.Classes.Eq Lib.AlignedRead
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.AlignedRead
                  Lib.$fEqAlignedRead_$c==
                  Lib.$fEqAlignedRead_$c/= -}
eb54c5795cd87d65034c776d841620e0
  $fEqAlignedRead_$c/= ::
    Lib.AlignedRead -> Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LLLS)LLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(1*U(U,U,U,U),1*U(U),U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,1*U,1*U,1*U(U,U,U,U)),1*U)><S(S(LLLS)LLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(1*U(U,U,U,U),1*U(U),U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,1*U,1*U,1*U(U,U,U,U)),1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.AlignedRead) (b :: Lib.AlignedRead) ->
                 case Lib.$fEqAlignedRead_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
eb54c5795cd87d65034c776d841620e0
  $fEqAlignedRead_$c== ::
    Lib.AlignedRead -> Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LLLS)LLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(1*U(U,U,U,U),1*U(U),U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,1*U,1*U,1*U(U,U,U,U)),1*U)><S(S(LLLS)LLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(1*U(U,U,U,U),1*U(U),U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,1*U,1*U,1*U(U,U,U,U)),1*U)> -}
1fc0d837b61ebbaa17edd71f0be30382
  $fEqBEDPE :: GHC.Classes.Eq Lib.BEDPE
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.BEDPE Lib.$fEqBEDPE_$c== Lib.$fEqBEDPE_$c/= -}
1fc0d837b61ebbaa17edd71f0be30382
  $fEqBEDPE_$c/= :: Lib.BEDPE -> Lib.BEDPE -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLL),1*U(U,1*U,1*U,U,1*U,1*U,1*U(U,U,U,U))><S(SLLLLLL),1*U(U,1*U,1*U,U,1*U,1*U,1*U(U,U,U,U))>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.BEDPE) (b :: Lib.BEDPE) ->
                 case Lib.$fEqBEDPE_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
1fc0d837b61ebbaa17edd71f0be30382
  $fEqBEDPE_$c== :: Lib.BEDPE -> Lib.BEDPE -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLL),1*U(U,1*U,1*U,U,1*U,1*U,1*U(U,U,U,U))><S(SLLLLLL),1*U(U,1*U,1*U,U,1*U,1*U,1*U(U,U,U,U))>,
     Unfolding: (\ (ds6 :: Lib.BEDPE) (ds7 :: Lib.BEDPE) ->
                 case ds6 of wild { Lib.BEDPE a1 a2 a3 a4 a5 a6 a7 ->
                 case ds7 of wild1 { Lib.BEDPE b1 b2 b3 b4 b5 b6 b7 ->
                 case GHC.Prim.dataToTag# @ Lib.UChr a1 of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr b1 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==# a# b#) of wild2 {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case GHC.Integer.Type.eqInteger# a2 b2 of wild3 { DEFAULT ->
                      case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild3 of wild4 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case GHC.Integer.Type.eqInteger# a3 b3 of wild5 { DEFAULT ->
                           case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild5 of wild6 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> case GHC.Prim.dataToTag# @ Lib.UChr a4 of a#1 { DEFAULT ->
                                case GHC.Prim.dataToTag# @ Lib.UChr b4 of b#1 { DEFAULT ->
                                case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.==# a#1 b#1) of wild7 {
                                  GHC.Types.False -> GHC.Types.False
                                  GHC.Types.True
                                  -> case GHC.Integer.Type.eqInteger# a5 b5 of wild8 { DEFAULT ->
                                     case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild8 of wild9 {
                                       GHC.Types.False -> GHC.Types.False
                                       GHC.Types.True
                                       -> case GHC.Integer.Type.eqInteger#
                                                 a6
                                                 b6 of wild10 { DEFAULT ->
                                          case GHC.Prim.tagToEnum#
                                                 @ GHC.Types.Bool
                                                 wild10 of wild11 {
                                            GHC.Types.False -> GHC.Types.False
                                            GHC.Types.True
                                            -> Data.ByteString.Internal.eq
                                                 a7
                                                 b7 } } } } } } } } } } } } } } } }) -}
863cf0b2559e3e0bbf1758c760210fb2
  $fEqBedRecord :: GHC.Classes.Eq Lib.BedRecord
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.BedRecord Lib.$fEqBedRecord_$c== Lib.$fEqBedRecord_$c/= -}
863cf0b2559e3e0bbf1758c760210fb2
  $fEqBedRecord_$c/= ::
    Lib.BedRecord -> Lib.BedRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(U,1*U,1*U,1*U(U,U,U,U))><S(SLLL),1*U(U,1*U,1*U,1*U(U,U,U,U))>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.BedRecord) (b :: Lib.BedRecord) ->
                 case Lib.$fEqBedRecord_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
863cf0b2559e3e0bbf1758c760210fb2
  $fEqBedRecord_$c== ::
    Lib.BedRecord -> Lib.BedRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(U,1*U,1*U,1*U(U,U,U,U))><S(SLLL),1*U(U,1*U,1*U,1*U(U,U,U,U))>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.BedRecord) (w1 :: Lib.BedRecord) ->
                 case w of ww { Lib.BedRecord ww1 ww2 ww3 ww4 ->
                 case w1 of ww5 { Lib.BedRecord ww6 ww7 ww8 ww9 ->
                 Lib.$w$c== ww1 ww2 ww3 ww4 ww6 ww7 ww8 ww9 } }) -}
72f14e6fcdc92b42047548db1c03b13e
  $fEqChromNameFormat :: GHC.Classes.Eq Lib.ChromNameFormat
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.ChromNameFormat
                  Lib.$fEqChromNameFormat_$c==
                  Lib.$fEqChromNameFormat_$c/= -}
72f14e6fcdc92b42047548db1c03b13e
  $fEqChromNameFormat_$c/= ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.ChromNameFormat) (b :: Lib.ChromNameFormat) ->
                 case a of wild {
                   Lib.GRC
                   -> case b of wild1 {
                        Lib.GRC -> GHC.Types.False Lib.UCSC -> GHC.Types.True }
                   Lib.UCSC
                   -> case b of wild1 {
                        Lib.GRC -> GHC.Types.True Lib.UCSC -> GHC.Types.False } }) -}
72f14e6fcdc92b42047548db1c03b13e
  $fEqChromNameFormat_$c== ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds6 :: Lib.ChromNameFormat) (ds7 :: Lib.ChromNameFormat) ->
                 case ds6 of wild {
                   Lib.GRC
                   -> case ds7 of wild1 {
                        Lib.GRC -> GHC.Types.True Lib.UCSC -> GHC.Types.False }
                   Lib.UCSC
                   -> case ds7 of wild1 {
                        Lib.GRC -> GHC.Types.False Lib.UCSC -> GHC.Types.True } }) -}
06caff25e138935957c1d9216ae6952f
  $fEqMasterRecord :: GHC.Classes.Eq Lib.MasterRecord
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.MasterRecord
                  Lib.$fEqMasterRecord_$c==
                  Lib.$fEqMasterRecord_$c/= -}
06caff25e138935957c1d9216ae6952f
  $fEqMasterRecord_$c/= ::
    Lib.MasterRecord -> Lib.MasterRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(U,1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U))><S(SLLLLLLLLLLL),1*U(U,1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U))>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.MasterRecord) (b :: Lib.MasterRecord) ->
                 case Lib.$fEqMasterRecord_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
06caff25e138935957c1d9216ae6952f
  $fEqMasterRecord_$c== ::
    Lib.MasterRecord -> Lib.MasterRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(U,1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U))><S(SLLLLLLLLLLL),1*U(U,1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U))> -}
9397824cc9d01cf75666f6f250a9bd4d
  $fEqMidFamily :: GHC.Classes.Eq Lib.MidFamily
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.MidFamily Lib.$fEqMidFamily_$c== Lib.$fEqMidFamily_$c/= -}
9397824cc9d01cf75666f6f250a9bd4d
  $fEqMidFamily_$c/= ::
    Lib.MidFamily -> Lib.MidFamily -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLL),1*U(U,1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U(U,1*U,1*U,1*U(U,U,U,U)))><S(SLLLLLLLLL),1*U(U,1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U(U,1*U,1*U,1*U(U,U,U,U)))>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.MidFamily) (b :: Lib.MidFamily) ->
                 case Lib.$fEqMidFamily_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
9397824cc9d01cf75666f6f250a9bd4d
  $fEqMidFamily_$c== ::
    Lib.MidFamily -> Lib.MidFamily -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLL),1*U(U,1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U(U,1*U,1*U,1*U(U,U,U,U)))><S(SLLLLLLLLL),1*U(U,1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U(U,1*U,1*U,1*U(U,U,U,U)))> -}
69605119a398f29c235919bcd7f9bece
  $fEqOpts :: GHC.Classes.Eq Lib.Opts
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:. @ Lib.Opts Lib.$fEqOpts_$c== Lib.$fEqOpts_$c/= -}
69605119a398f29c235919bcd7f9bece
  $fEqOpts_$c/= :: Lib.Opts -> Lib.Opts -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(1*U,1*U,1*U,1*U)><S(SLLL),1*U(1*U,1*U,1*U,1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.Opts) (b :: Lib.Opts) ->
                 case Lib.$fEqOpts_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
69605119a398f29c235919bcd7f9bece
  $fEqOpts_$c== :: Lib.Opts -> Lib.Opts -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(1*U,1*U,1*U,1*U)><S(SLLL),1*U(1*U,1*U,1*U,1*U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.Opts) (w1 :: Lib.Opts) ->
                 case w of ww { Lib.Opts ww1 ww2 ww3 ww4 ->
                 case w1 of ww5 { Lib.Opts ww6 ww7 ww8 ww9 ->
                 Lib.$w$c==1 ww1 ww2 ww3 ww4 ww6 ww7 ww8 ww9 } }) -}
eb54c5795cd87d65034c776d841620e0
  $fEqPairedAln :: GHC.Classes.Eq Lib.PairedAln
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.PairedAln Lib.$fEqPairedAln_$c== Lib.$fEqPairedAln_$c/= -}
eb54c5795cd87d65034c776d841620e0
  $fEqPairedAln_$c/= ::
    Lib.PairedAln -> Lib.PairedAln -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S(LLLS)LLLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(1*U(1*U(U,U,U,U),1*U(U),U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,1*U,1*U,1*U(U,U,U,U)),1*U),1*U(1*U(U,U,U,U),1*U(U),U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,1*U,1*U,1*U(U,U,U,U)),1*U),1*U,1*U)><S(S(S(LLLS)LLLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(1*U(1*U(U,U,U,U),1*U(U),U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,1*U,1*U,1*U(U,U,U,U)),1*U),1*U(1*U(U,U,U,U),1*U(U),U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,1*U,1*U,1*U(U,U,U,U)),1*U),1*U,1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.PairedAln) (b :: Lib.PairedAln) ->
                 case Lib.$fEqPairedAln_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
eb54c5795cd87d65034c776d841620e0
  $fEqPairedAln_$c== ::
    Lib.PairedAln -> Lib.PairedAln -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S(LLLS)LLLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(1*U(1*U(U,U,U,U),1*U(U),U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,1*U,1*U,1*U(U,U,U,U)),1*U),1*U(1*U(U,U,U,U),1*U(U),U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,1*U,1*U,1*U(U,U,U,U)),1*U),1*U,1*U)><S(S(S(LLLS)LLLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(1*U(1*U(U,U,U,U),1*U(U),U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,1*U,1*U,1*U(U,U,U,U)),1*U),1*U(1*U(U,U,U,U),1*U(U),U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,1*U,1*U,1*U(U,U,U,U)),1*U),1*U,1*U)>,
     Unfolding: (\ (ds6 :: Lib.PairedAln) (ds7 :: Lib.PairedAln) ->
                 case ds6 of wild { Lib.PairedAln a1 a2 a3 a4 ->
                 case ds7 of wild1 { Lib.PairedAln b1 b2 b3 b4 ->
                 case Lib.$fEqAlignedRead_$c== a1 b1 of wild2 {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case Lib.$fEqAlignedRead_$c== a2 b2 of wild3 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case GHC.Classes.$fEq[]_$c==
                                  @ Lib.AlignedRead
                                  Lib.$fEqAlignedRead
                                  a3
                                  b3 of wild4 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> GHC.Classes.$fEq[]_$c==
                                  @ Lib.AlignedRead
                                  Lib.$fEqAlignedRead
                                  a4
                                  b4 } } } } }) -}
ceb4d0ea9cbcc5b1524e546fcc802235
  $fEqRunStats :: GHC.Classes.Eq Lib.RunStats
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.RunStats Lib.$fEqRunStats_$c== Lib.$fEqRunStats_$c/= -}
ceb4d0ea9cbcc5b1524e546fcc802235
  $fEqRunStats_$c/= :: Lib.RunStats -> Lib.RunStats -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLL),1*U(1*U,1*U,1*U,1*U,1*U(U),1*U(U))><S(SLLLLL),1*U(1*U,1*U,1*U,1*U,1*U(U),1*U(U))>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.RunStats) (b :: Lib.RunStats) ->
                 case Lib.$fEqRunStats_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
ceb4d0ea9cbcc5b1524e546fcc802235
  $fEqRunStats_$c== :: Lib.RunStats -> Lib.RunStats -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLL),1*U(1*U,1*U,1*U,1*U,1*U(U),1*U(U))><S(SLLLLL),1*U(1*U,1*U,1*U,1*U,1*U(U),1*U(U))>,
     Unfolding: (\ (ds6 :: Lib.RunStats) (ds7 :: Lib.RunStats) ->
                 case ds6 of wild { Lib.RunStats a1 a2 a3 a4 a5 a6 ->
                 case ds7 of wild1 { Lib.RunStats b1 b2 b3 b4 b5 b6 ->
                 case GHC.Integer.Type.eqInteger# a1 b1 of wild2 { DEFAULT ->
                 case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild2 of wild3 {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case GHC.Integer.Type.eqInteger# a2 b2 of wild4 { DEFAULT ->
                      case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild4 of wild5 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case GHC.Integer.Type.eqInteger# a3 b3 of wild6 { DEFAULT ->
                           case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild6 of wild7 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> case GHC.Integer.Type.eqInteger# a4 b4 of wild8 { DEFAULT ->
                                case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild8 of wild9 {
                                  GHC.Types.False -> GHC.Types.False
                                  GHC.Types.True
                                  -> case a5 of wild10 { GHC.Types.D# x ->
                                     case b5 of wild11 { GHC.Types.D# y ->
                                     case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.==## x y) of wild12 {
                                       GHC.Types.False -> GHC.Types.False
                                       GHC.Types.True
                                       -> GHC.Classes.eqDouble a6 b6 } } } } } } } } } } } } }) -}
69814aa9d1fbec2649c78c6d1eb24076
  $fEqSAMFlag :: GHC.Classes.Eq Lib.SAMFlag
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.SAMFlag Lib.$fEqSAMFlag_$c== Lib.$fEqSAMFlag_$c/= -}
69814aa9d1fbec2649c78c6d1eb24076
  $fEqSAMFlag_$c/= :: Lib.SAMFlag -> Lib.SAMFlag -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U))><S(SLLLLLLLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U))>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.SAMFlag) (b :: Lib.SAMFlag) ->
                 case Lib.$fEqSAMFlag_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
69814aa9d1fbec2649c78c6d1eb24076
  $fEqSAMFlag_$c== :: Lib.SAMFlag -> Lib.SAMFlag -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U))><S(SLLLLLLLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U))> -}
3fd0d1813507d3804368ee979449d71a
  $fEqUChr :: GHC.Classes.Eq Lib.UChr
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:. @ Lib.UChr Lib.$fEqUChr_$c== Lib.$fEqUChr_$c/= -}
3fd0d1813507d3804368ee979449d71a
  $fEqUChr_$c/= :: Lib.UChr -> Lib.UChr -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.UChr) (b :: Lib.UChr) ->
                 case a of x1 { DEFAULT ->
                 case b of x2 { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x1 of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==# a# b#) of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False } } } } }) -}
3fd0d1813507d3804368ee979449d71a
  $fEqUChr_$c== :: Lib.UChr -> Lib.UChr -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.UChr) (b :: Lib.UChr) ->
                 case a of x1 { DEFAULT ->
                 case b of x2 { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x1 of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x2 of b# { DEFAULT ->
                 GHC.Prim.tagToEnum#
                   @ GHC.Types.Bool
                   (GHC.Prim.==# a# b#) } } } }) -}
eb54c5795cd87d65034c776d841620e0
  $fGenericAlignedRead :: GHC.Generics.Generic Lib.AlignedRead
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.AlignedRead
                  Lib.$fGenericAlignedRead1
                    `cast`
                  (forall (x :: <*>_N).
                   <Lib.AlignedRead>_R
                   ->_R Trans
                            (Sym (GHC.Generics.N:M1[0]
                                      <*>_N
                                      <GHC.Generics.D>_P
                                      <'GHC.Generics.MetaData
                                         "AlignedRead"
                                         "Lib"
                                         "primerclip-0.3.2.0-4vTju4b4oawFuFWabKwXDg"
                                         'GHC.Types.False>_P
                                      <GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "AlignedRead" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                         ((((GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "qname")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString)
                                             GHC.Generics.:*: (GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Base.Just "flag")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R GHC.Types.Int)
                                                               GHC.Generics.:*: GHC.Generics.M1
                                                                                  GHC.Generics.S
                                                                                  ('GHC.Generics.MetaSel
                                                                                     ('GHC.Base.Just
                                                                                        "rname")
                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                     'GHC.Generics.DecidedLazy)
                                                                                  (GHC.Generics.K1
                                                                                     GHC.Generics.R
                                                                                     Lib.UChr)))
                                            GHC.Generics.:*: ((GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Base.Just "pos")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    GHC.Integer.Type.Integer)
                                                               GHC.Generics.:*: GHC.Generics.M1
                                                                                  GHC.Generics.S
                                                                                  ('GHC.Generics.MetaSel
                                                                                     ('GHC.Base.Just
                                                                                        "endpos")
                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                     'GHC.Generics.DecidedLazy)
                                                                                  (GHC.Generics.K1
                                                                                     GHC.Generics.R
                                                                                     GHC.Integer.Type.Integer))
                                                              GHC.Generics.:*: (GHC.Generics.M1
                                                                                  GHC.Generics.S
                                                                                  ('GHC.Generics.MetaSel
                                                                                     ('GHC.Base.Just
                                                                                        "mapqual")
                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                     'GHC.Generics.DecidedLazy)
                                                                                  (GHC.Generics.K1
                                                                                     GHC.Generics.R
                                                                                     GHC.Integer.Type.Integer)
                                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                                   GHC.Generics.S
                                                                                                   ('GHC.Generics.MetaSel
                                                                                                      ('GHC.Base.Just
                                                                                                         "cigar")
                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                   (GHC.Generics.K1
                                                                                                      GHC.Generics.R
                                                                                                      Data.ByteString.Internal.ByteString))))
                                           GHC.Generics.:*: (((GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Base.Just "trimdcigar")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    Data.ByteString.Internal.ByteString)
                                                               GHC.Generics.:*: GHC.Generics.M1
                                                                                  GHC.Generics.S
                                                                                  ('GHC.Generics.MetaSel
                                                                                     ('GHC.Base.Just
                                                                                        "cigmap")
                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                     'GHC.Generics.DecidedLazy)
                                                                                  (GHC.Generics.K1
                                                                                     GHC.Generics.R
                                                                                     Lib.CigarMap))
                                                              GHC.Generics.:*: (GHC.Generics.M1
                                                                                  GHC.Generics.S
                                                                                  ('GHC.Generics.MetaSel
                                                                                     ('GHC.Base.Just
                                                                                        "trimdcigmap")
                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                     'GHC.Generics.DecidedLazy)
                                                                                  (GHC.Generics.K1
                                                                                     GHC.Generics.R
                                                                                     Lib.CigarMap)
                                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                                   GHC.Generics.S
                                                                                                   ('GHC.Generics.MetaSel
                                                                                                      ('GHC.Base.Just
                                                                                                         "rnext")
                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                   (GHC.Generics.K1
                                                                                                      GHC.Generics.R
                                                                                                      Data.ByteString.Internal.ByteString)))
                                                             GHC.Generics.:*: ((GHC.Generics.M1
                                                                                  GHC.Generics.S
                                                                                  ('GHC.Generics.MetaSel
                                                                                     ('GHC.Base.Just
                                                                                        "pnext")
                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                     'GHC.Generics.DecidedLazy)
                                                                                  (GHC.Generics.K1
                                                                                     GHC.Generics.R
                                                                                     GHC.Integer.Type.Integer)
                                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                                   GHC.Generics.S
                                                                                                   ('GHC.Generics.MetaSel
                                                                                                      ('GHC.Base.Just
                                                                                                         "tlen")
                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                   (GHC.Generics.K1
                                                                                                      GHC.Generics.R
                                                                                                      GHC.Integer.Type.Integer))
                                                                               GHC.Generics.:*: (GHC.Generics.M1
                                                                                                   GHC.Generics.S
                                                                                                   ('GHC.Generics.MetaSel
                                                                                                      ('GHC.Base.Just
                                                                                                         "refseq")
                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                   (GHC.Generics.K1
                                                                                                      GHC.Generics.R
                                                                                                      Data.ByteString.Internal.ByteString)
                                                                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                                                                    GHC.Generics.S
                                                                                                                    ('GHC.Generics.MetaSel
                                                                                                                       ('GHC.Base.Just
                                                                                                                          "basequal")
                                                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                                                       'GHC.Generics.DecidedLazy)
                                                                                                                    (GHC.Generics.K1
                                                                                                                       GHC.Generics.R
                                                                                                                       Data.ByteString.Internal.ByteString)))))
                                          GHC.Generics.:*: ((((GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Base.Just "optfields")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    Data.ByteString.Internal.ByteString)
                                                               GHC.Generics.:*: GHC.Generics.M1
                                                                                  GHC.Generics.S
                                                                                  ('GHC.Generics.MetaSel
                                                                                     ('GHC.Base.Just
                                                                                        "strand")
                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                     'GHC.Generics.DecidedLazy)
                                                                                  (GHC.Generics.K1
                                                                                     GHC.Generics.R
                                                                                     Data.ByteString.Internal.ByteString))
                                                              GHC.Generics.:*: (GHC.Generics.M1
                                                                                  GHC.Generics.S
                                                                                  ('GHC.Generics.MetaSel
                                                                                     ('GHC.Base.Just
                                                                                        "paired")
                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                     'GHC.Generics.DecidedLazy)
                                                                                  (GHC.Generics.K1
                                                                                     GHC.Generics.R
                                                                                     GHC.Types.Bool)
                                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                                   GHC.Generics.S
                                                                                                   ('GHC.Generics.MetaSel
                                                                                                      ('GHC.Base.Just
                                                                                                         "mapped")
                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                   (GHC.Generics.K1
                                                                                                      GHC.Generics.R
                                                                                                      GHC.Types.Bool)))
                                                             GHC.Generics.:*: ((GHC.Generics.M1
                                                                                  GHC.Generics.S
                                                                                  ('GHC.Generics.MetaSel
                                                                                     ('GHC.Base.Just
                                                                                        "fint")
                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                     'GHC.Generics.DecidedLazy)
                                                                                  (GHC.Generics.K1
                                                                                     GHC.Generics.R
                                                                                     [Lib.BedRecord])
                                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                                   GHC.Generics.S
                                                                                                   ('GHC.Generics.MetaSel
                                                                                                      ('GHC.Base.Just
                                                                                                         "rint")
                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                   (GHC.Generics.K1
                                                                                                      GHC.Generics.R
                                                                                                      [Lib.BedRecord]))
                                                                               GHC.Generics.:*: (GHC.Generics.M1
                                                                                                   GHC.Generics.S
                                                                                                   ('GHC.Generics.MetaSel
                                                                                                      ('GHC.Base.Just
                                                                                                         "pintflag")
                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                   (GHC.Generics.K1
                                                                                                      GHC.Generics.R
                                                                                                      GHC.Types.Bool)
                                                                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                                                                    GHC.Generics.S
                                                                                                                    ('GHC.Generics.MetaSel
                                                                                                                       ('GHC.Base.Just
                                                                                                                          "trimdflag")
                                                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                                                       'GHC.Generics.DecidedLazy)
                                                                                                                    (GHC.Generics.K1
                                                                                                                       GHC.Generics.R
                                                                                                                       GHC.Types.Bool))))
                                                            GHC.Generics.:*: (((GHC.Generics.M1
                                                                                  GHC.Generics.S
                                                                                  ('GHC.Generics.MetaSel
                                                                                     ('GHC.Base.Just
                                                                                        "trimdpos")
                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                     'GHC.Generics.DecidedLazy)
                                                                                  (GHC.Generics.K1
                                                                                     GHC.Generics.R
                                                                                     GHC.Integer.Type.Integer)
                                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                                   GHC.Generics.S
                                                                                                   ('GHC.Generics.MetaSel
                                                                                                      ('GHC.Base.Just
                                                                                                         "trimdendpos")
                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                   (GHC.Generics.K1
                                                                                                      GHC.Generics.R
                                                                                                      GHC.Integer.Type.Integer))
                                                                               GHC.Generics.:*: (GHC.Generics.M1
                                                                                                   GHC.Generics.S
                                                                                                   ('GHC.Generics.MetaSel
                                                                                                      ('GHC.Base.Just
                                                                                                         "headerstrings")
                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                   (GHC.Generics.K1
                                                                                                      GHC.Generics.R
                                                                                                      Lib.Header)
                                                                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                                                                    GHC.Generics.S
                                                                                                                    ('GHC.Generics.MetaSel
                                                                                                                       ('GHC.Base.Just
                                                                                                                          "isheader")
                                                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                                                       'GHC.Generics.DecidedLazy)
                                                                                                                    (GHC.Generics.K1
                                                                                                                       GHC.Generics.R
                                                                                                                       GHC.Types.Bool)))
                                                                              GHC.Generics.:*: ((GHC.Generics.M1
                                                                                                   GHC.Generics.S
                                                                                                   ('GHC.Generics.MetaSel
                                                                                                      ('GHC.Base.Just
                                                                                                         "mid")
                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                   (GHC.Generics.K1
                                                                                                      GHC.Generics.R
                                                                                                      Data.ByteString.Internal.ByteString)
                                                                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                                                                    GHC.Generics.S
                                                                                                                    ('GHC.Generics.MetaSel
                                                                                                                       ('GHC.Base.Just
                                                                                                                          "xmid")
                                                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                                                       'GHC.Generics.DecidedLazy)
                                                                                                                    (GHC.Generics.K1
                                                                                                                       GHC.Generics.R
                                                                                                                       Data.ByteString.Internal.ByteString))
                                                                                                GHC.Generics.:*: (GHC.Generics.M1
                                                                                                                    GHC.Generics.S
                                                                                                                    ('GHC.Generics.MetaSel
                                                                                                                       ('GHC.Base.Just
                                                                                                                          "tbed")
                                                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                                                       'GHC.Generics.DecidedLazy)
                                                                                                                    (GHC.Generics.K1
                                                                                                                       GHC.Generics.R
                                                                                                                       Lib.BedRecord)
                                                                                                                  GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                     GHC.Generics.S
                                                                                                                                     ('GHC.Generics.MetaSel
                                                                                                                                        ('GHC.Base.Just
                                                                                                                                           "trimdToZeroLength")
                                                                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                                                                        'GHC.Generics.DecidedLazy)
                                                                                                                                     (GHC.Generics.K1
                                                                                                                                        GHC.Generics.R
                                                                                                                                        GHC.Types.Bool))))))>_R))
                            (Sub (Sym (Lib.Rep_AlignedRead[0]))) <x>_N)
                  Lib.$fGenericAlignedRead_$cto -}
eb54c5795cd87d65034c776d841620e0
  $fGenericAlignedRead1 ::
    Lib.AlignedRead
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "AlignedRead" 'GHC.Generics.PrefixI 'GHC.Types.True)
         ((((GHC.Generics.M1
               GHC.Generics.S
               ('GHC.Generics.MetaSel
                  ('GHC.Base.Just "qname")
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.NoSourceStrictness
                  'GHC.Generics.DecidedLazy)
               (GHC.Generics.K1
                  GHC.Generics.R Data.ByteString.Internal.ByteString)
             GHC.Generics.:*: (GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Base.Just "flag")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                               GHC.Generics.:*: GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "rname")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1 GHC.Generics.R Lib.UChr)))
            GHC.Generics.:*: ((GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Base.Just "pos")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                               GHC.Generics.:*: GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "endpos")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R GHC.Integer.Type.Integer))
                              GHC.Generics.:*: (GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "mapqual")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R GHC.Integer.Type.Integer)
                                                GHC.Generics.:*: GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Base.Just "cigar")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      Data.ByteString.Internal.ByteString))))
           GHC.Generics.:*: (((GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Base.Just "trimdcigar")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1
                                    GHC.Generics.R Data.ByteString.Internal.ByteString)
                               GHC.Generics.:*: GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "cigmap")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1 GHC.Generics.R Lib.CigarMap))
                              GHC.Generics.:*: (GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "trimdcigmap")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1 GHC.Generics.R Lib.CigarMap)
                                                GHC.Generics.:*: GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Base.Just "rnext")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      Data.ByteString.Internal.ByteString)))
                             GHC.Generics.:*: ((GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "pnext")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R GHC.Integer.Type.Integer)
                                                GHC.Generics.:*: GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Base.Just "tlen")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      GHC.Integer.Type.Integer))
                                               GHC.Generics.:*: (GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Base.Just "refseq")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      Data.ByteString.Internal.ByteString)
                                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                                    GHC.Generics.S
                                                                                    ('GHC.Generics.MetaSel
                                                                                       ('GHC.Base.Just
                                                                                          "basequal")
                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                       'GHC.Generics.DecidedLazy)
                                                                                    (GHC.Generics.K1
                                                                                       GHC.Generics.R
                                                                                       Data.ByteString.Internal.ByteString)))))
          GHC.Generics.:*: ((((GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Base.Just "optfields")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1
                                    GHC.Generics.R Data.ByteString.Internal.ByteString)
                               GHC.Generics.:*: GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "strand")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R
                                                     Data.ByteString.Internal.ByteString))
                              GHC.Generics.:*: (GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "paired")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool)
                                                GHC.Generics.:*: GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Base.Just "mapped")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      GHC.Types.Bool)))
                             GHC.Generics.:*: ((GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "fint")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1 GHC.Generics.R [Lib.BedRecord])
                                                GHC.Generics.:*: GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Base.Just "rint")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      [Lib.BedRecord]))
                                               GHC.Generics.:*: (GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Base.Just "pintflag")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R GHC.Types.Bool)
                                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                                    GHC.Generics.S
                                                                                    ('GHC.Generics.MetaSel
                                                                                       ('GHC.Base.Just
                                                                                          "trimdflag")
                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                       'GHC.Generics.DecidedLazy)
                                                                                    (GHC.Generics.K1
                                                                                       GHC.Generics.R
                                                                                       GHC.Types.Bool))))
                            GHC.Generics.:*: (((GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "trimdpos")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R GHC.Integer.Type.Integer)
                                                GHC.Generics.:*: GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Base.Just "trimdendpos")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      GHC.Integer.Type.Integer))
                                               GHC.Generics.:*: (GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Base.Just
                                                                         "headerstrings")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R Lib.Header)
                                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                                    GHC.Generics.S
                                                                                    ('GHC.Generics.MetaSel
                                                                                       ('GHC.Base.Just
                                                                                          "isheader")
                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                       'GHC.Generics.DecidedLazy)
                                                                                    (GHC.Generics.K1
                                                                                       GHC.Generics.R
                                                                                       GHC.Types.Bool)))
                                              GHC.Generics.:*: ((GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Base.Just "mid")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      Data.ByteString.Internal.ByteString)
                                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                                    GHC.Generics.S
                                                                                    ('GHC.Generics.MetaSel
                                                                                       ('GHC.Base.Just
                                                                                          "xmid")
                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                       'GHC.Generics.DecidedLazy)
                                                                                    (GHC.Generics.K1
                                                                                       GHC.Generics.R
                                                                                       Data.ByteString.Internal.ByteString))
                                                                GHC.Generics.:*: (GHC.Generics.M1
                                                                                    GHC.Generics.S
                                                                                    ('GHC.Generics.MetaSel
                                                                                       ('GHC.Base.Just
                                                                                          "tbed")
                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                       'GHC.Generics.DecidedLazy)
                                                                                    (GHC.Generics.K1
                                                                                       GHC.Generics.R
                                                                                       Lib.BedRecord)
                                                                                  GHC.Generics.:*: GHC.Generics.M1
                                                                                                     GHC.Generics.S
                                                                                                     ('GHC.Generics.MetaSel
                                                                                                        ('GHC.Base.Just
                                                                                                           "trimdToZeroLength")
                                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                                        'GHC.Generics.DecidedLazy)
                                                                                                     (GHC.Generics.K1
                                                                                                        GHC.Generics.R
                                                                                                        GHC.Types.Bool))))))
         x
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>m,
     Unfolding: (\ @ x (x1 :: Lib.AlignedRead) ->
                 case x1 of wild { Lib.AlignedRead g1 g2 g3 g4 g5 g6 g7 g8 g9 g10 g11 g12 g13 g14 g15 g16 g17 g18 g19 g20 g21 g22 g23 g24 g25 g26 g27 g28 g29 g30 g31 ->
                 (GHC.Generics.:*:
                    @ *
                    @ (((GHC.Generics.M1
                           GHC.Generics.S
                           ('GHC.Generics.MetaSel
                              ('GHC.Base.Just "qname")
                              'GHC.Generics.NoSourceUnpackedness
                              'GHC.Generics.NoSourceStrictness
                              'GHC.Generics.DecidedLazy)
                           (GHC.Generics.K1
                              GHC.Generics.R Data.ByteString.Internal.ByteString)
                         GHC.Generics.:*: (GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "flag")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                           GHC.Generics.:*: GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "rname")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R Lib.UChr)))
                        GHC.Generics.:*: ((GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "pos")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R GHC.Integer.Type.Integer)
                                           GHC.Generics.:*: GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "endpos")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 GHC.Integer.Type.Integer))
                                          GHC.Generics.:*: (GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "mapqual")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 GHC.Integer.Type.Integer)
                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "cigar")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  Data.ByteString.Internal.ByteString))))
                       GHC.Generics.:*: (((GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "trimdcigar")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R Data.ByteString.Internal.ByteString)
                                           GHC.Generics.:*: GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "cigmap")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R Lib.CigarMap))
                                          GHC.Generics.:*: (GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "trimdcigmap")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R Lib.CigarMap)
                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "rnext")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  Data.ByteString.Internal.ByteString)))
                                         GHC.Generics.:*: ((GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "pnext")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 GHC.Integer.Type.Integer)
                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "tlen")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  GHC.Integer.Type.Integer))
                                                           GHC.Generics.:*: (GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "refseq")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  Data.ByteString.Internal.ByteString)
                                                                             GHC.Generics.:*: GHC.Generics.M1
                                                                                                GHC.Generics.S
                                                                                                ('GHC.Generics.MetaSel
                                                                                                   ('GHC.Base.Just
                                                                                                      "basequal")
                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                (GHC.Generics.K1
                                                                                                   GHC.Generics.R
                                                                                                   Data.ByteString.Internal.ByteString)))))
                    @ ((((GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "optfields")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1
                               GHC.Generics.R Data.ByteString.Internal.ByteString)
                          GHC.Generics.:*: GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "strand")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R Data.ByteString.Internal.ByteString))
                         GHC.Generics.:*: (GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "paired")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool)
                                           GHC.Generics.:*: GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "mapped")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R GHC.Types.Bool)))
                        GHC.Generics.:*: ((GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "fint")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1 GHC.Generics.R [Lib.BedRecord])
                                           GHC.Generics.:*: GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "rint")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R [Lib.BedRecord]))
                                          GHC.Generics.:*: (GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "pintflag")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R GHC.Types.Bool)
                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "trimdflag")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  GHC.Types.Bool))))
                       GHC.Generics.:*: (((GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "trimdpos")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R GHC.Integer.Type.Integer)
                                           GHC.Generics.:*: GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "trimdendpos")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 GHC.Integer.Type.Integer))
                                          GHC.Generics.:*: (GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "headerstrings")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R Lib.Header)
                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "isheader")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  GHC.Types.Bool)))
                                         GHC.Generics.:*: ((GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "mid")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 Data.ByteString.Internal.ByteString)
                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "xmid")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  Data.ByteString.Internal.ByteString))
                                                           GHC.Generics.:*: (GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "tbed")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  Lib.BedRecord)
                                                                             GHC.Generics.:*: GHC.Generics.M1
                                                                                                GHC.Generics.S
                                                                                                ('GHC.Generics.MetaSel
                                                                                                   ('GHC.Base.Just
                                                                                                      "trimdToZeroLength")
                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                (GHC.Generics.K1
                                                                                                   GHC.Generics.R
                                                                                                   GHC.Types.Bool)))))
                    @ x
                    (GHC.Generics.:*:
                       @ *
                       @ ((GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "qname")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString)
                           GHC.Generics.:*: (GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "flag")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                             GHC.Generics.:*: GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "rname")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R Lib.UChr)))
                          GHC.Generics.:*: ((GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "pos")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R GHC.Integer.Type.Integer)
                                             GHC.Generics.:*: GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "endpos")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R
                                                                   GHC.Integer.Type.Integer))
                                            GHC.Generics.:*: (GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "mapqual")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R
                                                                   GHC.Integer.Type.Integer)
                                                              GHC.Generics.:*: GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "cigar")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    Data.ByteString.Internal.ByteString))))
                       @ (((GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "trimdcigar")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1
                                 GHC.Generics.R Data.ByteString.Internal.ByteString)
                            GHC.Generics.:*: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "cigmap")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1 GHC.Generics.R Lib.CigarMap))
                           GHC.Generics.:*: (GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "trimdcigmap")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1 GHC.Generics.R Lib.CigarMap)
                                             GHC.Generics.:*: GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "rnext")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R
                                                                   Data.ByteString.Internal.ByteString)))
                          GHC.Generics.:*: ((GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "pnext")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R GHC.Integer.Type.Integer)
                                             GHC.Generics.:*: GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "tlen")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R
                                                                   GHC.Integer.Type.Integer))
                                            GHC.Generics.:*: (GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "refseq")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R
                                                                   Data.ByteString.Internal.ByteString)
                                                              GHC.Generics.:*: GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "basequal")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    Data.ByteString.Internal.ByteString))))
                       @ x
                       (GHC.Generics.:*:
                          @ *
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "qname")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1
                                  GHC.Generics.R Data.ByteString.Internal.ByteString)
                             GHC.Generics.:*: (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "flag")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "rname")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R Lib.UChr)))
                          @ ((GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "pos")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "endpos")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R GHC.Integer.Type.Integer))
                             GHC.Generics.:*: (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "mapqual")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R GHC.Integer.Type.Integer)
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "cigar")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     Data.ByteString.Internal.ByteString)))
                          @ x
                          (GHC.Generics.:*:
                             @ *
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "qname")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1
                                     GHC.Generics.R Data.ByteString.Internal.ByteString))
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "flag")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "rname")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1 GHC.Generics.R Lib.UChr))
                             @ x
                             g1
                               `cast`
                             (Trans
                                  (Sym (GHC.Generics.N:K1[0]
                                            <*>_N
                                            <GHC.Generics.R>_P
                                            <Data.ByteString.Internal.ByteString>_R
                                            <x>_P))
                                  (Sym (GHC.Generics.N:M1[0]
                                            <*>_N
                                            <GHC.Generics.S>_P
                                            <'GHC.Generics.MetaSel
                                               ('GHC.Base.Just "qname")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy>_P
                                            <GHC.Generics.K1
                                               GHC.Generics.R
                                               Data.ByteString.Internal.ByteString>_R) <x>_N))
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "flag")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "rname")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R Lib.UChr))
                                @ x
                                g2
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N <GHC.Generics.R>_P <GHC.Types.Int>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "flag")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R GHC.Types.Int>_R) <x>_N))
                                g3
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N <GHC.Generics.R>_P <Lib.UChr>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "rname")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R Lib.UChr>_R) <x>_N))))
                          (GHC.Generics.:*:
                             @ *
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "pos")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "endpos")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1
                                                      GHC.Generics.R GHC.Integer.Type.Integer))
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "mapqual")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "cigar")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1
                                                      GHC.Generics.R
                                                      Data.ByteString.Internal.ByteString))
                             @ x
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "pos")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "endpos")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                                @ x
                                g4
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <GHC.Integer.Type.Integer>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "pos")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  GHC.Integer.Type.Integer>_R) <x>_N))
                                g5
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <GHC.Integer.Type.Integer>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "endpos")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  GHC.Integer.Type.Integer>_R) <x>_N)))
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "mapqual")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "cigar")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1
                                        GHC.Generics.R Data.ByteString.Internal.ByteString))
                                @ x
                                g6
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <GHC.Integer.Type.Integer>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "mapqual")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  GHC.Integer.Type.Integer>_R) <x>_N))
                                g7
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <Data.ByteString.Internal.ByteString>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "cigar")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString>_R) <x>_N)))))
                       (GHC.Generics.:*:
                          @ *
                          @ ((GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "trimdcigar")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1
                                   GHC.Generics.R Data.ByteString.Internal.ByteString)
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "cigmap")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R Lib.CigarMap))
                             GHC.Generics.:*: (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "trimdcigmap")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R Lib.CigarMap)
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "rnext")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     Data.ByteString.Internal.ByteString)))
                          @ ((GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "pnext")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "tlen")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R GHC.Integer.Type.Integer))
                             GHC.Generics.:*: (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "refseq")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R
                                                    Data.ByteString.Internal.ByteString)
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "basequal")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     Data.ByteString.Internal.ByteString)))
                          @ x
                          (GHC.Generics.:*:
                             @ *
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "trimdcigar")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1
                                     GHC.Generics.R Data.ByteString.Internal.ByteString)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "cigmap")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1 GHC.Generics.R Lib.CigarMap))
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "trimdcigmap")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1 GHC.Generics.R Lib.CigarMap)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "rnext")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1
                                                      GHC.Generics.R
                                                      Data.ByteString.Internal.ByteString))
                             @ x
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "trimdcigar")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1
                                        GHC.Generics.R Data.ByteString.Internal.ByteString))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "cigmap")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R Lib.CigarMap))
                                @ x
                                g8
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <Data.ByteString.Internal.ByteString>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "trimdcigar")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString>_R) <x>_N))
                                g9
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N <GHC.Generics.R>_P <Lib.CigarMap>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "cigmap")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R Lib.CigarMap>_R) <x>_N)))
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "trimdcigmap")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R Lib.CigarMap))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "rnext")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1
                                        GHC.Generics.R Data.ByteString.Internal.ByteString))
                                @ x
                                g10
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N <GHC.Generics.R>_P <Lib.CigarMap>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "trimdcigmap")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R Lib.CigarMap>_R) <x>_N))
                                g11
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <Data.ByteString.Internal.ByteString>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "rnext")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString>_R) <x>_N))))
                          (GHC.Generics.:*:
                             @ *
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "pnext")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "tlen")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1
                                                      GHC.Generics.R GHC.Integer.Type.Integer))
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "refseq")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1
                                     GHC.Generics.R Data.ByteString.Internal.ByteString)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "basequal")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1
                                                      GHC.Generics.R
                                                      Data.ByteString.Internal.ByteString))
                             @ x
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "pnext")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "tlen")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                                @ x
                                g12
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <GHC.Integer.Type.Integer>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "pnext")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  GHC.Integer.Type.Integer>_R) <x>_N))
                                g13
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <GHC.Integer.Type.Integer>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "tlen")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  GHC.Integer.Type.Integer>_R) <x>_N)))
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "refseq")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1
                                        GHC.Generics.R Data.ByteString.Internal.ByteString))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "basequal")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1
                                        GHC.Generics.R Data.ByteString.Internal.ByteString))
                                @ x
                                g14
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <Data.ByteString.Internal.ByteString>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "refseq")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString>_R) <x>_N))
                                g15
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <Data.ByteString.Internal.ByteString>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "basequal")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString>_R) <x>_N))))))
                    (GHC.Generics.:*:
                       @ *
                       @ (((GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "optfields")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1
                                 GHC.Generics.R Data.ByteString.Internal.ByteString)
                            GHC.Generics.:*: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "strand")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString))
                           GHC.Generics.:*: (GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "paired")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool)
                                             GHC.Generics.:*: GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "mapped")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R GHC.Types.Bool)))
                          GHC.Generics.:*: ((GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "fint")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1 GHC.Generics.R [Lib.BedRecord])
                                             GHC.Generics.:*: GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "rint")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R [Lib.BedRecord]))
                                            GHC.Generics.:*: (GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "pintflag")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R GHC.Types.Bool)
                                                              GHC.Generics.:*: GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "trimdflag")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    GHC.Types.Bool))))
                       @ (((GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "trimdpos")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                            GHC.Generics.:*: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "trimdendpos")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R GHC.Integer.Type.Integer))
                           GHC.Generics.:*: (GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "headerstrings")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1 GHC.Generics.R Lib.Header)
                                             GHC.Generics.:*: GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "isheader")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R GHC.Types.Bool)))
                          GHC.Generics.:*: ((GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "mid")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString)
                                             GHC.Generics.:*: GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "xmid")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R
                                                                   Data.ByteString.Internal.ByteString))
                                            GHC.Generics.:*: (GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "tbed")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R Lib.BedRecord)
                                                              GHC.Generics.:*: GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "trimdToZeroLength")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    GHC.Types.Bool))))
                       @ x
                       (GHC.Generics.:*:
                          @ *
                          @ ((GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "optfields")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1
                                   GHC.Generics.R Data.ByteString.Internal.ByteString)
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "strand")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R
                                                    Data.ByteString.Internal.ByteString))
                             GHC.Generics.:*: (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "paired")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool)
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "mapped")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     GHC.Types.Bool)))
                          @ ((GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "fint")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R [Lib.BedRecord])
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "rint")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R [Lib.BedRecord]))
                             GHC.Generics.:*: (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "pintflag")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool)
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "trimdflag")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     GHC.Types.Bool)))
                          @ x
                          (GHC.Generics.:*:
                             @ *
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "optfields")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1
                                     GHC.Generics.R Data.ByteString.Internal.ByteString)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "strand")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1
                                                      GHC.Generics.R
                                                      Data.ByteString.Internal.ByteString))
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "paired")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "mapped")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool))
                             @ x
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "optfields")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1
                                        GHC.Generics.R Data.ByteString.Internal.ByteString))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "strand")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1
                                        GHC.Generics.R Data.ByteString.Internal.ByteString))
                                @ x
                                g16
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <Data.ByteString.Internal.ByteString>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "optfields")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString>_R) <x>_N))
                                g17
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <Data.ByteString.Internal.ByteString>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "strand")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString>_R) <x>_N)))
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "paired")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "mapped")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool))
                                @ x
                                g18
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N <GHC.Generics.R>_P <GHC.Types.Bool>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "paired")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R GHC.Types.Bool>_R) <x>_N))
                                g19
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N <GHC.Generics.R>_P <GHC.Types.Bool>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "mapped")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R GHC.Types.Bool>_R) <x>_N))))
                          (GHC.Generics.:*:
                             @ *
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "fint")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1 GHC.Generics.R [Lib.BedRecord])
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "rint")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1 GHC.Generics.R [Lib.BedRecord]))
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "pintflag")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "trimdflag")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool))
                             @ x
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "fint")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R [Lib.BedRecord]))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "rint")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R [Lib.BedRecord]))
                                @ x
                                g20
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N <GHC.Generics.R>_P <[Lib.BedRecord]>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "fint")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R [Lib.BedRecord]>_R) <x>_N))
                                g21
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N <GHC.Generics.R>_P <[Lib.BedRecord]>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "rint")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R [Lib.BedRecord]>_R) <x>_N)))
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "pintflag")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "trimdflag")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool))
                                @ x
                                g22
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N <GHC.Generics.R>_P <GHC.Types.Bool>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "pintflag")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R GHC.Types.Bool>_R) <x>_N))
                                g23
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N <GHC.Generics.R>_P <GHC.Types.Bool>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "trimdflag")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R GHC.Types.Bool>_R) <x>_N)))))
                       (GHC.Generics.:*:
                          @ *
                          @ ((GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "trimdpos")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "trimdendpos")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R GHC.Integer.Type.Integer))
                             GHC.Generics.:*: (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "headerstrings")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R Lib.Header)
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "isheader")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     GHC.Types.Bool)))
                          @ ((GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "mid")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1
                                   GHC.Generics.R Data.ByteString.Internal.ByteString)
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "xmid")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R
                                                    Data.ByteString.Internal.ByteString))
                             GHC.Generics.:*: (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "tbed")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R Lib.BedRecord)
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just
                                                                        "trimdToZeroLength")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     GHC.Types.Bool)))
                          @ x
                          (GHC.Generics.:*:
                             @ *
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "trimdpos")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "trimdendpos")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1
                                                      GHC.Generics.R GHC.Integer.Type.Integer))
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "headerstrings")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1 GHC.Generics.R Lib.Header)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "isheader")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool))
                             @ x
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "trimdpos")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "trimdendpos")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                                @ x
                                g24
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <GHC.Integer.Type.Integer>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "trimdpos")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  GHC.Integer.Type.Integer>_R) <x>_N))
                                g25
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <GHC.Integer.Type.Integer>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "trimdendpos")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  GHC.Integer.Type.Integer>_R) <x>_N)))
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "headerstrings")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R Lib.Header))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "isheader")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool))
                                @ x
                                g26
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N <GHC.Generics.R>_P <Lib.Header>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "headerstrings")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R Lib.Header>_R) <x>_N))
                                g27
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N <GHC.Generics.R>_P <GHC.Types.Bool>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "isheader")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R GHC.Types.Bool>_R) <x>_N))))
                          (GHC.Generics.:*:
                             @ *
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "mid")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1
                                     GHC.Generics.R Data.ByteString.Internal.ByteString)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "xmid")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1
                                                      GHC.Generics.R
                                                      Data.ByteString.Internal.ByteString))
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "tbed")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1 GHC.Generics.R Lib.BedRecord)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "trimdToZeroLength")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool))
                             @ x
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "mid")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1
                                        GHC.Generics.R Data.ByteString.Internal.ByteString))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "xmid")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1
                                        GHC.Generics.R Data.ByteString.Internal.ByteString))
                                @ x
                                g28
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <Data.ByteString.Internal.ByteString>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "mid")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString>_R) <x>_N))
                                g29
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <Data.ByteString.Internal.ByteString>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "xmid")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString>_R) <x>_N)))
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "tbed")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R Lib.BedRecord))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "trimdToZeroLength")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool))
                                @ x
                                g30
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N <GHC.Generics.R>_P <Lib.BedRecord>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "tbed")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R Lib.BedRecord>_R) <x>_N))
                                g31
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N <GHC.Generics.R>_P <GHC.Types.Bool>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "trimdToZeroLength")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R GHC.Types.Bool>_R) <x>_N)))))))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <*>_N
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "AlignedRead" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <(((GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Base.Just "qname")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1
                                    GHC.Generics.R Data.ByteString.Internal.ByteString)
                               GHC.Generics.:*: (GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "flag")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       ('GHC.Base.Just "rname")
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R Lib.UChr)))
                              GHC.Generics.:*: ((GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "pos")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1
                                                      GHC.Generics.R GHC.Integer.Type.Integer)
                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       ('GHC.Base.Just "endpos")
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R
                                                                       GHC.Integer.Type.Integer))
                                                GHC.Generics.:*: (GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       ('GHC.Base.Just "mapqual")
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R
                                                                       GHC.Integer.Type.Integer)
                                                                  GHC.Generics.:*: GHC.Generics.M1
                                                                                     GHC.Generics.S
                                                                                     ('GHC.Generics.MetaSel
                                                                                        ('GHC.Base.Just
                                                                                           "cigar")
                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                        'GHC.Generics.DecidedLazy)
                                                                                     (GHC.Generics.K1
                                                                                        GHC.Generics.R
                                                                                        Data.ByteString.Internal.ByteString))))
                             GHC.Generics.:*: (((GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "trimdcigar")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1
                                                      GHC.Generics.R
                                                      Data.ByteString.Internal.ByteString)
                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       ('GHC.Base.Just "cigmap")
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R Lib.CigarMap))
                                                GHC.Generics.:*: (GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       ('GHC.Base.Just
                                                                          "trimdcigmap")
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R Lib.CigarMap)
                                                                  GHC.Generics.:*: GHC.Generics.M1
                                                                                     GHC.Generics.S
                                                                                     ('GHC.Generics.MetaSel
                                                                                        ('GHC.Base.Just
                                                                                           "rnext")
                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                        'GHC.Generics.DecidedLazy)
                                                                                     (GHC.Generics.K1
                                                                                        GHC.Generics.R
                                                                                        Data.ByteString.Internal.ByteString)))
                                               GHC.Generics.:*: ((GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       ('GHC.Base.Just "pnext")
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R
                                                                       GHC.Integer.Type.Integer)
                                                                  GHC.Generics.:*: GHC.Generics.M1
                                                                                     GHC.Generics.S
                                                                                     ('GHC.Generics.MetaSel
                                                                                        ('GHC.Base.Just
                                                                                           "tlen")
                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                        'GHC.Generics.DecidedLazy)
                                                                                     (GHC.Generics.K1
                                                                                        GHC.Generics.R
                                                                                        GHC.Integer.Type.Integer))
                                                                 GHC.Generics.:*: (GHC.Generics.M1
                                                                                     GHC.Generics.S
                                                                                     ('GHC.Generics.MetaSel
                                                                                        ('GHC.Base.Just
                                                                                           "refseq")
                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                        'GHC.Generics.DecidedLazy)
                                                                                     (GHC.Generics.K1
                                                                                        GHC.Generics.R
                                                                                        Data.ByteString.Internal.ByteString)
                                                                                   GHC.Generics.:*: GHC.Generics.M1
                                                                                                      GHC.Generics.S
                                                                                                      ('GHC.Generics.MetaSel
                                                                                                         ('GHC.Base.Just
                                                                                                            "basequal")
                                                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                                                         'GHC.Generics.NoSourceStrictness
                                                                                                         'GHC.Generics.DecidedLazy)
                                                                                                      (GHC.Generics.K1
                                                                                                         GHC.Generics.R
                                                                                                         Data.ByteString.Internal.ByteString)))))
                            GHC.Generics.:*: ((((GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "optfields")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1
                                                      GHC.Generics.R
                                                      Data.ByteString.Internal.ByteString)
                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       ('GHC.Base.Just "strand")
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R
                                                                       Data.ByteString.Internal.ByteString))
                                                GHC.Generics.:*: (GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       ('GHC.Base.Just "paired")
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R
                                                                       GHC.Types.Bool)
                                                                  GHC.Generics.:*: GHC.Generics.M1
                                                                                     GHC.Generics.S
                                                                                     ('GHC.Generics.MetaSel
                                                                                        ('GHC.Base.Just
                                                                                           "mapped")
                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                        'GHC.Generics.DecidedLazy)
                                                                                     (GHC.Generics.K1
                                                                                        GHC.Generics.R
                                                                                        GHC.Types.Bool)))
                                               GHC.Generics.:*: ((GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       ('GHC.Base.Just "fint")
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R
                                                                       [Lib.BedRecord])
                                                                  GHC.Generics.:*: GHC.Generics.M1
                                                                                     GHC.Generics.S
                                                                                     ('GHC.Generics.MetaSel
                                                                                        ('GHC.Base.Just
                                                                                           "rint")
                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                        'GHC.Generics.DecidedLazy)
                                                                                     (GHC.Generics.K1
                                                                                        GHC.Generics.R
                                                                                        [Lib.BedRecord]))
                                                                 GHC.Generics.:*: (GHC.Generics.M1
                                                                                     GHC.Generics.S
                                                                                     ('GHC.Generics.MetaSel
                                                                                        ('GHC.Base.Just
                                                                                           "pintflag")
                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                        'GHC.Generics.DecidedLazy)
                                                                                     (GHC.Generics.K1
                                                                                        GHC.Generics.R
                                                                                        GHC.Types.Bool)
                                                                                   GHC.Generics.:*: GHC.Generics.M1
                                                                                                      GHC.Generics.S
                                                                                                      ('GHC.Generics.MetaSel
                                                                                                         ('GHC.Base.Just
                                                                                                            "trimdflag")
                                                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                                                         'GHC.Generics.NoSourceStrictness
                                                                                                         'GHC.Generics.DecidedLazy)
                                                                                                      (GHC.Generics.K1
                                                                                                         GHC.Generics.R
                                                                                                         GHC.Types.Bool))))
                                              GHC.Generics.:*: (((GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       ('GHC.Base.Just "trimdpos")
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R
                                                                       GHC.Integer.Type.Integer)
                                                                  GHC.Generics.:*: GHC.Generics.M1
                                                                                     GHC.Generics.S
                                                                                     ('GHC.Generics.MetaSel
                                                                                        ('GHC.Base.Just
                                                                                           "trimdendpos")
                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                        'GHC.Generics.DecidedLazy)
                                                                                     (GHC.Generics.K1
                                                                                        GHC.Generics.R
                                                                                        GHC.Integer.Type.Integer))
                                                                 GHC.Generics.:*: (GHC.Generics.M1
                                                                                     GHC.Generics.S
                                                                                     ('GHC.Generics.MetaSel
                                                                                        ('GHC.Base.Just
                                                                                           "headerstrings")
                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                        'GHC.Generics.DecidedLazy)
                                                                                     (GHC.Generics.K1
                                                                                        GHC.Generics.R
                                                                                        Lib.Header)
                                                                                   GHC.Generics.:*: GHC.Generics.M1
                                                                                                      GHC.Generics.S
                                                                                                      ('GHC.Generics.MetaSel
                                                                                                         ('GHC.Base.Just
                                                                                                            "isheader")
                                                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                                                         'GHC.Generics.NoSourceStrictness
                                                                                                         'GHC.Generics.DecidedLazy)
                                                                                                      (GHC.Generics.K1
                                                                                                         GHC.Generics.R
                                                                                                         GHC.Types.Bool)))
                                                                GHC.Generics.:*: ((GHC.Generics.M1
                                                                                     GHC.Generics.S
                                                                                     ('GHC.Generics.MetaSel
                                                                                        ('GHC.Base.Just
                                                                                           "mid")
                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                        'GHC.Generics.DecidedLazy)
                                                                                     (GHC.Generics.K1
                                                                                        GHC.Generics.R
                                                                                        Data.ByteString.Internal.ByteString)
                                                                                   GHC.Generics.:*: GHC.Generics.M1
                                                                                                      GHC.Generics.S
                                                                                                      ('GHC.Generics.MetaSel
                                                                                                         ('GHC.Base.Just
                                                                                                            "xmid")
                                                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                                                         'GHC.Generics.NoSourceStrictness
                                                                                                         'GHC.Generics.DecidedLazy)
                                                                                                      (GHC.Generics.K1
                                                                                                         GHC.Generics.R
                                                                                                         Data.ByteString.Internal.ByteString))
                                                                                  GHC.Generics.:*: (GHC.Generics.M1
                                                                                                      GHC.Generics.S
                                                                                                      ('GHC.Generics.MetaSel
                                                                                                         ('GHC.Base.Just
                                                                                                            "tbed")
                                                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                                                         'GHC.Generics.NoSourceStrictness
                                                                                                         'GHC.Generics.DecidedLazy)
                                                                                                      (GHC.Generics.K1
                                                                                                         GHC.Generics.R
                                                                                                         Lib.BedRecord)
                                                                                                    GHC.Generics.:*: GHC.Generics.M1
                                                                                                                       GHC.Generics.S
                                                                                                                       ('GHC.Generics.MetaSel
                                                                                                                          ('GHC.Base.Just
                                                                                                                             "trimdToZeroLength")
                                                                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                                                                          'GHC.Generics.NoSourceStrictness
                                                                                                                          'GHC.Generics.DecidedLazy)
                                                                                                                       (GHC.Generics.K1
                                                                                                                          GHC.Generics.R
                                                                                                                          GHC.Types.Bool)))))>_R) <x>_N) }) -}
eb54c5795cd87d65034c776d841620e0
  $fGenericAlignedRead_$cto ::
    GHC.Generics.Rep Lib.AlignedRead x -> Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(S(S(S(LS)S(SS))S(S(SS)S(SS)))S(S(S(SS)S(SS))S(S(SS)S(SS)))),1*U(1*U(1*U(1*U(U,1*U(U,U)),1*U(1*U(U,U),1*U(U,U))),1*U(1*U(1*U(U,U),1*U(U,U)),1*U(1*U(U,U),1*U(U,U)))),1*U(1*U(1*U(1*U(U,U),1*U(U,U)),1*U(1*U(U,U),1*U(U,U))),1*U(1*U(1*U(U,U),1*U(U,U)),1*U(1*U(U,U),1*U(U,U)))))>,
     Unfolding: (\ @ x (ds6 :: GHC.Generics.Rep Lib.AlignedRead x) ->
                 case ds6
                        `cast`
                      (Trans
                           (Sub (Lib.Rep_AlignedRead[0]))
                           (Trans
                                (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.D>_P
                                     <'GHC.Generics.MetaData
                                        "AlignedRead"
                                        "Lib"
                                        "primerclip-0.3.2.0-4vTju4b4oawFuFWabKwXDg"
                                        'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "AlignedRead" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                        ((((GHC.Generics.M1
                                              GHC.Generics.S
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "qname")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.K1
                                                 GHC.Generics.R Data.ByteString.Internal.ByteString)
                                            GHC.Generics.:*: (GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "flag")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R GHC.Types.Int)
                                                              GHC.Generics.:*: GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "rname")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    Lib.UChr)))
                                           GHC.Generics.:*: ((GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "pos")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R
                                                                   GHC.Integer.Type.Integer)
                                                              GHC.Generics.:*: GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "endpos")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    GHC.Integer.Type.Integer))
                                                             GHC.Generics.:*: (GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "mapqual")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    GHC.Integer.Type.Integer)
                                                                               GHC.Generics.:*: GHC.Generics.M1
                                                                                                  GHC.Generics.S
                                                                                                  ('GHC.Generics.MetaSel
                                                                                                     ('GHC.Base.Just
                                                                                                        "cigar")
                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                  (GHC.Generics.K1
                                                                                                     GHC.Generics.R
                                                                                                     Data.ByteString.Internal.ByteString))))
                                          GHC.Generics.:*: (((GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "trimdcigar")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R
                                                                   Data.ByteString.Internal.ByteString)
                                                              GHC.Generics.:*: GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "cigmap")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    Lib.CigarMap))
                                                             GHC.Generics.:*: (GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "trimdcigmap")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    Lib.CigarMap)
                                                                               GHC.Generics.:*: GHC.Generics.M1
                                                                                                  GHC.Generics.S
                                                                                                  ('GHC.Generics.MetaSel
                                                                                                     ('GHC.Base.Just
                                                                                                        "rnext")
                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                  (GHC.Generics.K1
                                                                                                     GHC.Generics.R
                                                                                                     Data.ByteString.Internal.ByteString)))
                                                            GHC.Generics.:*: ((GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "pnext")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    GHC.Integer.Type.Integer)
                                                                               GHC.Generics.:*: GHC.Generics.M1
                                                                                                  GHC.Generics.S
                                                                                                  ('GHC.Generics.MetaSel
                                                                                                     ('GHC.Base.Just
                                                                                                        "tlen")
                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                  (GHC.Generics.K1
                                                                                                     GHC.Generics.R
                                                                                                     GHC.Integer.Type.Integer))
                                                                              GHC.Generics.:*: (GHC.Generics.M1
                                                                                                  GHC.Generics.S
                                                                                                  ('GHC.Generics.MetaSel
                                                                                                     ('GHC.Base.Just
                                                                                                        "refseq")
                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                  (GHC.Generics.K1
                                                                                                     GHC.Generics.R
                                                                                                     Data.ByteString.Internal.ByteString)
                                                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                                                   GHC.Generics.S
                                                                                                                   ('GHC.Generics.MetaSel
                                                                                                                      ('GHC.Base.Just
                                                                                                                         "basequal")
                                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                                   (GHC.Generics.K1
                                                                                                                      GHC.Generics.R
                                                                                                                      Data.ByteString.Internal.ByteString)))))
                                         GHC.Generics.:*: ((((GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "optfields")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R
                                                                   Data.ByteString.Internal.ByteString)
                                                              GHC.Generics.:*: GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "strand")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    Data.ByteString.Internal.ByteString))
                                                             GHC.Generics.:*: (GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "paired")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    GHC.Types.Bool)
                                                                               GHC.Generics.:*: GHC.Generics.M1
                                                                                                  GHC.Generics.S
                                                                                                  ('GHC.Generics.MetaSel
                                                                                                     ('GHC.Base.Just
                                                                                                        "mapped")
                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                  (GHC.Generics.K1
                                                                                                     GHC.Generics.R
                                                                                                     GHC.Types.Bool)))
                                                            GHC.Generics.:*: ((GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "fint")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    [Lib.BedRecord])
                                                                               GHC.Generics.:*: GHC.Generics.M1
                                                                                                  GHC.Generics.S
                                                                                                  ('GHC.Generics.MetaSel
                                                                                                     ('GHC.Base.Just
                                                                                                        "rint")
                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                  (GHC.Generics.K1
                                                                                                     GHC.Generics.R
                                                                                                     [Lib.BedRecord]))
                                                                              GHC.Generics.:*: (GHC.Generics.M1
                                                                                                  GHC.Generics.S
                                                                                                  ('GHC.Generics.MetaSel
                                                                                                     ('GHC.Base.Just
                                                                                                        "pintflag")
                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                  (GHC.Generics.K1
                                                                                                     GHC.Generics.R
                                                                                                     GHC.Types.Bool)
                                                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                                                   GHC.Generics.S
                                                                                                                   ('GHC.Generics.MetaSel
                                                                                                                      ('GHC.Base.Just
                                                                                                                         "trimdflag")
                                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                                   (GHC.Generics.K1
                                                                                                                      GHC.Generics.R
                                                                                                                      GHC.Types.Bool))))
                                                           GHC.Generics.:*: (((GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "trimdpos")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    GHC.Integer.Type.Integer)
                                                                               GHC.Generics.:*: GHC.Generics.M1
                                                                                                  GHC.Generics.S
                                                                                                  ('GHC.Generics.MetaSel
                                                                                                     ('GHC.Base.Just
                                                                                                        "trimdendpos")
                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                  (GHC.Generics.K1
                                                                                                     GHC.Generics.R
                                                                                                     GHC.Integer.Type.Integer))
                                                                              GHC.Generics.:*: (GHC.Generics.M1
                                                                                                  GHC.Generics.S
                                                                                                  ('GHC.Generics.MetaSel
                                                                                                     ('GHC.Base.Just
                                                                                                        "headerstrings")
                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                  (GHC.Generics.K1
                                                                                                     GHC.Generics.R
                                                                                                     Lib.Header)
                                                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                                                   GHC.Generics.S
                                                                                                                   ('GHC.Generics.MetaSel
                                                                                                                      ('GHC.Base.Just
                                                                                                                         "isheader")
                                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                                   (GHC.Generics.K1
                                                                                                                      GHC.Generics.R
                                                                                                                      GHC.Types.Bool)))
                                                                             GHC.Generics.:*: ((GHC.Generics.M1
                                                                                                  GHC.Generics.S
                                                                                                  ('GHC.Generics.MetaSel
                                                                                                     ('GHC.Base.Just
                                                                                                        "mid")
                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                  (GHC.Generics.K1
                                                                                                     GHC.Generics.R
                                                                                                     Data.ByteString.Internal.ByteString)
                                                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                                                   GHC.Generics.S
                                                                                                                   ('GHC.Generics.MetaSel
                                                                                                                      ('GHC.Base.Just
                                                                                                                         "xmid")
                                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                                   (GHC.Generics.K1
                                                                                                                      GHC.Generics.R
                                                                                                                      Data.ByteString.Internal.ByteString))
                                                                                               GHC.Generics.:*: (GHC.Generics.M1
                                                                                                                   GHC.Generics.S
                                                                                                                   ('GHC.Generics.MetaSel
                                                                                                                      ('GHC.Base.Just
                                                                                                                         "tbed")
                                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                                   (GHC.Generics.K1
                                                                                                                      GHC.Generics.R
                                                                                                                      Lib.BedRecord)
                                                                                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                    GHC.Generics.S
                                                                                                                                    ('GHC.Generics.MetaSel
                                                                                                                                       ('GHC.Base.Just
                                                                                                                                          "trimdToZeroLength")
                                                                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                                                                       'GHC.Generics.DecidedLazy)
                                                                                                                                    (GHC.Generics.K1
                                                                                                                                       GHC.Generics.R
                                                                                                                                       GHC.Types.Bool))))))>_R)
                                (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "AlignedRead" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <(((GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "qname")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1
                                              GHC.Generics.R Data.ByteString.Internal.ByteString)
                                         GHC.Generics.:*: (GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "flag")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R GHC.Types.Int)
                                                           GHC.Generics.:*: GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "rname")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 Lib.UChr)))
                                        GHC.Generics.:*: ((GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "pos")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R
                                                                GHC.Integer.Type.Integer)
                                                           GHC.Generics.:*: GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "endpos")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 GHC.Integer.Type.Integer))
                                                          GHC.Generics.:*: (GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "mapqual")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 GHC.Integer.Type.Integer)
                                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                                               GHC.Generics.S
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Base.Just
                                                                                                     "cigar")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.K1
                                                                                                  GHC.Generics.R
                                                                                                  Data.ByteString.Internal.ByteString))))
                                       GHC.Generics.:*: (((GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "trimdcigar")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R
                                                                Data.ByteString.Internal.ByteString)
                                                           GHC.Generics.:*: GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "cigmap")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 Lib.CigarMap))
                                                          GHC.Generics.:*: (GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "trimdcigmap")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 Lib.CigarMap)
                                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                                               GHC.Generics.S
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Base.Just
                                                                                                     "rnext")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.K1
                                                                                                  GHC.Generics.R
                                                                                                  Data.ByteString.Internal.ByteString)))
                                                         GHC.Generics.:*: ((GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "pnext")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 GHC.Integer.Type.Integer)
                                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                                               GHC.Generics.S
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Base.Just
                                                                                                     "tlen")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.K1
                                                                                                  GHC.Generics.R
                                                                                                  GHC.Integer.Type.Integer))
                                                                           GHC.Generics.:*: (GHC.Generics.M1
                                                                                               GHC.Generics.S
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Base.Just
                                                                                                     "refseq")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.K1
                                                                                                  GHC.Generics.R
                                                                                                  Data.ByteString.Internal.ByteString)
                                                                                             GHC.Generics.:*: GHC.Generics.M1
                                                                                                                GHC.Generics.S
                                                                                                                ('GHC.Generics.MetaSel
                                                                                                                   ('GHC.Base.Just
                                                                                                                      "basequal")
                                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                                (GHC.Generics.K1
                                                                                                                   GHC.Generics.R
                                                                                                                   Data.ByteString.Internal.ByteString)))))
                                      GHC.Generics.:*: ((((GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "optfields")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R
                                                                Data.ByteString.Internal.ByteString)
                                                           GHC.Generics.:*: GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "strand")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 Data.ByteString.Internal.ByteString))
                                                          GHC.Generics.:*: (GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "paired")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 GHC.Types.Bool)
                                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                                               GHC.Generics.S
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Base.Just
                                                                                                     "mapped")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.K1
                                                                                                  GHC.Generics.R
                                                                                                  GHC.Types.Bool)))
                                                         GHC.Generics.:*: ((GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "fint")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 [Lib.BedRecord])
                                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                                               GHC.Generics.S
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Base.Just
                                                                                                     "rint")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.K1
                                                                                                  GHC.Generics.R
                                                                                                  [Lib.BedRecord]))
                                                                           GHC.Generics.:*: (GHC.Generics.M1
                                                                                               GHC.Generics.S
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Base.Just
                                                                                                     "pintflag")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.K1
                                                                                                  GHC.Generics.R
                                                                                                  GHC.Types.Bool)
                                                                                             GHC.Generics.:*: GHC.Generics.M1
                                                                                                                GHC.Generics.S
                                                                                                                ('GHC.Generics.MetaSel
                                                                                                                   ('GHC.Base.Just
                                                                                                                      "trimdflag")
                                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                                (GHC.Generics.K1
                                                                                                                   GHC.Generics.R
                                                                                                                   GHC.Types.Bool))))
                                                        GHC.Generics.:*: (((GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "trimdpos")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 GHC.Integer.Type.Integer)
                                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                                               GHC.Generics.S
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Base.Just
                                                                                                     "trimdendpos")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.K1
                                                                                                  GHC.Generics.R
                                                                                                  GHC.Integer.Type.Integer))
                                                                           GHC.Generics.:*: (GHC.Generics.M1
                                                                                               GHC.Generics.S
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Base.Just
                                                                                                     "headerstrings")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.K1
                                                                                                  GHC.Generics.R
                                                                                                  Lib.Header)
                                                                                             GHC.Generics.:*: GHC.Generics.M1
                                                                                                                GHC.Generics.S
                                                                                                                ('GHC.Generics.MetaSel
                                                                                                                   ('GHC.Base.Just
                                                                                                                      "isheader")
                                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                                (GHC.Generics.K1
                                                                                                                   GHC.Generics.R
                                                                                                                   GHC.Types.Bool)))
                                                                          GHC.Generics.:*: ((GHC.Generics.M1
                                                                                               GHC.Generics.S
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Base.Just
                                                                                                     "mid")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.K1
                                                                                                  GHC.Generics.R
                                                                                                  Data.ByteString.Internal.ByteString)
                                                                                             GHC.Generics.:*: GHC.Generics.M1
                                                                                                                GHC.Generics.S
                                                                                                                ('GHC.Generics.MetaSel
                                                                                                                   ('GHC.Base.Just
                                                                                                                      "xmid")
                                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                                (GHC.Generics.K1
                                                                                                                   GHC.Generics.R
                                                                                                                   Data.ByteString.Internal.ByteString))
                                                                                            GHC.Generics.:*: (GHC.Generics.M1
                                                                                                                GHC.Generics.S
                                                                                                                ('GHC.Generics.MetaSel
                                                                                                                   ('GHC.Base.Just
                                                                                                                      "tbed")
                                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                                (GHC.Generics.K1
                                                                                                                   GHC.Generics.R
                                                                                                                   Lib.BedRecord)
                                                                                                              GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                 GHC.Generics.S
                                                                                                                                 ('GHC.Generics.MetaSel
                                                                                                                                    ('GHC.Base.Just
                                                                                                                                       "trimdToZeroLength")
                                                                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                                                                    'GHC.Generics.DecidedLazy)
                                                                                                                                 (GHC.Generics.K1
                                                                                                                                    GHC.Generics.R
                                                                                                                                    GHC.Types.Bool)))))>_R)) <x>_N) of wild { GHC.Generics.:*: ds7 ds8 ->
                 case ds7 of wild1 { GHC.Generics.:*: ds9 ds10 ->
                 case ds9 of wild2 { GHC.Generics.:*: ds11 ds12 ->
                 case ds11 of wild3 { GHC.Generics.:*: ds13 ds14 ->
                 case ds14 of wild4 { GHC.Generics.:*: ds15 ds16 ->
                 case ds12 of wild5 { GHC.Generics.:*: ds17 ds18 ->
                 case ds17 of wild6 { GHC.Generics.:*: ds19 ds20 ->
                 case ds18 of wild7 { GHC.Generics.:*: ds21 ds22 ->
                 case ds10 of wild8 { GHC.Generics.:*: ds23 ds24 ->
                 case ds23 of wild9 { GHC.Generics.:*: ds25 ds26 ->
                 case ds25 of wild10 { GHC.Generics.:*: ds27 ds28 ->
                 case ds26 of wild11 { GHC.Generics.:*: ds29 ds30 ->
                 case ds24 of wild12 { GHC.Generics.:*: ds31 ds32 ->
                 case ds31 of wild13 { GHC.Generics.:*: ds33 ds34 ->
                 case ds32 of wild14 { GHC.Generics.:*: ds35 ds36 ->
                 case ds8 of wild15 { GHC.Generics.:*: ds37 ds38 ->
                 case ds37 of wild16 { GHC.Generics.:*: ds39 ds40 ->
                 case ds39 of wild17 { GHC.Generics.:*: ds41 ds42 ->
                 case ds41 of wild18 { GHC.Generics.:*: ds43 ds44 ->
                 case ds42 of wild19 { GHC.Generics.:*: ds45 ds46 ->
                 case ds40 of wild20 { GHC.Generics.:*: ds47 ds48 ->
                 case ds47 of wild21 { GHC.Generics.:*: ds49 ds50 ->
                 case ds48 of wild22 { GHC.Generics.:*: ds51 ds52 ->
                 case ds38 of wild23 { GHC.Generics.:*: ds53 ds54 ->
                 case ds53 of wild24 { GHC.Generics.:*: ds55 ds56 ->
                 case ds55 of wild25 { GHC.Generics.:*: ds57 ds58 ->
                 case ds56 of wild26 { GHC.Generics.:*: ds59 ds60 ->
                 case ds54 of wild27 { GHC.Generics.:*: ds61 ds62 ->
                 case ds61 of wild28 { GHC.Generics.:*: ds63 ds64 ->
                 case ds62 of wild29 { GHC.Generics.:*: ds65 ds66 ->
                 Lib.AlignedRead
                   ds13
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "qname")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N
                             <GHC.Generics.R>_P
                             <Data.ByteString.Internal.ByteString>_R
                             <x>_P))
                   ds15
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "flag")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Types.Int>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Types.Int>_R <x>_P))
                   ds16
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "rname")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R Lib.UChr>_R <x>_N)
                        (GHC.Generics.N:K1[0] <*>_N <GHC.Generics.R>_P <Lib.UChr>_R <x>_P))
                   ds19
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "pos")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ds20
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "endpos")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ds21
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "mapqual")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ds22
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "cigar")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N
                             <GHC.Generics.R>_P
                             <Data.ByteString.Internal.ByteString>_R
                             <x>_P))
                   ds27
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "trimdcigar")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N
                             <GHC.Generics.R>_P
                             <Data.ByteString.Internal.ByteString>_R
                             <x>_P))
                   ds28
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "cigmap")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R Lib.CigarMap>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <Lib.CigarMap>_R <x>_P))
                   ds29
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "trimdcigmap")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R Lib.CigarMap>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <Lib.CigarMap>_R <x>_P))
                   ds30
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "rnext")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N
                             <GHC.Generics.R>_P
                             <Data.ByteString.Internal.ByteString>_R
                             <x>_P))
                   ds33
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "pnext")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ds34
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "tlen")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ds35
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "refseq")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N
                             <GHC.Generics.R>_P
                             <Data.ByteString.Internal.ByteString>_R
                             <x>_P))
                   ds36
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "basequal")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N
                             <GHC.Generics.R>_P
                             <Data.ByteString.Internal.ByteString>_R
                             <x>_P))
                   ds43
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "optfields")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N
                             <GHC.Generics.R>_P
                             <Data.ByteString.Internal.ByteString>_R
                             <x>_P))
                   ds44
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "strand")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N
                             <GHC.Generics.R>_P
                             <Data.ByteString.Internal.ByteString>_R
                             <x>_P))
                   ds45
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "paired")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Types.Bool>_R <x>_P))
                   ds46
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "mapped")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Types.Bool>_R <x>_P))
                   ds49
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "fint")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R [Lib.BedRecord]>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <[Lib.BedRecord]>_R <x>_P))
                   ds50
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "rint")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R [Lib.BedRecord]>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <[Lib.BedRecord]>_R <x>_P))
                   ds51
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "pintflag")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Types.Bool>_R <x>_P))
                   ds52
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "trimdflag")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Types.Bool>_R <x>_P))
                   ds57
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "trimdpos")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ds58
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "trimdendpos")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ds59
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "headerstrings")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R Lib.Header>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <Lib.Header>_R <x>_P))
                   ds60
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "isheader")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Types.Bool>_R <x>_P))
                   ds63
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "mid")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N
                             <GHC.Generics.R>_P
                             <Data.ByteString.Internal.ByteString>_R
                             <x>_P))
                   ds64
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "xmid")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N
                             <GHC.Generics.R>_P
                             <Data.ByteString.Internal.ByteString>_R
                             <x>_P))
                   ds65
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "tbed")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R Lib.BedRecord>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <Lib.BedRecord>_R <x>_P))
                   ds66
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "trimdToZeroLength")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N
                             <GHC.Generics.R>_P
                             <GHC.Types.Bool>_R
                             <x>_P)) } } } } } } } } } } } } } } } } } } } } } } } } } } } } } }) -}
1fc0d837b61ebbaa17edd71f0be30382
  $fGenericBEDPE :: GHC.Generics.Generic Lib.BEDPE
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.BEDPE
                  Lib.$fGenericBEDPE1
                    `cast`
                  (forall (x :: <*>_N).
                   <Lib.BEDPE>_R
                   ->_R Trans
                            (Sym (GHC.Generics.N:M1[0]
                                      <*>_N
                                      <GHC.Generics.D>_P
                                      <'GHC.Generics.MetaData
                                         "BEDPE"
                                         "Lib"
                                         "primerclip-0.3.2.0-4vTju4b4oawFuFWabKwXDg"
                                         'GHC.Types.False>_P
                                      <GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "BEDPE" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                         ((GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "chr1")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                                           GHC.Generics.:*: (GHC.Generics.M1
                                                               GHC.Generics.S
                                                               ('GHC.Generics.MetaSel
                                                                  ('GHC.Base.Just "start1")
                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                  'GHC.Generics.NoSourceStrictness
                                                                  'GHC.Generics.DecidedLazy)
                                                               (GHC.Generics.K1
                                                                  GHC.Generics.R
                                                                  GHC.Integer.Type.Integer)
                                                             GHC.Generics.:*: GHC.Generics.M1
                                                                                GHC.Generics.S
                                                                                ('GHC.Generics.MetaSel
                                                                                   ('GHC.Base.Just
                                                                                      "end1")
                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                   'GHC.Generics.DecidedLazy)
                                                                                (GHC.Generics.K1
                                                                                   GHC.Generics.R
                                                                                   GHC.Integer.Type.Integer)))
                                          GHC.Generics.:*: ((GHC.Generics.M1
                                                               GHC.Generics.S
                                                               ('GHC.Generics.MetaSel
                                                                  ('GHC.Base.Just "chr2")
                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                  'GHC.Generics.NoSourceStrictness
                                                                  'GHC.Generics.DecidedLazy)
                                                               (GHC.Generics.K1
                                                                  GHC.Generics.R Lib.UChr)
                                                             GHC.Generics.:*: GHC.Generics.M1
                                                                                GHC.Generics.S
                                                                                ('GHC.Generics.MetaSel
                                                                                   ('GHC.Base.Just
                                                                                      "start2")
                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                   'GHC.Generics.DecidedLazy)
                                                                                (GHC.Generics.K1
                                                                                   GHC.Generics.R
                                                                                   GHC.Integer.Type.Integer))
                                                            GHC.Generics.:*: (GHC.Generics.M1
                                                                                GHC.Generics.S
                                                                                ('GHC.Generics.MetaSel
                                                                                   ('GHC.Base.Just
                                                                                      "end2")
                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                   'GHC.Generics.DecidedLazy)
                                                                                (GHC.Generics.K1
                                                                                   GHC.Generics.R
                                                                                   GHC.Integer.Type.Integer)
                                                                              GHC.Generics.:*: GHC.Generics.M1
                                                                                                 GHC.Generics.S
                                                                                                 ('GHC.Generics.MetaSel
                                                                                                    ('GHC.Base.Just
                                                                                                       "bedpename")
                                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                                    'GHC.Generics.DecidedLazy)
                                                                                                 (GHC.Generics.K1
                                                                                                    GHC.Generics.R
                                                                                                    Data.ByteString.Internal.ByteString))))>_R))
                            (Sub (Sym (Lib.Rep_BEDPE[0]))) <x>_N)
                  Lib.$fGenericBEDPE_$cto -}
1fc0d837b61ebbaa17edd71f0be30382
  $fGenericBEDPE1 ::
    Lib.BEDPE
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "BEDPE" 'GHC.Generics.PrefixI 'GHC.Types.True)
         ((GHC.Generics.M1
             GHC.Generics.S
             ('GHC.Generics.MetaSel
                ('GHC.Base.Just "chr1")
                'GHC.Generics.NoSourceUnpackedness
                'GHC.Generics.NoSourceStrictness
                'GHC.Generics.DecidedLazy)
             (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
           GHC.Generics.:*: (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "start1")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                             GHC.Generics.:*: GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "end1")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R GHC.Integer.Type.Integer)))
          GHC.Generics.:*: ((GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "chr2")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                             GHC.Generics.:*: GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "start2")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R GHC.Integer.Type.Integer))
                            GHC.Generics.:*: (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "end2")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R GHC.Integer.Type.Integer)
                                              GHC.Generics.:*: GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Base.Just "bedpename")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    Data.ByteString.Internal.ByteString))))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U,U,U,U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: Lib.BEDPE) ->
                 case x1 of wild { Lib.BEDPE g1 g2 g3 g4 g5 g6 g7 ->
                 (GHC.Generics.:*:
                    @ *
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "chr1")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                       GHC.Generics.:*: (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "start1")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "end1")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R
                                                               GHC.Integer.Type.Integer)))
                    @ ((GHC.Generics.M1
                          GHC.Generics.S
                          ('GHC.Generics.MetaSel
                             ('GHC.Base.Just "chr2")
                             'GHC.Generics.NoSourceUnpackedness
                             'GHC.Generics.NoSourceStrictness
                             'GHC.Generics.DecidedLazy)
                          (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                        GHC.Generics.:*: GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "start2")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1
                                              GHC.Generics.R GHC.Integer.Type.Integer))
                       GHC.Generics.:*: (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "end2")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "bedpename")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R
                                                               Data.ByteString.Internal.ByteString)))
                    @ x
                    (GHC.Generics.:*:
                       @ *
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "chr1")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R Lib.UChr))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "start1")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                          GHC.Generics.:*: GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "end1")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R GHC.Integer.Type.Integer))
                       @ x
                       g1
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <*>_N <GHC.Generics.R>_P <Lib.UChr>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <*>_N
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "chr1")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1 GHC.Generics.R Lib.UChr>_R) <x>_N))
                       (GHC.Generics.:*:
                          @ *
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "start1")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "end1")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                          @ x
                          g2
                            `cast`
                          (Trans
                               (Sym (GHC.Generics.N:K1[0]
                                         <*>_N
                                         <GHC.Generics.R>_P
                                         <GHC.Integer.Type.Integer>_R
                                         <x>_P))
                               (Sym (GHC.Generics.N:M1[0]
                                         <*>_N
                                         <GHC.Generics.S>_P
                                         <'GHC.Generics.MetaSel
                                            ('GHC.Base.Just "start1")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy>_P
                                         <GHC.Generics.K1
                                            GHC.Generics.R GHC.Integer.Type.Integer>_R) <x>_N))
                          g3
                            `cast`
                          (Trans
                               (Sym (GHC.Generics.N:K1[0]
                                         <*>_N
                                         <GHC.Generics.R>_P
                                         <GHC.Integer.Type.Integer>_R
                                         <x>_P))
                               (Sym (GHC.Generics.N:M1[0]
                                         <*>_N
                                         <GHC.Generics.S>_P
                                         <'GHC.Generics.MetaSel
                                            ('GHC.Base.Just "end1")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy>_P
                                         <GHC.Generics.K1
                                            GHC.Generics.R GHC.Integer.Type.Integer>_R) <x>_N))))
                    (GHC.Generics.:*:
                       @ *
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "chr2")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                          GHC.Generics.:*: GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "start2")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R GHC.Integer.Type.Integer))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "end2")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                          GHC.Generics.:*: GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "bedpename")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R Data.ByteString.Internal.ByteString))
                       @ x
                       (GHC.Generics.:*:
                          @ *
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "chr2")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R Lib.UChr))
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "start2")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                          @ x
                          g4
                            `cast`
                          (Trans
                               (Sym (GHC.Generics.N:K1[0]
                                         <*>_N <GHC.Generics.R>_P <Lib.UChr>_R <x>_P))
                               (Sym (GHC.Generics.N:M1[0]
                                         <*>_N
                                         <GHC.Generics.S>_P
                                         <'GHC.Generics.MetaSel
                                            ('GHC.Base.Just "chr2")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy>_P
                                         <GHC.Generics.K1 GHC.Generics.R Lib.UChr>_R) <x>_N))
                          g5
                            `cast`
                          (Trans
                               (Sym (GHC.Generics.N:K1[0]
                                         <*>_N
                                         <GHC.Generics.R>_P
                                         <GHC.Integer.Type.Integer>_R
                                         <x>_P))
                               (Sym (GHC.Generics.N:M1[0]
                                         <*>_N
                                         <GHC.Generics.S>_P
                                         <'GHC.Generics.MetaSel
                                            ('GHC.Base.Just "start2")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy>_P
                                         <GHC.Generics.K1
                                            GHC.Generics.R GHC.Integer.Type.Integer>_R) <x>_N)))
                       (GHC.Generics.:*:
                          @ *
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "end2")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "bedpename")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1
                                  GHC.Generics.R Data.ByteString.Internal.ByteString))
                          @ x
                          g6
                            `cast`
                          (Trans
                               (Sym (GHC.Generics.N:K1[0]
                                         <*>_N
                                         <GHC.Generics.R>_P
                                         <GHC.Integer.Type.Integer>_R
                                         <x>_P))
                               (Sym (GHC.Generics.N:M1[0]
                                         <*>_N
                                         <GHC.Generics.S>_P
                                         <'GHC.Generics.MetaSel
                                            ('GHC.Base.Just "end2")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy>_P
                                         <GHC.Generics.K1
                                            GHC.Generics.R GHC.Integer.Type.Integer>_R) <x>_N))
                          g7
                            `cast`
                          (Trans
                               (Sym (GHC.Generics.N:K1[0]
                                         <*>_N
                                         <GHC.Generics.R>_P
                                         <Data.ByteString.Internal.ByteString>_R
                                         <x>_P))
                               (Sym (GHC.Generics.N:M1[0]
                                         <*>_N
                                         <GHC.Generics.S>_P
                                         <'GHC.Generics.MetaSel
                                            ('GHC.Base.Just "bedpename")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy>_P
                                         <GHC.Generics.K1
                                            GHC.Generics.R
                                            Data.ByteString.Internal.ByteString>_R) <x>_N)))))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <*>_N
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "BEDPE" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <(GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "chr1")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                             GHC.Generics.:*: (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "start1")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R GHC.Integer.Type.Integer)
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "end1")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     GHC.Integer.Type.Integer)))
                            GHC.Generics.:*: ((GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "chr2")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "start2")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     GHC.Integer.Type.Integer))
                                              GHC.Generics.:*: (GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "end2")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     GHC.Integer.Type.Integer)
                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                   GHC.Generics.S
                                                                                   ('GHC.Generics.MetaSel
                                                                                      ('GHC.Base.Just
                                                                                         "bedpename")
                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                      'GHC.Generics.DecidedLazy)
                                                                                   (GHC.Generics.K1
                                                                                      GHC.Generics.R
                                                                                      Data.ByteString.Internal.ByteString)))>_R) <x>_N) }) -}
1fc0d837b61ebbaa17edd71f0be30382
  $fGenericBEDPE_$cto :: GHC.Generics.Rep Lib.BEDPE x -> Lib.BEDPE
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(S(LS)S(SS)),1*U(1*U(U,1*U(U,U)),1*U(1*U(U,U),1*U(U,U)))>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (ds6 :: GHC.Generics.Rep Lib.BEDPE x) ->
                 case ds6
                        `cast`
                      (Trans
                           (Sub (Lib.Rep_BEDPE[0]))
                           (Trans
                                (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.D>_P
                                     <'GHC.Generics.MetaData
                                        "BEDPE"
                                        "Lib"
                                        "primerclip-0.3.2.0-4vTju4b4oawFuFWabKwXDg"
                                        'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "BEDPE" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                        ((GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "chr1")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                                          GHC.Generics.:*: (GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "start1")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 GHC.Integer.Type.Integer)
                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "end1")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  GHC.Integer.Type.Integer)))
                                         GHC.Generics.:*: ((GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "chr2")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R Lib.UChr)
                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "start2")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  GHC.Integer.Type.Integer))
                                                           GHC.Generics.:*: (GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "end2")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  GHC.Integer.Type.Integer)
                                                                             GHC.Generics.:*: GHC.Generics.M1
                                                                                                GHC.Generics.S
                                                                                                ('GHC.Generics.MetaSel
                                                                                                   ('GHC.Base.Just
                                                                                                      "bedpename")
                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                (GHC.Generics.K1
                                                                                                   GHC.Generics.R
                                                                                                   Data.ByteString.Internal.ByteString))))>_R)
                                (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "BEDPE" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <(GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "chr1")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                                       GHC.Generics.:*: (GHC.Generics.M1
                                                           GHC.Generics.S
                                                           ('GHC.Generics.MetaSel
                                                              ('GHC.Base.Just "start1")
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.K1
                                                              GHC.Generics.R
                                                              GHC.Integer.Type.Integer)
                                                         GHC.Generics.:*: GHC.Generics.M1
                                                                            GHC.Generics.S
                                                                            ('GHC.Generics.MetaSel
                                                                               ('GHC.Base.Just
                                                                                  "end1")
                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                               'GHC.Generics.NoSourceStrictness
                                                                               'GHC.Generics.DecidedLazy)
                                                                            (GHC.Generics.K1
                                                                               GHC.Generics.R
                                                                               GHC.Integer.Type.Integer)))
                                      GHC.Generics.:*: ((GHC.Generics.M1
                                                           GHC.Generics.S
                                                           ('GHC.Generics.MetaSel
                                                              ('GHC.Base.Just "chr2")
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                                                         GHC.Generics.:*: GHC.Generics.M1
                                                                            GHC.Generics.S
                                                                            ('GHC.Generics.MetaSel
                                                                               ('GHC.Base.Just
                                                                                  "start2")
                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                               'GHC.Generics.NoSourceStrictness
                                                                               'GHC.Generics.DecidedLazy)
                                                                            (GHC.Generics.K1
                                                                               GHC.Generics.R
                                                                               GHC.Integer.Type.Integer))
                                                        GHC.Generics.:*: (GHC.Generics.M1
                                                                            GHC.Generics.S
                                                                            ('GHC.Generics.MetaSel
                                                                               ('GHC.Base.Just
                                                                                  "end2")
                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                               'GHC.Generics.NoSourceStrictness
                                                                               'GHC.Generics.DecidedLazy)
                                                                            (GHC.Generics.K1
                                                                               GHC.Generics.R
                                                                               GHC.Integer.Type.Integer)
                                                                          GHC.Generics.:*: GHC.Generics.M1
                                                                                             GHC.Generics.S
                                                                                             ('GHC.Generics.MetaSel
                                                                                                ('GHC.Base.Just
                                                                                                   "bedpename")
                                                                                                'GHC.Generics.NoSourceUnpackedness
                                                                                                'GHC.Generics.NoSourceStrictness
                                                                                                'GHC.Generics.DecidedLazy)
                                                                                             (GHC.Generics.K1
                                                                                                GHC.Generics.R
                                                                                                Data.ByteString.Internal.ByteString)))>_R)) <x>_N) of wild { GHC.Generics.:*: ds7 ds8 ->
                 case ds7 of wild1 { GHC.Generics.:*: ds9 ds10 ->
                 case ds10 of wild2 { GHC.Generics.:*: ds11 ds12 ->
                 case ds8 of wild3 { GHC.Generics.:*: ds13 ds14 ->
                 case ds13 of wild4 { GHC.Generics.:*: ds15 ds16 ->
                 case ds14 of wild5 { GHC.Generics.:*: ds17 ds18 ->
                 Lib.BEDPE
                   ds9
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "chr1")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R Lib.UChr>_R <x>_N)
                        (GHC.Generics.N:K1[0] <*>_N <GHC.Generics.R>_P <Lib.UChr>_R <x>_P))
                   ds11
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "start1")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ds12
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "end1")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ds15
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "chr2")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R Lib.UChr>_R <x>_N)
                        (GHC.Generics.N:K1[0] <*>_N <GHC.Generics.R>_P <Lib.UChr>_R <x>_P))
                   ds16
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "start2")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ds17
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "end2")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ds18
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "bedpename")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N
                             <GHC.Generics.R>_P
                             <Data.ByteString.Internal.ByteString>_R
                             <x>_P)) } } } } } }) -}
863cf0b2559e3e0bbf1758c760210fb2
  $fGenericBedRecord :: GHC.Generics.Generic Lib.BedRecord
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.BedRecord
                  Lib.$fGenericBedRecord1
                    `cast`
                  (forall (x :: <*>_N).
                   <Lib.BedRecord>_R
                   ->_R Trans
                            (Sym (GHC.Generics.N:M1[0]
                                      <*>_N
                                      <GHC.Generics.D>_P
                                      <'GHC.Generics.MetaData
                                         "BedRecord"
                                         "Lib"
                                         "primerclip-0.3.2.0-4vTju4b4oawFuFWabKwXDg"
                                         'GHC.Types.False>_P
                                      <GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "BedRecord" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                         ((GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "bedchr")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                                           GHC.Generics.:*: GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "bedstart")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 GHC.Integer.Type.Integer))
                                          GHC.Generics.:*: (GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "bedend")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 GHC.Integer.Type.Integer)
                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "bedname")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  Data.ByteString.Internal.ByteString)))>_R))
                            (Sub (Sym (Lib.Rep_BedRecord[0]))) <x>_N)
                  Lib.$fGenericBedRecord_$cto -}
863cf0b2559e3e0bbf1758c760210fb2
  $fGenericBedRecord1 ::
    Lib.BedRecord
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "BedRecord" 'GHC.Generics.PrefixI 'GHC.Types.True)
         ((GHC.Generics.M1
             GHC.Generics.S
             ('GHC.Generics.MetaSel
                ('GHC.Base.Just "bedchr")
                'GHC.Generics.NoSourceUnpackedness
                'GHC.Generics.NoSourceStrictness
                'GHC.Generics.DecidedLazy)
             (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
           GHC.Generics.:*: GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "bedstart")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
          GHC.Generics.:*: (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "bedend")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                            GHC.Generics.:*: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "bedname")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString)))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: Lib.BedRecord) ->
                 case x1 of wild { Lib.BedRecord g1 g2 g3 g4 ->
                 (GHC.Generics.:*:
                    @ *
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "bedchr")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                       GHC.Generics.:*: GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "bedstart")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "bedend")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                       GHC.Generics.:*: GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "bedname")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1
                                             GHC.Generics.R Data.ByteString.Internal.ByteString))
                    @ x
                    (GHC.Generics.:*:
                       @ *
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "bedchr")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R Lib.UChr))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "bedstart")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                       @ x
                       g1
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <*>_N <GHC.Generics.R>_P <Lib.UChr>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <*>_N
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "bedchr")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1 GHC.Generics.R Lib.UChr>_R) <x>_N))
                       g2
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <*>_N <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <*>_N
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "bedstart")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1
                                         GHC.Generics.R GHC.Integer.Type.Integer>_R) <x>_N)))
                    (GHC.Generics.:*:
                       @ *
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "bedend")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "bedname")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1
                               GHC.Generics.R Data.ByteString.Internal.ByteString))
                       @ x
                       g3
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <*>_N <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <*>_N
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "bedend")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1
                                         GHC.Generics.R GHC.Integer.Type.Integer>_R) <x>_N))
                       g4
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <*>_N
                                      <GHC.Generics.R>_P
                                      <Data.ByteString.Internal.ByteString>_R
                                      <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <*>_N
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "bedname")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1
                                         GHC.Generics.R
                                         Data.ByteString.Internal.ByteString>_R) <x>_N))))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <*>_N
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "BedRecord" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <(GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "bedchr")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                             GHC.Generics.:*: GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "bedstart")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R GHC.Integer.Type.Integer))
                            GHC.Generics.:*: (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "bedend")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R GHC.Integer.Type.Integer)
                                              GHC.Generics.:*: GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Base.Just "bedname")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    Data.ByteString.Internal.ByteString))>_R) <x>_N) }) -}
863cf0b2559e3e0bbf1758c760210fb2
  $fGenericBedRecord_$cto ::
    GHC.Generics.Rep Lib.BedRecord x -> Lib.BedRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SS),1*U(1*U(U,U),1*U(U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (ds6 :: GHC.Generics.Rep Lib.BedRecord x) ->
                 case ds6
                        `cast`
                      (Trans
                           (Sub (Lib.Rep_BedRecord[0]))
                           (Trans
                                (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.D>_P
                                     <'GHC.Generics.MetaData
                                        "BedRecord"
                                        "Lib"
                                        "primerclip-0.3.2.0-4vTju4b4oawFuFWabKwXDg"
                                        'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "BedRecord" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                        ((GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "bedchr")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                                          GHC.Generics.:*: GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "bedstart")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R
                                                                GHC.Integer.Type.Integer))
                                         GHC.Generics.:*: (GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "bedend")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R
                                                                GHC.Integer.Type.Integer)
                                                           GHC.Generics.:*: GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "bedname")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 Data.ByteString.Internal.ByteString)))>_R)
                                (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "BedRecord" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <(GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "bedchr")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                                       GHC.Generics.:*: GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "bedstart")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R
                                                             GHC.Integer.Type.Integer))
                                      GHC.Generics.:*: (GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "bedend")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R
                                                             GHC.Integer.Type.Integer)
                                                        GHC.Generics.:*: GHC.Generics.M1
                                                                           GHC.Generics.S
                                                                           ('GHC.Generics.MetaSel
                                                                              ('GHC.Base.Just
                                                                                 "bedname")
                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                              'GHC.Generics.NoSourceStrictness
                                                                              'GHC.Generics.DecidedLazy)
                                                                           (GHC.Generics.K1
                                                                              GHC.Generics.R
                                                                              Data.ByteString.Internal.ByteString))>_R)) <x>_N) of wild { GHC.Generics.:*: ds7 ds8 ->
                 case ds7 of wild1 { GHC.Generics.:*: ds9 ds10 ->
                 case ds8 of wild2 { GHC.Generics.:*: ds11 ds12 ->
                 Lib.BedRecord
                   ds9
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "bedchr")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R Lib.UChr>_R <x>_N)
                        (GHC.Generics.N:K1[0] <*>_N <GHC.Generics.R>_P <Lib.UChr>_R <x>_P))
                   ds10
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "bedstart")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ds11
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "bedend")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ds12
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "bedname")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N
                             <GHC.Generics.R>_P
                             <Data.ByteString.Internal.ByteString>_R
                             <x>_P)) } } }) -}
eb54c5795cd87d65034c776d841620e0
  $fGenericPairedAln :: GHC.Generics.Generic Lib.PairedAln
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.PairedAln
                  Lib.$fGenericPairedAln1
                    `cast`
                  (forall (x :: <*>_N).
                   <Lib.PairedAln>_R
                   ->_R Trans
                            (Sym (GHC.Generics.N:M1[0]
                                      <*>_N
                                      <GHC.Generics.D>_P
                                      <'GHC.Generics.MetaData
                                         "PairedAln"
                                         "Lib"
                                         "primerclip-0.3.2.0-4vTju4b4oawFuFWabKwXDg"
                                         'GHC.Types.False>_P
                                      <GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "PairedAln" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                         ((GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "r1prim")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1 GHC.Generics.R Lib.AlignedRead)
                                           GHC.Generics.:*: GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "r2prim")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R Lib.AlignedRead))
                                          GHC.Generics.:*: (GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "r1secs")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R [Lib.AlignedRead])
                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "r2secs")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  [Lib.AlignedRead])))>_R))
                            (Sub (Sym (Lib.Rep_PairedAln[0]))) <x>_N)
                  Lib.$fGenericPairedAln_$cto -}
eb54c5795cd87d65034c776d841620e0
  $fGenericPairedAln1 ::
    Lib.PairedAln
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "PairedAln" 'GHC.Generics.PrefixI 'GHC.Types.True)
         ((GHC.Generics.M1
             GHC.Generics.S
             ('GHC.Generics.MetaSel
                ('GHC.Base.Just "r1prim")
                'GHC.Generics.NoSourceUnpackedness
                'GHC.Generics.NoSourceStrictness
                'GHC.Generics.DecidedLazy)
             (GHC.Generics.K1 GHC.Generics.R Lib.AlignedRead)
           GHC.Generics.:*: GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "r2prim")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R Lib.AlignedRead))
          GHC.Generics.:*: (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "r1secs")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R [Lib.AlignedRead])
                            GHC.Generics.:*: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "r2secs")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1 GHC.Generics.R [Lib.AlignedRead])))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: Lib.PairedAln) ->
                 case x1 of wild { Lib.PairedAln g1 g2 g3 g4 ->
                 (GHC.Generics.:*:
                    @ *
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "r1prim")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R Lib.AlignedRead)
                       GHC.Generics.:*: GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "r2prim")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1 GHC.Generics.R Lib.AlignedRead))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "r1secs")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R [Lib.AlignedRead])
                       GHC.Generics.:*: GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "r2secs")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1 GHC.Generics.R [Lib.AlignedRead]))
                    @ x
                    (GHC.Generics.:*:
                       @ *
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "r1prim")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R Lib.AlignedRead))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "r2prim")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R Lib.AlignedRead))
                       @ x
                       g1
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <*>_N <GHC.Generics.R>_P <Lib.AlignedRead>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <*>_N
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "r1prim")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1 GHC.Generics.R Lib.AlignedRead>_R) <x>_N))
                       g2
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <*>_N <GHC.Generics.R>_P <Lib.AlignedRead>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <*>_N
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "r2prim")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1 GHC.Generics.R Lib.AlignedRead>_R) <x>_N)))
                    (GHC.Generics.:*:
                       @ *
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "r1secs")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R [Lib.AlignedRead]))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "r2secs")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R [Lib.AlignedRead]))
                       @ x
                       g3
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <*>_N <GHC.Generics.R>_P <[Lib.AlignedRead]>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <*>_N
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "r1secs")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1 GHC.Generics.R [Lib.AlignedRead]>_R) <x>_N))
                       g4
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <*>_N <GHC.Generics.R>_P <[Lib.AlignedRead]>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <*>_N
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "r2secs")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1
                                         GHC.Generics.R [Lib.AlignedRead]>_R) <x>_N))))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <*>_N
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "PairedAln" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <(GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "r1prim")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R Lib.AlignedRead)
                             GHC.Generics.:*: GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "r2prim")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1 GHC.Generics.R Lib.AlignedRead))
                            GHC.Generics.:*: (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "r1secs")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1 GHC.Generics.R [Lib.AlignedRead])
                                              GHC.Generics.:*: GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Base.Just "r2secs")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    [Lib.AlignedRead]))>_R) <x>_N) }) -}
eb54c5795cd87d65034c776d841620e0
  $fGenericPairedAln_$cto ::
    GHC.Generics.Rep Lib.PairedAln x -> Lib.PairedAln
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SS),1*U(1*U(U,U),1*U(U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (ds6 :: GHC.Generics.Rep Lib.PairedAln x) ->
                 case ds6
                        `cast`
                      (Trans
                           (Sub (Lib.Rep_PairedAln[0]))
                           (Trans
                                (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.D>_P
                                     <'GHC.Generics.MetaData
                                        "PairedAln"
                                        "Lib"
                                        "primerclip-0.3.2.0-4vTju4b4oawFuFWabKwXDg"
                                        'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "PairedAln" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                        ((GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "r1prim")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.K1 GHC.Generics.R Lib.AlignedRead)
                                          GHC.Generics.:*: GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "r2prim")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R Lib.AlignedRead))
                                         GHC.Generics.:*: (GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "r1secs")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R [Lib.AlignedRead])
                                                           GHC.Generics.:*: GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "r2secs")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 [Lib.AlignedRead])))>_R)
                                (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "PairedAln" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <(GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "r1prim")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.K1 GHC.Generics.R Lib.AlignedRead)
                                       GHC.Generics.:*: GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "r2prim")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R Lib.AlignedRead))
                                      GHC.Generics.:*: (GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "r1secs")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R [Lib.AlignedRead])
                                                        GHC.Generics.:*: GHC.Generics.M1
                                                                           GHC.Generics.S
                                                                           ('GHC.Generics.MetaSel
                                                                              ('GHC.Base.Just
                                                                                 "r2secs")
                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                              'GHC.Generics.NoSourceStrictness
                                                                              'GHC.Generics.DecidedLazy)
                                                                           (GHC.Generics.K1
                                                                              GHC.Generics.R
                                                                              [Lib.AlignedRead]))>_R)) <x>_N) of wild { GHC.Generics.:*: ds7 ds8 ->
                 case ds7 of wild1 { GHC.Generics.:*: ds9 ds10 ->
                 case ds8 of wild2 { GHC.Generics.:*: ds11 ds12 ->
                 Lib.PairedAln
                   ds9
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "r1prim")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R Lib.AlignedRead>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <Lib.AlignedRead>_R <x>_P))
                   ds10
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "r2prim")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R Lib.AlignedRead>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <Lib.AlignedRead>_R <x>_P))
                   ds11
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "r1secs")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R [Lib.AlignedRead]>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <[Lib.AlignedRead]>_R <x>_P))
                   ds12
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "r2secs")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R [Lib.AlignedRead]>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <[Lib.AlignedRead]>_R <x>_P)) } } }) -}
3fd0d1813507d3804368ee979449d71a
  $fGenericUChr :: GHC.Generics.Generic Lib.UChr
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.UChr
                  Lib.$fGenericUChr1
                    `cast`
                  (forall (x :: <*>_N).
                   <Lib.UChr>_R
                   ->_R Trans
                            (Sym (GHC.Generics.N:M1[0]
                                      <*>_N
                                      <GHC.Generics.D>_P
                                      <'GHC.Generics.MetaData
                                         "UChr"
                                         "Lib"
                                         "primerclip-0.3.2.0-4vTju4b4oawFuFWabKwXDg"
                                         'GHC.Types.False>_P
                                      <(((((GHC.Generics.M1
                                              GHC.Generics.C
                                              ('GHC.Generics.MetaCons
                                                 "C1" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                              GHC.Generics.U1
                                            GHC.Generics.:+: (GHC.Generics.M1
                                                                GHC.Generics.C
                                                                ('GHC.Generics.MetaCons
                                                                   "C2"
                                                                   'GHC.Generics.PrefixI
                                                                   'GHC.Types.False)
                                                                GHC.Generics.U1
                                                              GHC.Generics.:+: GHC.Generics.M1
                                                                                 GHC.Generics.C
                                                                                 ('GHC.Generics.MetaCons
                                                                                    "C3"
                                                                                    'GHC.Generics.PrefixI
                                                                                    'GHC.Types.False)
                                                                                 GHC.Generics.U1))
                                           GHC.Generics.:+: (GHC.Generics.M1
                                                               GHC.Generics.C
                                                               ('GHC.Generics.MetaCons
                                                                  "C4"
                                                                  'GHC.Generics.PrefixI
                                                                  'GHC.Types.False)
                                                               GHC.Generics.U1
                                                             GHC.Generics.:+: (GHC.Generics.M1
                                                                                 GHC.Generics.C
                                                                                 ('GHC.Generics.MetaCons
                                                                                    "C5"
                                                                                    'GHC.Generics.PrefixI
                                                                                    'GHC.Types.False)
                                                                                 GHC.Generics.U1
                                                                               GHC.Generics.:+: GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "C6"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1)))
                                          GHC.Generics.:+: ((GHC.Generics.M1
                                                               GHC.Generics.C
                                                               ('GHC.Generics.MetaCons
                                                                  "C7"
                                                                  'GHC.Generics.PrefixI
                                                                  'GHC.Types.False)
                                                               GHC.Generics.U1
                                                             GHC.Generics.:+: (GHC.Generics.M1
                                                                                 GHC.Generics.C
                                                                                 ('GHC.Generics.MetaCons
                                                                                    "C8"
                                                                                    'GHC.Generics.PrefixI
                                                                                    'GHC.Types.False)
                                                                                 GHC.Generics.U1
                                                                               GHC.Generics.:+: GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "C9"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1))
                                                            GHC.Generics.:+: ((GHC.Generics.M1
                                                                                 GHC.Generics.C
                                                                                 ('GHC.Generics.MetaCons
                                                                                    "C10"
                                                                                    'GHC.Generics.PrefixI
                                                                                    'GHC.Types.False)
                                                                                 GHC.Generics.U1
                                                                               GHC.Generics.:+: GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "C11"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1)
                                                                              GHC.Generics.:+: (GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "C12"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "C13"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1))))
                                         GHC.Generics.:+: (((GHC.Generics.M1
                                                               GHC.Generics.C
                                                               ('GHC.Generics.MetaCons
                                                                  "C14"
                                                                  'GHC.Generics.PrefixI
                                                                  'GHC.Types.False)
                                                               GHC.Generics.U1
                                                             GHC.Generics.:+: (GHC.Generics.M1
                                                                                 GHC.Generics.C
                                                                                 ('GHC.Generics.MetaCons
                                                                                    "C15"
                                                                                    'GHC.Generics.PrefixI
                                                                                    'GHC.Types.False)
                                                                                 GHC.Generics.U1
                                                                               GHC.Generics.:+: GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "C16"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1))
                                                            GHC.Generics.:+: ((GHC.Generics.M1
                                                                                 GHC.Generics.C
                                                                                 ('GHC.Generics.MetaCons
                                                                                    "C17"
                                                                                    'GHC.Generics.PrefixI
                                                                                    'GHC.Types.False)
                                                                                 GHC.Generics.U1
                                                                               GHC.Generics.:+: GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "C18"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1)
                                                                              GHC.Generics.:+: (GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "C19"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "C20"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1)))
                                                           GHC.Generics.:+: ((GHC.Generics.M1
                                                                                GHC.Generics.C
                                                                                ('GHC.Generics.MetaCons
                                                                                   "C21"
                                                                                   'GHC.Generics.PrefixI
                                                                                   'GHC.Types.False)
                                                                                GHC.Generics.U1
                                                                              GHC.Generics.:+: (GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "C22"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "CX"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1))
                                                                             GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "CY"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "CMT"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1)
                                                                                               GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "Chr1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1
                                                                                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "Chr2"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1)))))
                                        GHC.Generics.:+: ((((GHC.Generics.M1
                                                               GHC.Generics.C
                                                               ('GHC.Generics.MetaCons
                                                                  "Chr3"
                                                                  'GHC.Generics.PrefixI
                                                                  'GHC.Types.False)
                                                               GHC.Generics.U1
                                                             GHC.Generics.:+: (GHC.Generics.M1
                                                                                 GHC.Generics.C
                                                                                 ('GHC.Generics.MetaCons
                                                                                    "Chr4"
                                                                                    'GHC.Generics.PrefixI
                                                                                    'GHC.Types.False)
                                                                                 GHC.Generics.U1
                                                                               GHC.Generics.:+: GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "Chr5"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1))
                                                            GHC.Generics.:+: ((GHC.Generics.M1
                                                                                 GHC.Generics.C
                                                                                 ('GHC.Generics.MetaCons
                                                                                    "Chr6"
                                                                                    'GHC.Generics.PrefixI
                                                                                    'GHC.Types.False)
                                                                                 GHC.Generics.U1
                                                                               GHC.Generics.:+: GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "Chr7"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1)
                                                                              GHC.Generics.:+: (GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "Chr8"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "Chr9"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1)))
                                                           GHC.Generics.:+: ((GHC.Generics.M1
                                                                                GHC.Generics.C
                                                                                ('GHC.Generics.MetaCons
                                                                                   "Chr10"
                                                                                   'GHC.Generics.PrefixI
                                                                                   'GHC.Types.False)
                                                                                GHC.Generics.U1
                                                                              GHC.Generics.:+: (GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "Chr11"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "Chr12"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1))
                                                                             GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "Chr13"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "Chr14"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1)
                                                                                               GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "Chr15"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1
                                                                                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "Chr16"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1))))
                                                          GHC.Generics.:+: (((GHC.Generics.M1
                                                                                GHC.Generics.C
                                                                                ('GHC.Generics.MetaCons
                                                                                   "Chr17"
                                                                                   'GHC.Generics.PrefixI
                                                                                   'GHC.Types.False)
                                                                                GHC.Generics.U1
                                                                              GHC.Generics.:+: (GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "Chr18"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "Chr19"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1))
                                                                             GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "Chr20"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "Chr21"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1)
                                                                                               GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "Chr22"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1
                                                                                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "ChrX"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1)))
                                                                            GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                 GHC.Generics.C
                                                                                                 ('GHC.Generics.MetaCons
                                                                                                    "ChrY"
                                                                                                    'GHC.Generics.PrefixI
                                                                                                    'GHC.Types.False)
                                                                                                 GHC.Generics.U1
                                                                                               GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "ChrM"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1
                                                                                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000207P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1))
                                                                                              GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000226P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1
                                                                                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000229P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1)
                                                                                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000231P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1
                                                                                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                                     GHC.Generics.C
                                                                                                                                                     ('GHC.Generics.MetaCons
                                                                                                                                                        "GL000210P1"
                                                                                                                                                        'GHC.Generics.PrefixI
                                                                                                                                                        'GHC.Types.False)
                                                                                                                                                     GHC.Generics.U1))))))
                                       GHC.Generics.:+: (((((GHC.Generics.M1
                                                               GHC.Generics.C
                                                               ('GHC.Generics.MetaCons
                                                                  "GL000239P1"
                                                                  'GHC.Generics.PrefixI
                                                                  'GHC.Types.False)
                                                               GHC.Generics.U1
                                                             GHC.Generics.:+: (GHC.Generics.M1
                                                                                 GHC.Generics.C
                                                                                 ('GHC.Generics.MetaCons
                                                                                    "GL000235P1"
                                                                                    'GHC.Generics.PrefixI
                                                                                    'GHC.Types.False)
                                                                                 GHC.Generics.U1
                                                                               GHC.Generics.:+: GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "GL000201P1"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1))
                                                            GHC.Generics.:+: ((GHC.Generics.M1
                                                                                 GHC.Generics.C
                                                                                 ('GHC.Generics.MetaCons
                                                                                    "GL000247P1"
                                                                                    'GHC.Generics.PrefixI
                                                                                    'GHC.Types.False)
                                                                                 GHC.Generics.U1
                                                                               GHC.Generics.:+: GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "GL000245P1"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1)
                                                                              GHC.Generics.:+: (GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "GL000197P1"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000203P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1)))
                                                           GHC.Generics.:+: ((GHC.Generics.M1
                                                                                GHC.Generics.C
                                                                                ('GHC.Generics.MetaCons
                                                                                   "GL000246P1"
                                                                                   'GHC.Generics.PrefixI
                                                                                   'GHC.Types.False)
                                                                                GHC.Generics.U1
                                                                              GHC.Generics.:+: (GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "GL000249P1"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000196P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1))
                                                                             GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "GL000248P1"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000244P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1)
                                                                                               GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000238P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1
                                                                                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000202P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1))))
                                                          GHC.Generics.:+: (((GHC.Generics.M1
                                                                                GHC.Generics.C
                                                                                ('GHC.Generics.MetaCons
                                                                                   "GL000234P1"
                                                                                   'GHC.Generics.PrefixI
                                                                                   'GHC.Types.False)
                                                                                GHC.Generics.U1
                                                                              GHC.Generics.:+: (GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "GL000232P1"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000206P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1))
                                                                             GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "GL000240P1"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000236P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1)
                                                                                               GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000241P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1
                                                                                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000243P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1)))
                                                                            GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                 GHC.Generics.C
                                                                                                 ('GHC.Generics.MetaCons
                                                                                                    "GL000242P1"
                                                                                                    'GHC.Generics.PrefixI
                                                                                                    'GHC.Types.False)
                                                                                                 GHC.Generics.U1
                                                                                               GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000230P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1
                                                                                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000237P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1))
                                                                                              GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000233P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1
                                                                                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000204P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1)
                                                                                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000198P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1
                                                                                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                                     GHC.Generics.C
                                                                                                                                                     ('GHC.Generics.MetaCons
                                                                                                                                                        "GL000208P1"
                                                                                                                                                        'GHC.Generics.PrefixI
                                                                                                                                                        'GHC.Types.False)
                                                                                                                                                     GHC.Generics.U1)))))
                                                         GHC.Generics.:+: ((((GHC.Generics.M1
                                                                                GHC.Generics.C
                                                                                ('GHC.Generics.MetaCons
                                                                                   "GL000191P1"
                                                                                   'GHC.Generics.PrefixI
                                                                                   'GHC.Types.False)
                                                                                GHC.Generics.U1
                                                                              GHC.Generics.:+: (GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "GL000227P1"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000228P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1))
                                                                             GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "GL000214P1"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000221P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1)
                                                                                               GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000209P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1
                                                                                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000218P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1)))
                                                                            GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                 GHC.Generics.C
                                                                                                 ('GHC.Generics.MetaCons
                                                                                                    "GL000220P1"
                                                                                                    'GHC.Generics.PrefixI
                                                                                                    'GHC.Types.False)
                                                                                                 GHC.Generics.U1
                                                                                               GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000213P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1
                                                                                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000211P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1))
                                                                                              GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000199P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1
                                                                                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000217P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1)
                                                                                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000216P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1
                                                                                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                                     GHC.Generics.C
                                                                                                                                                     ('GHC.Generics.MetaCons
                                                                                                                                                        "GL000215P1"
                                                                                                                                                        'GHC.Generics.PrefixI
                                                                                                                                                        'GHC.Types.False)
                                                                                                                                                     GHC.Generics.U1))))
                                                                           GHC.Generics.:+: (((GHC.Generics.M1
                                                                                                 GHC.Generics.C
                                                                                                 ('GHC.Generics.MetaCons
                                                                                                    "GL000205P1"
                                                                                                    'GHC.Generics.PrefixI
                                                                                                    'GHC.Types.False)
                                                                                                 GHC.Generics.U1
                                                                                               GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000219P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1
                                                                                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000224P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1))
                                                                                              GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000223P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1
                                                                                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000195P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1)
                                                                                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000212P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1
                                                                                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                                     GHC.Generics.C
                                                                                                                                                     ('GHC.Generics.MetaCons
                                                                                                                                                        "GL000222P1"
                                                                                                                                                        'GHC.Generics.PrefixI
                                                                                                                                                        'GHC.Types.False)
                                                                                                                                                     GHC.Generics.U1)))
                                                                                             GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                                  GHC.Generics.C
                                                                                                                  ('GHC.Generics.MetaCons
                                                                                                                     "GL000200P1"
                                                                                                                     'GHC.Generics.PrefixI
                                                                                                                     'GHC.Types.False)
                                                                                                                  GHC.Generics.U1
                                                                                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000193P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1
                                                                                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                                     GHC.Generics.C
                                                                                                                                                     ('GHC.Generics.MetaCons
                                                                                                                                                        "GL000194P1"
                                                                                                                                                        'GHC.Generics.PrefixI
                                                                                                                                                        'GHC.Types.False)
                                                                                                                                                     GHC.Generics.U1))
                                                                                                               GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000225P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1
                                                                                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                                     GHC.Generics.C
                                                                                                                                                     ('GHC.Generics.MetaCons
                                                                                                                                                        "GL000192P1"
                                                                                                                                                        'GHC.Generics.PrefixI
                                                                                                                                                        'GHC.Types.False)
                                                                                                                                                     GHC.Generics.U1)
                                                                                                                                 GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                                                     GHC.Generics.C
                                                                                                                                                     ('GHC.Generics.MetaCons
                                                                                                                                                        "NC_007605"
                                                                                                                                                        'GHC.Generics.PrefixI
                                                                                                                                                        'GHC.Types.False)
                                                                                                                                                     GHC.Generics.U1
                                                                                                                                                   GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                                                      GHC.Generics.C
                                                                                                                                                                      ('GHC.Generics.MetaCons
                                                                                                                                                                         "NONE"
                                                                                                                                                                         'GHC.Generics.PrefixI
                                                                                                                                                                         'GHC.Types.False)
                                                                                                                                                                      GHC.Generics.U1))))))>_R))
                            (Sub (Sym (Lib.Rep_UChr[0]))) <x>_N)
                  Lib.$fGenericUChr_$cto -}
3fd0d1813507d3804368ee979449d71a
  $fGenericUChr1 ::
    Lib.UChr
    -> (GHC.Generics.:+:)
         (((((GHC.Generics.M1
                GHC.Generics.C
                ('GHC.Generics.MetaCons
                   "C1" 'GHC.Generics.PrefixI 'GHC.Types.False)
                GHC.Generics.U1
              GHC.Generics.:+: (GHC.Generics.M1
                                  GHC.Generics.C
                                  ('GHC.Generics.MetaCons
                                     "C2" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                  GHC.Generics.U1
                                GHC.Generics.:+: GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "C3" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                   GHC.Generics.U1))
             GHC.Generics.:+: (GHC.Generics.M1
                                 GHC.Generics.C
                                 ('GHC.Generics.MetaCons
                                    "C4" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: (GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "C5" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "C6"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1)))
            GHC.Generics.:+: ((GHC.Generics.M1
                                 GHC.Generics.C
                                 ('GHC.Generics.MetaCons
                                    "C7" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: (GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "C8" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "C9"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1))
                              GHC.Generics.:+: ((GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "C10" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "C11"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1)
                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "C12"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "C13"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1))))
           GHC.Generics.:+: (((GHC.Generics.M1
                                 GHC.Generics.C
                                 ('GHC.Generics.MetaCons
                                    "C14" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: (GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "C15" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "C16"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1))
                              GHC.Generics.:+: ((GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "C17" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "C18"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1)
                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "C19"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "C20"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1)))
                             GHC.Generics.:+: ((GHC.Generics.M1
                                                  GHC.Generics.C
                                                  ('GHC.Generics.MetaCons
                                                     "C21" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                  GHC.Generics.U1
                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "C22"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "CX"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1))
                                               GHC.Generics.:+: ((GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "CY"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "CMT"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1)
                                                                 GHC.Generics.:+: (GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "Chr1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1
                                                                                   GHC.Generics.:+: GHC.Generics.M1
                                                                                                      GHC.Generics.C
                                                                                                      ('GHC.Generics.MetaCons
                                                                                                         "Chr2"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False)
                                                                                                      GHC.Generics.U1)))))
          GHC.Generics.:+: ((((GHC.Generics.M1
                                 GHC.Generics.C
                                 ('GHC.Generics.MetaCons
                                    "Chr3" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: (GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "Chr4" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "Chr5"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1))
                              GHC.Generics.:+: ((GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "Chr6" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "Chr7"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1)
                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "Chr8"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "Chr9"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1)))
                             GHC.Generics.:+: ((GHC.Generics.M1
                                                  GHC.Generics.C
                                                  ('GHC.Generics.MetaCons
                                                     "Chr10" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                  GHC.Generics.U1
                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "Chr11"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "Chr12"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1))
                                               GHC.Generics.:+: ((GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "Chr13"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "Chr14"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1)
                                                                 GHC.Generics.:+: (GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "Chr15"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1
                                                                                   GHC.Generics.:+: GHC.Generics.M1
                                                                                                      GHC.Generics.C
                                                                                                      ('GHC.Generics.MetaCons
                                                                                                         "Chr16"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False)
                                                                                                      GHC.Generics.U1))))
                            GHC.Generics.:+: (((GHC.Generics.M1
                                                  GHC.Generics.C
                                                  ('GHC.Generics.MetaCons
                                                     "Chr17" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                  GHC.Generics.U1
                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "Chr18"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "Chr19"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1))
                                               GHC.Generics.:+: ((GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "Chr20"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "Chr21"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1)
                                                                 GHC.Generics.:+: (GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "Chr22"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1
                                                                                   GHC.Generics.:+: GHC.Generics.M1
                                                                                                      GHC.Generics.C
                                                                                                      ('GHC.Generics.MetaCons
                                                                                                         "ChrX"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False)
                                                                                                      GHC.Generics.U1)))
                                              GHC.Generics.:+: ((GHC.Generics.M1
                                                                   GHC.Generics.C
                                                                   ('GHC.Generics.MetaCons
                                                                      "ChrY"
                                                                      'GHC.Generics.PrefixI
                                                                      'GHC.Types.False)
                                                                   GHC.Generics.U1
                                                                 GHC.Generics.:+: (GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "ChrM"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1
                                                                                   GHC.Generics.:+: GHC.Generics.M1
                                                                                                      GHC.Generics.C
                                                                                                      ('GHC.Generics.MetaCons
                                                                                                         "GL000207P1"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False)
                                                                                                      GHC.Generics.U1))
                                                                GHC.Generics.:+: ((GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000226P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1
                                                                                   GHC.Generics.:+: GHC.Generics.M1
                                                                                                      GHC.Generics.C
                                                                                                      ('GHC.Generics.MetaCons
                                                                                                         "GL000229P1"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False)
                                                                                                      GHC.Generics.U1)
                                                                                  GHC.Generics.:+: (GHC.Generics.M1
                                                                                                      GHC.Generics.C
                                                                                                      ('GHC.Generics.MetaCons
                                                                                                         "GL000231P1"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False)
                                                                                                      GHC.Generics.U1
                                                                                                    GHC.Generics.:+: GHC.Generics.M1
                                                                                                                       GHC.Generics.C
                                                                                                                       ('GHC.Generics.MetaCons
                                                                                                                          "GL000210P1"
                                                                                                                          'GHC.Generics.PrefixI
                                                                                                                          'GHC.Types.False)
                                                                                                                       GHC.Generics.U1))))))
         (((((GHC.Generics.M1
                GHC.Generics.C
                ('GHC.Generics.MetaCons
                   "GL000239P1" 'GHC.Generics.PrefixI 'GHC.Types.False)
                GHC.Generics.U1
              GHC.Generics.:+: (GHC.Generics.M1
                                  GHC.Generics.C
                                  ('GHC.Generics.MetaCons
                                     "GL000235P1" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                  GHC.Generics.U1
                                GHC.Generics.:+: GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "GL000201P1"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1))
             GHC.Generics.:+: ((GHC.Generics.M1
                                  GHC.Generics.C
                                  ('GHC.Generics.MetaCons
                                     "GL000247P1" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                  GHC.Generics.U1
                                GHC.Generics.:+: GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "GL000245P1"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1)
                               GHC.Generics.:+: (GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "GL000197P1"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000203P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1)))
            GHC.Generics.:+: ((GHC.Generics.M1
                                 GHC.Generics.C
                                 ('GHC.Generics.MetaCons
                                    "GL000246P1" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: (GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "GL000249P1"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000196P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1))
                              GHC.Generics.:+: ((GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "GL000248P1"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000244P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1)
                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000238P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000202P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1))))
           GHC.Generics.:+: (((GHC.Generics.M1
                                 GHC.Generics.C
                                 ('GHC.Generics.MetaCons
                                    "GL000234P1" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: (GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "GL000232P1"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000206P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1))
                              GHC.Generics.:+: ((GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "GL000240P1"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000236P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1)
                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000241P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000243P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1)))
                             GHC.Generics.:+: ((GHC.Generics.M1
                                                  GHC.Generics.C
                                                  ('GHC.Generics.MetaCons
                                                     "GL000242P1"
                                                     'GHC.Generics.PrefixI
                                                     'GHC.Types.False)
                                                  GHC.Generics.U1
                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000230P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000237P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1))
                                               GHC.Generics.:+: ((GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000233P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000204P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1)
                                                                 GHC.Generics.:+: (GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000198P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1
                                                                                   GHC.Generics.:+: GHC.Generics.M1
                                                                                                      GHC.Generics.C
                                                                                                      ('GHC.Generics.MetaCons
                                                                                                         "GL000208P1"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False)
                                                                                                      GHC.Generics.U1)))))
          GHC.Generics.:+: ((((GHC.Generics.M1
                                 GHC.Generics.C
                                 ('GHC.Generics.MetaCons
                                    "GL000191P1" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: (GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "GL000227P1"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000228P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1))
                              GHC.Generics.:+: ((GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "GL000214P1"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000221P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1)
                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000209P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000218P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1)))
                             GHC.Generics.:+: ((GHC.Generics.M1
                                                  GHC.Generics.C
                                                  ('GHC.Generics.MetaCons
                                                     "GL000220P1"
                                                     'GHC.Generics.PrefixI
                                                     'GHC.Types.False)
                                                  GHC.Generics.U1
                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000213P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000211P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1))
                                               GHC.Generics.:+: ((GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000199P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000217P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1)
                                                                 GHC.Generics.:+: (GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000216P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1
                                                                                   GHC.Generics.:+: GHC.Generics.M1
                                                                                                      GHC.Generics.C
                                                                                                      ('GHC.Generics.MetaCons
                                                                                                         "GL000215P1"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False)
                                                                                                      GHC.Generics.U1))))
                            GHC.Generics.:+: (((GHC.Generics.M1
                                                  GHC.Generics.C
                                                  ('GHC.Generics.MetaCons
                                                     "GL000205P1"
                                                     'GHC.Generics.PrefixI
                                                     'GHC.Types.False)
                                                  GHC.Generics.U1
                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000219P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000224P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1))
                                               GHC.Generics.:+: ((GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000223P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000195P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1)
                                                                 GHC.Generics.:+: (GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000212P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1
                                                                                   GHC.Generics.:+: GHC.Generics.M1
                                                                                                      GHC.Generics.C
                                                                                                      ('GHC.Generics.MetaCons
                                                                                                         "GL000222P1"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False)
                                                                                                      GHC.Generics.U1)))
                                              GHC.Generics.:+: ((GHC.Generics.M1
                                                                   GHC.Generics.C
                                                                   ('GHC.Generics.MetaCons
                                                                      "GL000200P1"
                                                                      'GHC.Generics.PrefixI
                                                                      'GHC.Types.False)
                                                                   GHC.Generics.U1
                                                                 GHC.Generics.:+: (GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000193P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1
                                                                                   GHC.Generics.:+: GHC.Generics.M1
                                                                                                      GHC.Generics.C
                                                                                                      ('GHC.Generics.MetaCons
                                                                                                         "GL000194P1"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False)
                                                                                                      GHC.Generics.U1))
                                                                GHC.Generics.:+: ((GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000225P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1
                                                                                   GHC.Generics.:+: GHC.Generics.M1
                                                                                                      GHC.Generics.C
                                                                                                      ('GHC.Generics.MetaCons
                                                                                                         "GL000192P1"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False)
                                                                                                      GHC.Generics.U1)
                                                                                  GHC.Generics.:+: (GHC.Generics.M1
                                                                                                      GHC.Generics.C
                                                                                                      ('GHC.Generics.MetaCons
                                                                                                         "NC_007605"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False)
                                                                                                      GHC.Generics.U1
                                                                                                    GHC.Generics.:+: GHC.Generics.M1
                                                                                                                       GHC.Generics.C
                                                                                                                       ('GHC.Generics.MetaCons
                                                                                                                          "NONE"
                                                                                                                          'GHC.Generics.PrefixI
                                                                                                                          'GHC.Types.False)
                                                                                                                       GHC.Generics.U1))))))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
3fd0d1813507d3804368ee979449d71a
  $fGenericUChr_$cto :: GHC.Generics.Rep Lib.UChr x -> Lib.UChr
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
eb54c5795cd87d65034c776d841620e0
  $fOrdAlignedRead :: GHC.Classes.Ord Lib.AlignedRead
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.AlignedRead
                  Lib.$fEqAlignedRead
                  Lib.$fOrdAlignedRead_$ccompare
                  Lib.$fOrdAlignedRead_$c<
                  Lib.$fOrdAlignedRead_$c<=
                  Lib.$fOrdAlignedRead_$c>
                  Lib.$fOrdAlignedRead_$c>=
                  Lib.$fOrdAlignedRead_$cmax
                  Lib.$fOrdAlignedRead_$cmin -}
eb54c5795cd87d65034c776d841620e0
  $fOrdAlignedRead_$c< ::
    Lib.AlignedRead -> Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.AlignedRead) (y :: Lib.AlignedRead) ->
                 case Lib.$fOrdAlignedRead_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True }) -}
eb54c5795cd87d65034c776d841620e0
  $fOrdAlignedRead_$c<= ::
    Lib.AlignedRead -> Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.AlignedRead) (y :: Lib.AlignedRead) ->
                 case Lib.$fOrdAlignedRead_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False }) -}
eb54c5795cd87d65034c776d841620e0
  $fOrdAlignedRead_$c> ::
    Lib.AlignedRead -> Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.AlignedRead) (y :: Lib.AlignedRead) ->
                 case Lib.$fOrdAlignedRead_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True }) -}
eb54c5795cd87d65034c776d841620e0
  $fOrdAlignedRead_$c>= ::
    Lib.AlignedRead -> Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.AlignedRead) (y :: Lib.AlignedRead) ->
                 case Lib.$fOrdAlignedRead_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False }) -}
eb54c5795cd87d65034c776d841620e0
  $fOrdAlignedRead_$ccompare ::
    Lib.AlignedRead -> Lib.AlignedRead -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.AlignedRead) (w1 :: Lib.AlignedRead) ->
                 case w of ww { Lib.AlignedRead ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ->
                 case w1 of ww32 { Lib.AlignedRead ww33 ww34 ww35 ww36 ww37 ww38 ww39 ww40 ww41 ww42 ww43 ww44 ww45 ww46 ww47 ww48 ww49 ww50 ww51 ww52 ww53 ww54 ww55 ww56 ww57 ww58 ww59 ww60 ww61 ww62 ww63 ->
                 Lib.$w$ccompare ww3 ww4 ww6 ww35 ww36 ww38 } }) -}
eb54c5795cd87d65034c776d841620e0
  $fOrdAlignedRead_$cmax ::
    Lib.AlignedRead -> Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)><S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.AlignedRead) (y :: Lib.AlignedRead) ->
                 case Lib.$fOrdAlignedRead_$ccompare x y of wild {
                   DEFAULT -> y GHC.Types.GT -> x }) -}
eb54c5795cd87d65034c776d841620e0
  $fOrdAlignedRead_$cmin ::
    Lib.AlignedRead -> Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)><S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.AlignedRead) (y :: Lib.AlignedRead) ->
                 case Lib.$fOrdAlignedRead_$ccompare x y of wild {
                   DEFAULT -> x GHC.Types.GT -> y }) -}
1fc0d837b61ebbaa17edd71f0be30382
  $fOrdBEDPE :: GHC.Classes.Ord Lib.BEDPE
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.BEDPE
                  Lib.$fEqBEDPE
                  Lib.$fOrdBEDPE_$ccompare
                  Lib.$fOrdBEDPE_$c<
                  Lib.$fOrdBEDPE_$c<=
                  Lib.$fOrdBEDPE_$c>
                  Lib.$fOrdBEDPE_$c>=
                  Lib.$fOrdBEDPE_$cmax
                  Lib.$fOrdBEDPE_$cmin -}
1fc0d837b61ebbaa17edd71f0be30382
  $fOrdBEDPE_$c< :: Lib.BEDPE -> Lib.BEDPE -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLL),1*U(U,1*U,A,A,A,A,A)><S(SLLLLLL),1*U(U,1*U,A,A,A,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.BEDPE) (w1 :: Lib.BEDPE) ->
                 case w of ww { Lib.BEDPE ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case w1 of ww8 { Lib.BEDPE ww9 ww10 ww11 ww12 ww13 ww14 ww15 ->
                 Lib.$w$c< ww1 ww2 ww9 ww10 } }) -}
1fc0d837b61ebbaa17edd71f0be30382
  $fOrdBEDPE_$c<= :: Lib.BEDPE -> Lib.BEDPE -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLL),1*U(U,1*U,A,A,A,A,A)><S(SLLLLLL),1*U(U,1*U,A,A,A,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.BEDPE) (w1 :: Lib.BEDPE) ->
                 case w of ww { Lib.BEDPE ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case w1 of ww8 { Lib.BEDPE ww9 ww10 ww11 ww12 ww13 ww14 ww15 ->
                 Lib.$w$c<= ww1 ww2 ww9 ww10 } }) -}
1fc0d837b61ebbaa17edd71f0be30382
  $fOrdBEDPE_$c> :: Lib.BEDPE -> Lib.BEDPE -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLL),1*U(U,1*U,A,A,A,A,A)><S(SLLLLLL),1*U(U,1*U,A,A,A,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.BEDPE) (w1 :: Lib.BEDPE) ->
                 case w of ww { Lib.BEDPE ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case w1 of ww8 { Lib.BEDPE ww9 ww10 ww11 ww12 ww13 ww14 ww15 ->
                 Lib.$w$c> ww1 ww2 ww9 ww10 } }) -}
1fc0d837b61ebbaa17edd71f0be30382
  $fOrdBEDPE_$c>= :: Lib.BEDPE -> Lib.BEDPE -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLL),1*U(U,1*U,A,A,A,A,A)><S(SLLLLLL),1*U(U,1*U,A,A,A,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.BEDPE) (w1 :: Lib.BEDPE) ->
                 case w of ww { Lib.BEDPE ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case w1 of ww8 { Lib.BEDPE ww9 ww10 ww11 ww12 ww13 ww14 ww15 ->
                 Lib.$w$c>= ww1 ww2 ww9 ww10 } }) -}
1fc0d837b61ebbaa17edd71f0be30382
  $fOrdBEDPE_$ccompare ::
    Lib.BEDPE -> Lib.BEDPE -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLL),1*U(U,1*U,A,A,A,A,A)><S(SLLLLLL),1*U(U,1*U,A,A,A,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.BEDPE) (w1 :: Lib.BEDPE) ->
                 case w of ww { Lib.BEDPE ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case w1 of ww8 { Lib.BEDPE ww9 ww10 ww11 ww12 ww13 ww14 ww15 ->
                 Lib.$w$ccompare1 ww1 ww2 ww9 ww10 } }) -}
1fc0d837b61ebbaa17edd71f0be30382
  $fOrdBEDPE_$cmax :: Lib.BEDPE -> Lib.BEDPE -> Lib.BEDPE
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLL),1*U(U,U,U,U,U,U,U)><S(SLLLLLL),1*U(U,U,U,U,U,U,U)>m,
     Unfolding: (\ (x :: Lib.BEDPE) (y :: Lib.BEDPE) ->
                 case x of wild { Lib.BEDPE ds6 ds7 ds8 ds9 ds10 ds11 ds12 ->
                 case y of wild1 { Lib.BEDPE ds13 ds14 ds15 ds16 ds17 ds18 ds19 ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ds6 of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ds13 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild3 {
                        GHC.Types.False -> wild
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ds7 ds14 of wild4 {
                             DEFAULT -> wild1 GHC.Types.GT -> wild } }
                   GHC.Types.True -> wild1 } } } } }) -}
1fc0d837b61ebbaa17edd71f0be30382
  $fOrdBEDPE_$cmin :: Lib.BEDPE -> Lib.BEDPE -> Lib.BEDPE
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLL),1*U(U,U,U,U,U,U,U)><S(SLLLLLL),1*U(U,U,U,U,U,U,U)>m,
     Unfolding: (\ (x :: Lib.BEDPE) (y :: Lib.BEDPE) ->
                 case x of wild { Lib.BEDPE ds6 ds7 ds8 ds9 ds10 ds11 ds12 ->
                 case y of wild1 { Lib.BEDPE ds13 ds14 ds15 ds16 ds17 ds18 ds19 ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ds6 of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ds13 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild3 {
                        GHC.Types.False -> wild1
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ds7 ds14 of wild4 {
                             DEFAULT -> wild GHC.Types.GT -> wild1 } }
                   GHC.Types.True -> wild } } } } }) -}
863cf0b2559e3e0bbf1758c760210fb2
  $fOrdBedRecord :: GHC.Classes.Ord Lib.BedRecord
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.BedRecord
                  Lib.$fEqBedRecord
                  Lib.$fOrdBedRecord_$ccompare
                  Lib.$fOrdBedRecord_$c<
                  Lib.$fOrdBedRecord_$c<=
                  Lib.$fOrdBedRecord_$c>
                  Lib.$fOrdBedRecord_$c>=
                  Lib.$fOrdBedRecord_$cmax
                  Lib.$fOrdBedRecord_$cmin -}
863cf0b2559e3e0bbf1758c760210fb2
  $fOrdBedRecord_$c< ::
    Lib.BedRecord -> Lib.BedRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(U,1*U,A,A)><S(SLLL),1*U(U,1*U,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.BedRecord) (w1 :: Lib.BedRecord) ->
                 case w of ww { Lib.BedRecord ww1 ww2 ww3 ww4 ->
                 case w1 of ww5 { Lib.BedRecord ww6 ww7 ww8 ww9 ->
                 Lib.$w$c<1 ww1 ww2 ww6 ww7 } }) -}
863cf0b2559e3e0bbf1758c760210fb2
  $fOrdBedRecord_$c<= ::
    Lib.BedRecord -> Lib.BedRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(U,1*U,A,A)><S(SLLL),1*U(U,1*U,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.BedRecord) (w1 :: Lib.BedRecord) ->
                 case w of ww { Lib.BedRecord ww1 ww2 ww3 ww4 ->
                 case w1 of ww5 { Lib.BedRecord ww6 ww7 ww8 ww9 ->
                 Lib.$w$c<=1 ww1 ww2 ww6 ww7 } }) -}
863cf0b2559e3e0bbf1758c760210fb2
  $fOrdBedRecord_$c> ::
    Lib.BedRecord -> Lib.BedRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(U,1*U,A,A)><S(SLLL),1*U(U,1*U,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.BedRecord) (w1 :: Lib.BedRecord) ->
                 case w of ww { Lib.BedRecord ww1 ww2 ww3 ww4 ->
                 case w1 of ww5 { Lib.BedRecord ww6 ww7 ww8 ww9 ->
                 Lib.$w$c>1 ww1 ww2 ww6 ww7 } }) -}
863cf0b2559e3e0bbf1758c760210fb2
  $fOrdBedRecord_$c>= ::
    Lib.BedRecord -> Lib.BedRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(U,1*U,A,A)><S(SLLL),1*U(U,1*U,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.BedRecord) (w1 :: Lib.BedRecord) ->
                 case w of ww { Lib.BedRecord ww1 ww2 ww3 ww4 ->
                 case w1 of ww5 { Lib.BedRecord ww6 ww7 ww8 ww9 ->
                 Lib.$w$c>=1 ww1 ww2 ww6 ww7 } }) -}
863cf0b2559e3e0bbf1758c760210fb2
  $fOrdBedRecord_$ccompare ::
    Lib.BedRecord -> Lib.BedRecord -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(U,1*U,A,A)><S(SLLL),1*U(U,1*U,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.BedRecord) (w1 :: Lib.BedRecord) ->
                 case w of ww { Lib.BedRecord ww1 ww2 ww3 ww4 ->
                 case w1 of ww5 { Lib.BedRecord ww6 ww7 ww8 ww9 ->
                 Lib.$w$ccompare2 ww1 ww2 ww6 ww7 } }) -}
863cf0b2559e3e0bbf1758c760210fb2
  $fOrdBedRecord_$cmax ::
    Lib.BedRecord -> Lib.BedRecord -> Lib.BedRecord
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(U,U,U,U)><S(SLLL),1*U(U,U,U,U)>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.BedRecord) (w1 :: Lib.BedRecord) ->
                 case w of ww { Lib.BedRecord ww1 ww2 ww3 ww4 ->
                 case w1 of ww5 { Lib.BedRecord ww6 ww7 ww8 ww9 ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww1 of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww6 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> Lib.BedRecord ww1 ww2 ww3 ww4
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww2 ww7 of wild2 {
                             DEFAULT -> Lib.BedRecord ww6 ww7 ww8 ww9
                             GHC.Types.GT -> Lib.BedRecord ww1 ww2 ww3 ww4 } }
                   GHC.Types.True -> Lib.BedRecord ww6 ww7 ww8 ww9 } } } } }) -}
863cf0b2559e3e0bbf1758c760210fb2
  $fOrdBedRecord_$cmin ::
    Lib.BedRecord -> Lib.BedRecord -> Lib.BedRecord
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(U,U,U,U)><S(SLLL),1*U(U,U,U,U)>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.BedRecord) (w1 :: Lib.BedRecord) ->
                 case w of ww { Lib.BedRecord ww1 ww2 ww3 ww4 ->
                 case w1 of ww5 { Lib.BedRecord ww6 ww7 ww8 ww9 ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww1 of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww6 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> Lib.BedRecord ww6 ww7 ww8 ww9
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww2 ww7 of wild2 {
                             DEFAULT -> Lib.BedRecord ww1 ww2 ww3 ww4
                             GHC.Types.GT -> Lib.BedRecord ww6 ww7 ww8 ww9 } }
                   GHC.Types.True -> Lib.BedRecord ww1 ww2 ww3 ww4 } } } } }) -}
72f14e6fcdc92b42047548db1c03b13e
  $fOrdChromNameFormat :: GHC.Classes.Ord Lib.ChromNameFormat
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.ChromNameFormat
                  Lib.$fEqChromNameFormat
                  Lib.$fOrdChromNameFormat_$ccompare
                  Lib.$fOrdChromNameFormat_$c<
                  Lib.$fOrdChromNameFormat_$c<=
                  Lib.$fOrdChromNameFormat_$c>
                  Lib.$fOrdChromNameFormat_$c>=
                  Lib.$fOrdChromNameFormat_$cmax
                  Lib.$fOrdChromNameFormat_$cmin -}
72f14e6fcdc92b42047548db1c03b13e
  $fOrdChromNameFormat_$c< ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.ChromNameFormat) (b :: Lib.ChromNameFormat) ->
                 case a of wild {
                   Lib.GRC
                   -> case b of wild1 {
                        Lib.GRC -> GHC.Types.False Lib.UCSC -> GHC.Types.True }
                   Lib.UCSC -> case b of wild1 { DEFAULT -> GHC.Types.False } }) -}
72f14e6fcdc92b42047548db1c03b13e
  $fOrdChromNameFormat_$c<= ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.ChromNameFormat) (b :: Lib.ChromNameFormat) ->
                 case b of wild {
                   Lib.GRC
                   -> case a of wild1 {
                        Lib.GRC -> GHC.Types.True Lib.UCSC -> GHC.Types.False }
                   Lib.UCSC -> case a of wild1 { DEFAULT -> GHC.Types.True } }) -}
72f14e6fcdc92b42047548db1c03b13e
  $fOrdChromNameFormat_$c> ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, True)
                (\ (a :: Lib.ChromNameFormat) (b :: Lib.ChromNameFormat) ->
                 Lib.$fOrdChromNameFormat_$c< b a) -}
72f14e6fcdc92b42047548db1c03b13e
  $fOrdChromNameFormat_$c>= ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.ChromNameFormat) (b :: Lib.ChromNameFormat) ->
                 case a of wild {
                   Lib.GRC
                   -> case b of wild1 {
                        Lib.GRC -> GHC.Types.True Lib.UCSC -> GHC.Types.False }
                   Lib.UCSC -> case b of wild1 { DEFAULT -> GHC.Types.True } }) -}
72f14e6fcdc92b42047548db1c03b13e
  $fOrdChromNameFormat_$ccompare ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.ChromNameFormat) (b :: Lib.ChromNameFormat) ->
                 case a of wild {
                   Lib.GRC
                   -> case b of wild1 {
                        Lib.GRC -> GHC.Types.EQ Lib.UCSC -> GHC.Types.LT }
                   Lib.UCSC
                   -> case b of wild1 {
                        Lib.GRC -> GHC.Types.GT Lib.UCSC -> GHC.Types.EQ } }) -}
72f14e6fcdc92b42047548db1c03b13e
  $fOrdChromNameFormat_$cmax ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat -> Lib.ChromNameFormat
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.ChromNameFormat) (y :: Lib.ChromNameFormat) ->
                 case y of wild {
                   Lib.GRC -> x
                   Lib.UCSC -> case x of wild1 { DEFAULT -> Lib.UCSC } }) -}
72f14e6fcdc92b42047548db1c03b13e
  $fOrdChromNameFormat_$cmin ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat -> Lib.ChromNameFormat
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.ChromNameFormat) (y :: Lib.ChromNameFormat) ->
                 case y of wild {
                   Lib.GRC -> case x of wild1 { DEFAULT -> Lib.GRC }
                   Lib.UCSC -> x }) -}
06caff25e138935957c1d9216ae6952f
  $fOrdMasterRecord :: GHC.Classes.Ord Lib.MasterRecord
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.MasterRecord
                  Lib.$fEqMasterRecord
                  Lib.$fOrdMasterRecord_$ccompare
                  Lib.$fOrdMasterRecord_$c<
                  Lib.$fOrdMasterRecord_$c<=
                  Lib.$fOrdMasterRecord_$c>
                  Lib.$fOrdMasterRecord_$c>=
                  Lib.$fOrdMasterRecord_$cmax
                  Lib.$fOrdMasterRecord_$cmin -}
06caff25e138935957c1d9216ae6952f
  $fOrdMasterRecord_$c< ::
    Lib.MasterRecord -> Lib.MasterRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(U,1*U,1*U,A,A,A,A,A,A,A,A,A)><S(SLLLLLLLLLLL),1*U(U,1*U,1*U,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.MasterRecord) (y :: Lib.MasterRecord) ->
                 case Lib.$fOrdMasterRecord_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True }) -}
06caff25e138935957c1d9216ae6952f
  $fOrdMasterRecord_$c<= ::
    Lib.MasterRecord -> Lib.MasterRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(U,1*U,1*U,A,A,A,A,A,A,A,A,A)><S(SLLLLLLLLLLL),1*U(U,1*U,1*U,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.MasterRecord) (y :: Lib.MasterRecord) ->
                 case Lib.$fOrdMasterRecord_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False }) -}
06caff25e138935957c1d9216ae6952f
  $fOrdMasterRecord_$c> ::
    Lib.MasterRecord -> Lib.MasterRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(U,1*U,1*U,A,A,A,A,A,A,A,A,A)><S(SLLLLLLLLLLL),1*U(U,1*U,1*U,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.MasterRecord) (y :: Lib.MasterRecord) ->
                 case Lib.$fOrdMasterRecord_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True }) -}
06caff25e138935957c1d9216ae6952f
  $fOrdMasterRecord_$c>= ::
    Lib.MasterRecord -> Lib.MasterRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(U,1*U,1*U,A,A,A,A,A,A,A,A,A)><S(SLLLLLLLLLLL),1*U(U,1*U,1*U,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.MasterRecord) (y :: Lib.MasterRecord) ->
                 case Lib.$fOrdMasterRecord_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False }) -}
06caff25e138935957c1d9216ae6952f
  $fOrdMasterRecord_$ccompare ::
    Lib.MasterRecord -> Lib.MasterRecord -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(U,1*U,1*U,A,A,A,A,A,A,A,A,A)><S(SLLLLLLLLLLL),1*U(U,1*U,1*U,A,A,A,A,A,A,A,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.MasterRecord) (w1 :: Lib.MasterRecord) ->
                 case w of ww { Lib.MasterRecord ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ->
                 case w1 of ww13 { Lib.MasterRecord ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ->
                 Lib.$w$ccompare3 ww1 ww2 ww3 ww14 ww15 ww16 } }) -}
06caff25e138935957c1d9216ae6952f
  $fOrdMasterRecord_$cmax ::
    Lib.MasterRecord -> Lib.MasterRecord -> Lib.MasterRecord
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(U,U,U,U,U,U,U,U,U,U,U,U)><S(SLLLLLLLLLLL),1*U(U,U,U,U,U,U,U,U,U,U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.MasterRecord) (y :: Lib.MasterRecord) ->
                 case Lib.$fOrdMasterRecord_$ccompare x y of wild {
                   DEFAULT -> y GHC.Types.GT -> x }) -}
06caff25e138935957c1d9216ae6952f
  $fOrdMasterRecord_$cmin ::
    Lib.MasterRecord -> Lib.MasterRecord -> Lib.MasterRecord
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(U,U,U,U,U,U,U,U,U,U,U,U)><S(SLLLLLLLLLLL),1*U(U,U,U,U,U,U,U,U,U,U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.MasterRecord) (y :: Lib.MasterRecord) ->
                 case Lib.$fOrdMasterRecord_$ccompare x y of wild {
                   DEFAULT -> x GHC.Types.GT -> y }) -}
9397824cc9d01cf75666f6f250a9bd4d
  $fOrdMidFamily :: GHC.Classes.Ord Lib.MidFamily
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.MidFamily
                  Lib.$fEqMidFamily
                  Lib.$fOrdMidFamily_$ccompare
                  Lib.$fOrdMidFamily_$c<
                  Lib.$fOrdMidFamily_$c<=
                  Lib.$fOrdMidFamily_$c>
                  Lib.$fOrdMidFamily_$c>=
                  Lib.$fOrdMidFamily_$cmax
                  Lib.$fOrdMidFamily_$cmin -}
9397824cc9d01cf75666f6f250a9bd4d
  $fOrdMidFamily_$c< ::
    Lib.MidFamily -> Lib.MidFamily -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLL),1*U(U,1*U,1*U,A,A,1*U,A,A,A,A)><S(SLLLLLLLLL),1*U(U,1*U,1*U,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.MidFamily) (y :: Lib.MidFamily) ->
                 case Lib.$fOrdMidFamily_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True }) -}
9397824cc9d01cf75666f6f250a9bd4d
  $fOrdMidFamily_$c<= ::
    Lib.MidFamily -> Lib.MidFamily -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLL),1*U(U,1*U,1*U,A,A,1*U,A,A,A,A)><S(SLLLLLLLLL),1*U(U,1*U,1*U,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.MidFamily) (y :: Lib.MidFamily) ->
                 case Lib.$fOrdMidFamily_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False }) -}
9397824cc9d01cf75666f6f250a9bd4d
  $fOrdMidFamily_$c> ::
    Lib.MidFamily -> Lib.MidFamily -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLL),1*U(U,1*U,1*U,A,A,1*U,A,A,A,A)><S(SLLLLLLLLL),1*U(U,1*U,1*U,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.MidFamily) (y :: Lib.MidFamily) ->
                 case Lib.$fOrdMidFamily_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True }) -}
9397824cc9d01cf75666f6f250a9bd4d
  $fOrdMidFamily_$c>= ::
    Lib.MidFamily -> Lib.MidFamily -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLL),1*U(U,1*U,1*U,A,A,1*U,A,A,A,A)><S(SLLLLLLLLL),1*U(U,1*U,1*U,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.MidFamily) (y :: Lib.MidFamily) ->
                 case Lib.$fOrdMidFamily_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False }) -}
9397824cc9d01cf75666f6f250a9bd4d
  $fOrdMidFamily_$ccompare ::
    Lib.MidFamily -> Lib.MidFamily -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLL),1*U(U,1*U,1*U,A,A,1*U,A,A,A,A)><S(SLLLLLLLLL),1*U(U,1*U,1*U,A,A,1*U,A,A,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.MidFamily) (w1 :: Lib.MidFamily) ->
                 case w of ww { Lib.MidFamily ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ->
                 case w1 of ww11 { Lib.MidFamily ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ->
                 Lib.$w$ccompare4 ww1 ww2 ww3 ww6 ww12 ww13 ww14 ww17 } }) -}
9397824cc9d01cf75666f6f250a9bd4d
  $fOrdMidFamily_$cmax ::
    Lib.MidFamily -> Lib.MidFamily -> Lib.MidFamily
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLL),1*U(U,U,U,U,U,U,U,U,U,U)><S(SLLLLLLLLL),1*U(U,U,U,U,U,U,U,U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.MidFamily) (y :: Lib.MidFamily) ->
                 case Lib.$fOrdMidFamily_$ccompare x y of wild {
                   DEFAULT -> y GHC.Types.GT -> x }) -}
9397824cc9d01cf75666f6f250a9bd4d
  $fOrdMidFamily_$cmin ::
    Lib.MidFamily -> Lib.MidFamily -> Lib.MidFamily
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLL),1*U(U,U,U,U,U,U,U,U,U,U)><S(SLLLLLLLLL),1*U(U,U,U,U,U,U,U,U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.MidFamily) (y :: Lib.MidFamily) ->
                 case Lib.$fOrdMidFamily_$ccompare x y of wild {
                   DEFAULT -> x GHC.Types.GT -> y }) -}
eb54c5795cd87d65034c776d841620e0
  $fOrdPairedAln :: GHC.Classes.Ord Lib.PairedAln
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.PairedAln
                  Lib.$fEqPairedAln
                  Lib.$fOrdPairedAln_$ccompare
                  Lib.$fOrdPairedAln_$c<
                  Lib.$fOrdPairedAln_$c<=
                  Lib.$fOrdPairedAln_$c>
                  Lib.$fOrdPairedAln_$c>=
                  Lib.$fOrdPairedAln_$cmax
                  Lib.$fOrdPairedAln_$cmin -}
eb54c5795cd87d65034c776d841620e0
  $fOrdPairedAln_$c< ::
    Lib.PairedAln -> Lib.PairedAln -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),A,A)><S(S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.PairedAln) (y :: Lib.PairedAln) ->
                 case Lib.$fOrdPairedAln_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True }) -}
eb54c5795cd87d65034c776d841620e0
  $fOrdPairedAln_$c<= ::
    Lib.PairedAln -> Lib.PairedAln -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),A,A)><S(S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.PairedAln) (y :: Lib.PairedAln) ->
                 case Lib.$fOrdPairedAln_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False }) -}
eb54c5795cd87d65034c776d841620e0
  $fOrdPairedAln_$c> ::
    Lib.PairedAln -> Lib.PairedAln -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),A,A)><S(S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.PairedAln) (y :: Lib.PairedAln) ->
                 case Lib.$fOrdPairedAln_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True }) -}
eb54c5795cd87d65034c776d841620e0
  $fOrdPairedAln_$c>= ::
    Lib.PairedAln -> Lib.PairedAln -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),A,A)><S(S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.PairedAln) (y :: Lib.PairedAln) ->
                 case Lib.$fOrdPairedAln_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False }) -}
eb54c5795cd87d65034c776d841620e0
  $fOrdPairedAln_$ccompare ::
    Lib.PairedAln -> Lib.PairedAln -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),A,A)><S(S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),A,A)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.PairedAln) (w1 :: Lib.PairedAln) ->
                 case w of ww { Lib.PairedAln ww1 ww2 ww3 ww4 ->
                 case ww1 of ww5 { Lib.AlignedRead ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ww36 ->
                 case w1 of ww37 { Lib.PairedAln ww38 ww39 ww40 ww41 ->
                 case ww38 of ww42 { Lib.AlignedRead ww43 ww44 ww45 ww46 ww47 ww48 ww49 ww50 ww51 ww52 ww53 ww54 ww55 ww56 ww57 ww58 ww59 ww60 ww61 ww62 ww63 ww64 ww65 ww66 ww67 ww68 ww69 ww70 ww71 ww72 ww73 ->
                 Lib.$w$ccompare5 ww8 ww9 ww11 ww2 ww45 ww46 ww48 ww39 } } } }) -}
eb54c5795cd87d65034c776d841620e0
  $fOrdPairedAln_$cmax ::
    Lib.PairedAln -> Lib.PairedAln -> Lib.PairedAln
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)><S(S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.PairedAln) (y :: Lib.PairedAln) ->
                 case Lib.$fOrdPairedAln_$ccompare x y of wild {
                   DEFAULT -> y GHC.Types.GT -> x }) -}
eb54c5795cd87d65034c776d841620e0
  $fOrdPairedAln_$cmin ::
    Lib.PairedAln -> Lib.PairedAln -> Lib.PairedAln
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)><S(S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.PairedAln) (y :: Lib.PairedAln) ->
                 case Lib.$fOrdPairedAln_$ccompare x y of wild {
                   DEFAULT -> x GHC.Types.GT -> y }) -}
3fd0d1813507d3804368ee979449d71a
  $fOrdUChr :: GHC.Classes.Ord Lib.UChr
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.UChr
                  Lib.$fEqUChr
                  Lib.$fOrdUChr_$ccompare
                  Lib.$fOrdUChr_$c<
                  Lib.$fOrdUChr_$c<=
                  Lib.$fOrdUChr_$c>
                  Lib.$fOrdUChr_$c>=
                  Lib.$fOrdUChr_$cmax
                  Lib.$fOrdUChr_$cmin -}
3fd0d1813507d3804368ee979449d71a
  $fOrdUChr_$c< :: Lib.UChr -> Lib.UChr -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.UChr) (b :: Lib.UChr) ->
                 case a of x1 { DEFAULT ->
                 case b of x2 { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x1 of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x2 of b# { DEFAULT ->
                 GHC.Prim.tagToEnum#
                   @ GHC.Types.Bool
                   (GHC.Prim.<# a# b#) } } } }) -}
3fd0d1813507d3804368ee979449d71a
  $fOrdUChr_$c<= :: Lib.UChr -> Lib.UChr -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.UChr) (b :: Lib.UChr) ->
                 case b of x1 { DEFAULT ->
                 case a of x2 { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x1 of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False } } } } }) -}
3fd0d1813507d3804368ee979449d71a
  $fOrdUChr_$c> :: Lib.UChr -> Lib.UChr -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.UChr) (b :: Lib.UChr) ->
                 case b of x1 { DEFAULT ->
                 case a of x2 { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x1 of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x2 of b# { DEFAULT ->
                 GHC.Prim.tagToEnum#
                   @ GHC.Types.Bool
                   (GHC.Prim.<# a# b#) } } } }) -}
3fd0d1813507d3804368ee979449d71a
  $fOrdUChr_$c>= :: Lib.UChr -> Lib.UChr -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.UChr) (b :: Lib.UChr) ->
                 case a of x1 { DEFAULT ->
                 case b of x2 { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x1 of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False } } } } }) -}
3fd0d1813507d3804368ee979449d71a
  $fOrdUChr_$ccompare :: Lib.UChr -> Lib.UChr -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.UChr) (b :: Lib.UChr) ->
                 case a of x1 { DEFAULT ->
                 case b of x2 { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x1 of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.GT GHC.Types.True -> GHC.Types.EQ }
                   GHC.Types.True -> GHC.Types.LT } } } } }) -}
3fd0d1813507d3804368ee979449d71a
  $fOrdUChr_$cmax :: Lib.UChr -> Lib.UChr -> Lib.UChr
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.UChr) (y :: Lib.UChr) ->
                 case y of x1 { DEFAULT ->
                 case x of x2 { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x1 of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False -> x1 GHC.Types.True -> x2 } } } } }) -}
3fd0d1813507d3804368ee979449d71a
  $fOrdUChr_$cmin :: Lib.UChr -> Lib.UChr -> Lib.UChr
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.UChr) (y :: Lib.UChr) ->
                 case y of x1 { DEFAULT ->
                 case x of x2 { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x1 of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False -> x2 GHC.Types.True -> x1 } } } } }) -}
72f14e6fcdc92b42047548db1c03b13e
  $fReadChromNameFormat :: GHC.Read.Read Lib.ChromNameFormat
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.ChromNameFormat
                  Lib.$fReadChromNameFormat_$creadsPrec
                  Lib.$fReadChromNameFormat_$creadList
                  Lib.$fReadChromNameFormat1
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Lib.ChromNameFormat>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Lib.ChromNameFormat>_R)))
                  Lib.$fReadChromNameFormat_$creadListPrec -}
72f14e6fcdc92b42047548db1c03b13e
  $fReadChromNameFormat1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Lib.ChromNameFormat -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2,
     Unfolding: (GHC.Read.$fRead()6
                   @ Lib.ChromNameFormat
                   Lib.$fReadChromNameFormat2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <Lib.ChromNameFormat>_R))) -}
e51af476a138af90acb51c3f1561182c
  $fReadChromNameFormat10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Lib.$fReadChromNameFormat11) -}
bed6beee7682341e84897718ea467a8a
  $fReadChromNameFormat11 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("GRC"#) -}
72f14e6fcdc92b42047548db1c03b13e
  $fReadChromNameFormat12 ::
    Text.ParserCombinators.ReadP.P [Lib.ChromNameFormat]
  {- Unfolding: ((Lib.$fReadChromNameFormat_$creadListPrec
                    `cast`
                  (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                       <[Lib.ChromNameFormat]>_R)
                    GHC.Read.$fRead()8)
                   `cast`
                 (Text.ParserCombinators.ReadP.N:ReadP[0] <[Lib.ChromNameFormat]>_R)
                   @ [Lib.ChromNameFormat]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                      @ [Lib.ChromNameFormat])) -}
72f14e6fcdc92b42047548db1c03b13e
  $fReadChromNameFormat2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP Lib.ChromNameFormat
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec) ->
                 GHC.Read.choose2
                   @ Lib.ChromNameFormat
                   Lib.$fReadChromNameFormat_sps
                   eta) -}
72f14e6fcdc92b42047548db1c03b13e
  $fReadChromNameFormat3 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec Lib.ChromNameFormat)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec Lib.ChromNameFormat)
                   Lib.$fReadChromNameFormat4
                   (GHC.Types.[]
                      @ (GHC.Base.String,
                         Text.ParserCombinators.ReadPrec.ReadPrec Lib.ChromNameFormat))) -}
72f14e6fcdc92b42047548db1c03b13e
  $fReadChromNameFormat4 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec Lib.ChromNameFormat)
  {- Strictness: m,
     Unfolding: ((Lib.$fReadChromNameFormat6,
                  Lib.$fReadChromNameFormat5
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Lib.ChromNameFormat>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Lib.ChromNameFormat>_R))))) -}
72f14e6fcdc92b42047548db1c03b13e
  $fReadChromNameFormat5 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Lib.ChromNameFormat -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds6 :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (k1 :: Lib.ChromNameFormat -> Text.ParserCombinators.ReadP.P b) ->
                 k1 Lib.UCSC) -}
2375bc180d99e32dab615220badedc25
  $fReadChromNameFormat6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Lib.$fReadChromNameFormat7) -}
cd58a8dc1485ab1a958b66b9324707e0
  $fReadChromNameFormat7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("UCSC"#) -}
72f14e6fcdc92b42047548db1c03b13e
  $fReadChromNameFormat8 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec Lib.ChromNameFormat)
  {- Strictness: m,
     Unfolding: ((Lib.$fReadChromNameFormat10,
                  Lib.$fReadChromNameFormat9
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Lib.ChromNameFormat>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Lib.ChromNameFormat>_R))))) -}
72f14e6fcdc92b42047548db1c03b13e
  $fReadChromNameFormat9 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Lib.ChromNameFormat -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds6 :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (k1 :: Lib.ChromNameFormat -> Text.ParserCombinators.ReadP.P b) ->
                 k1 Lib.GRC) -}
72f14e6fcdc92b42047548db1c03b13e
  $fReadChromNameFormat_$creadList ::
    Text.ParserCombinators.ReadP.ReadS [Lib.ChromNameFormat]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [Lib.ChromNameFormat]
                   Lib.$fReadChromNameFormat12) -}
72f14e6fcdc92b42047548db1c03b13e
  $fReadChromNameFormat_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec [Lib.ChromNameFormat]
  {- Unfolding: (GHC.Read.list
                   @ Lib.ChromNameFormat
                   Lib.$fReadChromNameFormat1
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                       <Lib.ChromNameFormat>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                  <Lib.ChromNameFormat>_R)))) -}
72f14e6fcdc92b42047548db1c03b13e
  $fReadChromNameFormat_$creadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS Lib.ChromNameFormat
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (n :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ Lib.ChromNameFormat
                   (GHC.Read.$fRead()6
                      @ Lib.ChromNameFormat
                      Lib.$fReadChromNameFormat2
                        `cast`
                      (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                <Lib.ChromNameFormat>_R))
                      n
                      @ Lib.ChromNameFormat
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ Lib.ChromNameFormat))) -}
72f14e6fcdc92b42047548db1c03b13e
  $fReadChromNameFormat_sps ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec Lib.ChromNameFormat)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec Lib.ChromNameFormat)
                   Lib.$fReadChromNameFormat8
                   Lib.$fReadChromNameFormat3) -}
ceb4d0ea9cbcc5b1524e546fcc802235
  $fReadRunStats :: GHC.Read.Read Lib.RunStats
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.RunStats
                  Lib.$fReadRunStats_$creadsPrec
                  Lib.$fReadRunStats_$creadList
                  Lib.$fReadRunStats1
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Lib.RunStats>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Lib.RunStats>_R)))
                  Lib.$fReadRunStats_$creadListPrec -}
ceb4d0ea9cbcc5b1524e546fcc802235
  $fReadRunStats1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Lib.RunStats -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2,
     Unfolding: (GHC.Read.$fRead()6
                   @ Lib.RunStats
                   Lib.$fReadRunStats2
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                       <Lib.RunStats>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                  <Lib.RunStats>_R)))) -}
ceb4d0ea9cbcc5b1524e546fcc802235
  $fReadRunStats2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Lib.RunStats -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S(S),1*U(U)><L,C(U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (w1 :: Lib.RunStats -> Text.ParserCombinators.ReadP.P b) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Lib.$w$creadPrec ww1 @ b w1 }) -}
ceb4d0ea9cbcc5b1524e546fcc802235
  $fReadRunStats3 :: Text.ParserCombinators.ReadP.P [Lib.RunStats]
  {- Unfolding: ((Lib.$fReadRunStats_$creadListPrec
                    `cast`
                  (Text.ParserCombinators.ReadPrec.N:ReadPrec[0] <[Lib.RunStats]>_R)
                    GHC.Read.$fRead()8)
                   `cast`
                 (Text.ParserCombinators.ReadP.N:ReadP[0] <[Lib.RunStats]>_R)
                   @ [Lib.RunStats]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                      @ [Lib.RunStats])) -}
ceb4d0ea9cbcc5b1524e546fcc802235
  $fReadRunStats_$creadList ::
    Text.ParserCombinators.ReadP.ReadS [Lib.RunStats]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [Lib.RunStats]
                   Lib.$fReadRunStats3) -}
ceb4d0ea9cbcc5b1524e546fcc802235
  $fReadRunStats_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec [Lib.RunStats]
  {- Unfolding: (GHC.Read.list
                   @ Lib.RunStats
                   Lib.$fReadRunStats1
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                       <Lib.RunStats>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                  <Lib.RunStats>_R)))) -}
ceb4d0ea9cbcc5b1524e546fcc802235
  $fReadRunStats_$creadsPrec ::
    GHC.Types.Int -> Text.ParserCombinators.ReadP.ReadS Lib.RunStats
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (n :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ Lib.RunStats
                   (GHC.Read.$fRead()6
                      @ Lib.RunStats
                      Lib.$fReadRunStats2
                        `cast`
                      (Trans
                           (<Text.ParserCombinators.ReadPrec.Prec>_R
                            ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                          <Lib.RunStats>_R))
                           (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                     <Lib.RunStats>_R)))
                      n
                      @ Lib.RunStats
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ Lib.RunStats))) -}
eb54c5795cd87d65034c776d841620e0
  $fShowAlignedRead :: GHC.Show.Show Lib.AlignedRead
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.AlignedRead
                  Lib.$fShowAlignedRead_$cshowsPrec
                  Lib.$fShowAlignedRead_$cshow
                  Lib.$fShowAlignedRead_$cshowList -}
eb54c5795cd87d65034c776d841620e0
  $fShowAlignedRead1 :: Lib.AlignedRead -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (Lib.$fShowAlignedRead_$cshowsPrec
                   Lib.$fShowAlignedRead2) -}
484e63b5567f167fc48766e170da097a
  $fShowAlignedRead2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
eb54c5795cd87d65034c776d841620e0
  $fShowAlignedRead_$cshow :: Lib.AlignedRead -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(1*U(U,U,U,U),U(U),1*U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),U,U,1*U(U,U,U,U),U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(1*U,U,U,1*U(U,U,U,U)),U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.AlignedRead) ->
                 Lib.$fShowAlignedRead_$cshowsPrec
                   Lib.$fShowAlignedRead2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
eb54c5795cd87d65034c776d841620e0
  $fShowAlignedRead_$cshowList :: [Lib.AlignedRead] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Lib.AlignedRead
                   Lib.$fShowAlignedRead1) -}
eb54c5795cd87d65034c776d841620e0
  $fShowAlignedRead_$cshowsPrec ::
    GHC.Types.Int -> Lib.AlignedRead -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S(S),1*U(U)><S,1*U(1*U(U,U,U,U),U(U),1*U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),U,U,1*U(U,U,U,U),U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(1*U,U,U,1*U(U,U,U,U)),U)> -}
1fc0d837b61ebbaa17edd71f0be30382
  $fShowBEDPE :: GHC.Show.Show Lib.BEDPE
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.BEDPE
                  Lib.$fShowBEDPE_$cshowsPrec
                  Lib.$fShowBEDPE_$cshow
                  Lib.$fShowBEDPE_$cshowList -}
1fc0d837b61ebbaa17edd71f0be30382
  $fShowBEDPE1 :: Lib.BEDPE -> GHC.Show.ShowS
  {- Arity: 1, Strictness: <S,1*U(1*U,U,U,1*U,U,U,1*U(U,U,U,U))>,
     Unfolding: (\ (w :: Lib.BEDPE) ->
                 case w of ww { Lib.BEDPE ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 Lib.$w$cshowsPrec 0# ww1 ww2 ww3 ww4 ww5 ww6 ww7 }) -}
1fc0d837b61ebbaa17edd71f0be30382
  $fShowBEDPE_$cshow :: Lib.BEDPE -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,U,U,1*U,U,U,1*U(U,U,U,U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.BEDPE) ->
                 Lib.$fShowBEDPE_$cshowsPrec
                   Lib.$fShowAlignedRead2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
1fc0d837b61ebbaa17edd71f0be30382
  $fShowBEDPE_$cshowList :: [Lib.BEDPE] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__ @ Lib.BEDPE Lib.$fShowBEDPE1) -}
1fc0d837b61ebbaa17edd71f0be30382
  $fShowBEDPE_$cshowsPrec ::
    GHC.Types.Int -> Lib.BEDPE -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S(S),1*U(U)><S,1*U(1*U,U,U,1*U,U,U,1*U(U,U,U,U))>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Lib.BEDPE) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Lib.BEDPE ww3 ww4 ww5 ww6 ww7 ww8 ww9 ->
                 Lib.$w$cshowsPrec ww1 ww3 ww4 ww5 ww6 ww7 ww8 ww9 } }) -}
863cf0b2559e3e0bbf1758c760210fb2
  $fShowBedRecord :: GHC.Show.Show Lib.BedRecord
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.BedRecord
                  Lib.$fShowBedRecord_$cshowsPrec
                  Lib.$fShowBedRecord_$cshow
                  Lib.$fShowBedRecord_$cshowList -}
863cf0b2559e3e0bbf1758c760210fb2
  $fShowBedRecord1 :: Lib.BedRecord -> GHC.Show.ShowS
  {- Arity: 1, Strictness: <S,1*U(1*U,U,U,1*U(U,U,U,U))>,
     Unfolding: (\ (w :: Lib.BedRecord) ->
                 case w of ww { Lib.BedRecord ww1 ww2 ww3 ww4 ->
                 Lib.$w$cshowsPrec1 0# ww1 ww2 ww3 ww4 }) -}
863cf0b2559e3e0bbf1758c760210fb2
  $fShowBedRecord_$cshow :: Lib.BedRecord -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,U,U,1*U(U,U,U,U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.BedRecord) ->
                 Lib.$fShowBedRecord_$cshowsPrec
                   Lib.$fShowAlignedRead2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
863cf0b2559e3e0bbf1758c760210fb2
  $fShowBedRecord_$cshowList :: [Lib.BedRecord] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Lib.BedRecord
                   Lib.$fShowBedRecord1) -}
863cf0b2559e3e0bbf1758c760210fb2
  $fShowBedRecord_$cshowsPrec ::
    GHC.Types.Int -> Lib.BedRecord -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S(S),1*U(U)><S,1*U(1*U,U,U,1*U(U,U,U,U))>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Lib.BedRecord) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Lib.BedRecord ww3 ww4 ww5 ww6 ->
                 Lib.$w$cshowsPrec1 ww1 ww3 ww4 ww5 ww6 } }) -}
72f14e6fcdc92b42047548db1c03b13e
  $fShowChromNameFormat :: GHC.Show.Show Lib.ChromNameFormat
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.ChromNameFormat
                  Lib.$fShowChromNameFormat_$cshowsPrec
                  Lib.$fShowChromNameFormat_$cshow
                  Lib.$fShowChromNameFormat_$cshowList -}
72f14e6fcdc92b42047548db1c03b13e
  $fShowChromNameFormat1 :: Lib.ChromNameFormat -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds6 :: Lib.ChromNameFormat) (eta :: GHC.Base.String) ->
                 case ds6 of wild {
                   Lib.GRC
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c2 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c2
                           n
                           Lib.$fReadChromNameFormat10)
                        eta
                   Lib.UCSC
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c2 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c2
                           n
                           Lib.$fReadChromNameFormat6)
                        eta }) -}
72f14e6fcdc92b42047548db1c03b13e
  $fShowChromNameFormat_$cshow ::
    Lib.ChromNameFormat -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.ChromNameFormat) ->
                 case x of wild {
                   Lib.GRC -> Lib.$fReadChromNameFormat10
                   Lib.UCSC -> Lib.$fReadChromNameFormat6 }) -}
72f14e6fcdc92b42047548db1c03b13e
  $fShowChromNameFormat_$cshowList ::
    [Lib.ChromNameFormat] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Lib.ChromNameFormat
                   Lib.$fShowChromNameFormat1) -}
72f14e6fcdc92b42047548db1c03b13e
  $fShowChromNameFormat_$cshowsPrec ::
    GHC.Types.Int -> Lib.ChromNameFormat -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds6 :: GHC.Types.Int)
                   (ds7 :: Lib.ChromNameFormat)
                   (eta :: GHC.Base.String) ->
                 case ds7 of wild {
                   Lib.GRC
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c2 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c2
                           n
                           Lib.$fReadChromNameFormat10)
                        eta
                   Lib.UCSC
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c2 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c2
                           n
                           Lib.$fReadChromNameFormat6)
                        eta }) -}
06caff25e138935957c1d9216ae6952f
  $fShowMasterRecord :: GHC.Show.Show Lib.MasterRecord
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.MasterRecord
                  Lib.$fShowMasterRecord_$cshowsPrec
                  Lib.$fShowMasterRecord_$cshow
                  Lib.$fShowMasterRecord_$cshowList -}
06caff25e138935957c1d9216ae6952f
  $fShowMasterRecord1 :: Lib.MasterRecord -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (Lib.$fShowMasterRecord_$cshowsPrec
                   Lib.$fShowAlignedRead2) -}
06caff25e138935957c1d9216ae6952f
  $fShowMasterRecord_$cshow :: Lib.MasterRecord -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(1*U,U,U,1*U(U,U,U,U),U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.MasterRecord) ->
                 Lib.$fShowMasterRecord_$cshowsPrec
                   Lib.$fShowAlignedRead2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
06caff25e138935957c1d9216ae6952f
  $fShowMasterRecord_$cshowList ::
    [Lib.MasterRecord] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Lib.MasterRecord
                   Lib.$fShowMasterRecord1) -}
06caff25e138935957c1d9216ae6952f
  $fShowMasterRecord_$cshowsPrec ::
    GHC.Types.Int -> Lib.MasterRecord -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S(S),1*U(U)><S,1*U(1*U,U,U,1*U(U,U,U,U),U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U))> -}
9397824cc9d01cf75666f6f250a9bd4d
  $fShowMidFamily :: GHC.Show.Show Lib.MidFamily
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.MidFamily
                  Lib.$fShowMidFamily_$cshowsPrec
                  Lib.$fShowMidFamily_$cshow
                  Lib.$fShowMidFamily_$cshowList -}
9397824cc9d01cf75666f6f250a9bd4d
  $fShowMidFamily1 :: Lib.MidFamily -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (Lib.$fShowMidFamily_$cshowsPrec
                   Lib.$fShowAlignedRead2) -}
9397824cc9d01cf75666f6f250a9bd4d
  $fShowMidFamily_$cshow :: Lib.MidFamily -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(1*U,U,U,1*U(U,U,U,U),U,U,U,U,U,1*U(1*U,U,U,1*U(U,U,U,U)))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.MidFamily) ->
                 Lib.$fShowMidFamily_$cshowsPrec
                   Lib.$fShowAlignedRead2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
9397824cc9d01cf75666f6f250a9bd4d
  $fShowMidFamily_$cshowList :: [Lib.MidFamily] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Lib.MidFamily
                   Lib.$fShowMidFamily1) -}
9397824cc9d01cf75666f6f250a9bd4d
  $fShowMidFamily_$cshowsPrec ::
    GHC.Types.Int -> Lib.MidFamily -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S(S),1*U(U)><S,1*U(1*U,U,U,1*U(U,U,U,U),U,U,U,U,U,1*U(1*U,U,U,1*U(U,U,U,U)))> -}
69605119a398f29c235919bcd7f9bece
  $fShowOpts :: GHC.Show.Show Lib.Opts
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.Opts
                  Lib.$fShowOpts_$cshowsPrec
                  Lib.$fShowOpts_$cshow
                  Lib.$fShowOpts_$cshowList -}
69605119a398f29c235919bcd7f9bece
  $fShowOpts1 :: Lib.Opts -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U(1*U,1*U,1*U,1*U)><L,U>,
     Unfolding: (\ (w :: Lib.Opts) (w1 :: GHC.Base.String) ->
                 case w of ww { Lib.Opts ww1 ww2 ww3 ww4 ->
                 Lib.$w$cshowsPrec2 0# ww1 ww2 ww3 ww4 w1 }) -}
b0dce34526d7fe73d169fb3950edf2c1
  $fShowOpts2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("}"#) -}
55c4026a27c28f74dc6bb7a0530325e9
  $fShowOpts3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("outfilename = "#) -}
398fae4c7afc5abec41e7f3d2661e15d
  $fShowOpts4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("insamfile = "#) -}
89ac53bf15b25d4fbda0fde0297aca39
  $fShowOpts5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("incoordsfile = "#) -}
4c8fed09590c2d481f380a1acff99f38
  $fShowOpts6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("bedpeformat = "#) -}
7ff6ac7f646d21f0393392b21f8a163c
  $fShowOpts7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Opts {"#) -}
69605119a398f29c235919bcd7f9bece
  $fShowOpts_$cshow :: Lib.Opts -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.Opts) ->
                 Lib.$fShowOpts_$cshowsPrec
                   Lib.$fShowAlignedRead2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
69605119a398f29c235919bcd7f9bece
  $fShowOpts_$cshowList :: [Lib.Opts] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__ @ Lib.Opts Lib.$fShowOpts1) -}
69605119a398f29c235919bcd7f9bece
  $fShowOpts_$cshowsPrec ::
    GHC.Types.Int -> Lib.Opts -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U,1*U,1*U)><L,U>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Lib.Opts) (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Lib.Opts ww3 ww4 ww5 ww6 ->
                 Lib.$w$cshowsPrec2 ww1 ww3 ww4 ww5 ww6 w2 } }) -}
eb54c5795cd87d65034c776d841620e0
  $fShowPairedAln :: GHC.Show.Show Lib.PairedAln
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.PairedAln
                  Lib.$fShowPairedAln_$cshowsPrec
                  Lib.$fShowPairedAln_$cshow
                  Lib.$fShowPairedAln_$cshowList -}
eb54c5795cd87d65034c776d841620e0
  $fShowPairedAln1 :: Lib.PairedAln -> GHC.Show.ShowS
  {- Arity: 1,
     Strictness: <S,1*U(1*U(1*U(U,U,U,U),U(U),1*U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),U,U,1*U(U,U,U,U),U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(1*U,U,U,1*U(U,U,U,U)),U),1*U(1*U(U,U,U,U),U(U),1*U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),U,U,1*U(U,U,U,U),U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(1*U,U,U,1*U(U,U,U,U)),U),U,U)>,
     Unfolding: (\ (w :: Lib.PairedAln) ->
                 case w of ww { Lib.PairedAln ww1 ww2 ww3 ww4 ->
                 Lib.$w$cshowsPrec3 0# ww1 ww2 ww3 ww4 }) -}
eb54c5795cd87d65034c776d841620e0
  $fShowPairedAln_$cshow :: Lib.PairedAln -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(1*U(1*U(U,U,U,U),U(U),1*U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),U,U,1*U(U,U,U,U),U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(1*U,U,U,1*U(U,U,U,U)),U),1*U(1*U(U,U,U,U),U(U),1*U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),U,U,1*U(U,U,U,U),U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(1*U,U,U,1*U(U,U,U,U)),U),U,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.PairedAln) ->
                 Lib.$fShowPairedAln_$cshowsPrec
                   Lib.$fShowAlignedRead2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
eb54c5795cd87d65034c776d841620e0
  $fShowPairedAln_$cshowList :: [Lib.PairedAln] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Lib.PairedAln
                   Lib.$fShowPairedAln1) -}
eb54c5795cd87d65034c776d841620e0
  $fShowPairedAln_$cshowsPrec ::
    GHC.Types.Int -> Lib.PairedAln -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S(S),1*U(U)><S,1*U(1*U(1*U(U,U,U,U),U(U),1*U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),U,U,1*U(U,U,U,U),U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(1*U,U,U,1*U(U,U,U,U)),U),1*U(1*U(U,U,U,U),U(U),1*U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),U,U,1*U(U,U,U,U),U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(1*U,U,U,1*U(U,U,U,U)),U),U,U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Lib.PairedAln) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Lib.PairedAln ww3 ww4 ww5 ww6 ->
                 Lib.$w$cshowsPrec3 ww1 ww3 ww4 ww5 ww6 } }) -}
ceb4d0ea9cbcc5b1524e546fcc802235
  $fShowRunStats :: GHC.Show.Show Lib.RunStats
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.RunStats
                  Lib.$fShowRunStats_$cshowsPrec
                  Lib.$fShowRunStats_$cshow
                  Lib.$fShowRunStats_$cshowList -}
ceb4d0ea9cbcc5b1524e546fcc802235
  $fShowRunStats1 :: Lib.RunStats -> GHC.Show.ShowS
  {- Arity: 1, Strictness: <S,1*U(U,U,U,U,1*U(U),1*U(U))>,
     Unfolding: (\ (w :: Lib.RunStats) ->
                 case w of ww { Lib.RunStats ww1 ww2 ww3 ww4 ww5 ww6 ->
                 Lib.$w$cshowsPrec4 0# ww1 ww2 ww3 ww4 ww5 ww6 }) -}
ceb4d0ea9cbcc5b1524e546fcc802235
  $fShowRunStats_$cshow :: Lib.RunStats -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(U,U,U,U,1*U(U),1*U(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.RunStats) ->
                 Lib.$fShowRunStats_$cshowsPrec
                   Lib.$fShowAlignedRead2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
ceb4d0ea9cbcc5b1524e546fcc802235
  $fShowRunStats_$cshowList :: [Lib.RunStats] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Lib.RunStats
                   Lib.$fShowRunStats1) -}
ceb4d0ea9cbcc5b1524e546fcc802235
  $fShowRunStats_$cshowsPrec ::
    GHC.Types.Int -> Lib.RunStats -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S(S),1*U(U)><S,1*U(U,U,U,U,1*U(U),1*U(U))>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Lib.RunStats) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Lib.RunStats ww3 ww4 ww5 ww6 ww7 ww8 ->
                 Lib.$w$cshowsPrec4 ww1 ww3 ww4 ww5 ww6 ww7 ww8 } }) -}
69814aa9d1fbec2649c78c6d1eb24076
  $fShowSAMFlag :: GHC.Show.Show Lib.SAMFlag
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.SAMFlag
                  Lib.$fShowSAMFlag_$cshowsPrec
                  Lib.$fShowSAMFlag_$cshow
                  Lib.$fShowSAMFlag_$cshowList -}
69814aa9d1fbec2649c78c6d1eb24076
  $fShowSAMFlag1 :: Lib.SAMFlag -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (Lib.$fShowSAMFlag_$cshowsPrec
                   Lib.$fShowAlignedRead2) -}
69814aa9d1fbec2649c78c6d1eb24076
  $fShowSAMFlag_$cshow :: Lib.SAMFlag -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.SAMFlag) ->
                 Lib.$fShowSAMFlag_$cshowsPrec
                   Lib.$fShowAlignedRead2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
69814aa9d1fbec2649c78c6d1eb24076
  $fShowSAMFlag_$cshowList :: [Lib.SAMFlag] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Lib.SAMFlag
                   Lib.$fShowSAMFlag1) -}
69814aa9d1fbec2649c78c6d1eb24076
  $fShowSAMFlag_$cshowsPrec ::
    GHC.Types.Int -> Lib.SAMFlag -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U))><L,U> -}
3fd0d1813507d3804368ee979449d71a
  $fShowUChr :: GHC.Show.Show Lib.UChr
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.UChr
                  Lib.$fShowUChr_$cshowsPrec
                  Lib.$fShowUChr_$cshow
                  Lib.$fShowUChr_$cshowList -}
3fd0d1813507d3804368ee979449d71a
  $fShowUChr1 :: Lib.UChr -> GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.UChr) (s :: GHC.Base.String)[OneShot] ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c2 :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr @ GHC.Types.Char @ b c2 n (Lib.$fShowUChr_$cshow x))
                   s) -}
3fd0d1813507d3804368ee979449d71a
  $fShowUChr_$cshow :: Lib.UChr -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U> -}
3fd0d1813507d3804368ee979449d71a
  $fShowUChr_$cshowList :: [Lib.UChr] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Lib.UChr]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Lib.UChr Lib.$fShowUChr1 ls s) -}
3fd0d1813507d3804368ee979449d71a
  $fShowUChr_$cshowsPrec ::
    GHC.Types.Int -> Lib.UChr -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds6 :: GHC.Types.Int) (x :: Lib.UChr) (s :: GHC.Base.String) ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c2 :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr @ GHC.Types.Char @ b c2 n (Lib.$fShowUChr_$cshow x))
                   s) -}
0d6217c9fc3a26f8f7a3af5a09d05ead
  $s$fApplicativeResourceT ::
    GHC.Base.Applicative
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  Lib.$s$fApplicativeResourceT_$s$fFunctorResourceT
                  (\ @ a (eta :: a) ->
                   let {
                     x :: GHC.Prim.State# GHC.Prim.RealWorld
                          -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                       {- Arity: 1 -}
                     = \ (s :: GHC.Prim.State# GHC.Prim.RealWorld) -> (# s, eta #)
                   } in
                   (\ (ds6 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                    x)
                     `cast`
                   (Trans
                        (<GHC.IORef.IORef
                            Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                         ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                        (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                  <GHC.Types.IO>_R <a>_N))))
                  (\ @ a
                     @ b
                     (ds6 :: Control.Monad.Trans.Resource.Internal.ResourceT
                               GHC.Types.IO (a -> b))
                     (ds7 :: Control.Monad.Trans.Resource.Internal.ResourceT
                               GHC.Types.IO a)
                     (r :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (ds6
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <a -> b>_N)
                           r)
                          `cast`
                        (GHC.Types.N:IO[0] <a -> b>_R)
                          s of ds8 { (#,#) ipv ipv1 ->
                   case (ds7
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <a>_N)
                           r)
                          `cast`
                        (GHC.Types.N:IO[0] <a>_R)
                          ipv of ds9 { (#,#) ipv2 ipv3 ->
                   (# ipv2, ipv1 ipv3 #) } })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   Trans
                       (<Control.Monad.Trans.Resource.Internal.ResourceT
                           GHC.Types.IO (a -> b)>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO a>_R
                        ->_R <GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                        ->_R Sym (GHC.Types.N:IO[0] <b>_R))
                       (<Control.Monad.Trans.Resource.Internal.ResourceT
                           GHC.Types.IO (a -> b)>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO a>_R
                        ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                      <GHC.Types.IO>_R <b>_N)))
                  (\ @ a
                     @ b
                     @ c2
                     (eta :: a -> b -> c2)
                     (eta1 :: Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO a)
                     (eta2 :: Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b)
                     (eta3 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (eta1
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <a>_N)
                           eta3)
                          `cast`
                        (GHC.Types.N:IO[0] <a>_R)
                          s of ds6 { (#,#) ipv ipv1 ->
                   case (eta2
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <b>_N)
                           eta3)
                          `cast`
                        (GHC.Types.N:IO[0] <b>_R)
                          ipv of ds7 { (#,#) ipv2 ipv3 ->
                   (# ipv2, eta ipv1 ipv3 #) } })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N) (c2 :: <*>_N).
                   Trans
                       (<a -> b -> c2>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO a>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b>_R
                        ->_R <GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                        ->_R Sym (GHC.Types.N:IO[0] <c2>_R))
                       (<a -> b -> c2>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO a>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b>_R
                        ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                      <GHC.Types.IO>_R <c2>_N)))
                  (\ @ a
                     @ b
                     (eta :: Control.Monad.Trans.Resource.Internal.ResourceT
                               GHC.Types.IO a)
                     (eta1 :: Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b)
                     (eta2 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (eta
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <a>_N)
                           eta2)
                          `cast`
                        (GHC.Types.N:IO[0] <a>_R)
                          s of ds6 { (#,#) ipv ipv1 ->
                   (eta1
                      `cast`
                    (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                         <GHC.Types.IO>_R <b>_N)
                      eta2)
                     `cast`
                   (GHC.Types.N:IO[0] <b>_R)
                     ipv })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   Trans
                       (<Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b>_R
                        ->_R <GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                        ->_R Sym (GHC.Types.N:IO[0] <b>_R))
                       (<Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b>_R
                        ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                      <GHC.Types.IO>_R <b>_N)))
                  (\ @ a
                     @ b
                     (eta1 :: Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO a)
                     (eta2 :: Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b)
                     (eta3 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (eta1
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <a>_N)
                           eta3)
                          `cast`
                        (GHC.Types.N:IO[0] <a>_R)
                          s of ds6 { (#,#) ipv ipv1 ->
                   case (eta2
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <b>_N)
                           eta3)
                          `cast`
                        (GHC.Types.N:IO[0] <b>_R)
                          ipv of ds7 { (#,#) ipv2 ipv3 ->
                   (# ipv2, ipv1 #) } })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   Trans
                       (<Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b>_R
                        ->_R <GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                        ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                       (<Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b>_R
                        ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                      <GHC.Types.IO>_R <a>_N))) -}
fb0d584f3d1aaefa007a6785ea3c852b
  $s$fApplicativeResourceT_$cpure ::
    a -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,A><S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (eta :: a) ->
                 let {
                   x :: GHC.Prim.State# GHC.Prim.RealWorld
                        -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                     {- Arity: 1 -}
                   = \ (s :: GHC.Prim.State# GHC.Prim.RealWorld) -> (# s, eta #)
                 } in
                 (\ (ds6 :: GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                  x)
                   `cast`
                 (Trans
                      (<GHC.IORef.IORef
                          Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                       ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                      (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                <GHC.Types.IO>_R <a>_N)))) -}
f17570451c8742fc13333890648a8d31
  $s$fApplicativeResourceT_$s$fFunctorResourceT ::
    GHC.Base.Functor
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  (\ @ a
                     @ b
                     (f8 :: a -> b)
                     (ds6 :: Control.Monad.Trans.Resource.Internal.ResourceT
                               GHC.Types.IO a)
                     (r :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (ds6
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <a>_N)
                           r)
                          `cast`
                        (GHC.Types.N:IO[0] <a>_R)
                          s of ds7 { (#,#) ipv ipv1 ->
                   (# ipv, f8 ipv1 #) })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   Trans
                       (<a -> b>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO a>_R
                        ->_R <GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                        ->_R Sym (GHC.Types.N:IO[0] <b>_R))
                       (<a -> b>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO a>_R
                        ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                      <GHC.Types.IO>_R <b>_N)))
                  (\ @ a
                     @ b
                     (x :: a)
                     (eta :: Control.Monad.Trans.Resource.Internal.ResourceT
                               GHC.Types.IO b)
                     (eta1 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (eta
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <b>_N)
                           eta1)
                          `cast`
                        (GHC.Types.N:IO[0] <b>_R)
                          s of ds6 { (#,#) ipv ipv1 ->
                   (# ipv, x #) })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   Trans
                       (<a>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b>_R
                        ->_R <GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                        ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                       (<a>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b>_R
                        ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                      <GHC.Types.IO>_R <a>_N))) -}
4ffdc07b4346f799e2b2a1da116d3e5c
  $s$fEq(,) ::
    GHC.Classes.Eq
      (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                  (GHC.Classes.$fEq(,)_$c==
                     @ GHC.Integer.Type.Integer
                     @ Data.ByteString.Internal.ByteString
                     GHC.Integer.Type.$fEqInteger
                     Data.ByteString.Internal.$fEqByteString)
                  (GHC.Classes.$fEq(,)_$c/=
                     @ GHC.Integer.Type.Integer
                     @ Data.ByteString.Internal.ByteString
                     GHC.Integer.Type.$fEqInteger
                     Data.ByteString.Internal.$fEqByteString) -}
a53ab8b9d8a87096ca0cf4bf5f237309
  $s$fMonadResourceT ::
    GHC.Base.Monad
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  Lib.$s$fApplicativeResourceT
                  (\ @ a
                     @ b
                     (ds6 :: Control.Monad.Trans.Resource.Internal.ResourceT
                               GHC.Types.IO a)
                     (f8 :: a
                            -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO b)
                     (r :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (ds6
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <a>_N)
                           r)
                          `cast`
                        (GHC.Types.N:IO[0] <a>_R)
                          s of ds7 { (#,#) ipv ipv1 ->
                   ((f8 ipv1)
                      `cast`
                    (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                         <GHC.Types.IO>_R <b>_N)
                      r)
                     `cast`
                   (GHC.Types.N:IO[0] <b>_R)
                     ipv })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   Trans
                       (<Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                        ->_R <a
                              -> Control.Monad.Trans.Resource.Internal.ResourceT
                                   GHC.Types.IO b>_R
                        ->_R <GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                        ->_R Sym (GHC.Types.N:IO[0] <b>_R))
                       (<Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                        ->_R <a
                              -> Control.Monad.Trans.Resource.Internal.ResourceT
                                   GHC.Types.IO b>_R
                        ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                      <GHC.Types.IO>_R <b>_N)))
                  Lib.$s$fMonadResourceT_$s$fMonadResourceT_$c>>
                  (\ @ a (eta :: a) ->
                   let {
                     x :: GHC.Prim.State# GHC.Prim.RealWorld
                          -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                       {- Arity: 1 -}
                     = \ (s :: GHC.Prim.State# GHC.Prim.RealWorld) -> (# s, eta #)
                   } in
                   (\ (ds6 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                    x)
                     `cast`
                   (Trans
                        (<GHC.IORef.IORef
                            Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                         ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                        (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                  <GHC.Types.IO>_R <a>_N))))
                  (\ @ a ->
                   GHC.Err.errorWithoutStackTrace
                     @ 'GHC.Types.LiftedRep
                     @ (Control.Monad.Trans.Resource.Internal.ResourceT
                          GHC.Types.IO a)) -}
485558e9d3dc4dea515bb6721d0040ed
  $s$fMonadResourceT_$s$fMonadResourceT_$c>> ::
    Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
    -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO b
    -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO b
  {- Arity: 4, HasNoCafRefs,
     Strictness: <C(C(S(SL))),1*C1(C1(U(U,A)))><L,1*C1(C1(U(U,U)))><L,U><S,U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ a
                   @ b
                   (m109 :: Control.Monad.Trans.Resource.Internal.ResourceT
                              GHC.Types.IO a)
                   (k1 :: Control.Monad.Trans.Resource.Internal.ResourceT
                            GHC.Types.IO b)
                   (r :: GHC.IORef.IORef
                           Control.Monad.Trans.Resource.Internal.ReleaseMap)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (m109
                         `cast`
                       (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                            <GHC.Types.IO>_R <a>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0] <a>_R)
                        s of ds6 { (#,#) ipv ipv1 ->
                 (k1
                    `cast`
                  (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                       <GHC.Types.IO>_R <b>_N)
                    r)
                   `cast`
                 (GHC.Types.N:IO[0] <b>_R)
                   ipv })
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N).
                 Trans
                     (<Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                      ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                              GHC.Types.IO b>_R
                      ->_R <GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                      ->_R Sym (GHC.Types.N:IO[0] <b>_R))
                     (<Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                      ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                              GHC.Types.IO b>_R
                      ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                    <GHC.Types.IO>_R <b>_N))) -}
6a7684ffaaed592f9203a42d489a3ce8
  $sfromList :: [(Lib.UChr, a)] -> Data.Map.Internal.Map Lib.UChr a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a (ds6 :: [(Lib.UChr, a)]) ->
                 case ds6 of wild {
                   [] -> Data.Map.Internal.Tip @ Lib.UChr @ a
                   : ds7 ds8
                   -> case ds7 of wild1 { (,) kx x ->
                      case ds8 of wild2 {
                        []
                        -> case x of x1 { DEFAULT ->
                           case kx of dt { DEFAULT ->
                           Data.Map.Internal.Bin
                             @ Lib.UChr
                             @ a
                             1#
                             dt
                             x1
                             (Data.Map.Internal.Tip @ Lib.UChr @ a)
                             (Data.Map.Internal.Tip @ Lib.UChr @ a) } }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds9 ->
                           case GHC.Prim.dataToTag# @ Lib.UChr kx of a# { DEFAULT ->
                           case GHC.Prim.dataToTag# @ Lib.UChr ky of b# { DEFAULT ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<# a# b#) of wild4 {
                             GHC.Types.False
                             -> case x of x0 { DEFAULT ->
                                Lib.$sfromList1
                                  @ a
                                  (Data.Map.Internal.Bin
                                     @ Lib.UChr
                                     @ a
                                     1#
                                     kx
                                     x0
                                     (Data.Map.Internal.Tip @ Lib.UChr @ a)
                                     (Data.Map.Internal.Tip @ Lib.UChr @ a))
                                  wild2 }
                             GHC.Types.True
                             -> case x of x0 { DEFAULT ->
                                Lib.$wpoly_go8
                                  @ a
                                  1#
                                  (Data.Map.Internal.Bin
                                     @ Lib.UChr
                                     @ a
                                     1#
                                     kx
                                     x0
                                     (Data.Map.Internal.Tip @ Lib.UChr @ a)
                                     (Data.Map.Internal.Tip @ Lib.UChr @ a))
                                  wild2 } } } } } } } }) -}
3b847dfb6b7fe347dd5072b0d44d9d05
  $sfromList1 ::
    Data.Map.Internal.Map Lib.UChr a
    -> [(Lib.UChr, a)] -> Data.Map.Internal.Map Lib.UChr a
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
aeb385e38ec0060db297bffffaa7f9fd
  $sfromList2 ::
    [(GHC.Types.Int, a)] -> Data.Map.Internal.Map GHC.Types.Int a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a (ds6 :: [(GHC.Types.Int, a)]) ->
                 case ds6 of wild {
                   [] -> Data.Map.Internal.Tip @ GHC.Types.Int @ a
                   : ds7 ds8
                   -> case ds7 of wild1 { (,) kx x ->
                      case ds8 of wild2 {
                        []
                        -> case x of x1 { DEFAULT ->
                           case kx of dt { GHC.Types.I# ipv ->
                           Data.Map.Internal.Bin
                             @ GHC.Types.Int
                             @ a
                             1#
                             dt
                             x1
                             (Data.Map.Internal.Tip @ GHC.Types.Int @ a)
                             (Data.Map.Internal.Tip @ GHC.Types.Int @ a) } }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds9 ->
                           case kx of wild4 { GHC.Types.I# x1 ->
                           case ky of wild5 { GHC.Types.I# y ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.>=# x1 y) of wild6 {
                             GHC.Types.False
                             -> case x of x0 { DEFAULT ->
                                Lib.$wpoly_go1
                                  @ a
                                  1#
                                  (Data.Map.Internal.Bin
                                     @ GHC.Types.Int
                                     @ a
                                     1#
                                     wild4
                                     x0
                                     (Data.Map.Internal.Tip @ GHC.Types.Int @ a)
                                     (Data.Map.Internal.Tip @ GHC.Types.Int @ a))
                                  wild2 }
                             GHC.Types.True
                             -> case x of x0 { DEFAULT ->
                                Lib.$sfromList3
                                  @ a
                                  (Data.Map.Internal.Bin
                                     @ GHC.Types.Int
                                     @ a
                                     1#
                                     wild4
                                     x0
                                     (Data.Map.Internal.Tip @ GHC.Types.Int @ a)
                                     (Data.Map.Internal.Tip @ GHC.Types.Int @ a))
                                  wild2 } } } } } } } }) -}
a9cb16caa9495bad082fb3237ae097de
  $sfromList3 ::
    Data.Map.Internal.Map GHC.Types.Int a
    -> [(GHC.Types.Int, a)] -> Data.Map.Internal.Map GHC.Types.Int a
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
a1c50a45d8d0362db7a7e9abe4076e7c
  $sfromList4 :: [Lib.UChr] -> Data.Set.Internal.Set Lib.UChr
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds6 :: [Lib.UChr]) ->
                 case ds6 of wild {
                   [] -> Data.Set.Internal.Tip @ Lib.UChr
                   : x ds7
                   -> case ds7 of wild1 {
                        []
                        -> case x of dt { DEFAULT ->
                           Data.Set.Internal.Bin
                             @ Lib.UChr
                             1#
                             dt
                             (Data.Set.Internal.Tip @ Lib.UChr)
                             (Data.Set.Internal.Tip @ Lib.UChr) }
                        : ipv ipv1
                        -> case GHC.Prim.dataToTag# @ Lib.UChr x of a# { DEFAULT ->
                           case GHC.Prim.dataToTag# @ Lib.UChr ipv of b# { DEFAULT ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<# a# b#) of wild2 {
                             GHC.Types.False
                             -> Lib.$sfromList_go4
                                  (Data.Set.Internal.Bin
                                     @ Lib.UChr
                                     1#
                                     x
                                     (Data.Set.Internal.Tip @ Lib.UChr)
                                     (Data.Set.Internal.Tip @ Lib.UChr))
                                  wild1
                             GHC.Types.True
                             -> Lib.$wgo3
                                  1#
                                  (Data.Set.Internal.Bin
                                     @ Lib.UChr
                                     1#
                                     x
                                     (Data.Set.Internal.Tip @ Lib.UChr)
                                     (Data.Set.Internal.Tip @ Lib.UChr))
                                  wild1 } } } } }) -}
df46b9b0e30a3549218a50eb04889bdb
  $sfromList_go4 ::
    Data.Set.Internal.Set Lib.UChr
    -> [Lib.UChr] -> Data.Set.Internal.Set Lib.UChr
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
83f841744353b421384cd57bd59636d4
  $sinsert_$sgo3 ::
    Lib.UChr
    -> Lib.UChr
    -> Data.Set.Internal.Set Lib.UChr
    -> Data.Set.Internal.Set Lib.UChr
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U> -}
7e00b78f80f202c14b5a2a0b96b452fa
  $sinsert_$sgo8 ::
    Lib.UChr
    -> a1
    -> Data.Map.Internal.Map Lib.UChr a1
    -> Data.Map.Internal.Map Lib.UChr a1
  {- Arity: 3, Strictness: <S,1*U><S,1*U><S,1*U> -}
9b857dc23d7189110ee5780bd5f77a1f
  $slookup1 ::
    Lib.UChr -> Data.Map.Internal.Map Lib.UChr a -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
741aec9f1530916fe89de63f9965a648
  $tc'AlignedRead :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16799439505543419683##
                   16975083743554811853##
                   Lib.$trModule
                   Lib.$tc'AlignedRead2
                   0#
                   Lib.$tc'AlignedRead1) -}
37e7caa751cee778c8e86d42a97069d0
  $tc'AlignedRead1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
373899885ceba3faf42728038838550b
  $tc'AlignedRead2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'AlignedRead3) -}
489e95e59614630f069dd4017a54ed77
  $tc'AlignedRead3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'AlignedRead"#) -}
bcb648db1b2963e05b9472b6b8093f52
  $tc'BEDPE :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9466841502387643638##
                   7354701471863721637##
                   Lib.$trModule
                   Lib.$tc'BEDPE2
                   0#
                   Lib.$tc'BEDPE1) -}
52610206b6a23155dfe4d3c55cae0a04
  $tc'BEDPE1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
f84f6f19e1c21a10dd16c753aadf63f4
  $tc'BEDPE2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'BEDPE3) -}
d19001b97327bce59e5923f914af2bab
  $tc'BEDPE3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'BEDPE"#) -}
43747ddd541dcc5ab70b75f744403285
  $tc'BedRecord :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1103120471900703835##
                   3285749516279829430##
                   Lib.$trModule
                   Lib.$tc'BedRecord2
                   0#
                   Lib.$tc'BedRecord1) -}
222c20d9043b33d097bb4429631d9072
  $tc'BedRecord1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
046ed09da6247c7ed6c4db5a29483473
  $tc'BedRecord2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'BedRecord3) -}
1a8bd6d990deb2825fe13d227fefc9b3
  $tc'BedRecord3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'BedRecord"#) -}
69570d846c96034b05d82e62e70f9f58
  $tc'C1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16103020461777423125##
                   13609417975912947976##
                   Lib.$trModule
                   Lib.$tc'C30
                   0#
                   Lib.$tc'C29) -}
acf1f26ab7f38022f2f733b5f95fd2a8
  $tc'C10 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1322805297255343229##
                   8808756476405141310##
                   Lib.$trModule
                   Lib.$tc'C32
                   0#
                   Lib.$tc'C29) -}
6e43205d9b3185138143352d4cc336ed
  $tc'C11 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1971526839721659735##
                   4642799147683838794##
                   Lib.$trModule
                   Lib.$tc'C34
                   0#
                   Lib.$tc'C29) -}
066e68eff8300226513865dd68eb1a4e
  $tc'C12 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   963706274800871884##
                   13458711019948373286##
                   Lib.$trModule
                   Lib.$tc'C36
                   0#
                   Lib.$tc'C29) -}
7e75651a5058a1c335dba51c5c2e64be
  $tc'C13 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14046747375282704519##
                   14583589129807353539##
                   Lib.$trModule
                   Lib.$tc'C38
                   0#
                   Lib.$tc'C29) -}
a309f5a661dc5d2ea5572ecf578fb3f1
  $tc'C14 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5852279225200040548##
                   3299712678439570988##
                   Lib.$trModule
                   Lib.$tc'C40
                   0#
                   Lib.$tc'C29) -}
86b6b59573985c7eeb0b0970001740f5
  $tc'C15 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15044622498327623609##
                   8228967238314414858##
                   Lib.$trModule
                   Lib.$tc'C42
                   0#
                   Lib.$tc'C29) -}
5846de2c07350d054777672304f67b79
  $tc'C16 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15526692854328663542##
                   8911886552160990459##
                   Lib.$trModule
                   Lib.$tc'C44
                   0#
                   Lib.$tc'C29) -}
8e39e351cbad2bfb4972ecaadf24e441
  $tc'C17 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13502503018949385946##
                   1147849468935017573##
                   Lib.$trModule
                   Lib.$tc'C46
                   0#
                   Lib.$tc'C29) -}
d15c08f0499ddec91d36e4c7fb47879e
  $tc'C18 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4458027972939344171##
                   2566582898683216531##
                   Lib.$trModule
                   Lib.$tc'C48
                   0#
                   Lib.$tc'C29) -}
f8374f96554216b7a7253e987cf6dbb0
  $tc'C19 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3219284884522479308##
                   10992521726302106924##
                   Lib.$trModule
                   Lib.$tc'C50
                   0#
                   Lib.$tc'C29) -}
28ec2d0f573e9cd06bac3890d8af2bde
  $tc'C2 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12456366982537265262##
                   7910869438091749593##
                   Lib.$trModule
                   Lib.$tc'C52
                   0#
                   Lib.$tc'C29) -}
70bccf6a4009b57f018cf785b52ab9f6
  $tc'C20 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15049284763176240755##
                   1491359529693863644##
                   Lib.$trModule
                   Lib.$tc'C54
                   0#
                   Lib.$tc'C29) -}
e8795faca2f0ad9e7687b01cc73692c0
  $tc'C21 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   506535236407203512##
                   14711773660428893820##
                   Lib.$trModule
                   Lib.$tc'C56
                   0#
                   Lib.$tc'C29) -}
8332ecc82625ea2c7288b85116adf7a2
  $tc'C22 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10845773651895661396##
                   7587238412877504843##
                   Lib.$trModule
                   Lib.$tc'C58
                   0#
                   Lib.$tc'C29) -}
2abda644568e326fed84994a9b070dea
  $tc'C29 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
c98c1bb43f860951e4a93b35a283b12a
  $tc'C3 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12604050072050216180##
                   14088609358180670502##
                   Lib.$trModule
                   Lib.$tc'C60
                   0#
                   Lib.$tc'C29) -}
2e2872ccc2654043334395bdfe4428c6
  $tc'C30 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C31) -}
0d233ccdba1f52889523d57f0d6ebac7
  $tc'C31 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C1"#) -}
1ea845c736335fbaf3cd32fd515c475b
  $tc'C32 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C33) -}
2cc8bf0c4187c1923789e201a5a4daf0
  $tc'C33 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C10"#) -}
78dd021518fb22b3019cda67a6491fd2
  $tc'C34 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C35) -}
c4a4e9f5c52270ad9d0459dd825c8850
  $tc'C35 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C11"#) -}
2129a862de82524c5517e5a49921f3b3
  $tc'C36 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C37) -}
539b512d0f7fd4668c81d4ef331ef9ed
  $tc'C37 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C12"#) -}
3376a9c6f857bea85c3cd1ea91349951
  $tc'C38 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C39) -}
afaf6d51f5e67759765af7eaeab558eb
  $tc'C39 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C13"#) -}
ab5da636e6e5043a383e922a848a4740
  $tc'C4 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1701672845278259407##
                   3423736056396010821##
                   Lib.$trModule
                   Lib.$tc'C62
                   0#
                   Lib.$tc'C29) -}
73b5da85927d50c333f636dcbde4d191
  $tc'C40 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C41) -}
fcb3c38e2ecc5ca09b34e328ce7cf012
  $tc'C41 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C14"#) -}
c86baabd77765dabde1c42830737d2f1
  $tc'C42 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C43) -}
c86cfff25ee8dff3f132e34b76e1e970
  $tc'C43 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C15"#) -}
f00a68ea6fc4a63ea48033fed8a318d5
  $tc'C44 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C45) -}
3b2f4a8acaa49f8f28cb002821cffbc2
  $tc'C45 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C16"#) -}
b59376baf277dff35ffaa2d5f11972d1
  $tc'C46 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C47) -}
dab6857cb1bcef93c58f25655f771aec
  $tc'C47 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C17"#) -}
77cd1ab89cf218372499f2003cb1768f
  $tc'C48 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C49) -}
a40c64f130c4ed684018cfe688b91cf4
  $tc'C49 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C18"#) -}
99272fcccd2ba6458fd55c53da5b9ef9
  $tc'C5 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   790846131072290952##
                   2783708078874919271##
                   Lib.$trModule
                   Lib.$tc'C64
                   0#
                   Lib.$tc'C29) -}
eff8cf80d70c5d7a00490bb8cc7bf419
  $tc'C50 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C51) -}
07b9abdac52682d1928e9a306985dbc6
  $tc'C51 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C19"#) -}
8d21ed89289f079d37813ae26130464a
  $tc'C52 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C53) -}
759e16ed93c142d8ad6cac32d75dac76
  $tc'C53 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C2"#) -}
fb0131fb2fc6ff17a64c127fce427d5a
  $tc'C54 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C55) -}
37dd2e455214184f368024f48ad09978
  $tc'C55 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C20"#) -}
beaeba2d92e17ea971231c981682d081
  $tc'C56 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C57) -}
f959554a42384c6659ae2d82a7c11c58
  $tc'C57 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C21"#) -}
3ec877180cdbc402ab252259fec41255
  $tc'C58 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C59) -}
900445411fab752a005a1f8c9b121de7
  $tc'C59 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C22"#) -}
0ea4fd7dce9411076a6b31c7de8b58ee
  $tc'C6 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13332263457700599107##
                   13781554842857497072##
                   Lib.$trModule
                   Lib.$tc'C66
                   0#
                   Lib.$tc'C29) -}
d6853a39a27217206bdecb9402765135
  $tc'C60 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C61) -}
34484d5ea05ff7ae2269f72cfc4f5ad6
  $tc'C61 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C3"#) -}
46616d60fdec847c3ed2a461efad73f2
  $tc'C62 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C63) -}
ae84ef65db28cc59ae9867e809b50d3d
  $tc'C63 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C4"#) -}
6dc1a1e2efe8f2ca7d7b37009a2f3e71
  $tc'C64 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C65) -}
2ae65b8700a96312347273034c32502d
  $tc'C65 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C5"#) -}
70f8c189be766ee94d213f543c9e0b15
  $tc'C66 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C67) -}
2c716c4ceee807fb671349b541592087
  $tc'C67 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C6"#) -}
fbb6608aeb8dd31156fa917c5b00908d
  $tc'C68 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C69) -}
67747efca4a6a0d1376cc5decdf51831
  $tc'C69 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C7"#) -}
b01c45e5dbe84808c4118590d8ec1dfa
  $tc'C7 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4271757986585727223##
                   5740869213660890494##
                   Lib.$trModule
                   Lib.$tc'C68
                   0#
                   Lib.$tc'C29) -}
1f3b8f2ba13fe6faf7eb67f761db8bd7
  $tc'C70 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C71) -}
b851a2755fcd3a64accb85d7ba2d5c4d
  $tc'C71 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C8"#) -}
0d78e87213b1071dfd8776f459a7084a
  $tc'C72 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C73) -}
159dd26a97496787eb74acd101439735
  $tc'C73 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C9"#) -}
47b694a2395c77e98bf6627183c7f4c9
  $tc'C8 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7262545289090011936##
                   10716578958294339858##
                   Lib.$trModule
                   Lib.$tc'C70
                   0#
                   Lib.$tc'C29) -}
8555f1a3696c9d7b752658e2960d997f
  $tc'C9 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   917860430533001467##
                   15132407967769768363##
                   Lib.$trModule
                   Lib.$tc'C72
                   0#
                   Lib.$tc'C29) -}
3b8a94d7126dbaa5f54f678f733750e8
  $tc'CMT :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13705607147453578286##
                   7761483181266269511##
                   Lib.$trModule
                   Lib.$tc'CMT1
                   0#
                   Lib.$tc'C29) -}
fafd304a4364fc1c452e131bc9d8ec7d
  $tc'CMT1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'CMT2) -}
7b9164125bbb5cc680fb5d1b75caba6f
  $tc'CMT2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'CMT"#) -}
8b25a0e866b377ebc359799d4ae896e1
  $tc'CX :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2728338565306269994##
                   4651909404287342887##
                   Lib.$trModule
                   Lib.$tc'CX1
                   0#
                   Lib.$tc'C29) -}
93c29e12c5503b380ff06329fc715c09
  $tc'CX1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'CX2) -}
c23bd3055b11750d438c599fc3721752
  $tc'CX2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'CX"#) -}
0e1095bf6da559b3751ad00f535ca240
  $tc'CY :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14637236564842266369##
                   16538084768524905063##
                   Lib.$trModule
                   Lib.$tc'CY1
                   0#
                   Lib.$tc'C29) -}
baa016be9a25a6965dc635a03a72e452
  $tc'CY1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'CY2) -}
0330e163b00fd01936983ef92733de3e
  $tc'CY2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'CY"#) -}
a9e2afc6f77b9c775e84a6b9e7096745
  $tc'Chr1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16593184405878347721##
                   15790752352315385324##
                   Lib.$trModule
                   Lib.$tc'Chr29
                   0#
                   Lib.$tc'C29) -}
b8b94d4e708325b48c6f7a21423af697
  $tc'Chr10 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6997796439755426962##
                   1968741717539293076##
                   Lib.$trModule
                   Lib.$tc'Chr31
                   0#
                   Lib.$tc'C29) -}
aebece99250425272a6c159c1dc900bf
  $tc'Chr11 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17848846705793634345##
                   11194098421681829687##
                   Lib.$trModule
                   Lib.$tc'Chr33
                   0#
                   Lib.$tc'C29) -}
3b48632f57b10acaa9925b88cfc05862
  $tc'Chr12 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11902475432718948590##
                   429258830136016574##
                   Lib.$trModule
                   Lib.$tc'Chr35
                   0#
                   Lib.$tc'C29) -}
f4dce9e331cd917b83578609fb438be5
  $tc'Chr13 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15804512965749246365##
                   13775961578790523039##
                   Lib.$trModule
                   Lib.$tc'Chr37
                   0#
                   Lib.$tc'C29) -}
567736098aa4b80d054cfb567ffe2f8f
  $tc'Chr14 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2031329312677918178##
                   14104223256820716824##
                   Lib.$trModule
                   Lib.$tc'Chr39
                   0#
                   Lib.$tc'C29) -}
262f92471998913d695b4378e096c435
  $tc'Chr15 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1538860519726224680##
                   7962818381041766899##
                   Lib.$trModule
                   Lib.$tc'Chr41
                   0#
                   Lib.$tc'C29) -}
9dbafd61dd4860048dafda94b419f3a1
  $tc'Chr16 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5999087616622871446##
                   15620256143639208260##
                   Lib.$trModule
                   Lib.$tc'Chr43
                   0#
                   Lib.$tc'C29) -}
7450291841789712d9f8e89aacd8db4c
  $tc'Chr17 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   192919254057501999##
                   6094112895933074177##
                   Lib.$trModule
                   Lib.$tc'Chr45
                   0#
                   Lib.$tc'C29) -}
89a16455a1b1c8a1b500d0c9e8720bd3
  $tc'Chr18 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3527490786707742036##
                   13191186026033531425##
                   Lib.$trModule
                   Lib.$tc'Chr47
                   0#
                   Lib.$tc'C29) -}
ed8c11a03cd97d5b04ac9e34ca3f5134
  $tc'Chr19 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12046886059919728794##
                   1945723473855012802##
                   Lib.$trModule
                   Lib.$tc'Chr49
                   0#
                   Lib.$tc'C29) -}
d2d2bbe11bdb9a4f96c9478371cff305
  $tc'Chr2 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1391635968811721250##
                   8645397537828333627##
                   Lib.$trModule
                   Lib.$tc'Chr51
                   0#
                   Lib.$tc'C29) -}
0262c046ab701156e880564a78d540f0
  $tc'Chr20 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2210830992607193351##
                   5501227677845545820##
                   Lib.$trModule
                   Lib.$tc'Chr53
                   0#
                   Lib.$tc'C29) -}
b689cc14b672b138e1777096398e8a60
  $tc'Chr21 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5667252066128730742##
                   4076626361095373706##
                   Lib.$trModule
                   Lib.$tc'Chr55
                   0#
                   Lib.$tc'C29) -}
06e2eedce300550e942b6ebf7797dd0d
  $tc'Chr22 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17790756729401035417##
                   17652026872786424937##
                   Lib.$trModule
                   Lib.$tc'Chr57
                   0#
                   Lib.$tc'C29) -}
7b6e97313772fe1943d630fff59ce8b6
  $tc'Chr29 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr30) -}
85e156b0156cee29858ebc5f9b046b64
  $tc'Chr3 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13066620710934964612##
                   18324515942731224904##
                   Lib.$trModule
                   Lib.$tc'Chr59
                   0#
                   Lib.$tc'C29) -}
7404983e338ee9174fef13b79962b070
  $tc'Chr30 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr1"#) -}
f64bb6bde5ece973955bad1c1f730586
  $tc'Chr31 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr32) -}
721337eb79ef182da23aa1d2ee1c9421
  $tc'Chr32 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr10"#) -}
223a22126e941f4afb2fb42f90cf8294
  $tc'Chr33 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr34) -}
cef4144a7f508c09f8310d585853fc89
  $tc'Chr34 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr11"#) -}
00d827cfc673a5815aec2e627db6b63b
  $tc'Chr35 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr36) -}
7f5035c96600b4bc409d56d6a66f2a29
  $tc'Chr36 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr12"#) -}
9a6e1218c2f812a8f99d400fa1b5fd57
  $tc'Chr37 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr38) -}
79425fcc842faeba68d26da58f65efa7
  $tc'Chr38 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr13"#) -}
d91452565370002863cf4c541896148c
  $tc'Chr39 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr40) -}
c718e77e7dabd3a8e9bd3be050755943
  $tc'Chr4 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14790447176453777385##
                   17500962011955858084##
                   Lib.$trModule
                   Lib.$tc'Chr61
                   0#
                   Lib.$tc'C29) -}
b334b8bf9c7837ec77f54b98eb74ea8a
  $tc'Chr40 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr14"#) -}
425dcf7dffceab1758f3b01d3053c203
  $tc'Chr41 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr42) -}
08cabd0505ebfe107a3107520bd4418f
  $tc'Chr42 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr15"#) -}
9ed79c4a41628b49f2de6069bc4562c0
  $tc'Chr43 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr44) -}
0a981529b7cf1a37bfd422d3cb3bb7cc
  $tc'Chr44 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr16"#) -}
9405938d345c5bea6704c8502f99d5f7
  $tc'Chr45 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr46) -}
6286e1d6b462800abee7db7d0eb00860
  $tc'Chr46 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr17"#) -}
8aa7db311da8abbcc869d419275f94ed
  $tc'Chr47 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr48) -}
da578b37eb421a1c3fb6277842d80c93
  $tc'Chr48 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr18"#) -}
9f3843c412732356838006b8ea95d5a2
  $tc'Chr49 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr50) -}
a32582d6708b640bf8ff469d0e2e89d7
  $tc'Chr5 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14588712301033631553##
                   1250825435458205507##
                   Lib.$trModule
                   Lib.$tc'Chr63
                   0#
                   Lib.$tc'C29) -}
1d64d38df2b89d8bd7cbb4c812b68f74
  $tc'Chr50 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr19"#) -}
fc27e3a98a0c70aed3b877d7e5ef1bae
  $tc'Chr51 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr52) -}
fe73c184e32b7e5bebcf8c83b05e3be7
  $tc'Chr52 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr2"#) -}
28b0dd7cabdd51b4eac00588bc8f3cb9
  $tc'Chr53 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr54) -}
1ad25f248e5a7d693842903e3c6ca909
  $tc'Chr54 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr20"#) -}
ce005dd2a358ed96c5690f7c4621334a
  $tc'Chr55 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr56) -}
88c97440c15745325002f0aba6a3cdde
  $tc'Chr56 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr21"#) -}
b23dc351f66bf876b579cd082d752248
  $tc'Chr57 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr58) -}
b567455501e1226af8499f144a4e46e4
  $tc'Chr58 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr22"#) -}
38cff78a15e5a76ea275d6981c25123f
  $tc'Chr59 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr60) -}
3f9eb740762b21dbe51dc924bec51156
  $tc'Chr6 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12049800435988126921##
                   3612313105776967444##
                   Lib.$trModule
                   Lib.$tc'Chr65
                   0#
                   Lib.$tc'C29) -}
ea5a724a8eb970bdd1079e3e1a72811f
  $tc'Chr60 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr3"#) -}
4c11ffa956662e2dff0b48f7755d28a1
  $tc'Chr61 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr62) -}
9241782d0025a2e0f36748a5f4fddd17
  $tc'Chr62 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr4"#) -}
ff2b94c80b21a1479a4176b5881c93c2
  $tc'Chr63 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr64) -}
30bdfe6b8049e2a1c021e607dd896a72
  $tc'Chr64 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr5"#) -}
d7419bee4cb38a9ad02b0059ac122a4e
  $tc'Chr65 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr66) -}
be6c57493404026350e0af73550cfa71
  $tc'Chr66 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr6"#) -}
1575bde7604bec2ec1af4614f3959511
  $tc'Chr67 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr68) -}
26e498ca039adf279bac76af1826b95b
  $tc'Chr68 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr7"#) -}
1676c6db9a9a81b4b73a301a60315cdf
  $tc'Chr69 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr70) -}
9887f98c85158eaafcdd1ae6ca148c92
  $tc'Chr7 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3425356634342404537##
                   3468578520829150315##
                   Lib.$trModule
                   Lib.$tc'Chr67
                   0#
                   Lib.$tc'C29) -}
f4787934b2304c8a320fd47502b3adfe
  $tc'Chr70 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr8"#) -}
6f8de7da9100bb2b90d1286bcefb7782
  $tc'Chr71 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr72) -}
98dfd8b39ed0352993ce4252f3f27f5c
  $tc'Chr72 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr9"#) -}
53f3c5426b7bb866dec7a7d12c560daa
  $tc'Chr8 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1480789163640093880##
                   13258850219403637##
                   Lib.$trModule
                   Lib.$tc'Chr69
                   0#
                   Lib.$tc'C29) -}
9537464e58a9e1288b7d20bdddc753fb
  $tc'Chr9 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3078693766760012450##
                   9678537677821975643##
                   Lib.$trModule
                   Lib.$tc'Chr71
                   0#
                   Lib.$tc'C29) -}
93a9cdc1ff4aa89b7ad87d20bd1cd6fb
  $tc'ChrM :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6550035502960262719##
                   12290192665737233934##
                   Lib.$trModule
                   Lib.$tc'ChrM1
                   0#
                   Lib.$tc'C29) -}
ff1b3fbb427368dde382f02873ac5c4b
  $tc'ChrM1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'ChrM2) -}
8358f3bc9913ccbb7a173892a84f507e
  $tc'ChrM2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ChrM"#) -}
dfd26d13db186d08206f75e7094c065b
  $tc'ChrX :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16269779637619329790##
                   3316490921525053537##
                   Lib.$trModule
                   Lib.$tc'ChrX1
                   0#
                   Lib.$tc'C29) -}
7d390c3a10fdd825663955a3438f80d4
  $tc'ChrX1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'ChrX2) -}
5a877da8e68d7c21983a45acb4525250
  $tc'ChrX2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ChrX"#) -}
670643f21a39bd48dcb9e3af96a44d1c
  $tc'ChrY :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9933019101912727430##
                   9813350151679110709##
                   Lib.$trModule
                   Lib.$tc'ChrY1
                   0#
                   Lib.$tc'C29) -}
2d68a34ed58e0f6cd0b3bd44829edef5
  $tc'ChrY1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'ChrY2) -}
67aab641a307cc4fce2571615ddf9a11
  $tc'ChrY2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ChrY"#) -}
496e32a56db366c34699c8cbb304a863
  $tc'GL000191P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9914167287925096567##
                   18155656402810777618##
                   Lib.$trModule
                   Lib.$tc'GL000191P2
                   0#
                   Lib.$tc'C29) -}
632655bd10af6433b2bc1f625eaef47e
  $tc'GL000191P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000191P3) -}
c05d702b1e1317fd61abdf52dac83909
  $tc'GL000191P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000191P1"#) -}
69eca9c296f6fef5b021c6f0bb6414fe
  $tc'GL000192P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5106115173185880601##
                   16585077207720920959##
                   Lib.$trModule
                   Lib.$tc'GL000192P2
                   0#
                   Lib.$tc'C29) -}
920e40d5c19d8f9898b77c1abbbffd3f
  $tc'GL000192P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000192P3) -}
3aea6d199f213123db1b51614cbae093
  $tc'GL000192P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000192P1"#) -}
6c9c2427dc878dcde16196ca66813bab
  $tc'GL000193P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16315674243691090790##
                   1309177249262838738##
                   Lib.$trModule
                   Lib.$tc'GL000193P2
                   0#
                   Lib.$tc'C29) -}
bb431a5158027c3cbee8b6c8c5dc953e
  $tc'GL000193P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000193P3) -}
99a77b5029b3c9272bd7fa0828f196ed
  $tc'GL000193P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000193P1"#) -}
e7d198f32443e7c6f19332f7c3cb9a23
  $tc'GL000194P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13081619288477972215##
                   15810572928466926265##
                   Lib.$trModule
                   Lib.$tc'GL000194P2
                   0#
                   Lib.$tc'C29) -}
d75cfae14698979f89b4a0e812fcc8c3
  $tc'GL000194P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000194P3) -}
4c61c1920bdff2b207352993e9e1b302
  $tc'GL000194P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000194P1"#) -}
ee87942ef79e77240b6e54682dc8ecf1
  $tc'GL000195P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   238667728677346264##
                   18045654417452070519##
                   Lib.$trModule
                   Lib.$tc'GL000195P2
                   0#
                   Lib.$tc'C29) -}
7262f458ebebd7fc63658948079e11e5
  $tc'GL000195P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000195P3) -}
d05e9b473f3ad6a4944754745cfd1b2f
  $tc'GL000195P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000195P1"#) -}
9991dbb61b556628b5ebefdb3ce7d32c
  $tc'GL000196P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   729015765527344361##
                   1729352959892718432##
                   Lib.$trModule
                   Lib.$tc'GL000196P2
                   0#
                   Lib.$tc'C29) -}
6d865c137bb21a8acb31a02417ab4053
  $tc'GL000196P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000196P3) -}
5d5ed325b8476a2484f6ea85c9b958f8
  $tc'GL000196P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000196P1"#) -}
f6a0a54eebd35411e7ea363d7da7e332
  $tc'GL000197P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3731135991598953179##
                   7801921266338737727##
                   Lib.$trModule
                   Lib.$tc'GL000197P2
                   0#
                   Lib.$tc'C29) -}
69284b35fda1616988ec270f7979eb69
  $tc'GL000197P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000197P3) -}
78a9248f36841caf0b2f6ea795ec3f98
  $tc'GL000197P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000197P1"#) -}
292ad1f841f9af5b04e197e8475d416f
  $tc'GL000198P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   797934319038759964##
                   678456823315171401##
                   Lib.$trModule
                   Lib.$tc'GL000198P2
                   0#
                   Lib.$tc'C29) -}
3120f837afcddf8968a42abe283ecaaa
  $tc'GL000198P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000198P3) -}
26ca872f79979197a827464d78700882
  $tc'GL000198P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000198P1"#) -}
c90a314c36b68d5e0ae885d9ac65a6f7
  $tc'GL000199P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5467537555719132477##
                   609976689639824720##
                   Lib.$trModule
                   Lib.$tc'GL000199P2
                   0#
                   Lib.$tc'C29) -}
2acb130852216933cde7d703e7507c5c
  $tc'GL000199P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000199P3) -}
51c292320b1bb315a29d1a11e111e771
  $tc'GL000199P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000199P1"#) -}
284125122e35946405b1184d76c3b90d
  $tc'GL000200P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   285673841497032347##
                   6769953893633845871##
                   Lib.$trModule
                   Lib.$tc'GL000200P2
                   0#
                   Lib.$tc'C29) -}
ae64bd26ee75eae799138b5a39255bcb
  $tc'GL000200P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000200P3) -}
797a2f2fae90be1680d48ea3b5185d3a
  $tc'GL000200P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000200P1"#) -}
ef87afa9fdfb91f5e8c0cd0592c629c5
  $tc'GL000201P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   582757143273036600##
                   2098187589097846925##
                   Lib.$trModule
                   Lib.$tc'GL000201P2
                   0#
                   Lib.$tc'C29) -}
6f220f8ddebdf0c4480faf36814f4bb5
  $tc'GL000201P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000201P3) -}
3db90cf41b988e6f44e73d6c1a8c5695
  $tc'GL000201P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000201P1"#) -}
df1ec650d78fa7b148d78a164b78fc42
  $tc'GL000202P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13292356366764768481##
                   14413547267631563555##
                   Lib.$trModule
                   Lib.$tc'GL000202P2
                   0#
                   Lib.$tc'C29) -}
020003b088cf6690a6e06404c2b8e4bb
  $tc'GL000202P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000202P3) -}
4432d05e00a86898aadb02eadea68ff6
  $tc'GL000202P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000202P1"#) -}
97935ae6a604a97729fa92ac74f1975e
  $tc'GL000203P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9949532603960596734##
                   205102181815388269##
                   Lib.$trModule
                   Lib.$tc'GL000203P2
                   0#
                   Lib.$tc'C29) -}
32fed1d7e686fa4046b2eb5f47763e8d
  $tc'GL000203P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000203P3) -}
2a608e0f9b0e774ddeff0b1982b0888f
  $tc'GL000203P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000203P1"#) -}
3616fc74bf751dbe4139898eb680f3b5
  $tc'GL000204P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16022197327700905039##
                   4661080521449887480##
                   Lib.$trModule
                   Lib.$tc'GL000204P2
                   0#
                   Lib.$tc'C29) -}
cb895beeedf56db2279902d9739b7022
  $tc'GL000204P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000204P3) -}
fa7fbec789cf1a8e71bab11efc47b099
  $tc'GL000204P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000204P1"#) -}
3241c929fdf3bd2368ede5ffef297576
  $tc'GL000205P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14163090741147981367##
                   809479441791421356##
                   Lib.$trModule
                   Lib.$tc'GL000205P2
                   0#
                   Lib.$tc'C29) -}
50ed1fa8ea94cf2852ed58a22ab7bdc7
  $tc'GL000205P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000205P3) -}
caf661e78e30c5a7b22a074350f3a05b
  $tc'GL000205P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000205P1"#) -}
f2e623a22a95456cc1b1d2cf202a23f6
  $tc'GL000206P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17987824537579357896##
                   12048530007274426196##
                   Lib.$trModule
                   Lib.$tc'GL000206P2
                   0#
                   Lib.$tc'C29) -}
3c3041f0be9a6ef477c755f7644f4005
  $tc'GL000206P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000206P3) -}
436e816957972f3714d5ed5415c617b8
  $tc'GL000206P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000206P1"#) -}
6274d64d0e36125787f896c15ac7a60a
  $tc'GL000207P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1329379619972340408##
                   5057825533418885648##
                   Lib.$trModule
                   Lib.$tc'GL000207P2
                   0#
                   Lib.$tc'C29) -}
faaef41f406c5a295271269324b95ae8
  $tc'GL000207P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000207P3) -}
84eb4c3cf1665d495202f8eff7ac70f8
  $tc'GL000207P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000207P1"#) -}
eee452208e47d70fc9c8c1723f15465c
  $tc'GL000208P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   670547410068372139##
                   12808217755130675945##
                   Lib.$trModule
                   Lib.$tc'GL000208P2
                   0#
                   Lib.$tc'C29) -}
5ef866015cc46e8d7b814b577bba6a85
  $tc'GL000208P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000208P3) -}
bbc580a27e67742f8b8e4ca81e77244b
  $tc'GL000208P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000208P1"#) -}
63695f4c3f2dd5963ffe64c1d1fbe785
  $tc'GL000209P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16786919887599312666##
                   3618722041051984074##
                   Lib.$trModule
                   Lib.$tc'GL000209P2
                   0#
                   Lib.$tc'C29) -}
d9af88a1d35b18a92614add15c514caa
  $tc'GL000209P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000209P3) -}
51d29409ea3d49b025b9871327c3c1fd
  $tc'GL000209P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000209P1"#) -}
097b338f52586609e4c9137802aa12c1
  $tc'GL000210P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17150154875949045836##
                   17897297176895976787##
                   Lib.$trModule
                   Lib.$tc'GL000210P2
                   0#
                   Lib.$tc'C29) -}
2ab8c627de13a6c9ebc13a78b637b81a
  $tc'GL000210P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000210P3) -}
373e207c1c3bdb3c47c6617c5b8a3480
  $tc'GL000210P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000210P1"#) -}
0bb13f8a076e9485db98e66abbb13806
  $tc'GL000211P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   166072287462595235##
                   4474433416876655503##
                   Lib.$trModule
                   Lib.$tc'GL000211P2
                   0#
                   Lib.$tc'C29) -}
e1702d6f6f2f6dd69dbed7ac63986453
  $tc'GL000211P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000211P3) -}
812a3b2c5548bfb06148e382bdb43d07
  $tc'GL000211P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000211P1"#) -}
3b1d516c206bb30f3c0291ec4a9f1af6
  $tc'GL000212P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16318938418025375132##
                   6528078679004311327##
                   Lib.$trModule
                   Lib.$tc'GL000212P2
                   0#
                   Lib.$tc'C29) -}
6d58700a5ee974b571d8805b9c14bfe1
  $tc'GL000212P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000212P3) -}
20079c9db9cea43ab75ecb8cff1a0c95
  $tc'GL000212P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000212P1"#) -}
e6bc81e342c219681a344d391c5037a6
  $tc'GL000213P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3009769251770831784##
                   3723571592112532779##
                   Lib.$trModule
                   Lib.$tc'GL000213P2
                   0#
                   Lib.$tc'C29) -}
87a92fa1a3726338db42f56c0fc70b4f
  $tc'GL000213P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000213P3) -}
df7f7a03f5080a9dfee1e0ecda12187f
  $tc'GL000213P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000213P1"#) -}
5513c2ad1608f7d662cd5253e480047f
  $tc'GL000214P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13307123781640425201##
                   6336674921316696439##
                   Lib.$trModule
                   Lib.$tc'GL000214P2
                   0#
                   Lib.$tc'C29) -}
9eac8fd5df0bb64fe901697d33f292c4
  $tc'GL000214P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000214P3) -}
28df213637d696e9660e3cb8ca65dd96
  $tc'GL000214P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000214P1"#) -}
f865cb13c26956be3c09413fe05332a0
  $tc'GL000215P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15067028206504102728##
                   15150685710502330533##
                   Lib.$trModule
                   Lib.$tc'GL000215P2
                   0#
                   Lib.$tc'C29) -}
e3489e9bcc1e06d216c04a92f055bf6e
  $tc'GL000215P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000215P3) -}
bdf42214c5dcbe13315cec80b8d4dcdd
  $tc'GL000215P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000215P1"#) -}
1cf6bf0cd1523ed7f4753efbad972ef8
  $tc'GL000216P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8145433938814781624##
                   4441314195729934187##
                   Lib.$trModule
                   Lib.$tc'GL000216P2
                   0#
                   Lib.$tc'C29) -}
42b4d01658728b4f60bf1efffcd9f835
  $tc'GL000216P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000216P3) -}
b2a0857dd399e293f1e40ca0c6ee4729
  $tc'GL000216P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000216P1"#) -}
3ee8f7a5efd296068c2cb82db74cbc27
  $tc'GL000217P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16161004105723476035##
                   15148952078174844537##
                   Lib.$trModule
                   Lib.$tc'GL000217P2
                   0#
                   Lib.$tc'C29) -}
a5abec300e710a56c3f853c6fbbbc52f
  $tc'GL000217P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000217P3) -}
f5730a609b5d4a62ce10ab9efb460b8d
  $tc'GL000217P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000217P1"#) -}
04ee5ef994442e8a596b2aa6cb2ea022
  $tc'GL000218P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9485965429234992821##
                   4187697639072289378##
                   Lib.$trModule
                   Lib.$tc'GL000218P2
                   0#
                   Lib.$tc'C29) -}
a7f122907034c2368ed1dd0137c9ec74
  $tc'GL000218P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000218P3) -}
c3ff74880cf7eb9b4550a56b2ae03b62
  $tc'GL000218P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000218P1"#) -}
9b8d037e0f9ea43150cc312bd882de6d
  $tc'GL000219P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12422724529265511311##
                   7689371710525692980##
                   Lib.$trModule
                   Lib.$tc'GL000219P2
                   0#
                   Lib.$tc'C29) -}
fbaf7adf29b42de235c4db6aaabdb3ed
  $tc'GL000219P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000219P3) -}
b3859bdf817ef6c9145ad0693096ee52
  $tc'GL000219P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000219P1"#) -}
7bfcb42f85c801267d9e6fbcab694811
  $tc'GL000220P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2546508299118561306##
                   6972216687332233536##
                   Lib.$trModule
                   Lib.$tc'GL000220P2
                   0#
                   Lib.$tc'C29) -}
6cecda3b92e6f5e798f353daca00b6e8
  $tc'GL000220P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000220P3) -}
e696a6eed4d5e266aedeb602971a3524
  $tc'GL000220P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000220P1"#) -}
48db15dd1527fafcfc98ba4b5cef3871
  $tc'GL000221P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9897089280906861478##
                   8309185858063793794##
                   Lib.$trModule
                   Lib.$tc'GL000221P2
                   0#
                   Lib.$tc'C29) -}
344b15b11f4a00eb1c8f99f6c9fcdec6
  $tc'GL000221P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000221P3) -}
0503cf4bca9a371265c2fb584ad56a78
  $tc'GL000221P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000221P1"#) -}
cde8683173c0e463694965a0526cf86a
  $tc'GL000222P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11700834536631906861##
                   10230176123110641648##
                   Lib.$trModule
                   Lib.$tc'GL000222P2
                   0#
                   Lib.$tc'C29) -}
b6cfe3b8c1b24c67ba45d27a7a50b38f
  $tc'GL000222P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000222P3) -}
5a6ac4dd13d53082a39bedd4c8b771be
  $tc'GL000222P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000222P1"#) -}
42dc4503b6906973644f74f6007f4498
  $tc'GL000223P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   238598806233592983##
                   14840733091041025067##
                   Lib.$trModule
                   Lib.$tc'GL000223P2
                   0#
                   Lib.$tc'C29) -}
a2402f4a4adac7ae5f99ff9eb72b3dc3
  $tc'GL000223P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000223P3) -}
fef17f511c04bce6492362da53f4129f
  $tc'GL000223P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000223P1"#) -}
0c2e7d2b8d19fb18380e78a0f381cdca
  $tc'GL000224P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17545396205086325016##
                   4936257385874747778##
                   Lib.$trModule
                   Lib.$tc'GL000224P2
                   0#
                   Lib.$tc'C29) -}
6b45b20b45775cde793b88a3f3fd41ae
  $tc'GL000224P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000224P3) -}
42a7c020e690a111d70dd2b380a890be
  $tc'GL000224P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000224P1"#) -}
ee3fa5889459614cadf66e9b744130d3
  $tc'GL000225P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14078833666626553167##
                   15892972308636828748##
                   Lib.$trModule
                   Lib.$tc'GL000225P2
                   0#
                   Lib.$tc'C29) -}
a9d24d5ceb7c6f6dbf56b6a2bda73aa5
  $tc'GL000225P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000225P3) -}
e2a9cbc4c5f24defc238250f4a3cbdd2
  $tc'GL000225P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000225P1"#) -}
5df738becfecfb434af1c5dce5ef8ffc
  $tc'GL000226P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3702244456414583167##
                   1697967942368782866##
                   Lib.$trModule
                   Lib.$tc'GL000226P2
                   0#
                   Lib.$tc'C29) -}
032d7f51cb40345187af1884f25cd88b
  $tc'GL000226P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000226P3) -}
ed1c72ae34e643315666c138a7a7fbfc
  $tc'GL000226P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000226P1"#) -}
198a3fb90742db4a6a7bda93338f00d5
  $tc'GL000227P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12217569668036756957##
                   102874737618629650##
                   Lib.$trModule
                   Lib.$tc'GL000227P2
                   0#
                   Lib.$tc'C29) -}
8ea47660099b626e831668a8f3edfafb
  $tc'GL000227P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000227P3) -}
3d674344eed9214688ae05cca5ec50da
  $tc'GL000227P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000227P1"#) -}
d9bf7b8334efec79564b95793a007501
  $tc'GL000228P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2908381366012848334##
                   6792963015558003978##
                   Lib.$trModule
                   Lib.$tc'GL000228P2
                   0#
                   Lib.$tc'C29) -}
b1a4a367f5a5964244647b53916ee338
  $tc'GL000228P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000228P3) -}
1081b3834d75e6f540aa6020a8cfd124
  $tc'GL000228P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000228P1"#) -}
1eb2e2cc27f4360de617b989107fc646
  $tc'GL000229P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4430034152621057084##
                   2390311156159269511##
                   Lib.$trModule
                   Lib.$tc'GL000229P2
                   0#
                   Lib.$tc'C29) -}
a8346b651a39c08c631f92039654fd19
  $tc'GL000229P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000229P3) -}
d4d6138397d1cbe9a883c843bd271157
  $tc'GL000229P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000229P1"#) -}
54a35831c03a176d1ee2d3cefedf1945
  $tc'GL000230P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3580118150909470452##
                   86860305502956008##
                   Lib.$trModule
                   Lib.$tc'GL000230P2
                   0#
                   Lib.$tc'C29) -}
0264857b67c18557f4863e150317e0f8
  $tc'GL000230P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000230P3) -}
9e8364775a461bedc88f2a26174aea1f
  $tc'GL000230P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000230P1"#) -}
79391ebe7efaa15a7b6d88d08626689e
  $tc'GL000231P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17346318954321432566##
                   5231371365873091931##
                   Lib.$trModule
                   Lib.$tc'GL000231P2
                   0#
                   Lib.$tc'C29) -}
942edbd5ac10f31c325ee9dda5a0b597
  $tc'GL000231P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000231P3) -}
864a0328c83340c0d827ee583fc3c9bc
  $tc'GL000231P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000231P1"#) -}
fe92a93fa7513d494302d6a4f3061fa3
  $tc'GL000232P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   301297578507756971##
                   9064678420263422211##
                   Lib.$trModule
                   Lib.$tc'GL000232P2
                   0#
                   Lib.$tc'C29) -}
e5c9a3e30b4db1a22964b376eb909520
  $tc'GL000232P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000232P3) -}
9db8f89d92f9ccee6441c386c0ae8a41
  $tc'GL000232P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000232P1"#) -}
bca6ff5d3d9aeec09b1addd26d725859
  $tc'GL000233P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9129531372342448649##
                   6316598092836922259##
                   Lib.$trModule
                   Lib.$tc'GL000233P2
                   0#
                   Lib.$tc'C29) -}
5fd4b15804ae823dd751ad4d9b8aac3a
  $tc'GL000233P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000233P3) -}
20595681647c57885959c87920802a32
  $tc'GL000233P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000233P1"#) -}
6bfd4dd3d387d39635f04a79e26d4197
  $tc'GL000234P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9944137341807779816##
                   1076863142155075869##
                   Lib.$trModule
                   Lib.$tc'GL000234P2
                   0#
                   Lib.$tc'C29) -}
4875e4025e9e5163ccdaa3a8f613bac5
  $tc'GL000234P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000234P3) -}
87efd64ae34cb0253936e2a593d8119f
  $tc'GL000234P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000234P1"#) -}
0ddb2cd5f804a1ad0a81439801dfe500
  $tc'GL000235P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3023070898562937343##
                   15722257892062670942##
                   Lib.$trModule
                   Lib.$tc'GL000235P2
                   0#
                   Lib.$tc'C29) -}
34b0c6f54b9c62464dfef5f5083e8df2
  $tc'GL000235P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000235P3) -}
f5271c1e95b376222b47c848bd008551
  $tc'GL000235P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000235P1"#) -}
cab2408ca8422569014ace49cf2bc4dd
  $tc'GL000236P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14274987831361189714##
                   3812286581933210091##
                   Lib.$trModule
                   Lib.$tc'GL000236P2
                   0#
                   Lib.$tc'C29) -}
fec9c07af2a236fc7516d2611baf0706
  $tc'GL000236P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000236P3) -}
e1e14ff6e5c7bb6388820954f92210e0
  $tc'GL000236P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000236P1"#) -}
e14f97ac8b7d80f0a96fb12578e457b2
  $tc'GL000237P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14233366097798439470##
                   9650803738533305869##
                   Lib.$trModule
                   Lib.$tc'GL000237P2
                   0#
                   Lib.$tc'C29) -}
8228da7dea825df9aedcac547d4f3b10
  $tc'GL000237P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000237P3) -}
534e914d2f0beebdb8bc6f2b1f52713a
  $tc'GL000237P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000237P1"#) -}
391e53f3dfd4bcd9173bd154630b3e88
  $tc'GL000238P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   752252227151113843##
                   14722014442659966863##
                   Lib.$trModule
                   Lib.$tc'GL000238P2
                   0#
                   Lib.$tc'C29) -}
eab170c2335d0aff2dd8a3de4b6f766e
  $tc'GL000238P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000238P3) -}
3be38f6bebd0806be1e2ecfd7ba6654b
  $tc'GL000238P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000238P1"#) -}
8a045376a160fe33b901dd276d6de3c6
  $tc'GL000239P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8400391209620607755##
                   6417872122908596028##
                   Lib.$trModule
                   Lib.$tc'GL000239P2
                   0#
                   Lib.$tc'C29) -}
4532dd1986ba61cad12d87050893fc3c
  $tc'GL000239P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000239P3) -}
a05cda990f5c1cb723a41aca36d74d40
  $tc'GL000239P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000239P1"#) -}
cd32dda0b1c92ed0dfd68e81e52901b5
  $tc'GL000240P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10871937716640312351##
                   14405404565804224980##
                   Lib.$trModule
                   Lib.$tc'GL000240P2
                   0#
                   Lib.$tc'C29) -}
0c822bc5d9d3151479060743d0801ad9
  $tc'GL000240P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000240P3) -}
1cc2d42eded18ef3c970edff5c68723e
  $tc'GL000240P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000240P1"#) -}
aa907acbbd41fef79ed740dccd43d924
  $tc'GL000241P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6025755631115821732##
                   14609273934952339511##
                   Lib.$trModule
                   Lib.$tc'GL000241P2
                   0#
                   Lib.$tc'C29) -}
a7fd5f4e30fd6ba01793fa3e429e6e6d
  $tc'GL000241P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000241P3) -}
3fae9a70a9bb23e93a203e682563d319
  $tc'GL000241P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000241P1"#) -}
378a3e71be905c9ce3817616a8a5101b
  $tc'GL000242P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8220407767371106808##
                   13703627487478648333##
                   Lib.$trModule
                   Lib.$tc'GL000242P2
                   0#
                   Lib.$tc'C29) -}
85dcfb0598b783ab9a5cecd2f576bca2
  $tc'GL000242P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000242P3) -}
6e613738ef9b1f449dd6fb1f3220f4ce
  $tc'GL000242P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000242P1"#) -}
7f46366c72015df0bb38fa85e8746eb4
  $tc'GL000243P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6932876914094668458##
                   16427406126227743545##
                   Lib.$trModule
                   Lib.$tc'GL000243P2
                   0#
                   Lib.$tc'C29) -}
5ffb8acc3c98e9af2b8f85ab958e7e67
  $tc'GL000243P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000243P3) -}
513116ed4e1485bc0df382498c1bfe21
  $tc'GL000243P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000243P1"#) -}
1c32d85119a555f79d030081a99afb88
  $tc'GL000244P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7812809883183024978##
                   15760619919413470508##
                   Lib.$trModule
                   Lib.$tc'GL000244P2
                   0#
                   Lib.$tc'C29) -}
98128e07957fa76443c35498fe20b9e3
  $tc'GL000244P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000244P3) -}
dacf9edb90f9a4eb8e39921cf74bf8f3
  $tc'GL000244P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000244P1"#) -}
326b0e5eb98e0be9979244f2b809a3b3
  $tc'GL000245P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18240315182883439236##
                   1735400593914387757##
                   Lib.$trModule
                   Lib.$tc'GL000245P2
                   0#
                   Lib.$tc'C29) -}
65fcab7dcc0c01fbe487eda5985c40a9
  $tc'GL000245P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000245P3) -}
698f3b5f5e1d21f76424916f384ce8a9
  $tc'GL000245P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000245P1"#) -}
a3a9e06d785b2d223087c0da26c328f3
  $tc'GL000246P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14378402330495508380##
                   8502248483673657742##
                   Lib.$trModule
                   Lib.$tc'GL000246P2
                   0#
                   Lib.$tc'C29) -}
060467b5cfc0290c6f9c266e2150acb8
  $tc'GL000246P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000246P3) -}
900406eb019c1fe3e688b76fbb943b65
  $tc'GL000246P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000246P1"#) -}
b8f17f9024f3d15a8bf09e0c766f6527
  $tc'GL000247P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1975421758801224536##
                   11373952376962244656##
                   Lib.$trModule
                   Lib.$tc'GL000247P2
                   0#
                   Lib.$tc'C29) -}
49b9723f4c3fc66fb70b4c806b34f37a
  $tc'GL000247P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000247P3) -}
66a95ad6ef80b8f8ee667ffdb7464538
  $tc'GL000247P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000247P1"#) -}
3623cef2497ca094628171c3320a8f4e
  $tc'GL000248P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14793354959837385638##
                   10962500711518247318##
                   Lib.$trModule
                   Lib.$tc'GL000248P2
                   0#
                   Lib.$tc'C29) -}
5a4619f6e33f27e0b7601bb1d8aeac78
  $tc'GL000248P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000248P3) -}
c15a6946fdec1c8ea91b1bd1516ca39c
  $tc'GL000248P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000248P1"#) -}
9357af16864c8f8f082db9f5e4c62455
  $tc'GL000249P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   737885181788392865##
                   2579942832615399142##
                   Lib.$trModule
                   Lib.$tc'GL000249P2
                   0#
                   Lib.$tc'C29) -}
1e341758b9911c93731f941d2f982aa3
  $tc'GL000249P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000249P3) -}
457f16b2f27c8b8a958758e90a840c57
  $tc'GL000249P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000249P1"#) -}
c472d4e0506d63d9a7f884f93ab64f68
  $tc'GRC :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1570309759469305401##
                   2199142400244443578##
                   Lib.$trModule
                   Lib.$tc'GRC2
                   0#
                   Lib.$tc'GRC1) -}
f8d1e5a8d3a7d00c365107d637db554d
  $tc'GRC1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
d94f594409edcb0e0394d1460693b215
  $tc'GRC2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GRC3) -}
19611ce30ccf61d6bd94a06359ece7b7
  $tc'GRC3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GRC"#) -}
a50d93d9b61342d94e1eba0f7e9e88e5
  $tc'MasterRecord :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16027055987138956602##
                   5355202840289441344##
                   Lib.$trModule
                   Lib.$tc'MasterRecord2
                   0#
                   Lib.$tc'MasterRecord1) -}
285adc056877f9571d06e8b391e5acfd
  $tc'MasterRecord1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
d06708dbfbaea54802825136680a1ce5
  $tc'MasterRecord2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'MasterRecord3) -}
433c3395a0c6e4659e96af5305eb74a7
  $tc'MasterRecord3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'MasterRecord"#) -}
f9bab9e6bac17e46389e278dd000ed63
  $tc'MidFamily :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14538397281084583153##
                   991232229512571035##
                   Lib.$trModule
                   Lib.$tc'MidFamily2
                   0#
                   Lib.$tc'MidFamily1) -}
773a465e657a5b47035cda15181e6937
  $tc'MidFamily1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
53d2cafae41c22b4917dd1f88cca5ae2
  $tc'MidFamily2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'MidFamily3) -}
c39f8c33a33eb2e16ee60b5e991ed42d
  $tc'MidFamily3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'MidFamily"#) -}
41c1df6bfb995dc26915d859cbb8d79f
  $tc'NC_007605 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9260277966193775963##
                   12315025509995926360##
                   Lib.$trModule
                   Lib.$tc'NC_1
                   0#
                   Lib.$tc'C29) -}
5067780f04fa5635919304ff9309af57
  $tc'NC_1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'NC_2) -}
5f2068fa9bc3f480724d9e3a93e91f6e
  $tc'NC_2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'NC_007605"#) -}
7a137dfac68d45e0f5e4b30fb2336547
  $tc'NONE :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9431792723325448941##
                   17065314059059492639##
                   Lib.$trModule
                   Lib.$tc'NONE1
                   0#
                   Lib.$tc'C29) -}
2167963262054504f878ce42918af0d2
  $tc'NONE1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'NONE2) -}
1841a05d9ca44ceac9bd33b82e2c4343
  $tc'NONE2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'NONE"#) -}
c0a69b71fefa4f8b02dc920a79a0af81
  $tc'Opts :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13481076534519264443##
                   8150015366465770066##
                   Lib.$trModule
                   Lib.$tc'Opts2
                   0#
                   Lib.$tc'Opts1) -}
1ad95d202d1b75619b6239a077b8703a
  $tc'Opts1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
d61d94070a32f60433edb9248d3d6f2b
  $tc'Opts2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Opts3) -}
9c72b6e30d6eaa018e6189b21465df37
  $tc'Opts3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Opts"#) -}
868e75026e2d9db81fcb43de306effb0
  $tc'PairedAln :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   959365371837608204##
                   15772365320178752292##
                   Lib.$trModule
                   Lib.$tc'PairedAln2
                   0#
                   Lib.$tc'PairedAln1) -}
ecd1efdbb9819cfd3ed73327cb8fba2a
  $tc'PairedAln1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
e56468a5fd98286057af300c6ee4a0a5
  $tc'PairedAln2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'PairedAln3) -}
82b5fa0f2b6f8766e764e17027386ddf
  $tc'PairedAln3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PairedAln"#) -}
3233d6e0cc5f71d96b3953970ce7c72b
  $tc'RunStats :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16105756270700428182##
                   13457031539169296483##
                   Lib.$trModule
                   Lib.$tc'RunStats2
                   0#
                   Lib.$tc'RunStats1) -}
97b59dc1de2a988ee055d728f87b2ab1
  $tc'RunStats1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
29322da5267154147916baea2970dfb3
  $tc'RunStats2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'RunStats3) -}
cca48304e79599813ca86f6eed3a2b64
  $tc'RunStats3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'RunStats"#) -}
af561500881f20148cca3dd64131d72b
  $tc'SAMFlag :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13913861179232993203##
                   1262199594774498914##
                   Lib.$trModule
                   Lib.$tc'SAMFlag2
                   0#
                   Lib.$tc'SAMFlag1) -}
830689410e04a843cce68bd7173368a9
  $tc'SAMFlag1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
6be2d757f9e8050e1c697348774cfa91
  $tc'SAMFlag2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'SAMFlag3) -}
157819e67bebbe9dfe73e50cc407801c
  $tc'SAMFlag3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'SAMFlag"#) -}
0266b68dd1e48c25d073dde96da27c69
  $tc'UCSC :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12580249376063871083##
                   14080414919561870689##
                   Lib.$trModule
                   Lib.$tc'UCSC1
                   0#
                   Lib.$tc'GRC1) -}
cb7b4ad57815dde6bcc943580c3eeef1
  $tc'UCSC1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'UCSC2) -}
4a9488be7985afff4681dac8a6246caa
  $tc'UCSC2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'UCSC"#) -}
147bc607be066038c40001ab1ea9ecf4
  $tcAlignedRead :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4972988213934892463##
                   10946082804961659406##
                   Lib.$trModule
                   Lib.$tcAlignedRead1
                   0#
                   GHC.Types.krep$*) -}
fe2be224987390a7e46814f345095538
  $tcAlignedRead1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tcAlignedRead2) -}
0df2457b7700bd1c07e1bd991617380c
  $tcAlignedRead2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("AlignedRead"#) -}
164ae967b17a8028e87eb4852d27d983
  $tcBEDPE :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6827116640707753395##
                   1895025442943686941##
                   Lib.$trModule
                   Lib.$tcBEDPE1
                   0#
                   GHC.Types.krep$*) -}
77dbdc1723f55d56b44e05b299614d5c
  $tcBEDPE1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tcBEDPE2) -}
f8f7e7e047f784dbef813651952a84a6
  $tcBEDPE2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("BEDPE"#) -}
8e996689aec91d466dfd959a5e0521e6
  $tcBedRecord :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9051835829630378635##
                   9143897066322637648##
                   Lib.$trModule
                   Lib.$tcBedRecord1
                   0#
                   GHC.Types.krep$*) -}
6e02d3c5ca841f08874a62c8db7c9e05
  $tcBedRecord1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tcBedRecord2) -}
e3f4e597075d947a6d436dd224c4c1cb
  $tcBedRecord2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("BedRecord"#) -}
7d967421cfc5be16c563a1e19b417e3d
  $tcChromNameFormat :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10175504683093252496##
                   3769403613690535393##
                   Lib.$trModule
                   Lib.$tcChromNameFormat1
                   0#
                   GHC.Types.krep$*) -}
cc46cee27b2cd1c9c930db8a4541a4a7
  $tcChromNameFormat1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tcChromNameFormat2) -}
a8bb98ebadf171456eb0524b971ec3d0
  $tcChromNameFormat2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ChromNameFormat"#) -}
3c9c34cc2a569598b8bb76550bf1ae62
  $tcMasterRecord :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7711785876360674938##
                   14134620865565662955##
                   Lib.$trModule
                   Lib.$tcMasterRecord1
                   0#
                   GHC.Types.krep$*) -}
61533a5f3c279496750f5c2eb8f63559
  $tcMasterRecord1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tcMasterRecord2) -}
759c579e7c4bfc7313a54d5f9e52d3ac
  $tcMasterRecord2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("MasterRecord"#) -}
d7206d226a20ab97a6ce8e7b1a006fb8
  $tcMidFamily :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14655689343746912763##
                   13737623121471223332##
                   Lib.$trModule
                   Lib.$tcMidFamily1
                   0#
                   GHC.Types.krep$*) -}
d55939807785d38da149b3ea0dbbf3d8
  $tcMidFamily1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tcMidFamily2) -}
d801b8fb4f61286910ce14520952f4e0
  $tcMidFamily2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("MidFamily"#) -}
90ffad3827217688a329f0b1d52bfe0a
  $tcOpts :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12181413834175392398##
                   11174073886312554869##
                   Lib.$trModule
                   Lib.$tcOpts1
                   0#
                   GHC.Types.krep$*) -}
2aa869bda4ceb0bb9c209e06c5705ab2
  $tcOpts1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tcOpts2) -}
d624dce578ac155f3b32740b0ff9df41
  $tcOpts2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Opts"#) -}
8b8972fc55506a362e636cdb25b4ef5b
  $tcPairedAln :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11789573608132589888##
                   2575112896633018088##
                   Lib.$trModule
                   Lib.$tcPairedAln1
                   0#
                   GHC.Types.krep$*) -}
dbb29206cfcb28ff41533b753819d235
  $tcPairedAln1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tcPairedAln2) -}
8df241472fcd141274bb75863dfadc29
  $tcPairedAln2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("PairedAln"#) -}
fb5ecb3fcaf566e94cf126d3b894a7b7
  $tcRunStats :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9783257459092825462##
                   3683773934213743812##
                   Lib.$trModule
                   Lib.$tcRunStats1
                   0#
                   GHC.Types.krep$*) -}
b8ddcd85e701656cda3e85a2abc9be18
  $tcRunStats1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tcRunStats2) -}
7481427091cbed8e044bce5605e0f4d4
  $tcRunStats2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("RunStats"#) -}
6b306938ac55ede45b94295a0de3b18d
  $tcSAMFlag :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3533380251825923360##
                   17621539815808282357##
                   Lib.$trModule
                   Lib.$tcSAMFlag1
                   0#
                   GHC.Types.krep$*) -}
88f4eafe336660d8995d3eb380fdcd2e
  $tcSAMFlag1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tcSAMFlag2) -}
e9ad14aa6714d88f1702494145afc4dd
  $tcSAMFlag2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("SAMFlag"#) -}
9a8129dc3281cee4ed1aad2797bb6c44
  $tcUChr :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15848653898981359343##
                   6836574627349539610##
                   Lib.$trModule
                   Lib.$tcUChr1
                   0#
                   GHC.Types.krep$*) -}
fc64dcc7c16dc519e3fa2d29b61a9f9f
  $tcUChr1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tcUChr2) -}
1cb1809117d9910140fde2e4767738bb
  $tcUChr2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("UChr"#) -}
03c524d496641725610b35067df8c4fb
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Lib.$trModule3 Lib.$trModule1) -}
2358a5de7477af67cc5cbac335c0234a
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$trModule2) -}
d69957a0517fb38ae03de9a3c71fd4b6
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Lib"#) -}
070f29fdf66177df4a40514afcfcf63a
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$trModule4) -}
74149b2dce0c847840c632cc3d0d6d48
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("primerclip-0.3.2.0-4vTju4b4oawFuFWabKwXDg"#) -}
2602bc55a0bc18f97ddafe8481f424d4
  $w$c< ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs, Strictness: <S,U><L,1*U><S,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: Lib.UChr)
                   (ww3 :: GHC.Integer.Type.Integer) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww1 ww3 of wild2 {
                             DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True } }
                   GHC.Types.True -> GHC.Types.True } } }) -}
56085158adcb1a83aedbd1d4fa3afc04
  $w$c<1 ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs, Strictness: <S,U><L,1*U><S,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: Lib.UChr)
                   (ww3 :: GHC.Integer.Type.Integer) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww1 ww3 of wild2 {
                             DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True } }
                   GHC.Types.True -> GHC.Types.True } } }) -}
ac7a82c7b6b5e688f07691838bd3eba8
  $w$c<= ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs, Strictness: <S,U><L,1*U><S,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: Lib.UChr)
                   (ww3 :: GHC.Integer.Type.Integer) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww1 ww3 of wild2 {
                             DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False } }
                   GHC.Types.True -> GHC.Types.True } } }) -}
f01753f51af6811ee1953afa483d5cac
  $w$c<=1 ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs, Strictness: <S,U><L,1*U><S,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: Lib.UChr)
                   (ww3 :: GHC.Integer.Type.Integer) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww1 ww3 of wild2 {
                             DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False } }
                   GHC.Types.True -> GHC.Types.True } } }) -}
7c35fcccebf3afe355027f640ceb26ff
  $w$c== ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> GHC.Types.Bool
  {- Arity: 8, HasNoCafRefs,
     Strictness: <S,U><L,1*U><L,1*U><L,1*U(U,U,U,U)><S,U><L,1*U><L,1*U><L,1*U(U,U,U,U)>,
     Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: GHC.Integer.Type.Integer)
                   (ww3 :: Data.ByteString.Internal.ByteString)
                   (ww4 :: Lib.UChr)
                   (ww5 :: GHC.Integer.Type.Integer)
                   (ww6 :: GHC.Integer.Type.Integer)
                   (ww7 :: Data.ByteString.Internal.ByteString) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww4 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==# a# b#) of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case GHC.Integer.Type.eqInteger# ww1 ww5 of wild1 { DEFAULT ->
                      case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild1 of wild2 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case GHC.Integer.Type.eqInteger# ww2 ww6 of wild3 { DEFAULT ->
                           case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild3 of wild4 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> Data.ByteString.Internal.eq ww3 ww7 } } } } } } }) -}
82bf14f62d876d47c1d718c14db26079
  $w$c==1 ::
    GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
  {- Arity: 8, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><L,1*U><S,1*U><L,1*U><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Types.Bool)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Base.String)
                   (ww3 :: GHC.Base.String)
                   (ww4 :: GHC.Types.Bool)
                   (ww5 :: GHC.Base.String)
                   (ww6 :: GHC.Base.String)
                   (ww7 :: GHC.Base.String) ->
                 let {
                   $j :: GHC.Types.Bool <join 0>
                   = case GHC.Base.eqString ww1 ww5 of wild {
                       GHC.Types.False -> GHC.Types.False
                       GHC.Types.True
                       -> case GHC.Base.eqString ww2 ww6 of wild1 {
                            GHC.Types.False -> GHC.Types.False
                            GHC.Types.True -> GHC.Base.eqString ww3 ww7 } }
                 } in
                 case ww of wild {
                   GHC.Types.False
                   -> case ww4 of wild1 {
                        GHC.Types.False -> $j GHC.Types.True -> GHC.Types.False }
                   GHC.Types.True
                   -> case ww4 of wild1 {
                        GHC.Types.False -> GHC.Types.False GHC.Types.True -> $j } }) -}
0946674a6db858a0222cc1d85f6f9cde
  $w$c> ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs, Strictness: <S,U><L,1*U><S,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: Lib.UChr)
                   (ww3 :: GHC.Integer.Type.Integer) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww1 ww3 of wild2 {
                             DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True } }
                   GHC.Types.True -> GHC.Types.False } } }) -}
218c03053f92f48a2cdee7208ba13cac
  $w$c>1 ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs, Strictness: <S,U><L,1*U><S,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: Lib.UChr)
                   (ww3 :: GHC.Integer.Type.Integer) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww1 ww3 of wild2 {
                             DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True } }
                   GHC.Types.True -> GHC.Types.False } } }) -}
d7f9a2469252a6acebeffeebb9a994b0
  $w$c>= ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs, Strictness: <S,U><L,1*U><S,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: Lib.UChr)
                   (ww3 :: GHC.Integer.Type.Integer) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww1 ww3 of wild2 {
                             DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False } }
                   GHC.Types.True -> GHC.Types.False } } }) -}
7485fb012759c9ad878b808334d33718
  $w$c>=1 ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs, Strictness: <S,U><L,1*U><S,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: Lib.UChr)
                   (ww3 :: GHC.Integer.Type.Integer) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww1 ww3 of wild2 {
                             DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False } }
                   GHC.Types.True -> GHC.Types.False } } }) -}
6043df1ae9304d217b65705689c69b8d
  $w$ccompare ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Ordering
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S,U><L,1*U><L,1*U><S,U><L,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: GHC.Integer.Type.Integer)
                   (ww3 :: Lib.UChr)
                   (ww4 :: GHC.Integer.Type.Integer)
                   (ww5 :: GHC.Integer.Type.Integer) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww3 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.GT
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww1 ww4 of wild2 {
                             GHC.Types.LT -> GHC.Types.LT
                             GHC.Types.EQ -> GHC.Integer.Type.compareInteger ww2 ww5
                             GHC.Types.GT -> GHC.Types.GT } }
                   GHC.Types.True -> GHC.Types.LT } } }) -}
813aa6105a7b8482e6bce638e1362b22
  $w$ccompare1 ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Ordering
  {- Arity: 4, HasNoCafRefs, Strictness: <S,U><L,1*U><S,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: Lib.UChr)
                   (ww3 :: GHC.Integer.Type.Integer) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.GT
                        GHC.Types.True -> GHC.Integer.Type.compareInteger ww1 ww3 }
                   GHC.Types.True -> GHC.Types.LT } } }) -}
c204d874bff010c1b87003955880260b
  $w$ccompare2 ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Ordering
  {- Arity: 4, HasNoCafRefs, Strictness: <S,U><L,1*U><S,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: Lib.UChr)
                   (ww3 :: GHC.Integer.Type.Integer) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.GT
                        GHC.Types.True -> GHC.Integer.Type.compareInteger ww1 ww3 }
                   GHC.Types.True -> GHC.Types.LT } } }) -}
c0698a9449c00a904dcf19e9e25cadd5
  $w$ccompare3 ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Ordering
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S,U><L,1*U><L,1*U><S,U><L,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: GHC.Integer.Type.Integer)
                   (ww3 :: Lib.UChr)
                   (ww4 :: GHC.Integer.Type.Integer)
                   (ww5 :: GHC.Integer.Type.Integer) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww3 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.GT
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww1 ww4 of wild2 {
                             GHC.Types.LT -> GHC.Types.LT
                             GHC.Types.EQ -> GHC.Integer.Type.compareInteger ww2 ww5
                             GHC.Types.GT -> GHC.Types.GT } }
                   GHC.Types.True -> GHC.Types.LT } } }) -}
15620c060056b97d1f04f6027bed22c6
  $w$ccompare4 ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Ordering
  {- Arity: 8, HasNoCafRefs,
     Strictness: <S,U><L,1*U><L,1*U><L,1*U><S,U><L,1*U><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: GHC.Integer.Type.Integer)
                   (ww3 :: GHC.Integer.Type.Integer)
                   (ww4 :: Lib.UChr)
                   (ww5 :: GHC.Integer.Type.Integer)
                   (ww6 :: GHC.Integer.Type.Integer)
                   (ww7 :: GHC.Integer.Type.Integer) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww4 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.GT
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww1 ww5 of wild2 {
                             GHC.Types.LT -> GHC.Types.LT
                             GHC.Types.EQ
                             -> case GHC.Integer.Type.compareInteger ww2 ww6 of wild3 {
                                  GHC.Types.LT -> GHC.Types.LT
                                  GHC.Types.EQ -> GHC.Integer.Type.compareInteger ww3 ww7
                                  GHC.Types.GT -> GHC.Types.GT }
                             GHC.Types.GT -> GHC.Types.GT } }
                   GHC.Types.True -> GHC.Types.LT } } }) -}
eb54c5795cd87d65034c776d841620e0
  $w$ccompare5 ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Lib.AlignedRead
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Lib.AlignedRead
    -> GHC.Types.Ordering
  {- Arity: 8, HasNoCafRefs,
     Strictness: <S,U><L,1*U><L,1*U><L,1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,U><L,1*U><L,1*U><L,1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: GHC.Integer.Type.Integer)
                   (ww3 :: Lib.AlignedRead)
                   (ww4 :: Lib.UChr)
                   (ww5 :: GHC.Integer.Type.Integer)
                   (ww6 :: GHC.Integer.Type.Integer)
                   (ww7 :: Lib.AlignedRead) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww4 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.GT
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww1 ww5 of wild2 {
                             GHC.Types.LT -> GHC.Types.LT
                             GHC.Types.EQ
                             -> case GHC.Integer.Type.compareInteger ww2 ww6 of wild3 {
                                  GHC.Types.LT -> GHC.Types.LT
                                  GHC.Types.EQ -> Lib.$fOrdAlignedRead_$ccompare ww3 ww7
                                  GHC.Types.GT -> GHC.Types.GT }
                             GHC.Types.GT -> GHC.Types.GT } }
                   GHC.Types.True -> GHC.Types.LT } } }) -}
ceb4d0ea9cbcc5b1524e546fcc802235
  $w$creadPrec ::
    GHC.Prim.Int#
    -> forall b.
       (Lib.RunStats -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S,U><L,C(U)>, Inline: [0] -}
d1a5bc769505cb73a397c4103035f2d3
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> GHC.Show.ShowS
  {- Arity: 8,
     Strictness: <S,U><L,1*U><L,U><L,U><L,1*U><L,U><L,U><L,1*U(U,U,U,U)>,
     Inline: [0] -}
64d0050ebbdc8dcc035b35c65c8b5013
  $w$cshowsPrec1 ::
    GHC.Prim.Int#
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> GHC.Show.ShowS
  {- Arity: 5, Strictness: <S,U><L,1*U><L,U><L,U><L,1*U(U,U,U,U)>,
     Inline: [0] -}
a78b9764d29be38e242cd938b7b6b0f5
  $w$cshowsPrec2 ::
    GHC.Prim.Int#
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 6, Strictness: <S,U><L,1*U><L,1*U><L,1*U><L,1*U><L,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Types.Bool)
                   (ww2 :: GHC.Base.String)
                   (ww3 :: GHC.Base.String)
                   (ww4 :: GHC.Base.String)
                   (w :: GHC.Base.String) ->
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.CString.unpackAppendCString#
                       Lib.$fShowOpts7
                       (GHC.CString.unpackAppendCString#
                          Lib.$fShowOpts6
                          (let {
                             eta :: GHC.Base.String
                             = GHC.Base.++
                                 @ GHC.Types.Char
                                 GHC.Show.showCommaSpace1
                                 (GHC.CString.unpackAppendCString#
                                    Lib.$fShowOpts5
                                    (GHC.Types.:
                                       @ GHC.Types.Char
                                       GHC.Show.$fShow(,)3
                                       (GHC.Show.showLitString
                                          ww2
                                          (GHC.Types.:
                                             @ GHC.Types.Char
                                             GHC.Show.$fShow(,)3
                                             (GHC.Base.++
                                                @ GHC.Types.Char
                                                GHC.Show.showCommaSpace1
                                                (GHC.CString.unpackAppendCString#
                                                   Lib.$fShowOpts4
                                                   (GHC.Types.:
                                                      @ GHC.Types.Char
                                                      GHC.Show.$fShow(,)3
                                                      (GHC.Show.showLitString
                                                         ww3
                                                         (GHC.Types.:
                                                            @ GHC.Types.Char
                                                            GHC.Show.$fShow(,)3
                                                            (GHC.Base.++
                                                               @ GHC.Types.Char
                                                               GHC.Show.showCommaSpace1
                                                               (GHC.CString.unpackAppendCString#
                                                                  Lib.$fShowOpts3
                                                                  (GHC.Types.:
                                                                     @ GHC.Types.Char
                                                                     GHC.Show.$fShow(,)3
                                                                     (GHC.Show.showLitString
                                                                        ww4
                                                                        (GHC.Types.:
                                                                           @ GHC.Types.Char
                                                                           GHC.Show.$fShow(,)3
                                                                           (GHC.CString.unpackAppendCString#
                                                                              Lib.$fShowOpts2
                                                                              x)))))))))))))))
                           } in
                           case ww1 of wild {
                             GHC.Types.False
                             -> GHC.Base.++ @ GHC.Types.Char GHC.Show.$fShowBool3 eta
                             GHC.Types.True
                             -> GHC.Base.++ @ GHC.Types.Char GHC.Show.$fShowBool1 eta }))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False -> p w
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 w)) }) -}
eb54c5795cd87d65034c776d841620e0
  $w$cshowsPrec3 ::
    GHC.Prim.Int#
    -> Lib.AlignedRead
    -> Lib.AlignedRead
    -> [Lib.AlignedRead]
    -> [Lib.AlignedRead]
    -> GHC.Show.ShowS
  {- Arity: 5,
     Strictness: <S,U><L,1*U(1*U(U,U,U,U),U(U),1*U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),U,U,1*U(U,U,U,U),U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(1*U,U,U,1*U(U,U,U,U)),U)><L,1*U(1*U(U,U,U,U),U(U),1*U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),U,U,1*U(U,U,U,U),U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(1*U,U,U,1*U(U,U,U,U)),U)><L,U><L,U>,
     Inline: [0] -}
ab9459629b6200dc5b410a9eca84c087
  $w$cshowsPrec4 ::
    GHC.Prim.Int#
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Show.ShowS
  {- Arity: 7,
     Strictness: <S,U><L,U><L,U><L,U><L,U><L,1*U(U)><L,1*U(U)>,
     Inline: [0] -}
72f14e6fcdc92b42047548db1c03b13e
  $w$ctoEnum :: GHC.Prim.Int# -> Lib.ChromNameFormat
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 0#) of wild {
                   GHC.Types.False -> Lib.$wlvl ww
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# ww 1#) of wild1 {
                        GHC.Types.False -> Lib.$wlvl ww
                        GHC.Types.True
                        -> GHC.Prim.tagToEnum# @ Lib.ChromNameFormat ww } }) -}
3fd0d1813507d3804368ee979449d71a
  $w$ctoEnum1 :: GHC.Prim.Int# -> Lib.UChr
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 0#) of wild {
                   GHC.Types.False -> Lib.$wlvl1 ww
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# ww 110#) of wild1 {
                        GHC.Types.False -> Lib.$wlvl1 ww
                        GHC.Types.True -> GHC.Prim.tagToEnum# @ Lib.UChr ww } }) -}
085eb328a67164f967484422969fa8ae
  $w$sgo8 ::
    GHC.Prim.Int#
    -> a1
    -> Data.Map.Internal.Map GHC.Types.Int a1
    -> Data.Map.Internal.Map GHC.Types.Int a1
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
bda1ed477f739d1969eb189c9375edde
  $walignmentsetparser ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [Lib.AlignedRead]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
797fd4b7056951f38f6eaa91fc98eb56
  $walnparser ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.AlignedRead
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
44a306d20772e705bd12aeae0df2eee1
  $walnsToPairedAln ::
    [Lib.AlignedRead]
    -> (# Lib.AlignedRead, Lib.AlignedRead, [Lib.AlignedRead],
          [Lib.AlignedRead] #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ (w :: [Lib.AlignedRead]) ->
                 case w of wild {
                   []
                   -> (# Lib.defaultAlignment, Lib.defaultAlignment,
                         GHC.Types.[] @ Lib.AlignedRead, GHC.Types.[] @ Lib.AlignedRead #)
                   : ipv ipv1
                   -> let {
                        ds6 :: ([Lib.AlignedRead], [Lib.AlignedRead])
                        = case Lib.$wgo2 wild of ww { (#,#) ww1 ww2 -> (ww1, ww2) }
                      } in
                      let {
                        ds7 :: ([Lib.AlignedRead], [Lib.AlignedRead])
                        = case ds6 of wild1 { (,) r1s r2s ->
                          case Lib.$wgo1 r1s of ww { (#,#) ww1 ww2 -> (ww1, ww2) } }
                      } in
                      let {
                        ds8 :: ([Lib.AlignedRead], [Lib.AlignedRead])
                        = case ds6 of wild1 { (,) r1s r2s ->
                          case Lib.$wgo r2s of ww { (#,#) ww1 ww2 -> (ww1, ww2) } }
                      } in
                      (# case ds7 of wild1 { (,) r1pl r1secs1 ->
                         case r1pl of wild2 {
                           [] -> Lib.alnsToPairedAln1 : ds9 ds10 -> ds9 } },
                         case ds8 of wild1 { (,) r2pl r2secs1 ->
                         case r2pl of wild2 {
                           [] -> Lib.alnsToPairedAln1 : ds9 ds10 -> ds9 } },
                         case ds7 of wild1 { (,) r1pl r1secs1 -> r1secs1 },
                         case ds8 of wild1 { (,) r2pl r2secs1 -> r2secs1 } #) }) -}
e2097e4fb703733b7eeb3a88784ff003
  $wanyPrimerIntAln ::
    GHC.Types.Bool
    -> Lib.AlignedRead
    -> [Lib.AlignedRead]
    -> [Lib.AlignedRead]
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A)><L,1*U><L,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Types.Bool)
                   (ww1 :: Lib.AlignedRead)
                   (ww2 :: [Lib.AlignedRead])
                   (ww3 :: [Lib.AlignedRead]) ->
                 case ww of wild {
                   GHC.Types.False
                   -> case ww1 of wild1 { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                      case ds27 of wild2 {
                        GHC.Types.False
                        -> let {
                             $j :: GHC.Types.Bool <join 0> = Lib.anyPrimerIntAln_go ww3
                           } in
                           letrec {
                             go20 :: [Lib.AlignedRead] -> GHC.Types.Bool
                               <join 1> {- Arity: 1, Strictness: <S,1*U> -}
                             = \ (ds37 :: [Lib.AlignedRead]) ->
                               case ds37 of wild3 {
                                 [] -> $j
                                 : y ys
                                 -> case y of wild4 { Lib.AlignedRead ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ->
                                    case ds59 of wild5 {
                                      GHC.Types.False -> go20 ys
                                      GHC.Types.True -> GHC.Types.True } } }
                           } in
                           go20 ww2
                        GHC.Types.True -> GHC.Types.True } }
                   GHC.Types.True -> GHC.Types.True }) -}
fb2f12e6bbcb943ebed6ecf037788948
  $wbedPEparser ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.BEDPE
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
1a9e85f125922f2c07d12492c68820c5
  $wbedrecparser ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.BedRecord
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
59314734ac1364a7784ff0ba2de1c5e2
  $wboolZeroLengthCigar ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Types.Bool
  {- Arity: 4, Strictness: <S,U><L,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 Lib.boolZeroLengthCigar_go
                   (Data.ByteString.Internal.$wunpackAppendCharsLazy
                      ww
                      ww1
                      ww2
                      ww3
                      (GHC.Types.[] @ GHC.Types.Char))) -}
d751e050ddf78fbbf8afe3848b9d8df6
  $wcheckChromNameMatchStatus ::
    Lib.Header
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Array# Lib.BedRecord
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 5, Strictness: <L,U><L,U><S,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (w :: Lib.Header)
                   (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Array# Lib.BedRecord)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 letrec {
                   $wgo45 :: GHC.Prim.Int# -> [Lib.UChr]
                     {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                   = \ (ww3 :: GHC.Prim.Int#) ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.>=# ww3 ww1) of wild {
                       GHC.Types.False
                       -> case GHC.Prim.indexArray#
                                 @ Lib.BedRecord
                                 ww2
                                 (GHC.Prim.+# ww ww3) of ds6 { Unit# ipv ->
                          GHC.Types.:
                            @ Lib.UChr
                            (case ipv of wild1 { Lib.BedRecord ds7 ds8 ds9 ds10 -> ds7 })
                            ($wgo45 (GHC.Prim.+# ww3 1#)) }
                       GHC.Types.True -> GHC.Types.[] @ Lib.UChr }
                 } in
                 case Lib.$wgo4
                        (Data.OldList.intersectBy
                           @ Lib.UChr
                           Lib.$fEqUChr_$c==
                           (Data.Set.Internal.$fDataSet_go
                              @ Lib.UChr
                              (GHC.Types.[] @ Lib.UChr)
                              (Lib.$sfromList4 ($wgo45 0#)))
                           (letrec {
                              go20 :: GHC.Prim.Int# -> [Lib.UChr]
                                {- Arity: 1, Strictness: <S,U> -}
                              = \ (x :: GHC.Prim.Int#) ->
                                case GHC.List.$w!!
                                       @ Data.ByteString.Internal.ByteString
                                       w
                                       x of wild { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                                case Lib.$whdrchromp
                                       @ Lib.UChr
                                       dt
                                       dt1
                                       dt2
                                       dt3
                                       dt3
                                       0#
                                       0#
                                       Data.Attoparsec.Internal.Types.Complete
                                       (Data.Attoparsec.ByteString.Internal.failK @ Lib.UChr)
                                         `cast`
                                       (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                                        ->_R <Data.Attoparsec.Internal.Types.Pos
                                              -> Data.Attoparsec.Internal.Types.More
                                              -> [GHC.Base.String]
                                              -> GHC.Base.String
                                              -> Data.Attoparsec.Internal.Types.IResult
                                                   Data.ByteString.Internal.ByteString Lib.UChr>_R)
                                       (Data.Attoparsec.ByteString.Internal.successK @ Lib.UChr)
                                         `cast`
                                       (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                                        ->_R <Data.Attoparsec.Internal.Types.Pos
                                              -> Data.Attoparsec.Internal.Types.More
                                              -> Lib.UChr
                                              -> Data.Attoparsec.Internal.Types.IResult
                                                   Data.ByteString.Internal.ByteString
                                                   Lib.UChr>_R) of wild1 {
                                  Data.Attoparsec.Internal.Types.Fail ds6 ds7 err
                                  -> case ds7 of wild2 { DEFAULT ->
                                     case x of wild3 {
                                       DEFAULT -> go20 (GHC.Prim.+# wild3 1#)
                                       25# -> GHC.Types.[] @ Lib.UChr } }
                                  Data.Attoparsec.Internal.Types.Partial ipv
                                  -> case Lib.checkChromNameMatchStatus5 ret_ty [Lib.UChr] of {}
                                  Data.Attoparsec.Internal.Types.Done ds6 a1
                                  -> GHC.Types.:
                                       @ Lib.UChr
                                       a1
                                       (case x of wild2 {
                                          DEFAULT -> go20 (GHC.Prim.+# wild2 1#)
                                          25# -> GHC.Types.[] @ Lib.UChr }) } }
                            } in
                            Data.Set.Internal.$fDataSet_go
                              @ Lib.UChr
                              (GHC.Types.[] @ Lib.UChr)
                              (Lib.$sfromList4 (go20 1#))))
                        0# of ww3 { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww3 1#) of wild {
                   GHC.Types.False
                   -> case Lib.checkChromNameMatchStatus4
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                      of {}
                   GHC.Types.True
                   -> GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Lib.checkChromNameMatchStatus2
                        GHC.Types.True
                        w1 } }) -}
1e8e27a2c4d1a542547975218777e58f
  $wcheckcigseqlen ::
    Data.ByteString.Internal.ByteString
    -> GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.ByteString.Internal.ByteString
    -> GHC.Types.Bool
  {- Arity: 6,
     Strictness: <L,1*U(U,U,U,U)><L,U><L,U><L,U><S,U><L,1*U(U,U,U,U)>,
     Inline: [0] -}
14971e6ae57ce79482c756a6bf3c795e
  $wcheckcigseqlen2 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> GHC.Types.Bool
  {- Arity: 6,
     Strictness: <L,U><L,U><L,U><S,U><L,1*U(U,U,U,U)><L,1*U(U,U,U,U)>,
     Inline: [0] -}
3151828c5a098283c5f9ea0a1a0f9f24
  $wchecknonzeroCigMatch ::
    Data.ByteString.Internal.ByteString
    -> GHC.Types.Bool -> GHC.Types.Bool -> GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,1*U(U,U,U,1*U)><L,1*U><S,1*U>, Inline: [0],
     Unfolding: (\ (ww :: Data.ByteString.Internal.ByteString)
                   (ww1 :: GHC.Types.Bool)
                   (ww2 :: GHC.Types.Bool) ->
                 case ww2 of wild {
                   GHC.Types.False
                   -> case ww1 of wild1 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True
                        -> case ww of wild2 { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                           case dt3 of ds6 {
                             DEFAULT
                             -> case Lib.$wgo5
                                       (GHC.Prim.plusAddr# dt dt2)
                                       (GHC.Prim.plusAddr# dt (GHC.Prim.+# dt2 ds6))
                                       GHC.Prim.realWorld# of ds7 { (#,#) ipv ipv1 ->
                                case GHC.Prim.touch#
                                       @ 'GHC.Types.LiftedRep
                                       @ GHC.ForeignPtr.ForeignPtrContents
                                       dt1
                                       ipv of s' { DEFAULT ->
                                ipv1 } }
                             0# -> GHC.Types.False } } }
                   GHC.Types.True -> GHC.Types.True }) -}
81da9365f23cff9ddc4ea074c0942704
  $wcigarP ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                            r) ->
                 Lib.$wp
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w
                   w1
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (a1 :: (GHC.Integer.Type.Integer,
                              Data.ByteString.Internal.ByteString))[OneShot] ->
                    case t'
                           `cast`
                         (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww7 { Data.Attoparsec.ByteString.Buffer.Buf ww8 ww9 ww10 ww11 ww12 ww13 ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww14 { GHC.Types.I# ww15 ->
                    Lib.$wmany_v
                      @ r
                      ww8
                      ww9
                      ww10
                      ww11
                      ww12
                      ww13
                      ww15
                      more'
                      (\ (t'1 :: Data.Attoparsec.Internal.Types.State
                                   Data.ByteString.Internal.ByteString)
                         (pos'1 :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                         (more'1 :: Data.Attoparsec.Internal.Types.More)[OneShot]
                         (a3 :: [(GHC.Integer.Type.Integer,
                                  Data.ByteString.Internal.ByteString)])[OneShot] ->
                       case pos'1
                              `cast`
                            (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                       w2
                         t'1
                         nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                         more'1
                         (GHC.Types.:
                            @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                            a1
                            a3) }) } })) -}
584b9f6a9b8116e0ba9f14593a315299
  $wcigseqlenHdrPassTest ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> GHC.Types.Bool
  {- Arity: 6,
     Strictness: <L,U><L,U><L,U><S,U><L,1*U(U,U,U,U)><L,1*U(U,U,U,U)>,
     Inline: [0] -}
888f578deb8484af6cd967f9e9f7da33
  $wcontractcigar ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.ByteString.Internal.ByteString
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.addtrimtag5 of wild1 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                 let {
                   $j :: Data.ByteString.Internal.ByteString <join 0>
                   = Data.ByteString.concat
                       (GHC.Base.map
                          @ Data.ByteString.Internal.ByteString
                          @ Data.ByteString.Internal.ByteString
                          Lib.contractcigar1
                          (Data.ByteString.$wgroup ww ww1 ww2 ww3))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim./=# ww3 dt7) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqAddr# ww dt4) of wild3 {
                        GHC.Types.False
                        -> case Data.ByteString.Internal.$wcompareBytes
                                  ww
                                  ww1
                                  ww2
                                  ww3
                                  dt4
                                  dt5
                                  dt6
                                  dt7 of wild4 {
                             DEFAULT -> $j GHC.Types.EQ -> wild1 }
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# ww2 dt6) of wild4 {
                             GHC.Types.False
                             -> case Data.ByteString.Internal.$wcompareBytes
                                       ww
                                       ww1
                                       ww2
                                       ww3
                                       dt4
                                       dt5
                                       dt6
                                       dt7 of wild5 {
                                  DEFAULT -> $j GHC.Types.EQ -> wild1 }
                             GHC.Types.True -> wild1 } }
                   GHC.Types.True -> $j } }) -}
8fe4c0fb6d37d7edcae6dc96cbf64a03
  $wcreateprimerbedmaps ::
    GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Data.Map.Internal.Map
             Lib.UChr (Data.IntMap.Internal.IntMap Lib.BedRecord),
           Data.Map.Internal.Map
             Lib.UChr (Data.IntMap.Internal.IntMap Lib.BedRecord)) #)
  {- Arity: 3, Strictness: <S,1*U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Types.Bool)
                   (ww1 :: GHC.Base.String)
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case ww of wild {
                   GHC.Types.False
                   -> case Lib.createprimerbedmaps4 ww1 w of ds6 { (#,#) ipv ipv1 ->
                      (# ipv,
                         (case Lib.masterToFPrimerBED
                                 ipv1 of ww2 { Data.Vector.Vector ww3 ww4 ww5 ->
                          Lib.$wmakechrbedmap ww3 ww4 ww5 },
                          case Lib.masterToRPrimerBED
                                 ipv1 of ww2 { Data.Vector.Vector ww3 ww4 ww5 ->
                          Lib.$wmakechrbedmap ww3 ww4 ww5 }) #) }
                   GHC.Types.True
                   -> case Lib.createprimerbedmaps2 ww1 w of ds6 { (#,#) ipv ipv1 ->
                      (# ipv,
                         (case GHC.Magic.runRW#
                                 @ ('GHC.Types.TupleRep
                                      '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                                 @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                                      Data.Vector.Vector Lib.BedRecord #)
                                 (\ (s114 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                  case GHC.Prim.newArray#
                                         @ Lib.BedRecord
                                         @ (Control.Monad.Primitive.PrimState
                                              (GHC.ST.ST GHC.Prim.RealWorld))
                                         0#
                                         (Data.Vector.Mutable.uninitialised @ Lib.BedRecord)
                                         s114
                                           `cast`
                                         (Nth:2
                                              (Nth:2
                                                   (Trans
                                                        (<GHC.ST.STRep
                                                            GHC.Prim.RealWorld
                                                            (Data.Primitive.Array.MutableArray
                                                               (Control.Monad.Primitive.PrimState
                                                                  (GHC.ST.ST GHC.Prim.RealWorld))
                                                               Lib.BedRecord)>_R
                                                         ->_R Sym (GHC.ST.N:ST[0]
                                                                       <GHC.Prim.RealWorld>_N
                                                                       <Data.Primitive.Array.MutableArray
                                                                          (Control.Monad.Primitive.PrimState
                                                                             (GHC.ST.ST
                                                                                GHC.Prim.RealWorld))
                                                                          Lib.BedRecord>_R))
                                                        (((GHC.Prim.State#
                                                             (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                       <GHC.Prim.RealWorld>_N)))_R
                                                          ->_R ((#,#)
                                                                  <'GHC.Types.TupleRep '[]>_R
                                                                  <'GHC.Types.LiftedRep>_R
                                                                  (GHC.Prim.State#
                                                                     (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                               <GHC.Prim.RealWorld>_N)))_R
                                                                  <Data.Primitive.Array.MutableArray
                                                                     (Control.Monad.Primitive.PrimState
                                                                        (GHC.ST.ST
                                                                           GHC.Prim.RealWorld))
                                                                     Lib.BedRecord>_R)_R)
                                                         ->_R <GHC.ST.ST
                                                                 GHC.Prim.RealWorld
                                                                 (Data.Primitive.Array.MutableArray
                                                                    (Control.Monad.Primitive.PrimState
                                                                       (GHC.ST.ST
                                                                          GHC.Prim.RealWorld))
                                                                    Lib.BedRecord)>_R)))) of ds7 { (#,#) ipv2 ipv3 ->
                                  Lib.$wfoldlM_loop1
                                    GHC.Types.SPEC
                                    0#
                                    0#
                                    ipv3
                                      `cast`
                                    (GHC.Prim.MutableArray#
                                       (Control.Monad.Primitive.D:R:PrimStateST[0]
                                            <GHC.Prim.RealWorld>_N)
                                       <Lib.BedRecord>_R)_R
                                    0#
                                    (GHC.Base.map @ Lib.BEDPE @ Lib.BedRecord Lib.bedpeToFbed ipv1)
                                    ipv2
                                      `cast`
                                    (Nth:2
                                         (Nth:3
                                              (Nth:2
                                                   (Trans
                                                        (((GHC.Prim.State#
                                                             (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                  <GHC.Prim.RealWorld>_N))_R
                                                          ->_R ((#,#)
                                                                  <'GHC.Types.TupleRep '[]>_R
                                                                  <'GHC.Types.LiftedRep>_R
                                                                  (GHC.Prim.State#
                                                                     (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                          <GHC.Prim.RealWorld>_N))_R
                                                                  <Data.Primitive.Array.MutableArray
                                                                     (Control.Monad.Primitive.PrimState
                                                                        (GHC.ST.ST
                                                                           GHC.Prim.RealWorld))
                                                                     Lib.BedRecord>_R)_R)
                                                         ->_R <GHC.ST.ST
                                                                 GHC.Prim.RealWorld
                                                                 (Data.Primitive.Array.MutableArray
                                                                    (Control.Monad.Primitive.PrimState
                                                                       (GHC.ST.ST
                                                                          GHC.Prim.RealWorld))
                                                                    Lib.BedRecord)>_R)
                                                        (<GHC.ST.STRep
                                                            GHC.Prim.RealWorld
                                                            (Data.Primitive.Array.MutableArray
                                                               (Control.Monad.Primitive.PrimState
                                                                  (GHC.ST.ST GHC.Prim.RealWorld))
                                                               Lib.BedRecord)>_R
                                                         ->_R GHC.ST.N:ST[0]
                                                                  <GHC.Prim.RealWorld>_N
                                                                  <Data.Primitive.Array.MutableArray
                                                                     (Control.Monad.Primitive.PrimState
                                                                        (GHC.ST.ST
                                                                           GHC.Prim.RealWorld))
                                                                     Lib.BedRecord>_R))))) }) of ds7 { (#,#) ipv2 ipv3 ->
                          case ipv3 of ww2 { Data.Vector.Vector ww3 ww4 ww5 ->
                          Lib.$wmakechrbedmap ww3 ww4 ww5 } },
                          case GHC.Magic.runRW#
                                 @ ('GHC.Types.TupleRep
                                      '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                                 @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                                      Data.Vector.Vector Lib.BedRecord #)
                                 (\ (s114 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                  case GHC.Prim.newArray#
                                         @ Lib.BedRecord
                                         @ (Control.Monad.Primitive.PrimState
                                              (GHC.ST.ST GHC.Prim.RealWorld))
                                         0#
                                         (Data.Vector.Mutable.uninitialised @ Lib.BedRecord)
                                         s114
                                           `cast`
                                         (Nth:2
                                              (Nth:2
                                                   (Trans
                                                        (<GHC.ST.STRep
                                                            GHC.Prim.RealWorld
                                                            (Data.Primitive.Array.MutableArray
                                                               (Control.Monad.Primitive.PrimState
                                                                  (GHC.ST.ST GHC.Prim.RealWorld))
                                                               Lib.BedRecord)>_R
                                                         ->_R Sym (GHC.ST.N:ST[0]
                                                                       <GHC.Prim.RealWorld>_N
                                                                       <Data.Primitive.Array.MutableArray
                                                                          (Control.Monad.Primitive.PrimState
                                                                             (GHC.ST.ST
                                                                                GHC.Prim.RealWorld))
                                                                          Lib.BedRecord>_R))
                                                        (((GHC.Prim.State#
                                                             (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                       <GHC.Prim.RealWorld>_N)))_R
                                                          ->_R ((#,#)
                                                                  <'GHC.Types.TupleRep '[]>_R
                                                                  <'GHC.Types.LiftedRep>_R
                                                                  (GHC.Prim.State#
                                                                     (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                               <GHC.Prim.RealWorld>_N)))_R
                                                                  <Data.Primitive.Array.MutableArray
                                                                     (Control.Monad.Primitive.PrimState
                                                                        (GHC.ST.ST
                                                                           GHC.Prim.RealWorld))
                                                                     Lib.BedRecord>_R)_R)
                                                         ->_R <GHC.ST.ST
                                                                 GHC.Prim.RealWorld
                                                                 (Data.Primitive.Array.MutableArray
                                                                    (Control.Monad.Primitive.PrimState
                                                                       (GHC.ST.ST
                                                                          GHC.Prim.RealWorld))
                                                                    Lib.BedRecord)>_R)))) of ds7 { (#,#) ipv2 ipv3 ->
                                  Lib.$wfoldlM_loop
                                    GHC.Types.SPEC
                                    0#
                                    0#
                                    ipv3
                                      `cast`
                                    (GHC.Prim.MutableArray#
                                       (Control.Monad.Primitive.D:R:PrimStateST[0]
                                            <GHC.Prim.RealWorld>_N)
                                       <Lib.BedRecord>_R)_R
                                    0#
                                    (GHC.Base.map @ Lib.BEDPE @ Lib.BedRecord Lib.bedpeToRbed ipv1)
                                    ipv2
                                      `cast`
                                    (Nth:2
                                         (Nth:3
                                              (Nth:2
                                                   (Trans
                                                        (((GHC.Prim.State#
                                                             (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                  <GHC.Prim.RealWorld>_N))_R
                                                          ->_R ((#,#)
                                                                  <'GHC.Types.TupleRep '[]>_R
                                                                  <'GHC.Types.LiftedRep>_R
                                                                  (GHC.Prim.State#
                                                                     (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                          <GHC.Prim.RealWorld>_N))_R
                                                                  <Data.Primitive.Array.MutableArray
                                                                     (Control.Monad.Primitive.PrimState
                                                                        (GHC.ST.ST
                                                                           GHC.Prim.RealWorld))
                                                                     Lib.BedRecord>_R)_R)
                                                         ->_R <GHC.ST.ST
                                                                 GHC.Prim.RealWorld
                                                                 (Data.Primitive.Array.MutableArray
                                                                    (Control.Monad.Primitive.PrimState
                                                                       (GHC.ST.ST
                                                                          GHC.Prim.RealWorld))
                                                                    Lib.BedRecord)>_R)
                                                        (<GHC.ST.STRep
                                                            GHC.Prim.RealWorld
                                                            (Data.Primitive.Array.MutableArray
                                                               (Control.Monad.Primitive.PrimState
                                                                  (GHC.ST.ST GHC.Prim.RealWorld))
                                                               Lib.BedRecord)>_R
                                                         ->_R GHC.ST.N:ST[0]
                                                                  <GHC.Prim.RealWorld>_N
                                                                  <Data.Primitive.Array.MutableArray
                                                                     (Control.Monad.Primitive.PrimState
                                                                        (GHC.ST.ST
                                                                           GHC.Prim.RealWorld))
                                                                     Lib.BedRecord>_R))))) }) of ds7 { (#,#) ipv2 ipv3 ->
                          case ipv3 of ww2 { Data.Vector.Vector ww3 ww4 ww5 ->
                          Lib.$wmakechrbedmap ww3 ww4 ww5 } }) #) } }) -}
7fa2940cfc12e11ed225d76d016d8ea8
  $wds ::
    ((GHC.Integer.Type.Integer
      -> GHC.Integer.Type.Integer
      -> GHC.Integer.Type.Integer
      -> Lib.RunStats)
     -> Data.Conduit.Internal.Pipe.Pipe
          Lib.AlignedRead
          Lib.AlignedRead
          Data.Void.Void
          ()
          (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
          b1)
    -> (# Lib.AlignedRead
          -> Data.Conduit.Internal.Pipe.Pipe
               Lib.AlignedRead
               Lib.AlignedRead
               Data.Void.Void
               ()
               (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
               b1,
          ()
          -> Data.Conduit.Internal.Pipe.Pipe
               Lib.AlignedRead
               Lib.AlignedRead
               Data.Void.Void
               ()
               (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
               b1 #)
  {- Arity: 1, Strictness: <L,C(U)>, Inline: [0],
     Unfolding: (\ @ b1
                   (w :: (GHC.Integer.Type.Integer
                          -> GHC.Integer.Type.Integer
                          -> GHC.Integer.Type.Integer
                          -> Lib.RunStats)
                         -> Data.Conduit.Internal.Pipe.Pipe
                              Lib.AlignedRead
                              Lib.AlignedRead
                              Data.Void.Void
                              ()
                              (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                              b1) ->
                 Lib.$wloop1
                   Lib.defaultBed2
                   @ b1
                   (\ (a1 :: GHC.Integer.Type.Integer) ->
                    let {
                      lvl1008 :: GHC.Types.Double
                      = case GHC.Integer.Type.doubleFromInteger a1 of wild2 { DEFAULT ->
                        GHC.Types.D# wild2 }
                    } in
                    w (\ (mapd :: GHC.Integer.Type.Integer)
                         (trimd :: GHC.Integer.Type.Integer)
                         (trimd2z :: GHC.Integer.Type.Integer) ->
                       Lib.RunStats
                         a1
                         mapd
                         trimd
                         trimd2z
                         (case GHC.Integer.Type.doubleFromInteger
                                 trimd of wild2 { DEFAULT ->
                          case lvl1008 of wild3 { GHC.Types.D# y ->
                          case GHC.Prim./## wild2 y of wild4 { DEFAULT ->
                          GHC.Types.D# (GHC.Prim.*## wild4 100.0##) } } })
                         (case GHC.Integer.Type.doubleFromInteger mapd of wild2 { DEFAULT ->
                          case lvl1008 of wild3 { GHC.Types.D# y ->
                          case GHC.Prim./## wild2 y of wild4 { DEFAULT ->
                          GHC.Types.D# (GHC.Prim.*## wild4 100.0##) } } })))) -}
1003f84d091681a5a1f87f0c16bc0606
  $wfoldlM_loop ::
    GHC.Types.SPEC
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.MutableArray# GHC.Prim.RealWorld Lib.BedRecord
    -> GHC.Prim.Int#
    -> [Lib.BedRecord]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Vector.Vector Lib.BedRecord #)
  {- Arity: 7, Strictness: <S,1*U><L,U><L,U><S,U><L,U><S,1*U><S,U>,
     Inline: [0] -}
b86648922da8b3da7fbebcc000daaedf
  $wfoldlM_loop1 ::
    GHC.Types.SPEC
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.MutableArray# GHC.Prim.RealWorld Lib.BedRecord
    -> GHC.Prim.Int#
    -> [Lib.BedRecord]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Vector.Vector Lib.BedRecord #)
  {- Arity: 7, Strictness: <S,1*U><L,U><L,U><S,U><L,U><S,1*U><S,U>,
     Inline: [0] -}
6717381465acadb63719b7945f746207
  $wfoldlM_loop2 ::
    GHC.Types.SPEC
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.MutableArray# GHC.Prim.RealWorld Lib.BedRecord
    -> GHC.Prim.Int#
    -> [Lib.BedRecord]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Vector.Vector Lib.BedRecord #)
  {- Arity: 7, Strictness: <S,1*U><L,U><L,U><S,U><L,U><S,1*U><S,U>,
     Inline: [0] -}
56f259a7b4a2b1e810804000340f49e6
  $wfoldlM_loop3 ::
    GHC.Types.SPEC
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.MutableArray# GHC.Prim.RealWorld Lib.BedRecord
    -> GHC.Prim.Int#
    -> [Lib.BedRecord]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Vector.Vector Lib.BedRecord #)
  {- Arity: 7, Strictness: <S,1*U><L,U><L,U><S,U><L,U><S,1*U><S,U>,
     Inline: [0] -}
a5c8dd7ca3e6a8ade953a6df4e29d5e8
  $wfoldlM_loop4 ::
    GHC.Types.SPEC
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.MutableArray# GHC.Prim.RealWorld Lib.BedRecord
    -> GHC.Prim.Int#
    -> [Lib.BedRecord]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Vector.Vector Lib.BedRecord #)
  {- Arity: 7, Strictness: <S,1*U><L,U><L,U><S,U><L,U><S,1*U><S,U>,
     Inline: [0] -}
141bf72ae0450fb0d7f733b1914c18b0
  $wgetAlignedLength ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Integer.Type.Integer
  {- Arity: 4, Strictness: <S,U><L,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.$wparseCigar
                        @ [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                        ww
                        ww1
                        ww2
                        ww3
                        ww3
                        0#
                        0#
                        Data.Attoparsec.Internal.Types.Complete
                        (Data.Attoparsec.ByteString.Internal.failK
                           @ [(GHC.Integer.Type.Integer,
                               Data.ByteString.Internal.ByteString)])
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [GHC.Base.String]
                               -> GHC.Base.String
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString
                                    [(GHC.Integer.Type.Integer,
                                      Data.ByteString.Internal.ByteString)]>_R)
                        (Data.Attoparsec.ByteString.Internal.successK
                           @ [(GHC.Integer.Type.Integer,
                               Data.ByteString.Internal.ByteString)])
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [(GHC.Integer.Type.Integer,
                                    Data.ByteString.Internal.ByteString)]
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString
                                    [(GHC.Integer.Type.Integer,
                                      Data.ByteString.Internal.ByteString)]>_R) of wild {
                   Data.Attoparsec.Internal.Types.Fail ds6 ds7 err
                   -> case ds7 of wild1 { DEFAULT ->
                      case GHC.List.badHead ret_ty GHC.Integer.Type.Integer of {} }
                   Data.Attoparsec.Internal.Types.Partial ipv
                   -> case Lib.checkCigarSeqlen1 ret_ty GHC.Integer.Type.Integer of {}
                   Data.Attoparsec.Internal.Types.Done ds6 a1
                   -> Lib.getAlignedLength_go a1 Lib.defaultBed2 }) -}
370e43aad5183443edfb635eda1920c1
  $wgetTrimdcigCoordDiff ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
  {- Arity: 6, Strictness: <S,U><L,U><S,U><S,U><L,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Integer.Type.Integer)
                   (ww5 :: GHC.Integer.Type.Integer) ->
                 case Lib.addtrimtag5 of wild1 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                 let {
                   $j :: GHC.Integer.Type.Integer <join 0>
                   = GHC.Integer.Type.minusInteger
                       (GHC.Integer.Type.minusInteger ww5 ww4)
                       (Lib.getTrimdcigCoordDiff_go
                          (Lib.$wmapcig ww ww1 ww2 ww3)
                          Lib.defaultBed2)
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim./=# ww3 dt7) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqAddr# ww dt4) of wild3 {
                        GHC.Types.False
                        -> case Data.ByteString.Internal.$wcompareBytes
                                  ww
                                  ww1
                                  ww2
                                  ww3
                                  dt4
                                  dt5
                                  dt6
                                  dt7 of wild4 {
                             DEFAULT -> $j GHC.Types.EQ -> Lib.defaultBed2 }
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# ww2 dt6) of wild4 {
                             GHC.Types.False
                             -> case Data.ByteString.Internal.$wcompareBytes
                                       ww
                                       ww1
                                       ww2
                                       ww3
                                       dt4
                                       dt5
                                       dt6
                                       dt7 of wild5 {
                                  DEFAULT -> $j GHC.Types.EQ -> Lib.defaultBed2 }
                             GHC.Types.True -> Lib.defaultBed2 } }
                   GHC.Types.True -> $j } }) -}
dd415417a5958afa523d7d93d81a84fe
  $wgetcigseqdiff ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Integer.Type.Integer
  {- Arity: 5, Strictness: <S,U><L,U><S,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#) ->
                 GHC.Integer.Type.minusInteger
                   (GHC.Integer.Type.smallInteger ww4)
                   (Lib.getcigseqdiff_go
                      (Lib.$wmapcig ww ww1 ww2 ww3)
                      Lib.defaultBed2)) -}
cbb31b8237d026799bf47791d44acc5d
  $wgetcol ::
    GHC.Types.Int
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Array# (Data.Vector.Vector a)
    -> Data.Vector.Vector a
  {- Arity: 4, Strictness: <L,U(U)><L,U><S,U><L,U>, Inline: [0],
     Unfolding: (\ @ a
                   (w :: GHC.Types.Int)
                   (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Array# (Data.Vector.Vector a)) ->
                 case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Vector.Vector a #)
                        (\ (s114 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newArray#
                                @ a
                                @ (Control.Monad.Primitive.PrimState
                                     (GHC.ST.ST GHC.Prim.RealWorld))
                                ww1
                                (Data.Vector.Mutable.uninitialised @ a)
                                s114
                                  `cast`
                                (Nth:2
                                     (Nth:2
                                          (Trans
                                               (<GHC.ST.STRep
                                                   GHC.Prim.RealWorld
                                                   (Data.Primitive.Array.MutableArray
                                                      (Control.Monad.Primitive.PrimState
                                                         (GHC.ST.ST GHC.Prim.RealWorld))
                                                      a)>_R
                                                ->_R Sym (GHC.ST.N:ST[0]
                                                              <GHC.Prim.RealWorld>_N
                                                              <Data.Primitive.Array.MutableArray
                                                                 (Control.Monad.Primitive.PrimState
                                                                    (GHC.ST.ST GHC.Prim.RealWorld))
                                                                 a>_R))
                                               (((GHC.Prim.State#
                                                    (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                              <GHC.Prim.RealWorld>_N)))_R
                                                 ->_R ((#,#)
                                                         <'GHC.Types.TupleRep '[]>_R
                                                         <'GHC.Types.LiftedRep>_R
                                                         (GHC.Prim.State#
                                                            (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                      <GHC.Prim.RealWorld>_N)))_R
                                                         <Data.Primitive.Array.MutableArray
                                                            (Control.Monad.Primitive.PrimState
                                                               (GHC.ST.ST GHC.Prim.RealWorld))
                                                            a>_R)_R)
                                                ->_R <GHC.ST.ST
                                                        GHC.Prim.RealWorld
                                                        (Data.Primitive.Array.MutableArray
                                                           (Control.Monad.Primitive.PrimState
                                                              (GHC.ST.ST GHC.Prim.RealWorld))
                                                           a)>_R)))) of ds6 { (#,#) ipv ipv1 ->
                         letrec {
                           $wfoldlM'_loop :: GHC.Types.SPEC
                                             -> GHC.Prim.Int#
                                             -> GHC.Prim.Int#
                                             -> GHC.Prim.State# GHC.Prim.RealWorld
                                             -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                   Data.Vector.Vector a #)
                             <join 4> {- Arity: 4, Strictness: <S,1*U><L,U><S,U><S,U>,
                                         Inline: [0] -}
                           = \ (w1 :: GHC.Types.SPEC)
                               (ww3 :: GHC.Prim.Int#)
                               (ww4 :: GHC.Prim.Int#)
                               (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                             case w1 of ds7 { DEFAULT ->
                             case GHC.Prim.tagToEnum#
                                    @ GHC.Types.Bool
                                    (GHC.Prim.>=# ww4 ww1) of wild {
                               GHC.Types.False
                               -> case GHC.Prim.writeArray#
                                         @ (Control.Monad.Primitive.PrimState
                                              (GHC.ST.ST GHC.Prim.RealWorld))
                                         @ a
                                         ipv1
                                         ww3
                                         (case w of wild1 { GHC.Types.I# x ->
                                          let {
                                            file :: GHC.Prim.Addr# = "./Data/Vector/Generic.hs"#
                                          } in
                                          case GHC.Prim.indexArray#
                                                 @ (Data.Vector.Vector a)
                                                 ww2
                                                 (GHC.Prim.+# ww ww4) of ds8 { Unit# ipv2 ->
                                          case GHC.Prim.tagToEnum#
                                                 @ GHC.Types.Bool
                                                 (GHC.Prim.>=# x 0#) of wild2 {
                                            GHC.Types.False
                                            -> case ipv2 of v2 { Data.Vector.Vector ipv3 ipv4 ipv5 ->
                                               Lib.getcol1 @ a ipv4 x file }
                                            GHC.Types.True
                                            -> case ipv2 of v2 { Data.Vector.Vector ipv3 ipv4 ipv5 ->
                                               case GHC.Prim.tagToEnum#
                                                      @ GHC.Types.Bool
                                                      (GHC.Prim.<# x ipv4) of wild3 {
                                                 GHC.Types.False -> Lib.getcol1 @ a ipv4 x file
                                                 GHC.Types.True
                                                 -> case GHC.Prim.indexArray#
                                                           @ a
                                                           ipv5
                                                           (GHC.Prim.+#
                                                              ipv3
                                                              x) of ds9 { Unit# ipv6 ->
                                                    ipv6 } } } } } })
                                         w2
                                           `cast`
                                         (Nth:2
                                              (Nth:2
                                                   (Trans
                                                        (<GHC.ST.STRep GHC.Prim.RealWorld ()>_R
                                                         ->_R Sym (GHC.ST.N:ST[0]
                                                                       <GHC.Prim.RealWorld>_N
                                                                       <()>_R))
                                                        (((GHC.Prim.State#
                                                             (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                       <GHC.Prim.RealWorld>_N)))_R
                                                          ->_R ((#,#)
                                                                  <'GHC.Types.TupleRep '[]>_R
                                                                  <'GHC.Types.LiftedRep>_R
                                                                  (GHC.Prim.State#
                                                                     (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                               <GHC.Prim.RealWorld>_N)))_R
                                                                  <()>_R)_R)
                                                         ->_R <GHC.ST.ST
                                                                 GHC.Prim.RealWorld
                                                                 ()>_R)))) of s'# { DEFAULT ->
                                  $wfoldlM'_loop
                                    GHC.Types.SPEC
                                    (GHC.Prim.+# ww3 1#)
                                    (GHC.Prim.+# ww4 1#)
                                    s'#
                                      `cast`
                                    (Nth:2
                                         (Nth:3
                                              (Nth:2
                                                   (Trans
                                                        (((GHC.Prim.State#
                                                             (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                  <GHC.Prim.RealWorld>_N))_R
                                                          ->_R ((#,#)
                                                                  <'GHC.Types.TupleRep '[]>_R
                                                                  <'GHC.Types.LiftedRep>_R
                                                                  (GHC.Prim.State#
                                                                     (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                          <GHC.Prim.RealWorld>_N))_R
                                                                  <()>_R)_R)
                                                         ->_R <GHC.ST.ST GHC.Prim.RealWorld ()>_R)
                                                        (<GHC.ST.STRep GHC.Prim.RealWorld ()>_R
                                                         ->_R GHC.ST.N:ST[0]
                                                                  <GHC.Prim.RealWorld>_N
                                                                  <()>_R))))) }
                               GHC.Types.True
                               -> case GHC.Prim.unsafeFreezeArray#
                                         @ (Control.Monad.Primitive.PrimState
                                              (GHC.ST.ST GHC.Prim.RealWorld))
                                         @ a
                                         ipv1
                                         w2
                                           `cast`
                                         (Nth:2
                                              (Nth:2
                                                   (Trans
                                                        (<GHC.ST.STRep
                                                            GHC.Prim.RealWorld
                                                            (Data.Primitive.Array.Array a)>_R
                                                         ->_R Sym (GHC.ST.N:ST[0]
                                                                       <GHC.Prim.RealWorld>_N
                                                                       <Data.Primitive.Array.Array
                                                                          a>_R))
                                                        (((GHC.Prim.State#
                                                             (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                       <GHC.Prim.RealWorld>_N)))_R
                                                          ->_R ((#,#)
                                                                  <'GHC.Types.TupleRep '[]>_R
                                                                  <'GHC.Types.LiftedRep>_R
                                                                  (GHC.Prim.State#
                                                                     (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                               <GHC.Prim.RealWorld>_N)))_R
                                                                  <Data.Primitive.Array.Array
                                                                     a>_R)_R)
                                                         ->_R <GHC.ST.ST
                                                                 GHC.Prim.RealWorld
                                                                 (Data.Primitive.Array.Array
                                                                    a)>_R)))) of ds8 { (#,#) ipv2 ipv3 ->
                                  (# ipv2
                                       `cast`
                                     (Nth:2
                                          (Nth:3
                                               (Nth:2
                                                    (Trans
                                                         (((GHC.Prim.State#
                                                              (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                   <GHC.Prim.RealWorld>_N))_R
                                                           ->_R ((#,#)
                                                                   <'GHC.Types.TupleRep '[]>_R
                                                                   <'GHC.Types.LiftedRep>_R
                                                                   (GHC.Prim.State#
                                                                      (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                           <GHC.Prim.RealWorld>_N))_R
                                                                   <Data.Primitive.Array.Array
                                                                      a>_R)_R)
                                                          ->_R <GHC.ST.ST
                                                                  GHC.Prim.RealWorld
                                                                  (Data.Primitive.Array.Array a)>_R)
                                                         (<GHC.ST.STRep
                                                             GHC.Prim.RealWorld
                                                             (Data.Primitive.Array.Array a)>_R
                                                          ->_R GHC.ST.N:ST[0]
                                                                   <GHC.Prim.RealWorld>_N
                                                                   <Data.Primitive.Array.Array
                                                                      a>_R))))),
                                     Data.Vector.Vector @ a 0# ww3 ipv3 #) } } }
                         } in
                         $wfoldlM'_loop
                           GHC.Types.SPEC
                           0#
                           0#
                           ipv
                             `cast`
                           (Nth:2
                                (Nth:3
                                     (Nth:2
                                          (Trans
                                               (((GHC.Prim.State#
                                                    (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                         <GHC.Prim.RealWorld>_N))_R
                                                 ->_R ((#,#)
                                                         <'GHC.Types.TupleRep '[]>_R
                                                         <'GHC.Types.LiftedRep>_R
                                                         (GHC.Prim.State#
                                                            (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                 <GHC.Prim.RealWorld>_N))_R
                                                         <Data.Primitive.Array.MutableArray
                                                            (Control.Monad.Primitive.PrimState
                                                               (GHC.ST.ST GHC.Prim.RealWorld))
                                                            a>_R)_R)
                                                ->_R <GHC.ST.ST
                                                        GHC.Prim.RealWorld
                                                        (Data.Primitive.Array.MutableArray
                                                           (Control.Monad.Primitive.PrimState
                                                              (GHC.ST.ST GHC.Prim.RealWorld))
                                                           a)>_R)
                                               (<GHC.ST.STRep
                                                   GHC.Prim.RealWorld
                                                   (Data.Primitive.Array.MutableArray
                                                      (Control.Monad.Primitive.PrimState
                                                         (GHC.ST.ST GHC.Prim.RealWorld))
                                                      a)>_R
                                                ->_R GHC.ST.N:ST[0]
                                                         <GHC.Prim.RealWorld>_N
                                                         <Data.Primitive.Array.MutableArray
                                                            (Control.Monad.Primitive.PrimState
                                                               (GHC.ST.ST GHC.Prim.RealWorld))
                                                            a>_R))))) }) of ds6 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
b33a289c5680705785c0f78ebff9e522
  $wgl ::
    [Data.ByteString.Internal.ByteString]
    -> GHC.Prim.Int# -> GHC.Prim.Int#
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,U>, Inline: [0] -}
0d0830738357496617d016a2a3309a6d
  $wgo ::
    [Lib.AlignedRead] -> (# [Lib.AlignedRead], [Lib.AlignedRead] #)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>, Inline: [0] -}
e73d53683d9419d03a1911e6415c8f1f
  $wgo1 ::
    [Lib.AlignedRead] -> (# [Lib.AlignedRead], [Lib.AlignedRead] #)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>, Inline: [0] -}
a31191582ff3be0494e830a108ae0d0a
  $wgo2 ::
    [Lib.AlignedRead] -> (# [Lib.AlignedRead], [Lib.AlignedRead] #)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>, Inline: [0] -}
a3fe38bc3a8cb4540a3cc1b114be7092
  $wgo3 ::
    GHC.Prim.Int#
    -> Data.Set.Internal.Set Lib.UChr
    -> [Lib.UChr]
    -> Data.Set.Internal.Set Lib.UChr
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
4ce6f6536f2820913f169ab33b84e1df
  $wgo4 :: [Lib.UChr] -> GHC.Prim.Int# -> GHC.Prim.Int#
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,U>, Inline: [0] -}
109a8f07b15bb1abfca8683d5b2e9ad1
  $wgo5 ::
    GHC.Prim.Addr#
    -> GHC.Prim.Addr#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 3, HasNoCafRefs, Strictness: <S,U><S,U><S,U>,
     Inline: [0] -}
600eda41ff12aff6bd0a5b04bab03174
  $wgo6 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         ()
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
3f83e88532964acb08d5ff153c09a809
  $wgo7 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         ()
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
1ee58e7c7a300da6dde370b1ff984778
  $whdralnparser ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.AlignedRead
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.AlignedRead
                            r) ->
                 Lib.$wsamhdrparser
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w
                   w1
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (a1 :: Data.ByteString.Internal.ByteString)[OneShot] ->
                    case t'
                           `cast`
                         (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww7 { Data.Attoparsec.ByteString.Buffer.Buf ww8 ww9 ww10 ww11 ww12 ww13 ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww14 { GHC.Types.I# ww15 ->
                    Lib.$wmany_v1
                      @ r
                      ww8
                      ww9
                      ww10
                      ww11
                      ww12
                      ww13
                      ww15
                      more'
                      (\ (t'1 :: Data.Attoparsec.Internal.Types.State
                                   Data.ByteString.Internal.ByteString)
                         (pos'1 :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                         (more'1 :: Data.Attoparsec.Internal.Types.More)[OneShot]
                         (a3 :: [Data.ByteString.Internal.ByteString])[OneShot] ->
                       case pos'1
                              `cast`
                            (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                       w2
                         t'1
                         nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                         more'1
                         (Lib.AlignedRead
                            Lib.hdralnparser2
                            Lib.$fShowAlignedRead2
                            Lib.NONE
                            Lib.defaultBed2
                            Lib.defaultBed2
                            Lib.defaultBed2
                            Lib.addtrimtag5
                            Lib.addtrimtag5
                            Lib.defaultAlignment_v
                            Lib.defaultAlignment_v
                            Lib.addtrimtag5
                            Lib.defaultBed2
                            Lib.defaultBed2
                            Lib.defaultAlignment1
                            Lib.defaultAlignment1
                            Lib.defaultAlignment1
                            Lib.defaultAlignment1
                            GHC.Types.False
                            GHC.Types.False
                            (GHC.Types.[] @ Lib.BedRecord)
                            (GHC.Types.[] @ Lib.BedRecord)
                            GHC.Types.False
                            GHC.Types.False
                            Lib.defaultBed2
                            Lib.defaultBed2
                            (GHC.Types.: @ Data.ByteString.Internal.ByteString a1 a3)
                            GHC.Types.True
                            Lib.defaultAlignment1
                            Lib.defaultAlignment1
                            Lib.defaultBed
                            GHC.Types.False) }) } })) -}
7500b09e02266ea2b40a5ad248f45f97
  $whdralnparserEOL ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.PairedAln
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.PairedAln
                            r) ->
                 Lib.$wsamhdrparserEOL
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w
                   w1
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (a1 :: Data.ByteString.Internal.ByteString)[OneShot] ->
                    case t'
                           `cast`
                         (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww7 { Data.Attoparsec.ByteString.Buffer.Buf ww8 ww9 ww10 ww11 ww12 ww13 ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww14 { GHC.Types.I# ww15 ->
                    Lib.$wmany_v2
                      @ r
                      ww8
                      ww9
                      ww10
                      ww11
                      ww12
                      ww13
                      ww15
                      more'
                      (\ (t'1 :: Data.Attoparsec.Internal.Types.State
                                   Data.ByteString.Internal.ByteString)
                         (pos'1 :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                         (more'1 :: Data.Attoparsec.Internal.Types.More)[OneShot]
                         (a3 :: [Data.ByteString.Internal.ByteString])[OneShot] ->
                       case pos'1
                              `cast`
                            (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                       w2
                         t'1
                         nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                         more'1
                         (Lib.PairedAln
                            (Lib.AlignedRead
                               Lib.hdralnparser2
                               Lib.$fShowAlignedRead2
                               Lib.NONE
                               Lib.defaultBed2
                               Lib.defaultBed2
                               Lib.defaultBed2
                               Lib.addtrimtag5
                               Lib.addtrimtag5
                               Lib.defaultAlignment_v
                               Lib.defaultAlignment_v
                               Lib.addtrimtag5
                               Lib.defaultBed2
                               Lib.defaultBed2
                               Lib.defaultAlignment1
                               Lib.defaultAlignment1
                               Lib.defaultAlignment1
                               Lib.defaultAlignment1
                               GHC.Types.False
                               GHC.Types.False
                               (GHC.Types.[] @ Lib.BedRecord)
                               (GHC.Types.[] @ Lib.BedRecord)
                               GHC.Types.False
                               GHC.Types.False
                               Lib.defaultBed2
                               Lib.defaultBed2
                               (GHC.Types.: @ Data.ByteString.Internal.ByteString a1 a3)
                               GHC.Types.True
                               Lib.defaultAlignment1
                               Lib.defaultAlignment1
                               Lib.defaultBed
                               GHC.Types.False)
                            Lib.defaultAlignment
                            (GHC.Types.[] @ Lib.AlignedRead)
                            (GHC.Types.[] @ Lib.AlignedRead)) }) } })) -}
8ff2cbbc265e2f0fb7f95e5bc5f6f250
  $whdralnparserEOL' ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.AlignedRead
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.AlignedRead
                            r) ->
                 Lib.$wsamhdrparserEOL
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w
                   w1
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (a1 :: Data.ByteString.Internal.ByteString)[OneShot] ->
                    case t'
                           `cast`
                         (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww7 { Data.Attoparsec.ByteString.Buffer.Buf ww8 ww9 ww10 ww11 ww12 ww13 ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww14 { GHC.Types.I# ww15 ->
                    Lib.$wmany_v3
                      @ r
                      ww8
                      ww9
                      ww10
                      ww11
                      ww12
                      ww13
                      ww15
                      more'
                      (\ (t'1 :: Data.Attoparsec.Internal.Types.State
                                   Data.ByteString.Internal.ByteString)
                         (pos'1 :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                         (more'1 :: Data.Attoparsec.Internal.Types.More)[OneShot]
                         (a3 :: [Data.ByteString.Internal.ByteString])[OneShot] ->
                       case pos'1
                              `cast`
                            (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                       w2
                         t'1
                         nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                         more'1
                         (Lib.AlignedRead
                            Lib.hdralnparser2
                            Lib.$fShowAlignedRead2
                            Lib.NONE
                            Lib.defaultBed2
                            Lib.defaultBed2
                            Lib.defaultBed2
                            Lib.addtrimtag5
                            Lib.addtrimtag5
                            Lib.defaultAlignment_v
                            Lib.defaultAlignment_v
                            Lib.addtrimtag5
                            Lib.defaultBed2
                            Lib.defaultBed2
                            Lib.defaultAlignment1
                            Lib.defaultAlignment1
                            Lib.defaultAlignment1
                            Lib.defaultAlignment1
                            GHC.Types.False
                            GHC.Types.False
                            (GHC.Types.[] @ Lib.BedRecord)
                            (GHC.Types.[] @ Lib.BedRecord)
                            GHC.Types.False
                            GHC.Types.False
                            Lib.defaultBed2
                            Lib.defaultBed2
                            (GHC.Types.: @ Data.ByteString.Internal.ByteString a1 a3)
                            GHC.Types.True
                            Lib.defaultAlignment1
                            Lib.defaultAlignment1
                            Lib.defaultBed
                            GHC.Types.False) }) } })) -}
8d80c59e9c2e650d73c562a89063c288
  $whdrchromp ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.UChr
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <L,U><L,U><L,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
423ea1202ccb43655668b0b1ec09d70a
  $witypep ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (ww :: GHC.Prim.Int#)
                   (w1 :: Data.Attoparsec.Internal.Types.More)
                   (w2 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w3 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 Lib.itypep_m
                   `cast`
                 (Data.Attoparsec.Internal.Types.N:Parser[0]
                      <Data.ByteString.Internal.ByteString>_N
                      <Data.ByteString.Internal.ByteString>_R)
                   @ r
                   w
                   (GHC.Types.I# ww)
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                   w1
                   w2
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)
                      (more' :: Data.Attoparsec.Internal.Types.More)
                      (a1 :: Data.ByteString.Internal.ByteString) ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                    w3
                      t'
                      nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                      more'
                      Lib.itypep_v })) -}
75852e4b98fe52aa241fcb14e18c8564
  $wix ::
    GHC.Prim.Int#
    -> GHC.Prim.Int# -> GHC.Prim.Int# -> GHC.Prim.Array# a -> a
  {- Arity: 4, Strictness: <S,U><S,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ @ a
                   (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Array# a) ->
                 let {
                   file :: GHC.Prim.Addr# = "./Data/Vector/Generic.hs"#
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 0#) of wild1 {
                   GHC.Types.False -> Lib.getcol1 @ a ww2 ww file
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<# ww ww2) of wild3 {
                        GHC.Types.False -> Lib.getcol1 @ a ww2 ww file
                        GHC.Types.True
                        -> case GHC.Prim.indexArray#
                                  @ a
                                  ww3
                                  (GHC.Prim.+# ww1 ww) of ds6 { Unit# ipv ->
                           ipv } } }) -}
f8b5ac2d95ae1a12887efdca28702d42
  $wloop ::
    GHC.Integer.Type.Integer
    -> forall b.
       (GHC.Integer.Type.Integer
        -> Data.Conduit.Internal.Pipe.Pipe
             Lib.AlignedRead
             Lib.AlignedRead
             Data.Void.Void
             ()
             (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
             b)
       -> (# Lib.AlignedRead
             -> Data.Conduit.Internal.Pipe.Pipe
                  Lib.AlignedRead
                  Lib.AlignedRead
                  Data.Void.Void
                  ()
                  (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  b,
             ()
             -> Data.Conduit.Internal.Pipe.Pipe
                  Lib.AlignedRead
                  Lib.AlignedRead
                  Data.Void.Void
                  ()
                  (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  b #)
  {- Arity: 2, Strictness: <S,1*U><L,C(U)>, Inline: [0] -}
c123f4c36c684b7a73519361836b8d26
  $wloop1 ::
    GHC.Integer.Type.Integer
    -> forall b.
       (GHC.Integer.Type.Integer
        -> Data.Conduit.Internal.Pipe.Pipe
             Lib.AlignedRead
             Lib.AlignedRead
             Data.Void.Void
             ()
             (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
             b)
       -> (# Lib.AlignedRead
             -> Data.Conduit.Internal.Pipe.Pipe
                  Lib.AlignedRead
                  Lib.AlignedRead
                  Data.Void.Void
                  ()
                  (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  b,
             ()
             -> Data.Conduit.Internal.Pipe.Pipe
                  Lib.AlignedRead
                  Lib.AlignedRead
                  Data.Void.Void
                  ()
                  (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  b #)
  {- Arity: 2, Strictness: <S,1*U><L,C(U)>, Inline: [0] -}
59b85f3b4ae97ad5281c5fbe3b79f176
  $wloop2 ::
    GHC.Integer.Type.Integer
    -> forall b.
       (GHC.Integer.Type.Integer
        -> Data.Conduit.Internal.Pipe.Pipe
             Lib.AlignedRead
             Lib.AlignedRead
             Data.Void.Void
             ()
             (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
             b)
       -> (# Lib.AlignedRead
             -> Data.Conduit.Internal.Pipe.Pipe
                  Lib.AlignedRead
                  Lib.AlignedRead
                  Data.Void.Void
                  ()
                  (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  b,
             ()
             -> Data.Conduit.Internal.Pipe.Pipe
                  Lib.AlignedRead
                  Lib.AlignedRead
                  Data.Void.Void
                  ()
                  (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  b #)
  {- Arity: 2, Strictness: <S,1*U><L,C(U)>, Inline: [0] -}
72f14e6fcdc92b42047548db1c03b13e
  $wlvl :: GHC.Prim.Int# -> Lib.ChromNameFormat
  {- Arity: 1, Strictness: <B,U>x, Inline: [0] -}
3fd0d1813507d3804368ee979449d71a
  $wlvl1 :: GHC.Prim.Int# -> Lib.UChr
  {- Arity: 1, Strictness: <B,U>x, Inline: [0] -}
dda652dbc8e92ffac1dec0f1343d2c6b
  $wlvl2 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Types.Bool
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.countDs2 of wild1 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim./=# ww3 dt7) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqAddr# ww dt4) of wild3 {
                        GHC.Types.False
                        -> case Data.ByteString.Internal.$wcompareBytes
                                  ww
                                  ww1
                                  ww2
                                  ww3
                                  dt4
                                  dt5
                                  dt6
                                  dt7 of wild4 {
                             DEFAULT -> GHC.Types.False GHC.Types.EQ -> GHC.Types.True }
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# ww2 dt6) of wild4 {
                             GHC.Types.False
                             -> case Data.ByteString.Internal.$wcompareBytes
                                       ww
                                       ww1
                                       ww2
                                       ww3
                                       dt4
                                       dt5
                                       dt6
                                       dt7 of wild5 {
                                  DEFAULT -> GHC.Types.False GHC.Types.EQ -> GHC.Types.True }
                             GHC.Types.True -> GHC.Types.True } }
                   GHC.Types.True -> GHC.Types.False } }) -}
51927f6ba2ca18c906205f98b564db94
  $wlvl3 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Types.Bool
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.countDs2 of wild1 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim./=# ww3 dt7) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqAddr# ww dt4) of wild3 {
                        GHC.Types.False
                        -> case Data.ByteString.Internal.$wcompareBytes
                                  ww
                                  ww1
                                  ww2
                                  ww3
                                  dt4
                                  dt5
                                  dt6
                                  dt7 of wild4 {
                             DEFAULT -> GHC.Types.True GHC.Types.EQ -> GHC.Types.False }
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# ww2 dt6) of wild4 {
                             GHC.Types.False
                             -> case Data.ByteString.Internal.$wcompareBytes
                                       ww
                                       ww1
                                       ww2
                                       ww3
                                       dt4
                                       dt5
                                       dt6
                                       dt7 of wild5 {
                                  DEFAULT -> GHC.Types.True GHC.Types.EQ -> GHC.Types.False }
                             GHC.Types.True -> GHC.Types.False } }
                   GHC.Types.True -> GHC.Types.True } }) -}
b497a97d060cf2b07f6d0678a271cc70
  $wlvl4 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Types.Bool
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.countDs2 of wild1 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim./=# ww3 dt7) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqAddr# ww dt4) of wild3 {
                        GHC.Types.False
                        -> case Data.ByteString.Internal.$wcompareBytes
                                  ww
                                  ww1
                                  ww2
                                  ww3
                                  dt4
                                  dt5
                                  dt6
                                  dt7 of wild4 {
                             DEFAULT -> GHC.Types.True GHC.Types.EQ -> GHC.Types.False }
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# ww2 dt6) of wild4 {
                             GHC.Types.False
                             -> case Data.ByteString.Internal.$wcompareBytes
                                       ww
                                       ww1
                                       ww2
                                       ww3
                                       dt4
                                       dt5
                                       dt6
                                       dt7 of wild5 {
                                  DEFAULT -> GHC.Types.True GHC.Types.EQ -> GHC.Types.False }
                             GHC.Types.True -> GHC.Types.False } }
                   GHC.Types.True -> GHC.Types.True } }) -}
51d5a7a19335d484c227d8da7996ced4
  $wlvl5 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.AlignedRead
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.AlignedRead
                            r) ->
                 Lib.$whdralnparser
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                      (_pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (_ctx :: [GHC.Base.String])[OneShot]
                      (_msg :: GHC.Base.String)[OneShot] ->
                    case t'
                           `cast`
                         (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww7 { Data.Attoparsec.ByteString.Buffer.Buf ww8 ww9 ww10 ww11 ww12 ww13 ->
                    Lib.$walnparser @ r ww8 ww9 ww10 ww11 ww12 ww13 ww6 more' w1 w2 })
                   w2) -}
be8ac46d09ab64c7725652813dd4ad8d
  $wlvl6 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Types.Bool
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.countDs2 of wild1 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim./=# ww3 dt7) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqAddr# ww dt4) of wild3 {
                        GHC.Types.False
                        -> case Data.ByteString.Internal.$wcompareBytes
                                  ww
                                  ww1
                                  ww2
                                  ww3
                                  dt4
                                  dt5
                                  dt6
                                  dt7 of wild4 {
                             DEFAULT -> GHC.Types.True GHC.Types.EQ -> GHC.Types.False }
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# ww2 dt6) of wild4 {
                             GHC.Types.False
                             -> case Data.ByteString.Internal.$wcompareBytes
                                       ww
                                       ww1
                                       ww2
                                       ww3
                                       dt4
                                       dt5
                                       dt6
                                       dt7 of wild5 {
                                  DEFAULT -> GHC.Types.True GHC.Types.EQ -> GHC.Types.False }
                             GHC.Types.True -> GHC.Types.False } }
                   GHC.Types.True -> GHC.Types.True } }) -}
1120a94d42373fff91b6d587f008c6b7
  $wmIDp ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <L,U><L,U><L,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
81dfad48a4d27d0ec2bd0c1930d5a833
  $wmakeTrimmedUpdates ::
    Lib.PairedAln
    -> (# Lib.AlignedRead, Lib.AlignedRead, [Lib.AlignedRead],
          [Lib.AlignedRead] #)
  {- Arity: 1,
     Strictness: <L,1*U(U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)>,
     Inline: [0],
     Unfolding: (\ (w :: Lib.PairedAln) ->
                 let {
                   p :: Lib.PairedAln
                   = Lib.updateZeroTrimdPairFields
                       (Lib.updateZeroTrimdPairFlags (Lib.updateTrimdPairFields w))
                 } in
                 let {
                   ww :: [Lib.AlignedRead]
                   = case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                     GHC.Base.map
                       @ Lib.AlignedRead
                       @ Lib.AlignedRead
                       Lib.updateTrimdAlnFields
                       ds9 }
                 } in
                 let {
                   ww1 :: [Lib.AlignedRead]
                   = case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                     GHC.Base.map
                       @ Lib.AlignedRead
                       @ Lib.AlignedRead
                       Lib.updateTrimdAlnFields
                       ds8 }
                 } in
                 let {
                   ww2 :: Lib.AlignedRead
                   = case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                     Lib.updateTrimdAlnFields ds7 }
                 } in
                 let {
                   ww3 :: Lib.AlignedRead
                   = case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                     Lib.updateTrimdAlnFields ds6 }
                 } in
                 case Lib.checkInsertSize
                        Lib.makeTrimmedUpdates2
                        Lib.makeTrimmedUpdates1
                        (Lib.PairedAln ww3 ww2 ww1 ww) of wild {
                   GHC.Types.False -> (# ww3, ww2, ww1, ww #)
                   GHC.Types.True
                   -> case ww3 of wild1 { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                      case ds24 of wild2 {
                        GHC.Types.False -> (# wild1, ww2, ww1, ww #)
                        GHC.Types.True
                        -> case ww2 of wild3 { Lib.AlignedRead ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ->
                           case ds55 of wild4 {
                             GHC.Types.False -> (# wild1, wild3, ww1, ww #)
                             GHC.Types.True
                             -> (# Lib.AlignedRead
                                     ds6
                                     (case ds7 of wild5 { GHC.Types.I# x# ->
                                      GHC.Types.I# (GHC.Prim.orI# x# 2#) })
                                     ds8
                                     ds9
                                     ds10
                                     ds11
                                     ds12
                                     ds13
                                     ds14
                                     ds15
                                     ds16
                                     ds17
                                     ds18
                                     ds19
                                     ds20
                                     ds21
                                     ds22
                                     ds23
                                     GHC.Types.True
                                     ds25
                                     ds26
                                     ds27
                                     ds28
                                     ds29
                                     ds30
                                     ds31
                                     ds32
                                     ds33
                                     ds34
                                     ds35
                                     ds36,
                                   Lib.AlignedRead
                                     ds37
                                     (case ds38 of wild5 { GHC.Types.I# x# ->
                                      GHC.Types.I# (GHC.Prim.orI# x# 2#) })
                                     ds39
                                     ds40
                                     ds41
                                     ds42
                                     ds43
                                     ds44
                                     ds45
                                     ds46
                                     ds47
                                     ds48
                                     ds49
                                     ds50
                                     ds51
                                     ds52
                                     ds53
                                     ds54
                                     GHC.Types.True
                                     ds56
                                     ds57
                                     ds58
                                     ds59
                                     ds60
                                     ds61
                                     ds62
                                     ds63
                                     ds64
                                     ds65
                                     ds66
                                     ds67,
                                   ww1, ww #) } } } } }) -}
a1e0dd594a5553c639543fd27308f0cd
  $wmakechrbedmap ::
    GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Array# Lib.BedRecord
    -> Data.Map.Internal.Map
         Lib.UChr (Data.IntMap.Internal.IntMap Lib.BedRecord)
  {- Arity: 3, Strictness: <L,U><S,U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Array# Lib.BedRecord) ->
                 letrec {
                   $wgo45 :: GHC.Prim.Int# -> [Lib.BedRecord]
                     {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                   = \ (ww3 :: GHC.Prim.Int#) ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.>=# ww3 ww1) of wild {
                       GHC.Types.False
                       -> case GHC.Prim.indexArray#
                                 @ Lib.BedRecord
                                 ww2
                                 (GHC.Prim.+# ww ww3) of ds6 { Unit# ipv ->
                          GHC.Types.: @ Lib.BedRecord ipv ($wgo45 (GHC.Prim.+# ww3 1#)) }
                       GHC.Types.True -> GHC.Types.[] @ Lib.BedRecord }
                 } in
                 let {
                   bbychr :: [[Lib.BedRecord]]
                   = Data.OldList.groupBy
                       @ Lib.BedRecord
                       Lib.createprimerbedmaps3
                       ($wgo45 0#)
                 } in
                 Lib.$sfromList
                   @ (Data.IntMap.Internal.IntMap Lib.BedRecord)
                   (Lib.createprimerbedmaps_go
                      bbychr
                      (GHC.Base.map
                         @ [Lib.BedRecord]
                         @ (Data.IntMap.Internal.IntMap Lib.BedRecord)
                         Lib.makebedmap
                         bbychr))) -}
42a11c144857aaeeb3d19a6141cd761e
  $wmakeprimertups ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> [(GHC.Types.Int, Lib.BedRecord)]
  {- Arity: 4, Strictness: <L,U><S,U><S,U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: GHC.Integer.Type.Integer)
                   (ww3 :: Data.ByteString.Internal.ByteString) ->
                 let {
                   pe :: GHC.Integer.Type.Integer
                   = GHC.Integer.Type.plusInteger ww2 Lib.makeprimertups1
                 } in
                 let {
                   ps :: GHC.Integer.Type.Integer
                   = GHC.Integer.Type.minusInteger ww1 Lib.makeprimertups1
                 } in
                 letrec {
                   go20 :: GHC.Integer.Type.Integer
                           -> [Lib.BedRecord] -> [(GHC.Types.Int, Lib.BedRecord)]
                     {- Arity: 2, Strictness: <S,U><L,1*U> -}
                   = \ (x :: GHC.Integer.Type.Integer) (eta :: [Lib.BedRecord]) ->
                     case GHC.Integer.Type.gtInteger# x pe of wild { DEFAULT ->
                     case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild of wild1 {
                       GHC.Types.False
                       -> case eta of wild2 {
                            [] -> GHC.Types.[] @ (GHC.Types.Int, Lib.BedRecord)
                            : y ys
                            -> GHC.Types.:
                                 @ (GHC.Types.Int, Lib.BedRecord)
                                 (case GHC.Integer.Type.integerToInt x of wild3 { DEFAULT ->
                                  GHC.Types.I# wild3 },
                                  y)
                                 (go20 (GHC.Integer.Type.plusInteger x Lib.expandcigar1) ys) }
                       GHC.Types.True -> GHC.Types.[] @ (GHC.Types.Int, Lib.BedRecord) } }
                 } in
                 go20
                   ps
                   (case GHC.Integer.Type.integerToInt
                           (GHC.Integer.Type.plusInteger
                              (GHC.Integer.Type.minusInteger pe ps)
                              Lib.expandcigar1) of wild { DEFAULT ->
                    case GHC.Prim.tagToEnum#
                           @ GHC.Types.Bool
                           (GHC.Prim.<# 0# wild) of wild1 {
                      GHC.Types.False -> GHC.Types.[] @ Lib.BedRecord
                      GHC.Types.True
                      -> let {
                           b :: Lib.BedRecord = Lib.BedRecord ww ww1 ww2 ww3
                         } in
                         let {
                           lvl1008 :: [Lib.BedRecord]
                           = GHC.Types.: @ Lib.BedRecord b (GHC.Types.[] @ Lib.BedRecord)
                         } in
                         letrec {
                           $wxs :: GHC.Prim.Int# -> [Lib.BedRecord]
                             {- Arity: 1, Strictness: <S,1*U>, Inline: [0] -}
                           = \ (ww4 :: GHC.Prim.Int#) ->
                             case ww4 of ds6 {
                               DEFAULT
                               -> GHC.Types.: @ Lib.BedRecord b ($wxs (GHC.Prim.-# ds6 1#))
                               1# -> lvl1008 }
                         } in
                         $wxs wild } })) -}
db71d8caf81c49d14fd48000782910eb
  $wmany_v ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
608df9e520981d153b5237b6e6d096d3
  $wmany_v1 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [Data.ByteString.Internal.ByteString]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
1745105beec53c10d053040264a75bf6
  $wmany_v2 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [Data.ByteString.Internal.ByteString]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
575bf4eb20f3d89d66c4ac6777e0517d
  $wmany_v3 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [Data.ByteString.Internal.ByteString]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
0936d1b3fcdb74032b300314e7b68dd0
  $wmany_v4 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [Lib.PairedAln]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
5db0638e086c80c31248c3d7279e6441
  $wmapcig ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> [(GHC.Integer.Type.Integer,
         Data.ByteString.Internal.ByteString)]
  {- Arity: 4, Strictness: <S,U><L,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.$wparseCigar
                        @ [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                        ww
                        ww1
                        ww2
                        ww3
                        ww3
                        0#
                        0#
                        Data.Attoparsec.Internal.Types.Complete
                        (Data.Attoparsec.ByteString.Internal.failK
                           @ [(GHC.Integer.Type.Integer,
                               Data.ByteString.Internal.ByteString)])
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [GHC.Base.String]
                               -> GHC.Base.String
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString
                                    [(GHC.Integer.Type.Integer,
                                      Data.ByteString.Internal.ByteString)]>_R)
                        (Data.Attoparsec.ByteString.Internal.successK
                           @ [(GHC.Integer.Type.Integer,
                               Data.ByteString.Internal.ByteString)])
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [(GHC.Integer.Type.Integer,
                                    Data.ByteString.Internal.ByteString)]
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString
                                    [(GHC.Integer.Type.Integer,
                                      Data.ByteString.Internal.ByteString)]>_R) of wild {
                   Data.Attoparsec.Internal.Types.Fail ds6 ds7 err
                   -> case ds7 of wild1 { DEFAULT ->
                      GHC.List.badHead
                        @ [(GHC.Integer.Type.Integer,
                            Data.ByteString.Internal.ByteString)] }
                   Data.Attoparsec.Internal.Types.Partial ipv
                   -> case Lib.checkCigarSeqlen1
                      ret_ty [(GHC.Integer.Type.Integer,
                               Data.ByteString.Internal.ByteString)]
                      of {}
                   Data.Attoparsec.Internal.Types.Done ds6 a1 -> a1 }) -}
8b1d6676e2f7409d2725965672401061
  $wmasterparser ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.MasterRecord
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
11703e5f9773808cdc257553d1302ada
  $wnoclip ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Types.Bool
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.noclip2 of wild1 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                 let {
                   $j :: GHC.Types.Bool <join 0>
                   = case Lib.noclip1 of wild2 { Data.ByteString.Internal.PS dt1 dt2 dt3 dt10 ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim./=# ww3 dt10) of wild3 {
                       GHC.Types.False
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.eqAddr# ww dt1) of wild4 {
                            GHC.Types.False
                            -> case Data.ByteString.Internal.$wcompareBytes
                                      ww
                                      ww1
                                      ww2
                                      ww3
                                      dt1
                                      dt2
                                      dt3
                                      dt10 of wild5 {
                                 DEFAULT -> GHC.Types.True GHC.Types.EQ -> GHC.Types.False }
                            GHC.Types.True
                            -> case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.==# ww2 dt3) of wild5 {
                                 GHC.Types.False
                                 -> case Data.ByteString.Internal.$wcompareBytes
                                           ww
                                           ww1
                                           ww2
                                           ww3
                                           dt1
                                           dt2
                                           dt3
                                           dt10 of wild6 {
                                      DEFAULT -> GHC.Types.True GHC.Types.EQ -> GHC.Types.False }
                                 GHC.Types.True -> GHC.Types.False } }
                       GHC.Types.True -> GHC.Types.True } }
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim./=# ww3 dt7) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqAddr# ww dt4) of wild3 {
                        GHC.Types.False
                        -> case Data.ByteString.Internal.$wcompareBytes
                                  ww
                                  ww1
                                  ww2
                                  ww3
                                  dt4
                                  dt5
                                  dt6
                                  dt7 of wild4 {
                             DEFAULT -> $j GHC.Types.EQ -> GHC.Types.False }
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# ww2 dt6) of wild4 {
                             GHC.Types.False
                             -> case Data.ByteString.Internal.$wcompareBytes
                                       ww
                                       ww1
                                       ww2
                                       ww3
                                       dt4
                                       dt5
                                       dt6
                                       dt7 of wild5 {
                                  DEFAULT -> $j GHC.Types.EQ -> GHC.Types.False }
                             GHC.Types.True -> GHC.Types.False } }
                   GHC.Types.True -> $j } }) -}
01ad9ea138a1aecc3792a20cf27d3aff
  $wnohardclip ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Types.Bool
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.noclip2 of wild1 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim./=# ww3 dt7) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqAddr# ww dt4) of wild3 {
                        GHC.Types.False
                        -> case Data.ByteString.Internal.$wcompareBytes
                                  ww
                                  ww1
                                  ww2
                                  ww3
                                  dt4
                                  dt5
                                  dt6
                                  dt7 of wild4 {
                             DEFAULT -> GHC.Types.True GHC.Types.EQ -> GHC.Types.False }
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# ww2 dt6) of wild4 {
                             GHC.Types.False
                             -> case Data.ByteString.Internal.$wcompareBytes
                                       ww
                                       ww1
                                       ww2
                                       ww3
                                       dt4
                                       dt5
                                       dt6
                                       dt7 of wild5 {
                                  DEFAULT -> GHC.Types.True GHC.Types.EQ -> GHC.Types.False }
                             GHC.Types.True -> GHC.Types.False } }
                   GHC.Types.True -> GHC.Types.True } }) -}
7a0505be9fdd5a3001670f188e9e4ec7
  $wnomapCigToNomapRname ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Lib.UChr
    -> Lib.UChr
  {- Arity: 5, Strictness: <L,U><L,U><L,U><S,U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (w :: Lib.UChr) ->
                 case Lib.addtrimtag5 of wild1 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim./=# ww3 dt7) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqAddr# ww dt4) of wild3 {
                        GHC.Types.False
                        -> case Data.ByteString.Internal.$wcompareBytes
                                  ww
                                  ww1
                                  ww2
                                  ww3
                                  dt4
                                  dt5
                                  dt6
                                  dt7 of wild4 {
                             DEFAULT -> w GHC.Types.EQ -> Lib.NONE }
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# ww2 dt6) of wild4 {
                             GHC.Types.False
                             -> case Data.ByteString.Internal.$wcompareBytes
                                       ww
                                       ww1
                                       ww2
                                       ww3
                                       dt4
                                       dt5
                                       dt6
                                       dt7 of wild5 {
                                  DEFAULT -> w GHC.Types.EQ -> Lib.NONE }
                             GHC.Types.True -> Lib.NONE } }
                   GHC.Types.True -> w } }) -}
631edb12216c4be3f2d0086367f4c928
  $wnopadding ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Types.Bool
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.noclip2 of wild1 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                 let {
                   $j :: GHC.Types.Bool <join 0>
                   = case Lib.countDs2 of wild2 { Data.ByteString.Internal.PS dt1 dt2 dt3 dt10 ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim./=# ww3 dt10) of wild3 {
                       GHC.Types.False
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.eqAddr# ww dt1) of wild4 {
                            GHC.Types.False
                            -> case Data.ByteString.Internal.$wcompareBytes
                                      ww
                                      ww1
                                      ww2
                                      ww3
                                      dt1
                                      dt2
                                      dt3
                                      dt10 of wild5 {
                                 DEFAULT -> GHC.Types.True GHC.Types.EQ -> GHC.Types.False }
                            GHC.Types.True
                            -> case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.==# ww2 dt3) of wild5 {
                                 GHC.Types.False
                                 -> case Data.ByteString.Internal.$wcompareBytes
                                           ww
                                           ww1
                                           ww2
                                           ww3
                                           dt1
                                           dt2
                                           dt3
                                           dt10 of wild6 {
                                      DEFAULT -> GHC.Types.True GHC.Types.EQ -> GHC.Types.False }
                                 GHC.Types.True -> GHC.Types.False } }
                       GHC.Types.True -> GHC.Types.True } }
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim./=# ww3 dt7) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqAddr# ww dt4) of wild3 {
                        GHC.Types.False
                        -> case Data.ByteString.Internal.$wcompareBytes
                                  ww
                                  ww1
                                  ww2
                                  ww3
                                  dt4
                                  dt5
                                  dt6
                                  dt7 of wild4 {
                             DEFAULT -> $j GHC.Types.EQ -> GHC.Types.False }
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# ww2 dt6) of wild4 {
                             GHC.Types.False
                             -> case Data.ByteString.Internal.$wcompareBytes
                                       ww
                                       ww1
                                       ww2
                                       ww3
                                       dt4
                                       dt5
                                       dt6
                                       dt7 of wild5 {
                                  DEFAULT -> $j GHC.Types.EQ -> GHC.Types.False }
                             GHC.Types.True -> GHC.Types.False } }
                   GHC.Types.True -> $j } }) -}
62d0a49bbcd62845baf628b4b47ac5b3
  $woptasp ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
4b152bb6a77daeccb9679294cc222474
  $woptfieldp ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5, Strictness: <L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (ww :: GHC.Prim.Int#)
                   (w1 :: Data.Attoparsec.Internal.Types.More)
                   (w2 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w3 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 let {
                   pos1 :: GHC.Types.Int = GHC.Types.I# ww
                 } in
                 let {
                   lose :: Data.Attoparsec.Internal.Types.Failure
                             Data.ByteString.Internal.ByteString
                             (Data.Attoparsec.Internal.Types.State
                                Data.ByteString.Internal.ByteString)
                             r
                     {- Arity: 5, Strictness: <L,U><L,A><L,U><L,A><L,A>,
                        Unfolding: InlineRule (5, True, True)
                                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                                               Data.ByteString.Internal.ByteString)
                                      (_pos' :: Data.Attoparsec.Internal.Types.Pos)
                                      (more' :: Data.Attoparsec.Internal.Types.More)
                                      (_ctx :: [GHC.Base.String])
                                      (_msg :: GHC.Base.String) ->
                                    Lib.optfieldp2
                                      @ r
                                      t'
                                      pos1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                                      more'
                                      w2
                                      w3) -}
                   = \ (t' :: Data.Attoparsec.Internal.Types.State
                                Data.ByteString.Internal.ByteString)
                       (_pos' :: Data.Attoparsec.Internal.Types.Pos)
                       (more' :: Data.Attoparsec.Internal.Types.More)
                       (_ctx :: [GHC.Base.String])
                       (_msg :: GHC.Base.String) ->
                     Lib.$woptxsp @ r t' ww more' w2 w3
                 } in
                 Lib.$woptnmp
                   @ r
                   w
                   ww
                   w1
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                      (_pos' :: Data.Attoparsec.Internal.Types.Pos)
                      (more' :: Data.Attoparsec.Internal.Types.More)
                      (_ctx :: [GHC.Base.String])
                      (_msg :: GHC.Base.String) ->
                    Lib.$woptasp @ r t' ww more' lose w3)
                   w3) -}
dc6624dd525ce8ab0b154e861d01d91d
  $woptfieldpEOL ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         GHC.Types.Char
         r
    -> Data.Attoparsec.ByteString.Internal.Result r
  {- Arity: 10,
     Strictness: <L,U><L,U><L,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            GHC.Types.Char
                            r) ->
                 let {
                   $wsucc1 :: Data.Attoparsec.Internal.Types.State
                                Data.ByteString.Internal.ByteString
                              -> GHC.Prim.Int#
                              -> Data.Attoparsec.Internal.Types.More
                              -> GHC.Word.Word8
                              -> Data.Attoparsec.Internal.Types.IResult
                                   Data.ByteString.Internal.ByteString r
                     {- Arity: 4, Strictness: <L,U><L,U><L,U><L,1*U(U)>, Inline: [0] -}
                   = \ (w3 :: Data.Attoparsec.Internal.Types.State
                                Data.ByteString.Internal.ByteString)
                       (ww7 :: GHC.Prim.Int#)[OneShot]
                       (w4 :: Data.Attoparsec.Internal.Types.More)[OneShot]
                       (w5 :: GHC.Word.Word8)[OneShot] ->
                     let {
                       c2 :: GHC.Types.Char
                       = case w5 of wild { GHC.Word.W8# x# ->
                         GHC.Types.C# (GHC.Prim.chr# (GHC.Prim.word2Int# x#)) }
                     } in
                     case Data.Attoparsec.ByteString.FastSet.memberWord8
                            (case c2 of wild { GHC.Types.C# c# ->
                             GHC.Word.W8#
                               (GHC.Prim.narrow8Word# (GHC.Prim.int2Word# (GHC.Prim.ord# c#))) })
                            Lib.optfieldpEOL_ds of wild {
                       GHC.Types.False
                       -> w2
                            w3
                            (GHC.Types.I# (GHC.Prim.+# ww7 1#))
                              `cast`
                            (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                            w4
                            c2
                       GHC.Types.True
                       -> w1
                            w3
                            (GHC.Types.I# ww7)
                              `cast`
                            (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                            w4
                            (GHC.Types.[] @ GHC.Base.String)
                            Lib.optfieldpEOL4 }
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww3 (GHC.Prim.+# ww6 1#)) of wild1 {
                   GHC.Types.False
                   -> Data.Attoparsec.ByteString.Internal.$wensureSuspended
                        @ r
                        Lib.optfieldpEOL3
                        (Data.Attoparsec.ByteString.Buffer.Buf ww ww1 ww2 ww3 ww4 ww5)
                        ww6
                        w
                        w1
                          `cast`
                        (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [GHC.Base.String]
                               -> GHC.Base.String
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString r>_R)
                        (\ (t' :: Data.Attoparsec.ByteString.Buffer.Buffer)
                           (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                           (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                           (bs' :: Data.ByteString.Internal.ByteString)[OneShot] ->
                         case bs' of wild2 { Data.ByteString.Internal.PS dt7 dt8 dt9 dt10 ->
                         case GHC.Prim.readWord8OffAddr#
                                @ GHC.Prim.RealWorld
                                (GHC.Prim.plusAddr# dt7 dt9)
                                0#
                                GHC.Prim.realWorld# of ds6 { (#,#) ipv1 ipv2 ->
                         case GHC.Prim.touch#
                                @ 'GHC.Types.LiftedRep
                                @ GHC.ForeignPtr.ForeignPtrContents
                                dt8
                                ipv1 of s' { DEFAULT ->
                         case pos'
                                `cast`
                              (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                         $wsucc1
                           t'
                             `cast`
                           (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])))
                           ww8
                           more'
                           (GHC.Word.W8# ipv2) } } } })
                   GHC.Types.True
                   -> $wsucc1
                        (Data.Attoparsec.ByteString.Buffer.Buf ww ww1 ww2 ww3 ww4 ww5)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])))
                        ww6
                        w
                        (case GHC.Prim.readWord8OffAddr#
                                @ GHC.Prim.RealWorld
                                (GHC.Prim.plusAddr# ww (GHC.Prim.+# ww2 ww6))
                                0#
                                GHC.Prim.realWorld# of ds6 { (#,#) ipv1 ipv2 ->
                         case GHC.Prim.touch#
                                @ 'GHC.Types.LiftedRep
                                @ GHC.ForeignPtr.ForeignPtrContents
                                ww1
                                ipv1 of s' { DEFAULT ->
                         GHC.Word.W8# ipv2 } }) }) -}
c47a02b495085d6c9712fa621ef3cee6
  $woptfieldstotalp ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
31307c9788c4b1d4426975b0d93b720f
  $woptidp ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (ww :: GHC.Prim.Int#)
                   (w1 :: Data.Attoparsec.Internal.Types.More)
                   (w2 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w3 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 let {
                   nt :: GHC.Types.Int = GHC.Types.I# ww
                 } in
                 let {
                   lvl1008 :: Data.Attoparsec.Internal.Types.State
                                Data.ByteString.Internal.ByteString
                              -> Data.Attoparsec.Internal.Types.Pos
                              -> Data.Attoparsec.Internal.Types.More
                              -> Data.ByteString.Internal.ByteString
                              -> Data.Attoparsec.Internal.Types.IResult
                                   Data.ByteString.Internal.ByteString r
                     {- Arity: 4, Strictness: <L,U><S,1*U(U)><L,U><L,A>,
                        Unfolding: InlineRule (4, True, False)
                                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                                               Data.ByteString.Internal.ByteString)
                                      (pos' :: Data.Attoparsec.Internal.Types.Pos)
                                      (more' :: Data.Attoparsec.Internal.Types.More)
                                      (a1 :: Data.ByteString.Internal.ByteString) ->
                                    case pos'
                                           `cast`
                                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                                    w3
                                      t'
                                      nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                                      more'
                                      Lib.optidp_v2 }) -}
                   = \ (t' :: Data.Attoparsec.Internal.Types.State
                                Data.ByteString.Internal.ByteString)
                       (pos' :: Data.Attoparsec.Internal.Types.Pos)
                       (more' :: Data.Attoparsec.Internal.Types.More)
                       (a1 :: Data.ByteString.Internal.ByteString) ->
                     case pos'
                            `cast`
                          (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                     w3
                       t'
                       nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                       more'
                       Lib.optidp_v2 }
                 } in
                 let {
                   lvl1009 :: Data.Attoparsec.Internal.Types.State
                                Data.ByteString.Internal.ByteString
                              -> Data.Attoparsec.Internal.Types.Pos
                              -> Data.Attoparsec.Internal.Types.More
                              -> Data.ByteString.Internal.ByteString
                              -> Data.Attoparsec.Internal.Types.IResult
                                   Data.ByteString.Internal.ByteString r
                     {- Arity: 4, Strictness: <L,U><S,1*U(U)><L,U><L,A>,
                        Unfolding: InlineRule (4, True, False)
                                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                                               Data.ByteString.Internal.ByteString)
                                      (pos' :: Data.Attoparsec.Internal.Types.Pos)
                                      (more' :: Data.Attoparsec.Internal.Types.More)
                                      (a1 :: Data.ByteString.Internal.ByteString) ->
                                    case pos'
                                           `cast`
                                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                                    w3
                                      t'
                                      nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                                      more'
                                      Lib.optidp_v1 }) -}
                   = \ (t' :: Data.Attoparsec.Internal.Types.State
                                Data.ByteString.Internal.ByteString)
                       (pos' :: Data.Attoparsec.Internal.Types.Pos)
                       (more' :: Data.Attoparsec.Internal.Types.More)
                       (a1 :: Data.ByteString.Internal.ByteString) ->
                     case pos'
                            `cast`
                          (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                     w3
                       t'
                       nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                       more'
                       Lib.optidp_v1 }
                 } in
                 let {
                   lose :: Data.Attoparsec.Internal.Types.Failure
                             Data.ByteString.Internal.ByteString
                             (Data.Attoparsec.Internal.Types.State
                                Data.ByteString.Internal.ByteString)
                             r
                     {- Arity: 5, Strictness: <L,U><L,A><L,U><L,A><L,A>,
                        Unfolding: InlineRule (5, True, True)
                                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                                               Data.ByteString.Internal.ByteString)
                                      (_pos' :: Data.Attoparsec.Internal.Types.Pos)
                                      (more' :: Data.Attoparsec.Internal.Types.More)
                                      (_ctx :: [GHC.Base.String])
                                      (_msg :: GHC.Base.String) ->
                                    Lib.optidp_m2
                                      `cast`
                                    (Data.Attoparsec.Internal.Types.N:Parser[0]
                                         <Data.ByteString.Internal.ByteString>_N
                                         <Data.ByteString.Internal.ByteString>_R)
                                      @ r
                                      t'
                                      nt `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                                      more'
                                      w2
                                      lvl1009) -}
                   = \ (t' :: Data.Attoparsec.Internal.Types.State
                                Data.ByteString.Internal.ByteString)
                       (_pos' :: Data.Attoparsec.Internal.Types.Pos)
                       (more' :: Data.Attoparsec.Internal.Types.More)
                       (_ctx :: [GHC.Base.String])
                       (_msg :: GHC.Base.String) ->
                     Lib.optidp_m2
                       `cast`
                     (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)
                       @ r
                       t'
                       nt `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                       more'
                       w2
                       lvl1009
                 } in
                 Lib.optidp_m1
                   `cast`
                 (Data.Attoparsec.Internal.Types.N:Parser[0]
                      <Data.ByteString.Internal.ByteString>_N
                      <Data.ByteString.Internal.ByteString>_R)
                   @ r
                   w
                   nt `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                   w1
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                      (_pos' :: Data.Attoparsec.Internal.Types.Pos)
                      (more' :: Data.Attoparsec.Internal.Types.More)
                      (_ctx :: [GHC.Base.String])
                      (_msg :: GHC.Base.String) ->
                    Lib.optidp_m
                      `cast`
                    (Data.Attoparsec.Internal.Types.N:Parser[0]
                         <Data.ByteString.Internal.ByteString>_N
                         <Data.ByteString.Internal.ByteString>_R)
                      @ r
                      t'
                      nt `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                      more'
                      lose
                      lvl1008)
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)
                      (more' :: Data.Attoparsec.Internal.Types.More)
                      (a1 :: Data.ByteString.Internal.ByteString) ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                    w3
                      t'
                      nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                      more'
                      Lib.optidp_v })) -}
c1687b9bee2170c12a4b537482e6abf2
  $woptnmp ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
094ba14d5b3068f15764bf7df7c1a298
  $woptxsp ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
d5562d5afecaeeea8fc20605c113bd0d
  $wp ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
eb2dee7742d823f44d3e9bad363c73b3
  $wp1 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.PairedAln
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.PairedAln
                            r) ->
                 Lib.$whdralnparserEOL
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                      (_pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (_ctx :: [GHC.Base.String])[OneShot]
                      (_msg :: GHC.Base.String)[OneShot] ->
                    case t'
                           `cast`
                         (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww7 { Data.Attoparsec.ByteString.Buffer.Buf ww8 ww9 ww10 ww11 ww12 ww13 ->
                    Lib.$wpairedalnparser
                      @ r
                      ww8
                      ww9
                      ww10
                      ww11
                      ww12
                      ww13
                      ww6
                      more'
                      w1
                      w2 })
                   w2) -}
94c20a32cc3c40c58238175259cb9e26
  $wpairedalnparser ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.PairedAln
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
56f5b6a81bb682879d2c1947924eb951
  $wparseAln ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Either.Either GHC.Base.String Lib.AlignedRead
  {- Arity: 4, Strictness: <S,U><L,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.$walnparser
                        @ Lib.AlignedRead
                        ww
                        ww1
                        ww2
                        ww3
                        ww3
                        0#
                        0#
                        Data.Attoparsec.Internal.Types.Complete
                        (Data.Attoparsec.ByteString.Internal.failK @ Lib.AlignedRead)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [GHC.Base.String]
                               -> GHC.Base.String
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString Lib.AlignedRead>_R)
                        (Data.Attoparsec.ByteString.Internal.successK @ Lib.AlignedRead)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> Lib.AlignedRead
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString
                                    Lib.AlignedRead>_R) of wild {
                   Data.Attoparsec.Internal.Types.Fail ds6 ds7 err
                   -> case ds7 of wild1 {
                        [] -> Data.Either.Left @ GHC.Base.String @ Lib.AlignedRead err
                        : ipv ipv1
                        -> Data.Either.Left
                             @ [GHC.Types.Char]
                             @ Lib.AlignedRead
                             (GHC.Base.++
                                @ GHC.Types.Char
                                (Data.OldList.intercalate_$spoly_go
                                   @ GHC.Types.Char
                                   ipv
                                   (Data.OldList.prependToAll
                                      @ [GHC.Types.Char]
                                      Lib.parseAln3
                                      ipv1))
                                (GHC.CString.unpackAppendCString# Lib.parseAln2 err)) }
                   Data.Attoparsec.Internal.Types.Partial ipv -> Lib.parseAln1
                   Data.Attoparsec.Internal.Types.Done ds6 a1
                   -> Data.Either.Right @ GHC.Base.String @ Lib.AlignedRead a1 }) -}
1fdb6abddeafdc18195a2eb61cd3691d
  $wparseBED ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Either.Either GHC.Base.String Lib.BedRecord
  {- Arity: 4, Strictness: <S,U><L,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.$wbedrecparser
                        @ Lib.BedRecord
                        ww
                        ww1
                        ww2
                        ww3
                        ww3
                        0#
                        0#
                        Data.Attoparsec.Internal.Types.Complete
                        (Data.Attoparsec.ByteString.Internal.failK @ Lib.BedRecord)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [GHC.Base.String]
                               -> GHC.Base.String
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString Lib.BedRecord>_R)
                        (Data.Attoparsec.ByteString.Internal.successK @ Lib.BedRecord)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> Lib.BedRecord
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString Lib.BedRecord>_R) of wild {
                   Data.Attoparsec.Internal.Types.Fail ds6 ds7 err
                   -> case ds7 of wild1 {
                        [] -> Data.Either.Left @ GHC.Base.String @ Lib.BedRecord err
                        : ipv ipv1
                        -> Data.Either.Left
                             @ [GHC.Types.Char]
                             @ Lib.BedRecord
                             (GHC.Base.++
                                @ GHC.Types.Char
                                (Data.OldList.intercalate_$spoly_go
                                   @ GHC.Types.Char
                                   ipv
                                   (Data.OldList.prependToAll
                                      @ [GHC.Types.Char]
                                      Lib.parseAln3
                                      ipv1))
                                (GHC.CString.unpackAppendCString# Lib.parseAln2 err)) }
                   Data.Attoparsec.Internal.Types.Partial ipv -> Lib.parseBED1
                   Data.Attoparsec.Internal.Types.Done ds6 a1
                   -> Data.Either.Right @ GHC.Base.String @ Lib.BedRecord a1 }) -}
f7cfd1f833f3fa74d5d1eba632bda379
  $wparseBEDPE ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Either.Either GHC.Base.String Lib.BEDPE
  {- Arity: 4, Strictness: <S,U><L,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.$wbedPEparser
                        @ Lib.BEDPE
                        ww
                        ww1
                        ww2
                        ww3
                        ww3
                        0#
                        0#
                        Data.Attoparsec.Internal.Types.Complete
                        (Data.Attoparsec.ByteString.Internal.failK @ Lib.BEDPE)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [GHC.Base.String]
                               -> GHC.Base.String
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString Lib.BEDPE>_R)
                        (Data.Attoparsec.ByteString.Internal.successK @ Lib.BEDPE)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> Lib.BEDPE
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString Lib.BEDPE>_R) of wild {
                   Data.Attoparsec.Internal.Types.Fail ds6 ds7 err
                   -> case ds7 of wild1 {
                        [] -> Data.Either.Left @ GHC.Base.String @ Lib.BEDPE err
                        : ipv ipv1
                        -> Data.Either.Left
                             @ [GHC.Types.Char]
                             @ Lib.BEDPE
                             (GHC.Base.++
                                @ GHC.Types.Char
                                (Data.OldList.intercalate_$spoly_go
                                   @ GHC.Types.Char
                                   ipv
                                   (Data.OldList.prependToAll
                                      @ [GHC.Types.Char]
                                      Lib.parseAln3
                                      ipv1))
                                (GHC.CString.unpackAppendCString# Lib.parseAln2 err)) }
                   Data.Attoparsec.Internal.Types.Partial ipv -> Lib.parseBEDPE1
                   Data.Attoparsec.Internal.Types.Done ds6 a1
                   -> Data.Either.Right @ GHC.Base.String @ Lib.BEDPE a1 }) -}
1a2b11d9eeee0b512715973b80998232
  $wparseCigar ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                            r) ->
                 let {
                   ww7 :: GHC.Types.Int = GHC.Types.I# ww6
                 } in
                 let {
                   w5 :: Data.Attoparsec.Internal.Types.Failure
                           Data.ByteString.Internal.ByteString
                           (Data.Attoparsec.Internal.Types.State
                              Data.ByteString.Internal.ByteString)
                           r
                     {- Arity: 5,
                        Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><L,A><L,U><L,A><L,A>,
                        Unfolding: InlineRule (5, True, True)
                                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                                               Data.ByteString.Internal.ByteString)
                                      (_pos' :: Data.Attoparsec.Internal.Types.Pos)
                                      (more' :: Data.Attoparsec.Internal.Types.More)
                                      (_ctx :: [GHC.Base.String])
                                      (_msg :: GHC.Base.String) ->
                                    Lib.checkCigarSeqlen2
                                      @ r
                                      t'
                                      ww7 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                                      more'
                                      w1
                                      w2) -}
                   = \ (t' :: Data.Attoparsec.Internal.Types.State
                                Data.ByteString.Internal.ByteString)
                       (_pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                       (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                       (_ctx :: [GHC.Base.String])[OneShot]
                       (_msg :: GHC.Base.String)[OneShot] ->
                     case t'
                            `cast`
                          (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww8 { Data.Attoparsec.ByteString.Buffer.Buf ww9 ww10 ww11 ww12 ww13 ww14 ->
                     Lib.$wstarcigarP @ r ww9 ww10 ww11 ww12 ww13 ww14 ww6 more' w1 w2 }
                 } in
                 Lib.$wp
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w
                   w5
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (a1 :: (GHC.Integer.Type.Integer,
                              Data.ByteString.Internal.ByteString))[OneShot] ->
                    case t'
                           `cast`
                         (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww8 { Data.Attoparsec.ByteString.Buffer.Buf ww9 ww10 ww11 ww12 ww13 ww14 ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww15 { GHC.Types.I# ww16 ->
                    Lib.$wmany_v
                      @ r
                      ww9
                      ww10
                      ww11
                      ww12
                      ww13
                      ww14
                      ww16
                      more'
                      (\ (t'1 :: Data.Attoparsec.Internal.Types.State
                                   Data.ByteString.Internal.ByteString)
                         (pos'1 :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                         (more'1 :: Data.Attoparsec.Internal.Types.More)[OneShot]
                         (a3 :: [(GHC.Integer.Type.Integer,
                                  Data.ByteString.Internal.ByteString)])[OneShot] ->
                       case pos'1
                              `cast`
                            (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                       w2
                         t'1
                         nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                         more'1
                         (GHC.Types.:
                            @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                            a1
                            a3) }) } })) -}
815d9beca5aefd7a6c654aad5226a768
  $wparsePairedAlns ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [Lib.PairedAln]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
7d85d039a56f73508181422697f002d3
  $wparsePairedAlns' ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [[Lib.AlignedRead]]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
b9d3c2cd5e60f847de0d4c2e4972e82f
  $wparsePairedAlnsFromSAM ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Either.Either GHC.Base.String [Lib.PairedAln]
  {- Arity: 4, Strictness: <S,U><L,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.$wparsePairedAlns
                        @ [Lib.PairedAln]
                        ww
                        ww1
                        ww2
                        ww3
                        ww3
                        0#
                        0#
                        Data.Attoparsec.Internal.Types.Complete
                        (Data.Attoparsec.ByteString.Internal.failK @ [Lib.PairedAln])
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [GHC.Base.String]
                               -> GHC.Base.String
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString [Lib.PairedAln]>_R)
                        (Data.Attoparsec.ByteString.Internal.successK @ [Lib.PairedAln])
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [Lib.PairedAln]
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString
                                    [Lib.PairedAln]>_R) of wild {
                   Data.Attoparsec.Internal.Types.Fail ds6 ds7 err
                   -> case ds7 of wild1 {
                        [] -> Data.Either.Left @ GHC.Base.String @ [Lib.PairedAln] err
                        : ipv ipv1
                        -> Data.Either.Left
                             @ [GHC.Types.Char]
                             @ [Lib.PairedAln]
                             (GHC.Base.++
                                @ GHC.Types.Char
                                (Data.OldList.intercalate_$spoly_go
                                   @ GHC.Types.Char
                                   ipv
                                   (Data.OldList.prependToAll
                                      @ [GHC.Types.Char]
                                      Lib.parseAln3
                                      ipv1))
                                (GHC.CString.unpackAppendCString# Lib.parseAln2 err)) }
                   Data.Attoparsec.Internal.Types.Partial ipv
                   -> Lib.parsePairedAlnsFromSAM1
                   Data.Attoparsec.Internal.Types.Done ds6 a1
                   -> Data.Either.Right @ GHC.Base.String @ [Lib.PairedAln] a1 }) -}
0f36d4eeceb204908b53a516c146a0fb
  $wparsePairedAlnsOrHdr ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [Lib.PairedAln]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [Lib.PairedAln]
                            r) ->
                 Lib.$wp1
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w
                   w1
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (a1 :: Lib.PairedAln)[OneShot] ->
                    case t'
                           `cast`
                         (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww7 { Data.Attoparsec.ByteString.Buffer.Buf ww8 ww9 ww10 ww11 ww12 ww13 ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww14 { GHC.Types.I# ww15 ->
                    Lib.$wmany_v4
                      @ r
                      ww8
                      ww9
                      ww10
                      ww11
                      ww12
                      ww13
                      ww15
                      more'
                      (\ (t'1 :: Data.Attoparsec.Internal.Types.State
                                   Data.ByteString.Internal.ByteString)
                         (pos'1 :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                         (more'1 :: Data.Attoparsec.Internal.Types.More)[OneShot]
                         (a3 :: [Lib.PairedAln])[OneShot] ->
                       case pos'1
                              `cast`
                            (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                       w2
                         t'1
                         nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                         more'1
                         (GHC.Types.: @ Lib.PairedAln a1 a3) }) } })) -}
73175be6f168f32bcd28feccb36280c2
  $wparseReadsetsFromSAM ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> [[Lib.AlignedRead]]
  {- Arity: 4, Strictness: <S,U><L,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.$wparsePairedAlns'
                        @ [[Lib.AlignedRead]]
                        ww
                        ww1
                        ww2
                        ww3
                        ww3
                        0#
                        0#
                        Data.Attoparsec.Internal.Types.Complete
                        (Data.Attoparsec.ByteString.Internal.failK @ [[Lib.AlignedRead]])
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [GHC.Base.String]
                               -> GHC.Base.String
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString [[Lib.AlignedRead]]>_R)
                        (Data.Attoparsec.ByteString.Internal.successK
                           @ [[Lib.AlignedRead]])
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [[Lib.AlignedRead]]
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString
                                    [[Lib.AlignedRead]]>_R) of wild {
                   Data.Attoparsec.Internal.Types.Fail ds6 ds7 err
                   -> case ds7 of wild1 { DEFAULT ->
                      GHC.Types.[] @ [Lib.AlignedRead] }
                   Data.Attoparsec.Internal.Types.Partial ipv
                   -> case Lib.parseReadsetsFromSAM1 ret_ty [[Lib.AlignedRead]] of {}
                   Data.Attoparsec.Internal.Types.Done ds6 a1 -> a1 }) -}
34eece3656a7f3dab6e3f83d6d31eb16
  $wparsechkBED ::
    GHC.Prim.Int#
    -> GHC.Prim.Int# -> [GHC.Types.Int] -> [GHC.Types.Char]
  {- Arity: 3, Strictness: <S,U><S,U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.Int#)
                   (w :: [GHC.Types.Int]) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==# ww ww1) of wild {
                   GHC.Types.False
                   -> GHC.CString.unpackAppendCString#
                        Lib.createprimerbedmaps13
                        (case GHC.List.$wlenAcc @ GHC.Types.Int w 0# of ww2 { DEFAULT ->
                         case GHC.Show.$wshowSignedInt
                                0#
                                ww2
                                (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                         GHC.Base.++
                           @ GHC.Types.Char
                           (GHC.Types.: @ GHC.Types.Char ww5 ww6)
                           (GHC.CString.unpackAppendCString#
                              Lib.createprimerbedmaps12
                              (case GHC.Show.$wshowSignedInt
                                      0#
                                      ww
                                      (GHC.Types.[] @ GHC.Types.Char) of ww3 { (#,#) ww7 ww8 ->
                               GHC.Base.++
                                 @ GHC.Types.Char
                                 (GHC.Types.: @ GHC.Types.Char ww7 ww8)
                                 Lib.parsechkBED3 })) } })
                   GHC.Types.True
                   -> GHC.CString.unpackAppendCString#
                        Lib.createprimerbedmaps9
                        (case GHC.Show.$wshowSignedInt
                                0#
                                ww
                                (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                         GHC.Base.++
                           @ GHC.Types.Char
                           (GHC.Types.: @ GHC.Types.Char ww5 ww6)
                           Lib.parsechkBED1 }) }) -}
7496976ba2ecdbff96a3dbb67f81732b
  $wparsechkMaster ::
    GHC.Prim.Int#
    -> GHC.Prim.Int# -> [GHC.Types.Int] -> [GHC.Types.Char]
  {- Arity: 3, Strictness: <S,U><S,U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.Int#)
                   (w :: [GHC.Types.Int]) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==# ww ww1) of wild {
                   GHC.Types.False
                   -> GHC.CString.unpackAppendCString#
                        Lib.createprimerbedmaps13
                        (case GHC.List.$wlenAcc @ GHC.Types.Int w 0# of ww2 { DEFAULT ->
                         case GHC.Show.$wshowSignedInt
                                0#
                                ww2
                                (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                         GHC.Base.++
                           @ GHC.Types.Char
                           (GHC.Types.: @ GHC.Types.Char ww5 ww6)
                           (GHC.CString.unpackAppendCString#
                              Lib.createprimerbedmaps12
                              (case GHC.Show.$wshowSignedInt
                                      0#
                                      ww
                                      (GHC.Types.[] @ GHC.Types.Char) of ww3 { (#,#) ww7 ww8 ->
                               GHC.Base.++
                                 @ GHC.Types.Char
                                 (GHC.Types.: @ GHC.Types.Char ww7 ww8)
                                 Lib.createprimerbedmaps10 })) } })
                   GHC.Types.True
                   -> GHC.CString.unpackAppendCString#
                        Lib.createprimerbedmaps9
                        (case GHC.Show.$wshowSignedInt
                                0#
                                ww
                                (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                         GHC.Base.++
                           @ GHC.Types.Char
                           (GHC.Types.: @ GHC.Types.Char ww5 ww6)
                           Lib.createprimerbedmaps7 }) }) -}
7c11737316386c399eac93998558b17e
  $wparsechkSAM ::
    GHC.Prim.Int#
    -> GHC.Prim.Int# -> [GHC.Types.Int] -> [GHC.Types.Char]
  {- Arity: 3, Strictness: <S,U><S,U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.Int#)
                   (w :: [GHC.Types.Int]) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==# ww ww1) of wild {
                   GHC.Types.False
                   -> GHC.CString.unpackAppendCString#
                        Lib.createprimerbedmaps13
                        (case GHC.List.$wlenAcc @ GHC.Types.Int w 0# of ww2 { DEFAULT ->
                         case GHC.Show.$wshowSignedInt
                                0#
                                ww2
                                (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                         GHC.Base.++
                           @ GHC.Types.Char
                           (GHC.Types.: @ GHC.Types.Char ww5 ww6)
                           (GHC.CString.unpackAppendCString#
                              Lib.createprimerbedmaps12
                              (case GHC.Show.$wshowSignedInt
                                      0#
                                      ww
                                      (GHC.Types.[] @ GHC.Types.Char) of ww3 { (#,#) ww7 ww8 ->
                               GHC.Base.++
                                 @ GHC.Types.Char
                                 (GHC.Types.: @ GHC.Types.Char ww7 ww8)
                                 Lib.parsechkSAM3 })) } })
                   GHC.Types.True
                   -> GHC.CString.unpackAppendCString#
                        Lib.createprimerbedmaps9
                        (case GHC.Show.$wshowSignedInt
                                0#
                                ww
                                (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                         GHC.Base.++
                           @ GHC.Types.Char
                           (GHC.Types.: @ GHC.Types.Char ww5 ww6)
                           Lib.parsechkSAM1 }) }) -}
9df4ba34490f98144da3de31ddb42fde
  $wparsemIDstring ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.ByteString.Internal.ByteString
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 let {
                   midvals :: [Data.ByteString.Internal.ByteString]
                   = case ww3 of ds6 {
                       DEFAULT
                       -> let {
                            lvl1008 :: GHC.Ptr.Ptr GHC.Word.Word8
                            = GHC.Ptr.Ptr @ GHC.Word.Word8 ww
                          } in
                          letrec {
                            $wsplitLoop :: (GHC.Prim.Word# -> GHC.Types.Bool)
                                           -> GHC.Ptr.Ptr GHC.Word.Word8
                                           -> GHC.Prim.Int#
                                           -> GHC.Types.Int
                                           -> GHC.Prim.Int#
                                           -> GHC.ForeignPtr.ForeignPtr GHC.Word.Word8
                                           -> GHC.Prim.State# GHC.Prim.RealWorld
                                           -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                 [Data.ByteString.Internal.ByteString] #)
                              {- Arity: 7,
                                 Strictness: <L,U><L,1*U(U)><S,U><L,1*U(U)><S,U><L,U(U,U)><S,U>,
                                 Inline: [0] -}
                            = \ (w :: GHC.Prim.Word# -> GHC.Types.Bool)
                                (w1 :: GHC.Ptr.Ptr GHC.Word.Word8)
                                (ww4 :: GHC.Prim.Int#)
                                (w2 :: GHC.Types.Int)
                                (ww5 :: GHC.Prim.Int#)
                                (w3 :: GHC.ForeignPtr.ForeignPtr GHC.Word.Word8)
                                (w4 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                              case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# ww4 ww5) of wild1 {
                                GHC.Types.False
                                -> case w1 of wild2 { GHC.Ptr.Ptr a ->
                                   case w2 of wild3 { GHC.Types.I# x1 ->
                                   case GHC.Prim.readWord8OffAddr#
                                          @ GHC.Prim.RealWorld
                                          a
                                          (GHC.Prim.+# x1 ww4)
                                          w4 of ds7 { (#,#) ipv ipv1 ->
                                   case w ipv1 of wild5 {
                                     GHC.Types.False
                                     -> $wsplitLoop w wild2 (GHC.Prim.+# ww4 1#) wild3 ww5 w3 ipv
                                     GHC.Types.True
                                     -> (# ipv,
                                           GHC.Types.:
                                             @ Data.ByteString.Internal.ByteString
                                             (case w3 of dt { GHC.ForeignPtr.ForeignPtr dt1 dt2 ->
                                              Data.ByteString.Internal.PS dt1 dt2 x1 ww4 })
                                             (case w of pred'1 { DEFAULT ->
                                              case w3 of fp'1 { GHC.ForeignPtr.ForeignPtr ipv2 ipv3 ->
                                              case $wsplitLoop
                                                     pred'1
                                                     lvl1008
                                                     0#
                                                     (GHC.Types.I#
                                                        (GHC.Prim.+# (GHC.Prim.+# x1 ww4) 1#))
                                                     (GHC.Prim.-# (GHC.Prim.-# ww5 ww4) 1#)
                                                     fp'1
                                                     GHC.Prim.realWorld# of ds8 { (#,#) ipv4 ipv5 ->
                                              case GHC.Prim.touch#
                                                     @ 'GHC.Types.LiftedRep
                                                     @ GHC.ForeignPtr.ForeignPtrContents
                                                     ww1
                                                     ipv4 of s' { DEFAULT ->
                                              ipv5 } } } }) #) } } } }
                                GHC.Types.True
                                -> (# w4,
                                      GHC.Types.:
                                        @ Data.ByteString.Internal.ByteString
                                        (case w3 of dt { GHC.ForeignPtr.ForeignPtr dt1 dt2 ->
                                         case w2 of dt3 { GHC.Types.I# dt4 ->
                                         Data.ByteString.Internal.PS dt1 dt2 dt4 ww4 } })
                                        (GHC.Types.[] @ Data.ByteString.Internal.ByteString) #) }
                          } in
                          case $wsplitLoop
                                 Lib.parsemIDstring2
                                 lvl1008
                                 0#
                                 (GHC.Types.I# ww2)
                                 ds6
                                 (GHC.ForeignPtr.ForeignPtr @ GHC.Word.Word8 ww ww1)
                                 GHC.Prim.realWorld# of ds7 { (#,#) ipv ipv1 ->
                          case GHC.Prim.touch#
                                 @ 'GHC.Types.LiftedRep
                                 @ GHC.ForeignPtr.ForeignPtrContents
                                 ww1
                                 ipv of s' { DEFAULT ->
                          Lib.parsemIDstring_go ipv1 } }
                       0# -> GHC.Types.[] @ Data.ByteString.Internal.ByteString }
                 } in
                 case GHC.List.$wlenAcc
                        @ Data.ByteString.Internal.ByteString
                        midvals
                        0# of ww4 { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<=# ww4 0#) of wild {
                   GHC.Types.False
                   -> GHC.List.head @ Data.ByteString.Internal.ByteString midvals
                   GHC.Types.True -> Lib.parsemIDstring1 } }) -}
08129bbcc00230cd86894d22e12af5df
  $wparsesignedint ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Integer.Type.Integer
  {- Arity: 4, Strictness: <S,U><L,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Data.Attoparsec.ByteString.Char8.$wdouble
                        @ GHC.Types.Double
                        ww
                        ww1
                        ww2
                        ww3
                        ww3
                        0#
                        0#
                        Data.Attoparsec.Internal.Types.Complete
                        (Data.Attoparsec.ByteString.Internal.failK @ GHC.Types.Double)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [GHC.Base.String]
                               -> GHC.Base.String
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString GHC.Types.Double>_R)
                        (Data.Attoparsec.ByteString.Internal.successK @ GHC.Types.Double)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> GHC.Types.Double
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString
                                    GHC.Types.Double>_R) of wild {
                   Data.Attoparsec.Internal.Types.Fail ds6 ds7 err
                   -> case ds7 of wild1 { DEFAULT ->
                      case GHC.List.badHead ret_ty GHC.Integer.Type.Integer of {} }
                   Data.Attoparsec.Internal.Types.Partial ipv
                   -> case Lib.parsesignedint1 ret_ty GHC.Integer.Type.Integer of {}
                   Data.Attoparsec.Internal.Types.Done ds6 a1
                   -> case a1 of wild1 { GHC.Types.D# x ->
                      case GHC.Integer.Type.decodeDoubleInteger
                             x of ds7 { (#,#) ipv ipv1 ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<# ipv1 0#) of wild2 {
                        GHC.Types.False -> GHC.Integer.Type.shiftLInteger ipv ipv1
                        GHC.Types.True
                        -> let {
                             s :: GHC.Prim.Int# = GHC.Prim.negateInt# ipv1
                           } in
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.># s 52#) of wild3 {
                             GHC.Types.False
                             -> case GHC.Integer.Type.integerToInt ipv of n { DEFAULT ->
                                GHC.Integer.Type.smallInteger (GHC.Prim.uncheckedIShiftRA# n s) }
                             GHC.Types.True
                             -> case GHC.Integer.Type.ltInteger#
                                       ipv
                                       Lib.defaultBed2 of wild4 { DEFAULT ->
                                case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild4 of wild5 {
                                  GHC.Types.False -> Lib.defaultBed2
                                  GHC.Types.True -> Lib.updateTrimdAlnFields1 } } } } } } }) -}
c6f99a7ea44226d9bea8aeb0f4dfd365
  $wpoly_go1 ::
    GHC.Prim.Int#
    -> Data.Map.Internal.Map GHC.Types.Int a
    -> [(GHC.Types.Int, a)]
    -> Data.Map.Internal.Map GHC.Types.Int a
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
34b5a2fe38f6f5675a877db5d30a2ed2
  $wpoly_go8 ::
    GHC.Prim.Int#
    -> Data.Map.Internal.Map Lib.UChr a
    -> [(Lib.UChr, a)]
    -> Data.Map.Internal.Map Lib.UChr a
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
a83f0129e991567a813639c99dd67797
  $wsafemapcig ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Base.Maybe Lib.CigarMap
  {- Arity: 4, Strictness: <S,U><L,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 let {
                   cigtups :: [[(GHC.Integer.Type.Integer,
                                 Data.ByteString.Internal.ByteString)]]
                   = case Lib.$wparseCigar
                            @ [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                            ww
                            ww1
                            ww2
                            ww3
                            ww3
                            0#
                            0#
                            Data.Attoparsec.Internal.Types.Complete
                            (Data.Attoparsec.ByteString.Internal.failK
                               @ [(GHC.Integer.Type.Integer,
                                   Data.ByteString.Internal.ByteString)])
                              `cast`
                            (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                             ->_R <Data.Attoparsec.Internal.Types.Pos
                                   -> Data.Attoparsec.Internal.Types.More
                                   -> [GHC.Base.String]
                                   -> GHC.Base.String
                                   -> Data.Attoparsec.Internal.Types.IResult
                                        Data.ByteString.Internal.ByteString
                                        [(GHC.Integer.Type.Integer,
                                          Data.ByteString.Internal.ByteString)]>_R)
                            (Data.Attoparsec.ByteString.Internal.successK
                               @ [(GHC.Integer.Type.Integer,
                                   Data.ByteString.Internal.ByteString)])
                              `cast`
                            (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                             ->_R <Data.Attoparsec.Internal.Types.Pos
                                   -> Data.Attoparsec.Internal.Types.More
                                   -> [(GHC.Integer.Type.Integer,
                                        Data.ByteString.Internal.ByteString)]
                                   -> Data.Attoparsec.Internal.Types.IResult
                                        Data.ByteString.Internal.ByteString
                                        [(GHC.Integer.Type.Integer,
                                          Data.ByteString.Internal.ByteString)]>_R) of wild {
                       Data.Attoparsec.Internal.Types.Fail ds6 ds7 err
                       -> case ds7 of wild1 { DEFAULT ->
                          GHC.Types.[]
                            @ [(GHC.Integer.Type.Integer,
                                Data.ByteString.Internal.ByteString)] }
                       Data.Attoparsec.Internal.Types.Partial ipv
                       -> case Lib.checkCigarSeqlen1
                          ret_ty [[(GHC.Integer.Type.Integer,
                                    Data.ByteString.Internal.ByteString)]]
                          of {}
                       Data.Attoparsec.Internal.Types.Done ds6 a1
                       -> GHC.Types.:
                            @ [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                            a1
                            (GHC.Types.[]
                               @ [(GHC.Integer.Type.Integer,
                                   Data.ByteString.Internal.ByteString)]) }
                 } in
                 case GHC.List.$wlenAcc
                        @ [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                        cigtups
                        0# of ww4 { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.># ww4 0#) of wild {
                   GHC.Types.False -> GHC.Base.Nothing @ Lib.CigarMap
                   GHC.Types.True
                   -> GHC.Base.Just
                        @ [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                        (GHC.List.head
                           @ [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                           cigtups) } }) -}
49e22797d16c6c06ac118c181ee5d3f2
  $wsamhdrparser ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <L,U><L,U><L,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
b8de38649e66f1afe52d8ffa0d54104e
  $wsamhdrparserEOL ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <L,U><L,U><L,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
9923cac9909e31a8c862ef1610f60b2e
  $wseqp ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
4addcf48cf78a3f5486cda42c4dad3cf
  $wshiftcrds ::
    (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
    -> GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> (# GHC.Integer.Type.Integer,
          Data.ByteString.Internal.ByteString #)
  {- Arity: 5, Strictness: <L,1*U(1*U,A)><L,U><L,U><L,U><S,U>,
     Inline: [0] -}
3edf329f95cbb1fed9d031e2bf21ba59
  $wspaces ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 8, Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More) ->
                 Lib.$wgo7 @ r ww ww1 ww2 ww3 ww4 ww5 ww6 w (Lib.spaces2 @ r)) -}
5894869b68e4e4f55db5be0e2693b232
  $wstarcigarP ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <L,U><L,U><L,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
3db503ec86ceab45f6a4ee343104b9b9
  $wtrimprimerPairsE ::
    Lib.CMap
    -> Lib.CMap
    -> Lib.PairedAln
    -> (# Lib.AlignedRead, Lib.AlignedRead, [Lib.AlignedRead],
          [Lib.AlignedRead] #)
  {- Arity: 3,
     Strictness: <L,U><L,U><L,1*U(1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,A,A,A,U,U,U,U,U,U,U,U,U),1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,A,A,A,U,U,U,U,U,U,U,U,U),1*U,1*U)>,
     Inline: [0],
     Unfolding: (\ (w :: Lib.CMap)
                   (w1 :: Lib.CMap)
                   (w2 :: Lib.PairedAln) ->
                 case Lib.$wmakeTrimmedUpdates
                        (let {
                           w3 :: Lib.PairedAln
                           = case w2 of ww { Lib.PairedAln ww1 ww2 ww3 ww4 ->
                             let {
                               addpints :: Lib.AlignedRead -> Lib.AlignedRead {- Arity: 1 -}
                               = Lib.addprimerints w w1
                             } in
                             Lib.PairedAln
                               (Lib.addprimerints w w1 ww1)
                               (Lib.addprimerints w w1 ww2)
                               (GHC.Base.map @ Lib.AlignedRead @ Lib.AlignedRead addpints ww3)
                               (GHC.Base.map @ Lib.AlignedRead @ Lib.AlignedRead addpints ww4) }
                         } in
                         Lib.PairedAln
                           (case w3 of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                            Lib.trimalignment ds6 })
                           (case w3 of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                            Lib.trimalignment ds7 })
                           (case w3 of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                            GHC.Base.map
                              @ Lib.AlignedRead
                              @ Lib.AlignedRead
                              Lib.trimalignment
                              ds8 })
                           (case w3 of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                            GHC.Base.map
                              @ Lib.AlignedRead
                              @ Lib.AlignedRead
                              Lib.trimalignment
                              ds9 })) of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 (# ww1, ww2,
                    GHC.List.filter
                      @ Lib.AlignedRead
                      Lib.removeNonPrimaryZeroLengthAlignments1
                      ww3,
                    GHC.List.filter
                      @ Lib.AlignedRead
                      Lib.removeNonPrimaryZeroLengthAlignments1
                      ww4 #) }) -}
9285a79efd8521c57d02e8cf67d3bd50
  $wtxtfieldp ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
63d1c44a9e223061207d349d8b271ae0
  $wuchrparser ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.UChr
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
c45138fea80c852cd23d50a9d0b1f364
  $wupdateCigB ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.ByteString.Internal.ByteString
  {- Arity: 6, Strictness: <L,U><L,U><S,U><L,U><S,U><S,U>,
     Inline: [0] -}
b8012159db29b9844a1b6e83e889d0d5
  $wupdateCigF ::
    GHC.Integer.Type.Integer
    -> GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.ByteString.Internal.ByteString
  {- Arity: 5, Strictness: <L,U><S,U><L,U><S,U><S,U>, Inline: [0] -}
8c707513c33ee7360113c575274e2343
  $wupdateCigR ::
    GHC.Integer.Type.Integer
    -> GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.ByteString.Internal.ByteString
  {- Arity: 5, Strictness: <L,U><S,U><L,U><S,U><S,U>, Inline: [0] -}
e405dc248236aeb0f50c6e667169e541
  $wvalidateTrimdPairAlnStart ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,1*U><S,1*U><S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Integer.Type.Integer)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: GHC.Integer.Type.Integer)
                   (ww3 :: GHC.Integer.Type.Integer) ->
                 case GHC.Integer.Type.eqInteger# ww2 ww1 of wild { DEFAULT ->
                 case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild of wild1 {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case GHC.Integer.Type.eqInteger# ww ww3 of wild2 { DEFAULT ->
                      GHC.Prim.tagToEnum# @ GHC.Types.Bool wild2 } } }) -}
eb54c5795cd87d65034c776d841620e0
  data AlignedRead
    = AlignedRead {qname :: Data.ByteString.Internal.ByteString,
                   flag :: GHC.Types.Int,
                   rname :: Lib.UChr,
                   pos :: GHC.Integer.Type.Integer,
                   endpos :: GHC.Integer.Type.Integer,
                   mapqual :: GHC.Integer.Type.Integer,
                   cigar :: Data.ByteString.Internal.ByteString,
                   trimdcigar :: Data.ByteString.Internal.ByteString,
                   cigmap :: Lib.CigarMap,
                   trimdcigmap :: Lib.CigarMap,
                   rnext :: Data.ByteString.Internal.ByteString,
                   pnext :: GHC.Integer.Type.Integer,
                   tlen :: GHC.Integer.Type.Integer,
                   refseq :: Data.ByteString.Internal.ByteString,
                   basequal :: Data.ByteString.Internal.ByteString,
                   optfields :: Data.ByteString.Internal.ByteString,
                   strand :: Data.ByteString.Internal.ByteString,
                   paired :: GHC.Types.Bool,
                   mapped :: GHC.Types.Bool,
                   fint :: [Lib.BedRecord],
                   rint :: [Lib.BedRecord],
                   pintflag :: GHC.Types.Bool,
                   trimdflag :: GHC.Types.Bool,
                   trimdpos :: GHC.Integer.Type.Integer,
                   trimdendpos :: GHC.Integer.Type.Integer,
                   headerstrings :: Lib.Header,
                   isheader :: GHC.Types.Bool,
                   mid :: Data.ByteString.Internal.ByteString,
                   xmid :: Data.ByteString.Internal.ByteString,
                   tbed :: Lib.BedRecord,
                   trimdToZeroLength :: GHC.Types.Bool}
9b18c0fcd5a0e2c5437ec8a2498c714b
  type Alignments = [Lib.AlignedRead]
ae72b851c8466209825483b865727534
  type BED = Data.Vector.Vector Lib.BedRecord
1fc0d837b61ebbaa17edd71f0be30382
  data BEDPE
    = BEDPE {chr1 :: Lib.UChr,
             start1 :: GHC.Integer.Type.Integer,
             end1 :: GHC.Integer.Type.Integer,
             chr2 :: Lib.UChr,
             start2 :: GHC.Integer.Type.Integer,
             end2 :: GHC.Integer.Type.Integer,
             bedpename :: Data.ByteString.Internal.ByteString}
a2540176212f29791e5ac644981975fa
  type BedMap = Data.IntMap.Internal.IntMap Lib.BedRecord
863cf0b2559e3e0bbf1758c760210fb2
  data BedRecord
    = BedRecord {bedchr :: Lib.UChr,
                 bedstart :: GHC.Integer.Type.Integer,
                 bedend :: GHC.Integer.Type.Integer,
                 bedname :: Data.ByteString.Internal.ByteString}
34d084c6959b08c1e4bd2b3d17cb3be0
  type CMap = Data.Map.Internal.Map Lib.UChr Lib.BedMap
72f14e6fcdc92b42047548db1c03b13e
  data ChromNameFormat = GRC | UCSC
1a4fa373ef0050f894d8420fe0e07a8a
  type CigarMap =
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
f6e5071805bb014187dd251b49db32c1
  type Header = [Data.ByteString.Internal.ByteString]
06caff25e138935957c1d9216ae6952f
  data MasterRecord
    = MasterRecord {mchrom :: Lib.UChr,
                    mtargetstart :: GHC.Integer.Type.Integer,
                    mtargetend :: GHC.Integer.Type.Integer,
                    mampname :: Data.ByteString.Internal.ByteString,
                    mforstart :: GHC.Integer.Type.Integer,
                    mforend :: GHC.Integer.Type.Integer,
                    mrevstart :: GHC.Integer.Type.Integer,
                    mrevend :: GHC.Integer.Type.Integer,
                    mforname :: Data.ByteString.Internal.ByteString,
                    mrevname :: Data.ByteString.Internal.ByteString,
                    mforseq :: Data.ByteString.Internal.ByteString,
                    mrevseq :: Data.ByteString.Internal.ByteString}
9397824cc9d01cf75666f6f250a9bd4d
  data MidFamily
    = MidFamily {chrom :: Lib.UChr,
                 alnstart :: GHC.Integer.Type.Integer,
                 alnend :: GHC.Integer.Type.Integer,
                 midseq :: Data.ByteString.Internal.ByteString,
                 alns :: [Lib.AlignedRead],
                 alncount :: GHC.Integer.Type.Integer,
                 txposedcount :: GHC.Integer.Type.Integer,
                 postxposdcnt :: GHC.Integer.Type.Integer,
                 negtxposdcnt :: GHC.Integer.Type.Integer,
                 targetbed :: Lib.BedRecord}
69605119a398f29c235919bcd7f9bece
  data Opts
    = Opts {bedpeformat :: GHC.Types.Bool,
            incoordsfile :: GHC.Base.String,
            insamfile :: GHC.Base.String,
            outfilename :: GHC.Base.String}
eb54c5795cd87d65034c776d841620e0
  data PairedAln
    = PairedAln {r1prim :: Lib.AlignedRead,
                 r2prim :: Lib.AlignedRead,
                 r1secs :: [Lib.AlignedRead],
                 r2secs :: [Lib.AlignedRead]}
eb54c5795cd87d65034c776d841620e0
  axiom Lib.Rep_AlignedRead::
      GHC.Generics.Rep Lib.AlignedRead
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "AlignedRead"
               "Lib"
               "primerclip-0.3.2.0-4vTju4b4oawFuFWabKwXDg"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "AlignedRead" 'GHC.Generics.PrefixI 'GHC.Types.True)
               ((((GHC.Generics.S1
                     ('GHC.Generics.MetaSel
                        ('GHC.Base.Just "qname")
                        'GHC.Generics.NoSourceUnpackedness
                        'GHC.Generics.NoSourceStrictness
                        'GHC.Generics.DecidedLazy)
                     (GHC.Generics.Rec0 Data.ByteString.Internal.ByteString)
                   GHC.Generics.:*: (GHC.Generics.S1
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "flag")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 GHC.Types.Int)
                                     GHC.Generics.:*: GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "rname")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0 Lib.UChr)))
                  GHC.Generics.:*: ((GHC.Generics.S1
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "pos")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                                     GHC.Generics.:*: GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "endpos")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0
                                                           GHC.Integer.Type.Integer))
                                    GHC.Generics.:*: (GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "mapqual")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                                                      GHC.Generics.:*: GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just "cigar")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            Data.ByteString.Internal.ByteString))))
                 GHC.Generics.:*: (((GHC.Generics.S1
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "trimdcigar")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 Data.ByteString.Internal.ByteString)
                                     GHC.Generics.:*: GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "cigmap")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0 Lib.CigarMap))
                                    GHC.Generics.:*: (GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "trimdcigmap")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0 Lib.CigarMap)
                                                      GHC.Generics.:*: GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just "rnext")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            Data.ByteString.Internal.ByteString)))
                                   GHC.Generics.:*: ((GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "pnext")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                                                      GHC.Generics.:*: GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just "tlen")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            GHC.Integer.Type.Integer))
                                                     GHC.Generics.:*: (GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just
                                                                               "refseq")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            Data.ByteString.Internal.ByteString)
                                                                       GHC.Generics.:*: GHC.Generics.S1
                                                                                          ('GHC.Generics.MetaSel
                                                                                             ('GHC.Base.Just
                                                                                                "basequal")
                                                                                             'GHC.Generics.NoSourceUnpackedness
                                                                                             'GHC.Generics.NoSourceStrictness
                                                                                             'GHC.Generics.DecidedLazy)
                                                                                          (GHC.Generics.Rec0
                                                                                             Data.ByteString.Internal.ByteString)))))
                GHC.Generics.:*: ((((GHC.Generics.S1
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "optfields")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 Data.ByteString.Internal.ByteString)
                                     GHC.Generics.:*: GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "strand")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0
                                                           Data.ByteString.Internal.ByteString))
                                    GHC.Generics.:*: (GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "paired")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0 GHC.Types.Bool)
                                                      GHC.Generics.:*: GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just
                                                                               "mapped")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            GHC.Types.Bool)))
                                   GHC.Generics.:*: ((GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "fint")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0 [Lib.BedRecord])
                                                      GHC.Generics.:*: GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just "rint")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            [Lib.BedRecord]))
                                                     GHC.Generics.:*: (GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just
                                                                               "pintflag")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            GHC.Types.Bool)
                                                                       GHC.Generics.:*: GHC.Generics.S1
                                                                                          ('GHC.Generics.MetaSel
                                                                                             ('GHC.Base.Just
                                                                                                "trimdflag")
                                                                                             'GHC.Generics.NoSourceUnpackedness
                                                                                             'GHC.Generics.NoSourceStrictness
                                                                                             'GHC.Generics.DecidedLazy)
                                                                                          (GHC.Generics.Rec0
                                                                                             GHC.Types.Bool))))
                                  GHC.Generics.:*: (((GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "trimdpos")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                                                      GHC.Generics.:*: GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just
                                                                               "trimdendpos")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            GHC.Integer.Type.Integer))
                                                     GHC.Generics.:*: (GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just
                                                                               "headerstrings")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            Lib.Header)
                                                                       GHC.Generics.:*: GHC.Generics.S1
                                                                                          ('GHC.Generics.MetaSel
                                                                                             ('GHC.Base.Just
                                                                                                "isheader")
                                                                                             'GHC.Generics.NoSourceUnpackedness
                                                                                             'GHC.Generics.NoSourceStrictness
                                                                                             'GHC.Generics.DecidedLazy)
                                                                                          (GHC.Generics.Rec0
                                                                                             GHC.Types.Bool)))
                                                    GHC.Generics.:*: ((GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just "mid")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            Data.ByteString.Internal.ByteString)
                                                                       GHC.Generics.:*: GHC.Generics.S1
                                                                                          ('GHC.Generics.MetaSel
                                                                                             ('GHC.Base.Just
                                                                                                "xmid")
                                                                                             'GHC.Generics.NoSourceUnpackedness
                                                                                             'GHC.Generics.NoSourceStrictness
                                                                                             'GHC.Generics.DecidedLazy)
                                                                                          (GHC.Generics.Rec0
                                                                                             Data.ByteString.Internal.ByteString))
                                                                      GHC.Generics.:*: (GHC.Generics.S1
                                                                                          ('GHC.Generics.MetaSel
                                                                                             ('GHC.Base.Just
                                                                                                "tbed")
                                                                                             'GHC.Generics.NoSourceUnpackedness
                                                                                             'GHC.Generics.NoSourceStrictness
                                                                                             'GHC.Generics.DecidedLazy)
                                                                                          (GHC.Generics.Rec0
                                                                                             Lib.BedRecord)
                                                                                        GHC.Generics.:*: GHC.Generics.S1
                                                                                                           ('GHC.Generics.MetaSel
                                                                                                              ('GHC.Base.Just
                                                                                                                 "trimdToZeroLength")
                                                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                                                              'GHC.Generics.NoSourceStrictness
                                                                                                              'GHC.Generics.DecidedLazy)
                                                                                                           (GHC.Generics.Rec0
                                                                                                              GHC.Types.Bool)))))))
1fc0d837b61ebbaa17edd71f0be30382
  axiom Lib.Rep_BEDPE::
      GHC.Generics.Rep Lib.BEDPE
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "BEDPE"
               "Lib"
               "primerclip-0.3.2.0-4vTju4b4oawFuFWabKwXDg"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "BEDPE" 'GHC.Generics.PrefixI 'GHC.Types.True)
               ((GHC.Generics.S1
                   ('GHC.Generics.MetaSel
                      ('GHC.Base.Just "chr1")
                      'GHC.Generics.NoSourceUnpackedness
                      'GHC.Generics.NoSourceStrictness
                      'GHC.Generics.DecidedLazy)
                   (GHC.Generics.Rec0 Lib.UChr)
                 GHC.Generics.:*: (GHC.Generics.S1
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "start1")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                                   GHC.Generics.:*: GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "end1")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0 GHC.Integer.Type.Integer)))
                GHC.Generics.:*: ((GHC.Generics.S1
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "chr2")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 Lib.UChr)
                                   GHC.Generics.:*: GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "start2")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0 GHC.Integer.Type.Integer))
                                  GHC.Generics.:*: (GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "end2")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                                                    GHC.Generics.:*: GHC.Generics.S1
                                                                       ('GHC.Generics.MetaSel
                                                                          ('GHC.Base.Just
                                                                             "bedpename")
                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                          'GHC.Generics.NoSourceStrictness
                                                                          'GHC.Generics.DecidedLazy)
                                                                       (GHC.Generics.Rec0
                                                                          Data.ByteString.Internal.ByteString)))))
863cf0b2559e3e0bbf1758c760210fb2
  axiom Lib.Rep_BedRecord::
      GHC.Generics.Rep Lib.BedRecord
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "BedRecord"
               "Lib"
               "primerclip-0.3.2.0-4vTju4b4oawFuFWabKwXDg"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "BedRecord" 'GHC.Generics.PrefixI 'GHC.Types.True)
               ((GHC.Generics.S1
                   ('GHC.Generics.MetaSel
                      ('GHC.Base.Just "bedchr")
                      'GHC.Generics.NoSourceUnpackedness
                      'GHC.Generics.NoSourceStrictness
                      'GHC.Generics.DecidedLazy)
                   (GHC.Generics.Rec0 Lib.UChr)
                 GHC.Generics.:*: GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "bedstart")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Integer.Type.Integer))
                GHC.Generics.:*: (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "bedend")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "bedname")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0
                                                        Data.ByteString.Internal.ByteString))))
eb54c5795cd87d65034c776d841620e0
  axiom Lib.Rep_PairedAln::
      GHC.Generics.Rep Lib.PairedAln
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "PairedAln"
               "Lib"
               "primerclip-0.3.2.0-4vTju4b4oawFuFWabKwXDg"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "PairedAln" 'GHC.Generics.PrefixI 'GHC.Types.True)
               ((GHC.Generics.S1
                   ('GHC.Generics.MetaSel
                      ('GHC.Base.Just "r1prim")
                      'GHC.Generics.NoSourceUnpackedness
                      'GHC.Generics.NoSourceStrictness
                      'GHC.Generics.DecidedLazy)
                   (GHC.Generics.Rec0 Lib.AlignedRead)
                 GHC.Generics.:*: GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "r2prim")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 Lib.AlignedRead))
                GHC.Generics.:*: (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "r1secs")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 [Lib.AlignedRead])
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "r2secs")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 [Lib.AlignedRead]))))
3fd0d1813507d3804368ee979449d71a
  axiom Lib.Rep_UChr::
      GHC.Generics.Rep Lib.UChr
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "UChr"
               "Lib"
               "primerclip-0.3.2.0-4vTju4b4oawFuFWabKwXDg"
               'GHC.Types.False)
            ((((((GHC.Generics.C1
                    ('GHC.Generics.MetaCons
                       "C1" 'GHC.Generics.PrefixI 'GHC.Types.False)
                    GHC.Generics.U1
                  GHC.Generics.:+: (GHC.Generics.C1
                                      ('GHC.Generics.MetaCons
                                         "C2" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                      GHC.Generics.U1
                                    GHC.Generics.:+: GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "C3"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1))
                 GHC.Generics.:+: (GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "C4" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: (GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "C5"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1
                                                     GHC.Generics.:+: GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "C6"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1)))
                GHC.Generics.:+: ((GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "C7" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: (GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "C8"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1
                                                     GHC.Generics.:+: GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "C9"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1))
                                  GHC.Generics.:+: ((GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "C10"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1
                                                     GHC.Generics.:+: GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "C11"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1)
                                                    GHC.Generics.:+: (GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "C12"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "C13"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1))))
               GHC.Generics.:+: (((GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "C14" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: (GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "C15"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1
                                                     GHC.Generics.:+: GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "C16"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1))
                                  GHC.Generics.:+: ((GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "C17"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1
                                                     GHC.Generics.:+: GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "C18"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1)
                                                    GHC.Generics.:+: (GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "C19"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "C20"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1)))
                                 GHC.Generics.:+: ((GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "C21"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1
                                                    GHC.Generics.:+: (GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "C22"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "CX"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1))
                                                   GHC.Generics.:+: ((GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "CY"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "CMT"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1)
                                                                     GHC.Generics.:+: (GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "Chr1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "Chr2"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1)))))
              GHC.Generics.:+: ((((GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "Chr3" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: (GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "Chr4"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1
                                                     GHC.Generics.:+: GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "Chr5"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1))
                                  GHC.Generics.:+: ((GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "Chr6"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1
                                                     GHC.Generics.:+: GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "Chr7"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1)
                                                    GHC.Generics.:+: (GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "Chr8"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "Chr9"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1)))
                                 GHC.Generics.:+: ((GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "Chr10"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1
                                                    GHC.Generics.:+: (GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "Chr11"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "Chr12"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1))
                                                   GHC.Generics.:+: ((GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "Chr13"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "Chr14"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1)
                                                                     GHC.Generics.:+: (GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "Chr15"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "Chr16"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1))))
                                GHC.Generics.:+: (((GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "Chr17"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1
                                                    GHC.Generics.:+: (GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "Chr18"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "Chr19"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1))
                                                   GHC.Generics.:+: ((GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "Chr20"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "Chr21"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1)
                                                                     GHC.Generics.:+: (GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "Chr22"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "ChrX"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1)))
                                                  GHC.Generics.:+: ((GHC.Generics.C1
                                                                       ('GHC.Generics.MetaCons
                                                                          "ChrY"
                                                                          'GHC.Generics.PrefixI
                                                                          'GHC.Types.False)
                                                                       GHC.Generics.U1
                                                                     GHC.Generics.:+: (GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "ChrM"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000207P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1))
                                                                    GHC.Generics.:+: ((GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000226P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000229P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1)
                                                                                      GHC.Generics.:+: (GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000231P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1
                                                                                                        GHC.Generics.:+: GHC.Generics.C1
                                                                                                                           ('GHC.Generics.MetaCons
                                                                                                                              "GL000210P1"
                                                                                                                              'GHC.Generics.PrefixI
                                                                                                                              'GHC.Types.False)
                                                                                                                           GHC.Generics.U1))))))
             GHC.Generics.:+: (((((GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "GL000239P1" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: (GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "GL000235P1"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1
                                                     GHC.Generics.:+: GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "GL000201P1"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1))
                                  GHC.Generics.:+: ((GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "GL000247P1"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1
                                                     GHC.Generics.:+: GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "GL000245P1"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1)
                                                    GHC.Generics.:+: (GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "GL000197P1"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000203P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1)))
                                 GHC.Generics.:+: ((GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "GL000246P1"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1
                                                    GHC.Generics.:+: (GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "GL000249P1"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000196P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1))
                                                   GHC.Generics.:+: ((GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "GL000248P1"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000244P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1)
                                                                     GHC.Generics.:+: (GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000238P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000202P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1))))
                                GHC.Generics.:+: (((GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "GL000234P1"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1
                                                    GHC.Generics.:+: (GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "GL000232P1"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000206P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1))
                                                   GHC.Generics.:+: ((GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "GL000240P1"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000236P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1)
                                                                     GHC.Generics.:+: (GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000241P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000243P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1)))
                                                  GHC.Generics.:+: ((GHC.Generics.C1
                                                                       ('GHC.Generics.MetaCons
                                                                          "GL000242P1"
                                                                          'GHC.Generics.PrefixI
                                                                          'GHC.Types.False)
                                                                       GHC.Generics.U1
                                                                     GHC.Generics.:+: (GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000230P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000237P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1))
                                                                    GHC.Generics.:+: ((GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000233P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000204P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1)
                                                                                      GHC.Generics.:+: (GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000198P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1
                                                                                                        GHC.Generics.:+: GHC.Generics.C1
                                                                                                                           ('GHC.Generics.MetaCons
                                                                                                                              "GL000208P1"
                                                                                                                              'GHC.Generics.PrefixI
                                                                                                                              'GHC.Types.False)
                                                                                                                           GHC.Generics.U1)))))
                               GHC.Generics.:+: ((((GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "GL000191P1"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1
                                                    GHC.Generics.:+: (GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "GL000227P1"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000228P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1))
                                                   GHC.Generics.:+: ((GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "GL000214P1"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000221P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1)
                                                                     GHC.Generics.:+: (GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000209P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000218P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1)))
                                                  GHC.Generics.:+: ((GHC.Generics.C1
                                                                       ('GHC.Generics.MetaCons
                                                                          "GL000220P1"
                                                                          'GHC.Generics.PrefixI
                                                                          'GHC.Types.False)
                                                                       GHC.Generics.U1
                                                                     GHC.Generics.:+: (GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000213P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000211P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1))
                                                                    GHC.Generics.:+: ((GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000199P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000217P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1)
                                                                                      GHC.Generics.:+: (GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000216P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1
                                                                                                        GHC.Generics.:+: GHC.Generics.C1
                                                                                                                           ('GHC.Generics.MetaCons
                                                                                                                              "GL000215P1"
                                                                                                                              'GHC.Generics.PrefixI
                                                                                                                              'GHC.Types.False)
                                                                                                                           GHC.Generics.U1))))
                                                 GHC.Generics.:+: (((GHC.Generics.C1
                                                                       ('GHC.Generics.MetaCons
                                                                          "GL000205P1"
                                                                          'GHC.Generics.PrefixI
                                                                          'GHC.Types.False)
                                                                       GHC.Generics.U1
                                                                     GHC.Generics.:+: (GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000219P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000224P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1))
                                                                    GHC.Generics.:+: ((GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000223P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000195P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1)
                                                                                      GHC.Generics.:+: (GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000212P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1
                                                                                                        GHC.Generics.:+: GHC.Generics.C1
                                                                                                                           ('GHC.Generics.MetaCons
                                                                                                                              "GL000222P1"
                                                                                                                              'GHC.Generics.PrefixI
                                                                                                                              'GHC.Types.False)
                                                                                                                           GHC.Generics.U1)))
                                                                   GHC.Generics.:+: ((GHC.Generics.C1
                                                                                        ('GHC.Generics.MetaCons
                                                                                           "GL000200P1"
                                                                                           'GHC.Generics.PrefixI
                                                                                           'GHC.Types.False)
                                                                                        GHC.Generics.U1
                                                                                      GHC.Generics.:+: (GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000193P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1
                                                                                                        GHC.Generics.:+: GHC.Generics.C1
                                                                                                                           ('GHC.Generics.MetaCons
                                                                                                                              "GL000194P1"
                                                                                                                              'GHC.Generics.PrefixI
                                                                                                                              'GHC.Types.False)
                                                                                                                           GHC.Generics.U1))
                                                                                     GHC.Generics.:+: ((GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000225P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1
                                                                                                        GHC.Generics.:+: GHC.Generics.C1
                                                                                                                           ('GHC.Generics.MetaCons
                                                                                                                              "GL000192P1"
                                                                                                                              'GHC.Generics.PrefixI
                                                                                                                              'GHC.Types.False)
                                                                                                                           GHC.Generics.U1)
                                                                                                       GHC.Generics.:+: (GHC.Generics.C1
                                                                                                                           ('GHC.Generics.MetaCons
                                                                                                                              "NC_007605"
                                                                                                                              'GHC.Generics.PrefixI
                                                                                                                              'GHC.Types.False)
                                                                                                                           GHC.Generics.U1
                                                                                                                         GHC.Generics.:+: GHC.Generics.C1
                                                                                                                                            ('GHC.Generics.MetaCons
                                                                                                                                               "NONE"
                                                                                                                                               'GHC.Generics.PrefixI
                                                                                                                                               'GHC.Types.False)
                                                                                                                                            GHC.Generics.U1)))))))
ceb4d0ea9cbcc5b1524e546fcc802235
  data RunStats
    = RunStats {alnsTotal :: GHC.Integer.Type.Integer,
                alnsMapped :: GHC.Integer.Type.Integer,
                alnsTrimd :: GHC.Integer.Type.Integer,
                alnsTrimdToZero :: GHC.Integer.Type.Integer,
                trimmedPct :: GHC.Types.Double,
                mappedPct :: GHC.Types.Double}
0e39a68e97ea05a6b5ebd29db62083ec
  type SAM = (Lib.Header, Lib.Alignments)
69814aa9d1fbec2649c78c6d1eb24076
  data SAMFlag
    = SAMFlag {pairedRead :: GHC.Types.Bool,
               mateMapped :: GHC.Types.Bool,
               notMapped :: GHC.Types.Bool,
               pairNotMapped :: GHC.Types.Bool,
               queryPlus :: GHC.Types.Bool,
               mateNeg :: GHC.Types.Bool,
               fstInPair :: GHC.Types.Bool,
               sndInPair :: GHC.Types.Bool,
               notPrimary :: GHC.Types.Bool,
               failedQC :: GHC.Types.Bool,
               dupRead :: GHC.Types.Bool,
               intflag :: GHC.Types.Int}
3fd0d1813507d3804368ee979449d71a
  data UChr
    = C1
    | C2
    | C3
    | C4
    | C5
    | C6
    | C7
    | C8
    | C9
    | C10
    | C11
    | C12
    | C13
    | C14
    | C15
    | C16
    | C17
    | C18
    | C19
    | C20
    | C21
    | C22
    | CX
    | CY
    | CMT
    | Chr1
    | Chr2
    | Chr3
    | Chr4
    | Chr5
    | Chr6
    | Chr7
    | Chr8
    | Chr9
    | Chr10
    | Chr11
    | Chr12
    | Chr13
    | Chr14
    | Chr15
    | Chr16
    | Chr17
    | Chr18
    | Chr19
    | Chr20
    | Chr21
    | Chr22
    | ChrX
    | ChrY
    | ChrM
    | GL000207P1
    | GL000226P1
    | GL000229P1
    | GL000231P1
    | GL000210P1
    | GL000239P1
    | GL000235P1
    | GL000201P1
    | GL000247P1
    | GL000245P1
    | GL000197P1
    | GL000203P1
    | GL000246P1
    | GL000249P1
    | GL000196P1
    | GL000248P1
    | GL000244P1
    | GL000238P1
    | GL000202P1
    | GL000234P1
    | GL000232P1
    | GL000206P1
    | GL000240P1
    | GL000236P1
    | GL000241P1
    | GL000243P1
    | GL000242P1
    | GL000230P1
    | GL000237P1
    | GL000233P1
    | GL000204P1
    | GL000198P1
    | GL000208P1
    | GL000191P1
    | GL000227P1
    | GL000228P1
    | GL000214P1
    | GL000221P1
    | GL000209P1
    | GL000218P1
    | GL000220P1
    | GL000213P1
    | GL000211P1
    | GL000199P1
    | GL000217P1
    | GL000216P1
    | GL000215P1
    | GL000205P1
    | GL000219P1
    | GL000224P1
    | GL000223P1
    | GL000195P1
    | GL000212P1
    | GL000222P1
    | GL000200P1
    | GL000193P1
    | GL000194P1
    | GL000225P1
    | GL000192P1
    | NC_007605
    | NONE
15e5b6177934b254f027f02ba101d502
  addprimerints ::
    Lib.CMap -> Lib.CMap -> Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,1*U><L,1*U><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,A,A,A,U,U,U,U,U,U,U,U,U)>,
     Unfolding: (\ (fpmap :: Lib.CMap)
                   (rpmap :: Lib.CMap)
                   (aln :: Lib.AlignedRead) ->
                 case aln of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 let {
                   starthits :: [Lib.BedRecord]
                   = Data.Maybe.catMaybes1
                       @ Lib.BedRecord
                       (GHC.Base.map
                          @ (Data.IntMap.Internal.IntMap Lib.BedRecord)
                          @ (GHC.Base.Maybe Lib.BedRecord)
                          (let {
                             lvl1008 :: GHC.Types.Int
                             = case GHC.Integer.Type.integerToInt ds9 of wild1 { DEFAULT ->
                               GHC.Types.I# wild1 }
                           } in
                           \ (bmap :: Data.IntMap.Internal.IntMap Lib.BedRecord) ->
                           Data.IntMap.Internal.lookup @ Lib.BedRecord lvl1008 bmap)
                          (Data.Maybe.catMaybes1
                             @ (Data.IntMap.Internal.IntMap Lib.BedRecord)
                             (GHC.Types.:
                                @ (GHC.Base.Maybe (Data.IntMap.Internal.IntMap Lib.BedRecord))
                                (Lib.$slookup1
                                   @ (Data.IntMap.Internal.IntMap Lib.BedRecord)
                                   ds8
                                   fpmap)
                                (GHC.Types.[]
                                   @ (GHC.Base.Maybe
                                        (Data.IntMap.Internal.IntMap Lib.BedRecord))))))
                 } in
                 let {
                   endhits :: [Lib.BedRecord]
                   = Data.Maybe.catMaybes1
                       @ Lib.BedRecord
                       (GHC.Base.map
                          @ (Data.IntMap.Internal.IntMap Lib.BedRecord)
                          @ (GHC.Base.Maybe Lib.BedRecord)
                          (let {
                             lvl1008 :: GHC.Types.Int
                             = case GHC.Integer.Type.integerToInt ds10 of wild1 { DEFAULT ->
                               GHC.Types.I# wild1 }
                           } in
                           \ (bmap :: Data.IntMap.Internal.IntMap Lib.BedRecord) ->
                           Data.IntMap.Internal.lookup @ Lib.BedRecord lvl1008 bmap)
                          (Data.Maybe.catMaybes1
                             @ (Data.IntMap.Internal.IntMap Lib.BedRecord)
                             (GHC.Types.:
                                @ (GHC.Base.Maybe (Data.IntMap.Internal.IntMap Lib.BedRecord))
                                (Lib.$slookup1
                                   @ (Data.IntMap.Internal.IntMap Lib.BedRecord)
                                   ds8
                                   rpmap)
                                (GHC.Types.[]
                                   @ (GHC.Base.Maybe
                                        (Data.IntMap.Internal.IntMap Lib.BedRecord))))))
                 } in
                 Lib.AlignedRead
                   ds6
                   ds7
                   ds8
                   ds9
                   ds10
                   ds11
                   ds12
                   ds13
                   ds14
                   ds15
                   ds16
                   ds17
                   ds18
                   ds19
                   ds20
                   ds21
                   ds22
                   ds23
                   ds24
                   starthits
                   endhits
                   (case GHC.List.$wlenAcc
                           @ Lib.BedRecord
                           (Data.OldList.sortBy
                              @ Lib.BedRecord
                              Lib.$fOrdBedRecord_$ccompare
                              (GHC.Base.++ @ Lib.BedRecord starthits endhits))
                           0# of ww2 { DEFAULT ->
                    GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.># ww2 0#) })
                   ds28
                   ds29
                   ds30
                   ds31
                   ds32
                   ds33
                   ds34
                   ds35
                   ds36 }) -}
b2eb3cd176c35a4c76ef12b2f6927c12
  addprimerintsPairedAln ::
    Lib.CMap -> Lib.CMap -> Lib.PairedAln -> Lib.PairedAln
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U><L,U><S,1*U(1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,A,A,A,U,U,U,U,U,U,U,U,U),1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,A,A,A,U,U,U,U,U,U,U,U,U),1*U,1*U)>m,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Lib.CMap) (w1 :: Lib.CMap) (w2 :: Lib.PairedAln) ->
                 case w2 of ww { Lib.PairedAln ww1 ww2 ww3 ww4 ->
                 let {
                   addpints :: Lib.AlignedRead -> Lib.AlignedRead {- Arity: 1 -}
                   = Lib.addprimerints w w1
                 } in
                 Lib.PairedAln
                   (Lib.addprimerints w w1 ww1)
                   (Lib.addprimerints w w1 ww2)
                   (GHC.Base.map @ Lib.AlignedRead @ Lib.AlignedRead addpints ww3)
                   (GHC.Base.map
                      @ Lib.AlignedRead
                      @ Lib.AlignedRead
                      addpints
                      ww4) }) -}
b4d6021437242368a6773bce1ac10608
  addtrimtag :: Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 1,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLSLLLLLLLL),1*U(U,U(U),U,U,U,U,U,U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Unfolding: (\ (a :: Lib.AlignedRead) ->
                 case a of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 let {
                   $j :: Lib.AlignedRead <join 0>
                   = case ds28 of wild1 {
                       GHC.Types.False -> wild
                       GHC.Types.True
                       -> Lib.AlignedRead
                            ds6
                            (case ds7 of wild2 { GHC.Types.I# x# ->
                             GHC.Types.I# (GHC.Prim.orI# (GHC.Prim.andI# x# -3#) 4#) })
                            ds8
                            ds9
                            ds10
                            ds11
                            ds12
                            ds13
                            ds14
                            ds15
                            ds16
                            ds17
                            ds18
                            ds19
                            ds20
                            (Data.ByteString.concat
                               (GHC.Types.:
                                  @ Data.ByteString.Internal.ByteString
                                  ds21
                                  Lib.addtrimtag6))
                            ds22
                            ds23
                            ds24
                            ds25
                            ds26
                            ds27
                            GHC.Types.True
                            ds29
                            ds30
                            ds31
                            ds32
                            ds33
                            ds34
                            ds35
                            ds36 }
                 } in
                 case ds28 of wild1 {
                   GHC.Types.False -> $j
                   GHC.Types.True
                   -> case ds13 of wild2 { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                      case Lib.addtrimtag5 of wild3 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim./=# dt3 dt7) of wild4 {
                        GHC.Types.False
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.eqAddr# dt dt4) of wild5 {
                             GHC.Types.False
                             -> case Data.ByteString.Internal.$wcompareBytes
                                       dt
                                       dt1
                                       dt2
                                       dt3
                                       dt4
                                       dt5
                                       dt6
                                       dt7 of wild6 {
                                  DEFAULT
                                  -> Lib.AlignedRead
                                       ds6
                                       ds7
                                       ds8
                                       ds9
                                       ds10
                                       ds11
                                       ds12
                                       wild2
                                       ds14
                                       ds15
                                       ds16
                                       ds17
                                       ds18
                                       ds19
                                       ds20
                                       (Data.ByteString.concat
                                          (GHC.Types.:
                                             @ Data.ByteString.Internal.ByteString
                                             ds21
                                             Lib.addtrimtag1))
                                       ds22
                                       ds23
                                       ds24
                                       ds25
                                       ds26
                                       ds27
                                       GHC.Types.True
                                       ds29
                                       ds30
                                       ds31
                                       ds32
                                       ds33
                                       ds34
                                       ds35
                                       ds36
                                  GHC.Types.EQ -> $j }
                             GHC.Types.True
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.==# dt2 dt6) of wild6 {
                                  GHC.Types.False
                                  -> case Data.ByteString.Internal.$wcompareBytes
                                            dt
                                            dt1
                                            dt2
                                            dt3
                                            dt4
                                            dt5
                                            dt6
                                            dt7 of wild7 {
                                       DEFAULT
                                       -> Lib.AlignedRead
                                            ds6
                                            ds7
                                            ds8
                                            ds9
                                            ds10
                                            ds11
                                            ds12
                                            wild2
                                            ds14
                                            ds15
                                            ds16
                                            ds17
                                            ds18
                                            ds19
                                            ds20
                                            (Data.ByteString.concat
                                               (GHC.Types.:
                                                  @ Data.ByteString.Internal.ByteString
                                                  ds21
                                                  Lib.addtrimtag1))
                                            ds22
                                            ds23
                                            ds24
                                            ds25
                                            ds26
                                            ds27
                                            GHC.Types.True
                                            ds29
                                            ds30
                                            ds31
                                            ds32
                                            ds33
                                            ds34
                                            ds35
                                            ds36
                                       GHC.Types.EQ -> $j }
                                  GHC.Types.True -> $j } }
                        GHC.Types.True
                        -> Lib.AlignedRead
                             ds6
                             ds7
                             ds8
                             ds9
                             ds10
                             ds11
                             ds12
                             wild2
                             ds14
                             ds15
                             ds16
                             ds17
                             ds18
                             ds19
                             ds20
                             (Data.ByteString.concat
                                (GHC.Types.:
                                   @ Data.ByteString.Internal.ByteString
                                   ds21
                                   Lib.addtrimtag1))
                             ds22
                             ds23
                             ds24
                             ds25
                             ds26
                             ds27
                             GHC.Types.True
                             ds29
                             ds30
                             ds31
                             ds32
                             ds33
                             ds34
                             ds35
                             ds36 } } } } }) -}
ff73eefcecfed40b6b66b0777aea9b0c
  addtrimtag1 :: [Data.ByteString.Internal.ByteString]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.ByteString.Internal.ByteString
                   Lib.addtrimtag4
                   Lib.addtrimtag2) -}
45127aa970efe337da901649141f1f58
  addtrimtag2 :: [Data.ByteString.Internal.ByteString]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.ByteString.Internal.ByteString
                   Lib.addtrimtag3
                   (GHC.Types.[] @ Data.ByteString.Internal.ByteString)) -}
37c69a78a39e5b7e5ae41909b1478f30
  addtrimtag3 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.addtrimtag_addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.addtrimtag_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
e801b26ed69643ac226911184765fffb
  addtrimtag4 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.addtrimtag_addr#1
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.addtrimtag_addr#1
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
018f9938dee6db88cf6b857f97a91f0e
  addtrimtag5 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.addtrimtag_addr#2
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.addtrimtag_addr#2
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
8b6f2dc2a552770e2fca5ad896e99b59
  addtrimtag6 :: [Data.ByteString.Internal.ByteString]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.ByteString.Internal.ByteString
                   Lib.addtrimtag4
                   Lib.addtrimtag7) -}
b3084098eca132272f225828a6db8c87
  addtrimtag7 :: [Data.ByteString.Internal.ByteString]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.ByteString.Internal.ByteString
                   Lib.addtrimtag8
                   (GHC.Types.[] @ Data.ByteString.Internal.ByteString)) -}
2f32a29902a9dd5cb6d45efa061b3b50
  addtrimtag8 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.addtrimtag_addr#3
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.addtrimtag_addr#3
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
509897deeb447de35415153db7466a2b
  addtrimtag_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("CO:Z:primer_trimmed"#) -}
ffff1213c80d210c6f9a4baa9e7116fe
  addtrimtag_addr#1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("\t"#) -}
c8befda9fd040f5358913d51319830d9
  addtrimtag_addr#2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("*"#) -}
931358db5e89760a22fcdabc4f8a6d6e
  addtrimtag_addr#3 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("CO:Z:zero_alignment_length_after_primer_trim"#) -}
fb84f71f5b339c73aabfb3d491b3685b
  adjustcrds ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> [(GHC.Integer.Type.Integer,
         Data.ByteString.Internal.ByteString)]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (cigs :: [(GHC.Integer.Type.Integer,
                              Data.ByteString.Internal.ByteString)]) ->
                 case cigs of wild {
                   []
                   -> GHC.Types.[]
                        @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                   : x xs
                   -> GHC.Types.:
                        @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                        x
                        (case GHC.List.$wscanlGo
                                @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                                @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                                @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                                @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                                Lib.shiftcrds
                                x
                                xs of ww { (#,#) ww1 ww2 ->
                         ww2 }) }) -}
46d3e1bfd01813c0d3725972ef78179f
  alignmentsetparser ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString [Lib.AlignedRead]
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.alignmentsetparser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <[Lib.AlignedRead]>_R)) -}
cae82040db4747704e7c61ea947f9b71
  alignmentsetparser1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [Lib.AlignedRead]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [Lib.AlignedRead]
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$walignmentsetparser
                   @ r
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww8
                   w2
                   w3
                   w4 } }) -}
4a42c0132578cf4cc49fa157a2180c5b
  allPairedAln ::
    (Lib.AlignedRead -> GHC.Types.Bool)
    -> Lib.PairedAln -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <C(S),C(U)><L,U(1*U,1*U,1*U,U)>,
     Unfolding: (\ (b :: Lib.AlignedRead -> GHC.Types.Bool)
                   (p :: Lib.PairedAln) ->
                 case b (case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                         ds6 }) of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case b (case p of wild1 { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                              ds7 }) of wild1 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case p of wild2 { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                           let {
                             $j :: GHC.Types.Bool <join 0>
                             = letrec {
                                 go20 :: [Lib.AlignedRead] -> GHC.Types.Bool
                                   <join 1> {- Arity: 1, Strictness: <S,1*U> -}
                                 = \ (ds10 :: [Lib.AlignedRead]) ->
                                   case ds10 of wild3 {
                                     [] -> GHC.Types.False
                                     : y ys
                                     -> case b y of wild4 {
                                          GHC.Types.False -> go20 ys
                                          GHC.Types.True -> GHC.Types.True } }
                               } in
                               go20 ds9
                           } in
                           letrec {
                             go20 :: [Lib.AlignedRead] -> GHC.Types.Bool
                               <join 1> {- Arity: 1, Strictness: <S,1*U> -}
                             = \ (ds10 :: [Lib.AlignedRead]) ->
                               case ds10 of wild3 {
                                 [] -> GHC.Types.False
                                 : y ys
                                 -> case b y of wild4 {
                                      GHC.Types.False -> go20 ys GHC.Types.True -> $j } }
                           } in
                           go20 ds8 } } }) -}
9397824cc9d01cf75666f6f250a9bd4d
  alncount :: Lib.MidFamily -> GHC.Integer.Type.Integer
  RecSel Left Lib.MidFamily
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSLLLL),1*U(A,A,A,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MidFamily) ->
                 case ds6 of wild { Lib.MidFamily ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds12 }) -}
9397824cc9d01cf75666f6f250a9bd4d
  alnend :: Lib.MidFamily -> GHC.Integer.Type.Integer
  RecSel Left Lib.MidFamily
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLL),1*U(A,A,1*U,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MidFamily) ->
                 case ds6 of wild { Lib.MidFamily ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds9 }) -}
faa05e7fb38bd2ab551780eb4ca37428
  alnparser ::
    Data.Attoparsec.ByteString.Internal.Parser Lib.AlignedRead
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.alnparser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <Lib.AlignedRead>_R)) -}
2609aa57156cfaf4fb4565e8bd4e1109
  alnparser1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.AlignedRead
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.AlignedRead
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$walnparser @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
9397824cc9d01cf75666f6f250a9bd4d
  alns :: Lib.MidFamily -> [Lib.AlignedRead]
  RecSel Left Lib.MidFamily
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLLLLL),1*U(A,A,A,A,1*U,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MidFamily) ->
                 case ds6 of wild { Lib.MidFamily ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds11 }) -}
ceb4d0ea9cbcc5b1524e546fcc802235
  alnsMapped :: Lib.RunStats -> GHC.Integer.Type.Integer
  RecSel Left Lib.RunStats
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLL),1*U(A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.RunStats) ->
                 case ds6 of wild { Lib.RunStats ds7 ds8 ds9 ds10 ds11 ds12 ->
                 ds8 }) -}
24682463f9faa95c582966b8a66eaf04
  alnsToPairedAln :: [Lib.AlignedRead] -> Lib.PairedAln
  {- Arity: 1, Strictness: <S,1*U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: [Lib.AlignedRead]) ->
                 case Lib.$walnsToPairedAln w of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 Lib.PairedAln ww1 ww2 ww3 ww4 }) -}
82a978574ea8ba2e1d4ffe421fad5061
  alnsToPairedAln1 :: Lib.AlignedRead
  {- Strictness: x -}
ceb4d0ea9cbcc5b1524e546fcc802235
  alnsTotal :: Lib.RunStats -> GHC.Integer.Type.Integer
  RecSel Left Lib.RunStats
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLL),1*U(1*U,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.RunStats) ->
                 case ds6 of wild { Lib.RunStats ds7 ds8 ds9 ds10 ds11 ds12 ->
                 ds7 }) -}
ceb4d0ea9cbcc5b1524e546fcc802235
  alnsTrimd :: Lib.RunStats -> GHC.Integer.Type.Integer
  RecSel Left Lib.RunStats
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLL),1*U(A,A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.RunStats) ->
                 case ds6 of wild { Lib.RunStats ds7 ds8 ds9 ds10 ds11 ds12 ->
                 ds9 }) -}
ceb4d0ea9cbcc5b1524e546fcc802235
  alnsTrimdToZero :: Lib.RunStats -> GHC.Integer.Type.Integer
  RecSel Left Lib.RunStats
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLL),1*U(A,A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.RunStats) ->
                 case ds6 of wild { Lib.RunStats ds7 ds8 ds9 ds10 ds11 ds12 ->
                 ds10 }) -}
9397824cc9d01cf75666f6f250a9bd4d
  alnstart :: Lib.MidFamily -> GHC.Integer.Type.Integer
  RecSel Left Lib.MidFamily
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLLLLL),1*U(A,1*U,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MidFamily) ->
                 case ds6 of wild { Lib.MidFamily ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds8 }) -}
f787beffe9d63a27819bb96e559dbf3d
  anyPairedAln ::
    (Lib.AlignedRead -> GHC.Types.Bool)
    -> Lib.PairedAln -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <C(S),C(U)><L,U(1*U,1*U,1*U,U)>,
     Unfolding: (\ (b :: Lib.AlignedRead -> GHC.Types.Bool)
                   (p :: Lib.PairedAln) ->
                 case b (case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                         ds6 }) of wild {
                   GHC.Types.False
                   -> case b (case p of wild1 { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                              ds7 }) of wild1 {
                        GHC.Types.False
                        -> case p of wild2 { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                           let {
                             $j :: GHC.Types.Bool <join 0>
                             = letrec {
                                 go20 :: [Lib.AlignedRead] -> GHC.Types.Bool
                                   <join 1> {- Arity: 1, Strictness: <S,1*U> -}
                                 = \ (ds10 :: [Lib.AlignedRead]) ->
                                   case ds10 of wild3 {
                                     [] -> GHC.Types.False
                                     : y ys
                                     -> case b y of wild4 {
                                          GHC.Types.False -> go20 ys
                                          GHC.Types.True -> GHC.Types.True } }
                               } in
                               go20 ds9
                           } in
                           letrec {
                             go20 :: [Lib.AlignedRead] -> GHC.Types.Bool
                               <join 1> {- Arity: 1, Strictness: <S,1*U> -}
                             = \ (ds10 :: [Lib.AlignedRead]) ->
                               case ds10 of wild3 {
                                 [] -> $j
                                 : y ys
                                 -> case b y of wild4 {
                                      GHC.Types.False -> go20 ys
                                      GHC.Types.True -> GHC.Types.True } }
                           } in
                           go20 ds8 }
                        GHC.Types.True -> GHC.Types.True }
                   GHC.Types.True -> GHC.Types.True }) -}
216c6db87302a95edc5fd14452b6cd8b
  anyPrimerIntAln :: Lib.PairedAln -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(S(LLLLLLLLLLLLLLLLLLLLLSLLLLLLLLL)LLL),1*U(1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A),1*U,U)>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.PairedAln) ->
                 case w of ww { Lib.PairedAln ww1 ww2 ww3 ww4 ->
                 case ww1 of ww5 { Lib.AlignedRead ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ww36 ->
                 Lib.$wanyPrimerIntAln ww27 ww2 ww3 ww4 } }) -}
12f08bb617f6f4cda4dbbecbd597f1d7
  anyPrimerIntAln_go :: [Lib.AlignedRead] -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
eb54c5795cd87d65034c776d841620e0
  basequal :: Lib.AlignedRead -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLSLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds21 }) -}
e72c72bc99872efc1fe6b14b1a4caeda
  bedPEparser :: Data.Attoparsec.ByteString.Internal.Parser Lib.BEDPE
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.bedPEparser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <Lib.BEDPE>_R)) -}
503cc5eb3178fd727304a4628a46cf60
  bedPEparser1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.BEDPE
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.BEDPE
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wbedPEparser @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
863cf0b2559e3e0bbf1758c760210fb2
  bedchr :: Lib.BedRecord -> Lib.UChr
  RecSel Left Lib.BedRecord
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLLL),1*U(1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.BedRecord) ->
                 case ds6 of wild { Lib.BedRecord ds7 ds8 ds9 ds10 -> ds7 }) -}
863cf0b2559e3e0bbf1758c760210fb2
  bedend :: Lib.BedRecord -> GHC.Integer.Type.Integer
  RecSel Left Lib.BedRecord
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLSL),1*U(A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.BedRecord) ->
                 case ds6 of wild { Lib.BedRecord ds7 ds8 ds9 ds10 -> ds9 }) -}
cdc6feb87811bfab4c5f977882a9971d
  bedmaplookup ::
    GHC.Integer.Type.Integer
    -> Data.IntMap.Internal.IntMap Lib.BedRecord
    -> GHC.Base.Maybe Lib.BedRecord
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (pos1 :: GHC.Integer.Type.Integer)
                   (bmap :: Data.IntMap.Internal.IntMap Lib.BedRecord) ->
                 case GHC.Integer.Type.integerToInt pos1 of wild { DEFAULT ->
                 Data.IntMap.Internal.$wlookup @ Lib.BedRecord wild bmap }) -}
863cf0b2559e3e0bbf1758c760210fb2
  bedname :: Lib.BedRecord -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.BedRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLS),1*U(A,A,A,1*U(U,U,U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.BedRecord) ->
                 case ds6 of wild { Lib.BedRecord ds7 ds8 ds9 ds10 -> ds10 }) -}
366f09493c9cd31875b177708fb21348
  bedpeToFbed :: Lib.BEDPE -> Lib.BedRecord
  {- Arity: 1, Strictness: <L,U(1*U,1*U,1*U,A,A,A,1*U)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.BEDPE) ->
                 Lib.BedRecord
                   (case w of wild { Lib.BEDPE ds6 ds7 ds8 ds9 ds10 ds11 ds12 ->
                    ds6 })
                   (case w of wild { Lib.BEDPE ds6 ds7 ds8 ds9 ds10 ds11 ds12 ->
                    ds7 })
                   (case w of wild { Lib.BEDPE ds6 ds7 ds8 ds9 ds10 ds11 ds12 ->
                    ds8 })
                   (GHC.Base.mappend
                      @ Data.ByteString.Internal.ByteString
                      Data.ByteString.Internal.$fMonoidByteString
                      (case w of wild { Lib.BEDPE ds6 ds7 ds8 ds9 ds10 ds11 ds12 ->
                       ds12 })
                      Lib.bedpeToFbed1)) -}
2c4f8e2763c787dfb1e5088621e34a3e
  bedpeToFbed1 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.bedpeToFbed_addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.bedpeToFbed_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
0dccc0612eaad7c8561cda053a9042fd
  bedpeToFbed_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("_F"#) -}
314111f5647c66b8b2aa59dd9666e711
  bedpeToRbed :: Lib.BEDPE -> Lib.BedRecord
  {- Arity: 1, Strictness: <L,U(A,A,A,1*U,1*U,1*U,1*U)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.BEDPE) ->
                 Lib.BedRecord
                   (case w of wild { Lib.BEDPE ds6 ds7 ds8 ds9 ds10 ds11 ds12 ->
                    ds9 })
                   (case w of wild { Lib.BEDPE ds6 ds7 ds8 ds9 ds10 ds11 ds12 ->
                    ds10 })
                   (case w of wild { Lib.BEDPE ds6 ds7 ds8 ds9 ds10 ds11 ds12 ->
                    ds11 })
                   (GHC.Base.mappend
                      @ Data.ByteString.Internal.ByteString
                      Data.ByteString.Internal.$fMonoidByteString
                      (case w of wild { Lib.BEDPE ds6 ds7 ds8 ds9 ds10 ds11 ds12 ->
                       ds12 })
                      Lib.bedpeToRbed1)) -}
5220dbe5d1bed7502beaa56123602405
  bedpeToRbed1 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.bedpeToRbed_addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.bedpeToRbed_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
19cfbefb238124d93178fa4c58bfb85c
  bedpeToRbed_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("_R"#) -}
69605119a398f29c235919bcd7f9bece
  bedpeformat :: Lib.Opts -> GHC.Types.Bool
  RecSel Left Lib.Opts
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLLL),1*U(1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.Opts) ->
                 case ds6 of wild { Lib.Opts ds7 ds8 ds9 ds10 -> ds7 }) -}
1fc0d837b61ebbaa17edd71f0be30382
  bedpename :: Lib.BEDPE -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.BEDPE
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLS),1*U(A,A,A,A,A,A,1*U(U,U,U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.BEDPE) ->
                 case ds6 of wild { Lib.BEDPE ds7 ds8 ds9 ds10 ds11 ds12 ds13 ->
                 ds13 }) -}
ea5071f9a21a3450c0cda265dbab7f8c
  bedrecparser ::
    Data.Attoparsec.ByteString.Internal.Parser Lib.BedRecord
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.bedrecparser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <Lib.BedRecord>_R)) -}
a68f7005bb8d254ee87c2525cf817ad6
  bedrecparser1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.BedRecord
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.BedRecord
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wbedrecparser @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
863cf0b2559e3e0bbf1758c760210fb2
  bedstart :: Lib.BedRecord -> GHC.Integer.Type.Integer
  RecSel Left Lib.BedRecord
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSLL),1*U(A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.BedRecord) ->
                 case ds6 of wild { Lib.BedRecord ds7 ds8 ds9 ds10 -> ds8 }) -}
268f0faf852c6ddc99edd8a6e68105de
  boolZeroLengthCigar ::
    Data.ByteString.Internal.ByteString -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S(SLSS),1*U(U,U,U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.ByteString.Internal.ByteString) ->
                 case w of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wboolZeroLengthCigar ww1 ww2 ww3 ww4 }) -}
8bf5e81070fad45318e76acba4193a65
  boolZeroLengthCigar_go :: [GHC.Types.Char] -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S,1*U> -}
072c43e891629ec5db55f930ca0d30d6
  calcMappedCount ::
    GHC.Real.Integral i =>
    Data.Conduit.Internal.Conduit.ConduitM
      Lib.AlignedRead
      c
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      i
  {- Arity: 1, HasNoCafRefs,
     Strictness: <L,1*U(1*U(1*U(C(C1(U)),A,A,A,A,A,C(U)),A,A),A,A,A,A,A,A,A,A)> -}
0cb4cb5e828df0cd17d82f763fe9ec43
  calcMappedCount1 ::
    (GHC.Integer.Type.Integer
     -> Data.Conduit.Internal.Pipe.Pipe
          Lib.AlignedRead
          Lib.AlignedRead
          c
          ()
          (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
          b1)
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         c
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         b1
  {- Arity: 1, Strictness: <L,C(U)> -}
ad454cd30eee61ffd3e6bd1be0516979
  calcNotMappedPct ::
    Data.Conduit.Internal.Conduit.Sink
      Lib.AlignedRead
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      GHC.Types.Double
  {- Arity: 1, Strictness: <L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Lib.calcNotMappedPct1
                  `cast`
                (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                          <Lib.AlignedRead>_N
                          <Data.Void.Void>_N
                          <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                          <GHC.Types.Double>_R)) -}
ede38d839f06b74466aa8a21898b435d
  calcNotMappedPct1 ::
    (GHC.Types.Double
     -> Data.Conduit.Internal.Pipe.Pipe
          Lib.AlignedRead
          Lib.AlignedRead
          Data.Void.Void
          ()
          (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
          b1)
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         b1
  {- Arity: 1, Strictness: <L,C(U)>,
     Unfolding: (\ @ b1
                   (eta :: GHC.Types.Double
                           -> Data.Conduit.Internal.Pipe.Pipe
                                Lib.AlignedRead
                                Lib.AlignedRead
                                Data.Void.Void
                                ()
                                (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                                b1) ->
                 Data.Conduit.Internal.Conduit.$fApplicativeZipSink2
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ Lib.AlignedRead
                   @ (GHC.Integer.Type.Integer -> GHC.Types.Double)
                   @ GHC.Integer.Type.Integer
                   Lib.$s$fMonadResourceT
                   Lib.calcNotMappedPct3
                     `cast`
                   (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                             <Lib.AlignedRead>_N
                             <Data.Void.Void>_N
                             <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                             <GHC.Integer.Type.Integer -> GHC.Types.Double>_R))
                   Lib.calcNotMappedPct2
                     `cast`
                   (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                             <Lib.AlignedRead>_N
                             <Data.Void.Void>_N
                             <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                             <GHC.Integer.Type.Integer>_R))
                   @ b1
                   (\ (a1 :: (GHC.Integer.Type.Integer -> GHC.Types.Double,
                              GHC.Integer.Type.Integer)) ->
                    eta (case a1 of wild { (,) x ds6 -> x ds6 }))) -}
5e6ef1c8bc7bc09a0eb40157533e3141
  calcNotMappedPct2 ::
    (GHC.Integer.Type.Integer
     -> Data.Conduit.Internal.Pipe.Pipe
          Lib.AlignedRead
          Lib.AlignedRead
          Data.Void.Void
          ()
          (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
          b)
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         b
  {- Arity: 1, Strictness: <L,C(U)>m2,
     Unfolding: (\ @ b
                   (w :: GHC.Integer.Type.Integer
                         -> Data.Conduit.Internal.Pipe.Pipe
                              Lib.AlignedRead
                              Lib.AlignedRead
                              Data.Void.Void
                              ()
                              (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                              b) ->
                 case Lib.$wloop Lib.defaultBed2 @ b w of ww { (#,#) ww1 ww2 ->
                 Data.Conduit.Internal.Pipe.NeedInput
                   @ Lib.AlignedRead
                   @ Lib.AlignedRead
                   @ Data.Void.Void
                   @ ()
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ b
                   ww1
                   ww2 }) -}
9ba9ce5f996f4f7f61ee85608ea0020d
  calcNotMappedPct3 ::
    ((GHC.Integer.Type.Integer -> GHC.Types.Double)
     -> Data.Conduit.Internal.Pipe.Pipe
          Lib.AlignedRead
          Lib.AlignedRead
          Data.Void.Void
          ()
          (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
          b1)
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         b1
  {- Arity: 1, Strictness: <L,C(U)> -}
6f145864403ec1ce236231f526364761
  calcRunStats ::
    Data.Conduit.Internal.Conduit.ZipSink
      Lib.AlignedRead
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      Lib.RunStats
  {- Arity: 1, Strictness: <L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Lib.calcRunStats1
                  `cast`
                (Trans
                     (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                               <Lib.AlignedRead>_N
                               <Data.Void.Void>_N
                               <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                               <Lib.RunStats>_R))
                     (Sym (Data.Conduit.Internal.Conduit.N:ZipSink[0]
                               <Lib.AlignedRead>_N) <Control.Monad.Trans.Resource.Internal.ResourceT
                                                       GHC.Types.IO>_N <Lib.RunStats>_N)) -}
72daa724f9856109aa54f4c16562def8
  calcRunStats1 ::
    (Lib.RunStats
     -> Data.Conduit.Internal.Pipe.Pipe
          Lib.AlignedRead
          Lib.AlignedRead
          Data.Void.Void
          ()
          (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
          b1)
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         b1
  {- Arity: 1, Strictness: <L,C(U)>,
     Unfolding: (\ @ b1
                   (eta :: Lib.RunStats
                           -> Data.Conduit.Internal.Pipe.Pipe
                                Lib.AlignedRead
                                Lib.AlignedRead
                                Data.Void.Void
                                ()
                                (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                                b1) ->
                 Data.Conduit.Internal.Conduit.$fApplicativeZipSink2
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ Lib.AlignedRead
                   @ (GHC.Integer.Type.Integer -> Lib.RunStats)
                   @ GHC.Integer.Type.Integer
                   Lib.$s$fMonadResourceT
                   Lib.calcRunStats3
                     `cast`
                   (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                             <Lib.AlignedRead>_N
                             <Data.Void.Void>_N
                             <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                             <GHC.Integer.Type.Integer -> Lib.RunStats>_R))
                   (Lib.calcRunStats2 @ Data.Void.Void)
                     `cast`
                   (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                             <Lib.AlignedRead>_N
                             <Data.Void.Void>_N
                             <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                             <GHC.Integer.Type.Integer>_R))
                   @ b1
                   (\ (a1 :: (GHC.Integer.Type.Integer -> Lib.RunStats,
                              GHC.Integer.Type.Integer)) ->
                    eta (case a1 of wild { (,) x ds6 -> x ds6 }))) -}
334363bf1f0dcd238c135b662bc912f3
  calcRunStats2 ::
    (GHC.Integer.Type.Integer
     -> Data.Conduit.Internal.Pipe.Pipe
          Lib.AlignedRead
          Lib.AlignedRead
          c
          ()
          (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
          b1)
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         c
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         b1
  {- Arity: 1, Strictness: <L,C(U)> -}
94044302243fe9aea0de0da218e388d0
  calcRunStats3 ::
    ((GHC.Integer.Type.Integer -> Lib.RunStats)
     -> Data.Conduit.Internal.Pipe.Pipe
          Lib.AlignedRead
          Lib.AlignedRead
          Data.Void.Void
          ()
          (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
          b1)
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         b1
  {- Arity: 1, Strictness: <L,C(U)>,
     Unfolding: (\ @ b1
                   (eta :: (GHC.Integer.Type.Integer -> Lib.RunStats)
                           -> Data.Conduit.Internal.Pipe.Pipe
                                Lib.AlignedRead
                                Lib.AlignedRead
                                Data.Void.Void
                                ()
                                (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                                b1) ->
                 Data.Conduit.Internal.Conduit.$fApplicativeZipSink2
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ Lib.AlignedRead
                   @ (GHC.Integer.Type.Integer
                      -> GHC.Integer.Type.Integer -> Lib.RunStats)
                   @ GHC.Integer.Type.Integer
                   Lib.$s$fMonadResourceT
                   Lib.calcRunStats5
                     `cast`
                   (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                             <Lib.AlignedRead>_N
                             <Data.Void.Void>_N
                             <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                             <GHC.Integer.Type.Integer
                              -> GHC.Integer.Type.Integer -> Lib.RunStats>_R))
                   (Lib.calcRunStats4 @ Data.Void.Void)
                     `cast`
                   (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                             <Lib.AlignedRead>_N
                             <Data.Void.Void>_N
                             <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                             <GHC.Integer.Type.Integer>_R))
                   @ b1
                   (\ (a1 :: (GHC.Integer.Type.Integer
                              -> GHC.Integer.Type.Integer -> Lib.RunStats,
                              GHC.Integer.Type.Integer)) ->
                    eta (case a1 of wild { (,) x ds6 -> x ds6 }))) -}
e3d4264bec3232d9e520938b28d98e61
  calcRunStats4 ::
    (GHC.Integer.Type.Integer
     -> Data.Conduit.Internal.Pipe.Pipe
          Lib.AlignedRead
          Lib.AlignedRead
          c
          ()
          (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
          b1)
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         c
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         b1
  {- Arity: 1, Strictness: <L,C(U)> -}
b10c1ee40905ee19c6545b6f1b422778
  calcRunStats5 ::
    ((GHC.Integer.Type.Integer
      -> GHC.Integer.Type.Integer -> Lib.RunStats)
     -> Data.Conduit.Internal.Pipe.Pipe
          Lib.AlignedRead
          Lib.AlignedRead
          Data.Void.Void
          ()
          (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
          b1)
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         b1
  {- Arity: 1, Strictness: <L,C(U)>,
     Unfolding: (\ @ b1
                   (eta :: (GHC.Integer.Type.Integer
                            -> GHC.Integer.Type.Integer -> Lib.RunStats)
                           -> Data.Conduit.Internal.Pipe.Pipe
                                Lib.AlignedRead
                                Lib.AlignedRead
                                Data.Void.Void
                                ()
                                (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                                b1) ->
                 Data.Conduit.Internal.Conduit.$fApplicativeZipSink2
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ Lib.AlignedRead
                   @ (GHC.Integer.Type.Integer
                      -> GHC.Integer.Type.Integer
                      -> GHC.Integer.Type.Integer
                      -> Lib.RunStats)
                   @ GHC.Integer.Type.Integer
                   Lib.$s$fMonadResourceT
                   Lib.calcRunStats6
                     `cast`
                   (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                             <Lib.AlignedRead>_N
                             <Data.Void.Void>_N
                             <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                             <GHC.Integer.Type.Integer
                              -> GHC.Integer.Type.Integer
                              -> GHC.Integer.Type.Integer
                              -> Lib.RunStats>_R))
                   (Lib.calcMappedCount1 @ Data.Void.Void)
                     `cast`
                   (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                             <Lib.AlignedRead>_N
                             <Data.Void.Void>_N
                             <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                             <GHC.Integer.Type.Integer>_R))
                   @ b1
                   (\ (a1 :: (GHC.Integer.Type.Integer
                              -> GHC.Integer.Type.Integer
                              -> GHC.Integer.Type.Integer
                              -> Lib.RunStats,
                              GHC.Integer.Type.Integer)) ->
                    eta (case a1 of wild { (,) x ds6 -> x ds6 }))) -}
d0d6426153861e3cb3b2c98e7cdf59af
  calcRunStats6 ::
    ((GHC.Integer.Type.Integer
      -> GHC.Integer.Type.Integer
      -> GHC.Integer.Type.Integer
      -> Lib.RunStats)
     -> Data.Conduit.Internal.Pipe.Pipe
          Lib.AlignedRead
          Lib.AlignedRead
          Data.Void.Void
          ()
          (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
          b1)
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         b1
  {- Arity: 1, Strictness: <L,C(U)>m2, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ @ b1
                   (w :: (GHC.Integer.Type.Integer
                          -> GHC.Integer.Type.Integer
                          -> GHC.Integer.Type.Integer
                          -> Lib.RunStats)
                         -> Data.Conduit.Internal.Pipe.Pipe
                              Lib.AlignedRead
                              Lib.AlignedRead
                              Data.Void.Void
                              ()
                              (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                              b1) ->
                 case Lib.$wds @ b1 w of ww { (#,#) ww1 ww2 ->
                 Data.Conduit.Internal.Pipe.NeedInput
                   @ Lib.AlignedRead
                   @ Lib.AlignedRead
                   @ Data.Void.Void
                   @ ()
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ b1
                   ww1
                   ww2 }) -}
8817d5b713539f88ba26bd466c951f0d
  calcTrimdToZero ::
    GHC.Real.Integral i =>
    Data.Conduit.Internal.Conduit.ConduitM
      Lib.AlignedRead
      c
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      i
  {- Arity: 1, HasNoCafRefs,
     Strictness: <L,1*U(1*U(1*U(C(C1(U)),A,A,A,A,A,C(U)),A,A),A,A,A,A,A,A,A,A)> -}
2d9bb59fdb6fd8b0774fa0802f4cd6e9
  calcTrimmedPct ::
    Data.Conduit.Internal.Conduit.Sink
      Lib.AlignedRead
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      GHC.Types.Double
  {- Arity: 1, Strictness: <L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Lib.calcTrimmedPct1
                  `cast`
                (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                          <Lib.AlignedRead>_N
                          <Data.Void.Void>_N
                          <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                          <GHC.Types.Double>_R)) -}
f570f0fb53b4c2cced69a235a571beef
  calcTrimmedPct1 ::
    (GHC.Types.Double
     -> Data.Conduit.Internal.Pipe.Pipe
          Lib.AlignedRead
          Lib.AlignedRead
          Data.Void.Void
          ()
          (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
          b1)
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         b1
  {- Arity: 1, Strictness: <L,C(U)>,
     Unfolding: (\ @ b1
                   (eta :: GHC.Types.Double
                           -> Data.Conduit.Internal.Pipe.Pipe
                                Lib.AlignedRead
                                Lib.AlignedRead
                                Data.Void.Void
                                ()
                                (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                                b1) ->
                 Data.Conduit.Internal.Conduit.$fApplicativeZipSink2
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ Lib.AlignedRead
                   @ (GHC.Integer.Type.Integer -> GHC.Types.Double)
                   @ GHC.Integer.Type.Integer
                   Lib.$s$fMonadResourceT
                   Lib.calcTrimmedPct3
                     `cast`
                   (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                             <Lib.AlignedRead>_N
                             <Data.Void.Void>_N
                             <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                             <GHC.Integer.Type.Integer -> GHC.Types.Double>_R))
                   Lib.calcTrimmedPct2
                     `cast`
                   (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                             <Lib.AlignedRead>_N
                             <Data.Void.Void>_N
                             <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                             <GHC.Integer.Type.Integer>_R))
                   @ b1
                   (\ (a1 :: (GHC.Integer.Type.Integer -> GHC.Types.Double,
                              GHC.Integer.Type.Integer)) ->
                    eta (case a1 of wild { (,) x ds6 -> x ds6 }))) -}
3bb033a1dfef5f0769d977bb7be9ef22
  calcTrimmedPct2 ::
    (GHC.Integer.Type.Integer
     -> Data.Conduit.Internal.Pipe.Pipe
          Lib.AlignedRead
          Lib.AlignedRead
          Data.Void.Void
          ()
          (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
          b)
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         b
  {- Arity: 1, Strictness: <L,C(U)>m2,
     Unfolding: (\ @ b
                   (w :: GHC.Integer.Type.Integer
                         -> Data.Conduit.Internal.Pipe.Pipe
                              Lib.AlignedRead
                              Lib.AlignedRead
                              Data.Void.Void
                              ()
                              (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                              b) ->
                 case Lib.$wloop2 Lib.defaultBed2 @ b w of ww { (#,#) ww1 ww2 ->
                 Data.Conduit.Internal.Pipe.NeedInput
                   @ Lib.AlignedRead
                   @ Lib.AlignedRead
                   @ Data.Void.Void
                   @ ()
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ b
                   ww1
                   ww2 }) -}
811f269a977f79d60171bd9830ca186e
  calcTrimmedPct3 ::
    ((GHC.Integer.Type.Integer -> GHC.Types.Double)
     -> Data.Conduit.Internal.Pipe.Pipe
          Lib.AlignedRead
          Lib.AlignedRead
          Data.Void.Void
          ()
          (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
          b1)
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         b1
  {- Arity: 1, Strictness: <L,C(U)> -}
e6591e7e64c6652de8de356f7b44e14b
  calculateTrimStats ::
    Data.Conduit.Internal.Conduit.ConduitM
      Lib.AlignedRead
      c
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      GHC.Integer.Type.Integer
  {- Arity: 1, Strictness: <L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Lib.calcRunStats4
                  `cast`
                (forall (c2 :: <*>_N).
                 Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                          <Lib.AlignedRead>_N
                          <c2>_N
                          <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                          <GHC.Integer.Type.Integer>_R)) -}
2c9a4b17bde63fd16b2703d7cf8c7c5f
  checkChromNameMatchStatus ::
    Lib.Header -> Lib.BED -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,U><S(SSS),1*U(U,U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.checkChromNameMatchStatus1
                  `cast`
                (<Lib.Header>_R
                 ->_R <Lib.BED>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
3b97a19f770f492eaab7a02974fd96ab
  checkChromNameMatchStatus1 ::
    Lib.Header
    -> Lib.BED
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U><S(SSS),1*U(U,U,U)><S,U>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Lib.Header)
                   (w1 :: Lib.BED)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w1 of ww { Data.Vector.Vector ww1 ww2 ww3 ->
                 Lib.$wcheckChromNameMatchStatus w ww1 ww2 ww3 w2 }) -}
63a5d5ddaa0fac5cfd6843bf16a0607a
  checkChromNameMatchStatus2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Lib.checkChromNameMatchStatus3) -}
aa93db1cfde81d86efa4b3c9c75b5ebb
  checkChromNameMatchStatus3 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("SAM and BED chromosome name formats match."#) -}
b0e0f6867f6d8b0ddb36c27fbb31e15e
  checkChromNameMatchStatus4 :: GHC.Types.IO ()
  {- Strictness: x -}
5d48be0e11661f54da51ad501adbb993
  checkChromNameMatchStatus5 ::
    Data.Either.Either GHC.Base.String Lib.UChr
  {- Strictness: x -}
3ea9f97ed61d18725aaa776caaa7af99
  checkCigarSeqlen :: Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 1,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLSLLLL),1*U(U,U,U,U,U,U,U(U,U,U,U),U(U,U,U,U),U,U,U,U,U,U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Unfolding: (\ (a :: Lib.AlignedRead) ->
                 case a of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 case ds32 of wild1 {
                   GHC.Types.False
                   -> case ds13 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                      case Lib.$wsafemapcig ww1 ww2 ww3 ww4 of wild2 {
                        GHC.Base.Nothing -> Lib.defaultAlignment
                        GHC.Base.Just a1
                        -> case ds12 of ww5 { Data.ByteString.Internal.PS ww6 ww7 ww8 ww9 ->
                           case Lib.$wcigseqlenHdrPassTest ww6 ww7 ww8 ww9 ww ds19 of wild3 {
                             GHC.Types.False -> Lib.defaultAlignment
                             GHC.Types.True -> wild } } } }
                   GHC.Types.True -> wild } }) -}
b6dc588d5f3d93fce6b19059e33a7401
  checkCigarSeqlen1 ::
    Data.Either.Either
      GHC.Base.String
      [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
  {- Strictness: x -}
c4c1e099e504ec7a0b18c7990a0d53c5
  checkCigarSeqlen2 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wstarcigarP @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
3e09eebdbbf85f9439848b08ca4f97db
  checkInsertSize ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer -> Lib.PairedAln -> GHC.Types.Bool
  {- Arity: 3, Strictness: <S,U><L,U><L,U(1*U,1*U,1*U,1*U)>,
     Unfolding: (\ (minsz :: GHC.Integer.Type.Integer)
                   (maxsz :: GHC.Integer.Type.Integer)
                   (p :: Lib.PairedAln) ->
                 case GHC.Base.map
                        @ Lib.AlignedRead
                        @ GHC.Integer.Type.Integer
                        Lib.tlen
                        (GHC.Types.:
                           @ Lib.AlignedRead
                           (case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 -> ds6 })
                           (GHC.Types.:
                              @ Lib.AlignedRead
                              (case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 -> ds7 })
                              (case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                               GHC.Base.++ @ Lib.AlignedRead ds8 ds9 }))) of wild {
                   [] -> case GHC.List.minimum1 ret_ty GHC.Types.Bool of {}
                   : ipv ipv1
                   -> case GHC.Integer.Type.geInteger#
                             (GHC.List.minimum_go ipv1 ipv)
                             minsz of wild1 { DEFAULT ->
                      case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild1 of wild2 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case GHC.Integer.Type.leInteger#
                                  (GHC.List.maximum_go ipv1 ipv)
                                  maxsz of wild3 { DEFAULT ->
                           GHC.Prim.tagToEnum# @ GHC.Types.Bool wild3 } } } }) -}
339dab1e4bbc94737be44b03651f0d48
  checkcigseqlen :: Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 1,
     Strictness: <S(LLLLLLLS(SLSS)LLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,1*U(U,U,U,U),1*U(U,U,U,U),A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.AlignedRead) ->
                 case w of ww { Lib.AlignedRead ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ->
                 case ww8 of ww32 { Data.ByteString.Internal.PS ww33 ww34 ww35 ww36 ->
                 Lib.$wcheckcigseqlen ww7 ww33 ww34 ww35 ww36 ww14 } }) -}
9964e29eedb0fb6a1d11d9408e8a0598
  checkcigseqlen2 :: Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 1,
     Strictness: <S(LLLLLLS(SLSS)LLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,1*U(U,U,U,U),1*U(U,U,U,U),A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.AlignedRead) ->
                 case w of ww { Lib.AlignedRead ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ->
                 case ww7 of ww32 { Data.ByteString.Internal.PS ww33 ww34 ww35 ww36 ->
                 Lib.$wcheckcigseqlen2 ww33 ww34 ww35 ww36 ww8 ww14 } }) -}
a269c1e426ad84f0a4d67ad3acd222d4
  checknonzeroCigMatch :: Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLSLLLL),1*U(A,A,A,A,A,A,A,1*U(U,U,U,1*U),A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,1*U,A,A,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.AlignedRead) ->
                 case w of ww { Lib.AlignedRead ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ->
                 Lib.$wchecknonzeroCigMatch ww8 ww19 ww27 }) -}
01c0f5b551dbfc54cd1de621bd8df5ef
  checkpos :: GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer
  {- Arity: 1, HasNoCafRefs, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (i :: GHC.Integer.Type.Integer) ->
                 case GHC.Integer.Type.ltInteger#
                        i
                        Lib.defaultBed2 of wild { DEFAULT ->
                 case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild of wild1 {
                   GHC.Types.False -> i GHC.Types.True -> Lib.defaultBed2 } }) -}
1fc0d837b61ebbaa17edd71f0be30382
  chr1 :: Lib.BEDPE -> Lib.UChr
  RecSel Left Lib.BEDPE
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLL),1*U(1*U,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.BEDPE) ->
                 case ds6 of wild { Lib.BEDPE ds7 ds8 ds9 ds10 ds11 ds12 ds13 ->
                 ds7 }) -}
1fc0d837b61ebbaa17edd71f0be30382
  chr2 :: Lib.BEDPE -> Lib.UChr
  RecSel Left Lib.BEDPE
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLL),1*U(A,A,A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.BEDPE) ->
                 case ds6 of wild { Lib.BEDPE ds7 ds8 ds9 ds10 ds11 ds12 ds13 ->
                 ds10 }) -}
9397824cc9d01cf75666f6f250a9bd4d
  chrom :: Lib.MidFamily -> Lib.UChr
  RecSel Left Lib.MidFamily
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLL),1*U(1*U,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MidFamily) ->
                 case ds6 of wild { Lib.MidFamily ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds7 }) -}
eb54c5795cd87d65034c776d841620e0
  cigar :: Lib.AlignedRead -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLSLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds13 }) -}
8a264cabffb0ec0bac66f9d571145938
  cigarP ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString
      [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.cigarP1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <[(GHC.Integer.Type.Integer,
                             Data.ByteString.Internal.ByteString)]>_R)) -}
0f3efa069070b67a31f521318d42f26b
  cigarP1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wcigarP @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
eb54c5795cd87d65034c776d841620e0
  cigmap :: Lib.AlignedRead -> Lib.CigarMap
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLSLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds15 }) -}
3198ea35a4c46565d22675fa03e59a16
  cigseqlenHdrPassTest :: Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 1,
     Strictness: <S(LLLLLLS(SLSS)LLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,1*U(U,U,U,U),1*U(U,U,U,U),A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.AlignedRead) ->
                 case w of ww { Lib.AlignedRead ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ->
                 case ww7 of ww32 { Data.ByteString.Internal.PS ww33 ww34 ww35 ww36 ->
                 Lib.$wcigseqlenHdrPassTest ww33 ww34 ww35 ww36 ww8 ww14 } }) -}
862722a2408b0166a30a3aeb7c69b412
  clearNamesAndPositions :: Lib.PairedAln -> Lib.PairedAln
  {- Arity: 1,
     Strictness: <S,1*U(1*U(U,U,A,A,U,U,U,U,U,U,A,A,A,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),1*U(U,U,A,A,U,U,U,U,U,U,A,A,A,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (p :: Lib.PairedAln) ->
                 case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                 Lib.PairedAln
                   (case ds6 of wild1 { Lib.AlignedRead ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ->
                    Lib.AlignedRead
                      ds10
                      ds11
                      Lib.NONE
                      Lib.defaultBed2
                      ds14
                      ds15
                      ds16
                      ds17
                      ds18
                      ds19
                      Lib.addtrimtag5
                      Lib.defaultBed2
                      Lib.defaultBed2
                      ds23
                      ds24
                      ds25
                      ds26
                      ds27
                      ds28
                      ds29
                      ds30
                      ds31
                      ds32
                      ds33
                      ds34
                      ds35
                      ds36
                      ds37
                      ds38
                      ds39
                      ds40 })
                   (case ds7 of wild1 { Lib.AlignedRead ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ->
                    Lib.AlignedRead
                      ds10
                      ds11
                      Lib.NONE
                      Lib.defaultBed2
                      ds14
                      ds15
                      ds16
                      ds17
                      ds18
                      ds19
                      Lib.addtrimtag5
                      Lib.defaultBed2
                      Lib.defaultBed2
                      ds23
                      ds24
                      ds25
                      ds26
                      ds27
                      ds28
                      ds29
                      ds30
                      ds31
                      ds32
                      ds33
                      ds34
                      ds35
                      ds36
                      ds37
                      ds38
                      ds39
                      ds40 })
                   ds8
                   ds9 }) -}
0157684741f3d86ed9fa943fb9db718c
  clearNonRealCigar :: Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 1,
     Strictness: <S(LLLLLLLS(SLSS)LLLLLLLLLLLLLLLLLLLLLLL),1*U(U,U,U,U,U,U,U,U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Unfolding: (\ (a :: Lib.AlignedRead) ->
                 case a of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 case ds13 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 let {
                   $j :: Lib.AlignedRead <join 0>
                   = Lib.AlignedRead
                       ds6
                       ds7
                       ds8
                       ds9
                       ds10
                       Lib.defaultBed2
                       ds12
                       Lib.addtrimtag5
                       ds14
                       ds15
                       ds16
                       ds17
                       Lib.defaultBed2
                       ds19
                       ds20
                       ds21
                       ds22
                       ds23
                       GHC.Types.False
                       ds25
                       ds26
                       ds27
                       ds28
                       Lib.defaultBed2
                       Lib.defaultBed2
                       ds31
                       ds32
                       ds33
                       ds34
                       ds35
                       GHC.Types.True
                 } in
                 letrec {
                   go20 :: [GHC.Types.Char] -> Lib.AlignedRead
                     <join 1> {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds37 :: [GHC.Types.Char]) ->
                     case ds37 of wild1 {
                       [] -> $j
                       : y ys
                       -> case GHC.List.elem
                                 @ GHC.Types.Char
                                 GHC.Classes.$fEqChar
                                 y
                                 Lib.clearNonRealCigar1 of wild2 {
                            GHC.Types.False -> go20 ys GHC.Types.True -> wild } }
                 } in
                 go20
                   (Data.ByteString.Internal.$wunpackAppendCharsLazy
                      ww1
                      ww2
                      ww3
                      ww4
                      (GHC.Types.[] @ GHC.Types.Char)) } }) -}
65b7627b1b4e6b258d4e00d1d6a294a1
  clearNonRealCigar1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Lib.clearNonRealCigar2) -}
e9d898c2ea912eeeca615c57d0f312c4
  clearNonRealCigar2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("MIDN"#) -}
1737bc10dd5f5bc0488b0eb3e8a36de7
  clearR1primNextFields :: Lib.PairedAln -> Lib.PairedAln
  {- Arity: 1,
     Strictness: <S(S(LLLLLLLLLLLLLLLLLLSLLLLLLLLLLLL)LLL),1*U(1*U(U,U,U,U,U,U,U,U,U,U,A,A,A,U,U,U,U,U,1*U,U,U,U,U,U,U,U,U,U,U,U,U),U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)>m,
     Unfolding: (\ (p :: Lib.PairedAln) ->
                 case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                 case ds6 of wild1 { Lib.AlignedRead ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ->
                 case ds28 of wild2 {
                   GHC.Types.False
                   -> Lib.PairedAln
                        (Lib.AlignedRead
                           ds10
                           ds11
                           Lib.NONE
                           Lib.defaultBed2
                           ds14
                           ds15
                           ds16
                           ds17
                           ds18
                           ds19
                           Lib.addtrimtag5
                           Lib.defaultBed2
                           Lib.defaultBed2
                           ds23
                           ds24
                           ds25
                           ds26
                           ds27
                           GHC.Types.False
                           ds29
                           ds30
                           ds31
                           ds32
                           ds33
                           ds34
                           ds35
                           ds36
                           ds37
                           ds38
                           ds39
                           ds40)
                        (case ds7 of wild3 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                         Lib.AlignedRead
                           ds41
                           ds42
                           Lib.NONE
                           Lib.defaultBed2
                           ds45
                           ds46
                           ds47
                           ds48
                           ds49
                           ds50
                           Lib.addtrimtag5
                           Lib.defaultBed2
                           Lib.defaultBed2
                           ds54
                           ds55
                           ds56
                           ds57
                           ds58
                           ds59
                           ds60
                           ds61
                           ds62
                           ds63
                           ds64
                           ds65
                           ds66
                           ds67
                           ds68
                           ds69
                           ds70
                           ds71 })
                        ds8
                        ds9
                   GHC.Types.True
                   -> Lib.PairedAln
                        (Lib.AlignedRead
                           ds10
                           ds11
                           ds12
                           ds13
                           ds14
                           ds15
                           ds16
                           ds17
                           ds18
                           ds19
                           Lib.addtrimtag5
                           Lib.defaultBed2
                           Lib.defaultBed2
                           ds23
                           ds24
                           ds25
                           ds26
                           ds27
                           GHC.Types.True
                           ds29
                           ds30
                           ds31
                           ds32
                           ds33
                           ds34
                           ds35
                           ds36
                           ds37
                           ds38
                           ds39
                           ds40)
                        ds7
                        ds8
                        ds9 } } }) -}
c9ea9d4b40397cd64b08a3b099240bc0
  clearR2primNextFields :: Lib.PairedAln -> Lib.PairedAln
  {- Arity: 1,
     Strictness: <S(LS(LLLLLLLLLLLLLLLLLLSLLLLLLLLLLLL)LL),1*U(U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),1*U(U,U,U,U,U,U,U,U,U,U,A,A,A,U,U,U,U,U,1*U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)>m,
     Unfolding: (\ (p :: Lib.PairedAln) ->
                 case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                 case ds7 of wild1 { Lib.AlignedRead ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ->
                 case ds28 of wild2 {
                   GHC.Types.False
                   -> Lib.PairedAln
                        (case ds6 of wild3 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                         Lib.AlignedRead
                           ds41
                           ds42
                           Lib.NONE
                           Lib.defaultBed2
                           ds45
                           ds46
                           ds47
                           ds48
                           ds49
                           ds50
                           Lib.addtrimtag5
                           Lib.defaultBed2
                           Lib.defaultBed2
                           ds54
                           ds55
                           ds56
                           ds57
                           ds58
                           ds59
                           ds60
                           ds61
                           ds62
                           ds63
                           ds64
                           ds65
                           ds66
                           ds67
                           ds68
                           ds69
                           ds70
                           ds71 })
                        (Lib.AlignedRead
                           ds10
                           ds11
                           Lib.NONE
                           Lib.defaultBed2
                           ds14
                           ds15
                           ds16
                           ds17
                           ds18
                           ds19
                           Lib.addtrimtag5
                           Lib.defaultBed2
                           Lib.defaultBed2
                           ds23
                           ds24
                           ds25
                           ds26
                           ds27
                           GHC.Types.False
                           ds29
                           ds30
                           ds31
                           ds32
                           ds33
                           ds34
                           ds35
                           ds36
                           ds37
                           ds38
                           ds39
                           ds40)
                        ds8
                        ds9
                   GHC.Types.True
                   -> Lib.PairedAln
                        ds6
                        (Lib.AlignedRead
                           ds10
                           ds11
                           ds12
                           ds13
                           ds14
                           ds15
                           ds16
                           ds17
                           ds18
                           ds19
                           Lib.addtrimtag5
                           Lib.defaultBed2
                           Lib.defaultBed2
                           ds23
                           ds24
                           ds25
                           ds26
                           ds27
                           GHC.Types.True
                           ds29
                           ds30
                           ds31
                           ds32
                           ds33
                           ds34
                           ds35
                           ds36
                           ds37
                           ds38
                           ds39
                           ds40)
                        ds8
                        ds9 } } }) -}
dfe83999ceab20c0c48e817bdd8a0d8b
  collectPrimIntAlns :: [Lib.PairedAln] -> [Lib.PairedAln]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ps :: [Lib.PairedAln]) ->
                 GHC.Base.build
                   @ Lib.PairedAln
                   (\ @ b
                      (c2 :: Lib.PairedAln -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ Lib.PairedAln
                      @ b
                      (GHC.List.filterFB @ Lib.PairedAln @ b c2 Lib.anyPrimerIntAln)
                      n
                      ps)) -}
f57ecfb81f41c7e98b9c7ac6caab83ae
  contractcigar ::
    Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
  {- Arity: 1, Strictness: <S(SLSS),1*U(U,U,U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.ByteString.Internal.ByteString) ->
                 case w of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wcontractcigar ww1 ww2 ww3 ww4 }) -}
f249109d1e7fc743f92be851d422f560
  contractcigar1 ::
    Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
  {- Arity: 1, Strictness: <L,U(U,U,U,U)>,
     Unfolding: (\ (x :: Data.ByteString.Internal.ByteString) ->
                 GHC.Base.mappend
                   @ Data.ByteString.Internal.ByteString
                   Data.ByteString.Internal.$fMonoidByteString
                   (case x of wild { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                    case GHC.Show.$wshowSignedInt
                           0#
                           dt3
                           (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                    let {
                      cs :: [GHC.Types.Char] = GHC.Types.: @ GHC.Types.Char ww5 ww6
                    } in
                    case GHC.List.$wlenAcc @ GHC.Types.Char cs 0# of ww { DEFAULT ->
                    Data.ByteString.Internal.$wunsafePackLenChars ww cs } } })
                   (case x of wild { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                    case GHC.Prim.tagToEnum#
                           @ GHC.Types.Bool
                           (GHC.Prim.<=# dt3 0#) of wild1 {
                      GHC.Types.False
                      -> case GHC.Prim.readWord8OffAddr#
                                @ GHC.Prim.RealWorld
                                (GHC.Prim.plusAddr# dt dt2)
                                0#
                                GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                         case GHC.Prim.touch#
                                @ 'GHC.Types.LiftedRep
                                @ GHC.ForeignPtr.ForeignPtrContents
                                dt1
                                ipv of s' { DEFAULT ->
                         case GHC.Magic.runRW#
                                @ ('GHC.Types.TupleRep
                                     '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                                @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     Data.ByteString.Internal.ByteString #)
                                (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                 case GHC.Prim.newPinnedByteArray#
                                        @ GHC.Prim.RealWorld
                                        1#
                                        s of ds7 { (#,#) ipv2 ipv3 ->
                                 let {
                                   ipv4 :: GHC.Prim.Addr#
                                   = GHC.Prim.byteArrayContents#
                                       ipv3
                                         `cast`
                                       (UnsafeCo representational (GHC.Prim.MutableByteArray#
                                                                     GHC.Prim.RealWorld) GHC.Prim.ByteArray#)
                                 } in
                                 case GHC.Prim.writeWord8OffAddr#
                                        @ GHC.Prim.RealWorld
                                        ipv4
                                        0#
                                        (GHC.Prim.narrow8Word# ipv1)
                                        ipv2 of s114 { DEFAULT ->
                                 let {
                                   ipv5 :: GHC.ForeignPtr.ForeignPtrContents
                                   = GHC.ForeignPtr.PlainPtr ipv3
                                 } in
                                 case GHC.Prim.touch#
                                        @ 'GHC.Types.LiftedRep
                                        @ GHC.ForeignPtr.ForeignPtrContents
                                        ipv5
                                        s114 of s'1 { DEFAULT ->
                                 (# s'1,
                                    Data.ByteString.Internal.PS
                                      ipv4
                                      ipv5
                                      0#
                                      1# #) } } }) of ds7 { (#,#) ipv2 ipv3 ->
                         ipv3 } } }
                      GHC.Types.True
                      -> case Lib.contractcigar2
                         ret_ty Data.ByteString.Internal.ByteString
                         of {} } })) -}
6d290e60864eeca8be6d55ef504d831e
  contractcigar2 :: GHC.Word.Word8
  {- Strictness: x -}
b8a8a80b8c2d6d04a8bc37390696503a
  countDs ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> GHC.Integer.Type.Integer
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (cs :: [(GHC.Integer.Type.Integer,
                            Data.ByteString.Internal.ByteString)]) ->
                 Lib.countDs_gl
                   (GHC.Base.build
                      @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                      (\ @ b
                         (c2 :: (GHC.Integer.Type.Integer,
                                 Data.ByteString.Internal.ByteString)
                                -> b -> b)[OneShot]
                         (n :: b)[OneShot] ->
                       GHC.Base.foldr
                         @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                         @ b
                         (GHC.List.filterFB
                            @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                            @ b
                            c2
                            Lib.countDs1)
                         n
                         cs))
                   Data.OldList.genericLength1) -}
92d68149fb36eca9c9bcfbc72ca235f3
  countDs1 ::
    (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
    -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S(LS(SLSS)),1*U(A,1*U(U,U,U,U))>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: (GHC.Integer.Type.Integer,
                          Data.ByteString.Internal.ByteString)) ->
                 case w of ww { (,) ww1 ww2 ->
                 case ww2 of ww3 { Data.ByteString.Internal.PS ww4 ww5 ww6 ww7 ->
                 Lib.$wlvl2 ww4 ww5 ww6 ww7 } }) -}
697c25430bc830d47c47cc770e636eea
  countDs2 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.countDs_addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.countDs_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
6f10c00c30851bb3e46d9dc8cd7e9011
  countDs_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("D"#) -}
53068a1a0267302b4f4de49ccb8ff289
  countDs_gl ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
5271b7eddd2979e20772b7132608e932
  createprimerbedmaps ::
    Lib.Opts
    -> GHC.Types.IO
         (Data.Map.Internal.Map
            Lib.UChr (Data.IntMap.Internal.IntMap Lib.BedRecord),
          Data.Map.Internal.Map
            Lib.UChr (Data.IntMap.Internal.IntMap Lib.BedRecord))
  {- Arity: 2, Strictness: <S(SLLL),1*U(1*U,U,A,A)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.createprimerbedmaps1
                  `cast`
                (<Lib.Opts>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <(Data.Map.Internal.Map
                                   Lib.UChr (Data.IntMap.Internal.IntMap Lib.BedRecord),
                                 Data.Map.Internal.Map
                                   Lib.UChr (Data.IntMap.Internal.IntMap Lib.BedRecord))>_R)) -}
5d10949a79a5b9b44fff0be440ca93b6
  createprimerbedmaps1 ::
    Lib.Opts
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Data.Map.Internal.Map
             Lib.UChr (Data.IntMap.Internal.IntMap Lib.BedRecord),
           Data.Map.Internal.Map
             Lib.UChr (Data.IntMap.Internal.IntMap Lib.BedRecord)) #)
  {- Arity: 2, Strictness: <S(SLLL),1*U(1*U,U,A,A)><S,U>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.Opts) (w1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Lib.Opts ww1 ww2 ww3 ww4 ->
                 Lib.$wcreateprimerbedmaps ww1 ww2 w1 }) -}
688e857e1bb23d05fff23cf8e6131894
  createprimerbedmaps10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Lib.createprimerbedmaps11) -}
007a8885f9ebf939909adbd2a4eaf715
  createprimerbedmaps11 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: (" master records failed to parse (see masterparsefails.log)\n"#) -}
3be3426f1e8c06168f5bc391cdcb5641
  createprimerbedmaps12 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (" of "#) -}
8bd03a2a3d8a12cca9d5d25f590994fc
  createprimerbedmaps13 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("WARNING: "#) -}
b4df8cf9231baad8a5f04f05277a7b57
  createprimerbedmaps14 ::
    Data.ByteString.Internal.ByteString
    -> Data.Either.Either GHC.Base.String Lib.MasterRecord
  {- Arity: 1,
     Unfolding: (Data.Attoparsec.ByteString.Internal.parseOnly
                   @ Lib.MasterRecord
                   Lib.createprimerbedmaps15
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                             <Data.ByteString.Internal.ByteString>_N <Lib.MasterRecord>_R))) -}
05d73942d52da6b30285e86e4d710ccf
  createprimerbedmaps15 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.MasterRecord
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.MasterRecord
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wmasterparser @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
af36c29906416a762eafd6c230d99e1e
  createprimerbedmaps16 ::
    GHC.Types.Int
    -> Data.Either.Either GHC.Base.String Lib.MasterRecord
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><S,1*U>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds6 :: GHC.Types.Int)
                   (x :: Data.Either.Either
                           GHC.Base.String Lib.MasterRecord)[OneShot] ->
                 Data.Either.isRight @ GHC.Base.String @ Lib.MasterRecord x) -}
b22c7794b6072c33b90c83b2443170f0
  createprimerbedmaps2 ::
    GHC.IO.FilePath
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [Lib.BEDPE] #)
  {- Arity: 2, Strictness: <L,U><S,U> -}
431a4f5e1e6fb0e215ac0d119964877d
  createprimerbedmaps3 ::
    Lib.BedRecord -> Lib.BedRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(U,A,A,A)><S(SLLL),1*U(U,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.BedRecord) (y :: Lib.BedRecord) ->
                 case x of wild { Lib.BedRecord ds6 ds7 ds8 ds9 ->
                 case ds6 of x1 { DEFAULT ->
                 case y of wild1 { Lib.BedRecord ds10 ds11 ds12 ds13 ->
                 case ds10 of x2 { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x1 of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x2 of b# { DEFAULT ->
                 GHC.Prim.tagToEnum#
                   @ GHC.Types.Bool
                   (GHC.Prim.==# a# b#) } } } } } }) -}
c63de38906622a908d54bb2118aac17b
  createprimerbedmaps4 ::
    GHC.IO.FilePath
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [Lib.MasterRecord] #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (fp :: GHC.IO.FilePath)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case System.IO.withBinaryFile1
                        @ Data.ByteString.Internal.ByteString
                        fp
                        GHC.IO.IOMode.ReadMode
                        Data.ByteString.readFile2
                          `cast`
                        (<GHC.IO.Handle.Types.Handle>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Data.ByteString.Internal.ByteString>_R))
                        eta of ds6 { (#,#) ipv ipv1 ->
                 let {
                   ipv2 :: [Data.ByteString.Internal.ByteString]
                   = case ipv1 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                     Data.ByteString.Char8.$wlines ww1 ww2 ww3 ww4 }
                 } in
                 let {
                   ds7 :: (Data.Map.Internal.Map
                             GHC.Types.Int
                             (Data.Either.Either GHC.Base.String Lib.MasterRecord),
                           Data.Map.Internal.Map
                             GHC.Types.Int
                             (Data.Either.Either GHC.Base.String Lib.MasterRecord))
                   = case Data.Map.Internal.$wpoly_go3
                            @ GHC.Types.Int
                            @ (Data.Either.Either GHC.Base.String Lib.MasterRecord)
                            Lib.createprimerbedmaps16
                            (Lib.$sfromList2
                               @ (Data.Either.Either GHC.Base.String Lib.MasterRecord)
                               (Lib.createprimerbedmaps_go1
                                  0#
                                  (GHC.Base.map
                                     @ Data.ByteString.Internal.ByteString
                                     @ (Data.Either.Either GHC.Base.String Lib.MasterRecord)
                                     Lib.createprimerbedmaps14
                                     ipv2))) of ww { (#,#) ww1 ww2 ->
                     (ww1, ww2) }
                 } in
                 let {
                   succs :: [Lib.MasterRecord]
                   = case ds7 of wild { (,) succm failm ->
                     Lib.createprimerbedmaps_go13
                       (GHC.Types.[] @ Lib.MasterRecord)
                       succm }
                 } in
                 let {
                   failedlinenums :: [GHC.Types.Int]
                   = case ds7 of wild { (,) succm failm ->
                     Data.Map.Internal.keys_go
                       @ GHC.Types.Int
                       @ (Data.Either.Either GHC.Base.String Lib.MasterRecord)
                       (GHC.Types.[] @ GHC.Types.Int)
                       failm }
                 } in
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        (case GHC.List.$wlenAcc
                                @ Data.ByteString.Internal.ByteString
                                ipv2
                                0# of ww2 { DEFAULT ->
                         case GHC.List.$wlenAcc
                                @ Lib.MasterRecord
                                succs
                                0# of ww1 { DEFAULT ->
                         Lib.$wparsechkMaster ww2 ww1 failedlinenums } })
                        GHC.Types.True
                        ipv of ds8 { (#,#) ipv3 ipv4 ->
                 case System.IO.withBinaryFile1
                        @ ()
                        Lib.createprimerbedmaps5
                        GHC.IO.IOMode.WriteMode
                        (\ (ds9 :: GHC.IO.Handle.Types.Handle)[OneShot]
                           (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case Data.ByteString.Char8.unlines
                                (GHC.Base.map
                                   @ GHC.Types.Int
                                   @ Data.ByteString.Internal.ByteString
                                   (GHC.List.!! @ Data.ByteString.Internal.ByteString ipv2)
                                   failedlinenums) of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                         Data.ByteString.$whPut ds9 ww1 ww2 ww3 ww4 eta1 })
                          `cast`
                        (<GHC.IO.Handle.Types.Handle>_R
                         ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                        ipv3 of ds9 { (#,#) ipv5 ipv6 ->
                 (# ipv5, succs #) } } }) -}
9fe3ffe6dc14b1b3f0ed921b07277c49
  createprimerbedmaps5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Lib.createprimerbedmaps6) -}
654e950d8f66359e534a405f965e4095
  createprimerbedmaps6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("masterparsefails.log"#) -}
9b23cb9ba26570a0b1b42aad940eb2c3
  createprimerbedmaps7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Lib.createprimerbedmaps8) -}
75a32374851e46f0245845e36ec73940
  createprimerbedmaps8 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: (" master records parsed successfully.\n"#) -}
fda0692af2be095b60fabd2feed2ffa5
  createprimerbedmaps9 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("all "#) -}
1af0320404228993d74a46fe59a7fc10
  createprimerbedmaps_go ::
    [[Lib.BedRecord]]
    -> [Data.IntMap.Internal.IntMap Lib.BedRecord]
    -> [(Lib.UChr, Data.IntMap.Internal.IntMap Lib.BedRecord)]
  {- Arity: 2, Strictness: <S,1*U><L,1*U> -}
c9fb1222185ce0f993ec93f67c4d1c6d
  createprimerbedmaps_go1 ::
    GHC.Prim.Int#
    -> [Data.Either.Either GHC.Base.String Lib.MasterRecord]
    -> [(GHC.Types.Int,
         Data.Either.Either GHC.Base.String Lib.MasterRecord)]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U> -}
09b92c29db949b84b6e3cc39e848faa7
  createprimerbedmaps_go13 ::
    [Lib.MasterRecord]
    -> Data.Map.Internal.Map
         GHC.Types.Int (Data.Either.Either GHC.Base.String Lib.MasterRecord)
    -> [Lib.MasterRecord]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U><S,1*U> -}
1696153a1e2a9092925da471472ebe59
  defaultAlignment :: Lib.AlignedRead
  {- Unfolding: (Lib.AlignedRead
                   Lib.defaultAlignment3
                   Lib.$fShowAlignedRead2
                   Lib.NONE
                   Lib.defaultBed2
                   Lib.defaultBed2
                   Lib.defaultBed2
                   Lib.addtrimtag5
                   Lib.addtrimtag5
                   Lib.defaultAlignment_v
                   Lib.defaultAlignment_v
                   Lib.addtrimtag5
                   Lib.defaultBed2
                   Lib.defaultBed2
                   Lib.defaultAlignment1
                   Lib.defaultAlignment1
                   Lib.defaultAlignment1
                   Lib.defaultAlignment1
                   GHC.Types.False
                   GHC.Types.False
                   (GHC.Types.[] @ Lib.BedRecord)
                   (GHC.Types.[] @ Lib.BedRecord)
                   GHC.Types.False
                   GHC.Types.False
                   Lib.defaultBed2
                   Lib.defaultBed2
                   (GHC.Types.[] @ Data.ByteString.Internal.ByteString)
                   GHC.Types.False
                   Lib.defaultAlignment1
                   Lib.defaultAlignment1
                   Lib.defaultBed
                   GHC.Types.False) -}
8b69a2e3e18d3c2bcf2c177715a426c3
  defaultAlignment1 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.List.$wlenAcc
                        @ GHC.Types.Char
                        (GHC.Types.[] @ GHC.Types.Char)
                        0# of ww { DEFAULT ->
                 Data.ByteString.Internal.$wunsafePackLenChars
                   ww
                   (GHC.Types.[] @ GHC.Types.Char) }) -}
2cbf525444aac564668372243c81d96a
  defaultAlignment2 ::
    (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
  {- Strictness: m,
     Unfolding: ((Lib.defaultBed2, Lib.addtrimtag5)) -}
0163a1aa42a054ae95e4a5df83a0e91e
  defaultAlignment3 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.defaultAlignment_addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.defaultAlignment_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
1d10a8997f407dd12c7f502c326c8411
  defaultAlignment_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("NONE"#) -}
7ae1d000d3090f8c496de9e20ad7d68e
  defaultAlignment_v ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                   Lib.defaultAlignment2
                   (GHC.Types.[]
                      @ (GHC.Integer.Type.Integer,
                         Data.ByteString.Internal.ByteString))) -}
4e4a93c5e88131b1c7f6ffd94e534fd9
  defaultBEDPE :: Lib.BEDPE
  {- Strictness: m,
     Unfolding: (Lib.BEDPE
                   Lib.NONE
                   Lib.defaultBed2
                   Lib.defaultBed2
                   Lib.NONE
                   Lib.defaultBed2
                   Lib.defaultBed2
                   Lib.defaultBEDPE1) -}
0b34cb0f67e96a00ac10b991bc4ebd61
  defaultBEDPE1 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.defaultBEDPE_addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.defaultBEDPE_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
5b033d37e210b10c1f7840f9ee3bfa65
  defaultBEDPE_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("DEFAULTBEDPE"#) -}
480dd00c3d91c529b2d35cba339ee909
  defaultBed :: Lib.BedRecord
  {- Strictness: m,
     Unfolding: (Lib.BedRecord
                   Lib.NONE
                   Lib.defaultBed2
                   Lib.defaultBed2
                   Lib.defaultBed1) -}
3d3a91a2a03f1fb2536b0f9064cddffc
  defaultBed1 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.defaultBed_addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.defaultBed_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
6b0d0b7a818859688b73b03296658787
  defaultBed2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
6fe7b3414d87cc3517233556fb4497d4
  defaultBed_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("DEFAULT"#) -}
6ea134990fdc457a8e2173e5e24fc5da
  defaultMasterRec :: Lib.MasterRecord
  {- Unfolding: (Lib.MasterRecord
                   Lib.NONE
                   Lib.defaultBed2
                   Lib.defaultBed2
                   Lib.defaultMasterRec1
                   Lib.defaultBed2
                   Lib.defaultBed2
                   Lib.defaultBed2
                   Lib.defaultBed2
                   Lib.defaultMasterRec1
                   Lib.defaultMasterRec1
                   Lib.defaultMasterRec1
                   Lib.defaultMasterRec1) -}
3e92e09c6f8903b67457f663edc50832
  defaultMasterRec1 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.defaultMasterRec_addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.defaultMasterRec_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
756d56ad42ca168fcaaf7bb5cec23d1a
  defaultMasterRec_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("EMPTY"#) -}
604c1be80f5ce6492d5e7f8204aced05
  defaultMidFam :: Lib.MidFamily
  {- Strictness: m,
     Unfolding: (Lib.MidFamily
                   Lib.NONE
                   Lib.defaultBed2
                   Lib.defaultBed2
                   Lib.defaultMasterRec1
                   (GHC.Types.[] @ Lib.AlignedRead)
                   Lib.defaultBed2
                   Lib.defaultBed2
                   Lib.defaultBed2
                   Lib.defaultBed2
                   Lib.defaultBed) -}
3b70a7fa689bfe8ce384c4decb57cd11
  defaultPairedAln :: Lib.PairedAln
  {- Strictness: m,
     Unfolding: (Lib.PairedAln
                   Lib.defaultAlignment
                   Lib.defaultAlignment
                   (GHC.Types.[] @ Lib.AlignedRead)
                   (GHC.Types.[] @ Lib.AlignedRead)) -}
69814aa9d1fbec2649c78c6d1eb24076
  dupRead :: Lib.SAMFlag -> GHC.Types.Bool
  RecSel Left Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLSL),1*U(A,A,A,A,A,A,A,A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.SAMFlag) ->
                 case ds6 of wild { Lib.SAMFlag ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds17 }) -}
1fc0d837b61ebbaa17edd71f0be30382
  end1 :: Lib.BEDPE -> GHC.Integer.Type.Integer
  RecSel Left Lib.BEDPE
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLL),1*U(A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.BEDPE) ->
                 case ds6 of wild { Lib.BEDPE ds7 ds8 ds9 ds10 ds11 ds12 ds13 ->
                 ds9 }) -}
1fc0d837b61ebbaa17edd71f0be30382
  end2 :: Lib.BEDPE -> GHC.Integer.Type.Integer
  RecSel Left Lib.BEDPE
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSL),1*U(A,A,A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.BEDPE) ->
                 case ds6 of wild { Lib.BEDPE ds7 ds8 ds9 ds10 ds11 ds12 ds13 ->
                 ds12 }) -}
eb54c5795cd87d65034c776d841620e0
  endpos :: Lib.AlignedRead -> GHC.Integer.Type.Integer
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds11 }) -}
df9b004043b522a81fe5449024403749
  expandcigar :: Lib.CigarMap -> Data.ByteString.Internal.ByteString
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (cmap :: Lib.CigarMap) ->
                 Data.ByteString.concat (Lib.expandcigar_go cmap)) -}
022ab2aa78b5665976cd39355bdffc5f
  expandcigar1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
b0639663d965bf4beffc2be861955073
  expandcigar2 ::
    Lib.CigarMap
    -> [(GHC.Integer.Type.Integer,
         Data.ByteString.Internal.ByteString)]
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (cmap :: Lib.CigarMap) ->
                 case Data.ByteString.concat
                        (Lib.expandcigar_go
                           cmap) of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 let {
                   ops :: [Data.ByteString.Internal.ByteString]
                   = GHC.Base.map
                       @ GHC.Types.Char
                       @ Data.ByteString.Internal.ByteString
                       Data.ByteString.Char8.singleton
                       (Data.ByteString.Internal.$wunpackAppendCharsLazy
                          ww1
                          ww2
                          ww3
                          ww4
                          (GHC.Types.[] @ GHC.Types.Char))
                 } in
                 let {
                   lim :: GHC.Integer.Type.Integer
                   = Lib.expandcigar2_gl ops Data.OldList.genericLength1
                 } in
                 letrec {
                   go20 :: GHC.Integer.Type.Integer
                           -> [Data.ByteString.Internal.ByteString]
                           -> [(GHC.Integer.Type.Integer,
                                Data.ByteString.Internal.ByteString)]
                     {- Arity: 2, Strictness: <S,U><L,1*U> -}
                   = \ (x :: GHC.Integer.Type.Integer)
                       (eta :: [Data.ByteString.Internal.ByteString]) ->
                     case GHC.Integer.Type.gtInteger# x lim of wild { DEFAULT ->
                     case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild of wild1 {
                       GHC.Types.False
                       -> case eta of wild2 {
                            []
                            -> GHC.Types.[]
                                 @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                            : y ys
                            -> GHC.Types.:
                                 @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                                 (x, y)
                                 (go20 (GHC.Integer.Type.plusInteger x Lib.expandcigar1) ys) }
                       GHC.Types.True
                       -> GHC.Types.[]
                            @ (GHC.Integer.Type.Integer,
                               Data.ByteString.Internal.ByteString) } }
                 } in
                 go20 Lib.expandcigar1 ops }) -}
7d0b8021ac87c4f964fac99b3e766d4b
  expandcigar2_gl ::
    [Data.ByteString.Internal.ByteString]
    -> GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
244ee6f4ad413a11460507e3cc216b2a
  expandcigar_go ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> [Data.ByteString.Internal.ByteString]
  {- Arity: 1, Strictness: <S,1*U> -}
a0150b9014dea7c603e973fd11c1f4d9
  exrights :: Data.Either.Either a1 a2 -> a2
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a @ a1 (x :: Data.Either.Either a a1) ->
                 case x of wild {
                   Data.Either.Left ipv -> GHC.List.badHead @ a1
                   Data.Either.Right a2 -> a2 }) -}
c5b13c1475b7b4dd0020ef795a460fcc
  exrights2 :: [a] -> GHC.Base.Maybe a
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (xs :: [a]) ->
                 case GHC.List.$wlenAcc @ a xs 0# of ww2 {
                   DEFAULT -> GHC.Base.Just @ a (GHC.List.head @ a xs)
                   0# -> GHC.Base.Nothing @ a }) -}
69814aa9d1fbec2649c78c6d1eb24076
  failedQC :: Lib.SAMFlag -> GHC.Types.Bool
  RecSel Left Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLSLL),1*U(A,A,A,A,A,A,A,A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.SAMFlag) ->
                 case ds6 of wild { Lib.SAMFlag ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds16 }) -}
43554b8f1d1e76f2524d08b44534d50c
  filtpadassoc ::
    [(GHC.Types.Int, Data.ByteString.Internal.ByteString)]
    -> [(GHC.Types.Int, Data.ByteString.Internal.ByteString)]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (asclist :: [(GHC.Types.Int,
                                 Data.ByteString.Internal.ByteString)]) ->
                 GHC.Base.build
                   @ (GHC.Types.Int, Data.ByteString.Internal.ByteString)
                   (\ @ b
                      (c2 :: (GHC.Types.Int, Data.ByteString.Internal.ByteString)
                             -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ (GHC.Types.Int, Data.ByteString.Internal.ByteString)
                      @ b
                      (GHC.List.filterFB
                         @ (GHC.Types.Int, Data.ByteString.Internal.ByteString)
                         @ b
                         c2
                         Lib.filtpadassoc1)
                      n
                      asclist)) -}
708206dba4ca1883192bd84d4cc4fe6a
  filtpadassoc1 ::
    (GHC.Types.Int, Data.ByteString.Internal.ByteString)
    -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S(LS(SLSS)),1*U(A,1*U(U,U,U,U))>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: (GHC.Types.Int, Data.ByteString.Internal.ByteString)) ->
                 case w of ww { (,) ww1 ww2 ->
                 case ww2 of ww3 { Data.ByteString.Internal.PS ww4 ww5 ww6 ww7 ->
                 Lib.$wlvl3 ww4 ww5 ww6 ww7 } }) -}
598d51ec5bdb8634e44a8b2d6498b075
  filtpadcmap :: Lib.CigarMap -> Lib.CigarMap
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (cmap :: Lib.CigarMap) ->
                 GHC.Base.build
                   @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                   (\ @ b
                      (c2 :: (GHC.Integer.Type.Integer,
                              Data.ByteString.Internal.ByteString)
                             -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                      @ b
                      (GHC.List.filterFB
                         @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                         @ b
                         c2
                         Lib.filtpadcmap1)
                      n
                      cmap)) -}
bce6b75135571951faa71fdc4f9c1676
  filtpadcmap1 ::
    (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
    -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S(LS(SLSS)),1*U(A,1*U(U,U,U,U))>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: (GHC.Integer.Type.Integer,
                          Data.ByteString.Internal.ByteString)) ->
                 case w of ww { (,) ww1 ww2 ->
                 case ww2 of ww3 { Data.ByteString.Internal.PS ww4 ww5 ww6 ww7 ->
                 Lib.$wlvl4 ww4 ww5 ww6 ww7 } }) -}
3a7252f7eb1e98b7453eea88bfb3f52a
  findByQname ::
    Data.ByteString.Internal.ByteString
    -> [Lib.AlignedRead] -> [Lib.AlignedRead]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U(U,U,U,U)><S,1*U>,
     Unfolding: (\ (name :: Data.ByteString.Internal.ByteString)
                   (as :: [Lib.AlignedRead]) ->
                 GHC.List.filter
                   @ Lib.AlignedRead
                   (\ (x :: Lib.AlignedRead) ->
                    case x of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                    case ds6 of wild1 { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                    case name of wild2 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                    case GHC.Prim.tagToEnum#
                           @ GHC.Types.Bool
                           (GHC.Prim./=# dt3 dt7) of wild3 {
                      GHC.Types.False
                      -> case GHC.Prim.tagToEnum#
                                @ GHC.Types.Bool
                                (GHC.Prim.eqAddr# dt dt4) of wild4 {
                           GHC.Types.False
                           -> case Data.ByteString.Internal.$wcompareBytes
                                     dt
                                     dt1
                                     dt2
                                     dt3
                                     dt4
                                     dt5
                                     dt6
                                     dt7 of wild5 {
                                DEFAULT -> GHC.Types.False GHC.Types.EQ -> GHC.Types.True }
                           GHC.Types.True
                           -> case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.==# dt2 dt6) of wild5 {
                                GHC.Types.False
                                -> case Data.ByteString.Internal.$wcompareBytes
                                          dt
                                          dt1
                                          dt2
                                          dt3
                                          dt4
                                          dt5
                                          dt6
                                          dt7 of wild6 {
                                     DEFAULT -> GHC.Types.False GHC.Types.EQ -> GHC.Types.True }
                                GHC.Types.True -> GHC.Types.True } }
                      GHC.Types.True -> GHC.Types.False } } } })
                   as) -}
eb54c5795cd87d65034c776d841620e0
  fint :: Lib.AlignedRead -> [Lib.BedRecord]
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLSLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds26 }) -}
eb54c5795cd87d65034c776d841620e0
  flag :: Lib.AlignedRead -> GHC.Types.Int
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds8 }) -}
499eeee7b091258e2383a5d9d6d334e3
  flattenPairedAln :: Lib.PairedAln -> [Lib.AlignedRead]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(1*U,1*U,1*U,1*U)>,
     Unfolding: (\ (p :: Lib.PairedAln) ->
                 Data.OldList.sortBy
                   @ Lib.AlignedRead
                   Lib.$fOrdAlignedRead_$ccompare
                   (GHC.Types.:
                      @ Lib.AlignedRead
                      (case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 -> ds6 })
                      (GHC.Types.:
                         @ Lib.AlignedRead
                         (case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 -> ds7 })
                         (case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                          GHC.Base.++ @ Lib.AlignedRead ds8 ds9 })))) -}
d1ab1cbb37144e1a514660b0716f3373
  flipClrBit :: GHC.Types.Int -> GHC.Types.Int -> GHC.Types.Int
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>m,
     Unfolding: InlineRule (2, True, True)
                (\ (x :: GHC.Types.Int) (y :: GHC.Types.Int) ->
                 Data.Bits.$fBitsInt_$cclearBit y x) -}
fbc4d250c6332b165a69d73382af86db
  flipSetBit :: GHC.Types.Int -> GHC.Types.Int -> GHC.Types.Int
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,1*U(U)>m,
     Unfolding: InlineRule (2, True, True)
                (\ (x :: GHC.Types.Int) (y :: GHC.Types.Int) ->
                 Data.Bits.$fBitsInt_$csetBit y x) -}
beb66c2fdced8fbd4bf1a3cf7cf7c45a
  flipTstBit :: GHC.Types.Int -> GHC.Types.Int -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,1*U(U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: GHC.Types.Int) (y :: GHC.Types.Int) ->
                 case y of wild { GHC.Types.I# x# ->
                 case x of wild1 { GHC.Types.I# i# ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# i# 64#) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.andI#
                             x#
                             (GHC.Prim.uncheckedIShiftL# 1# i#) of wild4 {
                        DEFAULT -> GHC.Types.True 0# -> GHC.Types.False }
                   GHC.Types.True -> GHC.Types.False } } }) -}
69814aa9d1fbec2649c78c6d1eb24076
  fstInPair :: Lib.SAMFlag -> GHC.Types.Bool
  RecSel Left Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLSLLLLL),1*U(A,A,A,A,A,A,1*U,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.SAMFlag) ->
                 case ds6 of wild { Lib.SAMFlag ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds13 }) -}
a9d706465385a4ec098564504c23e57b
  genLogFilePath :: GHC.IO.FilePath -> GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (fp :: GHC.IO.FilePath) ->
                 case GHC.List.$wlenAcc @ GHC.Types.Char fp 0# of ww { DEFAULT ->
                 case Data.ByteString.Internal.$wunsafePackLenChars
                        ww
                        fp of wild { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                 let {
                   parts :: [Data.ByteString.Internal.ByteString]
                   = case dt3 of ds6 {
                       DEFAULT
                       -> letrec {
                            $wloop3 :: GHC.Prim.Int# -> [Data.ByteString.Internal.ByteString]
                              {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                            = \ (ww1 :: GHC.Prim.Int#) ->
                              case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                                    -> GHC.Prim.Int#
                                                                    -> GHC.Prim.Word#
                                                                    -> GHC.Prim.State#
                                                                         GHC.Prim.RealWorld
                                                                    -> (# GHC.Prim.State#
                                                                            GHC.Prim.RealWorld,
                                                                          GHC.Prim.Addr# #)}
                                     (GHC.Prim.plusAddr# dt (GHC.Prim.+# dt2 ww1))
                                     46#
                                     (GHC.Prim.int2Word# (GHC.Prim.-# ds6 ww1))
                                     GHC.Prim.realWorld# of wild2 { (#,#) ds7 ds8 ->
                              case GHC.Prim.touch#
                                     @ 'GHC.Types.LiftedRep
                                     @ GHC.ForeignPtr.ForeignPtrContents
                                     dt1
                                     ds7 of s' { DEFAULT ->
                              case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.eqAddr# ds8 __NULL) of wild3 {
                                GHC.Types.False
                                -> let {
                                     i :: GHC.Types.Int
                                     = case GHC.Prim.touch#
                                              @ 'GHC.Types.LiftedRep
                                              @ GHC.ForeignPtr.ForeignPtrContents
                                              dt1
                                              GHC.Prim.realWorld# of s'1 { DEFAULT ->
                                       GHC.Types.I#
                                         (GHC.Prim.minusAddr# ds8 (GHC.Prim.plusAddr# dt dt2)) }
                                   } in
                                   GHC.Types.:
                                     @ Data.ByteString.Internal.ByteString
                                     (case i of wild4 { GHC.Types.I# x1 ->
                                      Data.ByteString.Internal.PS
                                        dt
                                        dt1
                                        (GHC.Prim.+# dt2 ww1)
                                        (GHC.Prim.-# x1 ww1) })
                                     (case i of wild4 { GHC.Types.I# x1 ->
                                      $wloop3 (GHC.Prim.+# x1 1#) })
                                GHC.Types.True
                                -> GHC.Types.:
                                     @ Data.ByteString.Internal.ByteString
                                     (Data.ByteString.Internal.PS
                                        dt
                                        dt1
                                        (GHC.Prim.+# dt2 ww1)
                                        (GHC.Prim.-# ds6 ww1))
                                     (GHC.Types.[] @ Data.ByteString.Internal.ByteString) } } }
                          } in
                          $wloop3 0#
                       0# -> GHC.Types.[] @ Data.ByteString.Internal.ByteString }
                 } in
                 case GHC.List.$wlenAcc
                        @ Data.ByteString.Internal.ByteString
                        parts
                        0# of ww2 { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# ww2 2#) of wild1 {
                   GHC.Types.False
                   -> case GHC.Base.mappend
                             @ Data.ByteString.Internal.ByteString
                             Data.ByteString.Internal.$fMonoidByteString
                             (case parts of wild2 {
                                [] -> GHC.List.badHead @ Data.ByteString.Internal.ByteString
                                : x ds6 -> x })
                             Lib.genLogFilePath3 of ww1 { Data.ByteString.Internal.PS ww3 ww4 ww5 ww6 ->
                      Data.ByteString.Internal.$wunpackAppendCharsLazy
                        ww3
                        ww4
                        ww5
                        ww6
                        (GHC.Types.[] @ GHC.Types.Char) }
                   GHC.Types.True -> Lib.genLogFilePath1 } } } }) -}
704150a075be60d7e36d6d9250b5f8a1
  genLogFilePath1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.genLogFilePath2) -}
5a63c727d35a161e3d25c11fb657971b
  genLogFilePath2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("primerclip_runstats.log"#) -}
405eca11cffc7b77b1267316b7c48494
  genLogFilePath3 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.genLogFilePath_addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.genLogFilePath_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
e31635a207a79f5741ec00e0f571411f
  genLogFilePath_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("_primerclip_runstats.log"#) -}
602c34a01600655937e260d9888d921c
  getAlignedLength ::
    Data.ByteString.Internal.ByteString -> GHC.Integer.Type.Integer
  {- Arity: 1, Strictness: <S(SLSS),1*U(U,U,U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.ByteString.Internal.ByteString) ->
                 case w of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wgetAlignedLength ww1 ww2 ww3 ww4 }) -}
2150fc5fbd9884db744fc93ca2c7267a
  getAlignedLength_go ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
96bde0754cba42e514faa10a111cefd2
  getFPrimerBEDfromMaster :: Lib.MasterRecord -> Lib.BedRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <L,U(1*U,A,A,A,1*U,1*U,A,A,1*U,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (mr :: Lib.MasterRecord) ->
                 Lib.BedRecord
                   (case mr of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds6 })
                   (case mr of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds10 })
                   (case mr of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds11 })
                   (case mr of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds14 })) -}
73234f8988774391df516f5e07ef09e0
  getMasterFile :: GHC.IO.FilePath -> GHC.Types.IO [Lib.MasterRecord]
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.createprimerbedmaps4
                  `cast`
                (<GHC.IO.FilePath>_R
                 ->_R Sym (GHC.Types.N:IO[0] <[Lib.MasterRecord]>_R)) -}
3bbb4c53a4147d7f5e517e17f7ef07bd
  getNclips ::
    [Data.ByteString.Internal.ByteString]
    -> GHC.Types.Char -> [Data.ByteString.Internal.ByteString]
  {- Arity: 2, Strictness: <S,1*U><L,U(U)>,
     Unfolding: (\ (ciggrps :: [Data.ByteString.Internal.ByteString])
                   (cigchar :: GHC.Types.Char) ->
                 letrec {
                   go20 :: [Data.ByteString.Internal.ByteString]
                           -> [Data.ByteString.Internal.ByteString]
                     {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds6 :: [Data.ByteString.Internal.ByteString]) ->
                     case ds6 of wild {
                       [] -> GHC.Types.[] @ Data.ByteString.Internal.ByteString
                       : y ys
                       -> case y of wild1 { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                          case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.<=# dt3 0#) of wild2 {
                            GHC.Types.False
                            -> case GHC.Magic.runRW#
                                      @ ('GHC.Types.TupleRep
                                           '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                                      @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                                           Data.ByteString.Internal.ByteString #)
                                      (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                       case GHC.Prim.noDuplicate#
                                              @ GHC.Prim.RealWorld
                                              s of s' { DEFAULT ->
                                       case GHC.Prim.tagToEnum#
                                              @ GHC.Types.Bool
                                              (GHC.Prim.<# dt3 0#) of wild3 {
                                         GHC.Types.False
                                         -> case GHC.Prim.newPinnedByteArray#
                                                   @ GHC.Prim.RealWorld
                                                   dt3
                                                   s' of ds7 { (#,#) ipv ipv1 ->
                                            let {
                                              ipv2 :: GHC.Prim.Addr#
                                              = GHC.Prim.byteArrayContents#
                                                  ipv1
                                                    `cast`
                                                  (UnsafeCo representational (GHC.Prim.MutableByteArray#
                                                                                GHC.Prim.RealWorld) GHC.Prim.ByteArray#)
                                            } in
                                            let {
                                              ipv3 :: GHC.ForeignPtr.ForeignPtrContents
                                              = GHC.ForeignPtr.PlainPtr ipv1
                                            } in
                                            let {
                                              lvl1008 :: Data.ByteString.Internal.ByteString
                                              = Data.ByteString.Internal.PS ipv2 ipv3 0# dt3
                                            } in
                                            letrec {
                                              $wgo45 :: GHC.Prim.Addr#
                                                        -> GHC.Prim.Addr#
                                                        -> GHC.Prim.Addr#
                                                        -> GHC.Prim.State# GHC.Prim.RealWorld
                                                        -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                              Data.ByteString.Internal.ByteString #)
                                                <join 4> {- Arity: 4,
                                                            Strictness: <S,U><S,U><S,U><S,U>,
                                                            Inline: [0] -}
                                              = \ (ww :: GHC.Prim.Addr#)
                                                  (ww1 :: GHC.Prim.Addr#)
                                                  (ww2 :: GHC.Prim.Addr#)
                                                  (w :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                                case GHC.Prim.tagToEnum#
                                                       @ GHC.Types.Bool
                                                       (GHC.Prim.eqAddr# ww ww2) of wild4 {
                                                  GHC.Types.False
                                                  -> case GHC.Prim.readWord8OffAddr#
                                                            @ GHC.Prim.RealWorld
                                                            ww
                                                            0#
                                                            w of ds8 { (#,#) ipv4 ipv5 ->
                                                     case cigchar of wild5 { GHC.Types.C# y1 ->
                                                     case GHC.Prim.tagToEnum#
                                                            @ GHC.Types.Bool
                                                            (GHC.Prim.eqChar#
                                                               (GHC.Prim.chr#
                                                                  (GHC.Prim.word2Int# ipv5))
                                                               y1) of wild6 {
                                                       GHC.Types.False
                                                       -> $wgo45
                                                            (GHC.Prim.plusAddr# ww 1#)
                                                            ww1
                                                            ww2
                                                            ipv4
                                                       GHC.Types.True
                                                       -> case GHC.Prim.writeWord8OffAddr#
                                                                 @ GHC.Prim.RealWorld
                                                                 ww1
                                                                 0#
                                                                 ipv5
                                                                 ipv4 of s114 { DEFAULT ->
                                                          $wgo45
                                                            (GHC.Prim.plusAddr# ww 1#)
                                                            (GHC.Prim.plusAddr# ww1 1#)
                                                            ww2
                                                            s114 } } } }
                                                  GHC.Types.True
                                                  -> case GHC.Prim.touch#
                                                            @ 'GHC.Types.LiftedRep
                                                            @ GHC.ForeignPtr.ForeignPtrContents
                                                            dt1
                                                            w of s'1 { DEFAULT ->
                                                     let {
                                                       ipv6 :: GHC.Prim.Int#
                                                       = GHC.Prim.minusAddr# ww1 ipv2
                                                     } in
                                                     case GHC.Prim.tagToEnum#
                                                            @ GHC.Types.Bool
                                                            (GHC.Prim.>=# ipv6 dt3) of wild5 {
                                                       GHC.Types.False
                                                       -> case GHC.Prim.tagToEnum#
                                                                 @ GHC.Types.Bool
                                                                 (GHC.Prim.<# ipv6 0#) of wild6 {
                                                            GHC.Types.False
                                                            -> case GHC.Prim.newPinnedByteArray#
                                                                      @ GHC.Prim.RealWorld
                                                                      ipv6
                                                                      s'1 of ds8 { (#,#) ipv7 ipv8 ->
                                                               let {
                                                                 ipv9 :: GHC.Prim.Addr#
                                                                 = GHC.Prim.byteArrayContents#
                                                                     ipv8
                                                                       `cast`
                                                                     (UnsafeCo representational (GHC.Prim.MutableByteArray#
                                                                                                   GHC.Prim.RealWorld) GHC.Prim.ByteArray#)
                                                               } in
                                                               case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                                                                     -> GHC.Prim.Addr#
                                                                                                     -> GHC.Prim.Word#
                                                                                                     -> GHC.Prim.State#
                                                                                                          GHC.Prim.RealWorld
                                                                                                     -> (# GHC.Prim.State#
                                                                                                             GHC.Prim.RealWorld,
                                                                                                           GHC.Prim.Addr# #)}
                                                                      ipv9
                                                                      ipv2
                                                                      (GHC.Prim.int2Word# ipv6)
                                                                      ipv7 of wild7 { (#,#) ds9 ds10 ->
                                                               let {
                                                                 ipv10 :: GHC.ForeignPtr.ForeignPtrContents
                                                                 = GHC.ForeignPtr.PlainPtr ipv8
                                                               } in
                                                               case GHC.Prim.touch#
                                                                      @ 'GHC.Types.LiftedRep
                                                                      @ GHC.ForeignPtr.ForeignPtrContents
                                                                      ipv10
                                                                      ds9 of s'2 { DEFAULT ->
                                                               case GHC.Prim.touch#
                                                                      @ 'GHC.Types.LiftedRep
                                                                      @ GHC.ForeignPtr.ForeignPtrContents
                                                                      ipv3
                                                                      s'2 of s'3 { DEFAULT ->
                                                               (# s'3,
                                                                  Data.ByteString.Internal.PS
                                                                    ipv9
                                                                    ipv10
                                                                    0#
                                                                    ipv6 #) } } } }
                                                            GHC.Types.True
                                                            -> case GHC.ForeignPtr.mallocPlainForeignPtrBytes2
                                                               ret_ty (# GHC.Prim.State#
                                                                           GHC.Prim.RealWorld,
                                                                         Data.ByteString.Internal.ByteString #)
                                                               of {} }
                                                       GHC.Types.True
                                                       -> case GHC.Prim.touch#
                                                                 @ 'GHC.Types.LiftedRep
                                                                 @ GHC.ForeignPtr.ForeignPtrContents
                                                                 ipv3
                                                                 s'1 of s'2 { DEFAULT ->
                                                          (# s'2, lvl1008 #) } } } }
                                            } in
                                            $wgo45
                                              (GHC.Prim.plusAddr# dt dt2)
                                              ipv2
                                              (GHC.Prim.plusAddr# dt (GHC.Prim.+# dt2 dt3))
                                              ipv }
                                         GHC.Types.True
                                         -> case GHC.ForeignPtr.mallocPlainForeignPtrBytes2
                                            ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                      Data.ByteString.Internal.ByteString #)
                                            of {} } }) of ds7 { (#,#) ipv ipv1 ->
                               case ipv1 of wild3 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                               case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.># dt7 0#) of wild4 {
                                 GHC.Types.False -> go20 ys
                                 GHC.Types.True
                                 -> GHC.Types.:
                                      @ Data.ByteString.Internal.ByteString
                                      wild3
                                      (go20 ys) } } }
                            GHC.Types.True
                            -> case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.># dt3 0#) of wild3 {
                                 GHC.Types.False -> go20 ys
                                 GHC.Types.True
                                 -> GHC.Types.:
                                      @ Data.ByteString.Internal.ByteString
                                      wild1
                                      (go20 ys) } } } }
                 } in
                 go20 ciggrps) -}
ff20d30fcb22067b09fb1f88f3eb7c9a
  getNonHeaderAlns :: [Lib.AlignedRead] -> [Lib.AlignedRead]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (as :: [Lib.AlignedRead]) ->
                 GHC.Base.build
                   @ Lib.AlignedRead
                   (\ @ b
                      (c2 :: Lib.AlignedRead -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ Lib.AlignedRead
                      @ b
                      (GHC.List.filterFB @ Lib.AlignedRead @ b c2 Lib.getNonHeaderAlns1)
                      n
                      as)) -}
523c0869f61f154b3fe3caa7ad1524a7
  getNonHeaderAlns1 :: Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLSLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.AlignedRead) ->
                 case x of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 case ds32 of wild1 {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False } }) -}
b31a2916cf8ab1e9cda9a2cab1f5af07
  getRPrimerBEDfromMaster :: Lib.MasterRecord -> Lib.BedRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <L,U(1*U,A,A,A,A,A,1*U,1*U,A,1*U,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (mr :: Lib.MasterRecord) ->
                 Lib.BedRecord
                   (case mr of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds6 })
                   (case mr of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds12 })
                   (case mr of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds13 })
                   (case mr of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds15 })) -}
14bdfd76cf4e281df26092a2eb9d5634
  getRight ::
    Data.Either.Either t (a, Lib.AlignedRead) -> Lib.AlignedRead
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ t @ a (e :: Data.Either.Either t (a, Lib.AlignedRead)) ->
                 case e of wild {
                   Data.Either.Left ds6 -> Lib.defaultAlignment
                   Data.Either.Right x -> Data.Tuple.snd @ a @ Lib.AlignedRead x }) -}
c45662754aca6286b12c830b18445942
  getRightM ::
    (GHC.Show.Show a1, Control.Monad.IO.Class.MonadIO m) =>
    Data.Either.Either a1 (a2, Lib.AlignedRead) -> m Lib.AlignedRead
  {- Arity: 3,
     Strictness: <L,U(A,C(U),A)><S(SL),U(1*U(A,A,1*C1(C1(U)),1*C1(U),A),1*C1(U))><S,1*U>,
     Unfolding: (\ @ m109 :: * -> *
                   @ a
                   @ a1
                   ($dShow :: GHC.Show.Show a)
                   ($dMonadIO :: Control.Monad.IO.Class.MonadIO m109)
                   (eta :: Data.Either.Either a (a1, Lib.AlignedRead)) ->
                 let {
                   $dMonad :: GHC.Base.Monad m109
                   = Control.Monad.IO.Class.$p1MonadIO @ m109 $dMonadIO
                 } in
                 case eta of wild {
                   Data.Either.Left e
                   -> GHC.Base.>>
                        @ m109
                        $dMonad
                        @ ()
                        @ Lib.AlignedRead
                        (Control.Monad.IO.Class.liftIO
                           @ m109
                           $dMonadIO
                           @ ()
                           (\ (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            System.IO.appendFile2
                              @ ()
                              Lib.getRightM1
                              GHC.IO.IOMode.WriteMode
                              (\ (hdl :: GHC.IO.Handle.Types.Handle)[OneShot] ->
                               GHC.IO.Handle.Text.hPutStr2
                                 hdl
                                 (GHC.Show.show @ a $dShow e)
                                 GHC.Types.False)
                                `cast`
                              (<GHC.IO.Handle.Types.Handle>_R
                               ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                              eta1)
                             `cast`
                           (Sym (GHC.Types.N:IO[0] <()>_R)))
                        (GHC.Base.return
                           @ m109
                           $dMonad
                           @ Lib.AlignedRead
                           Lib.defaultAlignment)
                   Data.Either.Right a2
                   -> GHC.Base.return
                        @ m109
                        $dMonad
                        @ Lib.AlignedRead
                        (case a2 of wild1 { (,) ds6 y -> y }) }) -}
a6aa42ff7fae22759118a0dddad54d47
  getRightM1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.getRightM2) -}
151b0a3c26c78a9f3d6c439fed521a33
  getRightM2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("samparsefails.log"#) -}
d330fbe80a2df7007d2095c53cd3d325
  getTargetBEDfromMaster :: Lib.MasterRecord -> Lib.BedRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <L,U(1*U,1*U,1*U,1*U,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (mr :: Lib.MasterRecord) ->
                 Lib.BedRecord
                   (case mr of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds6 })
                   (case mr of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds7 })
                   (case mr of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds8 })
                   (case mr of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds9 })) -}
3778e75e96aaede7d0499fbb7b4077da
  getTrimdcigCoordDiff :: Lib.AlignedRead -> GHC.Integer.Type.Integer
  {- Arity: 1,
     Strictness: <S(LLLLLLLS(SLSS)LLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,U,1*U,A,A,A,A,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.AlignedRead) ->
                 case w of ww { Lib.AlignedRead ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ->
                 case ww8 of ww32 { Data.ByteString.Internal.PS ww33 ww34 ww35 ww36 ->
                 Lib.$wgetTrimdcigCoordDiff ww33 ww34 ww35 ww36 ww24 ww25 } }) -}
6996d2c67b6468080aa6285f65eedba0
  getTrimdcigCoordDiff_go ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
0feb6b295ad951b5946ff9a5f0b7519a
  getcigseqdiff :: Lib.AlignedRead -> GHC.Integer.Type.Integer
  {- Arity: 1,
     Strictness: <S(LLLLLLLS(SLSS)LLLLLS(LLLS)LLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,1*U(A,A,A,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.AlignedRead) ->
                 case w of ww { Lib.AlignedRead ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ->
                 case ww8 of ww32 { Data.ByteString.Internal.PS ww33 ww34 ww35 ww36 ->
                 case ww14 of ww37 { Data.ByteString.Internal.PS ww38 ww39 ww40 ww41 ->
                 Lib.$wgetcigseqdiff ww33 ww34 ww35 ww36 ww41 } } }) -}
7e2ee9e5abc7c0039028e54c6f7d9cc6
  getcigseqdiff_go ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
40a853388ea6300cef942f4f5ae3861a
  getcol ::
    GHC.Types.Int
    -> Data.Vector.Vector (Data.Vector.Vector a)
    -> Data.Vector.Vector a
  {- Arity: 2, Strictness: <L,U(U)><S(SSS),1*U(U,U,U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   (w :: GHC.Types.Int)
                   (w1 :: Data.Vector.Vector (Data.Vector.Vector a)) ->
                 case w1 of ww { Data.Vector.Vector ww1 ww2 ww3 ->
                 Lib.$wgetcol @ a w ww1 ww2 ww3 }) -}
496c0b428595df6a5db757343cefc3ac
  getcol1 :: GHC.Prim.Int# -> GHC.Prim.Int# -> GHC.Prim.Addr# -> a
  {- Arity: 3, Strictness: <B,U><B,U><B,U>x -}
a709716289074a854cc75d16322f4460
  getlengths ::
    GHC.Base.Functor f =>
    f Data.ByteString.Internal.ByteString -> f GHC.Types.Int
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ f8 :: * -> *
                   ($dFunctor :: GHC.Base.Functor f8)
                   (seqs :: f8 Data.ByteString.Internal.ByteString) ->
                 GHC.Base.fmap
                   @ f8
                   $dFunctor
                   @ Data.ByteString.Internal.ByteString
                   @ GHC.Types.Int
                   Data.ByteString.length
                   seqs) -}
0af6d95b1ae05b1485ff5f62304a568d
  hdralnparser ::
    Data.Attoparsec.ByteString.Internal.Parser Lib.AlignedRead
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.hdralnparser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <Lib.AlignedRead>_R)) -}
608479ef6351846730ff0245aebf57fe
  hdralnparser1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.AlignedRead
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.AlignedRead
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$whdralnparser @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
a29de046cf75c8f291fd0c908c37c649
  hdralnparser2 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.hdralnparser_addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.hdralnparser_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
f3606ada09eddcd265ef10d6622cffd8
  hdralnparserEOL ::
    Data.Attoparsec.ByteString.Internal.Parser Lib.PairedAln
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.hdralnparserEOL1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <Lib.PairedAln>_R)) -}
1a4bb09fd728a715340a3bab06fe3fab
  hdralnparserEOL' ::
    Data.Attoparsec.ByteString.Internal.Parser Lib.AlignedRead
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.hdralnparserEOL'1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <Lib.AlignedRead>_R)) -}
8cfa3528e0f2e532bff8e7594a5e224d
  hdralnparserEOL'1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.AlignedRead
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.AlignedRead
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$whdralnparserEOL'
                   @ r
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww8
                   w2
                   w3
                   w4 } }) -}
27eaee58cf762e2be29b0d260489262e
  hdralnparserEOL1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.PairedAln
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.PairedAln
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$whdralnparserEOL
                   @ r
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww8
                   w2
                   w3
                   w4 } }) -}
a403fe6ff32edbf70527d0233e4976c9
  hdralnparser_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("HEADERLINE"#) -}
720d641fbf474e2453ba980deabd50cc
  hdrchromp :: Data.Attoparsec.ByteString.Internal.Parser Lib.UChr
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.hdrchromp1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <Lib.UChr>_R)) -}
ff3563932aeb4d78be7b6abf709a2454
  hdrchromp1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.UChr
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.UChr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$whdrchromp @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
eb54c5795cd87d65034c776d841620e0
  headerstrings :: Lib.AlignedRead -> Lib.Header
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLSLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds32 }) -}
a191184d82d6c42d7374cb410cc444a9
  headsafeAln :: [Lib.AlignedRead] -> Lib.AlignedRead
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (as :: [Lib.AlignedRead]) ->
                 case as of wild { [] -> Lib.alnsToPairedAln1 : ds6 ds7 -> ds6 }) -}
69605119a398f29c235919bcd7f9bece
  incoordsfile :: Lib.Opts -> GHC.Base.String
  RecSel Left Lib.Opts
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSLL),1*U(A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.Opts) ->
                 case ds6 of wild { Lib.Opts ds7 ds8 ds9 ds10 -> ds8 }) -}
69605119a398f29c235919bcd7f9bece
  insamfile :: Lib.Opts -> GHC.Base.String
  RecSel Left Lib.Opts
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLSL),1*U(A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.Opts) ->
                 case ds6 of wild { Lib.Opts ds7 ds8 ds9 ds10 -> ds9 }) -}
69814aa9d1fbec2649c78c6d1eb24076
  intflag :: Lib.SAMFlag -> GHC.Types.Int
  RecSel Left Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLS),1*U(A,A,A,A,A,A,A,A,A,A,A,1*U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.SAMFlag) ->
                 case ds6 of wild { Lib.SAMFlag ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds18 }) -}
ea205c632373ccd880c9a0cc0a35b0ec
  intgr2int :: GHC.Integer.Type.Integer -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m,
     Unfolding: InlineRule (1, True, False)
                (\ (n :: GHC.Integer.Type.Integer) ->
                 case GHC.Integer.Type.integerToInt n of wild { DEFAULT ->
                 GHC.Types.I# wild }) -}
eb54c5795cd87d65034c776d841620e0
  isheader :: Lib.AlignedRead -> GHC.Types.Bool
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLSLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds33 }) -}
e9dafe76f80e3f02b72fe5c7aaf52e98
  itypep ::
    Data.Attoparsec.ByteString.Internal.Parser
      Data.ByteString.Internal.ByteString
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.itypep1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)) -}
4a8c68942fc82c9e162d18ac1c9b3f90
  itypep1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww { GHC.Types.I# ww1 ->
                 Lib.$witypep @ r w ww1 w2 w3 w4 }) -}
57a9b3d0594d8b4f0835b43fd3282a21
  itypep2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.itypep_addr#) -}
86344a39914d3daef6eefb0b9551018d
  itypep_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("i"#) -}
5f470bd09a4920d7dbcad21caf883681
  itypep_m ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString
      Data.ByteString.Internal.ByteString
  {- Unfolding: (Data.Attoparsec.ByteString.Char8.$fIsStringParser_$cfromString
                   @ Data.ByteString.Internal.ByteString
                   (GHC.Types.Eq#
                      @ *
                      @ *
                      @ Data.ByteString.Internal.ByteString
                      @ Data.ByteString.Internal.ByteString
                      @~ <Data.ByteString.Internal.ByteString>_N)
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Data.ByteString.Internal.ByteString>_N <Data.ByteString.Internal.ByteString>_N)
                   Lib.itypep2) -}
aad74748f3f803448de597bc8629f5ee
  itypep_v :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.itypep_addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.itypep_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
ad9ba562d0488a53841faf5579bd57a1
  ix :: GHC.Types.Int -> Data.Vector.Vector a -> a
  {- Arity: 2, Strictness: <S(S),1*U(U)><S(SSS),1*U(U,U,U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a (w :: GHC.Types.Int) (w1 :: Data.Vector.Vector a) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Data.Vector.Vector ww3 ww4 ww5 ->
                 Lib.$wix @ a ww1 ww3 ww4 ww5 } }) -}
8bec6f5a402053924585109845b3c14e
  justbedmaps :: [GHC.Base.Maybe Lib.BedRecord] -> [Lib.BedRecord]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, True)
                (Data.Maybe.catMaybes @ Lib.BedRecord) -}
145428d259d349df4654dee3ae78348d
  justchrmaps ::
    [GHC.Base.Maybe (Data.IntMap.Internal.IntMap Lib.BedRecord)]
    -> [Data.IntMap.Internal.IntMap Lib.BedRecord]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, True)
                (Data.Maybe.catMaybes
                   @ (Data.IntMap.Internal.IntMap Lib.BedRecord)) -}
7517f642ba2f4504c6bf101698e0afb1
  mIDp ::
    Data.Attoparsec.ByteString.Internal.Parser
      Data.ByteString.Internal.ByteString
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.mIDp1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)) -}
c4556cbf8eb75281c3230a9789a6d70b
  mIDp1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wmIDp @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
329263e016f8dc092618e0d9a47a23b1
  makeMRNMexplicit :: Lib.PairedAln -> Lib.PairedAln
  {- Arity: 1,
     Strictness: <S(S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLS)LLL),1*U(U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)>m,
     Unfolding: (\ (p :: Lib.PairedAln) ->
                 case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                 case ds6 of wild1 { Lib.AlignedRead ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ->
                 let {
                   $j :: Lib.PairedAln <join 0> {- Strictness: m -}
                   = let {
                       r2pRNAME :: Data.ByteString.Internal.ByteString
                       = case ds7 of wild2 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                         let {
                           cs :: [GHC.Types.Char] = Lib.$fShowUChr_$cshow ds43
                         } in
                         case GHC.List.$wlenAcc @ GHC.Types.Char cs 0# of ww { DEFAULT ->
                         Data.ByteString.Internal.$wunsafePackLenChars ww cs } }
                     } in
                     let {
                       r1pRNAME :: Data.ByteString.Internal.ByteString
                       = let {
                           cs :: [GHC.Types.Char] = Lib.$fShowUChr_$cshow ds12
                         } in
                         case GHC.List.$wlenAcc @ GHC.Types.Char cs 0# of ww { DEFAULT ->
                         Data.ByteString.Internal.$wunsafePackLenChars ww cs }
                     } in
                     Lib.PairedAln
                       (Lib.AlignedRead
                          ds10
                          ds11
                          ds12
                          ds13
                          ds14
                          ds15
                          ds16
                          ds17
                          ds18
                          ds19
                          r2pRNAME
                          ds21
                          ds22
                          ds23
                          ds24
                          ds25
                          ds26
                          ds27
                          ds28
                          ds29
                          ds30
                          ds31
                          ds32
                          ds33
                          ds34
                          ds35
                          ds36
                          ds37
                          ds38
                          ds39
                          ds40)
                       (case ds7 of wild2 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                        Lib.AlignedRead
                          ds41
                          ds42
                          ds43
                          ds44
                          ds45
                          ds46
                          ds47
                          ds48
                          ds49
                          ds50
                          r1pRNAME
                          ds52
                          ds53
                          ds54
                          ds55
                          ds56
                          ds57
                          ds58
                          ds59
                          ds60
                          ds61
                          ds62
                          ds63
                          ds64
                          ds65
                          ds66
                          ds67
                          ds68
                          ds69
                          ds70
                          ds71 })
                       (GHC.Base.map
                          @ Lib.AlignedRead
                          @ Lib.AlignedRead
                          (\ (x :: Lib.AlignedRead) ->
                           case x of wild2 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                           Lib.AlignedRead
                             ds41
                             ds42
                             ds43
                             ds44
                             ds45
                             ds46
                             ds47
                             ds48
                             ds49
                             ds50
                             r2pRNAME
                             ds52
                             ds53
                             ds54
                             ds55
                             ds56
                             ds57
                             ds58
                             ds59
                             ds60
                             ds61
                             ds62
                             ds63
                             ds64
                             ds65
                             ds66
                             ds67
                             ds68
                             ds69
                             ds70
                             ds71 })
                          ds8)
                       (GHC.Base.map
                          @ Lib.AlignedRead
                          @ Lib.AlignedRead
                          (\ (x :: Lib.AlignedRead) ->
                           case x of wild2 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                           Lib.AlignedRead
                             ds41
                             ds42
                             ds43
                             ds44
                             ds45
                             ds46
                             ds47
                             ds48
                             ds49
                             ds50
                             r1pRNAME
                             ds52
                             ds53
                             ds54
                             ds55
                             ds56
                             ds57
                             ds58
                             ds59
                             ds60
                             ds61
                             ds62
                             ds63
                             ds64
                             ds65
                             ds66
                             ds67
                             ds68
                             ds69
                             ds70
                             ds71 })
                          ds9)
                 } in
                 case ds40 of wild2 {
                   GHC.Types.False
                   -> let {
                        $j1 :: Lib.PairedAln <join 0> {- Strictness: m -}
                        = case ds7 of wild3 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                          case ds71 of wild4 {
                            GHC.Types.False
                            -> letrec {
                                 go20 :: [Lib.AlignedRead] -> Lib.PairedAln
                                   <join 1> {- Arity: 1, Strictness: <S,1*U>m -}
                                 = \ (ds72 :: [Lib.AlignedRead]) ->
                                   case ds72 of wild5 {
                                     [] -> wild
                                     : y ys
                                     -> case y of wild6 { Lib.AlignedRead ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ds90 ds91 ds92 ds93 ds94 ds95 ds96 ds97 ds98 ds99 ds100 ds101 ds102 ds103 ->
                                        case ds103 of wild7 {
                                          GHC.Types.False -> go20 ys GHC.Types.True -> $j } } }
                               } in
                               go20 ds9
                            GHC.Types.True -> $j } }
                      } in
                      letrec {
                        go20 :: [Lib.AlignedRead] -> Lib.PairedAln
                          <join 1> {- Arity: 1, Strictness: <S,1*U>m -}
                        = \ (ds41 :: [Lib.AlignedRead]) ->
                          case ds41 of wild3 {
                            [] -> $j1
                            : y ys
                            -> case y of wild4 { Lib.AlignedRead ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ->
                               case ds72 of wild5 {
                                 GHC.Types.False -> go20 ys GHC.Types.True -> $j } } }
                      } in
                      go20 ds8
                   GHC.Types.True -> $j } } }) -}
7a5f4e0ac690041e633493a7bd25de55
  makeTrimmedUpdates :: Lib.PairedAln -> Lib.PairedAln
  {- Arity: 1,
     Strictness: <L,1*U(U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.PairedAln) ->
                 case Lib.$wmakeTrimmedUpdates w of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 Lib.PairedAln ww1 ww2 ww3 ww4 }) -}
cd799302bcdafc5a0337efb42e5161cd
  makeTrimmedUpdates1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1200) -}
cbfc970aac36283c73615f269f98e9c5
  makeTrimmedUpdates2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (-1200) -}
bc8d4d1860aed04163bdb8f32e5909ad
  makebedmap ::
    [Lib.BedRecord] -> Data.IntMap.Internal.IntMap Lib.BedRecord
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (bs :: [Lib.BedRecord]) ->
                 Data.IntMap.Strict.fromList1
                   @ Lib.BedRecord
                   (Data.IntMap.Internal.Nil @ Lib.BedRecord)
                   (Lib.makebedmap_go bs)) -}
49f57a3eabf456b90b3c6e5aba1b6a3c
  makebedmap_go ::
    [Lib.BedRecord] -> [(GHC.Types.Int, Lib.BedRecord)]
  {- Arity: 1, Strictness: <S,1*U> -}
3880c58752b97e201fc1f41101093bdf
  makechrbedmap ::
    Lib.BED
    -> Data.Map.Internal.Map
         Lib.UChr (Data.IntMap.Internal.IntMap Lib.BedRecord)
  {- Arity: 1, Strictness: <S(SSS),1*U(U,U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.BED) ->
                 case w of ww { Data.Vector.Vector ww1 ww2 ww3 ->
                 Lib.$wmakechrbedmap ww1 ww2 ww3 }) -}
a1df52b06c1cffde1d994fe64d3e0900
  makeprimertups :: Lib.BedRecord -> [(GHC.Types.Int, Lib.BedRecord)]
  {- Arity: 1, Strictness: <S(LSSL),1*U(U,U,U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.BedRecord) ->
                 case w of ww { Lib.BedRecord ww1 ww2 ww3 ww4 ->
                 Lib.$wmakeprimertups ww1 ww2 ww3 ww4 }) -}
2f18c4e0ee8e139fac28c4ba267bf71c
  makeprimertups1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (2) -}
06caff25e138935957c1d9216ae6952f
  mampname :: Lib.MasterRecord -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.MasterRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLLLLLLL),1*U(A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MasterRecord) ->
                 case ds6 of wild { Lib.MasterRecord ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds10 }) -}
9191ba5b217834fa7597609f7d5d5f37
  mapcig :: Data.ByteString.Internal.ByteString -> Lib.CigarMap
  {- Arity: 1, Strictness: <S(SLSS),1*U(U,U,U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.ByteString.Internal.ByteString) ->
                 case w of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wmapcig ww1 ww2 ww3 ww4 }) -}
68dd661ec753444e91e47e7433099533
  mapfst :: GHC.Num.Num a => (a -> c) -> (a, b) -> (c, b)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,A><L,1*C1(U)><S,1*U(U,U)>m,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   @ c2
                   @ b
                   ($dNum :: GHC.Num.Num a)
                   (f8 :: a -> c2)
                   (ds6 :: (a, b)) ->
                 case ds6 of wild { (,) x y -> (f8 x, y) }) -}
eb54c5795cd87d65034c776d841620e0
  mapped :: Lib.AlignedRead -> GHC.Types.Bool
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLSLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds25 }) -}
ceb4d0ea9cbcc5b1524e546fcc802235
  mappedPct :: Lib.RunStats -> GHC.Types.Double
  RecSel Left Lib.RunStats
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLS),1*U(A,A,A,A,A,1*U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.RunStats) ->
                 case ds6 of wild { Lib.RunStats ds7 ds8 ds9 ds10 ds11 ds12 ->
                 ds12 }) -}
eb54c5795cd87d65034c776d841620e0
  mapqual :: Lib.AlignedRead -> GHC.Integer.Type.Integer
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds12 }) -}
261622a5028194841c42c73dbb8b839d
  masterRecToTargetBED :: Lib.MasterRecord -> Lib.BedRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <L,U(1*U,1*U,1*U,1*U,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (m109 :: Lib.MasterRecord) ->
                 Lib.BedRecord
                   (case m109 of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds6 })
                   (case m109 of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds7 })
                   (case m109 of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds8 })
                   (case m109 of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds9 })) -}
e8a43fc68fa59338dac8a7cc34c3f427
  masterToFPrimerBED :: [Lib.MasterRecord] -> Lib.BED
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (mrecs :: [Lib.MasterRecord]) ->
                 case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                             Data.Vector.Vector Lib.BedRecord #)
                        (\ (s114 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newArray#
                                @ Lib.BedRecord
                                @ (Control.Monad.Primitive.PrimState
                                     (GHC.ST.ST GHC.Prim.RealWorld))
                                0#
                                (Data.Vector.Mutable.uninitialised @ Lib.BedRecord)
                                s114
                                  `cast`
                                (Nth:2
                                     (Nth:2
                                          (Trans
                                               (<GHC.ST.STRep
                                                   GHC.Prim.RealWorld
                                                   (Data.Primitive.Array.MutableArray
                                                      (Control.Monad.Primitive.PrimState
                                                         (GHC.ST.ST GHC.Prim.RealWorld))
                                                      Lib.BedRecord)>_R
                                                ->_R Sym (GHC.ST.N:ST[0]
                                                              <GHC.Prim.RealWorld>_N
                                                              <Data.Primitive.Array.MutableArray
                                                                 (Control.Monad.Primitive.PrimState
                                                                    (GHC.ST.ST GHC.Prim.RealWorld))
                                                                 Lib.BedRecord>_R))
                                               (((GHC.Prim.State#
                                                    (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                              <GHC.Prim.RealWorld>_N)))_R
                                                 ->_R ((#,#)
                                                         <'GHC.Types.TupleRep '[]>_R
                                                         <'GHC.Types.LiftedRep>_R
                                                         (GHC.Prim.State#
                                                            (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                      <GHC.Prim.RealWorld>_N)))_R
                                                         <Data.Primitive.Array.MutableArray
                                                            (Control.Monad.Primitive.PrimState
                                                               (GHC.ST.ST GHC.Prim.RealWorld))
                                                            Lib.BedRecord>_R)_R)
                                                ->_R <GHC.ST.ST
                                                        GHC.Prim.RealWorld
                                                        (Data.Primitive.Array.MutableArray
                                                           (Control.Monad.Primitive.PrimState
                                                              (GHC.ST.ST GHC.Prim.RealWorld))
                                                           Lib.BedRecord)>_R)))) of ds6 { (#,#) ipv ipv1 ->
                         Lib.$wfoldlM_loop3
                           GHC.Types.SPEC
                           0#
                           0#
                           ipv1
                             `cast`
                           (GHC.Prim.MutableArray#
                              (Control.Monad.Primitive.D:R:PrimStateST[0] <GHC.Prim.RealWorld>_N)
                              <Lib.BedRecord>_R)_R
                           0#
                           (GHC.Base.map
                              @ Lib.MasterRecord
                              @ Lib.BedRecord
                              Lib.getFPrimerBEDfromMaster
                              (Data.OldList.sortBy
                                 @ Lib.MasterRecord
                                 Lib.$fOrdMasterRecord_$ccompare
                                 mrecs))
                           ipv
                             `cast`
                           (Nth:2
                                (Nth:3
                                     (Nth:2
                                          (Trans
                                               (((GHC.Prim.State#
                                                    (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                         <GHC.Prim.RealWorld>_N))_R
                                                 ->_R ((#,#)
                                                         <'GHC.Types.TupleRep '[]>_R
                                                         <'GHC.Types.LiftedRep>_R
                                                         (GHC.Prim.State#
                                                            (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                 <GHC.Prim.RealWorld>_N))_R
                                                         <Data.Primitive.Array.MutableArray
                                                            (Control.Monad.Primitive.PrimState
                                                               (GHC.ST.ST GHC.Prim.RealWorld))
                                                            Lib.BedRecord>_R)_R)
                                                ->_R <GHC.ST.ST
                                                        GHC.Prim.RealWorld
                                                        (Data.Primitive.Array.MutableArray
                                                           (Control.Monad.Primitive.PrimState
                                                              (GHC.ST.ST GHC.Prim.RealWorld))
                                                           Lib.BedRecord)>_R)
                                               (<GHC.ST.STRep
                                                   GHC.Prim.RealWorld
                                                   (Data.Primitive.Array.MutableArray
                                                      (Control.Monad.Primitive.PrimState
                                                         (GHC.ST.ST GHC.Prim.RealWorld))
                                                      Lib.BedRecord)>_R
                                                ->_R GHC.ST.N:ST[0]
                                                         <GHC.Prim.RealWorld>_N
                                                         <Data.Primitive.Array.MutableArray
                                                            (Control.Monad.Primitive.PrimState
                                                               (GHC.ST.ST GHC.Prim.RealWorld))
                                                            Lib.BedRecord>_R))))) }) of ds6 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
cf3dea0d5e7eb034f82ac952ab12438f
  masterToRPrimerBED :: [Lib.MasterRecord] -> Lib.BED
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (mrecs :: [Lib.MasterRecord]) ->
                 case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                             Data.Vector.Vector Lib.BedRecord #)
                        (\ (s114 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newArray#
                                @ Lib.BedRecord
                                @ (Control.Monad.Primitive.PrimState
                                     (GHC.ST.ST GHC.Prim.RealWorld))
                                0#
                                (Data.Vector.Mutable.uninitialised @ Lib.BedRecord)
                                s114
                                  `cast`
                                (Nth:2
                                     (Nth:2
                                          (Trans
                                               (<GHC.ST.STRep
                                                   GHC.Prim.RealWorld
                                                   (Data.Primitive.Array.MutableArray
                                                      (Control.Monad.Primitive.PrimState
                                                         (GHC.ST.ST GHC.Prim.RealWorld))
                                                      Lib.BedRecord)>_R
                                                ->_R Sym (GHC.ST.N:ST[0]
                                                              <GHC.Prim.RealWorld>_N
                                                              <Data.Primitive.Array.MutableArray
                                                                 (Control.Monad.Primitive.PrimState
                                                                    (GHC.ST.ST GHC.Prim.RealWorld))
                                                                 Lib.BedRecord>_R))
                                               (((GHC.Prim.State#
                                                    (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                              <GHC.Prim.RealWorld>_N)))_R
                                                 ->_R ((#,#)
                                                         <'GHC.Types.TupleRep '[]>_R
                                                         <'GHC.Types.LiftedRep>_R
                                                         (GHC.Prim.State#
                                                            (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                      <GHC.Prim.RealWorld>_N)))_R
                                                         <Data.Primitive.Array.MutableArray
                                                            (Control.Monad.Primitive.PrimState
                                                               (GHC.ST.ST GHC.Prim.RealWorld))
                                                            Lib.BedRecord>_R)_R)
                                                ->_R <GHC.ST.ST
                                                        GHC.Prim.RealWorld
                                                        (Data.Primitive.Array.MutableArray
                                                           (Control.Monad.Primitive.PrimState
                                                              (GHC.ST.ST GHC.Prim.RealWorld))
                                                           Lib.BedRecord)>_R)))) of ds6 { (#,#) ipv ipv1 ->
                         Lib.$wfoldlM_loop2
                           GHC.Types.SPEC
                           0#
                           0#
                           ipv1
                             `cast`
                           (GHC.Prim.MutableArray#
                              (Control.Monad.Primitive.D:R:PrimStateST[0] <GHC.Prim.RealWorld>_N)
                              <Lib.BedRecord>_R)_R
                           0#
                           (GHC.Base.map
                              @ Lib.MasterRecord
                              @ Lib.BedRecord
                              Lib.getRPrimerBEDfromMaster
                              (Data.OldList.sortBy
                                 @ Lib.MasterRecord
                                 Lib.$fOrdMasterRecord_$ccompare
                                 mrecs))
                           ipv
                             `cast`
                           (Nth:2
                                (Nth:3
                                     (Nth:2
                                          (Trans
                                               (((GHC.Prim.State#
                                                    (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                         <GHC.Prim.RealWorld>_N))_R
                                                 ->_R ((#,#)
                                                         <'GHC.Types.TupleRep '[]>_R
                                                         <'GHC.Types.LiftedRep>_R
                                                         (GHC.Prim.State#
                                                            (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                 <GHC.Prim.RealWorld>_N))_R
                                                         <Data.Primitive.Array.MutableArray
                                                            (Control.Monad.Primitive.PrimState
                                                               (GHC.ST.ST GHC.Prim.RealWorld))
                                                            Lib.BedRecord>_R)_R)
                                                ->_R <GHC.ST.ST
                                                        GHC.Prim.RealWorld
                                                        (Data.Primitive.Array.MutableArray
                                                           (Control.Monad.Primitive.PrimState
                                                              (GHC.ST.ST GHC.Prim.RealWorld))
                                                           Lib.BedRecord)>_R)
                                               (<GHC.ST.STRep
                                                   GHC.Prim.RealWorld
                                                   (Data.Primitive.Array.MutableArray
                                                      (Control.Monad.Primitive.PrimState
                                                         (GHC.ST.ST GHC.Prim.RealWorld))
                                                      Lib.BedRecord)>_R
                                                ->_R GHC.ST.N:ST[0]
                                                         <GHC.Prim.RealWorld>_N
                                                         <Data.Primitive.Array.MutableArray
                                                            (Control.Monad.Primitive.PrimState
                                                               (GHC.ST.ST GHC.Prim.RealWorld))
                                                            Lib.BedRecord>_R))))) }) of ds6 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
71c7a2e889903d16c5896a16cfc4c195
  masterToTargetBED :: [Lib.MasterRecord] -> Lib.BED
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (mrecs :: [Lib.MasterRecord]) ->
                 case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                             Data.Vector.Vector Lib.BedRecord #)
                        (\ (s114 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newArray#
                                @ Lib.BedRecord
                                @ (Control.Monad.Primitive.PrimState
                                     (GHC.ST.ST GHC.Prim.RealWorld))
                                0#
                                (Data.Vector.Mutable.uninitialised @ Lib.BedRecord)
                                s114
                                  `cast`
                                (Nth:2
                                     (Nth:2
                                          (Trans
                                               (<GHC.ST.STRep
                                                   GHC.Prim.RealWorld
                                                   (Data.Primitive.Array.MutableArray
                                                      (Control.Monad.Primitive.PrimState
                                                         (GHC.ST.ST GHC.Prim.RealWorld))
                                                      Lib.BedRecord)>_R
                                                ->_R Sym (GHC.ST.N:ST[0]
                                                              <GHC.Prim.RealWorld>_N
                                                              <Data.Primitive.Array.MutableArray
                                                                 (Control.Monad.Primitive.PrimState
                                                                    (GHC.ST.ST GHC.Prim.RealWorld))
                                                                 Lib.BedRecord>_R))
                                               (((GHC.Prim.State#
                                                    (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                              <GHC.Prim.RealWorld>_N)))_R
                                                 ->_R ((#,#)
                                                         <'GHC.Types.TupleRep '[]>_R
                                                         <'GHC.Types.LiftedRep>_R
                                                         (GHC.Prim.State#
                                                            (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                      <GHC.Prim.RealWorld>_N)))_R
                                                         <Data.Primitive.Array.MutableArray
                                                            (Control.Monad.Primitive.PrimState
                                                               (GHC.ST.ST GHC.Prim.RealWorld))
                                                            Lib.BedRecord>_R)_R)
                                                ->_R <GHC.ST.ST
                                                        GHC.Prim.RealWorld
                                                        (Data.Primitive.Array.MutableArray
                                                           (Control.Monad.Primitive.PrimState
                                                              (GHC.ST.ST GHC.Prim.RealWorld))
                                                           Lib.BedRecord)>_R)))) of ds6 { (#,#) ipv ipv1 ->
                         Lib.$wfoldlM_loop4
                           GHC.Types.SPEC
                           0#
                           0#
                           ipv1
                             `cast`
                           (GHC.Prim.MutableArray#
                              (Control.Monad.Primitive.D:R:PrimStateST[0] <GHC.Prim.RealWorld>_N)
                              <Lib.BedRecord>_R)_R
                           0#
                           (GHC.Base.map
                              @ Lib.MasterRecord
                              @ Lib.BedRecord
                              Lib.getTargetBEDfromMaster
                              (Data.OldList.sortBy
                                 @ Lib.MasterRecord
                                 Lib.$fOrdMasterRecord_$ccompare
                                 mrecs))
                           ipv
                             `cast`
                           (Nth:2
                                (Nth:3
                                     (Nth:2
                                          (Trans
                                               (((GHC.Prim.State#
                                                    (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                         <GHC.Prim.RealWorld>_N))_R
                                                 ->_R ((#,#)
                                                         <'GHC.Types.TupleRep '[]>_R
                                                         <'GHC.Types.LiftedRep>_R
                                                         (GHC.Prim.State#
                                                            (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                 <GHC.Prim.RealWorld>_N))_R
                                                         <Data.Primitive.Array.MutableArray
                                                            (Control.Monad.Primitive.PrimState
                                                               (GHC.ST.ST GHC.Prim.RealWorld))
                                                            Lib.BedRecord>_R)_R)
                                                ->_R <GHC.ST.ST
                                                        GHC.Prim.RealWorld
                                                        (Data.Primitive.Array.MutableArray
                                                           (Control.Monad.Primitive.PrimState
                                                              (GHC.ST.ST GHC.Prim.RealWorld))
                                                           Lib.BedRecord)>_R)
                                               (<GHC.ST.STRep
                                                   GHC.Prim.RealWorld
                                                   (Data.Primitive.Array.MutableArray
                                                      (Control.Monad.Primitive.PrimState
                                                         (GHC.ST.ST GHC.Prim.RealWorld))
                                                      Lib.BedRecord)>_R
                                                ->_R GHC.ST.N:ST[0]
                                                         <GHC.Prim.RealWorld>_N
                                                         <Data.Primitive.Array.MutableArray
                                                            (Control.Monad.Primitive.PrimState
                                                               (GHC.ST.ST GHC.Prim.RealWorld))
                                                            Lib.BedRecord>_R))))) }) of ds6 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
a6f9d9e7782fa2818a7b864085eaf645
  masterparser ::
    Data.Attoparsec.ByteString.Internal.Parser Lib.MasterRecord
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.createprimerbedmaps15
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <Lib.MasterRecord>_R)) -}
69814aa9d1fbec2649c78c6d1eb24076
  mateMapped :: Lib.SAMFlag -> GHC.Types.Bool
  RecSel Left Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLLLLLLL),1*U(A,1*U,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.SAMFlag) ->
                 case ds6 of wild { Lib.SAMFlag ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds8 }) -}
69814aa9d1fbec2649c78c6d1eb24076
  mateNeg :: Lib.SAMFlag -> GHC.Types.Bool
  RecSel Left Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSLLLLLL),1*U(A,A,A,A,A,1*U,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.SAMFlag) ->
                 case ds6 of wild { Lib.SAMFlag ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds12 }) -}
06caff25e138935957c1d9216ae6952f
  mchrom :: Lib.MasterRecord -> Lib.UChr
  RecSel Left Lib.MasterRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(1*U,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MasterRecord) ->
                 case ds6 of wild { Lib.MasterRecord ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds7 }) -}
06caff25e138935957c1d9216ae6952f
  mforend :: Lib.MasterRecord -> GHC.Integer.Type.Integer
  RecSel Left Lib.MasterRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSLLLLLL),1*U(A,A,A,A,A,1*U,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MasterRecord) ->
                 case ds6 of wild { Lib.MasterRecord ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds12 }) -}
06caff25e138935957c1d9216ae6952f
  mforname :: Lib.MasterRecord -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.MasterRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLSLLL),1*U(A,A,A,A,A,A,A,A,1*U(U,U,U,U),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MasterRecord) ->
                 case ds6 of wild { Lib.MasterRecord ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds15 }) -}
06caff25e138935957c1d9216ae6952f
  mforseq :: Lib.MasterRecord -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.MasterRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLSL),1*U(A,A,A,A,A,A,A,A,A,A,1*U(U,U,U,U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MasterRecord) ->
                 case ds6 of wild { Lib.MasterRecord ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds17 }) -}
06caff25e138935957c1d9216ae6952f
  mforstart :: Lib.MasterRecord -> GHC.Integer.Type.Integer
  RecSel Left Lib.MasterRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLLLLLLL),1*U(A,A,A,A,1*U,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MasterRecord) ->
                 case ds6 of wild { Lib.MasterRecord ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds11 }) -}
eb54c5795cd87d65034c776d841620e0
  mid :: Lib.AlignedRead -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLSLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U,U,U,U),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds34 }) -}
9397824cc9d01cf75666f6f250a9bd4d
  midseq :: Lib.MidFamily -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.MidFamily
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLLLLL),1*U(A,A,A,1*U(U,U,U,U),A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MidFamily) ->
                 case ds6 of wild { Lib.MidFamily ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds10 }) -}
06caff25e138935957c1d9216ae6952f
  mrevend :: Lib.MasterRecord -> GHC.Integer.Type.Integer
  RecSel Left Lib.MasterRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLSLLLL),1*U(A,A,A,A,A,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MasterRecord) ->
                 case ds6 of wild { Lib.MasterRecord ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds14 }) -}
06caff25e138935957c1d9216ae6952f
  mrevname :: Lib.MasterRecord -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.MasterRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLSLL),1*U(A,A,A,A,A,A,A,A,A,1*U(U,U,U,U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MasterRecord) ->
                 case ds6 of wild { Lib.MasterRecord ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds16 }) -}
06caff25e138935957c1d9216ae6952f
  mrevseq :: Lib.MasterRecord -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.MasterRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLS),1*U(A,A,A,A,A,A,A,A,A,A,A,1*U(U,U,U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MasterRecord) ->
                 case ds6 of wild { Lib.MasterRecord ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds18 }) -}
06caff25e138935957c1d9216ae6952f
  mrevstart :: Lib.MasterRecord -> GHC.Integer.Type.Integer
  RecSel Left Lib.MasterRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLSLLLLL),1*U(A,A,A,A,A,A,1*U,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MasterRecord) ->
                 case ds6 of wild { Lib.MasterRecord ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds13 }) -}
06caff25e138935957c1d9216ae6952f
  mtargetend :: Lib.MasterRecord -> GHC.Integer.Type.Integer
  RecSel Left Lib.MasterRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLL),1*U(A,A,1*U,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MasterRecord) ->
                 case ds6 of wild { Lib.MasterRecord ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds9 }) -}
06caff25e138935957c1d9216ae6952f
  mtargetstart :: Lib.MasterRecord -> GHC.Integer.Type.Integer
  RecSel Left Lib.MasterRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLLLLLLL),1*U(A,1*U,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MasterRecord) ->
                 case ds6 of wild { Lib.MasterRecord ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds8 }) -}
9397824cc9d01cf75666f6f250a9bd4d
  negtxposdcnt :: Lib.MidFamily -> GHC.Integer.Type.Integer
  RecSel Left Lib.MidFamily
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLSL),1*U(A,A,A,A,A,A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MidFamily) ->
                 case ds6 of wild { Lib.MidFamily ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds15 }) -}
266724c3533005d97656abac2182fc0b
  noclip ::
    (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
    -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S(LS(SLSS)),1*U(A,1*U(U,U,U,U))>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: (GHC.Integer.Type.Integer,
                          Data.ByteString.Internal.ByteString)) ->
                 case w of ww { (,) ww1 ww2 ->
                 case ww2 of ww3 { Data.ByteString.Internal.PS ww4 ww5 ww6 ww7 ->
                 Lib.$wnoclip ww4 ww5 ww6 ww7 } }) -}
9da46e68264c74fa22c12f4f67ddb5c0
  noclip1 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.noclip_addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.noclip_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
a4e36bcce7780a94cae902cdb3bfe3e9
  noclip2 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.noclip_addr#1
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.noclip_addr#1
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
cb8d88240c2505e7f5ac58a2a71ce890
  noclip_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("S"#) -}
eeeaa0e6383f98393dc6b76059697923
  noclip_addr#1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("H"#) -}
c0b380fcfa874cb12bdb5a2cd58baed7
  nohardclip ::
    (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
    -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S(LS(SLSS)),1*U(A,1*U(U,U,U,U))>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: (GHC.Integer.Type.Integer,
                          Data.ByteString.Internal.ByteString)) ->
                 case w of ww { (,) ww1 ww2 ->
                 case ww2 of ww3 { Data.ByteString.Internal.PS ww4 ww5 ww6 ww7 ->
                 Lib.$wnohardclip ww4 ww5 ww6 ww7 } }) -}
f19d5bf0e3da50daa91820be398b3ded
  nomapCigToNomapRname ::
    Data.ByteString.Internal.ByteString -> Lib.UChr -> Lib.UChr
  {- Arity: 2, Strictness: <S(SLSS),1*U(U,U,U,U)><L,1*U>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.ByteString.Internal.ByteString) (w1 :: Lib.UChr) ->
                 case w of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wnomapCigToNomapRname ww1 ww2 ww3 ww4 w1 }) -}
5eef395fb837e84235a3257f63a1ff6b
  nopadding ::
    (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
    -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S(LS(SLSS)),1*U(A,1*U(U,U,U,U))>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: (GHC.Integer.Type.Integer,
                          Data.ByteString.Internal.ByteString)) ->
                 case w of ww { (,) ww1 ww2 ->
                 case ww2 of ww3 { Data.ByteString.Internal.PS ww4 ww5 ww6 ww7 ->
                 Lib.$wnopadding ww4 ww5 ww6 ww7 } }) -}
69814aa9d1fbec2649c78c6d1eb24076
  notMapped :: Lib.SAMFlag -> GHC.Types.Bool
  RecSel Left Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLL),1*U(A,A,1*U,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.SAMFlag) ->
                 case ds6 of wild { Lib.SAMFlag ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds9 }) -}
69814aa9d1fbec2649c78c6d1eb24076
  notPrimary :: Lib.SAMFlag -> GHC.Types.Bool
  RecSel Left Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLSLLL),1*U(A,A,A,A,A,A,A,A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.SAMFlag) ->
                 case ds6 of wild { Lib.SAMFlag ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds15 }) -}
9aa3ac99c840b4bbfda632f27754d05c
  optargs :: Options.Applicative.Types.Parser Lib.Opts
  {- Unfolding: (Options.Applicative.Types.MultP
                   @ Lib.Opts
                   @ GHC.Base.String
                   Lib.optargs8
                   Lib.optargs1) -}
dfc57787e8c44f5d6ee7f32a2115dec7
  optargs1 :: Options.Applicative.Types.Parser GHC.Base.String
  {- Strictness: m4,
     Unfolding: (Options.Applicative.Types.AltP
                   @ GHC.Base.String
                   Lib.optargs2
                   (Options.Applicative.Types.$fAlternativeParser_$cempty
                      @ GHC.Base.String)) -}
edfcb0c53c13520d0b767b4debf4e9e5
  optargs10 :: Options.Applicative.Types.Parser GHC.Base.String
  {- Strictness: m2,
     Unfolding: (Options.Applicative.Types.OptP
                   @ GHC.Base.String
                   Lib.optargs11) -}
a268a0f743d761619183f10c2f331629
  optargs11 :: Options.Applicative.Types.Option GHC.Base.String
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.Option
                   @ GHC.Base.String
                   Lib.optargs6
                   Lib.optargs12) -}
93c20e180d50af5075fb1891e2958c11
  optargs12 :: Options.Applicative.Types.OptProperties
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.OptProperties
                   Options.Applicative.Types.Visible
                   (GHC.Base.Nothing @ Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                     `cast`
                   (Sym (Options.Applicative.Help.Chunk.N:Chunk[0]) <Text.PrettyPrint.ANSI.Leijen.Internal.Doc>_N)
                   Lib.optargs_var1
                   (GHC.Base.Nothing @ GHC.Base.String)
                   (GHC.Base.Nothing
                      @ (Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                         -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc))) -}
bd3d6677152f7478e990c20182deaa59
  optargs13 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("SAM_INFILE"#) -}
09d0494ee1d0122d38582cbe56ad1979
  optargs14 ::
    Options.Applicative.Types.Parser
      (GHC.Base.String -> GHC.Base.String -> Lib.Opts)
  {- Unfolding: (Options.Applicative.Types.MultP
                   @ (GHC.Base.String -> GHC.Base.String -> Lib.Opts)
                   @ GHC.Base.String
                   Lib.optargs20
                   Lib.optargs15) -}
f5627247e643933b8d408344aaf265b9
  optargs15 :: Options.Applicative.Types.Parser GHC.Base.String
  {- Strictness: m4,
     Unfolding: (Options.Applicative.Types.AltP
                   @ GHC.Base.String
                   Lib.optargs16
                   (Options.Applicative.Types.$fAlternativeParser_$cempty
                      @ GHC.Base.String)) -}
dc7bb357a56928257b63b374addd9563
  optargs16 :: Options.Applicative.Types.Parser GHC.Base.String
  {- Strictness: m2,
     Unfolding: (Options.Applicative.Types.OptP
                   @ GHC.Base.String
                   Lib.optargs17) -}
3696dd7b27576181abbbef4805cfac98
  optargs17 :: Options.Applicative.Types.Option GHC.Base.String
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.Option
                   @ GHC.Base.String
                   Lib.optargs6
                   Lib.optargs18) -}
134477620db7a83ce3019d1226052b7e
  optargs18 :: Options.Applicative.Types.OptProperties
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.OptProperties
                   Options.Applicative.Types.Visible
                   (GHC.Base.Nothing @ Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                     `cast`
                   (Sym (Options.Applicative.Help.Chunk.N:Chunk[0]) <Text.PrettyPrint.ANSI.Leijen.Internal.Doc>_N)
                   Lib.optargs_var2
                   (GHC.Base.Nothing @ GHC.Base.String)
                   (GHC.Base.Nothing
                      @ (Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                         -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc))) -}
01c07ac50d203a1eacdb80add46e8467
  optargs19 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("PRIMER_COORDS_INFILE"#) -}
2e20c2ab64c5c70871ddf5bb7e996f43
  optargs2 :: Options.Applicative.Types.Parser GHC.Base.String
  {- Strictness: m2,
     Unfolding: (Options.Applicative.Types.OptP
                   @ GHC.Base.String
                   Lib.optargs3) -}
80d567b7e2d416789d1ffa0d2506d2f1
  optargs20 ::
    Options.Applicative.Types.Parser
      (GHC.Base.String -> GHC.Base.String -> GHC.Base.String -> Lib.Opts)
  {- Unfolding: (Options.Applicative.Types.$fApplicativeParser_$cfmap
                   @ GHC.Types.Bool
                   @ (GHC.Base.String
                      -> GHC.Base.String -> GHC.Base.String -> Lib.Opts)
                   Lib.Opts
                   Lib.optargs21) -}
cacfe59d7f10fc8281cb18dd67eadac7
  optargs21 :: Options.Applicative.Types.Parser GHC.Types.Bool
  {- Strictness: m4,
     Unfolding: (Options.Applicative.Types.AltP
                   @ GHC.Types.Bool
                   Lib.optargs22
                   Options.Applicative.Builder.switch1) -}
0468bb40b96ef1b8ebf006dd0652f1c4
  optargs22 :: Options.Applicative.Types.Parser GHC.Types.Bool
  {- Strictness: m4,
     Unfolding: (Options.Applicative.Types.AltP
                   @ GHC.Types.Bool
                   Lib.optargs23
                   (Options.Applicative.Types.$fAlternativeParser_$cempty
                      @ GHC.Types.Bool)) -}
4832f807f704d105724330162e13234e
  optargs23 :: Options.Applicative.Types.Parser GHC.Types.Bool
  {- Strictness: m2,
     Unfolding: (Options.Applicative.Types.OptP
                   @ GHC.Types.Bool
                   Lib.optargs24) -}
73d705cfbd9371d7f69afaad223d0b23
  optargs24 :: Options.Applicative.Types.Option GHC.Types.Bool
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.Option
                   @ GHC.Types.Bool
                   Lib.optargs27
                   Lib.optargs25) -}
e4de535a032906302988c2cf27c34567
  optargs25 :: Options.Applicative.Types.OptProperties
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.OptProperties
                   Options.Applicative.Types.Visible
                   Lib.optargs_lvl7
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Base.Nothing @ GHC.Base.String)
                   (GHC.Base.Nothing
                      @ (Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                         -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc))) -}
33e78259e3e3b301ab1a6df041097f72
  optargs26 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("add this switch to use BEDPE coordinate input format (default format is master file)"#) -}
fdc75150f48d635bfc0d3fcc435c9e41
  optargs27 :: Options.Applicative.Types.OptReader GHC.Types.Bool
  {- Strictness: m2,
     Unfolding: (Options.Applicative.Types.FlagReader
                   @ GHC.Types.Bool
                   Lib.optargs28
                   GHC.Types.True) -}
19fc247177adfdd87956c0df1034c92b
  optargs28 :: [Options.Applicative.Types.OptName]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Options.Applicative.Types.OptName
                   Lib.optargs_n1
                   Lib.optargs29) -}
8177763f70efe48af92b44eab1e9371e
  optargs29 :: [Options.Applicative.Types.OptName]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Options.Applicative.Types.OptName
                   Lib.optargs_n
                   (GHC.Types.[] @ Options.Applicative.Types.OptName)) -}
4b822de21982122f58169955bf406cd9
  optargs3 :: Options.Applicative.Types.Option GHC.Base.String
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.Option
                   @ GHC.Base.String
                   Lib.optargs6
                   Lib.optargs4) -}
2e7b7b18963e287f0e05c133f2d54aff
  optargs30 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# Lib.optargs31) -}
edba7a9348390a8e67686cac22328594
  optargs31 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("bedpe"#) -}
e74ed610c99f66dc478d0ee8e88b6404
  optargs4 :: Options.Applicative.Types.OptProperties
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.OptProperties
                   Options.Applicative.Types.Visible
                   (GHC.Base.Nothing @ Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                     `cast`
                   (Sym (Options.Applicative.Help.Chunk.N:Chunk[0]) <Text.PrettyPrint.ANSI.Leijen.Internal.Doc>_N)
                   Lib.optargs_var
                   (GHC.Base.Nothing @ GHC.Base.String)
                   (GHC.Base.Nothing
                      @ (Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                         -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc))) -}
d5531d86701486cc546166021c24e475
  optargs5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("OUTPUT_SAM_FILENAME"#) -}
e9609d59d2ea4e2e8111171447cb53c9
  optargs6 :: Options.Applicative.Types.OptReader GHC.Base.String
  {- HasNoCafRefs, Strictness: m3,
     Unfolding: (Options.Applicative.Types.ArgReader
                   @ GHC.Base.String
                   Lib.optargs7) -}
48f161cc87b474b955e3774d6358a2ff
  optargs7 :: Options.Applicative.Types.CReader GHC.Base.String
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Options.Applicative.Types.CReader
                   @ GHC.Base.String
                   Options.Applicative.Types.$fMonoidCompleter3
                     `cast`
                   (Trans
                        (<GHC.Base.String>_R
                         ->_R Sym (GHC.Types.N:IO[0] <[GHC.Base.String]>_R))
                        (Sym (Options.Applicative.Types.N:Completer[0])))
                   (Data.Either.Right
                      @ Options.Applicative.Types.ParseError
                      @ GHC.Base.String)
                     `cast`
                   (Trans
                        (<GHC.Base.String>_R
                         ->_R Nth:3
                                  (Trans
                                       (<Control.Monad.Trans.Except.ExceptT
                                           Options.Applicative.Types.ParseError
                                           Data.Functor.Identity.Identity
                                           GHC.Base.String>_R
                                        ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                                      <Data.Either.Either
                                                         Options.Applicative.Types.ParseError
                                                         GHC.Base.String>_R))
                                       (<Control.Monad.Trans.Except.ExceptT
                                           Options.Applicative.Types.ParseError
                                           Data.Functor.Identity.Identity
                                           GHC.Base.String>_R
                                        ->_R Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                      <Options.Applicative.Types.ParseError>_N
                                                      <Data.Functor.Identity.Identity>_R
                                                      <GHC.Base.String>_N))))
                        (Trans
                             (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                       <*>_N
                                       <GHC.Base.String>_R
                                       <Control.Monad.Trans.Except.Except
                                          Options.Applicative.Types.ParseError>_R
                                       <GHC.Base.String>_N))
                             (Sym (Options.Applicative.Types.N:ReadM[0]) <GHC.Base.String>_N)))) -}
bd62205f1e1397d671ecd2777c6fa8cb
  optargs8 ::
    Options.Applicative.Types.Parser (GHC.Base.String -> Lib.Opts)
  {- Unfolding: (Options.Applicative.Types.MultP
                   @ (GHC.Base.String -> Lib.Opts)
                   @ GHC.Base.String
                   Lib.optargs14
                   Lib.optargs9) -}
f2f249575e6d2d90ce4ba3ea712df463
  optargs9 :: Options.Applicative.Types.Parser GHC.Base.String
  {- Strictness: m4,
     Unfolding: (Options.Applicative.Types.AltP
                   @ GHC.Base.String
                   Lib.optargs10
                   (Options.Applicative.Types.$fAlternativeParser_$cempty
                      @ GHC.Base.String)) -}
01f3c47bd518dab607b98423154c4539
  optargs_lvl7 ::
    Options.Applicative.Help.Chunk.Chunk
      Text.PrettyPrint.ANSI.Leijen.Internal.Doc
  {- Unfolding: (Options.Applicative.Help.Chunk.paragraph_go
                   (GHC.CString.unpackCString# Lib.optargs26)) -}
97a4c6812f090cbd36257f11e1453032
  optargs_n :: Options.Applicative.Types.OptName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (Options.Applicative.Types.OptShort 'b'#) -}
d4aa9f3ea35a7350dc44e314fe249b69
  optargs_n1 :: Options.Applicative.Types.OptName
  {- Strictness: m2,
     Unfolding: (Options.Applicative.Types.OptLong Lib.optargs30) -}
63f3e0553fef807154871dcb6b235312
  optargs_var :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# Lib.optargs5) -}
c56f5b0c1fd4769314575673257d11c6
  optargs_var1 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# Lib.optargs13) -}
cf42428123d9b835928d5ec6e438bd3e
  optargs_var2 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# Lib.optargs19) -}
726587d66b28491123ffde44aad6809c
  optasp ::
    Data.Attoparsec.ByteString.Internal.Parser
      Data.ByteString.Internal.ByteString
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.optasp1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)) -}
61cd3d015825ed610648aa31d3b49042
  optasp1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww { GHC.Types.I# ww1 ->
                 Lib.$woptasp @ r w ww1 w2 w3 w4 }) -}
b40e86aa4acdc6ac51aeffd69311d839
  optfieldp ::
    Data.Attoparsec.ByteString.Internal.Parser
      Data.ByteString.Internal.ByteString
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.optfieldp1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)) -}
5de7dbb93cb318c4c4c179833b3e86fd
  optfieldp1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww { GHC.Types.I# ww1 ->
                 Lib.$woptfieldp @ r w ww1 w2 w3 w4 }) -}
5c850b121aed24ef3d9ea8721bbef5b2
  optfieldp2 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww { GHC.Types.I# ww1 ->
                 Lib.$woptxsp @ r w ww1 w2 w3 w4 }) -}
8d7903e3184d30d0f9f3375f2827f6c3
  optfieldpEOL ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString [GHC.Types.Char]
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.optfieldpEOL1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <[GHC.Types.Char]>_R)) -}
66ac3f5c2f762ac8ed8994ba77ddc825
  optfieldpEOL1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [GHC.Types.Char]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w2 :: Data.Attoparsec.Internal.Types.State
                            Data.ByteString.Internal.ByteString)
                   (w3 :: Data.Attoparsec.Internal.Types.Pos)
                   (w4 :: Data.Attoparsec.Internal.Types.More)
                   (w5 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w6 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [GHC.Types.Char]
                            r) ->
                 case w3
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww { GHC.Types.I# ww1 ->
                 Data.Attoparsec.Combinator.$w$smanyTill1
                   @ GHC.Types.Char
                   @ ()
                   Lib.optfieldpEOL2
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                             <Data.ByteString.Internal.ByteString>_N <GHC.Types.Char>_R))
                   Data.Attoparsec.ByteString.Internal.endOfLine1
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                             <Data.ByteString.Internal.ByteString>_N <()>_R))
                   @ r
                   w2
                   ww1
                   w4
                   w5
                   w6 }) -}
170f605dd2e5763a65ad467ba2d20c91
  optfieldpEOL2 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         GHC.Types.Char
         r
    -> Data.Attoparsec.ByteString.Internal.Result r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            GHC.Types.Char
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$woptfieldpEOL @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
2584a0da27cb3c7896fe7c28fdf99f4c
  optfieldpEOL3 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
2e099538fcf74f05fa08e4f88174c9e0
  optfieldpEOL4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.optfieldpEOL5) -}
b9fd92ecd015db0c1bd3739fb534e820
  optfieldpEOL5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Failed reading: satisfyWith"#) -}
95056325e78577a28331bdb589ceba99
  optfieldpEOL6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("\r\n"#) -}
5bd45c546ec5ee26d661c48b260e3f76
  optfieldpEOL_ds :: Data.Attoparsec.ByteString.FastSet.FastSet
  {- Unfolding: (Data.Attoparsec.ByteString.FastSet.charClass
                   (GHC.CString.unpackCString# Lib.optfieldpEOL6)) -}
eb54c5795cd87d65034c776d841620e0
  optfields :: Lib.AlignedRead -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLSLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds22 }) -}
e1c4ccd6f1b98f7fe171b70a3bb3985a
  optfieldsp ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString
      [Data.ByteString.Internal.ByteString]
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.optfieldsp1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <[Data.ByteString.Internal.ByteString]>_R)) -}
c4a6f03f90e574efc8fe0416e3a70731
  optfieldsp1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [Data.ByteString.Internal.ByteString]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w2 :: Data.Attoparsec.Internal.Types.State
                            Data.ByteString.Internal.ByteString)
                   (w3 :: Data.Attoparsec.Internal.Types.Pos)
                   (w4 :: Data.Attoparsec.Internal.Types.More)
                   (w5 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w6 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [Data.ByteString.Internal.ByteString]
                            r) ->
                 case w3
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww { GHC.Types.I# ww1 ->
                 Data.Attoparsec.Combinator.$w$ssepBy'1
                   @ Data.ByteString.Internal.ByteString
                   @ GHC.Types.Char
                   Lib.optfieldsp5
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                             <Data.ByteString.Internal.ByteString>_N
                             <Data.ByteString.Internal.ByteString>_R))
                   Data.Attoparsec.ByteString.Char8.space
                   @ r
                   w2
                   ww1
                   w4
                   w6 }) -}
a54d2b492036993fee286e5b34b96c48
  optfieldsp2 ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString [[GHC.Types.Char]]
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.optfieldsp6
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <[[GHC.Types.Char]]>_R)) -}
af84bc8cd13a3654d43d6b6411e2e56b
  optfieldsp3 ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString
      [Data.ByteString.Internal.ByteString]
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.optfieldsp1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <[Data.ByteString.Internal.ByteString]>_R)) -}
1113330caa08873f062bd88a63cd7180
  optfieldsp5 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wtxtfieldp @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w4 } }) -}
dfe97275f7f42084133f6a1e5369bb2d
  optfieldsp6 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [[GHC.Types.Char]]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w2 :: Data.Attoparsec.Internal.Types.State
                            Data.ByteString.Internal.ByteString)
                   (w3 :: Data.Attoparsec.Internal.Types.Pos)
                   (w4 :: Data.Attoparsec.Internal.Types.More)
                   (w5 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w6 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [[GHC.Types.Char]]
                            r) ->
                 case w3
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww { GHC.Types.I# ww1 ->
                 Data.Attoparsec.Combinator.$w$ssepBy'1
                   @ [GHC.Types.Char]
                   @ GHC.Types.Char
                   Lib.optfieldpEOL1
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                             <Data.ByteString.Internal.ByteString>_N <[GHC.Types.Char]>_R))
                   Data.Attoparsec.ByteString.Char8.space
                   @ r
                   w2
                   ww1
                   w4
                   w6 }) -}
2df276181d3f3c9b6e7de8993f1c49d5
  optfieldstotalp ::
    Data.Attoparsec.ByteString.Internal.Parser
      Data.ByteString.Internal.ByteString
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.optfieldstotalp1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)) -}
479ce97765621101ef3c642b43f17005
  optfieldstotalp1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$woptfieldstotalp @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w4 } }) -}
9b83c6c7508abc792a475f1d52d541e0
  optidp ::
    Data.Attoparsec.ByteString.Internal.Parser
      Data.ByteString.Internal.ByteString
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.optidp1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)) -}
b8030d811895cf36f7e663d4491a9e53
  optidp1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww { GHC.Types.I# ww1 ->
                 Lib.$woptidp @ r w ww1 w2 w3 w4 }) -}
ed6ab3b9a5cba2a2e0cfdf92ce5effea
  optidp2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.optidp_addr#1) -}
aa0059d3957c2c7af3bd551fb418c493
  optidp3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.optidp_addr#) -}
b1b2285ce350a85741995fe402e2ef2d
  optidp4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.optidp_addr#2) -}
0010616bb4617905c23a0c5dcfab226d
  optidp_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("NM"#) -}
b93779de081729490e0ca1f1320cc8b4
  optidp_addr#1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("AS"#) -}
9e145ced3dacb28df3a2bfc33b892828
  optidp_addr#2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("XS"#) -}
9789961ae7136b5f191177d6bc9e4429
  optidp_m ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString
      Data.ByteString.Internal.ByteString
  {- Unfolding: (Data.Attoparsec.ByteString.Char8.$fIsStringParser_$cfromString
                   @ Data.ByteString.Internal.ByteString
                   (GHC.Types.Eq#
                      @ *
                      @ *
                      @ Data.ByteString.Internal.ByteString
                      @ Data.ByteString.Internal.ByteString
                      @~ <Data.ByteString.Internal.ByteString>_N)
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Data.ByteString.Internal.ByteString>_N <Data.ByteString.Internal.ByteString>_N)
                   Lib.optidp2) -}
9e6e993f624904a54ff7a95394a070f5
  optidp_m1 ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString
      Data.ByteString.Internal.ByteString
  {- Unfolding: (Data.Attoparsec.ByteString.Char8.$fIsStringParser_$cfromString
                   @ Data.ByteString.Internal.ByteString
                   (GHC.Types.Eq#
                      @ *
                      @ *
                      @ Data.ByteString.Internal.ByteString
                      @ Data.ByteString.Internal.ByteString
                      @~ <Data.ByteString.Internal.ByteString>_N)
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Data.ByteString.Internal.ByteString>_N <Data.ByteString.Internal.ByteString>_N)
                   Lib.optidp3) -}
4cf0b31cbc71326e67051ab4625e4556
  optidp_m2 ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString
      Data.ByteString.Internal.ByteString
  {- Unfolding: (Data.Attoparsec.ByteString.Char8.$fIsStringParser_$cfromString
                   @ Data.ByteString.Internal.ByteString
                   (GHC.Types.Eq#
                      @ *
                      @ *
                      @ Data.ByteString.Internal.ByteString
                      @ Data.ByteString.Internal.ByteString
                      @~ <Data.ByteString.Internal.ByteString>_N)
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Data.ByteString.Internal.ByteString>_N <Data.ByteString.Internal.ByteString>_N)
                   Lib.optidp4) -}
7170c443bf4bd49d6f69c387e481427c
  optidp_v :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.optidp_addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.optidp_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
9f1efd93eb49bbde321d8d73996ac115
  optidp_v1 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.optidp_addr#2
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.optidp_addr#2
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
0e450f5a282b6b8761348bbb4f87d767
  optidp_v2 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.optidp_addr#1
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.optidp_addr#1
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
e098af7ffb4ffc14026e72053ad4c157
  optnmp ::
    Data.Attoparsec.ByteString.Internal.Parser
      Data.ByteString.Internal.ByteString
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.optnmp1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)) -}
0c2476ac0754448fe38bc0197e970d79
  optnmp1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww { GHC.Types.I# ww1 ->
                 Lib.$woptnmp @ r w ww1 w2 w3 w4 }) -}
f24a8a88c4280a0b1cf2f1fb5e2d9831
  optxsp ::
    Data.Attoparsec.ByteString.Internal.Parser
      Data.ByteString.Internal.ByteString
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.optfieldp2
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)) -}
69605119a398f29c235919bcd7f9bece
  outfilename :: Lib.Opts -> GHC.Base.String
  RecSel Left Lib.Opts
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLS),1*U(A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.Opts) ->
                 case ds6 of wild { Lib.Opts ds7 ds8 ds9 ds10 -> ds10 }) -}
69814aa9d1fbec2649c78c6d1eb24076
  pairNotMapped :: Lib.SAMFlag -> GHC.Types.Bool
  RecSel Left Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLLLLLLL),1*U(A,A,A,1*U,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.SAMFlag) ->
                 case ds6 of wild { Lib.SAMFlag ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds10 }) -}
eb54c5795cd87d65034c776d841620e0
  paired :: Lib.AlignedRead -> GHC.Types.Bool
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLSLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds24 }) -}
41b4a2177143a6b1274df2da98a514e9
  pairedAlnToTuple ::
    Lib.PairedAln
    -> (Lib.AlignedRead, Lib.AlignedRead, [Lib.AlignedRead],
        [Lib.AlignedRead])
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(1*U,1*U,1*U,1*U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (p :: Lib.PairedAln) ->
                 (case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 -> ds6 },
                  case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 -> ds7 },
                  case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 -> ds8 },
                  case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 -> ds9 })) -}
69814aa9d1fbec2649c78c6d1eb24076
  pairedRead :: Lib.SAMFlag -> GHC.Types.Bool
  RecSel Left Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(1*U,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.SAMFlag) ->
                 case ds6 of wild { Lib.SAMFlag ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds7 }) -}
68ef9b079100a5b3f0ddccb1979d827f
  pairedalnparser ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString Lib.PairedAln
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.pairedalnparser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <Lib.PairedAln>_R)) -}
19ee2014e834ee118581948c60bc2466
  pairedalnparser1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.PairedAln
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.PairedAln
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wpairedalnparser
                   @ r
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww8
                   w2
                   w3
                   w4 } }) -}
33eae901ed976e1ff40e63cddc7669f6
  parseAln ::
    Data.ByteString.Internal.ByteString
    -> Data.Either.Either GHC.Base.String Lib.AlignedRead
  {- Arity: 1, Strictness: <S(SLSS),1*U(U,U,U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.ByteString.Internal.ByteString) ->
                 case w of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wparseAln ww1 ww2 ww3 ww4 }) -}
c4a60ba1d5c89800e8dc89abfeca1614
  parseAln1 :: Data.Either.Either GHC.Base.String Lib.AlignedRead
  {- Strictness: x -}
806ef2f9cf9b702a945c058b234fbfa4
  parseAln2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (": "#) -}
fc1ae71f9ab378ef083bc0624d663f54
  parseAln3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.parseAln4) -}
62219a21c4fc069bcc5d66ac3662082c
  parseAln4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (" > "#) -}
0f6c5c19c93ae2e974efbcb5407189fb
  parseAlns ::
    [Data.ByteString.Internal.ByteString] -> Lib.Alignments
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (as :: [Data.ByteString.Internal.ByteString]) ->
                 Data.Either.rights
                   @ GHC.Base.String
                   @ Lib.AlignedRead
                   (GHC.Base.build
                      @ (Data.Either.Either GHC.Base.String Lib.AlignedRead)
                      (\ @ b1
                         (c2 :: Data.Either.Either GHC.Base.String Lib.AlignedRead
                                -> b1 -> b1)[OneShot]
                         (n :: b1)[OneShot] ->
                       GHC.Base.foldr
                         @ Data.ByteString.Internal.ByteString
                         @ b1
                         (GHC.Base.mapFB
                            @ (Data.Either.Either GHC.Base.String Lib.AlignedRead)
                            @ b1
                            @ Data.ByteString.Internal.ByteString
                            c2
                            Lib.parseAlns1)
                         n
                         as))) -}
cd310e6ea3cf19eb5a7aa3d9d21dfa2b
  parseAlns1 ::
    Data.ByteString.Internal.ByteString
    -> Data.Either.Either GHC.Base.String Lib.AlignedRead
  {- Arity: 1,
     Unfolding: (Data.Attoparsec.ByteString.Internal.parseOnly
                   @ Lib.AlignedRead
                   Lib.alnparser1
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                             <Data.ByteString.Internal.ByteString>_N <Lib.AlignedRead>_R))) -}
4ff21337785e0e297fc6312aaa580035
  parseBED ::
    Data.ByteString.Internal.ByteString
    -> Data.Either.Either GHC.Base.String Lib.BedRecord
  {- Arity: 1, Strictness: <S(SLSS),1*U(U,U,U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.ByteString.Internal.ByteString) ->
                 case w of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wparseBED ww1 ww2 ww3 ww4 }) -}
1fe76186fcd52854a21c8b6437a773e3
  parseBED1 :: Data.Either.Either GHC.Base.String Lib.BedRecord
  {- Strictness: x -}
ea204aa768e3a4ab303b28601ca7e0f5
  parseBEDPE ::
    Data.ByteString.Internal.ByteString
    -> Data.Either.Either GHC.Base.String Lib.BEDPE
  {- Arity: 1, Strictness: <S(SLSS),1*U(U,U,U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.ByteString.Internal.ByteString) ->
                 case w of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wparseBEDPE ww1 ww2 ww3 ww4 }) -}
4b8cac0c9b48f1cab6422ce3154ffe57
  parseBEDPE1 :: Data.Either.Either GHC.Base.String Lib.BEDPE
  {- Strictness: x -}
c63b993a5e807e381eb6f3aaa443145d
  parseCigar ::
    Data.ByteString.Internal.ByteString
    -> Data.Either.Either
         GHC.Base.String
         [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
  {- Arity: 1,
     Unfolding: (Data.Attoparsec.ByteString.Internal.parseOnly
                   @ [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                   Lib.parseCigar1
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                             <Data.ByteString.Internal.ByteString>_N
                             <[(GHC.Integer.Type.Integer,
                                Data.ByteString.Internal.ByteString)]>_R))) -}
d2e5d59821d743d350f9a0c8ce365ecf
  parseCigar1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wparseCigar @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
0a5886aa4eb3b2d15507205ea3ef85ce
  parsePairedAlns ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString [Lib.PairedAln]
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.parsePairedAlns1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <[Lib.PairedAln]>_R)) -}
6caa08feac04f2ace7a94e45c61d2fbc
  parsePairedAlns' ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString [[Lib.AlignedRead]]
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.parsePairedAlns'1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <[[Lib.AlignedRead]]>_R)) -}
419907f7ff9e1ad7973acab10d83def3
  parsePairedAlns'1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [[Lib.AlignedRead]]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [[Lib.AlignedRead]]
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wparsePairedAlns'
                   @ r
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww8
                   w2
                   w3
                   w4 } }) -}
74d0dc433e46e2a5876c71102afd9a4c
  parsePairedAlns1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [Lib.PairedAln]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [Lib.PairedAln]
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wparsePairedAlns
                   @ r
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww8
                   w2
                   w3
                   w4 } }) -}
dc99d34121db0b530887e7341c3b55dd
  parsePairedAlnsFromSAM ::
    Data.ByteString.Internal.ByteString
    -> Data.Either.Either GHC.Base.String [Lib.PairedAln]
  {- Arity: 1, Strictness: <S(SLSS),1*U(U,U,U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.ByteString.Internal.ByteString) ->
                 case w of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wparsePairedAlnsFromSAM ww1 ww2 ww3 ww4 }) -}
09f399f84a3c33c9e01e7933499a4bcf
  parsePairedAlnsFromSAM1 ::
    Data.Either.Either GHC.Base.String [Lib.PairedAln]
  {- Strictness: x -}
a150a3b79f34173db4df282032114018
  parsePairedAlnsOrHdr ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString [Lib.PairedAln]
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.parsePairedAlnsOrHdr1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <[Lib.PairedAln]>_R)) -}
29bdf354406d6d9081282a9d8bf8718d
  parsePairedAlnsOrHdr1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [Lib.PairedAln]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [Lib.PairedAln]
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wparsePairedAlnsOrHdr
                   @ r
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww8
                   w2
                   w3
                   w4 } }) -}
fa7fbbcb6a05146a945a0f67a5b442c3
  parseReadsetsFromSAM ::
    Data.ByteString.Internal.ByteString -> [[Lib.AlignedRead]]
  {- Arity: 1, Strictness: <S(SLSS),1*U(U,U,U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.ByteString.Internal.ByteString) ->
                 case w of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wparseReadsetsFromSAM ww1 ww2 ww3 ww4 }) -}
17f4cb7cf46095672d4887d068b3236c
  parseReadsetsFromSAM1 ::
    Data.Either.Either GHC.Base.String [[Lib.AlignedRead]]
  {- Strictness: x -}
64e489aee9ff16aeed620a688711114e
  parsechkBED ::
    GHC.Types.Int
    -> GHC.Types.Int -> [GHC.Types.Int] -> GHC.Base.String
  {- Arity: 3, Strictness: <S(S),1*U(U)><S(S),1*U(U)><L,1*U>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: GHC.Types.Int)
                   (w2 :: [GHC.Types.Int]) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { GHC.Types.I# ww3 ->
                 Lib.$wparsechkBED ww1 ww3 w2 } }) -}
19687b412c5db76a3428c30edad93445
  parsechkBED1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.parsechkBED2) -}
bc9b14e3dcc1ec5f220c36dfc8fbcf7c
  parsechkBED2 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: (" primer BEDPE records parsed successfully.\n"#) -}
6d95b62046512412558f76f8db460ee1
  parsechkBED3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.parsechkBED4) -}
c73975a79768860604904b0d82255689
  parsechkBED4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: (" primer BEDPE records failed to parse (see bedparsefails.log)\n"#) -}
657f6c33017c17725fa883d1c0bd5cee
  parsechkMaster ::
    GHC.Types.Int
    -> GHC.Types.Int -> [GHC.Types.Int] -> GHC.Base.String
  {- Arity: 3, Strictness: <S(S),1*U(U)><S(S),1*U(U)><L,1*U>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: GHC.Types.Int)
                   (w2 :: [GHC.Types.Int]) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { GHC.Types.I# ww3 ->
                 Lib.$wparsechkMaster ww1 ww3 w2 } }) -}
2f188d3f42832ba47190e61838a21b18
  parsechkSAM ::
    GHC.Types.Int
    -> GHC.Types.Int -> [GHC.Types.Int] -> GHC.Base.String
  {- Arity: 3, Strictness: <S(S),1*U(U)><S(S),1*U(U)><L,1*U>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: GHC.Types.Int)
                   (w2 :: [GHC.Types.Int]) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { GHC.Types.I# ww3 ->
                 Lib.$wparsechkSAM ww1 ww3 w2 } }) -}
7662021e4533fd0850bce344c11556d0
  parsechkSAM1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.parsechkSAM2) -}
908f9ec523b83f641fb4ef6334acf994
  parsechkSAM2 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: (" SAM alignments parsed successfully.\n"#) -}
a702fd511baac1a4654b7d3c5a4efd4e
  parsechkSAM3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.parsechkSAM4) -}
e047774ab2d3054211eebaa4cef9a6b1
  parsechkSAM4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: (" SAM alignments failed to parse (see samparsefails.log)\n"#) -}
2db637e67a404644eb870d154e9af8ff
  parsedbl ::
    Data.ByteString.Internal.ByteString
    -> Data.Either.Either GHC.Base.String GHC.Types.Double
  {- Arity: 1,
     Unfolding: (Data.Attoparsec.ByteString.Internal.parseOnly
                   @ GHC.Types.Double
                   Data.Attoparsec.ByteString.Char8.double1
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                             <Data.ByteString.Internal.ByteString>_N <GHC.Types.Double>_R))) -}
174d75c431325355cc967d5629589692
  parseint ::
    Data.ByteString.Internal.ByteString
    -> Data.Either.Either GHC.Base.String GHC.Integer.Type.Integer
  {- Arity: 1,
     Unfolding: (Data.Attoparsec.ByteString.Internal.parseOnly
                   @ GHC.Integer.Type.Integer
                   Data.Attoparsec.ByteString.Char8.decimal6
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                             <Data.ByteString.Internal.ByteString>_N
                             <GHC.Integer.Type.Integer>_R))) -}
4c336abc4d4d4eb162e77876e322ce91
  parsemIDstring ::
    Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
  {- Arity: 1, Strictness: <S(SLSS),1*U(U,U,U,1*U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.ByteString.Internal.ByteString) ->
                 case w of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wparsemIDstring ww1 ww2 ww3 ww4 }) -}
aaf735f365ce88a126f6d46de6c6ea24
  parsemIDstring1 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.parsemIDstring_addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.parsemIDstring_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
4c6bf16bfbdd573195e4b10daddcd044
  parsemIDstring2 :: GHC.Prim.Word# -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (c# :: GHC.Prim.Word#) ->
                 case c# of wild {
                   DEFAULT -> GHC.Types.False
                   9## -> GHC.Types.True
                   10## -> GHC.Types.True
                   11## -> GHC.Types.True
                   12## -> GHC.Types.True
                   13## -> GHC.Types.True
                   32## -> GHC.Types.True
                   160## -> GHC.Types.True }) -}
b50af88f95b0968f5dc15e2055e9ba05
  parsemIDstring_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("NOMIDSTRING"#) -}
732d74fc39b4892107de716f28755627
  parsemIDstring_go ::
    [Data.ByteString.Internal.ByteString]
    -> [Data.ByteString.Internal.ByteString]
  {- Arity: 1, Strictness: <S,1*U> -}
841eef8f250204a1a41a87b5b01ab20c
  parsesignedint ::
    Data.ByteString.Internal.ByteString -> GHC.Integer.Type.Integer
  {- Arity: 1, Strictness: <S(SLSS),1*U(U,U,U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.ByteString.Internal.ByteString) ->
                 case w of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wparsesignedint ww1 ww2 ww3 ww4 }) -}
60d17885b6f83022fc07e6740f144fb3
  parsesignedint1 ::
    Data.Either.Either GHC.Base.String GHC.Types.Double
  {- Strictness: x -}
eb54c5795cd87d65034c776d841620e0
  pintflag :: Lib.AlignedRead -> GHC.Types.Bool
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLSLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds28 }) -}
eb54c5795cd87d65034c776d841620e0
  pnext :: Lib.AlignedRead -> GHC.Integer.Type.Integer
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLSLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds18 }) -}
eb54c5795cd87d65034c776d841620e0
  pos :: Lib.AlignedRead -> GHC.Integer.Type.Integer
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds10 }) -}
9397824cc9d01cf75666f6f250a9bd4d
  postxposdcnt :: Lib.MidFamily -> GHC.Integer.Type.Integer
  RecSel Left Lib.MidFamily
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLSLL),1*U(A,A,A,A,A,A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MidFamily) ->
                 case ds6 of wild { Lib.MidFamily ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds14 }) -}
49f6bd17d4b7e9765a2fb432bb82fbaa
  primaryR1filter :: Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LS(S)LLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: Lib.AlignedRead) ->
                 case a of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 case ds7 of wild1 { GHC.Types.I# x# ->
                 case GHC.Prim.andI# x# 256# of wild2 {
                   DEFAULT -> GHC.Types.False
                   0#
                   -> case GHC.Prim.andI# x# 64# of wild3 {
                        DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } } } }) -}
97a3e7218893196526f19f3ca7fac66f
  primaryR2filter :: Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LS(S)LLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: Lib.AlignedRead) ->
                 case a of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 case ds7 of wild1 { GHC.Types.I# x# ->
                 case GHC.Prim.andI# x# 256# of wild2 {
                   DEFAULT -> GHC.Types.False
                   0#
                   -> case GHC.Prim.andI# x# 64# of wild3 {
                        DEFAULT -> GHC.Types.False 0# -> GHC.Types.True } } } }) -}
c2e846a96229779da79fc31f824471a7
  printAlignment ::
    Lib.AlignedRead -> Data.ByteString.Internal.ByteString
  {- Arity: 1,
     Strictness: <L,U(1*U,1*U(U),1*U,A,A,U,A,1*U,A,A,1*U(U,U,U,U),1*U,U,1*U,1*U,1*U,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A)> -}
b9472483de5fd6aa43b852fe40aa456b
  printAlignmentOrHdr ::
    Lib.AlignedRead -> Data.ByteString.Internal.ByteString
  {- Arity: 1,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLSLLLL),1*U(U,1*U(U),1*U,A,A,U,A,U,A,A,U(U,U,U,U),1*U,U,U,U,U,A,A,A,A,A,A,A,1*U,A,1*U,1*U,A,A,A,A)> -}
c454c7a2238ae0bd61eacb64a57e47b4
  printAlnStreamToFile ::
    Control.Monad.Trans.Resource.Internal.MonadResource m =>
    GHC.IO.FilePath
    -> Data.Conduit.Internal.Conduit.ConduitM Lib.AlignedRead c m ()
  {- Arity: 2,
     Strictness: <L,U(U(U(A,C(C1(U)),A,C(U),A),C(U)),C(U))><L,U> -}
eb54c5795cd87d65034c776d841620e0
  qname :: Lib.AlignedRead -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(1*U(U,U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds7 }) -}
69814aa9d1fbec2649c78c6d1eb24076
  queryPlus :: Lib.SAMFlag -> GHC.Types.Bool
  RecSel Left Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLLLLLLL),1*U(A,A,A,A,1*U,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.SAMFlag) ->
                 case ds6 of wild { Lib.SAMFlag ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds11 }) -}
eb54c5795cd87d65034c776d841620e0
  r1prim :: Lib.PairedAln -> Lib.AlignedRead
  RecSel Left Lib.PairedAln
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.PairedAln) ->
                 case ds6 of wild { Lib.PairedAln ds7 ds8 ds9 ds10 -> ds7 }) -}
eb54c5795cd87d65034c776d841620e0
  r1secs :: Lib.PairedAln -> [Lib.AlignedRead]
  RecSel Left Lib.PairedAln
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLSL),1*U(A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.PairedAln) ->
                 case ds6 of wild { Lib.PairedAln ds7 ds8 ds9 ds10 -> ds9 }) -}
eb54c5795cd87d65034c776d841620e0
  r2prim :: Lib.PairedAln -> Lib.AlignedRead
  RecSel Left Lib.PairedAln
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLL),1*U(A,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.PairedAln) ->
                 case ds6 of wild { Lib.PairedAln ds7 ds8 ds9 ds10 -> ds8 }) -}
eb54c5795cd87d65034c776d841620e0
  r2secs :: Lib.PairedAln -> [Lib.AlignedRead]
  RecSel Left Lib.PairedAln
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLS),1*U(A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.PairedAln) ->
                 case ds6 of wild { Lib.PairedAln ds7 ds8 ds9 ds10 -> ds10 }) -}
dbff6405ff62c1fef4b19f2947824221
  rdint :: GHC.Base.String -> GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>, Unfolding: (Lib.toBinInt) -}
ef25e687dc5da6ac3124304ff181ee74
  read1filter :: Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LS(S)LLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: Lib.AlignedRead) ->
                 case a of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 case ds7 of wild1 { GHC.Types.I# x# ->
                 case GHC.Prim.andI# x# 64# of wild2 {
                   DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } } }) -}
ba6f3b3b3855b2bdd8a223b345e8d0b5
  readBEDPE :: GHC.IO.FilePath -> GHC.Types.IO [Lib.BEDPE]
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.createprimerbedmaps2
                  `cast`
                (<GHC.IO.FilePath>_R
                 ->_R Sym (GHC.Types.N:IO[0] <[Lib.BEDPE]>_R)) -}
f350cce84b99e404367c1596f7acca7f
  readSAM :: GHC.IO.FilePath -> GHC.Types.IO [Lib.AlignedRead]
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.readSAM1
                  `cast`
                (<GHC.IO.FilePath>_R
                 ->_R Sym (GHC.Types.N:IO[0] <[Lib.AlignedRead]>_R)) -}
cedb2017c61d991fe72ad3b8c489d4bc
  readSAM1 ::
    GHC.IO.FilePath
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [Lib.AlignedRead] #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (fp :: GHC.IO.FilePath)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case System.IO.withBinaryFile1
                        @ Data.ByteString.Internal.ByteString
                        fp
                        GHC.IO.IOMode.ReadMode
                        Data.ByteString.readFile2
                          `cast`
                        (<GHC.IO.Handle.Types.Handle>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Data.ByteString.Internal.ByteString>_R))
                        eta of ds6 { (#,#) ipv ipv1 ->
                 (# ipv,
                    case ipv1 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                    Data.Either.rights
                      @ GHC.Base.String
                      @ Lib.AlignedRead
                      (GHC.Base.map
                         @ Data.ByteString.Internal.ByteString
                         @ (Data.Either.Either GHC.Base.String Lib.AlignedRead)
                         Lib.readSAM2
                         (Data.ByteString.Char8.$wlines ww1 ww2 ww3 ww4)) } #) }) -}
4e751f6265260b5f847105e2e9b96e7c
  readSAM2 ::
    Data.ByteString.Internal.ByteString
    -> Data.Either.Either GHC.Base.String Lib.AlignedRead
  {- Arity: 1,
     Unfolding: (Data.Attoparsec.ByteString.Internal.parseOnly
                   @ Lib.AlignedRead
                   Lib.readSAM3
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                             <Data.ByteString.Internal.ByteString>_N <Lib.AlignedRead>_R))) -}
32da0c7f51820419afbe1ebf1fd8534b
  readSAM3 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.AlignedRead
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.AlignedRead
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wlvl5 @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
6e11dffe83910f1cf563eaf087706f59
  readSAMFlag :: GHC.Types.Int -> Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(U)>,
     Unfolding: (\ (flag1 :: GHC.Types.Int) ->
                 Lib.SAMFlag
                   (case flag1 of wild { GHC.Types.I# x# ->
                    case GHC.Prim.andI# x# 1# of wild1 {
                      DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } })
                   (case flag1 of wild { GHC.Types.I# x# ->
                    case GHC.Prim.andI# x# 2# of wild1 {
                      DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } })
                   (case flag1 of wild { GHC.Types.I# x# ->
                    case GHC.Prim.andI# x# 4# of wild1 {
                      DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } })
                   (case flag1 of wild { GHC.Types.I# x# ->
                    case GHC.Prim.andI# x# 8# of wild1 {
                      DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } })
                   (case flag1 of wild { GHC.Types.I# x# ->
                    case GHC.Prim.andI# x# 16# of wild1 {
                      DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } })
                   (case flag1 of wild { GHC.Types.I# x# ->
                    case GHC.Prim.andI# x# 32# of wild1 {
                      DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } })
                   (case flag1 of wild { GHC.Types.I# x# ->
                    case GHC.Prim.andI# x# 64# of wild1 {
                      DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } })
                   (case flag1 of wild { GHC.Types.I# x# ->
                    case GHC.Prim.andI# x# 128# of wild1 {
                      DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } })
                   (case flag1 of wild { GHC.Types.I# x# ->
                    case GHC.Prim.andI# x# 256# of wild1 {
                      DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } })
                   (case flag1 of wild { GHC.Types.I# x# ->
                    case GHC.Prim.andI# x# 512# of wild1 {
                      DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } })
                   (case flag1 of wild { GHC.Types.I# x# ->
                    case GHC.Prim.andI# x# 1024# of wild1 {
                      DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } })
                   flag1) -}
99e61ac530e0181802fda77b4d2b3176
  readSAMnameset ::
    GHC.IO.FilePath -> GHC.Types.IO [[Lib.AlignedRead]]
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.readSAMnameset1
                  `cast`
                (<GHC.IO.FilePath>_R
                 ->_R Sym (GHC.Types.N:IO[0] <[[Lib.AlignedRead]]>_R)) -}
b1f522446d5c80de217d599b1bde414d
  readSAMnameset1 ::
    GHC.IO.FilePath
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [[Lib.AlignedRead]] #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (fp :: GHC.IO.FilePath)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case System.IO.withBinaryFile1
                        @ Data.ByteString.Internal.ByteString
                        fp
                        GHC.IO.IOMode.ReadMode
                        Data.ByteString.readFile2
                          `cast`
                        (<GHC.IO.Handle.Types.Handle>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Data.ByteString.Internal.ByteString>_R))
                        eta of ds6 { (#,#) ipv ipv1 ->
                 (# ipv, Lib.parseReadsetsFromSAM ipv1 #) }) -}
2f1a517c9b40ec53bd80b6bbac3cfe4d
  readSAMtoPairedAlns ::
    GHC.IO.FilePath -> GHC.Types.IO (Lib.AlignedRead, [Lib.PairedAln])
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.readSAMtoPairedAlns1
                  `cast`
                (<GHC.IO.FilePath>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <(Lib.AlignedRead, [Lib.PairedAln])>_R)) -}
7dff252aeb543e77c2252e647c3a8e71
  readSAMtoPairedAlns1 ::
    GHC.IO.FilePath
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Lib.AlignedRead, [Lib.PairedAln]) #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (fp :: GHC.IO.FilePath)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case System.IO.withBinaryFile1
                        @ Data.ByteString.Internal.ByteString
                        fp
                        GHC.IO.IOMode.ReadMode
                        Data.ByteString.readFile2
                          `cast`
                        (<GHC.IO.Handle.Types.Handle>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Data.ByteString.Internal.ByteString>_R))
                        eta of ds6 { (#,#) ipv ipv1 ->
                 (# ipv,
                    let {
                      ipv2 :: [[Lib.AlignedRead]]
                      = case ipv1 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                        Lib.$wparseReadsetsFromSAM ww1 ww2 ww3 ww4 }
                    } in
                    (Lib.safegetheader ipv2,
                     case ipv2 of wild {
                       [] -> case GHC.List.scanl2 ret_ty [Lib.PairedAln] of {}
                       : ds7 xs
                       -> GHC.Base.map
                            @ [Lib.AlignedRead]
                            @ Lib.PairedAln
                            Lib.alnsToPairedAln
                            xs }) #) }) -}
a7c97907756ad75420003537facae18f
  readint :: GHC.Base.String -> GHC.Integer.Type.Integer
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (s :: GHC.Base.String) ->
                 case Text.Read.readEither8
                        @ GHC.Integer.Type.Integer
                        (Text.ParserCombinators.ReadP.run
                           @ GHC.Integer.Type.Integer
                           Lib.readint3
                           s) of wild {
                   [] -> Lib.readint2
                   : x ds6
                   -> case ds6 of wild1 { [] -> x : ipv ipv1 -> Lib.readint1 } }) -}
920f40d614d3c885d56b269974d37a88
  readint1 :: GHC.Integer.Type.Integer
  {- Strictness: x -}
2abc304a6a8f9e191d8af6e9da494d6b
  readint2 :: GHC.Integer.Type.Integer
  {- Strictness: x -}
140c837f36bfed5498446f3b1653b681
  readint3 :: Text.ParserCombinators.ReadP.P GHC.Integer.Type.Integer
  {- Unfolding: (GHC.Read.$fReadInteger_$sreadNumber
                   GHC.Read.$fReadInteger2
                   Text.ParserCombinators.ReadPrec.minPrec
                   @ GHC.Integer.Type.Integer
                   (Text.Read.readEither7 @ GHC.Integer.Type.Integer)) -}
eb54c5795cd87d65034c776d841620e0
  refseq :: Lib.AlignedRead -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLSLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds20 }) -}
03d4900666c7e41f065b6b3696b5e21d
  removeDs ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> [(GHC.Integer.Type.Integer,
         Data.ByteString.Internal.ByteString)]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (cs :: [(GHC.Integer.Type.Integer,
                            Data.ByteString.Internal.ByteString)]) ->
                 GHC.Base.build
                   @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                   (\ @ b
                      (c2 :: (GHC.Integer.Type.Integer,
                              Data.ByteString.Internal.ByteString)
                             -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                      @ b
                      (GHC.List.filterFB
                         @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                         @ b
                         c2
                         Lib.removeDs1)
                      n
                      cs)) -}
57a3a6513c57bb80e8c297e105cb0e74
  removeDs1 ::
    (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
    -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S(LS(SLSS)),1*U(A,1*U(U,U,U,U))>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: (GHC.Integer.Type.Integer,
                          Data.ByteString.Internal.ByteString)) ->
                 case w of ww { (,) ww1 ww2 ->
                 case ww2 of ww3 { Data.ByteString.Internal.PS ww4 ww5 ww6 ww7 ->
                 Lib.$wlvl6 ww4 ww5 ww6 ww7 } }) -}
80d98601940a7c18113941837fd7168d
  removeNonPrimaryZeroLengthAlignments ::
    Lib.PairedAln -> Lib.PairedAln
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,1*U,1*U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (p :: Lib.PairedAln) ->
                 case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                 Lib.PairedAln
                   ds6
                   ds7
                   (GHC.Base.build
                      @ Lib.AlignedRead
                      (\ @ b
                         (c2 :: Lib.AlignedRead -> b -> b)[OneShot]
                         (n :: b)[OneShot] ->
                       GHC.Base.foldr
                         @ Lib.AlignedRead
                         @ b
                         (GHC.List.filterFB
                            @ Lib.AlignedRead
                            @ b
                            c2
                            Lib.removeNonPrimaryZeroLengthAlignments1)
                         n
                         ds8))
                   (GHC.Base.build
                      @ Lib.AlignedRead
                      (\ @ b
                         (c2 :: Lib.AlignedRead -> b -> b)[OneShot]
                         (n :: b)[OneShot] ->
                       GHC.Base.foldr
                         @ Lib.AlignedRead
                         @ b
                         (GHC.List.filterFB
                            @ Lib.AlignedRead
                            @ b
                            c2
                            Lib.removeNonPrimaryZeroLengthAlignments1)
                         n
                         ds9)) }) -}
bab6faa179486f6b7f8ea7c123e48b39
  removeNonPrimaryZeroLengthAlignments1 ::
    Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLS),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.AlignedRead) ->
                 case x of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 case ds36 of wild1 {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False } }) -}
41e419caa6421af87430fbdaa638ee28
  rightOrDefault ::
    Data.Either.Either GHC.Base.String Lib.AlignedRead
    -> Lib.AlignedRead
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (e :: Data.Either.Either GHC.Base.String Lib.AlignedRead) ->
                 case e of wild {
                   Data.Either.Left ds6 -> Lib.defaultAlignment
                   Data.Either.Right a -> a }) -}
43ee69cc506a736c17a08159692c76e9
  rightOrDefaultPaird ::
    Data.Either.Either
      Data.Conduit.Attoparsec.ParseError
      (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln])
    -> [Lib.PairedAln]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (e :: Data.Either.Either
                           Data.Conduit.Attoparsec.ParseError
                           (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln])) ->
                 case e of wild {
                   Data.Either.Left ds6 -> GHC.Types.[] @ Lib.PairedAln
                   Data.Either.Right a
                   -> Data.Tuple.snd
                        @ Data.Conduit.Attoparsec.PositionRange
                        @ [Lib.PairedAln]
                        a }) -}
eb54c5795cd87d65034c776d841620e0
  rint :: Lib.AlignedRead -> [Lib.BedRecord]
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLSLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds27 }) -}
eb54c5795cd87d65034c776d841620e0
  rname :: Lib.AlignedRead -> Lib.UChr
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds9 }) -}
eb54c5795cd87d65034c776d841620e0
  rnext :: Lib.AlignedRead -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLSLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds17 }) -}
5c60f94b7b568416ce10a3df93351d0e
  safegetheader :: [[Lib.AlignedRead]] -> Lib.AlignedRead
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: [[Lib.AlignedRead]]) ->
                 letrec {
                   go20 :: [[Lib.AlignedRead]] -> [Lib.AlignedRead]
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (ds6 :: [[Lib.AlignedRead]]) ->
                     case ds6 of wild {
                       [] -> GHC.Types.[] @ Lib.AlignedRead
                       : y ys -> GHC.Base.++ @ Lib.AlignedRead y (go20 ys) }
                 } in
                 case go20 w of wild {
                   [] -> Lib.safegetheader2
                   : ds6 ds7
                   -> case w of wild1 {
                        [] -> case GHC.List.badHead ret_ty Lib.AlignedRead of {}
                        : x ds8
                        -> case x of wild2 {
                             [] -> case GHC.List.badHead ret_ty Lib.AlignedRead of {}
                             : x1 ds9
                             -> case x1 of wild3 { Lib.AlignedRead ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ->
                                case ds36 of wild4 {
                                  GHC.Types.False -> Lib.safegetheader1
                                  GHC.Types.True
                                  -> Lib.AlignedRead
                                       ds10
                                       ds11
                                       ds12
                                       ds13
                                       ds14
                                       ds15
                                       ds16
                                       ds17
                                       ds18
                                       ds19
                                       ds20
                                       ds21
                                       ds22
                                       ds23
                                       ds24
                                       ds25
                                       ds26
                                       ds27
                                       ds28
                                       ds29
                                       ds30
                                       ds31
                                       ds32
                                       ds33
                                       ds34
                                       ds35
                                       GHC.Types.True
                                       ds37
                                       ds38
                                       ds39
                                       ds40 } } } } }) -}
e68a4eb1e74cc10d0e862e8c7e72a0dc
  safegetheader1 :: Lib.AlignedRead
  {- Strictness: x -}
dbf9e62feaf8c04fca33d43809c91f44
  safegetheader2 :: Lib.AlignedRead
  {- Strictness: x -}
5d94d15ef45dd2371d92d81ed39fee6e
  safemapcig ::
    Data.ByteString.Internal.ByteString -> GHC.Base.Maybe Lib.CigarMap
  {- Arity: 1, Strictness: <S(SLSS),1*U(U,U,U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.ByteString.Internal.ByteString) ->
                 case w of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wsafemapcig ww1 ww2 ww3 ww4 }) -}
ebbc50174f14a2a76ce89478eef0564b
  samhdrparser ::
    Data.Attoparsec.ByteString.Internal.Parser
      Data.ByteString.Internal.ByteString
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.samhdrparser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)) -}
e4d2cdbdac412b834a9379b6709b5333
  samhdrparser1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wsamhdrparser @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
43256d11ad46e6ffe610d40b581ba722
  samhdrparserEOL ::
    Data.Attoparsec.ByteString.Internal.Parser
      Data.ByteString.Internal.ByteString
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.samhdrparserEOL1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)) -}
7ce310537ab8e7e979ea0792950cae2d
  samhdrparserEOL1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wsamhdrparserEOL
                   @ r
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww8
                   w2
                   w3
                   w4 } }) -}
76f7f1931d7f72f61da7017a87e88ed8
  secalnp ::
    Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.ByteString.Internal.Parser Lib.AlignedRead
  {- Arity: 6,
     Strictness: <S(LLLS),1*U(U,U,U,U)><S(LLLSLL),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.secalnp1
                  `cast`
                (<Data.ByteString.Internal.ByteString>_R
                 ->_R Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                               <Data.ByteString.Internal.ByteString>_N <Lib.AlignedRead>_R)) -}
9c51d4b152b731fad24bf8dfacaf3852
  secalnp1 ::
    Data.ByteString.Internal.ByteString
    -> forall r.
       Data.Attoparsec.Internal.Types.State
         Data.ByteString.Internal.ByteString
       -> Data.Attoparsec.Internal.Types.Pos
       -> Data.Attoparsec.Internal.Types.More
       -> Data.Attoparsec.Internal.Types.Failure
            Data.ByteString.Internal.ByteString
            (Data.Attoparsec.Internal.Types.State
               Data.ByteString.Internal.ByteString)
            r
       -> Data.Attoparsec.Internal.Types.Success
            Data.ByteString.Internal.ByteString
            (Data.Attoparsec.Internal.Types.State
               Data.ByteString.Internal.ByteString)
            Lib.AlignedRead
            r
       -> Data.Attoparsec.Internal.Types.IResult
            Data.ByteString.Internal.ByteString r
  {- Arity: 6,
     Strictness: <S(LLLS),1*U(U,U,U,U)><S(LLLSLL),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))> -}
86e19966cc31938317265afac04a9f84
  seqp ::
    Data.Attoparsec.ByteString.Internal.Parser
      Data.ByteString.Internal.ByteString
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.seqp1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)) -}
0b0b01037546bd1ca74dd5e3c83f544b
  seqp1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wseqp @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w4 } }) -}
b179425faceb993027f428adcb33c8ee
  setMapdProperPairBit :: Lib.PairedAln -> Lib.PairedAln
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S,1*U(1*U(U,1*U(U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),1*U(U,1*U(U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.PairedAln) ->
                 case w of ww { Lib.PairedAln ww1 ww2 ww3 ww4 ->
                 Lib.PairedAln
                   (case ww1 of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                    Lib.AlignedRead
                      ds6
                      (case ds7 of wild1 { GHC.Types.I# x# ->
                       GHC.Types.I# (GHC.Prim.orI# x# 2#) })
                      ds8
                      ds9
                      ds10
                      ds11
                      ds12
                      ds13
                      ds14
                      ds15
                      ds16
                      ds17
                      ds18
                      ds19
                      ds20
                      ds21
                      ds22
                      ds23
                      ds24
                      ds25
                      ds26
                      ds27
                      ds28
                      ds29
                      ds30
                      ds31
                      ds32
                      ds33
                      ds34
                      ds35
                      ds36 })
                   (case ww2 of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                    Lib.AlignedRead
                      ds6
                      (case ds7 of wild1 { GHC.Types.I# x# ->
                       GHC.Types.I# (GHC.Prim.orI# x# 2#) })
                      ds8
                      ds9
                      ds10
                      ds11
                      ds12
                      ds13
                      ds14
                      ds15
                      ds16
                      ds17
                      ds18
                      ds19
                      ds20
                      ds21
                      ds22
                      ds23
                      ds24
                      ds25
                      ds26
                      ds27
                      ds28
                      ds29
                      ds30
                      ds31
                      ds32
                      ds33
                      ds34
                      ds35
                      ds36 })
                   ww3
                   ww4 }) -}
bf305219c93f3b153e9559e31e4da99d
  setMateRname :: Lib.PairedAln -> Lib.PairedAln
  {- Arity: 1,
     Strictness: <S(S(LS(S)LLLLLLLLLLLLLLLLLLLLLLLLLLLLL)S(LS(S)LLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LL),1*U(U(U,U(U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U(U,U(U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)>m,
     Unfolding: (\ (p :: Lib.PairedAln) ->
                 case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                 case ds7 of ww { Lib.AlignedRead ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ->
                 case ww2 of ww32 { GHC.Types.I# ww33 ->
                 let {
                   newr2secs :: [Lib.AlignedRead]
                   = let {
                       lvl1008 :: Data.ByteString.Internal.ByteString
                       = case ds6 of wild1 { Lib.AlignedRead ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ->
                         let {
                           cs :: [GHC.Types.Char] = Lib.$fShowUChr_$cshow ds12
                         } in
                         case GHC.List.$wlenAcc @ GHC.Types.Char cs 0# of ww34 { DEFAULT ->
                         Data.ByteString.Internal.$wunsafePackLenChars ww34 cs } }
                     } in
                     GHC.Base.map
                       @ Lib.AlignedRead
                       @ Lib.AlignedRead
                       (\ (y :: Lib.AlignedRead) ->
                        case y of wild1 { Lib.AlignedRead ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ->
                        Lib.AlignedRead
                          ds10
                          ds11
                          ds12
                          ds13
                          ds14
                          ds15
                          ds16
                          ds17
                          ds18
                          ds19
                          lvl1008
                          ds21
                          ds22
                          ds23
                          ds24
                          ds25
                          ds26
                          ds27
                          ds28
                          ds29
                          ds30
                          ds31
                          ds32
                          ds33
                          ds34
                          ds35
                          ds36
                          ds37
                          ds38
                          ds39
                          ds40 })
                       ds9
                 } in
                 let {
                   newr2p :: Data.ByteString.Internal.ByteString
                   = case ds6 of wild1 { Lib.AlignedRead ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ->
                     let {
                       cs :: [GHC.Types.Char] = Lib.$fShowUChr_$cshow ds12
                     } in
                     case GHC.List.$wlenAcc @ GHC.Types.Char cs 0# of ww34 { DEFAULT ->
                     Data.ByteString.Internal.$wunsafePackLenChars ww34 cs } }
                 } in
                 case GHC.Prim.andI# ww33 4# of wild1 {
                   DEFAULT
                   -> case ds6 of wild2 { Lib.AlignedRead ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ->
                      case ds11 of wild3 { GHC.Types.I# x# ->
                      case GHC.Prim.andI# x# 4# of wild4 {
                        DEFAULT -> wild
                        0#
                        -> Lib.PairedAln
                             wild2
                             (Lib.AlignedRead
                                ww1
                                ww32
                                ww3
                                ww4
                                ww5
                                ww6
                                ww7
                                ww8
                                ww9
                                ww10
                                newr2p
                                ww12
                                ww13
                                ww14
                                ww15
                                ww16
                                ww17
                                ww18
                                ww19
                                ww20
                                ww21
                                ww22
                                ww23
                                ww24
                                ww25
                                ww26
                                ww27
                                ww28
                                ww29
                                ww30
                                ww31)
                             ds8
                             newr2secs } } }
                   0#
                   -> case ds6 of wild2 { Lib.AlignedRead ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ->
                      case ds11 of wild3 { GHC.Types.I# x# ->
                      let {
                        newr1secs :: [Lib.AlignedRead]
                        = let {
                            lvl1008 :: Data.ByteString.Internal.ByteString
                            = let {
                                cs :: [GHC.Types.Char] = Lib.$fShowUChr_$cshow ww3
                              } in
                              case GHC.List.$wlenAcc @ GHC.Types.Char cs 0# of ww34 { DEFAULT ->
                              Data.ByteString.Internal.$wunsafePackLenChars ww34 cs }
                          } in
                          GHC.Base.map
                            @ Lib.AlignedRead
                            @ Lib.AlignedRead
                            (\ (y :: Lib.AlignedRead) ->
                             case y of wild4 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                             Lib.AlignedRead
                               ds41
                               ds42
                               ds43
                               ds44
                               ds45
                               ds46
                               ds47
                               ds48
                               ds49
                               ds50
                               lvl1008
                               ds52
                               ds53
                               ds54
                               ds55
                               ds56
                               ds57
                               ds58
                               ds59
                               ds60
                               ds61
                               ds62
                               ds63
                               ds64
                               ds65
                               ds66
                               ds67
                               ds68
                               ds69
                               ds70
                               ds71 })
                            ds8
                      } in
                      let {
                        newr1p :: Data.ByteString.Internal.ByteString
                        = let {
                            cs :: [GHC.Types.Char] = Lib.$fShowUChr_$cshow ww3
                          } in
                          case GHC.List.$wlenAcc @ GHC.Types.Char cs 0# of ww34 { DEFAULT ->
                          Data.ByteString.Internal.$wunsafePackLenChars ww34 cs }
                      } in
                      case GHC.Prim.andI# x# 4# of wild4 {
                        DEFAULT
                        -> Lib.PairedAln
                             (Lib.AlignedRead
                                ds10
                                wild3
                                ds12
                                ds13
                                ds14
                                ds15
                                ds16
                                ds17
                                ds18
                                ds19
                                newr1p
                                ds21
                                ds22
                                ds23
                                ds24
                                ds25
                                ds26
                                ds27
                                ds28
                                ds29
                                ds30
                                ds31
                                ds32
                                ds33
                                ds34
                                ds35
                                ds36
                                ds37
                                ds38
                                ds39
                                ds40)
                             ww
                             newr1secs
                             ds9
                        0#
                        -> Lib.PairedAln
                             (Lib.AlignedRead
                                ds10
                                wild3
                                ds12
                                ds13
                                ds14
                                ds15
                                ds16
                                ds17
                                ds18
                                ds19
                                newr1p
                                ds21
                                ds22
                                ds23
                                ds24
                                ds25
                                ds26
                                ds27
                                ds28
                                ds29
                                ds30
                                ds31
                                ds32
                                ds33
                                ds34
                                ds35
                                ds36
                                ds37
                                ds38
                                ds39
                                ds40)
                             (Lib.AlignedRead
                                ww1
                                ww32
                                ww3
                                ww4
                                ww5
                                ww6
                                ww7
                                ww8
                                ww9
                                ww10
                                newr2p
                                ww12
                                ww13
                                ww14
                                ww15
                                ww16
                                ww17
                                ww18
                                ww19
                                ww20
                                ww21
                                ww22
                                ww23
                                ww24
                                ww25
                                ww26
                                ww27
                                ww28
                                ww29
                                ww30
                                ww31)
                             newr1secs
                             newr2secs } } } } } } }) -}
7814b2a883d98c53ae62d6ec70a8c601
  setProperInsertSizeRange ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer -> Lib.PairedAln -> Lib.PairedAln
  {- Arity: 3,
     Strictness: <S,U><L,U><S,1*U(U(U,U(U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U(U,U(U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)>m,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Integer.Type.Integer)
                   (w1 :: GHC.Integer.Type.Integer)
                   (w2 :: Lib.PairedAln) ->
                 case w2 of ww { Lib.PairedAln ww1 ww2 ww3 ww4 ->
                 case Lib.checkInsertSize
                        w
                        w1
                        (Lib.PairedAln ww1 ww2 ww3 ww4) of wild {
                   GHC.Types.False -> Lib.PairedAln ww1 ww2 ww3 ww4
                   GHC.Types.True
                   -> case ww1 of wild1 { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                      case ds24 of wild2 {
                        GHC.Types.False -> Lib.PairedAln wild1 ww2 ww3 ww4
                        GHC.Types.True
                        -> case ww2 of wild3 { Lib.AlignedRead ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ->
                           case ds55 of wild4 {
                             GHC.Types.False -> Lib.PairedAln wild1 wild3 ww3 ww4
                             GHC.Types.True
                             -> Lib.PairedAln
                                  (Lib.AlignedRead
                                     ds6
                                     (case ds7 of wild5 { GHC.Types.I# x# ->
                                      GHC.Types.I# (GHC.Prim.orI# x# 2#) })
                                     ds8
                                     ds9
                                     ds10
                                     ds11
                                     ds12
                                     ds13
                                     ds14
                                     ds15
                                     ds16
                                     ds17
                                     ds18
                                     ds19
                                     ds20
                                     ds21
                                     ds22
                                     ds23
                                     GHC.Types.True
                                     ds25
                                     ds26
                                     ds27
                                     ds28
                                     ds29
                                     ds30
                                     ds31
                                     ds32
                                     ds33
                                     ds34
                                     ds35
                                     ds36)
                                  (Lib.AlignedRead
                                     ds37
                                     (case ds38 of wild5 { GHC.Types.I# x# ->
                                      GHC.Types.I# (GHC.Prim.orI# x# 2#) })
                                     ds39
                                     ds40
                                     ds41
                                     ds42
                                     ds43
                                     ds44
                                     ds45
                                     ds46
                                     ds47
                                     ds48
                                     ds49
                                     ds50
                                     ds51
                                     ds52
                                     ds53
                                     ds54
                                     GHC.Types.True
                                     ds56
                                     ds57
                                     ds58
                                     ds59
                                     ds60
                                     ds61
                                     ds62
                                     ds63
                                     ds64
                                     ds65
                                     ds66
                                     ds67)
                                  ww3
                                  ww4 } } } } } }) -}
bf59f37c195b0910d5d8340e71d022e1
  setProperPairMapFlagBit :: GHC.Types.Int -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (flg :: GHC.Types.Int) ->
                 case flg of wild { GHC.Types.I# x# ->
                 GHC.Types.I# (GHC.Prim.orI# x# 2#) }) -}
7e52f0d45750ea2f7677d2aa5c95fc97
  setZeroLengthAlnFlag :: GHC.Types.Int -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (flg :: GHC.Types.Int) ->
                 case flg of wild { GHC.Types.I# x# ->
                 GHC.Types.I#
                   (GHC.Prim.andI#
                      (GHC.Prim.andI# (GHC.Prim.orI# (GHC.Prim.andI# x# -3#) 4#) -257#)
                      -2049#) }) -}
2c7136f0af687bed8c9b216acb4e3559
  setZeroLengthPairFlag :: GHC.Types.Int -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (flg :: GHC.Types.Int) ->
                 case flg of wild { GHC.Types.I# x# ->
                 GHC.Types.I# (GHC.Prim.orI# (GHC.Prim.andI# x# -3#) 8#) }) -}
b6627eacf8673fda7fbecb3e19cab3ad
  setpintflag :: Data.Foldable.Foldable t => t a -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLC(S(S))LLLLL),1*U(A,A,A,A,A,A,A,A,A,A,1*C1(U(U)),A,A,A,A,A)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ t :: * -> *
                   @ a
                   ($dFoldable :: Data.Foldable.Foldable t)
                   (hits :: t a) ->
                 case Data.Foldable.length
                        @ t
                        $dFoldable
                        @ a
                        hits of wild { GHC.Types.I# x ->
                 GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.># x 0#) }) -}
a6ebf4675721fe29b678de9d9ce7855e
  shiftcrds ::
    (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
    -> (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
    -> (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
  {- Arity: 2,
     Strictness: <L,1*U(1*U,A)><S(LS(SLSS)),1*U(A,1*U(U,U,U,U))>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: (GHC.Integer.Type.Integer,
                          Data.ByteString.Internal.ByteString))
                   (w1 :: (GHC.Integer.Type.Integer,
                           Data.ByteString.Internal.ByteString)) ->
                 case w1 of ww { (,) ww1 ww2 ->
                 case ww2 of ww3 { Data.ByteString.Internal.PS ww4 ww5 ww6 ww7 ->
                 case Lib.$wshiftcrds w ww4 ww5 ww6 ww7 of ww8 { (#,#) ww9 ww10 ->
                 (ww9, ww10) } } }) -}
a7b01d7d555ab56d9a53e6161bd35c5b
  showChrom :: Lib.ChromNameFormat -> Lib.UChr -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (fmt :: Lib.ChromNameFormat) (chr :: Lib.UChr) ->
                 case fmt of wild {
                   Lib.GRC
                   -> case chr of wild1 {
                        DEFAULT -> Lib.showChrom51
                        Lib.Chr1 -> Lib.showChrom50
                        Lib.Chr2 -> Lib.showChrom49
                        Lib.Chr3 -> Lib.showChrom48
                        Lib.Chr4 -> Lib.showChrom47
                        Lib.Chr5 -> Lib.showChrom46
                        Lib.Chr6 -> Lib.showChrom45
                        Lib.Chr7 -> Lib.showChrom44
                        Lib.Chr8 -> Lib.showChrom43
                        Lib.Chr9 -> Lib.showChrom42
                        Lib.Chr10 -> Lib.showChrom41
                        Lib.Chr11 -> Lib.showChrom40
                        Lib.Chr12 -> Lib.showChrom39
                        Lib.Chr13 -> Lib.showChrom38
                        Lib.Chr14 -> Lib.showChrom37
                        Lib.Chr15 -> Lib.showChrom36
                        Lib.Chr16 -> Lib.showChrom35
                        Lib.Chr17 -> Lib.showChrom34
                        Lib.Chr18 -> Lib.showChrom33
                        Lib.Chr19 -> Lib.showChrom32
                        Lib.Chr20 -> Lib.showChrom31
                        Lib.Chr21 -> Lib.showChrom30
                        Lib.Chr22 -> Lib.showChrom29
                        Lib.ChrX -> Lib.showChrom28
                        Lib.ChrY -> Lib.showChrom27
                        Lib.ChrM -> Lib.showChrom26 }
                   Lib.UCSC
                   -> case chr of wild1 {
                        DEFAULT -> Lib.showChrom51
                        Lib.Chr1 -> Lib.showChrom25
                        Lib.Chr2 -> Lib.showChrom24
                        Lib.Chr3 -> Lib.showChrom23
                        Lib.Chr4 -> Lib.showChrom22
                        Lib.Chr5 -> Lib.showChrom21
                        Lib.Chr6 -> Lib.showChrom20
                        Lib.Chr7 -> Lib.showChrom19
                        Lib.Chr8 -> Lib.showChrom18
                        Lib.Chr9 -> Lib.showChrom17
                        Lib.Chr10 -> Lib.showChrom16
                        Lib.Chr11 -> Lib.showChrom15
                        Lib.Chr12 -> Lib.showChrom14
                        Lib.Chr13 -> Lib.showChrom13
                        Lib.Chr14 -> Lib.showChrom12
                        Lib.Chr15 -> Lib.showChrom11
                        Lib.Chr16 -> Lib.showChrom10
                        Lib.Chr17 -> Lib.showChrom9
                        Lib.Chr18 -> Lib.showChrom8
                        Lib.Chr19 -> Lib.showChrom7
                        Lib.Chr20 -> Lib.showChrom6
                        Lib.Chr21 -> Lib.showChrom5
                        Lib.Chr22 -> Lib.showChrom4
                        Lib.ChrX -> Lib.showChrom3
                        Lib.ChrY -> Lib.showChrom2
                        Lib.ChrM -> Lib.showChrom1 } }) -}
bb17c8fc1f152a50aec29aa2c0f74fab
  showChrom1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#) -}
f6250c0329be21c35a38ee40bf1e4087
  showChrom10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#9) -}
8211f1ab839b9def405f40783ddab086
  showChrom11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#10) -}
b1aae15d24dbb3b086d63603e38a1a57
  showChrom12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#11) -}
e015b138e9968b327ba3905b8df8d1cc
  showChrom13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#12) -}
cb7a8218a2cf13efa034a2c9e6e1e03f
  showChrom14 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#13) -}
c662ce16fad71c4833a370a74414ed4b
  showChrom15 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#14) -}
2ae7d27d2ec012ba0c9c0f629a265e5f
  showChrom16 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#15) -}
4a347255260b769803fae3b4071c9ce2
  showChrom17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#16) -}
3f92595f4b5565178eb1a2291094d486
  showChrom18 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#17) -}
368ba1420e666c170a26f0f743d86cd2
  showChrom19 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#18) -}
e66b2af04b8965affcae078bda21026a
  showChrom2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#1) -}
07b949f277f970a3a021a838f6bb18e9
  showChrom20 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#19) -}
7e857f33b6c90248a6f935b455abd089
  showChrom21 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#20) -}
543b5a5c744a679994caf99e8757f48b
  showChrom22 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#21) -}
d6319ca522dbb03ace2bd1524651c7c4
  showChrom23 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#22) -}
d5863cffa4013a92f6f196956e07a4a4
  showChrom24 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#23) -}
deb970b01288ada0965525b2c8d592c1
  showChrom25 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#24) -}
a5b63f99c06c8e180a5634e443095098
  showChrom26 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#25) -}
4f400d56fb5041432006c1e812b0929e
  showChrom27 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#26) -}
1ca8398308ac06f254d290cde4f66583
  showChrom28 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#27) -}
e7bc3ec2d340496ecf8d6a5cde58421e
  showChrom29 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#28) -}
26504f207a6407c8fbca69679113570f
  showChrom3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#2) -}
55a0080d94422193b007bbb0e487f32b
  showChrom30 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#29) -}
a519cdaa25985568e192de1e62ba6147
  showChrom31 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#30) -}
d67422f3e82bb84c392d705fac30bb53
  showChrom32 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#31) -}
85cba3f1d75154b4e7d8e9730604091f
  showChrom33 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#32) -}
82bc335c9ac092376b944bc96b494f0e
  showChrom34 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#33) -}
7081184112b177d33357286b1b1e9c01
  showChrom35 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#34) -}
2a2b481791cd7ca93d6861dbcd439e95
  showChrom36 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#35) -}
230835a78121e5fc97de6d79b4e05bd1
  showChrom37 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#36) -}
06843070ea4ad60cbeb2cd3f481a4584
  showChrom38 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#37) -}
6112719065b67fb3802cb81b9aa58c81
  showChrom39 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#38) -}
a44ac6b2ca81adbe3f0ec2f3a24a2bb7
  showChrom4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#3) -}
22f8eaadb573533fa0af977eb9969010
  showChrom40 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#39) -}
428aca884a5a4af6e42ebbd47789e1c9
  showChrom41 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#40) -}
d4040a6928f875168837388673bd3daf
  showChrom42 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#41) -}
1cdd0ea1447348c9bfd10360592d16d3
  showChrom43 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#42) -}
706fe05c25d15cb3baaf8ed31837a392
  showChrom44 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#43) -}
b4f38b92504efb74045673292f7ad959
  showChrom45 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#44) -}
d136d058d8eef7a7a6849444d11bf41a
  showChrom46 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#45) -}
f66440b772541d2f4588251dc27499c8
  showChrom47 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#46) -}
a0d65db474531cc38cc9263c9c568d80
  showChrom48 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#47) -}
555215b0655162ad6af322b855617cc1
  showChrom49 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#48) -}
7a49442021d87e64747cf40054dba498
  showChrom5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#4) -}
fac205cab6ebde8cab811bed0ec6a9a1
  showChrom50 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#49) -}
916c2fb256038d71917cab715f8bdf3b
  showChrom51 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.addtrimtag_addr#2) -}
890543dcac3bb1c91ead91eba0f3a4ea
  showChrom6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#5) -}
7b4c104eaa67b5e23684a9e4ae0d25e6
  showChrom7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#6) -}
0730f98de587c1b216d17330f0fc4293
  showChrom8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#7) -}
c852defe2a9c0d7b52a79f02a1394766
  showChrom9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#8) -}
7355eac106aad441116330f67970190e
  showChrom_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chrM"#) -}
e8dc828d53c21756ad86c8bb61ee9b6a
  showChrom_addr#1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chrY"#) -}
2d5ffe891e0a852a17fad32befcdd64b
  showChrom_addr#10 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr15"#) -}
326bdefd7fea6493420960d3d8639108
  showChrom_addr#11 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr14"#) -}
b573aed676a484536b05a7bb66b2b70e
  showChrom_addr#12 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr13"#) -}
8c2267277d914a7bf6486c7eabc1c45d
  showChrom_addr#13 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr12"#) -}
220d8b617ebe0c99cb8a5070755e41ba
  showChrom_addr#14 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr11"#) -}
24bea13bbe42bba5e17aa2fb7f2f4635
  showChrom_addr#15 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr10"#) -}
c688c2ae03d0d71d42740d1eb1de4346
  showChrom_addr#16 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr9"#) -}
41445d6f81cabf1140c1bb678ec26ec4
  showChrom_addr#17 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr8"#) -}
fba9d94decbf6e517077d50bf490db7c
  showChrom_addr#18 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr7"#) -}
a1b3aa742e79eeacc3809e1bef3c2e73
  showChrom_addr#19 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr6"#) -}
979903c428b591d492651cb1afb93c51
  showChrom_addr#2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chrX"#) -}
9b085fc41a446a7dbc7a22a37a404ebb
  showChrom_addr#20 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr5"#) -}
198f4ed6ca51ec9783c37bad5fc3be59
  showChrom_addr#21 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr4"#) -}
a61168caea484d4aa6b5637b9518608f
  showChrom_addr#22 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr3"#) -}
296dceaaf999d6b8fdabd2a1de4939ad
  showChrom_addr#23 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr2"#) -}
035ae008000abfa8e4a99331058f576d
  showChrom_addr#24 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr1"#) -}
ba21da90954e9a03491bffa23c2528d6
  showChrom_addr#25 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("MT"#) -}
d4a8c90ac7220e10d4d9045cb334da46
  showChrom_addr#26 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Y"#) -}
2b3ed872016e334cc1781f23cf7aa665
  showChrom_addr#27 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("X"#) -}
72681d2991e5fac97de00a1e9a1c9462
  showChrom_addr#28 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("22"#) -}
1280b7f6ee81256e2e9b77b184a4ac5e
  showChrom_addr#29 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("21"#) -}
730584e4741c35dce2d2970aac426ba7
  showChrom_addr#3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr22"#) -}
29cf3da9af2b5514b34e3f644634b5a3
  showChrom_addr#30 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("20"#) -}
4930a73699e1d38b1c32725d219de13b
  showChrom_addr#31 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("19"#) -}
1eb123ba274561604f041e26df058983
  showChrom_addr#32 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("18"#) -}
df90df4394ee3a6b11e182c549a75558
  showChrom_addr#33 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("17"#) -}
39ff40b2c058b9f66d3b847470c54d85
  showChrom_addr#34 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("16"#) -}
c2ce118b1737138666ec3cc26a513266
  showChrom_addr#35 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("15"#) -}
c0210d42fde60e6e14a9baad8b0e0d44
  showChrom_addr#36 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("14"#) -}
149252c0215fde22723698212a595ac2
  showChrom_addr#37 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("13"#) -}
ebe510149ec32bf501716776f4514967
  showChrom_addr#38 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("12"#) -}
de206fef92cb4177822b6f3b84f21727
  showChrom_addr#39 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("11"#) -}
6303156fb807481a3fab7262afcb26d4
  showChrom_addr#4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr21"#) -}
983120ec1e52b8a4c85d200998ef5132
  showChrom_addr#40 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("10"#) -}
649343657d5b02b59dc298acd02c1def
  showChrom_addr#41 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("9"#) -}
732994f4469d7ff8aaaecb30273b1a73
  showChrom_addr#42 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("8"#) -}
cca201dbc5084c5150ffea1e30346c75
  showChrom_addr#43 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("7"#) -}
1e1c083d2f96761ddd70d0c2638f37b5
  showChrom_addr#44 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("6"#) -}
07b5fa109cd1210c8fa6082c000b558d
  showChrom_addr#45 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("5"#) -}
8b0ca183fc6db94bf413b3c1d9cb2b09
  showChrom_addr#46 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("4"#) -}
f8efc0d4b1b5cac945052dd5d6fba45f
  showChrom_addr#47 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("3"#) -}
623a707935ccdadd512de3ff17c00625
  showChrom_addr#48 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("2"#) -}
b1669920c0dd4a4d909ebe2b9c85298d
  showChrom_addr#49 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("1"#) -}
659f3be09915580dad79b61008cb128d
  showChrom_addr#5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr20"#) -}
ae3d53da8119a48d4b6fa66e089daa22
  showChrom_addr#6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr19"#) -}
172ff8dbb45edf3878afedc1b8d429e5
  showChrom_addr#7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr18"#) -}
5d3f13f28b04dc26d6bf388cd9a623c7
  showChrom_addr#8 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr17"#) -}
77c1346ff9385c7826785d6691fa2cd9
  showChrom_addr#9 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr16"#) -}
05373715923c4a137397def71f2f3180
  showcigar ::
    (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
    -> Data.ByteString.Internal.ByteString
  {- Arity: 1, Strictness: <L,U(U,1*U)>,
     Unfolding: (\ (cm :: (GHC.Integer.Type.Integer,
                           Data.ByteString.Internal.ByteString)) ->
                 GHC.Base.mappend
                   @ Data.ByteString.Internal.ByteString
                   Data.ByteString.Internal.$fMonoidByteString
                   (case cm of wild { (,) x ds6 ->
                    case GHC.Show.$w$cshowsPrec4
                           0#
                           x
                           (GHC.Types.[] @ GHC.Types.Char) of ww2 { (#,#) ww3 ww4 ->
                    let {
                      cs :: [GHC.Types.Char] = GHC.Types.: @ GHC.Types.Char ww3 ww4
                    } in
                    case GHC.List.$wlenAcc @ GHC.Types.Char cs 0# of ww { DEFAULT ->
                    Data.ByteString.Internal.$wunsafePackLenChars ww cs } } })
                   (case cm of wild { (,) ds6 y -> y })) -}
c988afeba7aa82a742bb71a8d2681d7e
  skipcolon :: Data.Attoparsec.ByteString.Internal.Parser ()
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.skipcolon_go1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <()>_R)) -}
ef48966e26e3d58b5f0304e06c47af0f
  skipcolon_go1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         ()
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            ()
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wgo6 @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w4 } }) -}
69814aa9d1fbec2649c78c6d1eb24076
  sndInPair :: Lib.SAMFlag -> GHC.Types.Bool
  RecSel Left Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLSLLLL),1*U(A,A,A,A,A,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.SAMFlag) ->
                 case ds6 of wild { Lib.SAMFlag ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds14 }) -}
f5e05b0e20b72951fa52e98787e0d3ad
  spaces ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString [()]
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,A><L,A>,
     Unfolding: InlineRule (0, True, True)
                Lib.spaces1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <[()]>_R)) -}
0075863549e1f138978b6e414e4e5675
  spaces1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [()]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,A><L,A>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [()]
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wspaces @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 } }) -}
8534a0effd06b105f431cc92dd6ad308
  spaces2 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> ()
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 4,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,A> -}
a5e0e4fd16399bc1ec7f6eb53dbbe4df
  starcigarP ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString
      [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.checkCigarSeqlen2
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <[(GHC.Integer.Type.Integer,
                             Data.ByteString.Internal.ByteString)]>_R)) -}
1fc0d837b61ebbaa17edd71f0be30382
  start1 :: Lib.BEDPE -> GHC.Integer.Type.Integer
  RecSel Left Lib.BEDPE
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLL),1*U(A,1*U,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.BEDPE) ->
                 case ds6 of wild { Lib.BEDPE ds7 ds8 ds9 ds10 ds11 ds12 ds13 ->
                 ds8 }) -}
1fc0d837b61ebbaa17edd71f0be30382
  start2 :: Lib.BEDPE -> GHC.Integer.Type.Integer
  RecSel Left Lib.BEDPE
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLL),1*U(A,A,A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.BEDPE) ->
                 case ds6 of wild { Lib.BEDPE ds7 ds8 ds9 ds10 ds11 ds12 ds13 ->
                 ds11 }) -}
eb54c5795cd87d65034c776d841620e0
  strand :: Lib.AlignedRead -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLSLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds23 }) -}
04a4734d00dbc5a8dbaf49356fddfcc4
  sumMatches ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> GHC.Integer.Type.Integer
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (cigs :: [(GHC.Integer.Type.Integer,
                              Data.ByteString.Internal.ByteString)]) ->
                 Lib.getAlignedLength_go cigs Lib.defaultBed2) -}
1051e6636ccdae925f069d75bd47c7ac
  sumRefMatches ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> GHC.Integer.Type.Integer
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (cigs :: [(GHC.Integer.Type.Integer,
                              Data.ByteString.Internal.ByteString)]) ->
                 Lib.getTrimdcigCoordDiff_go cigs Lib.defaultBed2) -}
2f1c7e71fffa49100884e00bc9390406
  sumSeqMatches ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> GHC.Integer.Type.Integer
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (cigs :: [(GHC.Integer.Type.Integer,
                              Data.ByteString.Internal.ByteString)]) ->
                 Lib.getcigseqdiff_go cigs Lib.defaultBed2) -}
b3233571232441612ef3dfb20f3b0ddd
  sumSoftClipCigOps ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> GHC.Types.Int
  {- Arity: 1, Strictness: <S,1*U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: [(GHC.Integer.Type.Integer,
                           Data.ByteString.Internal.ByteString)]) ->
                 case Lib.$wgl (Lib.sumSoftClipCigOps_go w) 0# of ww { DEFAULT ->
                 GHC.Types.I# ww }) -}
8709928afb0839aed461065051b3ca32
  sumSoftClipCigOps_go ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> [Data.ByteString.Internal.ByteString]
  {- Arity: 1, Strictness: <S,1*U> -}
19bda920dbaa96dfcd8c356c7a275a0a
  taketrim ::
    GHC.Integer.Type.Integer
    -> [(GHC.Integer.Type.Integer,
         Data.ByteString.Internal.ByteString)]
    -> [(GHC.Integer.Type.Integer,
         Data.ByteString.Internal.ByteString)]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U>,
     Unfolding: (\ (cnt :: GHC.Integer.Type.Integer)
                   (cs :: [(GHC.Integer.Type.Integer,
                            Data.ByteString.Internal.ByteString)]) ->
                 GHC.List.takeWhile
                   @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                   (\ (x :: (GHC.Integer.Type.Integer,
                             Data.ByteString.Internal.ByteString)) ->
                    case x of wild { (,) x1 ds6 ->
                    case GHC.Integer.Type.leInteger# x1 cnt of wild1 { DEFAULT ->
                    GHC.Prim.tagToEnum# @ GHC.Types.Bool wild1 } })
                   cs) -}
9397824cc9d01cf75666f6f250a9bd4d
  targetbed :: Lib.MidFamily -> Lib.BedRecord
  RecSel Left Lib.MidFamily
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLS),1*U(A,A,A,A,A,A,A,A,A,1*U(U,U,U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MidFamily) ->
                 case ds6 of wild { Lib.MidFamily ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds16 }) -}
eb54c5795cd87d65034c776d841620e0
  tbed :: Lib.AlignedRead -> Lib.BedRecord
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLSL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U,U,U,U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds36 }) -}
eb54c5795cd87d65034c776d841620e0
  tlen :: Lib.AlignedRead -> GHC.Integer.Type.Integer
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLSLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds19 }) -}
621c5a5d15e0cf7428875aef409ac27c
  toBin :: GHC.Types.Int -> GHC.Base.String
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (n :: GHC.Types.Int) ->
                 case Data.Digits.mDigitsRev
                        @ GHC.Types.Int
                        GHC.Real.$fIntegralInt
                        Lib.toBin1
                        n of wild {
                   GHC.Base.Nothing
                   -> case Data.Maybe.fromJust1 ret_ty [GHC.Types.Char] of {}
                   GHC.Base.Just x1
                   -> Lib.toBin_go
                        (GHC.List.reverse1
                           @ GHC.Types.Int
                           x1
                           (GHC.Types.[] @ GHC.Types.Int)) }) -}
83e159df486db1cf25017946bf98e8c9
  toBin1 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 2#) -}
5d467c43a87f934a35defca3ff90e260
  toBinInt :: GHC.Base.String -> GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (n :: GHC.Base.String) ->
                 case Text.Read.readEither8
                        @ GHC.Types.Int
                        (Text.ParserCombinators.ReadP.run
                           @ GHC.Types.Int
                           Lib.toBinInt3
                           n) of wild {
                   [] -> Lib.toBinInt2
                   : x ds6
                   -> case ds6 of wild1 { [] -> x : ipv ipv1 -> Lib.toBinInt1 } }) -}
5705b58c638177fbcc73ab63b1672b0f
  toBinInt1 :: GHC.Types.Int
  {- Strictness: x -}
c964a3e4c04bd906a0b3f2dd21c71872
  toBinInt2 :: GHC.Types.Int
  {- Strictness: x -}
5336fbe51f3112ddf0bd19bf7653f19b
  toBinInt3 :: Text.ParserCombinators.ReadP.P GHC.Types.Int
  {- Unfolding: (GHC.Read.$fReadInt_$sreadNumber
                   GHC.Read.$fReadInt2
                   Text.ParserCombinators.ReadPrec.minPrec
                   @ GHC.Types.Int
                   (Text.Read.readEither7 @ GHC.Types.Int)) -}
90ec76b61a83b886b71c076041f445eb
  toBin_go :: [GHC.Types.Int] -> [GHC.Types.Char]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
181611a838627911c5809d461ee6d89f
  trimPairedAlns :: Lib.PairedAln -> Lib.PairedAln
  {- Arity: 1,
     Strictness: <L,U(1*U(U,U(U),U,U,U,U,U(U,U,U,U),A,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),1*U(U,U(U),U,U,U,U,U(U,U,U,U),A,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),1*U,1*U)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.PairedAln) ->
                 Lib.PairedAln
                   (case w of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                    Lib.trimalignment ds6 })
                   (case w of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                    Lib.trimalignment ds7 })
                   (case w of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                    GHC.Base.map
                      @ Lib.AlignedRead
                      @ Lib.AlignedRead
                      Lib.trimalignment
                      ds8 })
                   (case w of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                    GHC.Base.map
                      @ Lib.AlignedRead
                      @ Lib.AlignedRead
                      Lib.trimalignment
                      ds9 })) -}
5b10e11a06d5280f505a26f6d285f96b
  trimalignment :: Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 1,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLSLLLLLLLLLLL),1*U(U,U(U),U,U,U,U,U(U,U,U,U),A,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Unfolding: (\ (a :: Lib.AlignedRead) ->
                 case a of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 let {
                   mapdaln :: GHC.Types.Bool
                   = case ds7 of wild1 { GHC.Types.I# x# ->
                     case GHC.Prim.andI# x# 4# of wild2 {
                       DEFAULT -> GHC.Types.False 0# -> GHC.Types.True } }
                 } in
                 let {
                   $j :: Lib.AlignedRead <join 0>
                   = let {
                       $j1 :: Lib.AlignedRead <join 0>
                       = let {
                           $j2 :: Lib.AlignedRead <join 0>
                           = case GHC.Classes.$fEq[]_$c==
                                    @ Lib.BedRecord
                                    Lib.$fEqBedRecord
                                    ds25
                                    (GHC.Types.[] @ Lib.BedRecord) of wild1 {
                               GHC.Types.False
                               -> Lib.AlignedRead
                                    ds6
                                    ds7
                                    ds8
                                    ds9
                                    ds10
                                    ds11
                                    ds12
                                    ds12
                                    ds14
                                    ds15
                                    ds16
                                    ds17
                                    ds18
                                    ds19
                                    ds20
                                    ds21
                                    ds22
                                    ds23
                                    ds24
                                    ds25
                                    ds26
                                    ds27
                                    ds28
                                    ds29
                                    ds30
                                    ds31
                                    ds32
                                    ds33
                                    ds34
                                    ds35
                                    ds36
                               GHC.Types.True
                               -> case GHC.Classes.$fEq[]_$c==
                                         @ Lib.BedRecord
                                         Lib.$fEqBedRecord
                                         ds26
                                         (GHC.Types.[] @ Lib.BedRecord) of wild2 { DEFAULT ->
                                  Lib.AlignedRead
                                    ds6
                                    ds7
                                    ds8
                                    ds9
                                    ds10
                                    ds11
                                    ds12
                                    ds12
                                    ds14
                                    ds15
                                    ds16
                                    ds17
                                    ds18
                                    ds19
                                    ds20
                                    ds21
                                    ds22
                                    ds23
                                    ds24
                                    ds25
                                    ds26
                                    ds27
                                    ds28
                                    ds29
                                    ds30
                                    ds31
                                    ds32
                                    ds33
                                    ds34
                                    ds35
                                    ds36 } }
                         } in
                         case GHC.Classes.$fEq[]_$c==
                                @ Lib.BedRecord
                                Lib.$fEqBedRecord
                                ds25
                                (GHC.Types.[] @ Lib.BedRecord) of wild1 {
                           GHC.Types.False -> $j2
                           GHC.Types.True
                           -> case GHC.Classes.$fEq[]_$c==
                                     @ Lib.BedRecord
                                     Lib.$fEqBedRecord
                                     ds26
                                     (GHC.Types.[] @ Lib.BedRecord) of wild2 {
                                GHC.Types.False
                                -> case mapdaln of wild3 {
                                     GHC.Types.False -> $j2 GHC.Types.True -> Lib.trimrev wild }
                                GHC.Types.True -> $j2 } }
                     } in
                     case GHC.Classes.$fEq[]_$c==
                            @ Lib.BedRecord
                            Lib.$fEqBedRecord
                            ds25
                            (GHC.Types.[] @ Lib.BedRecord) of wild1 {
                       GHC.Types.False
                       -> case GHC.Classes.$fEq[]_$c==
                                 @ Lib.BedRecord
                                 Lib.$fEqBedRecord
                                 ds26
                                 (GHC.Types.[] @ Lib.BedRecord) of wild2 {
                            GHC.Types.False -> $j1
                            GHC.Types.True
                            -> case mapdaln of wild3 {
                                 GHC.Types.False -> $j1 GHC.Types.True -> Lib.trimfwd wild } }
                       GHC.Types.True -> $j1 }
                 } in
                 case GHC.Classes.$fEq[]_$c==
                        @ Lib.BedRecord
                        Lib.$fEqBedRecord
                        ds25
                        (GHC.Types.[] @ Lib.BedRecord) of wild1 {
                   GHC.Types.False
                   -> case GHC.Classes.$fEq[]_$c==
                             @ Lib.BedRecord
                             Lib.$fEqBedRecord
                             ds26
                             (GHC.Types.[] @ Lib.BedRecord) of wild2 {
                        GHC.Types.False
                        -> case mapdaln of wild3 {
                             GHC.Types.False -> $j GHC.Types.True -> Lib.trimboth wild }
                        GHC.Types.True -> $j }
                   GHC.Types.True -> $j } }) -}
88a8cb66468765c3959cbc14cdcca64c
  trimboth :: Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 1,
     Strictness: <S,1*U(U,U,U,U,U,U,U(U,U,U,U),A,U,A,U,U,U,U,U,U,U,U,U,U,U,U,A,A,A,U,U,U,U,U,A)>,
     Unfolding: (\ (a :: Lib.AlignedRead) ->
                 case a of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 let {
                   newendpos :: GHC.Integer.Type.Integer
                   = case ds26 of wild1 {
                       [] -> case GHC.List.badHead ret_ty GHC.Integer.Type.Integer of {}
                       : x ds37
                       -> case x of wild2 { Lib.BedRecord ds38 ds39 ds40 ds41 -> ds39 } }
                 } in
                 let {
                   rdiff :: GHC.Integer.Type.Integer
                   = GHC.Integer.Type.minusInteger ds10 newendpos
                 } in
                 let {
                   tendpos :: GHC.Integer.Type.Integer
                   = case GHC.Integer.Type.ltInteger#
                            rdiff
                            Lib.defaultBed2 of wild1 { DEFAULT ->
                     case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild1 of wild2 {
                       GHC.Types.False -> newendpos GHC.Types.True -> ds10 } }
                 } in
                 let {
                   newpos :: GHC.Integer.Type.Integer
                   = case ds25 of wild1 {
                       [] -> case GHC.List.badHead ret_ty GHC.Integer.Type.Integer of {}
                       : x ds37
                       -> case x of wild2 { Lib.BedRecord ds38 ds39 ds40 ds41 -> ds40 } }
                 } in
                 let {
                   fdiff :: GHC.Integer.Type.Integer
                   = GHC.Integer.Type.minusInteger newpos ds9
                 } in
                 let {
                   newcig :: Data.ByteString.Internal.ByteString
                   = case ds12 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                     Lib.$wupdateCigB fdiff rdiff ww1 ww2 ww3 ww4 }
                 } in
                 let {
                   tpos :: GHC.Integer.Type.Integer
                   = case GHC.Integer.Type.ltInteger#
                            fdiff
                            Lib.defaultBed2 of wild1 { DEFAULT ->
                     case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild1 of wild2 {
                       GHC.Types.False -> newpos GHC.Types.True -> ds9 } }
                 } in
                 Lib.AlignedRead
                   ds6
                   ds7
                   ds8
                   ds9
                   ds10
                   ds11
                   ds12
                   newcig
                   ds14
                   (case newcig of wild1 { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                    case Lib.$wparseCigar
                           @ [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                           dt
                           dt1
                           dt2
                           dt3
                           dt3
                           0#
                           0#
                           Data.Attoparsec.Internal.Types.Complete
                           (Data.Attoparsec.ByteString.Internal.failK
                              @ [(GHC.Integer.Type.Integer,
                                  Data.ByteString.Internal.ByteString)])
                             `cast`
                           (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                            ->_R <Data.Attoparsec.Internal.Types.Pos
                                  -> Data.Attoparsec.Internal.Types.More
                                  -> [GHC.Base.String]
                                  -> GHC.Base.String
                                  -> Data.Attoparsec.Internal.Types.IResult
                                       Data.ByteString.Internal.ByteString
                                       [(GHC.Integer.Type.Integer,
                                         Data.ByteString.Internal.ByteString)]>_R)
                           (Data.Attoparsec.ByteString.Internal.successK
                              @ [(GHC.Integer.Type.Integer,
                                  Data.ByteString.Internal.ByteString)])
                             `cast`
                           (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                            ->_R <Data.Attoparsec.Internal.Types.Pos
                                  -> Data.Attoparsec.Internal.Types.More
                                  -> [(GHC.Integer.Type.Integer,
                                       Data.ByteString.Internal.ByteString)]
                                  -> Data.Attoparsec.Internal.Types.IResult
                                       Data.ByteString.Internal.ByteString
                                       [(GHC.Integer.Type.Integer,
                                         Data.ByteString.Internal.ByteString)]>_R) of wild2 {
                      Data.Attoparsec.Internal.Types.Fail ds37 ds38 err
                      -> case ds38 of wild3 { DEFAULT ->
                         GHC.List.badHead
                           @ [(GHC.Integer.Type.Integer,
                               Data.ByteString.Internal.ByteString)] }
                      Data.Attoparsec.Internal.Types.Partial ipv
                      -> case Lib.checkCigarSeqlen1 ret_ty Lib.CigarMap of {}
                      Data.Attoparsec.Internal.Types.Done ds37 a1 -> a1 } })
                   ds16
                   ds17
                   ds18
                   ds19
                   ds20
                   ds21
                   ds22
                   ds23
                   ds24
                   ds25
                   ds26
                   ds27
                   (case GHC.Integer.Type.neqInteger# ds9 tpos of wild1 { DEFAULT ->
                    case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild1 of wild2 {
                      GHC.Types.False -> GHC.Integer.Type.neqInteger ds10 tendpos
                      GHC.Types.True -> GHC.Types.True } })
                   tpos
                   tendpos
                   ds31
                   ds32
                   ds33
                   ds34
                   ds35
                   (Lib.boolZeroLengthCigar newcig) }) -}
eb54c5795cd87d65034c776d841620e0
  trimdToZeroLength :: Lib.AlignedRead -> GHC.Types.Bool
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLS),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds37 }) -}
eb54c5795cd87d65034c776d841620e0
  trimdcigar ::
    Lib.AlignedRead -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLSLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds14 }) -}
eb54c5795cd87d65034c776d841620e0
  trimdcigmap :: Lib.AlignedRead -> Lib.CigarMap
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLSLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds16 }) -}
eb54c5795cd87d65034c776d841620e0
  trimdendpos :: Lib.AlignedRead -> GHC.Integer.Type.Integer
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLSLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds31 }) -}
eb54c5795cd87d65034c776d841620e0
  trimdflag :: Lib.AlignedRead -> GHC.Types.Bool
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLSLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds29 }) -}
eb54c5795cd87d65034c776d841620e0
  trimdpos :: Lib.AlignedRead -> GHC.Integer.Type.Integer
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLSLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds30 }) -}
035a78da6894070c4e44dc917a986b35
  trimfwd :: Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 1,
     Strictness: <S,1*U(U,U,U,U,U,U,U(U,U,U,U),A,U,A,U,U,U,U,U,U,U,U,U,U,U,U,A,A,U,U,U,U,U,U,A)>,
     Unfolding: (\ (a :: Lib.AlignedRead) ->
                 case a of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 let {
                   newpos :: GHC.Integer.Type.Integer
                   = case ds25 of wild1 {
                       [] -> case GHC.List.badHead ret_ty GHC.Integer.Type.Integer of {}
                       : x ds37
                       -> case x of wild2 { Lib.BedRecord ds38 ds39 ds40 ds41 -> ds40 } }
                 } in
                 let {
                   fdiff :: GHC.Integer.Type.Integer
                   = GHC.Integer.Type.minusInteger newpos ds9
                 } in
                 let {
                   newcig :: Data.ByteString.Internal.ByteString
                   = case ds12 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                     Lib.$wupdateCigF fdiff ww1 ww2 ww3 ww4 }
                 } in
                 let {
                   tpos :: GHC.Integer.Type.Integer
                   = case GHC.Integer.Type.ltInteger#
                            fdiff
                            Lib.defaultBed2 of wild1 { DEFAULT ->
                     case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild1 of wild2 {
                       GHC.Types.False -> newpos GHC.Types.True -> ds9 } }
                 } in
                 Lib.AlignedRead
                   ds6
                   ds7
                   ds8
                   ds9
                   ds10
                   ds11
                   ds12
                   newcig
                   ds14
                   (case newcig of wild1 { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                    case Lib.$wparseCigar
                           @ [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                           dt
                           dt1
                           dt2
                           dt3
                           dt3
                           0#
                           0#
                           Data.Attoparsec.Internal.Types.Complete
                           (Data.Attoparsec.ByteString.Internal.failK
                              @ [(GHC.Integer.Type.Integer,
                                  Data.ByteString.Internal.ByteString)])
                             `cast`
                           (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                            ->_R <Data.Attoparsec.Internal.Types.Pos
                                  -> Data.Attoparsec.Internal.Types.More
                                  -> [GHC.Base.String]
                                  -> GHC.Base.String
                                  -> Data.Attoparsec.Internal.Types.IResult
                                       Data.ByteString.Internal.ByteString
                                       [(GHC.Integer.Type.Integer,
                                         Data.ByteString.Internal.ByteString)]>_R)
                           (Data.Attoparsec.ByteString.Internal.successK
                              @ [(GHC.Integer.Type.Integer,
                                  Data.ByteString.Internal.ByteString)])
                             `cast`
                           (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                            ->_R <Data.Attoparsec.Internal.Types.Pos
                                  -> Data.Attoparsec.Internal.Types.More
                                  -> [(GHC.Integer.Type.Integer,
                                       Data.ByteString.Internal.ByteString)]
                                  -> Data.Attoparsec.Internal.Types.IResult
                                       Data.ByteString.Internal.ByteString
                                       [(GHC.Integer.Type.Integer,
                                         Data.ByteString.Internal.ByteString)]>_R) of wild2 {
                      Data.Attoparsec.Internal.Types.Fail ds37 ds38 err
                      -> case ds38 of wild3 { DEFAULT ->
                         GHC.List.badHead
                           @ [(GHC.Integer.Type.Integer,
                               Data.ByteString.Internal.ByteString)] }
                      Data.Attoparsec.Internal.Types.Partial ipv
                      -> case Lib.checkCigarSeqlen1 ret_ty Lib.CigarMap of {}
                      Data.Attoparsec.Internal.Types.Done ds37 a1 -> a1 } })
                   ds16
                   ds17
                   ds18
                   ds19
                   ds20
                   ds21
                   ds22
                   ds23
                   ds24
                   ds25
                   ds26
                   ds27
                   (case GHC.Integer.Type.neqInteger# ds9 tpos of wild1 { DEFAULT ->
                    GHC.Prim.tagToEnum# @ GHC.Types.Bool wild1 })
                   tpos
                   ds30
                   ds31
                   ds32
                   ds33
                   ds34
                   ds35
                   (Lib.boolZeroLengthCigar newcig) }) -}
ceb4d0ea9cbcc5b1524e546fcc802235
  trimmedPct :: Lib.RunStats -> GHC.Types.Double
  RecSel Left Lib.RunStats
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSL),1*U(A,A,A,A,1*U(U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.RunStats) ->
                 case ds6 of wild { Lib.RunStats ds7 ds8 ds9 ds10 ds11 ds12 ->
                 ds11 }) -}
f77fd69ea2f4e292668660a4e42f56a7
  trimprimerPairsE ::
    Lib.CMap -> Lib.CMap -> Lib.PairedAln -> Lib.PairedAln
  {- Arity: 3,
     Strictness: <L,U><L,U><L,1*U(1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,A,A,A,U,U,U,U,U,U,U,U,U),1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,A,A,A,U,U,U,U,U,U,U,U,U),1*U,1*U)>m,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Lib.CMap) (w1 :: Lib.CMap) (w2 :: Lib.PairedAln) ->
                 case Lib.$wtrimprimerPairsE
                        w
                        w1
                        w2 of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 Lib.PairedAln ww1 ww2 ww3 ww4 }) -}
bb0cb705133f8e962c37385d2896323b
  trimprimersE ::
    Lib.CMap -> Lib.CMap -> Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 3,
     Strictness: <L,1*U><L,1*U><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,A,A,A,U,U,U,U,U,U,U,U,U)>,
     Unfolding: InlineRule (3, True, False)
                (\ (fmap :: Lib.CMap) (rmap :: Lib.CMap) (a :: Lib.AlignedRead) ->
                 Lib.trimalignment (Lib.addprimerints fmap rmap a)) -}
543dc12a263fddb9c75b1b896b0a4ad4
  trimrem ::
    GHC.Integer.Type.Integer
    -> [(GHC.Integer.Type.Integer,
         Data.ByteString.Internal.ByteString)]
    -> [(GHC.Integer.Type.Integer,
         Data.ByteString.Internal.ByteString)]
  {- Arity: 2, Strictness: <L,U><S,1*U>,
     Unfolding: (\ (cnt :: GHC.Integer.Type.Integer)
                   (cs :: [(GHC.Integer.Type.Integer,
                            Data.ByteString.Internal.ByteString)]) ->
                 let {
                   rem :: [(GHC.Integer.Type.Integer,
                            Data.ByteString.Internal.ByteString)]
                   = GHC.List.dropWhile
                       @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                       (\ (x :: (GHC.Integer.Type.Integer,
                                 Data.ByteString.Internal.ByteString)) ->
                        case x of wild { (,) x1 ds6 ->
                        case GHC.Integer.Type.leInteger# x1 cnt of wild1 { DEFAULT ->
                        GHC.Prim.tagToEnum# @ GHC.Types.Bool wild1 } })
                       cs
                 } in
                 case GHC.List.$wlenAcc
                        @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                        rem
                        0# of ww2 {
                   DEFAULT
                   -> case rem of wild {
                        []
                        -> case GHC.List.badHead
                           ret_ty [(GHC.Integer.Type.Integer,
                                    Data.ByteString.Internal.ByteString)]
                           of {}
                        : x ds6
                        -> case x of wild1 { (,) ds7 y ->
                           case y of wild2 { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                           case Lib.countDs2 of wild3 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim./=# dt3 dt7) of wild4 {
                             GHC.Types.False
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.eqAddr# dt dt4) of wild5 {
                                  GHC.Types.False
                                  -> case Data.ByteString.Internal.$wcompareBytes
                                            dt
                                            dt1
                                            dt2
                                            dt3
                                            dt4
                                            dt5
                                            dt6
                                            dt7 of wild6 {
                                       DEFAULT -> wild GHC.Types.EQ -> ds6 }
                                  GHC.Types.True
                                  -> case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.==# dt2 dt6) of wild6 {
                                       GHC.Types.False
                                       -> case Data.ByteString.Internal.$wcompareBytes
                                                 dt
                                                 dt1
                                                 dt2
                                                 dt3
                                                 dt4
                                                 dt5
                                                 dt6
                                                 dt7 of wild7 {
                                            DEFAULT -> wild GHC.Types.EQ -> ds6 }
                                       GHC.Types.True -> ds6 } }
                             GHC.Types.True -> wild } } } } }
                   0#
                   -> GHC.Types.[]
                        @ (GHC.Integer.Type.Integer,
                           Data.ByteString.Internal.ByteString) }) -}
ef0d47ff5745e132a821c933bf86adbe
  trimrev :: Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 1,
     Strictness: <S,1*U(U,U,U,U,U,U,U(U,U,U,U),A,U,A,U,U,U,U,U,U,U,U,U,U,U,U,A,U,A,U,U,U,U,U,A)>,
     Unfolding: (\ (a :: Lib.AlignedRead) ->
                 case a of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 let {
                   newendpos :: GHC.Integer.Type.Integer
                   = case ds26 of wild1 {
                       [] -> case GHC.List.badHead ret_ty GHC.Integer.Type.Integer of {}
                       : x ds37
                       -> case x of wild2 { Lib.BedRecord ds38 ds39 ds40 ds41 -> ds39 } }
                 } in
                 let {
                   rdiff :: GHC.Integer.Type.Integer
                   = GHC.Integer.Type.minusInteger ds10 newendpos
                 } in
                 let {
                   newcig :: Data.ByteString.Internal.ByteString
                   = case ds12 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                     Lib.$wupdateCigR rdiff ww1 ww2 ww3 ww4 }
                 } in
                 let {
                   tendpos :: GHC.Integer.Type.Integer
                   = case GHC.Integer.Type.ltInteger#
                            rdiff
                            Lib.defaultBed2 of wild1 { DEFAULT ->
                     case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild1 of wild2 {
                       GHC.Types.False -> newendpos GHC.Types.True -> ds10 } }
                 } in
                 Lib.AlignedRead
                   ds6
                   ds7
                   ds8
                   ds9
                   ds10
                   ds11
                   ds12
                   newcig
                   ds14
                   (case newcig of wild1 { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                    case Lib.$wparseCigar
                           @ [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                           dt
                           dt1
                           dt2
                           dt3
                           dt3
                           0#
                           0#
                           Data.Attoparsec.Internal.Types.Complete
                           (Data.Attoparsec.ByteString.Internal.failK
                              @ [(GHC.Integer.Type.Integer,
                                  Data.ByteString.Internal.ByteString)])
                             `cast`
                           (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                            ->_R <Data.Attoparsec.Internal.Types.Pos
                                  -> Data.Attoparsec.Internal.Types.More
                                  -> [GHC.Base.String]
                                  -> GHC.Base.String
                                  -> Data.Attoparsec.Internal.Types.IResult
                                       Data.ByteString.Internal.ByteString
                                       [(GHC.Integer.Type.Integer,
                                         Data.ByteString.Internal.ByteString)]>_R)
                           (Data.Attoparsec.ByteString.Internal.successK
                              @ [(GHC.Integer.Type.Integer,
                                  Data.ByteString.Internal.ByteString)])
                             `cast`
                           (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                            ->_R <Data.Attoparsec.Internal.Types.Pos
                                  -> Data.Attoparsec.Internal.Types.More
                                  -> [(GHC.Integer.Type.Integer,
                                       Data.ByteString.Internal.ByteString)]
                                  -> Data.Attoparsec.Internal.Types.IResult
                                       Data.ByteString.Internal.ByteString
                                       [(GHC.Integer.Type.Integer,
                                         Data.ByteString.Internal.ByteString)]>_R) of wild2 {
                      Data.Attoparsec.Internal.Types.Fail ds37 ds38 err
                      -> case ds38 of wild3 { DEFAULT ->
                         GHC.List.badHead
                           @ [(GHC.Integer.Type.Integer,
                               Data.ByteString.Internal.ByteString)] }
                      Data.Attoparsec.Internal.Types.Partial ipv
                      -> case Lib.checkCigarSeqlen1 ret_ty Lib.CigarMap of {}
                      Data.Attoparsec.Internal.Types.Done ds37 a1 -> a1 } })
                   ds16
                   ds17
                   ds18
                   ds19
                   ds20
                   ds21
                   ds22
                   ds23
                   ds24
                   ds25
                   ds26
                   ds27
                   (case GHC.Integer.Type.neqInteger#
                           ds10
                           tendpos of wild1 { DEFAULT ->
                    GHC.Prim.tagToEnum# @ GHC.Types.Bool wild1 })
                   ds29
                   tendpos
                   ds31
                   ds32
                   ds33
                   ds34
                   ds35
                   (Lib.boolZeroLengthCigar newcig) }) -}
9397824cc9d01cf75666f6f250a9bd4d
  txposedcount :: Lib.MidFamily -> GHC.Integer.Type.Integer
  RecSel Left Lib.MidFamily
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLSLLL),1*U(A,A,A,A,A,A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MidFamily) ->
                 case ds6 of wild { Lib.MidFamily ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds13 }) -}
e43a2fe5a2d59d92a8f389671cd356dd
  txtfieldp ::
    Data.Attoparsec.ByteString.Internal.Parser
      Data.ByteString.Internal.ByteString
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.optfieldsp5
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)) -}
9c671b40108670ef9d1ca67579e4c5d6
  uchrparser :: Data.Attoparsec.ByteString.Internal.Parser Lib.UChr
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.uchrparser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <Lib.UChr>_R)) -}
bf7fd83a3f2771e994bcb42251c5ec67
  uchrparser1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.UChr
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.UChr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wuchrparser @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
639cfc5b8cf4b668992717cb958df42c
  updateCigB ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
  {- Arity: 3, Strictness: <L,U><L,U><S(SLSS),1*U(U,U,U,U)>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Integer.Type.Integer)
                   (w1 :: GHC.Integer.Type.Integer)
                   (w2 :: Data.ByteString.Internal.ByteString) ->
                 case w2 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wupdateCigB w w1 ww1 ww2 ww3 ww4 }) -}
f62366c1ebdfee4dd2e9e6f8a16d3bd2
  updateCigF ::
    GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
  {- Arity: 2, Strictness: <L,U><S(SLSS),1*U(U,U,U,U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Integer.Type.Integer)
                   (w1 :: Data.ByteString.Internal.ByteString) ->
                 case w1 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wupdateCigF w ww1 ww2 ww3 ww4 }) -}
d7b512fe506fcaac4f655103848d4c65
  updateCigR ::
    GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
  {- Arity: 2, Strictness: <L,U><S(SLSS),1*U(U,U,U,U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Integer.Type.Integer)
                   (w1 :: Data.ByteString.Internal.ByteString) ->
                 case w1 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wupdateCigR w ww1 ww2 ww3 ww4 }) -}
a43020908542648f91fb9bd31285c05e
  updatePairedAlnTrimdFields :: Lib.PairedAln -> Lib.PairedAln
  {- Arity: 1,
     Strictness: <L,U(1*U(U,U(U),U,U,U,U,U,U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),1*U(U,U(U),U,U,U,U,U,U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),1*U,1*U)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.PairedAln) ->
                 Lib.PairedAln
                   (case w of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                    Lib.updateTrimdAlnFields ds6 })
                   (case w of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                    Lib.updateTrimdAlnFields ds7 })
                   (case w of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                    GHC.Base.map
                      @ Lib.AlignedRead
                      @ Lib.AlignedRead
                      Lib.updateTrimdAlnFields
                      ds8 })
                   (case w of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                    GHC.Base.map
                      @ Lib.AlignedRead
                      @ Lib.AlignedRead
                      Lib.updateTrimdAlnFields
                      ds9 })) -}
512750a755aad567888061f53ed58e64
  updateR1nextfields :: Lib.PairedAln -> Lib.PairedAln
  {- Arity: 1,
     Strictness: <S,1*U(U,U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.PairedAln) ->
                 case w of ww { Lib.PairedAln ww1 ww2 ww3 ww4 ->
                 let {
                   ds6 :: (Lib.AlignedRead, [Lib.AlignedRead])
                   = let {
                       trimdposR2 :: GHC.Integer.Type.Integer
                       = case ww2 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                         ds30 }
                     } in
                     case GHC.Base.map
                            @ Lib.AlignedRead
                            @ Lib.AlignedRead
                            (\ (x :: Lib.AlignedRead) ->
                             case x of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                             Lib.AlignedRead
                               ds7
                               ds8
                               ds9
                               ds10
                               ds11
                               ds12
                               ds13
                               ds14
                               ds15
                               ds16
                               ds17
                               trimdposR2
                               ds19
                               ds20
                               ds21
                               ds22
                               ds23
                               ds24
                               ds25
                               ds26
                               ds27
                               ds28
                               ds29
                               ds30
                               ds31
                               ds32
                               ds33
                               ds34
                               ds35
                               ds36
                               ds37 })
                            (GHC.Types.: @ Lib.AlignedRead ww1 ww3) of wild {
                       [] -> Lib.updateTrimdPairFields2
                       : newpr1 newsecr1s -> (newpr1, newsecr1s) }
                 } in
                 Lib.PairedAln
                   (case ds6 of ds7 { (,) newpr1 newsecr1s -> newpr1 })
                   ww2
                   (case ds6 of ds7 { (,) newpr1 newsecr1s -> newsecr1s })
                   ww4 }) -}
30dd720ce063ddfc3765a0c6c81824a7
  updateR2nextfields :: Lib.PairedAln -> Lib.PairedAln
  {- Arity: 1,
     Strictness: <S,1*U(U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U,U)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.PairedAln) ->
                 case w of ww { Lib.PairedAln ww1 ww2 ww3 ww4 ->
                 let {
                   ds6 :: (Lib.AlignedRead, [Lib.AlignedRead])
                   = let {
                       trimdposR1 :: GHC.Integer.Type.Integer
                       = case ww1 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                         ds30 }
                     } in
                     case GHC.Base.map
                            @ Lib.AlignedRead
                            @ Lib.AlignedRead
                            (\ (x :: Lib.AlignedRead) ->
                             case x of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                             Lib.AlignedRead
                               ds7
                               ds8
                               ds9
                               ds10
                               ds11
                               ds12
                               ds13
                               ds14
                               ds15
                               ds16
                               ds17
                               trimdposR1
                               ds19
                               ds20
                               ds21
                               ds22
                               ds23
                               ds24
                               ds25
                               ds26
                               ds27
                               ds28
                               ds29
                               ds30
                               ds31
                               ds32
                               ds33
                               ds34
                               ds35
                               ds36
                               ds37 })
                            (GHC.Types.: @ Lib.AlignedRead ww2 ww4) of wild {
                       [] -> Lib.updateTrimdPairFields1
                       : newpr2 newsecr2s -> (newpr2, newsecr2s) }
                 } in
                 Lib.PairedAln
                   ww1
                   (case ds6 of ds7 { (,) newpr2 newsecr2s -> newpr2 })
                   ww3
                   (case ds6 of ds7 { (,) newpr2 newsecr2s -> newsecr2s }) }) -}
342c4f3f38b3477f319d432d8c62941c
  updateTrimdAlnFields :: Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 1,
     Strictness: <S(LLLLLLLS(SLSS)LLLLLLLLLLLLLLLLLLLLLLL),1*U(U,U(U),U,U,U,U,U,U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Unfolding: (\ (a :: Lib.AlignedRead) ->
                 case a of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 case ds13 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 let {
                   $j :: Lib.AlignedRead <join 0>
                   = Lib.AlignedRead
                       ds6
                       ds7
                       ds8
                       ds9
                       ds10
                       ds11
                       ds12
                       ww
                       ds14
                       ds15
                       ds16
                       ds17
                       ds18
                       ds19
                       ds20
                       (Data.ByteString.concat
                          (GHC.Types.:
                             @ Data.ByteString.Internal.ByteString
                             ds21
                             Lib.addtrimtag1))
                       ds22
                       ds23
                       ds24
                       ds25
                       ds26
                       ds27
                       ds28
                       ds29
                       ds30
                       ds31
                       ds32
                       ds33
                       ds34
                       ds35
                       ds36
                 } in
                 let {
                   $j1 :: Lib.AlignedRead <join 0>
                   = case ds28 of wild1 {
                       GHC.Types.False -> wild
                       GHC.Types.True
                       -> Lib.AlignedRead
                            ds6
                            (Lib.setZeroLengthAlnFlag ds7)
                            Lib.NONE
                            ds9
                            ds10
                            Lib.defaultBed2
                            ds12
                            Lib.addtrimtag5
                            ds14
                            ds15
                            ds16
                            ds17
                            ds18
                            ds19
                            ds20
                            (Data.ByteString.concat
                               (GHC.Types.:
                                  @ Data.ByteString.Internal.ByteString
                                  ds21
                                  Lib.addtrimtag6))
                            ds22
                            ds23
                            GHC.Types.False
                            ds25
                            ds26
                            ds27
                            GHC.Types.True
                            Lib.updateTrimdAlnFields1
                            Lib.defaultBed2
                            ds31
                            ds32
                            ds33
                            ds34
                            ds35
                            ds36 }
                 } in
                 letrec {
                   go20 :: [GHC.Types.Char] -> Lib.AlignedRead
                     <join 1> {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds37 :: [GHC.Types.Char]) ->
                     case ds37 of wild1 {
                       [] -> $j1
                       : y ys
                       -> case GHC.List.elem
                                 @ GHC.Types.Char
                                 GHC.Classes.$fEqChar
                                 y
                                 Lib.clearNonRealCigar1 of wild2 {
                            GHC.Types.False -> go20 ys GHC.Types.True -> $j } }
                 } in
                 go20
                   (Data.ByteString.Internal.$wunpackAppendCharsLazy
                      ww1
                      ww2
                      ww3
                      ww4
                      (GHC.Types.[] @ GHC.Types.Char)) } }) -}
9a794c85784dcf92244d33b358707fc5
  updateTrimdAlnFields1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (-1) -}
1b8cc54bd31b8eb664a161de17cedc5a
  updateTrimdPairFields :: Lib.PairedAln -> Lib.PairedAln
  {- Arity: 1,
     Strictness: <S(S(LLLLLLLLLLLLLLLLLLLLLLSLLLLLLLL)LLL),1*U(U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)>m,
     Unfolding: (\ (pa :: Lib.PairedAln) ->
                 case pa of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                 case ds6 of wild1 { Lib.AlignedRead ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ->
                 let {
                   $j :: Lib.PairedAln <join 0> {- Strictness: m -}
                   = case ds32 of wild2 {
                       GHC.Types.False
                       -> case ds7 of wild3 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                          case ds63 of wild4 {
                            GHC.Types.False -> wild
                            GHC.Types.True
                            -> let {
                                 ds72 :: (Lib.AlignedRead, [Lib.AlignedRead])
                                 = case GHC.Base.map
                                          @ Lib.AlignedRead
                                          @ Lib.AlignedRead
                                          (\ (x :: Lib.AlignedRead) ->
                                           case x of wild5 { Lib.AlignedRead ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ds90 ds91 ds92 ds93 ds94 ds95 ds96 ds97 ds98 ds99 ds100 ds101 ds102 ds103 ->
                                           Lib.AlignedRead
                                             ds73
                                             ds74
                                             ds75
                                             ds76
                                             ds77
                                             ds78
                                             ds79
                                             ds80
                                             ds81
                                             ds82
                                             ds83
                                             ds64
                                             ds85
                                             ds86
                                             ds87
                                             ds88
                                             ds89
                                             ds90
                                             ds91
                                             ds92
                                             ds93
                                             ds94
                                             ds95
                                             ds96
                                             ds97
                                             ds98
                                             ds99
                                             ds100
                                             ds101
                                             ds102
                                             ds103 })
                                          (GHC.Types.: @ Lib.AlignedRead wild1 ds8) of wild5 {
                                     [] -> Lib.updateTrimdPairFields2
                                     : newpr1 newsecr1s -> (newpr1, newsecr1s) }
                               } in
                               Lib.PairedAln
                                 (case ds72 of ds73 { (,) newpr1 newsecr1s -> newpr1 })
                                 wild3
                                 (case ds72 of ds73 { (,) newpr1 newsecr1s -> newsecr1s })
                                 ds9 } }
                       GHC.Types.True
                       -> let {
                            ds41 :: (Lib.AlignedRead, [Lib.AlignedRead])
                            = case GHC.Base.map
                                     @ Lib.AlignedRead
                                     @ Lib.AlignedRead
                                     (\ (x :: Lib.AlignedRead) ->
                                      case x of wild3 { Lib.AlignedRead ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ->
                                      Lib.AlignedRead
                                        ds42
                                        ds43
                                        ds44
                                        ds45
                                        ds46
                                        ds47
                                        ds48
                                        ds49
                                        ds50
                                        ds51
                                        ds52
                                        ds33
                                        ds54
                                        ds55
                                        ds56
                                        ds57
                                        ds58
                                        ds59
                                        ds60
                                        ds61
                                        ds62
                                        ds63
                                        ds64
                                        ds65
                                        ds66
                                        ds67
                                        ds68
                                        ds69
                                        ds70
                                        ds71
                                        ds72 })
                                     (GHC.Types.: @ Lib.AlignedRead ds7 ds9) of wild3 {
                                [] -> Lib.updateTrimdPairFields1
                                : newpr2 newsecr2s -> (newpr2, newsecr2s) }
                          } in
                          Lib.PairedAln
                            wild1
                            (case ds41 of ds42 { (,) newpr2 newsecr2s -> newpr2 })
                            ds8
                            (case ds41 of ds42 { (,) newpr2 newsecr2s -> newsecr2s }) }
                 } in
                 case ds32 of wild2 {
                   GHC.Types.False -> $j
                   GHC.Types.True
                   -> case ds7 of wild3 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                      case ds63 of wild4 {
                        GHC.Types.False -> $j
                        GHC.Types.True
                        -> let {
                             ds72 :: (Lib.AlignedRead, [Lib.AlignedRead])
                             = case GHC.Base.map
                                      @ Lib.AlignedRead
                                      @ Lib.AlignedRead
                                      (\ (x :: Lib.AlignedRead) ->
                                       case x of wild5 { Lib.AlignedRead ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ds90 ds91 ds92 ds93 ds94 ds95 ds96 ds97 ds98 ds99 ds100 ds101 ds102 ds103 ->
                                       Lib.AlignedRead
                                         ds73
                                         ds74
                                         ds75
                                         ds76
                                         ds77
                                         ds78
                                         ds79
                                         ds80
                                         ds81
                                         ds82
                                         ds83
                                         ds33
                                         ds85
                                         ds86
                                         ds87
                                         ds88
                                         ds89
                                         ds90
                                         ds91
                                         ds92
                                         ds93
                                         ds94
                                         ds95
                                         ds96
                                         ds97
                                         ds98
                                         ds99
                                         ds100
                                         ds101
                                         ds102
                                         ds103 })
                                      (GHC.Types.: @ Lib.AlignedRead wild3 ds9) of wild5 {
                                 [] -> Lib.updateTrimdPairFields1
                                 : newpr2 newsecr2s -> (newpr2, newsecr2s) }
                           } in
                           let {
                             pa1 :: Lib.AlignedRead
                             = case ds72 of ds73 { (,) newpr2 newsecr2s -> newpr2 }
                           } in
                           let {
                             ds73 :: (Lib.AlignedRead, [Lib.AlignedRead])
                             = let {
                                 trimdposR2 :: GHC.Integer.Type.Integer
                                 = case pa1 of wild5 { Lib.AlignedRead ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ds90 ds91 ds92 ds93 ds94 ds95 ds96 ds97 ds98 ds99 ds100 ds101 ds102 ds103 ds104 ->
                                   ds97 }
                               } in
                               case GHC.Base.map
                                      @ Lib.AlignedRead
                                      @ Lib.AlignedRead
                                      (\ (x :: Lib.AlignedRead) ->
                                       case x of wild5 { Lib.AlignedRead ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ds90 ds91 ds92 ds93 ds94 ds95 ds96 ds97 ds98 ds99 ds100 ds101 ds102 ds103 ds104 ->
                                       Lib.AlignedRead
                                         ds74
                                         ds75
                                         ds76
                                         ds77
                                         ds78
                                         ds79
                                         ds80
                                         ds81
                                         ds82
                                         ds83
                                         ds84
                                         trimdposR2
                                         ds86
                                         ds87
                                         ds88
                                         ds89
                                         ds90
                                         ds91
                                         ds92
                                         ds93
                                         ds94
                                         ds95
                                         ds96
                                         ds97
                                         ds98
                                         ds99
                                         ds100
                                         ds101
                                         ds102
                                         ds103
                                         ds104 })
                                      (GHC.Types.: @ Lib.AlignedRead wild1 ds8) of wild5 {
                                 [] -> Lib.updateTrimdPairFields2
                                 : newpr1 newsecr1s -> (newpr1, newsecr1s) }
                           } in
                           Lib.PairedAln
                             (case ds73 of ds74 { (,) newpr1 newsecr1s -> newpr1 })
                             pa1
                             (case ds73 of ds74 { (,) newpr1 newsecr1s -> newsecr1s })
                             (case ds72 of ds74 { (,) newpr2 newsecr2s ->
                              newsecr2s }) } } } } }) -}
8ab13e89665b839c71e79cf285666fe0
  updateTrimdPairFields1 :: (Lib.AlignedRead, [Lib.AlignedRead])
  {- Strictness: x -}
63bfebb1ae7b6bb99786070cbbc2db8e
  updateTrimdPairFields2 :: (Lib.AlignedRead, [Lib.AlignedRead])
  {- Strictness: x -}
428f658134150a9a927fa49fd2b66d6d
  updateZeroTrimdPairFields :: Lib.PairedAln -> Lib.PairedAln
  {- Arity: 1,
     Strictness: <S(S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLS)LLL),1*U(U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)>m,
     Unfolding: (\ (p :: Lib.PairedAln) ->
                 case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                 case ds6 of wild1 { Lib.AlignedRead ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ->
                 let {
                   primR2zerotrimmed :: GHC.Types.Bool
                   = case ds7 of wild2 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                     ds71 }
                 } in
                 let {
                   $j :: Lib.PairedAln <join 0> {- Strictness: m -}
                   = case ds40 of wild2 {
                       GHC.Types.False
                       -> case primR2zerotrimmed of wild3 {
                            GHC.Types.False -> wild
                            GHC.Types.True
                            -> case ds28 of wild4 {
                                 GHC.Types.False
                                 -> Lib.PairedAln
                                      (Lib.AlignedRead
                                         ds10
                                         ds11
                                         Lib.NONE
                                         Lib.defaultBed2
                                         ds14
                                         ds15
                                         ds16
                                         ds17
                                         ds18
                                         ds19
                                         Lib.addtrimtag5
                                         Lib.defaultBed2
                                         Lib.defaultBed2
                                         ds23
                                         ds24
                                         ds25
                                         ds26
                                         ds27
                                         GHC.Types.False
                                         ds29
                                         ds30
                                         ds31
                                         ds32
                                         ds33
                                         ds34
                                         ds35
                                         ds36
                                         ds37
                                         ds38
                                         ds39
                                         GHC.Types.False)
                                      (case ds7 of wild5 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                                       Lib.AlignedRead
                                         ds41
                                         ds42
                                         Lib.NONE
                                         Lib.defaultBed2
                                         ds45
                                         ds46
                                         ds47
                                         ds48
                                         ds49
                                         ds50
                                         Lib.addtrimtag5
                                         Lib.defaultBed2
                                         Lib.defaultBed2
                                         ds54
                                         ds55
                                         ds56
                                         ds57
                                         ds58
                                         ds59
                                         ds60
                                         ds61
                                         ds62
                                         ds63
                                         ds64
                                         ds65
                                         ds66
                                         ds67
                                         ds68
                                         ds69
                                         ds70
                                         ds71 })
                                      ds8
                                      ds9
                                 GHC.Types.True
                                 -> Lib.PairedAln
                                      (Lib.AlignedRead
                                         ds10
                                         ds11
                                         ds12
                                         ds13
                                         ds14
                                         ds15
                                         ds16
                                         ds17
                                         ds18
                                         ds19
                                         Lib.addtrimtag5
                                         Lib.defaultBed2
                                         Lib.defaultBed2
                                         ds23
                                         ds24
                                         ds25
                                         ds26
                                         ds27
                                         GHC.Types.True
                                         ds29
                                         ds30
                                         ds31
                                         ds32
                                         ds33
                                         ds34
                                         ds35
                                         ds36
                                         ds37
                                         ds38
                                         ds39
                                         GHC.Types.False)
                                      ds7
                                      ds8
                                      ds9 } }
                       GHC.Types.True
                       -> case ds7 of wild3 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                          case ds59 of wild4 {
                            GHC.Types.False
                            -> Lib.PairedAln
                                 (Lib.AlignedRead
                                    ds10
                                    ds11
                                    Lib.NONE
                                    Lib.defaultBed2
                                    ds14
                                    ds15
                                    ds16
                                    ds17
                                    ds18
                                    ds19
                                    Lib.addtrimtag5
                                    Lib.defaultBed2
                                    Lib.defaultBed2
                                    ds23
                                    ds24
                                    ds25
                                    ds26
                                    ds27
                                    ds28
                                    ds29
                                    ds30
                                    ds31
                                    ds32
                                    ds33
                                    ds34
                                    ds35
                                    ds36
                                    ds37
                                    ds38
                                    ds39
                                    GHC.Types.True)
                                 (Lib.AlignedRead
                                    ds41
                                    ds42
                                    Lib.NONE
                                    Lib.defaultBed2
                                    ds45
                                    ds46
                                    ds47
                                    ds48
                                    ds49
                                    ds50
                                    Lib.addtrimtag5
                                    Lib.defaultBed2
                                    Lib.defaultBed2
                                    ds54
                                    ds55
                                    ds56
                                    ds57
                                    ds58
                                    GHC.Types.False
                                    ds60
                                    ds61
                                    ds62
                                    ds63
                                    ds64
                                    ds65
                                    ds66
                                    ds67
                                    ds68
                                    ds69
                                    ds70
                                    ds71)
                                 ds8
                                 ds9
                            GHC.Types.True
                            -> Lib.PairedAln
                                 wild1
                                 (Lib.AlignedRead
                                    ds41
                                    ds42
                                    ds43
                                    ds44
                                    ds45
                                    ds46
                                    ds47
                                    ds48
                                    ds49
                                    ds50
                                    Lib.addtrimtag5
                                    Lib.defaultBed2
                                    Lib.defaultBed2
                                    ds54
                                    ds55
                                    ds56
                                    ds57
                                    ds58
                                    GHC.Types.True
                                    ds60
                                    ds61
                                    ds62
                                    ds63
                                    ds64
                                    ds65
                                    ds66
                                    ds67
                                    ds68
                                    ds69
                                    ds70
                                    ds71)
                                 ds8
                                 ds9 } } }
                 } in
                 case ds40 of wild2 {
                   GHC.Types.False -> $j
                   GHC.Types.True
                   -> case primR2zerotrimmed of wild3 {
                        GHC.Types.False -> $j
                        GHC.Types.True
                        -> case ds28 of wild4 {
                             GHC.Types.False
                             -> case ds7 of wild5 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                                case ds59 of wild6 {
                                  GHC.Types.False
                                  -> Lib.PairedAln
                                       (Lib.AlignedRead
                                          ds10
                                          ds11
                                          Lib.NONE
                                          Lib.defaultBed2
                                          ds14
                                          ds15
                                          ds16
                                          ds17
                                          ds18
                                          ds19
                                          Lib.addtrimtag5
                                          Lib.defaultBed2
                                          Lib.defaultBed2
                                          ds23
                                          ds24
                                          ds25
                                          ds26
                                          ds27
                                          GHC.Types.False
                                          ds29
                                          ds30
                                          ds31
                                          ds32
                                          ds33
                                          ds34
                                          ds35
                                          ds36
                                          ds37
                                          ds38
                                          ds39
                                          GHC.Types.True)
                                       (Lib.AlignedRead
                                          ds41
                                          ds42
                                          Lib.NONE
                                          Lib.defaultBed2
                                          ds45
                                          ds46
                                          ds47
                                          ds48
                                          ds49
                                          ds50
                                          Lib.addtrimtag5
                                          Lib.defaultBed2
                                          Lib.defaultBed2
                                          ds54
                                          ds55
                                          ds56
                                          ds57
                                          ds58
                                          GHC.Types.False
                                          ds60
                                          ds61
                                          ds62
                                          ds63
                                          ds64
                                          ds65
                                          ds66
                                          ds67
                                          ds68
                                          ds69
                                          ds70
                                          ds71)
                                       ds8
                                       ds9
                                  GHC.Types.True
                                  -> Lib.PairedAln
                                       (Lib.AlignedRead
                                          ds10
                                          ds11
                                          Lib.NONE
                                          Lib.defaultBed2
                                          ds14
                                          ds15
                                          ds16
                                          ds17
                                          ds18
                                          ds19
                                          Lib.addtrimtag5
                                          Lib.defaultBed2
                                          Lib.defaultBed2
                                          ds23
                                          ds24
                                          ds25
                                          ds26
                                          ds27
                                          GHC.Types.False
                                          ds29
                                          ds30
                                          ds31
                                          ds32
                                          ds33
                                          ds34
                                          ds35
                                          ds36
                                          ds37
                                          ds38
                                          ds39
                                          GHC.Types.True)
                                       (Lib.AlignedRead
                                          ds41
                                          ds42
                                          Lib.NONE
                                          Lib.defaultBed2
                                          ds45
                                          ds46
                                          ds47
                                          ds48
                                          ds49
                                          ds50
                                          Lib.addtrimtag5
                                          Lib.defaultBed2
                                          Lib.defaultBed2
                                          ds54
                                          ds55
                                          ds56
                                          ds57
                                          ds58
                                          GHC.Types.True
                                          ds60
                                          ds61
                                          ds62
                                          ds63
                                          ds64
                                          ds65
                                          ds66
                                          ds67
                                          ds68
                                          ds69
                                          ds70
                                          ds71)
                                       ds8
                                       ds9 } }
                             GHC.Types.True
                             -> case ds7 of wild5 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                                case ds59 of wild6 {
                                  GHC.Types.False
                                  -> Lib.PairedAln
                                       (Lib.AlignedRead
                                          ds10
                                          ds11
                                          Lib.NONE
                                          Lib.defaultBed2
                                          ds14
                                          ds15
                                          ds16
                                          ds17
                                          ds18
                                          ds19
                                          Lib.addtrimtag5
                                          Lib.defaultBed2
                                          Lib.defaultBed2
                                          ds23
                                          ds24
                                          ds25
                                          ds26
                                          ds27
                                          GHC.Types.True
                                          ds29
                                          ds30
                                          ds31
                                          ds32
                                          ds33
                                          ds34
                                          ds35
                                          ds36
                                          ds37
                                          ds38
                                          ds39
                                          GHC.Types.True)
                                       (Lib.AlignedRead
                                          ds41
                                          ds42
                                          Lib.NONE
                                          Lib.defaultBed2
                                          ds45
                                          ds46
                                          ds47
                                          ds48
                                          ds49
                                          ds50
                                          Lib.addtrimtag5
                                          Lib.defaultBed2
                                          Lib.defaultBed2
                                          ds54
                                          ds55
                                          ds56
                                          ds57
                                          ds58
                                          GHC.Types.False
                                          ds60
                                          ds61
                                          ds62
                                          ds63
                                          ds64
                                          ds65
                                          ds66
                                          ds67
                                          ds68
                                          ds69
                                          ds70
                                          ds71)
                                       ds8
                                       ds9
                                  GHC.Types.True
                                  -> Lib.PairedAln
                                       (Lib.AlignedRead
                                          ds10
                                          ds11
                                          ds12
                                          ds13
                                          ds14
                                          ds15
                                          ds16
                                          ds17
                                          ds18
                                          ds19
                                          Lib.addtrimtag5
                                          Lib.defaultBed2
                                          Lib.defaultBed2
                                          ds23
                                          ds24
                                          ds25
                                          ds26
                                          ds27
                                          GHC.Types.True
                                          ds29
                                          ds30
                                          ds31
                                          ds32
                                          ds33
                                          ds34
                                          ds35
                                          ds36
                                          ds37
                                          ds38
                                          ds39
                                          GHC.Types.True)
                                       (Lib.AlignedRead
                                          ds41
                                          ds42
                                          ds43
                                          ds44
                                          ds45
                                          ds46
                                          ds47
                                          ds48
                                          ds49
                                          ds50
                                          Lib.addtrimtag5
                                          Lib.defaultBed2
                                          Lib.defaultBed2
                                          ds54
                                          ds55
                                          ds56
                                          ds57
                                          ds58
                                          GHC.Types.True
                                          ds60
                                          ds61
                                          ds62
                                          ds63
                                          ds64
                                          ds65
                                          ds66
                                          ds67
                                          ds68
                                          ds69
                                          ds70
                                          ds71)
                                       ds8
                                       ds9 } } } } } } }) -}
f135f5a0446345ffee5ab56ab1e30704
  updateZeroTrimdPairFlags :: Lib.PairedAln -> Lib.PairedAln
  {- Arity: 1,
     Strictness: <S(S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLS)LLL),1*U(U(U,U(U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U(U,U(U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)>m,
     Unfolding: (\ (pa :: Lib.PairedAln) ->
                 case pa of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                 case ds6 of wild1 { Lib.AlignedRead ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ->
                 let {
                   newMRNMp :: Lib.PairedAln = Lib.setMateRname wild
                 } in
                 let {
                   r2pMRNM :: Lib.AlignedRead
                   = case newMRNMp of wild2 { Lib.PairedAln ds41 ds42 ds43 ds44 ->
                     ds42 }
                 } in
                 let {
                   r1pMRNM :: Lib.AlignedRead
                   = case newMRNMp of wild2 { Lib.PairedAln ds41 ds42 ds43 ds44 ->
                     ds41 }
                 } in
                 let {
                   r1sMRNMs :: [Lib.AlignedRead]
                   = case newMRNMp of wild2 { Lib.PairedAln ds41 ds42 ds43 ds44 ->
                     ds43 }
                 } in
                 let {
                   r1Zs :: [Lib.AlignedRead]
                   = GHC.Base.map
                       @ Lib.AlignedRead
                       @ Lib.AlignedRead
                       Lib.updateZeroTrimdPairFlags_clrFlagMapBits
                       r1sMRNMs
                 } in
                 let {
                   r2sMRNMs :: [Lib.AlignedRead]
                   = case newMRNMp of wild2 { Lib.PairedAln ds41 ds42 ds43 ds44 ->
                     ds44 }
                 } in
                 let {
                   r2Zs :: [Lib.AlignedRead]
                   = GHC.Base.map
                       @ Lib.AlignedRead
                       @ Lib.AlignedRead
                       Lib.updateZeroTrimdPairFlags_clrFlagMapBits
                       r2sMRNMs
                 } in
                 let {
                   r2zerotrimd :: GHC.Types.Bool
                   = case ds7 of wild2 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                     ds71 }
                 } in
                 let {
                   $j :: Lib.PairedAln <join 0> {- Strictness: m -}
                   = case ds40 of wild2 {
                       GHC.Types.False
                       -> case r2zerotrimd of wild3 {
                            GHC.Types.False -> wild
                            GHC.Types.True
                            -> Lib.PairedAln
                                 (case r1pMRNM of wild4 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                                  Lib.AlignedRead
                                    ds41
                                    (case ds42 of wild5 { GHC.Types.I# x# ->
                                     GHC.Types.I# (GHC.Prim.orI# (GHC.Prim.andI# x# -3#) 8#) })
                                    ds43
                                    ds44
                                    ds45
                                    ds46
                                    ds47
                                    ds48
                                    ds49
                                    ds50
                                    ds51
                                    ds52
                                    ds53
                                    ds54
                                    ds55
                                    ds56
                                    ds57
                                    ds58
                                    ds59
                                    ds60
                                    ds61
                                    ds62
                                    ds63
                                    ds64
                                    ds65
                                    ds66
                                    ds67
                                    ds68
                                    ds69
                                    ds70
                                    ds71 })
                                 r2pMRNM
                                 r1Zs
                                 r2sMRNMs }
                       GHC.Types.True
                       -> Lib.PairedAln
                            r1pMRNM
                            (case r2pMRNM of wild3 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                             Lib.AlignedRead
                               ds41
                               (case ds42 of wild4 { GHC.Types.I# x# ->
                                GHC.Types.I# (GHC.Prim.orI# (GHC.Prim.andI# x# -3#) 8#) })
                               ds43
                               ds44
                               ds45
                               ds46
                               ds47
                               ds48
                               ds49
                               ds50
                               ds51
                               ds52
                               ds53
                               ds54
                               ds55
                               ds56
                               ds57
                               ds58
                               ds59
                               ds60
                               ds61
                               ds62
                               ds63
                               ds64
                               ds65
                               ds66
                               ds67
                               ds68
                               ds69
                               ds70
                               ds71 })
                            r1sMRNMs
                            r2Zs }
                 } in
                 case ds40 of wild2 {
                   GHC.Types.False -> $j
                   GHC.Types.True
                   -> case r2zerotrimd of wild3 {
                        GHC.Types.False -> $j
                        GHC.Types.True
                        -> Lib.PairedAln
                             (case r1pMRNM of wild4 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                              Lib.AlignedRead
                                ds41
                                (case ds42 of wild5 { GHC.Types.I# x# ->
                                 GHC.Types.I# (GHC.Prim.orI# (GHC.Prim.andI# x# -3#) 8#) })
                                ds43
                                ds44
                                ds45
                                ds46
                                ds47
                                ds48
                                ds49
                                ds50
                                ds51
                                ds52
                                ds53
                                ds54
                                ds55
                                ds56
                                ds57
                                ds58
                                ds59
                                ds60
                                ds61
                                ds62
                                ds63
                                ds64
                                ds65
                                ds66
                                ds67
                                ds68
                                ds69
                                ds70
                                ds71 })
                             (case r2pMRNM of wild4 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                              Lib.AlignedRead
                                ds41
                                (case ds42 of wild5 { GHC.Types.I# x# ->
                                 GHC.Types.I# (GHC.Prim.orI# (GHC.Prim.andI# x# -3#) 8#) })
                                ds43
                                ds44
                                ds45
                                ds46
                                ds47
                                ds48
                                ds49
                                ds50
                                ds51
                                ds52
                                ds53
                                ds54
                                ds55
                                ds56
                                ds57
                                ds58
                                ds59
                                ds60
                                ds61
                                ds62
                                ds63
                                ds64
                                ds65
                                ds66
                                ds67
                                ds68
                                ds69
                                ds70
                                ds71 })
                             r1Zs
                             r2Zs } } } }) -}
a3e15e8c750924602220ad3e21f365da
  updateZeroTrimdPairFlags_clrFlagMapBits ::
    Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S,1*U(U,1*U(U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.AlignedRead) ->
                 case x of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 Lib.AlignedRead
                   ds6
                   (case ds7 of wild1 { GHC.Types.I# x# ->
                    GHC.Types.I# (GHC.Prim.orI# (GHC.Prim.andI# x# -3#) 8#) })
                   ds8
                   ds9
                   ds10
                   ds11
                   ds12
                   ds13
                   ds14
                   ds15
                   ds16
                   ds17
                   ds18
                   ds19
                   ds20
                   ds21
                   ds22
                   ds23
                   ds24
                   ds25
                   ds26
                   ds27
                   ds28
                   ds29
                   ds30
                   ds31
                   ds32
                   ds33
                   ds34
                   ds35
                   ds36 }) -}
75a4ea6289852c269af56b24c61e9562
  validateTrimdPairAlnStart :: Lib.PairedAln -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(S(LLLLLLLLLLLLLLLLLLLLLLLSLLLLLLL)S(LLLLLLLLLLLSLLLLLLLLLLLLLLLLLLL)LL),1*U(1*U(A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A),1*U(A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A),A,A)>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.PairedAln) ->
                 case w of ww { Lib.PairedAln ww1 ww2 ww3 ww4 ->
                 case ww1 of ww5 { Lib.AlignedRead ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ww36 ->
                 case ww2 of ww37 { Lib.AlignedRead ww38 ww39 ww40 ww41 ww42 ww43 ww44 ww45 ww46 ww47 ww48 ww49 ww50 ww51 ww52 ww53 ww54 ww55 ww56 ww57 ww58 ww59 ww60 ww61 ww62 ww63 ww64 ww65 ww66 ww67 ww68 ->
                 Lib.$wvalidateTrimdPairAlnStart ww17 ww29 ww49 ww61 } } }) -}
188d9a140fd25997812f74388e271331
  writeRunStats :: GHC.IO.FilePath -> Lib.RunStats -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,U><L,U(U,U,U,U,1*U(U),1*U(U))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.writeRunStats1
                  `cast`
                (<GHC.IO.FilePath>_R
                 ->_R <Lib.RunStats>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
e32743d6601dc441d6be1ad92f261d6a
  writeRunStats1 ::
    GHC.IO.FilePath
    -> Lib.RunStats
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U><L,U(U,U,U,U,1*U(U),1*U(U))><S,U> -}
eb54c5795cd87d65034c776d841620e0
  xmid :: Lib.AlignedRead -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLSLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U,U,U,U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds35 }) -}
instance GHC.Enum.Bounded [Lib.ChromNameFormat]
  = Lib.$fBoundedChromNameFormat
instance GHC.Enum.Bounded [Lib.UChr] = Lib.$fBoundedUChr
instance GHC.Enum.Enum [Lib.ChromNameFormat]
  = Lib.$fEnumChromNameFormat
instance GHC.Enum.Enum [Lib.UChr] = Lib.$fEnumUChr
instance GHC.Classes.Eq [Lib.AlignedRead] = Lib.$fEqAlignedRead
instance GHC.Classes.Eq [Lib.BEDPE] = Lib.$fEqBEDPE
instance GHC.Classes.Eq [Lib.BedRecord] = Lib.$fEqBedRecord
instance GHC.Classes.Eq [Lib.ChromNameFormat]
  = Lib.$fEqChromNameFormat
instance GHC.Classes.Eq [Lib.MasterRecord] = Lib.$fEqMasterRecord
instance GHC.Classes.Eq [Lib.MidFamily] = Lib.$fEqMidFamily
instance GHC.Classes.Eq [Lib.Opts] = Lib.$fEqOpts
instance GHC.Classes.Eq [Lib.PairedAln] = Lib.$fEqPairedAln
instance GHC.Classes.Eq [Lib.RunStats] = Lib.$fEqRunStats
instance GHC.Classes.Eq [Lib.SAMFlag] = Lib.$fEqSAMFlag
instance GHC.Classes.Eq [Lib.UChr] = Lib.$fEqUChr
instance GHC.Generics.Generic [Lib.AlignedRead]
  = Lib.$fGenericAlignedRead
instance GHC.Generics.Generic [Lib.BEDPE] = Lib.$fGenericBEDPE
instance GHC.Generics.Generic [Lib.BedRecord]
  = Lib.$fGenericBedRecord
instance GHC.Generics.Generic [Lib.PairedAln]
  = Lib.$fGenericPairedAln
instance GHC.Generics.Generic [Lib.UChr] = Lib.$fGenericUChr
instance GHC.Classes.Ord [Lib.AlignedRead] = Lib.$fOrdAlignedRead
instance GHC.Classes.Ord [Lib.BEDPE] = Lib.$fOrdBEDPE
instance GHC.Classes.Ord [Lib.BedRecord] = Lib.$fOrdBedRecord
instance GHC.Classes.Ord [Lib.ChromNameFormat]
  = Lib.$fOrdChromNameFormat
instance GHC.Classes.Ord [Lib.MasterRecord] = Lib.$fOrdMasterRecord
instance GHC.Classes.Ord [Lib.MidFamily] = Lib.$fOrdMidFamily
instance GHC.Classes.Ord [Lib.PairedAln] = Lib.$fOrdPairedAln
instance GHC.Classes.Ord [Lib.UChr] = Lib.$fOrdUChr
instance GHC.Read.Read [Lib.ChromNameFormat]
  = Lib.$fReadChromNameFormat
instance GHC.Read.Read [Lib.RunStats] = Lib.$fReadRunStats
instance GHC.Show.Show [Lib.AlignedRead] = Lib.$fShowAlignedRead
instance GHC.Show.Show [Lib.BEDPE] = Lib.$fShowBEDPE
instance GHC.Show.Show [Lib.BedRecord] = Lib.$fShowBedRecord
instance GHC.Show.Show [Lib.ChromNameFormat]
  = Lib.$fShowChromNameFormat
instance GHC.Show.Show [Lib.MasterRecord] = Lib.$fShowMasterRecord
instance GHC.Show.Show [Lib.MidFamily] = Lib.$fShowMidFamily
instance GHC.Show.Show [Lib.Opts] = Lib.$fShowOpts
instance GHC.Show.Show [Lib.PairedAln] = Lib.$fShowPairedAln
instance GHC.Show.Show [Lib.RunStats] = Lib.$fShowRunStats
instance GHC.Show.Show [Lib.SAMFlag] = Lib.$fShowSAMFlag
instance GHC.Show.Show [Lib.UChr] = Lib.$fShowUChr
family instance GHC.Generics.Rep [Lib.PairedAln]
  = Lib.Rep_PairedAln
family instance GHC.Generics.Rep [Lib.AlignedRead]
  = Lib.Rep_AlignedRead
family instance GHC.Generics.Rep [Lib.BEDPE] = Lib.Rep_BEDPE
family instance GHC.Generics.Rep [Lib.BedRecord]
  = Lib.Rep_BedRecord
family instance GHC.Generics.Rep [Lib.UChr] = Lib.Rep_UChr
"SPEC/Lib $fApplicativeResourceT @ IO" [orphan] forall (v :: GHC.Base.Applicative
                                                               GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT @ GHC.Types.IO
                                                               v
  = Lib.$s$fApplicativeResourceT
"SPEC/Lib $fApplicativeResourceT_$cpure @ IO" [orphan] forall ($dApplicative :: GHC.Base.Applicative
                                                                                  GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT_$cpure @ GHC.Types.IO
                                                                      $dApplicative
  = Lib.$s$fApplicativeResourceT_$cpure
"SPEC/Lib $fEq(,) @ Integer @ ByteString" [orphan] forall (v1 :: GHC.Classes.Eq
                                                                   Data.ByteString.Internal.ByteString)
                                                          (v :: GHC.Classes.Eq
                                                                  GHC.Integer.Type.Integer)
  GHC.Classes.$fEq(,) @ GHC.Integer.Type.Integer
                      @ Data.ByteString.Internal.ByteString
                      v
                      v1
  = Lib.$s$fEq(,)
"SPEC/Lib $fFunctorResourceT @ IO" [orphan] forall (v :: GHC.Base.Functor
                                                           GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fFunctorResourceT @ GHC.Types.IO
                                                           v
  = Lib.$s$fApplicativeResourceT_$s$fFunctorResourceT
"SPEC/Lib $fMonadResourceT @ IO" [orphan] forall (v :: GHC.Base.Monad
                                                         GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadResourceT @ GHC.Types.IO
                                                         v
  = Lib.$s$fMonadResourceT
"SPEC/Lib $fMonadResourceT_$c>> @ IO" [orphan] forall ($dMonad :: GHC.Base.Monad
                                                                    GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadResourceT_$c>> @ GHC.Types.IO
                                                              $dMonad
  = Lib.$s$fMonadResourceT_$s$fMonadResourceT_$c>>
"SPEC/Lib fromList @ Int _" [orphan] forall @ a
                                            ($dOrd :: GHC.Classes.Ord GHC.Types.Int)
  Data.Map.Strict.Internal.fromList @ GHC.Types.Int @ a $dOrd
  = Lib.$sfromList2 @ a
"SPEC/Lib fromList @ UChr" forall ($dOrd :: GHC.Classes.Ord
                                              Lib.UChr)
  Data.Set.Internal.fromList @ Lib.UChr $dOrd = Lib.$sfromList4
"SPEC/Lib fromList @ UChr _" forall @ a
                                    ($dOrd :: GHC.Classes.Ord Lib.UChr)
  Data.Map.Strict.Internal.fromList @ Lib.UChr @ a $dOrd
  = Lib.$sfromList @ a
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False


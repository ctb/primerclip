
==================== FINAL INTERFACE ====================
2017-05-08 21:45:38.389366 UTC

interface main@main:Main 8002
  interface hash: 7fffbbaa090e3123c59a9a77af2db9a2
  ABI hash: 7bbd83e936beb19b94319fa1b7589eaa
  export-list hash: eaee287080ed7885b42503f932d40803
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: ead030b663138ddc038c1a0b303780b0
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.cargs
  Main.chunkEvery
  Main.main
  Main.trimprimers
  Main.trimprimersP
  Main.trimprimersP0
  Main.Cmd{Main.Cmd bedfile outsamfile samfile}
module dependencies:
package dependencies: QuickCheck-2.9.2@QuickCheck-2.9.2-Jyj4gc4JxkEIgGFLAsGhs9
                      ansi-terminal-0.6.2.3@ansi-terminal-0.6.2.3-4HPxin1iv6RAndS8lH3nzo
                      ansi-wl-pprint-0.6.7.3@ansi-wl-pprint-0.6.7.3-3GSHFrIr1fs45bsgKkZbLF
                      array-0.5.1.1@array-0.5.1.1
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-HhuV3U7exg79UmloYn3kX2
                      base-4.9.1.0 binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      digits-0.3.1@digits-0.3.1-6oiBpqLKU4HFf04HYYakY
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      hashable-1.2.6.0@hashable-1.2.6.0-3EXxoqeEgbfAKr6aGkye6x
                      integer-gmp-1.0.0.1
                      integer-logarithms-1.0.1@integer-logarithms-1.0.1-IEHCuEd5sG4JjSjlx7m5JF
                      optparse-applicative-0.13.2.0@optparse-applicative-0.13.2.0-34EUj6Bj0pDLtYR0AoQs8j
                      parallel-3.2.1.1@parallel-3.2.1.1-KQJHWCcq2Ka569Stb10nhx
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primerclip-0.1.0.0@primerclip-0.1.0.0-CgARnt06vRpJV53e7njOv1
                      primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH
                      process-1.4.3.0@process-1.4.3.0
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      scientific-0.3.4.12@scientific-0.3.4.12-J9HRl69dpDBBzAMKxlfkoh
                      template-haskell-2.11.1.0
                      text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR
                      tf-random-0.5@tf-random-0.5-BGjMgO8m67W8CHiEl15kZ7
                      time-1.6.0.1@time-1.6.0.1 transformers-0.5.2.0@transformers-0.5.2.0
                      unix-2.7.2.1@unix-2.7.2.1
                      vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG
orphans: attoparsec-0.13.1.0@attoparsec-0.13.1.0-HhuV3U7exg79UmloYn3kX2:Data.Attoparsec.ByteString.Char8
         base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.6.0@hashable-1.2.6.0-3EXxoqeEgbfAKr6aGkye6x:Data.Hashable.Generic
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Fusion.Bundle
family instance modules: attoparsec-0.13.1.0@attoparsec-0.13.1.0-HhuV3U7exg79UmloYn3kX2:Data.Attoparsec.Internal.Types
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Compose
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primerclip-0.1.0.0@primerclip-0.1.0.0-CgARnt06vRpJV53e7njOv1:Lib
                         primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH:Control.Monad.Primitive
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
                         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Lazy
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector
import  -/  base-4.9.1.0:Control.Applicative 32430a90492e727f4bd80db71c28600c
import  -/  base-4.9.1.0:Control.Monad a6784c5dab0d75c63dabec5a37843f98
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:Data.Functor 5ab1dc703df5b482e77efb697833ca3c
import  -/  base-4.9.1.0:Data.List 07ae2acca6538aa0800bd0a993ac6ac1
import  -/  base-4.9.1.0:Data.Maybe d876c4ffe4b3c43755a781e8ad860d88
import  -/  base-4.9.1.0:Data.OldList 27987919d8da2f92e3f472ca81f730f8
import  -/  base-4.9.1.0:Data.Semigroup fc55c71ff629dcbd821309c310055959
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.List ab8c4e523e6c479c549d3bcd5fc4a439
import  -/  base-4.9.1.0:GHC.Num 00bfaa7b2f9d6084913c0697a8a49ec8
import  -/  base-4.9.1.0:GHC.Real 82e4e59051a13dba1da63e1e970a69e6
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-4.9.1.0:System.IO e4a64a8e3dce8616da54f0ee7104f7db
import  -/  bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString 43e99fdac51908da414a28958688da64
import  -/  bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Char8 64661030f691dd1495e363eeda7a5344
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Strict ed6a6dc2532da5c9a45406821568538c
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map.Strict 9d0c0962e53270a0a3fb5cb63723a381
import  -/  deepseq-1.4.2.0@deepseq-1.4.2.0:Control.DeepSeq 3b9ddb93b8ec16cf9a98d6096b46c390
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  optparse-applicative-0.13.2.0@optparse-applicative-0.13.2.0-34EUj6Bj0pDLtYR0AoQs8j:Options.Applicative 3b2110c868e49e0d86cded098f24e0d2
import  -/  optparse-applicative-0.13.2.0@optparse-applicative-0.13.2.0-34EUj6Bj0pDLtYR0AoQs8j:Options.Applicative.Builder cddcfb07a988339795d2e38d4387ac76
import  -/  optparse-applicative-0.13.2.0@optparse-applicative-0.13.2.0-34EUj6Bj0pDLtYR0AoQs8j:Options.Applicative.Extra 149b9f0d4c43ee9476133f84e028bc40
import  -/  optparse-applicative-0.13.2.0@optparse-applicative-0.13.2.0-34EUj6Bj0pDLtYR0AoQs8j:Options.Applicative.Types ce7b38f2adf864314131dd747c72d2ba
import  -/  parallel-3.2.1.1@parallel-3.2.1.1-KQJHWCcq2Ka569Stb10nhx:Control.Parallel.Strategies bff321f08df8772d046cee2e9eeac42e
import  -/  primerclip-0.1.0.0@primerclip-0.1.0.0-CgARnt06vRpJV53e7njOv1:Lib 94243846aab86e6de9717c9e38ca4c6b
import  -/  text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.IO d1ddb4c76b86ec795cc5ee286ec187f5
12dfb1d5806c05f7420daf3643c370ee
  $fEqCmd :: GHC.Classes.Eq Main.Cmd
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:. @ Main.Cmd Main.$fEqCmd_$c== Main.$fEqCmd_$c/= -}
12dfb1d5806c05f7420daf3643c370ee
  $fEqCmd_$c/= :: Main.Cmd -> Main.Cmd -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U,1*U)><S(SLL),1*U(1*U,1*U,1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Main.Cmd) (b :: Main.Cmd) ->
                 case Main.$fEqCmd_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
12dfb1d5806c05f7420daf3643c370ee
  $fEqCmd_$c== :: Main.Cmd -> Main.Cmd -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U,1*U)><S(SLL),1*U(1*U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Main.Cmd) (w1 :: Main.Cmd) ->
                 case w of ww { Main.Cmd ww1 ww2 ww3 ->
                 case w1 of ww4 { Main.Cmd ww5 ww6 ww7 ->
                 Main.$w$c== ww1 ww2 ww3 ww5 ww6 ww7 } }) -}
12dfb1d5806c05f7420daf3643c370ee
  $fShowCmd :: GHC.Show.Show Main.Cmd
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Main.Cmd
                  Main.$fShowCmd_$cshowsPrec
                  Main.$fShowCmd_$cshow
                  Main.$fShowCmd_$cshowList -}
12dfb1d5806c05f7420daf3643c370ee
  $fShowCmd1 :: Main.Cmd -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: Main.Cmd) (w1 :: GHC.Base.String) ->
                 case w of ww { Main.Cmd ww1 ww2 ww3 ->
                 Main.$w$cshowsPrec 0# ww1 ww2 ww3 w1 }) -}
87e1d85f6f3e1573124bb12eaa244a89
  $fShowCmd2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "}"#) -}
8e8421e54c3c51a3cd140f8ffda07ad5
  $fShowCmd3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "outsamfile = "#) -}
b4bd2e3d9402a0683816058bb5cc76cd
  $fShowCmd4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "bedfile = "#) -}
d95cf73c6291ff45f106721c45c318fd
  $fShowCmd5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ", "#) -}
76416234aff10492269a97be9a6f1554
  $fShowCmd6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "samfile = "#) -}
7a30887cbdaed86f0d47ad10f9a2c9f1
  $fShowCmd7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Cmd {"#) -}
12dfb1d5806c05f7420daf3643c370ee
  $fShowCmd_$cshow :: Main.Cmd -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Main.Cmd) ->
                 Main.$fShowCmd_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
12dfb1d5806c05f7420daf3643c370ee
  $fShowCmd_$cshowList :: [Main.Cmd] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__ @ Main.Cmd Main.$fShowCmd1) -}
12dfb1d5806c05f7420daf3643c370ee
  $fShowCmd_$cshowsPrec ::
    GHC.Types.Int -> Main.Cmd -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U,1*U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Main.Cmd) (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Main.Cmd ww3 ww4 ww5 ->
                 Main.$w$cshowsPrec ww1 ww3 ww4 ww5 w2 } }) -}
7290b91ec3f88f9bdb7d67aeb1a2c203
  $sforce3 :: Lib.AlignedRead -> ()
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SSSSSSSSSSSSSSSSSSSSSSSS),1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.AlignedRead) ->
                 case w of ww { Lib.AlignedRead ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ->
                 Lib.$w$dGNFData
                   @ GHC.Prim.Any
                   ww1
                     `cast`
                   (Trans
                        (Sym (GHC.Generics.N:K1[0]
                                  <GHC.Generics.R>_P
                                  <Data.ByteString.Internal.ByteString>_R
                                  <GHC.Prim.Any>_P))
                        (Sym (GHC.Generics.N:M1[0]
                                  <GHC.Generics.S>_P
                                  <'GHC.Generics.MetaSel
                                     ('GHC.Base.Just "qname")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy>_P
                                  <GHC.Generics.K1
                                     GHC.Generics.R
                                     Data.ByteString.Internal.ByteString>_R) <GHC.Prim.Any>_N))
                   ww2
                     `cast`
                   (Trans
                        (Sym (GHC.Generics.N:K1[0]
                                  <GHC.Generics.R>_P <GHC.Types.Int>_R <GHC.Prim.Any>_P))
                        (Sym (GHC.Generics.N:M1[0]
                                  <GHC.Generics.S>_P
                                  <'GHC.Generics.MetaSel
                                     ('GHC.Base.Just "flag")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy>_P
                                  <GHC.Generics.K1
                                     GHC.Generics.R GHC.Types.Int>_R) <GHC.Prim.Any>_N))
                   ww3
                     `cast`
                   (Trans
                        (Sym (GHC.Generics.N:K1[0]
                                  <GHC.Generics.R>_P <Lib.UChr>_R <GHC.Prim.Any>_P))
                        (Sym (GHC.Generics.N:M1[0]
                                  <GHC.Generics.S>_P
                                  <'GHC.Generics.MetaSel
                                     ('GHC.Base.Just "rname")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy>_P
                                  <GHC.Generics.K1 GHC.Generics.R Lib.UChr>_R) <GHC.Prim.Any>_N))
                   ww4
                     `cast`
                   (Trans
                        (Sym (GHC.Generics.N:K1[0]
                                  <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <GHC.Prim.Any>_P))
                        (Sym (GHC.Generics.N:M1[0]
                                  <GHC.Generics.S>_P
                                  <'GHC.Generics.MetaSel
                                     ('GHC.Base.Just "pos")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy>_P
                                  <GHC.Generics.K1
                                     GHC.Generics.R GHC.Integer.Type.Integer>_R) <GHC.Prim.Any>_N))
                   ww5
                     `cast`
                   (Trans
                        (Sym (GHC.Generics.N:K1[0]
                                  <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <GHC.Prim.Any>_P))
                        (Sym (GHC.Generics.N:M1[0]
                                  <GHC.Generics.S>_P
                                  <'GHC.Generics.MetaSel
                                     ('GHC.Base.Just "endpos")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy>_P
                                  <GHC.Generics.K1
                                     GHC.Generics.R GHC.Integer.Type.Integer>_R) <GHC.Prim.Any>_N))
                   ww6
                     `cast`
                   (Trans
                        (Sym (GHC.Generics.N:K1[0]
                                  <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <GHC.Prim.Any>_P))
                        (Sym (GHC.Generics.N:M1[0]
                                  <GHC.Generics.S>_P
                                  <'GHC.Generics.MetaSel
                                     ('GHC.Base.Just "mapqual")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy>_P
                                  <GHC.Generics.K1
                                     GHC.Generics.R GHC.Integer.Type.Integer>_R) <GHC.Prim.Any>_N))
                   ww7
                     `cast`
                   (Trans
                        (Sym (GHC.Generics.N:K1[0]
                                  <GHC.Generics.R>_P
                                  <Data.ByteString.Internal.ByteString>_R
                                  <GHC.Prim.Any>_P))
                        (Sym (GHC.Generics.N:M1[0]
                                  <GHC.Generics.S>_P
                                  <'GHC.Generics.MetaSel
                                     ('GHC.Base.Just "cigar")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy>_P
                                  <GHC.Generics.K1
                                     GHC.Generics.R
                                     Data.ByteString.Internal.ByteString>_R) <GHC.Prim.Any>_N))
                   ww8
                     `cast`
                   (Trans
                        (Sym (GHC.Generics.N:K1[0]
                                  <GHC.Generics.R>_P
                                  <Data.ByteString.Internal.ByteString>_R
                                  <GHC.Prim.Any>_P))
                        (Sym (GHC.Generics.N:M1[0]
                                  <GHC.Generics.S>_P
                                  <'GHC.Generics.MetaSel
                                     ('GHC.Base.Just "trimdcigar")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy>_P
                                  <GHC.Generics.K1
                                     GHC.Generics.R
                                     Data.ByteString.Internal.ByteString>_R) <GHC.Prim.Any>_N))
                   ww9
                     `cast`
                   (Trans
                        (Sym (GHC.Generics.N:K1[0]
                                  <GHC.Generics.R>_P <Lib.CigarMap>_R <GHC.Prim.Any>_P))
                        (Sym (GHC.Generics.N:M1[0]
                                  <GHC.Generics.S>_P
                                  <'GHC.Generics.MetaSel
                                     ('GHC.Base.Just "cigmap")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy>_P
                                  <GHC.Generics.K1
                                     GHC.Generics.R Lib.CigarMap>_R) <GHC.Prim.Any>_N))
                   ww10
                     `cast`
                   (Trans
                        (Sym (GHC.Generics.N:K1[0]
                                  <GHC.Generics.R>_P
                                  <Data.ByteString.Internal.ByteString>_R
                                  <GHC.Prim.Any>_P))
                        (Sym (GHC.Generics.N:M1[0]
                                  <GHC.Generics.S>_P
                                  <'GHC.Generics.MetaSel
                                     ('GHC.Base.Just "rnext")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy>_P
                                  <GHC.Generics.K1
                                     GHC.Generics.R
                                     Data.ByteString.Internal.ByteString>_R) <GHC.Prim.Any>_N))
                   ww11
                     `cast`
                   (Trans
                        (Sym (GHC.Generics.N:K1[0]
                                  <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <GHC.Prim.Any>_P))
                        (Sym (GHC.Generics.N:M1[0]
                                  <GHC.Generics.S>_P
                                  <'GHC.Generics.MetaSel
                                     ('GHC.Base.Just "pnext")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy>_P
                                  <GHC.Generics.K1
                                     GHC.Generics.R GHC.Integer.Type.Integer>_R) <GHC.Prim.Any>_N))
                   ww12
                     `cast`
                   (Trans
                        (Sym (GHC.Generics.N:K1[0]
                                  <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <GHC.Prim.Any>_P))
                        (Sym (GHC.Generics.N:M1[0]
                                  <GHC.Generics.S>_P
                                  <'GHC.Generics.MetaSel
                                     ('GHC.Base.Just "tlen")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy>_P
                                  <GHC.Generics.K1
                                     GHC.Generics.R GHC.Integer.Type.Integer>_R) <GHC.Prim.Any>_N))
                   ww13
                     `cast`
                   (Trans
                        (Sym (GHC.Generics.N:K1[0]
                                  <GHC.Generics.R>_P
                                  <Data.ByteString.Internal.ByteString>_R
                                  <GHC.Prim.Any>_P))
                        (Sym (GHC.Generics.N:M1[0]
                                  <GHC.Generics.S>_P
                                  <'GHC.Generics.MetaSel
                                     ('GHC.Base.Just "refseq")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy>_P
                                  <GHC.Generics.K1
                                     GHC.Generics.R
                                     Data.ByteString.Internal.ByteString>_R) <GHC.Prim.Any>_N))
                   ww14
                     `cast`
                   (Trans
                        (Sym (GHC.Generics.N:K1[0]
                                  <GHC.Generics.R>_P
                                  <Data.ByteString.Internal.ByteString>_R
                                  <GHC.Prim.Any>_P))
                        (Sym (GHC.Generics.N:M1[0]
                                  <GHC.Generics.S>_P
                                  <'GHC.Generics.MetaSel
                                     ('GHC.Base.Just "basequal")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy>_P
                                  <GHC.Generics.K1
                                     GHC.Generics.R
                                     Data.ByteString.Internal.ByteString>_R) <GHC.Prim.Any>_N))
                   ww15
                     `cast`
                   (Trans
                        (Sym (GHC.Generics.N:K1[0]
                                  <GHC.Generics.R>_P
                                  <Data.ByteString.Internal.ByteString>_R
                                  <GHC.Prim.Any>_P))
                        (Sym (GHC.Generics.N:M1[0]
                                  <GHC.Generics.S>_P
                                  <'GHC.Generics.MetaSel
                                     ('GHC.Base.Just "optfields")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy>_P
                                  <GHC.Generics.K1
                                     GHC.Generics.R
                                     Data.ByteString.Internal.ByteString>_R) <GHC.Prim.Any>_N))
                   ww16
                     `cast`
                   (Trans
                        (Sym (GHC.Generics.N:K1[0]
                                  <GHC.Generics.R>_P
                                  <Data.ByteString.Internal.ByteString>_R
                                  <GHC.Prim.Any>_P))
                        (Sym (GHC.Generics.N:M1[0]
                                  <GHC.Generics.S>_P
                                  <'GHC.Generics.MetaSel
                                     ('GHC.Base.Just "strand")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy>_P
                                  <GHC.Generics.K1
                                     GHC.Generics.R
                                     Data.ByteString.Internal.ByteString>_R) <GHC.Prim.Any>_N))
                   ww17
                     `cast`
                   (Trans
                        (Sym (GHC.Generics.N:K1[0]
                                  <GHC.Generics.R>_P <GHC.Types.Bool>_R <GHC.Prim.Any>_P))
                        (Sym (GHC.Generics.N:M1[0]
                                  <GHC.Generics.S>_P
                                  <'GHC.Generics.MetaSel
                                     ('GHC.Base.Just "paired")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy>_P
                                  <GHC.Generics.K1
                                     GHC.Generics.R GHC.Types.Bool>_R) <GHC.Prim.Any>_N))
                   ww18
                     `cast`
                   (Trans
                        (Sym (GHC.Generics.N:K1[0]
                                  <GHC.Generics.R>_P <GHC.Types.Bool>_R <GHC.Prim.Any>_P))
                        (Sym (GHC.Generics.N:M1[0]
                                  <GHC.Generics.S>_P
                                  <'GHC.Generics.MetaSel
                                     ('GHC.Base.Just "mapped")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy>_P
                                  <GHC.Generics.K1
                                     GHC.Generics.R GHC.Types.Bool>_R) <GHC.Prim.Any>_N))
                   ww19
                     `cast`
                   (Trans
                        (Sym (GHC.Generics.N:K1[0]
                                  <GHC.Generics.R>_P <[Lib.BedRecord]>_R <GHC.Prim.Any>_P))
                        (Sym (GHC.Generics.N:M1[0]
                                  <GHC.Generics.S>_P
                                  <'GHC.Generics.MetaSel
                                     ('GHC.Base.Just "fint")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy>_P
                                  <GHC.Generics.K1
                                     GHC.Generics.R [Lib.BedRecord]>_R) <GHC.Prim.Any>_N))
                   ww20
                     `cast`
                   (Trans
                        (Sym (GHC.Generics.N:K1[0]
                                  <GHC.Generics.R>_P <[Lib.BedRecord]>_R <GHC.Prim.Any>_P))
                        (Sym (GHC.Generics.N:M1[0]
                                  <GHC.Generics.S>_P
                                  <'GHC.Generics.MetaSel
                                     ('GHC.Base.Just "rint")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy>_P
                                  <GHC.Generics.K1
                                     GHC.Generics.R [Lib.BedRecord]>_R) <GHC.Prim.Any>_N))
                   ww21
                     `cast`
                   (Trans
                        (Sym (GHC.Generics.N:K1[0]
                                  <GHC.Generics.R>_P <GHC.Types.Bool>_R <GHC.Prim.Any>_P))
                        (Sym (GHC.Generics.N:M1[0]
                                  <GHC.Generics.S>_P
                                  <'GHC.Generics.MetaSel
                                     ('GHC.Base.Just "pintflag")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy>_P
                                  <GHC.Generics.K1
                                     GHC.Generics.R GHC.Types.Bool>_R) <GHC.Prim.Any>_N))
                   ww22
                     `cast`
                   (Trans
                        (Sym (GHC.Generics.N:K1[0]
                                  <GHC.Generics.R>_P <GHC.Types.Bool>_R <GHC.Prim.Any>_P))
                        (Sym (GHC.Generics.N:M1[0]
                                  <GHC.Generics.S>_P
                                  <'GHC.Generics.MetaSel
                                     ('GHC.Base.Just "trimdflag")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy>_P
                                  <GHC.Generics.K1
                                     GHC.Generics.R GHC.Types.Bool>_R) <GHC.Prim.Any>_N))
                   ww23
                     `cast`
                   (Trans
                        (Sym (GHC.Generics.N:K1[0]
                                  <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <GHC.Prim.Any>_P))
                        (Sym (GHC.Generics.N:M1[0]
                                  <GHC.Generics.S>_P
                                  <'GHC.Generics.MetaSel
                                     ('GHC.Base.Just "trimdpos")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy>_P
                                  <GHC.Generics.K1
                                     GHC.Generics.R GHC.Integer.Type.Integer>_R) <GHC.Prim.Any>_N))
                   ww24
                     `cast`
                   (Trans
                        (Sym (GHC.Generics.N:K1[0]
                                  <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <GHC.Prim.Any>_P))
                        (Sym (GHC.Generics.N:M1[0]
                                  <GHC.Generics.S>_P
                                  <'GHC.Generics.MetaSel
                                     ('GHC.Base.Just "trimdendpos")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy>_P
                                  <GHC.Generics.K1
                                     GHC.Generics.R
                                     GHC.Integer.Type.Integer>_R) <GHC.Prim.Any>_N)) }) -}
93e1824a03b56a104e5cb7d88c594fb2
  $tc'Cmd :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7121388747227716206##
                   2008801125535667301##
                   Main.$trModule
                   Main.$tc'Cmd1) -}
214056d70f3751b083740fc92c9e81fa
  $tc'Cmd1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Cmd"#) -}
49940ed3209dc55ec46e705eeb137154
  $tcCmd :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10739131892797576262##
                   11963618654651401271##
                   Main.$trModule
                   Main.$tcCmd1) -}
7c074cb7a855a539f4f2f002d7eba83a
  $tcCmd1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Cmd"#) -}
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
618ad4e92c7dcb7a762407006b0de06a
  $w$c== ::
    GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><S,1*U><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.String)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Base.String)
                   (ww3 :: GHC.Base.String)
                   (ww4 :: GHC.Base.String)
                   (ww5 :: GHC.Base.String) ->
                 case GHC.Base.eqString ww ww3 of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case GHC.Base.eqString ww1 ww4 of wild1 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True -> GHC.Base.eqString ww2 ww5 } }) -}
2510c8a5254470aa7d4dc655a89cc97e
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 5, Strictness: <S,U><L,1*U><L,1*U><L,1*U><L,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Base.String)
                   (ww3 :: GHC.Base.String)
                   (w :: GHC.Base.String) ->
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       Main.$fShowCmd7
                       (GHC.Base.++
                          @ GHC.Types.Char
                          Main.$fShowCmd6
                          (GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows6
                             (GHC.Show.showLitString
                                ww1
                                (GHC.Types.:
                                   @ GHC.Types.Char
                                   GHC.Show.shows6
                                   (GHC.Base.++
                                      @ GHC.Types.Char
                                      Main.$fShowCmd5
                                      (GHC.Base.++
                                         @ GHC.Types.Char
                                         Main.$fShowCmd4
                                         (GHC.Types.:
                                            @ GHC.Types.Char
                                            GHC.Show.shows6
                                            (GHC.Show.showLitString
                                               ww2
                                               (GHC.Types.:
                                                  @ GHC.Types.Char
                                                  GHC.Show.shows6
                                                  (GHC.Base.++
                                                     @ GHC.Types.Char
                                                     Main.$fShowCmd5
                                                     (GHC.Base.++
                                                        @ GHC.Types.Char
                                                        Main.$fShowCmd3
                                                        (GHC.Types.:
                                                           @ GHC.Types.Char
                                                           GHC.Show.shows6
                                                           (GHC.Show.showLitString
                                                              ww3
                                                              (GHC.Types.:
                                                                 @ GHC.Types.Char
                                                                 GHC.Show.shows6
                                                                 (GHC.Base.++
                                                                    @ GHC.Types.Char
                                                                    Main.$fShowCmd2
                                                                    x)))))))))))))))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False -> p w
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows7
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 w)) }) -}
98145394b7c9df13669d7540e752aef1
  $wgo ::
    [Lib.AlignedRead] -> (# [Lib.AlignedRead], [Lib.AlignedRead] #)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>, Inline: [0] -}
12dfb1d5806c05f7420daf3643c370ee
  data Cmd
    = Cmd {samfile :: GHC.Base.String,
           bedfile :: GHC.Base.String,
           outsamfile :: GHC.Base.String}
88dc6df6189375c52200a01d8824c9a8
  bedfile :: Main.Cmd -> GHC.Base.String
  RecSel Left Main.Cmd
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Cmd) ->
                 case ds of wild { Main.Cmd ds1 ds2 ds3 -> ds2 }) -}
91001ca7ef54bcb8bcb84b98f3985168
  cargs :: Options.Applicative.Types.Parser Main.Cmd
  {- Unfolding: (Options.Applicative.Types.MultP
                   @ Main.Cmd
                   @ GHC.Base.String
                   Main.cargs7
                   Main.cargs1) -}
913c9e9068321b4f595700bae5fe83ed
  cargs1 :: Options.Applicative.Types.Parser GHC.Base.String
  {- Strictness: m4,
     Unfolding: (Options.Applicative.Types.AltP
                   @ GHC.Base.String
                   Main.cargs2
                   (Options.Applicative.Types.$fAlternativeParser_$cempty
                      @ GHC.Base.String)) -}
55551e64ce3ca3d99b2983c208364b59
  cargs10 :: Options.Applicative.Types.Option GHC.Base.String
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.Option
                   @ GHC.Base.String
                   Main.cargs5
                   Main.cargs11) -}
d48bf8ec9d7e58834de1b1bdc4840aed
  cargs11 :: Options.Applicative.Types.OptProperties
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.OptProperties
                   Options.Applicative.Types.Visible
                   (GHC.Base.Nothing @ Text.PrettyPrint.ANSI.Leijen.Doc)
                     `cast`
                   (Sym (Options.Applicative.Help.Chunk.N:Chunk[0]) <Text.PrettyPrint.ANSI.Leijen.Doc>_N)
                   Main.cargs_var1
                   (GHC.Base.Nothing @ GHC.Base.String)) -}
5c4124cdc396cab29e6d0a6eeef7674f
  cargs12 ::
    Options.Applicative.Types.Parser
      (GHC.Base.String -> GHC.Base.String -> Main.Cmd)
  {- Unfolding: (Options.Applicative.Types.$fApplicativeParser_$cfmap
                   @ GHC.Base.String
                   @ (GHC.Base.String -> GHC.Base.String -> Main.Cmd)
                   Main.Cmd
                   Main.cargs13) -}
21bfea77ad23f9da105f6ee87923cab8
  cargs13 :: Options.Applicative.Types.Parser GHC.Base.String
  {- Unfolding: (Options.Applicative.Types.AltP
                   @ GHC.Base.String
                   Main.cargs14
                   (Options.Applicative.Types.$fAlternativeParser_$cempty
                      @ GHC.Base.String)) -}
ce587d55e7f4d57c0235d81e9628c139
  cargs14 :: Options.Applicative.Types.Parser GHC.Base.String
  {- Unfolding: (Options.Applicative.Types.OptP
                   @ GHC.Base.String
                   Main.cargs15) -}
5fc49c3eb0cefb6ac300a96f2314854c
  cargs15 :: Options.Applicative.Types.Option GHC.Base.String
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.Option
                   @ GHC.Base.String
                   Main.cargs5
                   Main.cargs16) -}
1217c21349740880bf4b55911f8f6837
  cargs16 :: Options.Applicative.Types.OptProperties
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.OptProperties
                   Options.Applicative.Types.Visible
                   (GHC.Base.Nothing @ Text.PrettyPrint.ANSI.Leijen.Doc)
                     `cast`
                   (Sym (Options.Applicative.Help.Chunk.N:Chunk[0]) <Text.PrettyPrint.ANSI.Leijen.Doc>_N)
                   Main.cargs_var2
                   (GHC.Base.Nothing @ GHC.Base.String)) -}
ca29aacbb8ef7941ce455b5920d67796
  cargs2 :: Options.Applicative.Types.Parser GHC.Base.String
  {- Strictness: m2,
     Unfolding: (Options.Applicative.Types.OptP
                   @ GHC.Base.String
                   Main.cargs3) -}
7db4b87986bbed0598ffaa8f1146f34f
  cargs3 :: Options.Applicative.Types.Option GHC.Base.String
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.Option
                   @ GHC.Base.String
                   Main.cargs5
                   Main.cargs4) -}
9da3746e531105f7c1415daf0cc9fc7a
  cargs4 :: Options.Applicative.Types.OptProperties
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.OptProperties
                   Options.Applicative.Types.Visible
                   (GHC.Base.Nothing @ Text.PrettyPrint.ANSI.Leijen.Doc)
                     `cast`
                   (Sym (Options.Applicative.Help.Chunk.N:Chunk[0]) <Text.PrettyPrint.ANSI.Leijen.Doc>_N)
                   Main.cargs_var
                   (GHC.Base.Nothing @ GHC.Base.String)) -}
3ca2df43c3fa9e0f7e036732c3d29a85
  cargs5 :: Options.Applicative.Types.OptReader GHC.Base.String
  {- HasNoCafRefs, Strictness: m3,
     Unfolding: (Options.Applicative.Types.ArgReader
                   @ GHC.Base.String
                   Main.cargs6) -}
ae080a417fee6c3670e3dc170ec1c459
  cargs6 :: Options.Applicative.Types.CReader GHC.Base.String
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Options.Applicative.Types.CReader
                   @ GHC.Base.String
                   Options.Applicative.Types.$fMonoidCompleter4
                     `cast`
                   (Trans
                        (<GHC.Base.String>_R
                         ->_R Sym (GHC.Types.N:IO[0] <[GHC.Base.String]>_R))
                        (Sym (Options.Applicative.Types.N:Completer[0])))
                   (Data.Either.Right
                      @ Options.Applicative.Types.ParseError
                      @ GHC.Base.String)
                     `cast`
                   (Trans
                        (<GHC.Base.String>_R
                         ->_R Trans
                                  (Sym (Data.Functor.Identity.N:Identity[0]
                                            <Data.Either.Either
                                               Options.Applicative.Types.ParseError
                                               GHC.Base.String>_R))
                                  (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                            <Options.Applicative.Types.ParseError>_N
                                            <Data.Functor.Identity.Identity>_R
                                            <GHC.Base.String>_N)))
                        (Trans
                             (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                       <*>_N
                                       <GHC.Base.String>_R
                                       <Control.Monad.Trans.Except.Except
                                          Options.Applicative.Types.ParseError>_R
                                       <GHC.Base.String>_N))
                             (Sym (Options.Applicative.Types.N:ReadM[0]) <GHC.Base.String>_N)))) -}
c68f439890fd5757ebce37af4378b0f0
  cargs7 ::
    Options.Applicative.Types.Parser (GHC.Base.String -> Main.Cmd)
  {- Unfolding: (Options.Applicative.Types.MultP
                   @ (GHC.Base.String -> Main.Cmd)
                   @ GHC.Base.String
                   Main.cargs12
                   Main.cargs8) -}
47ae5f1b0ee5929bd3612671486aa457
  cargs8 :: Options.Applicative.Types.Parser GHC.Base.String
  {- Strictness: m4,
     Unfolding: (Options.Applicative.Types.AltP
                   @ GHC.Base.String
                   Main.cargs9
                   (Options.Applicative.Types.$fAlternativeParser_$cempty
                      @ GHC.Base.String)) -}
2c8714721e18f354b17000306b471fbd
  cargs9 :: Options.Applicative.Types.Parser GHC.Base.String
  {- Strictness: m2,
     Unfolding: (Options.Applicative.Types.OptP
                   @ GHC.Base.String
                   Main.cargs10) -}
8a5cf29aecc1ca607d8c430da9dc3c43
  cargs_var :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString#
                   "OUTPUT_SAM_FILENAME"#) -}
bf6732bccf60669e6d972dce445be7f4
  cargs_var1 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "PRIMER_BED_INFILE"#) -}
8a6a0151c93c832affbe0f269434a9f7
  cargs_var2 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "SAM_INFILE"#) -}
51e6e6eb85303be58d021acefa5386fb
  chunkEvery :: GHC.Types.Int -> [a] -> [[a]]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U(U)><S,1*U> -}
d9c0dee8a685c5ed422401aaa63f23bf
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
01d62c2c484918d4b5d94b688c90c90e
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U> -}
129a1a814fa667791781f32a098e848d
  main2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
be67896e123ea4a085d279191fe0e5fb
  outsamfile :: Main.Cmd -> GHC.Base.String
  RecSel Left Main.Cmd
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Cmd) ->
                 case ds of wild { Main.Cmd ds1 ds2 ds3 -> ds3 }) -}
dd98138fc4fa8e04bc44b831f7e1ffd4
  samfile :: Main.Cmd -> GHC.Base.String
  RecSel Left Main.Cmd
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLL),1*U(1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Cmd) ->
                 case ds of wild { Main.Cmd ds1 ds2 ds3 -> ds1 }) -}
9d4a5a1c7cc03513f83c68c0f08c1329
  trimprimers :: Lib.BED -> Lib.Alignments -> Lib.Alignments
  {- Arity: 2, Strictness: <L,1*U(U,U,U)><S,1*U> -}
384fcc7a70b82d9b240e146afc6c0f46
  trimprimersP :: Lib.BED -> Lib.Alignments -> Lib.Alignments
  {- Arity: 2, Strictness: <L,1*U(U,U,U)><L,1*U> -}
4f6692fa77e25b031298c49aa423d3bf
  trimprimersP0 :: Lib.BED -> Lib.Alignments -> Lib.Alignments
  {- Arity: 2, Strictness: <L,1*U(U,U,U)><S,1*U>,
     Unfolding: (\ (bed :: Lib.BED) (alns :: Lib.Alignments) ->
                 case Main.$wgo alns of ww { (#,#) ww1 ww2 ->
                 case Main.trimprimersP0_go1
                        (GHC.Base.map
                           @ Lib.AlignedRead
                           @ Lib.AlignedRead
                           (let {
                              w :: Lib.CMap
                              = case bed of ww3 { Data.Vector.Vector ww4 ww5 ww6 ->
                                Lib.$wmakechrbedmap ww4 ww5 ww6 }
                            } in
                            \ (w1 :: Lib.AlignedRead) ->
                            case w1 of ww3 { Lib.AlignedRead ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ->
                            Lib.$waddprimerints
                              w
                              ww4
                              ww5
                              ww6
                              ww7
                              ww8
                              ww9
                              ww10
                              ww11
                              ww12
                              ww13
                              ww14
                              ww15
                              ww16
                              ww17
                              ww18
                              ww19
                              ww20
                              ww21
                              ww25
                              ww26
                              ww27 })
                           ww1)
                        GHC.Prim.realWorld# of ds { (#,#) ipv ipv1 ->
                 case Main.trimprimersP0_go
                        (GHC.Base.map
                           @ Lib.AlignedRead
                           @ Lib.AlignedRead
                           Lib.trimalignment
                           ipv1)
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv2 ipv3 ->
                 letrec {
                   go :: [Lib.AlignedRead] -> [Lib.AlignedRead]
                     {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds2 :: [Lib.AlignedRead]) ->
                     case ds2 of wild {
                       [] -> ww2
                       : y ys
                       -> case y of ww3 { Lib.AlignedRead ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ->
                          case ww10 of ww28 { Data.ByteString.Internal.PS ww29 ww30 ww31 ww32 ->
                          case ww32 of ds3 {
                            DEFAULT
                            -> case Lib.$wgo1
                                      (GHC.Prim.plusAddr# ww29 ww31)
                                      (GHC.Prim.plusAddr# ww29 (GHC.Prim.+# ww31 ds3))
                                      GHC.Prim.realWorld# of ds4 { (#,#) ipv4 ipv5 ->
                               case GHC.Prim.touch#
                                      @ 'GHC.Types.PtrRepLifted
                                      @ GHC.ForeignPtr.ForeignPtrContents
                                      ww30
                                      ipv4 of s' { DEFAULT ->
                               case ipv5 of wild1 {
                                 GHC.Types.False -> go ys
                                 GHC.Types.True -> GHC.Types.: @ Lib.AlignedRead ww3 (go ys) } } }
                            0# -> go ys } } } }
                 } in
                 Data.OldList.sortBy
                   @ Lib.AlignedRead
                   Lib.$fOrdAlignedRead_$ccompare
                   (go ipv3) } } }) -}
329193494e2933392ef4aae0c4c5e887
  trimprimersP0_go ::
    [Lib.AlignedRead]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [Lib.AlignedRead] #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,U> -}
9395cb736b6e919126d7006577a0fc16
  trimprimersP0_go1 ::
    [Lib.AlignedRead]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [Lib.AlignedRead] #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,U> -}
instance GHC.Classes.Eq [Main.Cmd] = Main.$fEqCmd
instance GHC.Show.Show [Main.Cmd] = Main.$fShowCmd
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False


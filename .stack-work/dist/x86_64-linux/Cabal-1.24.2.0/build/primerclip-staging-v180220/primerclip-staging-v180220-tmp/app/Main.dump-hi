
==================== FINAL INTERFACE ====================
2018-02-20 23:24:06.003505 UTC

interface main@main:Main 8002
  interface hash: b0426578a9167750920975702ce49a0f
  ABI hash: ce49d83ddd3db56fd90ebbbab3439eb2
  export-list hash: 4d923d32dedf0c270a97be2b5f4702d2
  orphan hash: f067ff874353f9bbd5b00d2dd0f7a928
  flag hash: 26ef022329eedf94d9d209e95edfcc06
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
  Main.runPrimerTrimming
module dependencies:
package dependencies: QuickCheck-2.9.2@QuickCheck-2.9.2-Jyj4gc4JxkEIgGFLAsGhs9
                      ansi-terminal-0.6.2.3@ansi-terminal-0.6.2.3-4HPxin1iv6RAndS8lH3nzo
                      ansi-wl-pprint-0.6.7.3@ansi-wl-pprint-0.6.7.3-3GSHFrIr1fs45bsgKkZbLF
                      array-0.5.1.1@array-0.5.1.1
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-HhuV3U7exg79UmloYn3kX2
                      base-4.9.1.0
                      base16-bytestring-0.1.1.6@base16-bytestring-0.1.1.6-4E2p94lTx8gIceMhu8Kl9o
                      base64-bytestring-1.0.0.1@base64-bytestring-1.0.0.1-4O9TExPPz6eI82Yj7L4SIj
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      chunked-data-0.3.0@chunked-data-0.3.0-9yVtbG7WxDXAouokjxBoYn
                      conduit-1.2.10@conduit-1.2.10-GgLn1U1QYcf9wsQecuZ1A4
                      conduit-combinators-1.1.1@conduit-combinators-1.1.1-6ruYzXuPCuQzxO1r1KimU
                      conduit-extra-1.1.15@conduit-extra-1.1.15-8sHNT28fM12994kb54uPaH
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      digits-0.3.1@digits-0.3.1-6oiBpqLKU4HFf04HYYakY
                      directory-1.3.0.0@directory-1.3.0.0
                      exceptions-0.8.3@exceptions-0.8.3-ADEDRATtUrMK1JW4zMQ9U
                      filepath-1.4.1.1@filepath-1.4.1.1
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      hashable-1.2.6.0@hashable-1.2.6.0-3EXxoqeEgbfAKr6aGkye6x
                      integer-gmp-1.0.0.1
                      integer-logarithms-1.0.1@integer-logarithms-1.0.1-IEHCuEd5sG4JjSjlx7m5JF
                      lifted-base-0.2.3.10@lifted-base-0.2.3.10-BoEavBFIcriDza63doCjS2
                      mmorph-1.0.9@mmorph-1.0.9-5bASEvmIkr5CpdAYXwPsn0
                      monad-control-1.0.1.0@monad-control-1.0.1.0-LQwQ0Hi5p0oAccTfTzbfD5
                      mono-traversable-1.0.2@mono-traversable-1.0.2-2XfkX4kmUKV9EdqqkFHQ4
                      mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      mwc-random-0.13.5.0@mwc-random-0.13.5.0-Dp3Ri46ZxJuCFZWIowNqha
                      optparse-applicative-0.13.2.0@optparse-applicative-0.13.2.0-34EUj6Bj0pDLtYR0AoQs8j
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primerclip-0.1.0.0@primerclip-0.1.0.0-BvEEl93NsBt2YPC7rsTWdy
                      primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH
                      process-1.4.3.0@process-1.4.3.0
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      resourcet-1.1.9@resourcet-1.1.9-Ej57FoSD8NQLck5u9CwWz8
                      scientific-0.3.4.12@scientific-0.3.4.12-J9HRl69dpDBBzAMKxlfkoh
                      split-0.2.3.1@split-0.2.3.1-FWyXC6nhV0H3AfM8IzrEFk
                      stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
                      streaming-commons-0.1.17@streaming-commons-0.1.17-pXxQEId7Ie1SLoOLcDazB
                      template-haskell-2.11.1.0
                      text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR
                      tf-random-0.5@tf-random-0.5-BGjMgO8m67W8CHiEl15kZ7
                      time-1.6.0.1@time-1.6.0.1 transformers-0.5.2.0@transformers-0.5.2.0
                      transformers-base-0.4.4@transformers-base-0.4.4-GKSs0LKukAL8ymq2naFmrH
                      unix-2.7.2.1@unix-2.7.2.1
                      unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-1XEErQCPPPc2SEtcHHNx9o
                      vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG
                      vector-algorithms-0.7.0.1@vector-algorithms-0.7.0.1-C2u1KYklHg84I6SQQVEAin
orphans: attoparsec-0.13.1.0@attoparsec-0.13.1.0-HhuV3U7exg79UmloYn3kX2:Data.Attoparsec.ByteString.Char8
         base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.6.0@hashable-1.2.6.0-3EXxoqeEgbfAKr6aGkye6x:Data.Hashable.Generic
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed
family instance modules: attoparsec-0.13.1.0@attoparsec-0.13.1.0-HhuV3U7exg79UmloYn3kX2:Data.Attoparsec.Internal.Types
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Compose
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         conduit-1.2.10@conduit-1.2.10-GgLn1U1QYcf9wsQecuZ1A4:Data.Conduit.Internal.Conduit
                         conduit-1.2.10@conduit-1.2.10-GgLn1U1QYcf9wsQecuZ1A4:Data.Conduit.Internal.Pipe
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         monad-control-1.0.1.0@monad-control-1.0.1.0-LQwQ0Hi5p0oAccTfTzbfD5:Control.Monad.Trans.Control
                         mono-traversable-1.0.2@mono-traversable-1.0.2-2XfkX4kmUKV9EdqqkFHQ4:Data.MonoTraversable
                         mono-traversable-1.0.2@mono-traversable-1.0.2-2XfkX4kmUKV9EdqqkFHQ4:Data.NonNull
                         mono-traversable-1.0.2@mono-traversable-1.0.2-2XfkX4kmUKV9EdqqkFHQ4:Data.Sequences
                         mwc-random-0.13.5.0@mwc-random-0.13.5.0-Dp3Ri46ZxJuCFZWIowNqha:System.Random.MWC
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primerclip-0.1.0.0@primerclip-0.1.0.0-BvEEl93NsBt2YPC7rsTWdy:Lib
                         primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH:Control.Monad.Primitive
                         resourcet-1.1.9@resourcet-1.1.9-Ej57FoSD8NQLck5u9CwWz8:Control.Monad.Trans.Resource.Internal
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
                         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Lazy
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-1XEErQCPPPc2SEtcHHNx9o:Data.HashMap.Base
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-1XEErQCPPPc2SEtcHHNx9o:Data.HashSet
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Primitive
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Storable
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed.Base
import  -/  attoparsec-0.13.1.0@attoparsec-0.13.1.0-HhuV3U7exg79UmloYn3kX2:Data.Attoparsec.ByteString.Char8 411586256774bd277d916a2a44fa1491
import  -/  attoparsec-0.13.1.0@attoparsec-0.13.1.0-HhuV3U7exg79UmloYn3kX2:Data.Attoparsec.ByteString.Internal e8acf5c94f556f7efb6a36c91f1ffc5f
import  -/  base-4.9.1.0:Control.Applicative 32430a90492e727f4bd80db71c28600c
import  -/  base-4.9.1.0:Control.Monad a6784c5dab0d75c63dabec5a37843f98
import  -/  base-4.9.1.0:Data.Either 20b09ef8d0a5b74fdec011c40c1587f5
import  -/  base-4.9.1.0:Data.List 07ae2acca6538aa0800bd0a993ac6ac1
import  -/  base-4.9.1.0:Data.Maybe d876c4ffe4b3c43755a781e8ad860d88
import  -/  base-4.9.1.0:Data.Semigroup fc55c71ff629dcbd821309c310055959
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-4.9.1.0:System.IO e4a64a8e3dce8616da54f0ee7104f7db
import  -/  bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Char8 64661030f691dd1495e363eeda7a5344
import  -/  conduit-1.2.10@conduit-1.2.10-GgLn1U1QYcf9wsQecuZ1A4:Data.Conduit e1821bb6fffe882fe955240027b231ab
import  -/  conduit-1.2.10@conduit-1.2.10-GgLn1U1QYcf9wsQecuZ1A4:Data.Conduit.Internal.Conduit 8ce3b9b86ab5c05f009c4983cd402a46
import  -/  conduit-combinators-1.1.1@conduit-combinators-1.1.1-6ruYzXuPCuQzxO1r1KimU:Conduit 3613c556e142008d222f3ec4e8242420
import  -/  conduit-combinators-1.1.1@conduit-combinators-1.1.1-6ruYzXuPCuQzxO1r1KimU:Data.Conduit.Combinators.Unqualified 0c5c4ba2ed69c19704f62d7919b1380c
import  -/  conduit-extra-1.1.15@conduit-extra-1.1.15-8sHNT28fM12994kb54uPaH:Data.Conduit.Binary 6603188230cc506ad6096ba7447f637b
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Strict ed6a6dc2532da5c9a45406821568538c
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map.Strict 9d0c0962e53270a0a3fb5cb63723a381
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  integer-gmp-1.0.0.1:GHC.Integer.Type 318df275d77dcdb18e0006d8d7870c2a
import  -/  optparse-applicative-0.13.2.0@optparse-applicative-0.13.2.0-34EUj6Bj0pDLtYR0AoQs8j:Options.Applicative 3b2110c868e49e0d86cded098f24e0d2
import  -/  optparse-applicative-0.13.2.0@optparse-applicative-0.13.2.0-34EUj6Bj0pDLtYR0AoQs8j:Options.Applicative.Builder cddcfb07a988339795d2e38d4387ac76
import  -/  optparse-applicative-0.13.2.0@optparse-applicative-0.13.2.0-34EUj6Bj0pDLtYR0AoQs8j:Options.Applicative.Extra 149b9f0d4c43ee9476133f84e028bc40
import  -/  primerclip-0.1.0.0@primerclip-0.1.0.0-BvEEl93NsBt2YPC7rsTWdy:Lib f0bff3b6205927eebbb43103774400c0
ffe787835a7a1860338941124400c7dd
  $s$fApplicativeResourceT ::
    GHC.Base.Applicative
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  Main.$s$fApplicativeResourceT_$s$fApplicativeResourceT_$cp1Applicative
                  Main.$s$fApplicativeResourceT_$s$fApplicativeResourceT_$cpure
                  (Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT_$c<*>
                     @ GHC.Types.IO
                     GHC.Base.$fApplicativeIO)
                  (Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT_$c*>
                     @ GHC.Types.IO
                     GHC.Base.$fApplicativeIO)
                  (Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT_$c<*
                     @ GHC.Types.IO
                     GHC.Base.$fApplicativeIO) -}
ba5dd95215f156068b129a03e00ebdf5
  $s$fApplicativeResourceT_$dFunctor :: GHC.Base.Functor GHC.Types.IO
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) GHC.Base.$fFunctorIO -}
63720e3b6e759122404dab6e8cba004b
  $s$fApplicativeResourceT_$s$fApplicativeResourceT_$cp1Applicative ::
    GHC.Base.Functor
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fApplicativeResourceT_$s$fFunctorResourceT -}
a5ff5ebce2abbab0cf04f19cca73e283
  $s$fApplicativeResourceT_$s$fApplicativeResourceT_$cpure ::
    a -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,A><S,U>,
     Unfolding: InlineRule (1, True, True)
                (\ @ a
                   (eta :: a)
                   (eta1 :: GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap)
                   (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (GHC.Base.returnIO @ a eta) `cast` (GHC.Types.N:IO[0] <a>_R) eta2)
                  `cast`
                (forall (a :: <*>_N).
                 <a>_R
                 ->_R Trans
                          (<GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                           ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                          (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                    <GHC.Types.IO>_R <a>_N))) -}
f3f904abec7fa397567d9e19456fea86
  $s$fApplicativeResourceT_$s$fFunctorResourceT ::
    GHC.Base.Functor
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  (Control.Monad.Trans.Resource.Internal.$fFunctorResourceT_$cfmap
                     @ GHC.Types.IO
                     Main.$s$fApplicativeResourceT_$dFunctor)
                  (Control.Monad.Trans.Resource.Internal.$fFunctorResourceT_$c<$
                     @ GHC.Types.IO
                     Main.$s$fApplicativeResourceT_$dFunctor) -}
d813d13eb16731dff302be82c01c3e4a
  $s$fApplicativeZipSink_$c*>_$s$fMonadIOResourceT_$cp1MonadIO ::
    GHC.Base.Monad
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fApplicativeZipSink_$c*>_$s$fMonadResourceT -}
def8f57d6286563a666f3ca95b55aa9e
  $s$fApplicativeZipSink_$c*>_$s$fMonadResourceT ::
    GHC.Base.Monad
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  (Control.Monad.Trans.Resource.Internal.$fMonadResourceT_$cp1Monad
                     @ GHC.Types.IO
                     Main.$s$fApplicativeZipSink_$c*>_g1)
                  (Control.Monad.Trans.Resource.Internal.$fMonadResourceT_$c>>=
                     @ GHC.Types.IO
                     Main.$s$fApplicativeZipSink_$c*>_g1)
                  (Control.Monad.Trans.Resource.Internal.$fMonadResourceT_$c>>
                     @ GHC.Types.IO
                     Main.$s$fApplicativeZipSink_$c*>_g1)
                  (Control.Monad.Trans.Resource.Internal.$fMonadResourceT_$creturn
                     @ GHC.Types.IO
                     Main.$s$fApplicativeZipSink_$c*>_g1)
                  (Control.Monad.Trans.Resource.Internal.$fMonadResourceT_$cfail
                     @ GHC.Types.IO
                     Main.$s$fApplicativeZipSink_$c*>_g1) -}
b317b6a8548f692db59ff0d262a56f44
  $s$fApplicativeZipSink_$c*>_g1 :: GHC.Base.Monad GHC.Types.IO
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) GHC.Base.$fMonadIO -}
81083768fdea10f1b69d26259237445f
  $s$fMonadBasebResourceT ::
    Control.Monad.Base.MonadBase
      GHC.Types.IO
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Types.IO
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  GHC.Base.$fApplicativeIO
                  Main.$s$fMonadBasebResourceT_$s$fMonadResourceResourceT_$cp3MonadResource
                  GHC.Base.$fMonadIO
                  Main.$s$fApplicativeZipSink_$c*>_$s$fMonadIOResourceT_$cp1MonadIO
                  Main.$s$fMonadBasebResourceT_$s$fMonadIOResourceT_$cliftIO -}
3af1f150324138be38ec6a6742feeed7
  $s$fMonadBasebResourceT_$s$fMonadIOResourceT_$cliftIO ::
    GHC.Types.IO a
    -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,A>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (eta :: GHC.Types.IO a) ->
                 let {
                   eta1 :: GHC.Types.IO a = GHC.Base.id @ (GHC.Types.IO a) eta
                 } in
                 (\ (ds :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                  eta1)
                   `cast`
                 (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                           <GHC.Types.IO>_R <a>_N))) -}
f8ef65d6673f0f6903a632f4a1224b62
  $s$fMonadBasebResourceT_$s$fMonadResourceResourceT_$cp3MonadResource ::
    GHC.Base.Applicative
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fApplicativeResourceT -}
d2fd1abe91e26b4f68fc89867cf8c6cf
  $s$fMonadIOResourceT ::
    Control.Monad.IO.Class.MonadIO
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  Main.$s$fApplicativeZipSink_$c*>_$s$fMonadIOResourceT_$cp1MonadIO
                  Main.$s$fMonadBasebResourceT_$s$fMonadIOResourceT_$cliftIO -}
e21b9852135eb9e522634ccf2b71229c
  $s$fMonadResourceResourceT ::
    Control.Monad.Trans.Resource.Internal.MonadResource
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  Main.$s$fMonadResourceResourceT_$s$fMonadResourceResourceT_$cp1MonadResource
                  Main.$s$fMonadResourceResourceT_$s$fMonadResourceResourceT_$cp2MonadResource
                  Main.$s$fMonadBasebResourceT_$s$fMonadResourceResourceT_$cp3MonadResource
                  Main.$s$fMonadResourceResourceT_$s$fMonadResourceResourceT_$cp4MonadResource
                  (Control.Monad.Trans.Resource.Internal.$fMonadResourceResourceT_$cliftResourceT
                     @ GHC.Types.IO
                     Control.Monad.Catch.$fMonadThrowIO
                     Control.Monad.Base.$fMonadBaseIOIO
                     Control.Monad.IO.Class.$fMonadIOIO
                     GHC.Base.$fApplicativeIO) -}
6c87c03e2b572a45a8b890dcdb236e7c
  $s$fMonadResourceResourceT_$s$fMonadResourceResourceT_$cp1MonadResource ::
    Control.Monad.Catch.MonadThrow
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fMonadResourceResourceT_$s$fMonadThrowResourceT -}
9412673677578847853967042266e4c0
  $s$fMonadResourceResourceT_$s$fMonadResourceResourceT_$cp2MonadResource ::
    Control.Monad.IO.Class.MonadIO
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) Main.$s$fMonadIOResourceT -}
63e2b24547974442a02a93b35378b808
  $s$fMonadResourceResourceT_$s$fMonadResourceResourceT_$cp4MonadResource ::
    Control.Monad.Base.MonadBase
      GHC.Types.IO
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fMonadBasebResourceT -}
22614342c5d0bca4e62cc2fb61cfb167
  $s$fMonadResourceResourceT_$s$fMonadThrowResourceT ::
    Control.Monad.Catch.MonadThrow
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  Main.$s$fApplicativeZipSink_$c*>_$s$fMonadIOResourceT_$cp1MonadIO
                  Main.$s$fMonadResourceResourceT_$s$fMonadThrowResourceT_$cthrowM -}
aa8bfb27e674f4b3c1a51b51271b81f2
  $s$fMonadResourceResourceT_$s$fMonadThrowResourceT_$cthrowM ::
    GHC.Exception.Exception e =>
    e -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
  {- Arity: 4, HasNoCafRefs,
     Strictness: <B,1*U(A,A,1*C1(U),A,A)><B,U><B,A><B,U>x,
     Unfolding: InlineRule (1, True, True)
                (\ @ e
                   @ a
                   (eta :: GHC.Exception.Exception e)
                   (x :: e)
                   (eta1 :: GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap)
                   (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (GHC.IO.throwIO @ e @ a eta x) `cast` (GHC.Types.N:IO[0] <a>_R)
                   eta2)
                  `cast`
                (forall (e :: <*>_N) (a :: <*>_N).
                 <GHC.Exception.Exception e>_R
                 ->_R <e>_R
                 ->_R Trans
                          (<GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                           ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                          (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                    <GHC.Types.IO>_R <a>_N))) -}
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
32943b92e295a000371f95392959a5fb
  $wrunPrimerTrimming ::
    GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Integer.Type.Integer #)
  {- Arity: 5, Strictness: <S,1*U><L,U><L,U><L,U><S,U>,
     Inline: [0] -}
a39b3545272b0759533191eb5b2a5c21
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
223f5c06d6973db99dcd00e3b1d5108a
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case System.Environment.getArgs1 s of ds { (#,#) ipv ipv1 ->
                 case Options.Applicative.Extra.customExecParser2
                        @ Lib.Opts
                        (Options.Applicative.Extra.execParserPure
                           @ Lib.Opts
                           Options.Applicative.Builder.defaultPrefs
                           Main.main4
                           ipv1)
                        ipv of ds1 { (#,#) ipv2 ipv3 ->
                 case ipv3 of ww { Lib.Opts ww1 ww2 ww3 ww4 ->
                 case Main.$wrunPrimerTrimming
                        ww1
                        ww2
                        ww3
                        ww4
                        ipv2 of ds2 { (#,#) ipv4 ipv5 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        (case GHC.Show.$w$cshowsPrec1
                                0#
                                ipv5
                                (GHC.Types.[] @ GHC.Types.Char) of ww5 { (#,#) ww6 ww7 ->
                         GHC.Base.++
                           @ GHC.Types.Char
                           (GHC.Types.: @ GHC.Types.Char ww6 ww7)
                           Main.main3 })
                        GHC.Types.True
                        ipv4 of ds3 { (#,#) ipv6 ipv7 ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   Main.main2
                   GHC.Types.True
                   ipv6 } } } } }) -}
06f44981ca7dd13bc2e8d9f147efd64e
  main10 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
8f623bfcdcba4ae2ba617a9755bb547d
  main2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "primer trimming complete."#) -}
8c394f6b9509220b056c97a6b93c7c5d
  main3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   " alignments with >=1 primer bases trimmed."#) -}
8ab4e68d22de64eae4c0740ac2444c30
  main4 :: Options.Applicative.Types.ParserInfo Lib.Opts
  {- Unfolding: (Options.Applicative.Types.ParserInfo
                   @ Lib.Opts
                   Main.main9
                   GHC.Types.True
                   Main.main7
                   Main.main5
                   (GHC.Base.Nothing @ Text.PrettyPrint.ANSI.Leijen.Doc)
                     `cast`
                   (Sym (Options.Applicative.Help.Chunk.N:Chunk[0]) <Text.PrettyPrint.ANSI.Leijen.Doc>_N)
                   Options.Applicative.Builder.info1
                   GHC.Types.True) -}
8f881b2b791f94400a89ed1b2d409847
  main5 ::
    Options.Applicative.Help.Chunk.Chunk
      Text.PrettyPrint.ANSI.Leijen.Doc
  {- Unfolding: (Data.OldList.wordsFB
                   @ (Options.Applicative.Help.Chunk.Chunk
                        Text.PrettyPrint.ANSI.Leijen.Doc)
                   Options.Applicative.Help.Chunk.paragraph1
                   (GHC.Base.Nothing @ Text.PrettyPrint.ANSI.Leijen.Doc)
                     `cast`
                   (Sym (Options.Applicative.Help.Chunk.N:Chunk[0]) <Text.PrettyPrint.ANSI.Leijen.Doc>_N)
                   Main.main6) -}
c9e4b950885dc6729caaf172446552f0
  main6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   "primerclip -- Swift Biosciences Accel-Amplicon\\226\\132\\162 targeted panel primer trimming tool v0.2"#) -}
8c6d6767e58d166d378e03e878d7b364
  main7 ::
    Options.Applicative.Help.Chunk.Chunk
      Text.PrettyPrint.ANSI.Leijen.Doc
  {- Unfolding: (Data.OldList.wordsFB
                   @ (Options.Applicative.Help.Chunk.Chunk
                        Text.PrettyPrint.ANSI.Leijen.Doc)
                   Options.Applicative.Help.Chunk.paragraph1
                   (GHC.Base.Nothing @ Text.PrettyPrint.ANSI.Leijen.Doc)
                     `cast`
                   (Sym (Options.Applicative.Help.Chunk.N:Chunk[0]) <Text.PrettyPrint.ANSI.Leijen.Doc>_N)
                   Main.main8) -}
8efb09b697efdd9fead4eddca2f0663b
  main8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Trim PCR primer sequences from aligned reads"#) -}
0b6d359ffab68742052007f104d17a4f
  main9 :: Options.Applicative.Types.Parser Lib.Opts
  {- Unfolding: (Options.Applicative.Types.MultP
                   @ Lib.Opts
                   @ Lib.Opts
                   (Options.Applicative.Extra.helper @ Lib.Opts)
                   Lib.optargs) -}
1bff3d72cd592df996bf10d14bead710
  runPrimerTrimming ::
    Lib.Opts -> GHC.Types.IO GHC.Integer.Type.Integer
  {- Arity: 2, Strictness: <S(SLLL),1*U(1*U,U,U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.runPrimerTrimming1
                  `cast`
                (<Lib.Opts>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Integer.Type.Integer>_R)) -}
ad38f2720f7645aaf2205bd2ba65a55b
  runPrimerTrimming1 ::
    Lib.Opts
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Integer.Type.Integer #)
  {- Arity: 2, Strictness: <S(SLLL),1*U(1*U,U,U,U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.Opts)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Lib.Opts ww1 ww2 ww3 ww4 ->
                 Main.$wrunPrimerTrimming ww1 ww2 ww3 ww4 w1 }) -}
"SPEC/Main $fApplicativeResourceT @ IO" [ALWAYS] forall ($dApplicative :: GHC.Base.Applicative
                                                                            GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT @ GHC.Types.IO
                                                               $dApplicative
  = Main.$s$fApplicativeResourceT
"SPEC/Main $fApplicativeResourceT_$cp1Applicative @ IO" [ALWAYS] forall ($dApplicative :: GHC.Base.Applicative
                                                                                            GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT_$cp1Applicative @ GHC.Types.IO
                                                                               $dApplicative
  = Main.$s$fApplicativeResourceT_$s$fApplicativeResourceT_$cp1Applicative
"SPEC/Main $fApplicativeResourceT_$cpure @ IO" [ALWAYS] forall ($dApplicative :: GHC.Base.Applicative
                                                                                   GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT_$cpure @ GHC.Types.IO
                                                                      $dApplicative
  = Main.$s$fApplicativeResourceT_$s$fApplicativeResourceT_$cpure
"SPEC/Main $fFunctorResourceT @ IO" [ALWAYS] forall ($dFunctor :: GHC.Base.Functor
                                                                    GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fFunctorResourceT @ GHC.Types.IO
                                                           $dFunctor
  = Main.$s$fApplicativeResourceT_$s$fFunctorResourceT
"SPEC/Main $fMonadBasebResourceT @ IO @ IO" [ALWAYS] forall ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                              GHC.Types.IO
                                                                              GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadBasebResourceT @ GHC.Types.IO
                                                              @ GHC.Types.IO
                                                              $dMonadBase
  = Main.$s$fMonadBasebResourceT
"SPEC/Main $fMonadIOResourceT @ IO" [ALWAYS] forall ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                    GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadIOResourceT @ GHC.Types.IO
                                                           $dMonadIO
  = Main.$s$fMonadIOResourceT
"SPEC/Main $fMonadIOResourceT_$cliftIO @ IO" [ALWAYS] forall ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                             GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadIOResourceT_$cliftIO @ GHC.Types.IO
                                                                    $dMonadIO
  = Main.$s$fMonadBasebResourceT_$s$fMonadIOResourceT_$cliftIO
"SPEC/Main $fMonadIOResourceT_$cp1MonadIO @ IO" [ALWAYS] forall ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadIOResourceT_$cp1MonadIO @ GHC.Types.IO
                                                                       $dMonadIO
  = Main.$s$fApplicativeZipSink_$c*>_$s$fMonadIOResourceT_$cp1MonadIO
"SPEC/Main $fMonadResourceResourceT @ IO" [ALWAYS] forall ($dApplicative :: GHC.Base.Applicative
                                                                              GHC.Types.IO)
                                                          ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                          GHC.Types.IO)
                                                          ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                            GHC.Types.IO
                                                                            GHC.Types.IO)
                                                          ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                             GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadResourceResourceT @ GHC.Types.IO
                                                                 $dMonadThrow
                                                                 $dMonadBase
                                                                 $dMonadIO
                                                                 $dApplicative
  = Main.$s$fMonadResourceResourceT
"SPEC/Main $fMonadResourceResourceT_$cp1MonadResource @ IO" [ALWAYS] forall ($dApplicative :: GHC.Base.Applicative
                                                                                                GHC.Types.IO)
                                                                            ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                            GHC.Types.IO)
                                                                            ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                              GHC.Types.IO
                                                                                              GHC.Types.IO)
                                                                            ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                               GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadResourceResourceT_$cp1MonadResource @ GHC.Types.IO
                                                                                   $dMonadThrow
                                                                                   $dMonadBase
                                                                                   $dMonadIO
                                                                                   $dApplicative
  = Main.$s$fMonadResourceResourceT_$s$fMonadResourceResourceT_$cp1MonadResource
"SPEC/Main $fMonadResourceResourceT_$cp2MonadResource @ IO" [ALWAYS] forall ($dApplicative :: GHC.Base.Applicative
                                                                                                GHC.Types.IO)
                                                                            ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                            GHC.Types.IO)
                                                                            ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                              GHC.Types.IO
                                                                                              GHC.Types.IO)
                                                                            ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                               GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadResourceResourceT_$cp2MonadResource @ GHC.Types.IO
                                                                                   $dMonadThrow
                                                                                   $dMonadBase
                                                                                   $dMonadIO
                                                                                   $dApplicative
  = Main.$s$fMonadResourceResourceT_$s$fMonadResourceResourceT_$cp2MonadResource
"SPEC/Main $fMonadResourceResourceT_$cp3MonadResource @ IO" [ALWAYS] forall ($dApplicative :: GHC.Base.Applicative
                                                                                                GHC.Types.IO)
                                                                            ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                            GHC.Types.IO)
                                                                            ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                              GHC.Types.IO
                                                                                              GHC.Types.IO)
                                                                            ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                               GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadResourceResourceT_$cp3MonadResource @ GHC.Types.IO
                                                                                   $dMonadThrow
                                                                                   $dMonadBase
                                                                                   $dMonadIO
                                                                                   $dApplicative
  = Main.$s$fMonadBasebResourceT_$s$fMonadResourceResourceT_$cp3MonadResource
"SPEC/Main $fMonadResourceResourceT_$cp4MonadResource @ IO" [ALWAYS] forall ($dApplicative :: GHC.Base.Applicative
                                                                                                GHC.Types.IO)
                                                                            ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                            GHC.Types.IO)
                                                                            ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                              GHC.Types.IO
                                                                                              GHC.Types.IO)
                                                                            ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                               GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadResourceResourceT_$cp4MonadResource @ GHC.Types.IO
                                                                                   $dMonadThrow
                                                                                   $dMonadBase
                                                                                   $dMonadIO
                                                                                   $dApplicative
  = Main.$s$fMonadResourceResourceT_$s$fMonadResourceResourceT_$cp4MonadResource
"SPEC/Main $fMonadResourceT @ IO" [ALWAYS] forall ($dMonad :: GHC.Base.Monad
                                                                GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadResourceT @ GHC.Types.IO
                                                         $dMonad
  = Main.$s$fApplicativeZipSink_$c*>_$s$fMonadResourceT
"SPEC/Main $fMonadThrowResourceT @ IO" [ALWAYS] forall ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                          GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadThrowResourceT @ GHC.Types.IO
                                                              $dMonadThrow
  = Main.$s$fMonadResourceResourceT_$s$fMonadThrowResourceT
"SPEC/Main $fMonadThrowResourceT_$cthrowM @ IO" [ALWAYS] forall ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                   GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadThrowResourceT_$cthrowM @ GHC.Types.IO
                                                                       $dMonadThrow
  = Main.$s$fMonadResourceResourceT_$s$fMonadThrowResourceT_$cthrowM
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False


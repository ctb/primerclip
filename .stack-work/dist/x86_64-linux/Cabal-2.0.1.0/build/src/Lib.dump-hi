
==================== FINAL INTERFACE ====================
2018-11-27 20:21:55.068491 UTC

interface primerclip-0.3.5.0-EKfIVVkqmIVLNVlfKBtA8g:Lib [family instance module] 8022
  interface hash: f8f3ff62c27a19844421acea13418a3b
  ABI hash: ba556460c50cecdca05461ab543ace25
  export-list hash: 68704368938f207c260e9b809c7459d4
  orphan hash: 5a48fb4f93f1f0b263d274dc64499ce7
  flag hash: ec690ec25aa83b76b88f0ff85134ee97
  sig of: Nothing
  used TH splices: False
  where
exports:
  Lib.addprimerints
  Lib.addprimerintsPairedAln
  Lib.addtrimtag
  Lib.alignmentsetparser
  Lib.allPairedAln
  Lib.alnparser
  Lib.alnparserEOL
  Lib.alnsToPairedAln
  Lib.anyPairedAln
  Lib.anyPrimerIntAln
  Lib.bedPEparser
  Lib.bedmaplookup
  Lib.bedpeToFbed
  Lib.bedpeToRbed
  Lib.bedrecparser
  Lib.boolZeroLengthCigar
  Lib.calcMappedCount
  Lib.calcNotMappedPct
  Lib.calcRunStats
  Lib.calcTrimdToZero
  Lib.calcTrimmedPct
  Lib.calculateTrimStats
  Lib.checkChromNameMatchStatus
  Lib.checkCigarSeqlen
  Lib.checkInsertSize
  Lib.checkcigseqlen
  Lib.checkcigseqlen2
  Lib.checknonzeroCigMatch
  Lib.checkpos
  Lib.cigarP
  Lib.cigseqlenHdrPassTest
  Lib.clearNamesAndPositions
  Lib.clearNonRealCigar
  Lib.clearR1primNextFields
  Lib.clearR2primNextFields
  Lib.clip
  Lib.collectPrimIntAlns
  Lib.contractcigar
  Lib.countDs
  Lib.createprimerbedmaps
  Lib.defaultAlignment
  Lib.defaultBEDPE
  Lib.defaultBed
  Lib.defaultMasterRec
  Lib.defaultMidFam
  Lib.defaultPairedAln
  Lib.expandRefmatchedCigar
  Lib.expandcigar
  Lib.expandcigar2
  Lib.exrights
  Lib.exrights2
  Lib.filtpadassoc
  Lib.filtpadcmap
  Lib.findByQname
  Lib.flattenPairedAln
  Lib.flipClrBit
  Lib.flipSetBit
  Lib.flipTstBit
  Lib.genLogFilePath
  Lib.getAlignedLength
  Lib.getFPrimerBEDfromMaster
  Lib.getMasterFile
  Lib.getNclips
  Lib.getNonHeaderAlns
  Lib.getRPrimerBEDfromMaster
  Lib.getRight
  Lib.getRightM
  Lib.getTargetBEDfromMaster
  Lib.getTrimdcigCoordDiff
  Lib.getcigseqdiff
  Lib.getcol
  Lib.getlengths
  Lib.hdrSEalnparserEOL
  Lib.hdralnparser
  Lib.hdralnparserEOL
  Lib.hdrchromp
  Lib.headsafeAln
  Lib.intgr2int
  Lib.itypep
  Lib.ix
  Lib.justbedmaps
  Lib.justchrmaps
  Lib.mIDp
  Lib.makeMRNMexplicit
  Lib.makeTrimmedUpdates
  Lib.makebedmap
  Lib.makechrbedmap
  Lib.makeprimertups
  Lib.mapcig
  Lib.mapfst
  Lib.masterRecToTargetBED
  Lib.masterToFPrimerBED
  Lib.masterToRPrimerBED
  Lib.masterToTargetBED
  Lib.masterparser
  Lib.noclip
  Lib.nohardclip
  Lib.nomapCigToNomapRname
  Lib.nopadding
  Lib.optargs
  Lib.optasp
  Lib.optfieldp
  Lib.optfieldpEOL
  Lib.optfieldsp
  Lib.optfieldsp2
  Lib.optfieldsp3
  Lib.optfieldstotalp
  Lib.optidp
  Lib.optnmp
  Lib.optxsp
  Lib.pairedAlnToTuple
  Lib.pairedalnparser
  Lib.parseAln
  Lib.parseAlns
  Lib.parseBED
  Lib.parseBEDPE
  Lib.parseCigar
  Lib.parsePairedAlns
  Lib.parsePairedAlns'
  Lib.parsePairedAlnsFromSAM
  Lib.parsePairedAlnsOrHdr
  Lib.parseReadsetsFromSAM
  Lib.parseSingleAlnsOrHdr
  Lib.parsechkBED
  Lib.parsechkMaster
  Lib.parsechkSAM
  Lib.parsedbl
  Lib.parseint
  Lib.parsemIDstring
  Lib.parsesignedint
  Lib.primaryR1filter
  Lib.primaryR2filter
  Lib.printAlignment
  Lib.printAlignmentOrHdr
  Lib.printAlnStreamToFile
  Lib.rdint
  Lib.read1filter
  Lib.readBEDPE
  Lib.readSAM
  Lib.readSAMFlag
  Lib.readSAMnameset
  Lib.readSAMtoPairedAlns
  Lib.readint
  Lib.removeDs
  Lib.removeNonPrimaryZeroLengthAlignments
  Lib.rightOrDefaultPaird
  Lib.rightOrDefaultSingle
  Lib.safegetheader
  Lib.safemapcig
  Lib.samhdrparser
  Lib.samhdrparserEOL
  Lib.secalnp
  Lib.seqp
  Lib.setMapdProperPairBit
  Lib.setMateRname
  Lib.setProperInsertSizeRange
  Lib.setProperPairMapFlagBit
  Lib.setZeroLengthAlnFlag
  Lib.setZeroLengthPairFlag
  Lib.setpintflag
  Lib.showChrom
  Lib.showcigar
  Lib.skipcolon
  Lib.softclipbase
  Lib.softclipinterval
  Lib.spaces
  Lib.starcigarP
  Lib.sumMatches
  Lib.sumRefMatches
  Lib.sumSeqMatches
  Lib.sumSoftClipCigOps
  Lib.sumSoftClipCigOpsDepr
  Lib.taketrim
  Lib.toBin
  Lib.toBinInt
  Lib.trimPairedAlns
  Lib.trimalignment
  Lib.trimboth
  Lib.trimfwd
  Lib.trimprimerPairsE
  Lib.trimprimersE
  Lib.trimrev
  Lib.txtfieldp
  Lib.uchrparser
  Lib.updateCigB
  Lib.updateCigF
  Lib.updateCigR
  Lib.updatePairedAlnTrimdFields
  Lib.updateR1nextfields
  Lib.updateR2nextfields
  Lib.updateTrimdAlnFields
  Lib.updateTrimdPairFields
  Lib.updateZeroTrimdPairFields
  Lib.updateZeroTrimdPairFlags
  Lib.validateTrimdPairAlnStart
  Lib.writeRunStats
  Lib.AlignedRead{Lib.AlignedRead basequal cigar cigmap endpos fint flag headerstrings isheader mapped mapqual mid optfields paired pintflag pnext pos qname refseq rint rname rnext strand tbed tlen trimdToZeroLength trimdcigar trimdcigmap trimdendpos trimdflag trimdpos xmid}
  Lib.Alignments
  Lib.BED
  Lib.BEDPE{Lib.BEDPE bedpename chr1 chr2 end1 end2 start1 start2}
  Lib.BedMap
  Lib.BedRecord{Lib.BedRecord bedchr bedend bedname bedstart}
  Lib.CMap
  Lib.ChromNameFormat{Lib.GRC Lib.UCSC}
  Lib.CigarMap
  Lib.CigarMod{Lib.CigarMod currpos remCigOps softclipOps targetpos trimcomplete}
  Lib.Header
  Lib.MasterRecord{Lib.MasterRecord mampname mchrom mforend mforname mforseq mforstart mrevend mrevname mrevseq mrevstart mtargetend mtargetstart}
  Lib.MidFamily{Lib.MidFamily alncount alnend alns alnstart chrom midseq negtxposdcnt postxposdcnt targetbed txposedcount}
  Lib.Opts{Lib.Opts bedpeformat incoordsfile insamfile outfilename sereads}
  Lib.PairedAln{Lib.PairedAln r1prim r1secs r2prim r2secs}
  Lib.RunStats{Lib.RunStats alnsMapped alnsTotal alnsTrimd alnsTrimdToZero mappedPct trimmedPct}
  Lib.SAM
  Lib.SAMFlag{Lib.SAMFlag dupRead failedQC fstInPair intflag mateMapped mateNeg notMapped notPrimary pairNotMapped pairedRead queryPlus sndInPair}
  Lib.UChr{Lib.C1 Lib.C10 Lib.C11 Lib.C12 Lib.C13 Lib.C14 Lib.C15 Lib.C16 Lib.C17 Lib.C18 Lib.C19 Lib.C2 Lib.C20 Lib.C21 Lib.C22 Lib.C3 Lib.C4 Lib.C5 Lib.C6 Lib.C7 Lib.C8 Lib.C9 Lib.CMT Lib.CX Lib.CY Lib.Chr1 Lib.Chr10 Lib.Chr11 Lib.Chr12 Lib.Chr13 Lib.Chr14 Lib.Chr15 Lib.Chr16 Lib.Chr17 Lib.Chr18 Lib.Chr19 Lib.Chr2 Lib.Chr20 Lib.Chr21 Lib.Chr22 Lib.Chr3 Lib.Chr4 Lib.Chr5 Lib.Chr6 Lib.Chr7 Lib.Chr8 Lib.Chr9 Lib.ChrM Lib.ChrX Lib.ChrY Lib.GL000191P1 Lib.GL000192P1 Lib.GL000193P1 Lib.GL000194P1 Lib.GL000195P1 Lib.GL000196P1 Lib.GL000197P1 Lib.GL000198P1 Lib.GL000199P1 Lib.GL000200P1 Lib.GL000201P1 Lib.GL000202P1 Lib.GL000203P1 Lib.GL000204P1 Lib.GL000205P1 Lib.GL000206P1 Lib.GL000207P1 Lib.GL000208P1 Lib.GL000209P1 Lib.GL000210P1 Lib.GL000211P1 Lib.GL000212P1 Lib.GL000213P1 Lib.GL000214P1 Lib.GL000215P1 Lib.GL000216P1 Lib.GL000217P1 Lib.GL000218P1 Lib.GL000219P1 Lib.GL000220P1 Lib.GL000221P1 Lib.GL000222P1 Lib.GL000223P1 Lib.GL000224P1 Lib.GL000225P1 Lib.GL000226P1 Lib.GL000227P1 Lib.GL000228P1 Lib.GL000229P1 Lib.GL000230P1 Lib.GL000231P1 Lib.GL000232P1 Lib.GL000233P1 Lib.GL000234P1 Lib.GL000235P1 Lib.GL000236P1 Lib.GL000237P1 Lib.GL000238P1 Lib.GL000239P1 Lib.GL000240P1 Lib.GL000241P1 Lib.GL000242P1 Lib.GL000243P1 Lib.GL000244P1 Lib.GL000245P1 Lib.GL000246P1 Lib.GL000247P1 Lib.GL000248P1 Lib.GL000249P1 Lib.NC_007605 Lib.NONE}
module dependencies:
package dependencies: QuickCheck-2.10.1 ansi-terminal-0.8.0.2
                      ansi-wl-pprint-0.6.8.2 array-0.5.2.0 attoparsec-0.13.2.2
                      base-4.10.1.0 binary-0.8.5.1 bytestring-0.10.8.2 colour-2.3.4
                      conduit-1.3.0 conduit-extra-1.3.0 containers-0.5.10.2
                      deepseq-1.4.3.0 digits-0.3.1 directory-1.3.0.2 exceptions-0.8.3
                      filepath-1.4.1.2 ghc-boot-th-8.2.2 ghc-prim-0.5.1.1
                      hashable-1.2.7.0 integer-gmp-1.0.1.0 integer-logarithms-1.0.2.1
                      mono-traversable-1.0.8.1 mtl-2.2.2 optparse-applicative-0.14.2.0
                      pretty-1.1.3.3 primitive-0.6.3.0 process-1.6.1.0 random-1.1
                      resourcet-1.2.0 scientific-0.3.5.2 split-0.2.3.3 stm-2.4.5.0
                      template-haskell-2.12.0.0 text-1.2.3.0 tf-random-0.5 time-1.8.0.2
                      transformers-0.5.2.0 unix-2.7.2.2 unliftio-core-0.1.1.0
                      unordered-containers-0.2.9.0 vector-0.12.0.1
                      vector-algorithms-0.7.0.1
orphans: colour-2.3.4:Data.Colour
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         vector-0.12.0.1:Data.Vector.Unboxed
         hashable-1.2.7.0:Data.Hashable.Generic
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         text-1.2.3.0:Data.Text.Lazy text-1.2.3.0:Data.Text
         binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.0:Data.Text.Show stm-2.4.5.0:Control.Monad.STM
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         transformers-0.5.2.0:Control.Monad.Trans.Error
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian base-4.10.1.0:GHC.Float
         base-4.10.1.0:GHC.Base
family instance modules: attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.10.1.0:Control.Applicative base-4.10.1.0:Data.Complex
                         base-4.10.1.0:Data.Either base-4.10.1.0:Data.Functor.Compose
                         base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity
                         base-4.10.1.0:Data.Functor.Product base-4.10.1.0:Data.Functor.Sum
                         base-4.10.1.0:Data.List.NonEmpty base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Semigroup base-4.10.1.0:Data.Type.Equality
                         base-4.10.1.0:Data.Version base-4.10.1.0:Data.Void
                         base-4.10.1.0:GHC.Exts base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats
                         conduit-1.3.0:Data.Conduit.Internal.Conduit
                         conduit-1.3.0:Data.Conduit.Internal.Pipe
                         containers-0.5.10.2:Data.IntMap.Internal
                         containers-0.5.10.2:Data.IntSet.Internal
                         containers-0.5.10.2:Data.Map.Internal
                         containers-0.5.10.2:Data.Sequence.Internal
                         containers-0.5.10.2:Data.Set.Internal containers-0.5.10.2:Data.Tree
                         ghc-boot-th-8.2.2:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.2.2:GHC.LanguageExtensions.Type
                         mono-traversable-1.0.8.1:Data.MonoTraversable
                         mono-traversable-1.0.8.1:Data.NonNull
                         mono-traversable-1.0.8.1:Data.Sequences
                         pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         resourcet-1.2.0:Control.Monad.Trans.Resource.Internal
                         template-haskell-2.12.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.0:Data.Text text-1.2.3.0:Data.Text.Lazy
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
import  -/  attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8 75eb155dd50974f74df242dc5b5f3c20
import  -/  attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Internal b41e9045dc19fd5d4a09f150cf85448c
import  -/  attoparsec-0.13.2.2:Data.Attoparsec.Combinator a2926f2a8e89c11f606f9f2788d9a9cb
import  -/  base-4.10.1.0:Control.Applicative 99577a9c463ffe4790a1d37547a345bd
import  -/  base-4.10.1.0:Control.Exception c134ea327d158f2eebf26e12a1d4ad47
import  -/  base-4.10.1.0:Control.Monad ebed2e8e7444944e0c1d827c6faf40a4
import  -/  base-4.10.1.0:Control.Monad.IO.Class 9d78cd0f73a837f3c00753bd212b9f2c
import  -/  base-4.10.1.0:Data.Bits e0790a03e1e51e2d053ee3f563937f85
import  -/  base-4.10.1.0:Data.Char fe4e3458190deeac19969ce15e33bed9
import  -/  base-4.10.1.0:Data.Either d7dae5d9bf298dee616e465c14b5d60e
import  -/  base-4.10.1.0:Data.Foldable 9ed87455d68e87ff2b5b8725eae9897e
import  -/  base-4.10.1.0:Data.Functor 2ffda4f936b8f474394d93205750aff3
import  -/  base-4.10.1.0:Data.List 4ab7fa2a1b87502b23af891a384f0506
import  -/  base-4.10.1.0:Data.Maybe 07738c5485acb328136bb15596f8b845
import  -/  base-4.10.1.0:Data.Monoid c0108b166e27f747671c7fe4ffb11019
import  -/  base-4.10.1.0:Data.OldList 555420b092ca8cf0a8f9666bc0e07dcf
import  -/  base-4.10.1.0:Data.Ord a6789a2a9217f3ca764324b27739797e
import  -/  base-4.10.1.0:Data.Semigroup 92914a5d9e5176805d2364209875f6ed
import  -/  base-4.10.1.0:Data.Tuple 8fa1305aa5032ea35e2a54fa5f1e78f9
import  -/  base-4.10.1.0:GHC.Base 782fd99b5e36f3698a26179a49afca64
import  -/  base-4.10.1.0:GHC.Enum 5a1ba50c23f92f669e01f8955f202337
import  -/  base-4.10.1.0:GHC.Err 514b3a24b22e9d7d731c2d0d02d10842
import  -/  base-4.10.1.0:GHC.Generics c2a8006cab1f0055555a6c72607a574b
import  -/  base-4.10.1.0:GHC.IO e261d8b68ccf81a359626fa520b57d1d
import  -/  base-4.10.1.0:GHC.List e3060fbeb44ce0038e6b4dedf2dd9cf1
import  -/  base-4.10.1.0:GHC.Num 6e1dc5d36d99a802edb39b92bb1923b8
import  -/  base-4.10.1.0:GHC.Read 0abfbe8a9b13202e313efc3bc2f2a3e6
import  -/  base-4.10.1.0:GHC.Real 3c62834bc25e762eabc44149c4cc142d
import  -/  base-4.10.1.0:GHC.Show 0a8ce2b5e533d1c2cfb7954e6736be45
import  -/  base-4.10.1.0:Prelude 31945b7d0084063347fc52506d3a4020
import  -/  base-4.10.1.0:System.IO 6e5bb580370d8d71dc5888f723cea4b4
import  -/  base-4.10.1.0:Text.ParserCombinators.ReadPrec 043a8dc96e82690dac5a09fb8e44e9bc
import  -/  base-4.10.1.0:Text.Read 9e862e012b3c71e83cb56fb456188f44
import  -/  base-4.10.1.0:Text.Read.Lex aff0420c14a3e1f3bb0ee26cd0646682
import  -/  bytestring-0.10.8.2:Data.ByteString 85ba2d590aae1a6d189ceb9a0f58e145
import  -/  bytestring-0.10.8.2:Data.ByteString.Char8 ad3bf7657730adeac35cbb427299ea44
import  -/  bytestring-0.10.8.2:Data.ByteString.Internal e154f5ecf6a3cd0a27df93e86ed481d7
import  -/  conduit-1.3.0:Conduit 9ca771118110a6d629536df1c70cfb0c
import  -/  conduit-1.3.0:Data.Conduit.Combinators 879a6b83242087f07896e92d4cc7d0e9
import  -/  conduit-1.3.0:Data.Conduit.Combinators.Unqualified bb15af616225f302b124833678fb569b
import  -/  conduit-1.3.0:Data.Conduit.Internal.Conduit 2e849a9a0bf7ebe9e17389aa7226446c
import  -/  conduit-extra-1.3.0:Data.Conduit.Attoparsec b4907557e083a7d91d1ea01e01aba9c2
import  -/  containers-0.5.10.2:Data.IntMap.Internal 924624ced78a2cd70ed8353c7a6b8af9
import  -/  containers-0.5.10.2:Data.IntMap.Strict 7892d40daae1f0118150f998d9c28567
import  -/  containers-0.5.10.2:Data.Map.Internal 33ddbf5aa8c0f2ab26fb6dc5be1b1f4c
import  -/  containers-0.5.10.2:Data.Map.Strict 194f5b0a9785a91a43562790aa6787fc
import  -/  containers-0.5.10.2:Data.Map.Strict.Internal 63726a19357ba6ce3637c9bcf7d38b1e
import  -/  containers-0.5.10.2:Data.Set e0f44b836a00cf82340abfec45686444
import  -/  containers-0.5.10.2:Data.Set.Internal b207250e4d0053f17172bfafbcd5c82f
import  -/  digits-0.3.1:Data.Digits 8f964f24c076b1099e4c6ff0295f6910
import  -/  ghc-prim-0.5.1.1:GHC.Classes 93e2660065dce9329577e83d76d8f0d4
import  -/  ghc-prim-0.5.1.1:GHC.Types b1fd0716441595db508c1a74387bf394
import  -/  integer-gmp-1.0.1.0:GHC.Integer.Type 5fa81108482c33b62ec3ac7464eece96
import  -/  optparse-applicative-0.14.2.0:Options.Applicative 93a6ca444e605eb4e5fada3ed41aa455
import  -/  optparse-applicative-0.14.2.0:Options.Applicative.Builder 9b4b35d95a3739ae48e6b42cbe90c8ed
import  -/  optparse-applicative-0.14.2.0:Options.Applicative.Types a7931747d5b2cb3c7d4ffdf50f620d39
import  -/  process-1.6.1.0:System.Process a8c75295bfaf5f54dccd3871224e84a9
import  -/  resourcet-1.2.0:Control.Monad.Trans.Resource.Internal e6300240cc2a919676aa0b3ac9042d06
import  -/  vector-0.12.0.1:Data.Vector 85d00fd11fb6ff56955506f14ad48bd6
e1e6de4207e3ff4889dbcac2af544cf2
  $fBoundedChromNameFormat :: GHC.Enum.Bounded Lib.ChromNameFormat
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:. @ Lib.ChromNameFormat Lib.GRC Lib.UCSC -}
8c7f5d294706d5be2e2968524bb42a6a
  $fBoundedUChr :: GHC.Enum.Bounded Lib.UChr
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:. @ Lib.UChr Lib.C1 Lib.NONE -}
e1e6de4207e3ff4889dbcac2af544cf2
  $fEnumChromNameFormat :: GHC.Enum.Enum Lib.ChromNameFormat
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.ChromNameFormat
                  Lib.$fEnumChromNameFormat_$csucc
                  Lib.$fEnumChromNameFormat_$cpred
                  Lib.$fEnumChromNameFormat_$ctoEnum
                  Lib.$fEnumChromNameFormat_$cfromEnum
                  Lib.$fEnumChromNameFormat_$cenumFrom
                  Lib.$fEnumChromNameFormat_$cenumFromThen
                  Lib.$fEnumChromNameFormat_$cenumFromTo
                  Lib.$fEnumChromNameFormat_$cenumFromThenTo -}
e1e6de4207e3ff4889dbcac2af544cf2
  $fEnumChromNameFormat1 :: [Lib.ChromNameFormat]
  {- Unfolding: (Lib.$fEnumChromNameFormat_go2 1#) -}
e1e6de4207e3ff4889dbcac2af544cf2
  $fEnumChromNameFormat2 :: [Lib.ChromNameFormat]
  {- Unfolding: (Lib.$fEnumChromNameFormat_go2 0#) -}
e1e6de4207e3ff4889dbcac2af544cf2
  $fEnumChromNameFormat3 :: Lib.ChromNameFormat
  {- Strictness: x -}
e1e6de4207e3ff4889dbcac2af544cf2
  $fEnumChromNameFormat4 :: Lib.ChromNameFormat
  {- Strictness: x -}
e1e6de4207e3ff4889dbcac2af544cf2
  $fEnumChromNameFormat_$cenumFrom ::
    Lib.ChromNameFormat -> [Lib.ChromNameFormat]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (a :: Lib.ChromNameFormat) ->
                 case a of wild {
                   Lib.GRC -> Lib.$fEnumChromNameFormat2
                   Lib.UCSC -> Lib.$fEnumChromNameFormat1 }) -}
e1e6de4207e3ff4889dbcac2af544cf2
  $fEnumChromNameFormat_$cenumFromThen ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat -> [Lib.ChromNameFormat]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
e1e6de4207e3ff4889dbcac2af544cf2
  $fEnumChromNameFormat_$cenumFromThenTo ::
    Lib.ChromNameFormat
    -> Lib.ChromNameFormat
    -> Lib.ChromNameFormat
    -> [Lib.ChromNameFormat]
  {- Arity: 3, Strictness: <S,1*U><S,1*U><S,1*U> -}
e1e6de4207e3ff4889dbcac2af544cf2
  $fEnumChromNameFormat_$cenumFromTo ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat -> [Lib.ChromNameFormat]
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (x :: Lib.ChromNameFormat)
                   (y :: Lib.ChromNameFormat) ->
                 let {
                   $j :: GHC.Prim.Int# -> [Lib.ChromNameFormat]
                     <join 1> {- Arity: 1, Strictness: <S,U> -}
                   = \ (a# :: GHC.Prim.Int#)[OneShot] ->
                     case y of wild {
                       Lib.GRC
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># a# 0#) of wild1 {
                            GHC.Types.False -> Lib.$fEnumChromNameFormat_go1 a#
                            GHC.Types.True -> GHC.Types.[] @ Lib.ChromNameFormat }
                       Lib.UCSC
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># a# 1#) of wild1 {
                            GHC.Types.False -> Lib.$fEnumChromNameFormat_go a#
                            GHC.Types.True -> GHC.Types.[] @ Lib.ChromNameFormat } }
                 } in
                 case x of wild { Lib.GRC -> $j 0# Lib.UCSC -> $j 1# }) -}
e1e6de4207e3ff4889dbcac2af544cf2
  $fEnumChromNameFormat_$cfromEnum ::
    Lib.ChromNameFormat -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: Lib.ChromNameFormat) ->
                 case a of wild {
                   Lib.GRC -> GHC.Types.I# 0# Lib.UCSC -> GHC.Types.I# 1# }) -}
e1e6de4207e3ff4889dbcac2af544cf2
  $fEnumChromNameFormat_$cpred ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: Lib.ChromNameFormat) ->
                 case a of wild {
                   Lib.GRC -> Lib.$fEnumChromNameFormat3 Lib.UCSC -> Lib.GRC }) -}
e1e6de4207e3ff4889dbcac2af544cf2
  $fEnumChromNameFormat_$csucc ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: Lib.ChromNameFormat) ->
                 case a of wild {
                   Lib.GRC -> Lib.UCSC Lib.UCSC -> Lib.$fEnumChromNameFormat4 }) -}
e1e6de4207e3ff4889dbcac2af544cf2
  $fEnumChromNameFormat_$ctoEnum ::
    GHC.Types.Int -> Lib.ChromNameFormat
  {- Arity: 1, Strictness: <S(S),1*U(U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Types.Int) ->
                 case w of ww { GHC.Types.I# ww1 -> Lib.$w$ctoEnum ww1 }) -}
e1e6de4207e3ff4889dbcac2af544cf2
  $fEnumChromNameFormat_go :: GHC.Prim.Int# -> [Lib.ChromNameFormat]
  {- Arity: 1, Strictness: <L,U>m2 -}
e1e6de4207e3ff4889dbcac2af544cf2
  $fEnumChromNameFormat_go1 :: GHC.Prim.Int# -> [Lib.ChromNameFormat]
  {- Arity: 1, Strictness: <L,U>m2 -}
e1e6de4207e3ff4889dbcac2af544cf2
  $fEnumChromNameFormat_go2 :: GHC.Prim.Int# -> [Lib.ChromNameFormat]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m2 -}
8c7f5d294706d5be2e2968524bb42a6a
  $fEnumUChr :: GHC.Enum.Enum Lib.UChr
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.UChr
                  Lib.$fEnumUChr_$csucc
                  Lib.$fEnumUChr_$cpred
                  Lib.$fEnumUChr_$ctoEnum
                  Lib.$fEnumUChr_$cfromEnum
                  Lib.$fEnumUChr_$cenumFrom
                  Lib.$fEnumUChr_$cenumFromThen
                  Lib.$fEnumUChr_$cenumFromTo
                  Lib.$fEnumUChr_$cenumFromThenTo -}
8c7f5d294706d5be2e2968524bb42a6a
  $fEnumUChr1 :: Lib.UChr
  {- Strictness: x -}
8c7f5d294706d5be2e2968524bb42a6a
  $fEnumUChr2 :: Lib.UChr
  {- Strictness: x -}
8c7f5d294706d5be2e2968524bb42a6a
  $fEnumUChr_$cenumFrom :: Lib.UChr -> [Lib.UChr]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,U>,
     Unfolding: (\ (a :: Lib.UChr) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr a of a# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.># a# 110#) of wild {
                   GHC.Types.False -> Lib.$fEnumUChr_go a#
                   GHC.Types.True -> GHC.Types.[] @ Lib.UChr } }) -}
8c7f5d294706d5be2e2968524bb42a6a
  $fEnumUChr_$cenumFromThen :: Lib.UChr -> Lib.UChr -> [Lib.UChr]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: (\ (a :: Lib.UChr) (b :: Lib.UChr) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr a of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr b of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.># a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# b# a#) of wild1 {
                        GHC.Types.False
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.># 110# b#) of wild2 {
                             GHC.Types.False
                             -> GHC.Types.:
                                  @ Lib.UChr
                                  (GHC.Prim.tagToEnum# @ Lib.UChr a#)
                                  (let {
                                     delta :: GHC.Prim.Int# = GHC.Prim.-# b# a#
                                   } in
                                   let {
                                     y' :: GHC.Prim.Int# = GHC.Prim.-# 110# delta
                                   } in
                                   letrec {
                                     go_dn :: GHC.Prim.Int# -> [Lib.UChr]
                                       {- Arity: 1, Strictness: <S,U> -}
                                     = \ (x :: GHC.Prim.Int#) ->
                                       case GHC.Prim.tagToEnum#
                                              @ GHC.Types.Bool
                                              (GHC.Prim.<# x y') of wild3 {
                                         GHC.Types.False
                                         -> GHC.Types.:
                                              @ Lib.UChr
                                              (GHC.Prim.tagToEnum# @ Lib.UChr x)
                                              (go_dn (GHC.Prim.+# x delta))
                                         GHC.Types.True
                                         -> GHC.Types.:
                                              @ Lib.UChr
                                              (GHC.Prim.tagToEnum# @ Lib.UChr x)
                                              (GHC.Types.[] @ Lib.UChr) }
                                   } in
                                   go_dn b#)
                             GHC.Types.True
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.># 110# a#) of wild3 {
                                  GHC.Types.False
                                  -> GHC.Types.:
                                       @ Lib.UChr
                                       (GHC.Prim.tagToEnum# @ Lib.UChr a#)
                                       (GHC.Types.[] @ Lib.UChr)
                                  GHC.Types.True -> GHC.Types.[] @ Lib.UChr } }
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<# 110# b#) of wild2 {
                             GHC.Types.False
                             -> GHC.Types.:
                                  @ Lib.UChr
                                  (GHC.Prim.tagToEnum# @ Lib.UChr a#)
                                  (let {
                                     delta :: GHC.Prim.Int# = GHC.Prim.-# b# a#
                                   } in
                                   let {
                                     y' :: GHC.Prim.Int# = GHC.Prim.-# 110# delta
                                   } in
                                   letrec {
                                     go_up :: GHC.Prim.Int# -> [Lib.UChr]
                                       {- Arity: 1, Strictness: <S,U> -}
                                     = \ (x :: GHC.Prim.Int#) ->
                                       case GHC.Prim.tagToEnum#
                                              @ GHC.Types.Bool
                                              (GHC.Prim.># x y') of wild3 {
                                         GHC.Types.False
                                         -> GHC.Types.:
                                              @ Lib.UChr
                                              (GHC.Prim.tagToEnum# @ Lib.UChr x)
                                              (go_up (GHC.Prim.+# x delta))
                                         GHC.Types.True
                                         -> GHC.Types.:
                                              @ Lib.UChr
                                              (GHC.Prim.tagToEnum# @ Lib.UChr x)
                                              (GHC.Types.[] @ Lib.UChr) }
                                   } in
                                   go_up b#)
                             GHC.Types.True
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.<# 110# a#) of wild3 {
                                  GHC.Types.False
                                  -> GHC.Types.:
                                       @ Lib.UChr
                                       (GHC.Prim.tagToEnum# @ Lib.UChr a#)
                                       (GHC.Types.[] @ Lib.UChr)
                                  GHC.Types.True -> GHC.Types.[] @ Lib.UChr } } }
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# b# a#) of wild1 {
                        GHC.Types.False
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.># 0# b#) of wild2 {
                             GHC.Types.False
                             -> GHC.Types.:
                                  @ Lib.UChr
                                  (GHC.Prim.tagToEnum# @ Lib.UChr a#)
                                  (let {
                                     delta :: GHC.Prim.Int# = GHC.Prim.-# b# a#
                                   } in
                                   let {
                                     y' :: GHC.Prim.Int# = GHC.Prim.-# 0# delta
                                   } in
                                   letrec {
                                     go_dn :: GHC.Prim.Int# -> [Lib.UChr]
                                       {- Arity: 1, Strictness: <S,U> -}
                                     = \ (x :: GHC.Prim.Int#) ->
                                       case GHC.Prim.tagToEnum#
                                              @ GHC.Types.Bool
                                              (GHC.Prim.<# x y') of wild3 {
                                         GHC.Types.False
                                         -> GHC.Types.:
                                              @ Lib.UChr
                                              (GHC.Prim.tagToEnum# @ Lib.UChr x)
                                              (go_dn (GHC.Prim.+# x delta))
                                         GHC.Types.True
                                         -> GHC.Types.:
                                              @ Lib.UChr
                                              (GHC.Prim.tagToEnum# @ Lib.UChr x)
                                              (GHC.Types.[] @ Lib.UChr) }
                                   } in
                                   go_dn b#)
                             GHC.Types.True
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.># 0# a#) of wild3 {
                                  GHC.Types.False
                                  -> GHC.Types.:
                                       @ Lib.UChr
                                       (GHC.Prim.tagToEnum# @ Lib.UChr a#)
                                       (GHC.Types.[] @ Lib.UChr)
                                  GHC.Types.True -> GHC.Types.[] @ Lib.UChr } }
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<# 0# b#) of wild2 {
                             GHC.Types.False
                             -> GHC.Types.:
                                  @ Lib.UChr
                                  (GHC.Prim.tagToEnum# @ Lib.UChr a#)
                                  (let {
                                     delta :: GHC.Prim.Int# = GHC.Prim.-# b# a#
                                   } in
                                   let {
                                     y' :: GHC.Prim.Int# = GHC.Prim.-# 0# delta
                                   } in
                                   letrec {
                                     go_up :: GHC.Prim.Int# -> [Lib.UChr]
                                       {- Arity: 1, Strictness: <S,U> -}
                                     = \ (x :: GHC.Prim.Int#) ->
                                       case GHC.Prim.tagToEnum#
                                              @ GHC.Types.Bool
                                              (GHC.Prim.># x y') of wild3 {
                                         GHC.Types.False
                                         -> GHC.Types.:
                                              @ Lib.UChr
                                              (GHC.Prim.tagToEnum# @ Lib.UChr x)
                                              (go_up (GHC.Prim.+# x delta))
                                         GHC.Types.True
                                         -> GHC.Types.:
                                              @ Lib.UChr
                                              (GHC.Prim.tagToEnum# @ Lib.UChr x)
                                              (GHC.Types.[] @ Lib.UChr) }
                                   } in
                                   go_up b#)
                             GHC.Types.True
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.<# 0# a#) of wild3 {
                                  GHC.Types.False
                                  -> GHC.Types.:
                                       @ Lib.UChr
                                       (GHC.Prim.tagToEnum# @ Lib.UChr a#)
                                       (GHC.Types.[] @ Lib.UChr)
                                  GHC.Types.True -> GHC.Types.[] @ Lib.UChr } } } } } }) -}
8c7f5d294706d5be2e2968524bb42a6a
  $fEnumUChr_$cenumFromThenTo ::
    Lib.UChr -> Lib.UChr -> Lib.UChr -> [Lib.UChr]
  {- Arity: 3, Strictness: <S,U><S,U><S,U> -}
8c7f5d294706d5be2e2968524bb42a6a
  $fEnumUChr_$cenumFromTo :: Lib.UChr -> Lib.UChr -> [Lib.UChr]
  {- Arity: 2, Strictness: <S,U><S,U>,
     Unfolding: (\ (x :: Lib.UChr) (y :: Lib.UChr) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr y of a#1 { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.># a# a#1) of wild {
                   GHC.Types.False
                   -> letrec {
                        go16 :: GHC.Prim.Int# -> [Lib.UChr]
                          {- Arity: 1, Strictness: <L,U> -}
                        = \ (x1 :: GHC.Prim.Int#) ->
                          GHC.Types.:
                            @ Lib.UChr
                            (case GHC.Prim.tagToEnum#
                                    @ GHC.Types.Bool
                                    (GHC.Prim.>=# x1 0#) of wild1 {
                               GHC.Types.False -> Lib.$wlvl1 x1
                               GHC.Types.True
                               -> case GHC.Prim.tagToEnum#
                                         @ GHC.Types.Bool
                                         (GHC.Prim.<=# x1 110#) of wild2 {
                                    GHC.Types.False -> Lib.$wlvl1 x1
                                    GHC.Types.True -> GHC.Prim.tagToEnum# @ Lib.UChr x1 } })
                            (case GHC.Prim.tagToEnum#
                                    @ GHC.Types.Bool
                                    (GHC.Prim.==# x1 a#1) of wild1 {
                               GHC.Types.False -> go16 (GHC.Prim.+# x1 1#)
                               GHC.Types.True -> GHC.Types.[] @ Lib.UChr })
                      } in
                      go16 a#
                   GHC.Types.True -> GHC.Types.[] @ Lib.UChr } } }) -}
8c7f5d294706d5be2e2968524bb42a6a
  $fEnumUChr_$cfromEnum :: Lib.UChr -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,U>m,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: Lib.UChr) ->
                 case a of x1 { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x1 of a# { DEFAULT ->
                 GHC.Types.I# a# } }) -}
8c7f5d294706d5be2e2968524bb42a6a
  $fEnumUChr_$cpred :: Lib.UChr -> Lib.UChr
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: Lib.UChr) ->
                 case a of x1 { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x1 of a# {
                   DEFAULT -> GHC.Prim.tagToEnum# @ Lib.UChr (GHC.Prim.+# a# -1#)
                   0# -> Lib.$fEnumUChr1 } }) -}
8c7f5d294706d5be2e2968524bb42a6a
  $fEnumUChr_$csucc :: Lib.UChr -> Lib.UChr
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: Lib.UChr) ->
                 case a of x1 { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x1 of a# {
                   DEFAULT -> GHC.Prim.tagToEnum# @ Lib.UChr (GHC.Prim.+# a# 1#)
                   110# -> Lib.$fEnumUChr2 } }) -}
8c7f5d294706d5be2e2968524bb42a6a
  $fEnumUChr_$ctoEnum :: GHC.Types.Int -> Lib.UChr
  {- Arity: 1, Strictness: <S(S),1*U(U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Types.Int) ->
                 case w of ww { GHC.Types.I# ww1 -> Lib.$w$ctoEnum1 ww1 }) -}
8c7f5d294706d5be2e2968524bb42a6a
  $fEnumUChr_go :: GHC.Prim.Int# -> [Lib.UChr]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m2 -}
c13536c0ddcfc999f8a708d0f6fd76f1
  $fEqAlignedRead :: GHC.Classes.Eq Lib.AlignedRead
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.AlignedRead
                  Lib.$fEqAlignedRead_$c==
                  Lib.$fEqAlignedRead_$c/= -}
c13536c0ddcfc999f8a708d0f6fd76f1
  $fEqAlignedRead_$c/= ::
    Lib.AlignedRead -> Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LLLS)LLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(1*U(U,U,U,U),1*U(U),U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,1*U,1*U,1*U(U,U,U,U)),1*U)><S(S(LLLS)LLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(1*U(U,U,U,U),1*U(U),U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,1*U,1*U,1*U(U,U,U,U)),1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.AlignedRead) (b :: Lib.AlignedRead) ->
                 case Lib.$fEqAlignedRead_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  $fEqAlignedRead_$c== ::
    Lib.AlignedRead -> Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LLLS)LLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(1*U(U,U,U,U),1*U(U),U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,1*U,1*U,1*U(U,U,U,U)),1*U)><S(S(LLLS)LLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(1*U(U,U,U,U),1*U(U),U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,1*U,1*U,1*U(U,U,U,U)),1*U)> -}
b27cefdd8405a17038845775c0c42c29
  $fEqBEDPE :: GHC.Classes.Eq Lib.BEDPE
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.BEDPE Lib.$fEqBEDPE_$c== Lib.$fEqBEDPE_$c/= -}
b27cefdd8405a17038845775c0c42c29
  $fEqBEDPE_$c/= :: Lib.BEDPE -> Lib.BEDPE -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLL),1*U(U,1*U,1*U,U,1*U,1*U,1*U(U,U,U,U))><S(SLLLLLL),1*U(U,1*U,1*U,U,1*U,1*U,1*U(U,U,U,U))>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.BEDPE) (b :: Lib.BEDPE) ->
                 case Lib.$fEqBEDPE_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
b27cefdd8405a17038845775c0c42c29
  $fEqBEDPE_$c== :: Lib.BEDPE -> Lib.BEDPE -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLL),1*U(U,1*U,1*U,U,1*U,1*U,1*U(U,U,U,U))><S(SLLLLLL),1*U(U,1*U,1*U,U,1*U,1*U,1*U(U,U,U,U))>,
     Unfolding: (\ (ds6 :: Lib.BEDPE) (ds7 :: Lib.BEDPE) ->
                 case ds6 of wild { Lib.BEDPE a1 a2 a3 a4 a5 a6 a7 ->
                 case ds7 of wild1 { Lib.BEDPE b1 b2 b3 b4 b5 b6 b7 ->
                 case GHC.Prim.dataToTag# @ Lib.UChr a1 of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr b1 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==# a# b#) of wild2 {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case GHC.Integer.Type.eqInteger# a2 b2 of wild3 { DEFAULT ->
                      case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild3 of wild4 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case GHC.Integer.Type.eqInteger# a3 b3 of wild5 { DEFAULT ->
                           case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild5 of wild6 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> case GHC.Prim.dataToTag# @ Lib.UChr a4 of a#1 { DEFAULT ->
                                case GHC.Prim.dataToTag# @ Lib.UChr b4 of b#1 { DEFAULT ->
                                case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.==# a#1 b#1) of wild7 {
                                  GHC.Types.False -> GHC.Types.False
                                  GHC.Types.True
                                  -> case GHC.Integer.Type.eqInteger# a5 b5 of wild8 { DEFAULT ->
                                     case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild8 of wild9 {
                                       GHC.Types.False -> GHC.Types.False
                                       GHC.Types.True
                                       -> case GHC.Integer.Type.eqInteger#
                                                 a6
                                                 b6 of wild10 { DEFAULT ->
                                          case GHC.Prim.tagToEnum#
                                                 @ GHC.Types.Bool
                                                 wild10 of wild11 {
                                            GHC.Types.False -> GHC.Types.False
                                            GHC.Types.True
                                            -> Data.ByteString.Internal.eq
                                                 a7
                                                 b7 } } } } } } } } } } } } } } } }) -}
629d9d543a825463dd90ec69a5fb19f7
  $fEqBedRecord :: GHC.Classes.Eq Lib.BedRecord
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.BedRecord Lib.$fEqBedRecord_$c== Lib.$fEqBedRecord_$c/= -}
629d9d543a825463dd90ec69a5fb19f7
  $fEqBedRecord_$c/= ::
    Lib.BedRecord -> Lib.BedRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(U,1*U,1*U,1*U(U,U,U,U))><S(SLLL),1*U(U,1*U,1*U,1*U(U,U,U,U))>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.BedRecord) (b :: Lib.BedRecord) ->
                 case Lib.$fEqBedRecord_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
629d9d543a825463dd90ec69a5fb19f7
  $fEqBedRecord_$c== ::
    Lib.BedRecord -> Lib.BedRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(U,1*U,1*U,1*U(U,U,U,U))><S(SLLL),1*U(U,1*U,1*U,1*U(U,U,U,U))>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.BedRecord) (w1 :: Lib.BedRecord) ->
                 case w of ww { Lib.BedRecord ww1 ww2 ww3 ww4 ->
                 case w1 of ww5 { Lib.BedRecord ww6 ww7 ww8 ww9 ->
                 Lib.$w$c== ww1 ww2 ww3 ww4 ww6 ww7 ww8 ww9 } }) -}
e1e6de4207e3ff4889dbcac2af544cf2
  $fEqChromNameFormat :: GHC.Classes.Eq Lib.ChromNameFormat
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.ChromNameFormat
                  Lib.$fEqChromNameFormat_$c==
                  Lib.$fEqChromNameFormat_$c/= -}
e1e6de4207e3ff4889dbcac2af544cf2
  $fEqChromNameFormat_$c/= ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.ChromNameFormat) (b :: Lib.ChromNameFormat) ->
                 case a of wild {
                   Lib.GRC
                   -> case b of wild1 {
                        Lib.GRC -> GHC.Types.False Lib.UCSC -> GHC.Types.True }
                   Lib.UCSC
                   -> case b of wild1 {
                        Lib.GRC -> GHC.Types.True Lib.UCSC -> GHC.Types.False } }) -}
e1e6de4207e3ff4889dbcac2af544cf2
  $fEqChromNameFormat_$c== ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds6 :: Lib.ChromNameFormat) (ds7 :: Lib.ChromNameFormat) ->
                 case ds6 of wild {
                   Lib.GRC
                   -> case ds7 of wild1 {
                        Lib.GRC -> GHC.Types.True Lib.UCSC -> GHC.Types.False }
                   Lib.UCSC
                   -> case ds7 of wild1 {
                        Lib.GRC -> GHC.Types.False Lib.UCSC -> GHC.Types.True } }) -}
6f19773577bdf1a116e6a2279d330c12
  $fEqCigarMod :: GHC.Classes.Eq Lib.CigarMod
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.CigarMod Lib.$fEqCigarMod_$c== Lib.$fEqCigarMod_$c/= -}
6f19773577bdf1a116e6a2279d330c12
  $fEqCigarMod_$c/= :: Lib.CigarMod -> Lib.CigarMod -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLL),1*U(1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U)><S(SLLLL),1*U(1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.CigarMod) (b :: Lib.CigarMod) ->
                 case Lib.$fEqCigarMod_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
6f19773577bdf1a116e6a2279d330c12
  $fEqCigarMod_$c== :: Lib.CigarMod -> Lib.CigarMod -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLL),1*U(1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U)><S(SLLLL),1*U(1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.CigarMod) (w1 :: Lib.CigarMod) ->
                 case w of ww { Lib.CigarMod ww1 ww2 ww3 ww4 ww5 ->
                 case w1 of ww6 { Lib.CigarMod ww7 ww8 ww9 ww10 ww11 ->
                 Lib.$w$c==1 ww1 ww2 ww3 ww4 ww5 ww7 ww8 ww9 ww10 ww11 } }) -}
1b5721207ca1189d551bcd24be98a5dc
  $fEqMasterRecord :: GHC.Classes.Eq Lib.MasterRecord
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.MasterRecord
                  Lib.$fEqMasterRecord_$c==
                  Lib.$fEqMasterRecord_$c/= -}
1b5721207ca1189d551bcd24be98a5dc
  $fEqMasterRecord_$c/= ::
    Lib.MasterRecord -> Lib.MasterRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(U,1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U))><S(SLLLLLLLLLLL),1*U(U,1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U))>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.MasterRecord) (b :: Lib.MasterRecord) ->
                 case Lib.$fEqMasterRecord_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
1b5721207ca1189d551bcd24be98a5dc
  $fEqMasterRecord_$c== ::
    Lib.MasterRecord -> Lib.MasterRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(U,1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U))><S(SLLLLLLLLLLL),1*U(U,1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U))> -}
b5f7c91e0a039228d8ca476cc3bdf320
  $fEqMidFamily :: GHC.Classes.Eq Lib.MidFamily
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.MidFamily Lib.$fEqMidFamily_$c== Lib.$fEqMidFamily_$c/= -}
b5f7c91e0a039228d8ca476cc3bdf320
  $fEqMidFamily_$c/= ::
    Lib.MidFamily -> Lib.MidFamily -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLL),1*U(U,1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U(U,1*U,1*U,1*U(U,U,U,U)))><S(SLLLLLLLLL),1*U(U,1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U(U,1*U,1*U,1*U(U,U,U,U)))>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.MidFamily) (b :: Lib.MidFamily) ->
                 case Lib.$fEqMidFamily_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
b5f7c91e0a039228d8ca476cc3bdf320
  $fEqMidFamily_$c== ::
    Lib.MidFamily -> Lib.MidFamily -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLL),1*U(U,1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U(U,1*U,1*U,1*U(U,U,U,U)))><S(SLLLLLLLLL),1*U(U,1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U(U,1*U,1*U,1*U(U,U,U,U)))> -}
f1e8a13132b4d566d11f9275b6e14c57
  $fEqOpts :: GHC.Classes.Eq Lib.Opts
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:. @ Lib.Opts Lib.$fEqOpts_$c== Lib.$fEqOpts_$c/= -}
f1e8a13132b4d566d11f9275b6e14c57
  $fEqOpts_$c/= :: Lib.Opts -> Lib.Opts -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLL),1*U(1*U,1*U,1*U,1*U,1*U)><S(SLLLL),1*U(1*U,1*U,1*U,1*U,1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.Opts) (b :: Lib.Opts) ->
                 case Lib.$fEqOpts_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
f1e8a13132b4d566d11f9275b6e14c57
  $fEqOpts_$c== :: Lib.Opts -> Lib.Opts -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLL),1*U(1*U,1*U,1*U,1*U,1*U)><S(SLLLL),1*U(1*U,1*U,1*U,1*U,1*U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.Opts) (w1 :: Lib.Opts) ->
                 case w of ww { Lib.Opts ww1 ww2 ww3 ww4 ww5 ->
                 case w1 of ww6 { Lib.Opts ww7 ww8 ww9 ww10 ww11 ->
                 Lib.$w$c==2 ww1 ww2 ww3 ww4 ww5 ww7 ww8 ww9 ww10 ww11 } }) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  $fEqPairedAln :: GHC.Classes.Eq Lib.PairedAln
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.PairedAln Lib.$fEqPairedAln_$c== Lib.$fEqPairedAln_$c/= -}
c13536c0ddcfc999f8a708d0f6fd76f1
  $fEqPairedAln_$c/= ::
    Lib.PairedAln -> Lib.PairedAln -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S(LLLS)LLLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(1*U(1*U(U,U,U,U),1*U(U),U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,1*U,1*U,1*U(U,U,U,U)),1*U),1*U(1*U(U,U,U,U),1*U(U),U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,1*U,1*U,1*U(U,U,U,U)),1*U),1*U,1*U)><S(S(S(LLLS)LLLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(1*U(1*U(U,U,U,U),1*U(U),U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,1*U,1*U,1*U(U,U,U,U)),1*U),1*U(1*U(U,U,U,U),1*U(U),U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,1*U,1*U,1*U(U,U,U,U)),1*U),1*U,1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.PairedAln) (b :: Lib.PairedAln) ->
                 case Lib.$fEqPairedAln_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  $fEqPairedAln_$c== ::
    Lib.PairedAln -> Lib.PairedAln -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S(LLLS)LLLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(1*U(1*U(U,U,U,U),1*U(U),U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,1*U,1*U,1*U(U,U,U,U)),1*U),1*U(1*U(U,U,U,U),1*U(U),U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,1*U,1*U,1*U(U,U,U,U)),1*U),1*U,1*U)><S(S(S(LLLS)LLLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(1*U(1*U(U,U,U,U),1*U(U),U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,1*U,1*U,1*U(U,U,U,U)),1*U),1*U(1*U(U,U,U,U),1*U(U),U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,1*U,1*U,1*U(U,U,U,U)),1*U),1*U,1*U)>,
     Unfolding: (\ (ds6 :: Lib.PairedAln) (ds7 :: Lib.PairedAln) ->
                 case ds6 of wild { Lib.PairedAln a1 a2 a3 a4 ->
                 case ds7 of wild1 { Lib.PairedAln b1 b2 b3 b4 ->
                 case Lib.$fEqAlignedRead_$c== a1 b1 of wild2 {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case Lib.$fEqAlignedRead_$c== a2 b2 of wild3 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case GHC.Classes.$fEq[]_$c==
                                  @ Lib.AlignedRead
                                  Lib.$fEqAlignedRead
                                  a3
                                  b3 of wild4 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> GHC.Classes.$fEq[]_$c==
                                  @ Lib.AlignedRead
                                  Lib.$fEqAlignedRead
                                  a4
                                  b4 } } } } }) -}
ee93d4d492885470c77de705e87ad292
  $fEqRunStats :: GHC.Classes.Eq Lib.RunStats
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.RunStats Lib.$fEqRunStats_$c== Lib.$fEqRunStats_$c/= -}
ee93d4d492885470c77de705e87ad292
  $fEqRunStats_$c/= :: Lib.RunStats -> Lib.RunStats -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLL),1*U(1*U,1*U,1*U,1*U,1*U(U),1*U(U))><S(SLLLLL),1*U(1*U,1*U,1*U,1*U,1*U(U),1*U(U))>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.RunStats) (b :: Lib.RunStats) ->
                 case Lib.$fEqRunStats_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
ee93d4d492885470c77de705e87ad292
  $fEqRunStats_$c== :: Lib.RunStats -> Lib.RunStats -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLL),1*U(1*U,1*U,1*U,1*U,1*U(U),1*U(U))><S(SLLLLL),1*U(1*U,1*U,1*U,1*U,1*U(U),1*U(U))>,
     Unfolding: (\ (ds6 :: Lib.RunStats) (ds7 :: Lib.RunStats) ->
                 case ds6 of wild { Lib.RunStats a1 a2 a3 a4 a5 a6 ->
                 case ds7 of wild1 { Lib.RunStats b1 b2 b3 b4 b5 b6 ->
                 case GHC.Integer.Type.eqInteger# a1 b1 of wild2 { DEFAULT ->
                 case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild2 of wild3 {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case GHC.Integer.Type.eqInteger# a2 b2 of wild4 { DEFAULT ->
                      case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild4 of wild5 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case GHC.Integer.Type.eqInteger# a3 b3 of wild6 { DEFAULT ->
                           case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild6 of wild7 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> case GHC.Integer.Type.eqInteger# a4 b4 of wild8 { DEFAULT ->
                                case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild8 of wild9 {
                                  GHC.Types.False -> GHC.Types.False
                                  GHC.Types.True
                                  -> case a5 of wild10 { GHC.Types.D# x ->
                                     case b5 of wild11 { GHC.Types.D# y ->
                                     case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.==## x y) of wild12 {
                                       GHC.Types.False -> GHC.Types.False
                                       GHC.Types.True
                                       -> GHC.Classes.eqDouble a6 b6 } } } } } } } } } } } } }) -}
702609d8da67b0d9f67ab238dcd1cdb7
  $fEqSAMFlag :: GHC.Classes.Eq Lib.SAMFlag
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.SAMFlag Lib.$fEqSAMFlag_$c== Lib.$fEqSAMFlag_$c/= -}
702609d8da67b0d9f67ab238dcd1cdb7
  $fEqSAMFlag_$c/= :: Lib.SAMFlag -> Lib.SAMFlag -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U))><S(SLLLLLLLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U))>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.SAMFlag) (b :: Lib.SAMFlag) ->
                 case Lib.$fEqSAMFlag_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
702609d8da67b0d9f67ab238dcd1cdb7
  $fEqSAMFlag_$c== :: Lib.SAMFlag -> Lib.SAMFlag -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U))><S(SLLLLLLLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U))> -}
8c7f5d294706d5be2e2968524bb42a6a
  $fEqUChr :: GHC.Classes.Eq Lib.UChr
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:. @ Lib.UChr Lib.$fEqUChr_$c== Lib.$fEqUChr_$c/= -}
8c7f5d294706d5be2e2968524bb42a6a
  $fEqUChr_$c/= :: Lib.UChr -> Lib.UChr -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.UChr) (b :: Lib.UChr) ->
                 case a of x1 { DEFAULT ->
                 case b of x2 { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x1 of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==# a# b#) of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False } } } } }) -}
8c7f5d294706d5be2e2968524bb42a6a
  $fEqUChr_$c== :: Lib.UChr -> Lib.UChr -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.UChr) (b :: Lib.UChr) ->
                 case a of x1 { DEFAULT ->
                 case b of x2 { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x1 of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x2 of b# { DEFAULT ->
                 GHC.Prim.tagToEnum#
                   @ GHC.Types.Bool
                   (GHC.Prim.==# a# b#) } } } }) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  $fGenericAlignedRead :: GHC.Generics.Generic Lib.AlignedRead
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.AlignedRead
                  Lib.$fGenericAlignedRead1
                    `cast`
                  (forall (x :: <*>_N).
                   <Lib.AlignedRead>_R
                   ->_R Trans
                            (Sym (GHC.Generics.N:M1[0]
                                      <*>_N
                                      <GHC.Generics.D>_P
                                      <'GHC.Generics.MetaData
                                         "AlignedRead"
                                         "Lib"
                                         "primerclip-0.3.5.0-EKfIVVkqmIVLNVlfKBtA8g"
                                         'GHC.Types.False>_P
                                      <GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "AlignedRead" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                         ((((GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "qname")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString)
                                             GHC.Generics.:*: (GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Base.Just "flag")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R GHC.Types.Int)
                                                               GHC.Generics.:*: GHC.Generics.M1
                                                                                  GHC.Generics.S
                                                                                  ('GHC.Generics.MetaSel
                                                                                     ('GHC.Base.Just
                                                                                        "rname")
                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                     'GHC.Generics.DecidedLazy)
                                                                                  (GHC.Generics.K1
                                                                                     GHC.Generics.R
                                                                                     Lib.UChr)))
                                            GHC.Generics.:*: ((GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Base.Just "pos")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    GHC.Integer.Type.Integer)
                                                               GHC.Generics.:*: GHC.Generics.M1
                                                                                  GHC.Generics.S
                                                                                  ('GHC.Generics.MetaSel
                                                                                     ('GHC.Base.Just
                                                                                        "endpos")
                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                     'GHC.Generics.DecidedLazy)
                                                                                  (GHC.Generics.K1
                                                                                     GHC.Generics.R
                                                                                     GHC.Integer.Type.Integer))
                                                              GHC.Generics.:*: (GHC.Generics.M1
                                                                                  GHC.Generics.S
                                                                                  ('GHC.Generics.MetaSel
                                                                                     ('GHC.Base.Just
                                                                                        "mapqual")
                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                     'GHC.Generics.DecidedLazy)
                                                                                  (GHC.Generics.K1
                                                                                     GHC.Generics.R
                                                                                     GHC.Integer.Type.Integer)
                                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                                   GHC.Generics.S
                                                                                                   ('GHC.Generics.MetaSel
                                                                                                      ('GHC.Base.Just
                                                                                                         "cigar")
                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                   (GHC.Generics.K1
                                                                                                      GHC.Generics.R
                                                                                                      Data.ByteString.Internal.ByteString))))
                                           GHC.Generics.:*: (((GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Base.Just "trimdcigar")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    Data.ByteString.Internal.ByteString)
                                                               GHC.Generics.:*: GHC.Generics.M1
                                                                                  GHC.Generics.S
                                                                                  ('GHC.Generics.MetaSel
                                                                                     ('GHC.Base.Just
                                                                                        "cigmap")
                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                     'GHC.Generics.DecidedLazy)
                                                                                  (GHC.Generics.K1
                                                                                     GHC.Generics.R
                                                                                     Lib.CigarMap))
                                                              GHC.Generics.:*: (GHC.Generics.M1
                                                                                  GHC.Generics.S
                                                                                  ('GHC.Generics.MetaSel
                                                                                     ('GHC.Base.Just
                                                                                        "trimdcigmap")
                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                     'GHC.Generics.DecidedLazy)
                                                                                  (GHC.Generics.K1
                                                                                     GHC.Generics.R
                                                                                     Lib.CigarMap)
                                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                                   GHC.Generics.S
                                                                                                   ('GHC.Generics.MetaSel
                                                                                                      ('GHC.Base.Just
                                                                                                         "rnext")
                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                   (GHC.Generics.K1
                                                                                                      GHC.Generics.R
                                                                                                      Data.ByteString.Internal.ByteString)))
                                                             GHC.Generics.:*: ((GHC.Generics.M1
                                                                                  GHC.Generics.S
                                                                                  ('GHC.Generics.MetaSel
                                                                                     ('GHC.Base.Just
                                                                                        "pnext")
                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                     'GHC.Generics.DecidedLazy)
                                                                                  (GHC.Generics.K1
                                                                                     GHC.Generics.R
                                                                                     GHC.Integer.Type.Integer)
                                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                                   GHC.Generics.S
                                                                                                   ('GHC.Generics.MetaSel
                                                                                                      ('GHC.Base.Just
                                                                                                         "tlen")
                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                   (GHC.Generics.K1
                                                                                                      GHC.Generics.R
                                                                                                      GHC.Integer.Type.Integer))
                                                                               GHC.Generics.:*: (GHC.Generics.M1
                                                                                                   GHC.Generics.S
                                                                                                   ('GHC.Generics.MetaSel
                                                                                                      ('GHC.Base.Just
                                                                                                         "refseq")
                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                   (GHC.Generics.K1
                                                                                                      GHC.Generics.R
                                                                                                      Data.ByteString.Internal.ByteString)
                                                                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                                                                    GHC.Generics.S
                                                                                                                    ('GHC.Generics.MetaSel
                                                                                                                       ('GHC.Base.Just
                                                                                                                          "basequal")
                                                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                                                       'GHC.Generics.DecidedLazy)
                                                                                                                    (GHC.Generics.K1
                                                                                                                       GHC.Generics.R
                                                                                                                       Data.ByteString.Internal.ByteString)))))
                                          GHC.Generics.:*: ((((GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Base.Just "optfields")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    Data.ByteString.Internal.ByteString)
                                                               GHC.Generics.:*: GHC.Generics.M1
                                                                                  GHC.Generics.S
                                                                                  ('GHC.Generics.MetaSel
                                                                                     ('GHC.Base.Just
                                                                                        "strand")
                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                     'GHC.Generics.DecidedLazy)
                                                                                  (GHC.Generics.K1
                                                                                     GHC.Generics.R
                                                                                     Data.ByteString.Internal.ByteString))
                                                              GHC.Generics.:*: (GHC.Generics.M1
                                                                                  GHC.Generics.S
                                                                                  ('GHC.Generics.MetaSel
                                                                                     ('GHC.Base.Just
                                                                                        "paired")
                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                     'GHC.Generics.DecidedLazy)
                                                                                  (GHC.Generics.K1
                                                                                     GHC.Generics.R
                                                                                     GHC.Types.Bool)
                                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                                   GHC.Generics.S
                                                                                                   ('GHC.Generics.MetaSel
                                                                                                      ('GHC.Base.Just
                                                                                                         "mapped")
                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                   (GHC.Generics.K1
                                                                                                      GHC.Generics.R
                                                                                                      GHC.Types.Bool)))
                                                             GHC.Generics.:*: ((GHC.Generics.M1
                                                                                  GHC.Generics.S
                                                                                  ('GHC.Generics.MetaSel
                                                                                     ('GHC.Base.Just
                                                                                        "fint")
                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                     'GHC.Generics.DecidedLazy)
                                                                                  (GHC.Generics.K1
                                                                                     GHC.Generics.R
                                                                                     [Lib.BedRecord])
                                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                                   GHC.Generics.S
                                                                                                   ('GHC.Generics.MetaSel
                                                                                                      ('GHC.Base.Just
                                                                                                         "rint")
                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                   (GHC.Generics.K1
                                                                                                      GHC.Generics.R
                                                                                                      [Lib.BedRecord]))
                                                                               GHC.Generics.:*: (GHC.Generics.M1
                                                                                                   GHC.Generics.S
                                                                                                   ('GHC.Generics.MetaSel
                                                                                                      ('GHC.Base.Just
                                                                                                         "pintflag")
                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                   (GHC.Generics.K1
                                                                                                      GHC.Generics.R
                                                                                                      GHC.Types.Bool)
                                                                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                                                                    GHC.Generics.S
                                                                                                                    ('GHC.Generics.MetaSel
                                                                                                                       ('GHC.Base.Just
                                                                                                                          "trimdflag")
                                                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                                                       'GHC.Generics.DecidedLazy)
                                                                                                                    (GHC.Generics.K1
                                                                                                                       GHC.Generics.R
                                                                                                                       GHC.Types.Bool))))
                                                            GHC.Generics.:*: (((GHC.Generics.M1
                                                                                  GHC.Generics.S
                                                                                  ('GHC.Generics.MetaSel
                                                                                     ('GHC.Base.Just
                                                                                        "trimdpos")
                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                     'GHC.Generics.DecidedLazy)
                                                                                  (GHC.Generics.K1
                                                                                     GHC.Generics.R
                                                                                     GHC.Integer.Type.Integer)
                                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                                   GHC.Generics.S
                                                                                                   ('GHC.Generics.MetaSel
                                                                                                      ('GHC.Base.Just
                                                                                                         "trimdendpos")
                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                   (GHC.Generics.K1
                                                                                                      GHC.Generics.R
                                                                                                      GHC.Integer.Type.Integer))
                                                                               GHC.Generics.:*: (GHC.Generics.M1
                                                                                                   GHC.Generics.S
                                                                                                   ('GHC.Generics.MetaSel
                                                                                                      ('GHC.Base.Just
                                                                                                         "headerstrings")
                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                   (GHC.Generics.K1
                                                                                                      GHC.Generics.R
                                                                                                      Lib.Header)
                                                                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                                                                    GHC.Generics.S
                                                                                                                    ('GHC.Generics.MetaSel
                                                                                                                       ('GHC.Base.Just
                                                                                                                          "isheader")
                                                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                                                       'GHC.Generics.DecidedLazy)
                                                                                                                    (GHC.Generics.K1
                                                                                                                       GHC.Generics.R
                                                                                                                       GHC.Types.Bool)))
                                                                              GHC.Generics.:*: ((GHC.Generics.M1
                                                                                                   GHC.Generics.S
                                                                                                   ('GHC.Generics.MetaSel
                                                                                                      ('GHC.Base.Just
                                                                                                         "mid")
                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                   (GHC.Generics.K1
                                                                                                      GHC.Generics.R
                                                                                                      Data.ByteString.Internal.ByteString)
                                                                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                                                                    GHC.Generics.S
                                                                                                                    ('GHC.Generics.MetaSel
                                                                                                                       ('GHC.Base.Just
                                                                                                                          "xmid")
                                                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                                                       'GHC.Generics.DecidedLazy)
                                                                                                                    (GHC.Generics.K1
                                                                                                                       GHC.Generics.R
                                                                                                                       Data.ByteString.Internal.ByteString))
                                                                                                GHC.Generics.:*: (GHC.Generics.M1
                                                                                                                    GHC.Generics.S
                                                                                                                    ('GHC.Generics.MetaSel
                                                                                                                       ('GHC.Base.Just
                                                                                                                          "tbed")
                                                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                                                       'GHC.Generics.DecidedLazy)
                                                                                                                    (GHC.Generics.K1
                                                                                                                       GHC.Generics.R
                                                                                                                       Lib.BedRecord)
                                                                                                                  GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                     GHC.Generics.S
                                                                                                                                     ('GHC.Generics.MetaSel
                                                                                                                                        ('GHC.Base.Just
                                                                                                                                           "trimdToZeroLength")
                                                                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                                                                        'GHC.Generics.DecidedLazy)
                                                                                                                                     (GHC.Generics.K1
                                                                                                                                        GHC.Generics.R
                                                                                                                                        GHC.Types.Bool))))))>_R))
                            (Sub (Sym (Lib.Rep_AlignedRead[0]))) <x>_N)
                  Lib.$fGenericAlignedRead_$cto -}
c13536c0ddcfc999f8a708d0f6fd76f1
  $fGenericAlignedRead1 ::
    Lib.AlignedRead
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "AlignedRead" 'GHC.Generics.PrefixI 'GHC.Types.True)
         ((((GHC.Generics.M1
               GHC.Generics.S
               ('GHC.Generics.MetaSel
                  ('GHC.Base.Just "qname")
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.NoSourceStrictness
                  'GHC.Generics.DecidedLazy)
               (GHC.Generics.K1
                  GHC.Generics.R Data.ByteString.Internal.ByteString)
             GHC.Generics.:*: (GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Base.Just "flag")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                               GHC.Generics.:*: GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "rname")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1 GHC.Generics.R Lib.UChr)))
            GHC.Generics.:*: ((GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Base.Just "pos")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                               GHC.Generics.:*: GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "endpos")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R GHC.Integer.Type.Integer))
                              GHC.Generics.:*: (GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "mapqual")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R GHC.Integer.Type.Integer)
                                                GHC.Generics.:*: GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Base.Just "cigar")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      Data.ByteString.Internal.ByteString))))
           GHC.Generics.:*: (((GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Base.Just "trimdcigar")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1
                                    GHC.Generics.R Data.ByteString.Internal.ByteString)
                               GHC.Generics.:*: GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "cigmap")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1 GHC.Generics.R Lib.CigarMap))
                              GHC.Generics.:*: (GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "trimdcigmap")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1 GHC.Generics.R Lib.CigarMap)
                                                GHC.Generics.:*: GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Base.Just "rnext")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      Data.ByteString.Internal.ByteString)))
                             GHC.Generics.:*: ((GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "pnext")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R GHC.Integer.Type.Integer)
                                                GHC.Generics.:*: GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Base.Just "tlen")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      GHC.Integer.Type.Integer))
                                               GHC.Generics.:*: (GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Base.Just "refseq")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      Data.ByteString.Internal.ByteString)
                                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                                    GHC.Generics.S
                                                                                    ('GHC.Generics.MetaSel
                                                                                       ('GHC.Base.Just
                                                                                          "basequal")
                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                       'GHC.Generics.DecidedLazy)
                                                                                    (GHC.Generics.K1
                                                                                       GHC.Generics.R
                                                                                       Data.ByteString.Internal.ByteString)))))
          GHC.Generics.:*: ((((GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Base.Just "optfields")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1
                                    GHC.Generics.R Data.ByteString.Internal.ByteString)
                               GHC.Generics.:*: GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "strand")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R
                                                     Data.ByteString.Internal.ByteString))
                              GHC.Generics.:*: (GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "paired")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool)
                                                GHC.Generics.:*: GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Base.Just "mapped")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      GHC.Types.Bool)))
                             GHC.Generics.:*: ((GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "fint")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1 GHC.Generics.R [Lib.BedRecord])
                                                GHC.Generics.:*: GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Base.Just "rint")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      [Lib.BedRecord]))
                                               GHC.Generics.:*: (GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Base.Just "pintflag")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R GHC.Types.Bool)
                                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                                    GHC.Generics.S
                                                                                    ('GHC.Generics.MetaSel
                                                                                       ('GHC.Base.Just
                                                                                          "trimdflag")
                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                       'GHC.Generics.DecidedLazy)
                                                                                    (GHC.Generics.K1
                                                                                       GHC.Generics.R
                                                                                       GHC.Types.Bool))))
                            GHC.Generics.:*: (((GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "trimdpos")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R GHC.Integer.Type.Integer)
                                                GHC.Generics.:*: GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Base.Just "trimdendpos")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      GHC.Integer.Type.Integer))
                                               GHC.Generics.:*: (GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Base.Just
                                                                         "headerstrings")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R Lib.Header)
                                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                                    GHC.Generics.S
                                                                                    ('GHC.Generics.MetaSel
                                                                                       ('GHC.Base.Just
                                                                                          "isheader")
                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                       'GHC.Generics.DecidedLazy)
                                                                                    (GHC.Generics.K1
                                                                                       GHC.Generics.R
                                                                                       GHC.Types.Bool)))
                                              GHC.Generics.:*: ((GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Base.Just "mid")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      Data.ByteString.Internal.ByteString)
                                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                                    GHC.Generics.S
                                                                                    ('GHC.Generics.MetaSel
                                                                                       ('GHC.Base.Just
                                                                                          "xmid")
                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                       'GHC.Generics.DecidedLazy)
                                                                                    (GHC.Generics.K1
                                                                                       GHC.Generics.R
                                                                                       Data.ByteString.Internal.ByteString))
                                                                GHC.Generics.:*: (GHC.Generics.M1
                                                                                    GHC.Generics.S
                                                                                    ('GHC.Generics.MetaSel
                                                                                       ('GHC.Base.Just
                                                                                          "tbed")
                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                       'GHC.Generics.DecidedLazy)
                                                                                    (GHC.Generics.K1
                                                                                       GHC.Generics.R
                                                                                       Lib.BedRecord)
                                                                                  GHC.Generics.:*: GHC.Generics.M1
                                                                                                     GHC.Generics.S
                                                                                                     ('GHC.Generics.MetaSel
                                                                                                        ('GHC.Base.Just
                                                                                                           "trimdToZeroLength")
                                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                                        'GHC.Generics.DecidedLazy)
                                                                                                     (GHC.Generics.K1
                                                                                                        GHC.Generics.R
                                                                                                        GHC.Types.Bool))))))
         x
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>m,
     Unfolding: (\ @ x (x1 :: Lib.AlignedRead) ->
                 case x1 of wild { Lib.AlignedRead g2 g3 g4 g5 g6 g7 g8 g9 g10 g11 g12 g13 g14 g15 g16 g17 g18 g19 g20 g21 g22 g23 g24 g25 g26 g27 g28 g29 g30 g31 g32 ->
                 (GHC.Generics.:*:
                    @ *
                    @ (((GHC.Generics.M1
                           GHC.Generics.S
                           ('GHC.Generics.MetaSel
                              ('GHC.Base.Just "qname")
                              'GHC.Generics.NoSourceUnpackedness
                              'GHC.Generics.NoSourceStrictness
                              'GHC.Generics.DecidedLazy)
                           (GHC.Generics.K1
                              GHC.Generics.R Data.ByteString.Internal.ByteString)
                         GHC.Generics.:*: (GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "flag")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                           GHC.Generics.:*: GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "rname")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R Lib.UChr)))
                        GHC.Generics.:*: ((GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "pos")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R GHC.Integer.Type.Integer)
                                           GHC.Generics.:*: GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "endpos")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 GHC.Integer.Type.Integer))
                                          GHC.Generics.:*: (GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "mapqual")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 GHC.Integer.Type.Integer)
                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "cigar")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  Data.ByteString.Internal.ByteString))))
                       GHC.Generics.:*: (((GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "trimdcigar")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R Data.ByteString.Internal.ByteString)
                                           GHC.Generics.:*: GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "cigmap")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R Lib.CigarMap))
                                          GHC.Generics.:*: (GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "trimdcigmap")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R Lib.CigarMap)
                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "rnext")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  Data.ByteString.Internal.ByteString)))
                                         GHC.Generics.:*: ((GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "pnext")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 GHC.Integer.Type.Integer)
                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "tlen")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  GHC.Integer.Type.Integer))
                                                           GHC.Generics.:*: (GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "refseq")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  Data.ByteString.Internal.ByteString)
                                                                             GHC.Generics.:*: GHC.Generics.M1
                                                                                                GHC.Generics.S
                                                                                                ('GHC.Generics.MetaSel
                                                                                                   ('GHC.Base.Just
                                                                                                      "basequal")
                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                (GHC.Generics.K1
                                                                                                   GHC.Generics.R
                                                                                                   Data.ByteString.Internal.ByteString)))))
                    @ ((((GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "optfields")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1
                               GHC.Generics.R Data.ByteString.Internal.ByteString)
                          GHC.Generics.:*: GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "strand")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R Data.ByteString.Internal.ByteString))
                         GHC.Generics.:*: (GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "paired")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool)
                                           GHC.Generics.:*: GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "mapped")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R GHC.Types.Bool)))
                        GHC.Generics.:*: ((GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "fint")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1 GHC.Generics.R [Lib.BedRecord])
                                           GHC.Generics.:*: GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "rint")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R [Lib.BedRecord]))
                                          GHC.Generics.:*: (GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "pintflag")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R GHC.Types.Bool)
                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "trimdflag")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  GHC.Types.Bool))))
                       GHC.Generics.:*: (((GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "trimdpos")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R GHC.Integer.Type.Integer)
                                           GHC.Generics.:*: GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "trimdendpos")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 GHC.Integer.Type.Integer))
                                          GHC.Generics.:*: (GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "headerstrings")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R Lib.Header)
                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "isheader")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  GHC.Types.Bool)))
                                         GHC.Generics.:*: ((GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "mid")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 Data.ByteString.Internal.ByteString)
                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "xmid")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  Data.ByteString.Internal.ByteString))
                                                           GHC.Generics.:*: (GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "tbed")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  Lib.BedRecord)
                                                                             GHC.Generics.:*: GHC.Generics.M1
                                                                                                GHC.Generics.S
                                                                                                ('GHC.Generics.MetaSel
                                                                                                   ('GHC.Base.Just
                                                                                                      "trimdToZeroLength")
                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                (GHC.Generics.K1
                                                                                                   GHC.Generics.R
                                                                                                   GHC.Types.Bool)))))
                    @ x
                    (GHC.Generics.:*:
                       @ *
                       @ ((GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "qname")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString)
                           GHC.Generics.:*: (GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "flag")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                             GHC.Generics.:*: GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "rname")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R Lib.UChr)))
                          GHC.Generics.:*: ((GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "pos")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R GHC.Integer.Type.Integer)
                                             GHC.Generics.:*: GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "endpos")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R
                                                                   GHC.Integer.Type.Integer))
                                            GHC.Generics.:*: (GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "mapqual")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R
                                                                   GHC.Integer.Type.Integer)
                                                              GHC.Generics.:*: GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "cigar")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    Data.ByteString.Internal.ByteString))))
                       @ (((GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "trimdcigar")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1
                                 GHC.Generics.R Data.ByteString.Internal.ByteString)
                            GHC.Generics.:*: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "cigmap")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1 GHC.Generics.R Lib.CigarMap))
                           GHC.Generics.:*: (GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "trimdcigmap")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1 GHC.Generics.R Lib.CigarMap)
                                             GHC.Generics.:*: GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "rnext")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R
                                                                   Data.ByteString.Internal.ByteString)))
                          GHC.Generics.:*: ((GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "pnext")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R GHC.Integer.Type.Integer)
                                             GHC.Generics.:*: GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "tlen")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R
                                                                   GHC.Integer.Type.Integer))
                                            GHC.Generics.:*: (GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "refseq")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R
                                                                   Data.ByteString.Internal.ByteString)
                                                              GHC.Generics.:*: GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "basequal")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    Data.ByteString.Internal.ByteString))))
                       @ x
                       (GHC.Generics.:*:
                          @ *
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "qname")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1
                                  GHC.Generics.R Data.ByteString.Internal.ByteString)
                             GHC.Generics.:*: (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "flag")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "rname")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R Lib.UChr)))
                          @ ((GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "pos")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "endpos")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R GHC.Integer.Type.Integer))
                             GHC.Generics.:*: (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "mapqual")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R GHC.Integer.Type.Integer)
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "cigar")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     Data.ByteString.Internal.ByteString)))
                          @ x
                          (GHC.Generics.:*:
                             @ *
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "qname")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1
                                     GHC.Generics.R Data.ByteString.Internal.ByteString))
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "flag")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "rname")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1 GHC.Generics.R Lib.UChr))
                             @ x
                             g2
                               `cast`
                             (Trans
                                  (Sym (GHC.Generics.N:K1[0]
                                            <*>_N
                                            <GHC.Generics.R>_P
                                            <Data.ByteString.Internal.ByteString>_R
                                            <x>_P))
                                  (Sym (GHC.Generics.N:M1[0]
                                            <*>_N
                                            <GHC.Generics.S>_P
                                            <'GHC.Generics.MetaSel
                                               ('GHC.Base.Just "qname")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy>_P
                                            <GHC.Generics.K1
                                               GHC.Generics.R
                                               Data.ByteString.Internal.ByteString>_R) <x>_N))
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "flag")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "rname")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R Lib.UChr))
                                @ x
                                g3
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N <GHC.Generics.R>_P <GHC.Types.Int>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "flag")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R GHC.Types.Int>_R) <x>_N))
                                g4
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N <GHC.Generics.R>_P <Lib.UChr>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "rname")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R Lib.UChr>_R) <x>_N))))
                          (GHC.Generics.:*:
                             @ *
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "pos")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "endpos")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1
                                                      GHC.Generics.R GHC.Integer.Type.Integer))
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "mapqual")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "cigar")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1
                                                      GHC.Generics.R
                                                      Data.ByteString.Internal.ByteString))
                             @ x
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "pos")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "endpos")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                                @ x
                                g5
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <GHC.Integer.Type.Integer>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "pos")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  GHC.Integer.Type.Integer>_R) <x>_N))
                                g6
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <GHC.Integer.Type.Integer>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "endpos")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  GHC.Integer.Type.Integer>_R) <x>_N)))
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "mapqual")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "cigar")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1
                                        GHC.Generics.R Data.ByteString.Internal.ByteString))
                                @ x
                                g7
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <GHC.Integer.Type.Integer>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "mapqual")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  GHC.Integer.Type.Integer>_R) <x>_N))
                                g8
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <Data.ByteString.Internal.ByteString>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "cigar")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString>_R) <x>_N)))))
                       (GHC.Generics.:*:
                          @ *
                          @ ((GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "trimdcigar")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1
                                   GHC.Generics.R Data.ByteString.Internal.ByteString)
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "cigmap")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R Lib.CigarMap))
                             GHC.Generics.:*: (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "trimdcigmap")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R Lib.CigarMap)
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "rnext")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     Data.ByteString.Internal.ByteString)))
                          @ ((GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "pnext")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "tlen")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R GHC.Integer.Type.Integer))
                             GHC.Generics.:*: (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "refseq")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R
                                                    Data.ByteString.Internal.ByteString)
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "basequal")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     Data.ByteString.Internal.ByteString)))
                          @ x
                          (GHC.Generics.:*:
                             @ *
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "trimdcigar")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1
                                     GHC.Generics.R Data.ByteString.Internal.ByteString)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "cigmap")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1 GHC.Generics.R Lib.CigarMap))
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "trimdcigmap")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1 GHC.Generics.R Lib.CigarMap)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "rnext")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1
                                                      GHC.Generics.R
                                                      Data.ByteString.Internal.ByteString))
                             @ x
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "trimdcigar")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1
                                        GHC.Generics.R Data.ByteString.Internal.ByteString))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "cigmap")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R Lib.CigarMap))
                                @ x
                                g9
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <Data.ByteString.Internal.ByteString>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "trimdcigar")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString>_R) <x>_N))
                                g10
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N <GHC.Generics.R>_P <Lib.CigarMap>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "cigmap")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R Lib.CigarMap>_R) <x>_N)))
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "trimdcigmap")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R Lib.CigarMap))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "rnext")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1
                                        GHC.Generics.R Data.ByteString.Internal.ByteString))
                                @ x
                                g11
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N <GHC.Generics.R>_P <Lib.CigarMap>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "trimdcigmap")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R Lib.CigarMap>_R) <x>_N))
                                g12
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <Data.ByteString.Internal.ByteString>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "rnext")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString>_R) <x>_N))))
                          (GHC.Generics.:*:
                             @ *
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "pnext")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "tlen")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1
                                                      GHC.Generics.R GHC.Integer.Type.Integer))
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "refseq")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1
                                     GHC.Generics.R Data.ByteString.Internal.ByteString)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "basequal")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1
                                                      GHC.Generics.R
                                                      Data.ByteString.Internal.ByteString))
                             @ x
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "pnext")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "tlen")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                                @ x
                                g13
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <GHC.Integer.Type.Integer>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "pnext")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  GHC.Integer.Type.Integer>_R) <x>_N))
                                g14
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <GHC.Integer.Type.Integer>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "tlen")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  GHC.Integer.Type.Integer>_R) <x>_N)))
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "refseq")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1
                                        GHC.Generics.R Data.ByteString.Internal.ByteString))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "basequal")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1
                                        GHC.Generics.R Data.ByteString.Internal.ByteString))
                                @ x
                                g15
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <Data.ByteString.Internal.ByteString>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "refseq")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString>_R) <x>_N))
                                g16
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <Data.ByteString.Internal.ByteString>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "basequal")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString>_R) <x>_N))))))
                    (GHC.Generics.:*:
                       @ *
                       @ (((GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "optfields")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1
                                 GHC.Generics.R Data.ByteString.Internal.ByteString)
                            GHC.Generics.:*: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "strand")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString))
                           GHC.Generics.:*: (GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "paired")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool)
                                             GHC.Generics.:*: GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "mapped")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R GHC.Types.Bool)))
                          GHC.Generics.:*: ((GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "fint")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1 GHC.Generics.R [Lib.BedRecord])
                                             GHC.Generics.:*: GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "rint")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R [Lib.BedRecord]))
                                            GHC.Generics.:*: (GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "pintflag")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R GHC.Types.Bool)
                                                              GHC.Generics.:*: GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "trimdflag")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    GHC.Types.Bool))))
                       @ (((GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "trimdpos")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                            GHC.Generics.:*: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "trimdendpos")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R GHC.Integer.Type.Integer))
                           GHC.Generics.:*: (GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "headerstrings")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1 GHC.Generics.R Lib.Header)
                                             GHC.Generics.:*: GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "isheader")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R GHC.Types.Bool)))
                          GHC.Generics.:*: ((GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "mid")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString)
                                             GHC.Generics.:*: GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "xmid")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R
                                                                   Data.ByteString.Internal.ByteString))
                                            GHC.Generics.:*: (GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "tbed")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R Lib.BedRecord)
                                                              GHC.Generics.:*: GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "trimdToZeroLength")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    GHC.Types.Bool))))
                       @ x
                       (GHC.Generics.:*:
                          @ *
                          @ ((GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "optfields")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1
                                   GHC.Generics.R Data.ByteString.Internal.ByteString)
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "strand")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R
                                                    Data.ByteString.Internal.ByteString))
                             GHC.Generics.:*: (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "paired")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool)
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "mapped")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     GHC.Types.Bool)))
                          @ ((GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "fint")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R [Lib.BedRecord])
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "rint")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R [Lib.BedRecord]))
                             GHC.Generics.:*: (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "pintflag")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool)
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "trimdflag")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     GHC.Types.Bool)))
                          @ x
                          (GHC.Generics.:*:
                             @ *
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "optfields")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1
                                     GHC.Generics.R Data.ByteString.Internal.ByteString)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "strand")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1
                                                      GHC.Generics.R
                                                      Data.ByteString.Internal.ByteString))
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "paired")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "mapped")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool))
                             @ x
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "optfields")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1
                                        GHC.Generics.R Data.ByteString.Internal.ByteString))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "strand")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1
                                        GHC.Generics.R Data.ByteString.Internal.ByteString))
                                @ x
                                g17
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <Data.ByteString.Internal.ByteString>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "optfields")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString>_R) <x>_N))
                                g18
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <Data.ByteString.Internal.ByteString>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "strand")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString>_R) <x>_N)))
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "paired")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "mapped")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool))
                                @ x
                                g19
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N <GHC.Generics.R>_P <GHC.Types.Bool>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "paired")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R GHC.Types.Bool>_R) <x>_N))
                                g20
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N <GHC.Generics.R>_P <GHC.Types.Bool>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "mapped")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R GHC.Types.Bool>_R) <x>_N))))
                          (GHC.Generics.:*:
                             @ *
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "fint")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1 GHC.Generics.R [Lib.BedRecord])
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "rint")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1 GHC.Generics.R [Lib.BedRecord]))
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "pintflag")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "trimdflag")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool))
                             @ x
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "fint")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R [Lib.BedRecord]))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "rint")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R [Lib.BedRecord]))
                                @ x
                                g21
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N <GHC.Generics.R>_P <[Lib.BedRecord]>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "fint")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R [Lib.BedRecord]>_R) <x>_N))
                                g22
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N <GHC.Generics.R>_P <[Lib.BedRecord]>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "rint")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R [Lib.BedRecord]>_R) <x>_N)))
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "pintflag")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "trimdflag")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool))
                                @ x
                                g23
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N <GHC.Generics.R>_P <GHC.Types.Bool>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "pintflag")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R GHC.Types.Bool>_R) <x>_N))
                                g24
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N <GHC.Generics.R>_P <GHC.Types.Bool>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "trimdflag")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R GHC.Types.Bool>_R) <x>_N)))))
                       (GHC.Generics.:*:
                          @ *
                          @ ((GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "trimdpos")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "trimdendpos")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R GHC.Integer.Type.Integer))
                             GHC.Generics.:*: (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "headerstrings")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R Lib.Header)
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "isheader")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     GHC.Types.Bool)))
                          @ ((GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "mid")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1
                                   GHC.Generics.R Data.ByteString.Internal.ByteString)
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "xmid")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R
                                                    Data.ByteString.Internal.ByteString))
                             GHC.Generics.:*: (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "tbed")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R Lib.BedRecord)
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just
                                                                        "trimdToZeroLength")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     GHC.Types.Bool)))
                          @ x
                          (GHC.Generics.:*:
                             @ *
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "trimdpos")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "trimdendpos")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1
                                                      GHC.Generics.R GHC.Integer.Type.Integer))
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "headerstrings")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1 GHC.Generics.R Lib.Header)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "isheader")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool))
                             @ x
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "trimdpos")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "trimdendpos")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                                @ x
                                g25
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <GHC.Integer.Type.Integer>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "trimdpos")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  GHC.Integer.Type.Integer>_R) <x>_N))
                                g26
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <GHC.Integer.Type.Integer>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "trimdendpos")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  GHC.Integer.Type.Integer>_R) <x>_N)))
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "headerstrings")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R Lib.Header))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "isheader")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool))
                                @ x
                                g27
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N <GHC.Generics.R>_P <Lib.Header>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "headerstrings")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R Lib.Header>_R) <x>_N))
                                g28
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N <GHC.Generics.R>_P <GHC.Types.Bool>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "isheader")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R GHC.Types.Bool>_R) <x>_N))))
                          (GHC.Generics.:*:
                             @ *
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "mid")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1
                                     GHC.Generics.R Data.ByteString.Internal.ByteString)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "xmid")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1
                                                      GHC.Generics.R
                                                      Data.ByteString.Internal.ByteString))
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "tbed")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1 GHC.Generics.R Lib.BedRecord)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "trimdToZeroLength")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool))
                             @ x
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "mid")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1
                                        GHC.Generics.R Data.ByteString.Internal.ByteString))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "xmid")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1
                                        GHC.Generics.R Data.ByteString.Internal.ByteString))
                                @ x
                                g29
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <Data.ByteString.Internal.ByteString>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "mid")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString>_R) <x>_N))
                                g30
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <Data.ByteString.Internal.ByteString>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "xmid")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString>_R) <x>_N)))
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "tbed")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R Lib.BedRecord))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "trimdToZeroLength")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool))
                                @ x
                                g31
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N <GHC.Generics.R>_P <Lib.BedRecord>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "tbed")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R Lib.BedRecord>_R) <x>_N))
                                g32
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N <GHC.Generics.R>_P <GHC.Types.Bool>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "trimdToZeroLength")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R GHC.Types.Bool>_R) <x>_N)))))))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <*>_N
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "AlignedRead" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <(((GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Base.Just "qname")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1
                                    GHC.Generics.R Data.ByteString.Internal.ByteString)
                               GHC.Generics.:*: (GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "flag")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       ('GHC.Base.Just "rname")
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R Lib.UChr)))
                              GHC.Generics.:*: ((GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "pos")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1
                                                      GHC.Generics.R GHC.Integer.Type.Integer)
                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       ('GHC.Base.Just "endpos")
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R
                                                                       GHC.Integer.Type.Integer))
                                                GHC.Generics.:*: (GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       ('GHC.Base.Just "mapqual")
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R
                                                                       GHC.Integer.Type.Integer)
                                                                  GHC.Generics.:*: GHC.Generics.M1
                                                                                     GHC.Generics.S
                                                                                     ('GHC.Generics.MetaSel
                                                                                        ('GHC.Base.Just
                                                                                           "cigar")
                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                        'GHC.Generics.DecidedLazy)
                                                                                     (GHC.Generics.K1
                                                                                        GHC.Generics.R
                                                                                        Data.ByteString.Internal.ByteString))))
                             GHC.Generics.:*: (((GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "trimdcigar")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1
                                                      GHC.Generics.R
                                                      Data.ByteString.Internal.ByteString)
                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       ('GHC.Base.Just "cigmap")
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R Lib.CigarMap))
                                                GHC.Generics.:*: (GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       ('GHC.Base.Just
                                                                          "trimdcigmap")
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R Lib.CigarMap)
                                                                  GHC.Generics.:*: GHC.Generics.M1
                                                                                     GHC.Generics.S
                                                                                     ('GHC.Generics.MetaSel
                                                                                        ('GHC.Base.Just
                                                                                           "rnext")
                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                        'GHC.Generics.DecidedLazy)
                                                                                     (GHC.Generics.K1
                                                                                        GHC.Generics.R
                                                                                        Data.ByteString.Internal.ByteString)))
                                               GHC.Generics.:*: ((GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       ('GHC.Base.Just "pnext")
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R
                                                                       GHC.Integer.Type.Integer)
                                                                  GHC.Generics.:*: GHC.Generics.M1
                                                                                     GHC.Generics.S
                                                                                     ('GHC.Generics.MetaSel
                                                                                        ('GHC.Base.Just
                                                                                           "tlen")
                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                        'GHC.Generics.DecidedLazy)
                                                                                     (GHC.Generics.K1
                                                                                        GHC.Generics.R
                                                                                        GHC.Integer.Type.Integer))
                                                                 GHC.Generics.:*: (GHC.Generics.M1
                                                                                     GHC.Generics.S
                                                                                     ('GHC.Generics.MetaSel
                                                                                        ('GHC.Base.Just
                                                                                           "refseq")
                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                        'GHC.Generics.DecidedLazy)
                                                                                     (GHC.Generics.K1
                                                                                        GHC.Generics.R
                                                                                        Data.ByteString.Internal.ByteString)
                                                                                   GHC.Generics.:*: GHC.Generics.M1
                                                                                                      GHC.Generics.S
                                                                                                      ('GHC.Generics.MetaSel
                                                                                                         ('GHC.Base.Just
                                                                                                            "basequal")
                                                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                                                         'GHC.Generics.NoSourceStrictness
                                                                                                         'GHC.Generics.DecidedLazy)
                                                                                                      (GHC.Generics.K1
                                                                                                         GHC.Generics.R
                                                                                                         Data.ByteString.Internal.ByteString)))))
                            GHC.Generics.:*: ((((GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "optfields")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1
                                                      GHC.Generics.R
                                                      Data.ByteString.Internal.ByteString)
                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       ('GHC.Base.Just "strand")
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R
                                                                       Data.ByteString.Internal.ByteString))
                                                GHC.Generics.:*: (GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       ('GHC.Base.Just "paired")
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R
                                                                       GHC.Types.Bool)
                                                                  GHC.Generics.:*: GHC.Generics.M1
                                                                                     GHC.Generics.S
                                                                                     ('GHC.Generics.MetaSel
                                                                                        ('GHC.Base.Just
                                                                                           "mapped")
                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                        'GHC.Generics.DecidedLazy)
                                                                                     (GHC.Generics.K1
                                                                                        GHC.Generics.R
                                                                                        GHC.Types.Bool)))
                                               GHC.Generics.:*: ((GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       ('GHC.Base.Just "fint")
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R
                                                                       [Lib.BedRecord])
                                                                  GHC.Generics.:*: GHC.Generics.M1
                                                                                     GHC.Generics.S
                                                                                     ('GHC.Generics.MetaSel
                                                                                        ('GHC.Base.Just
                                                                                           "rint")
                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                        'GHC.Generics.DecidedLazy)
                                                                                     (GHC.Generics.K1
                                                                                        GHC.Generics.R
                                                                                        [Lib.BedRecord]))
                                                                 GHC.Generics.:*: (GHC.Generics.M1
                                                                                     GHC.Generics.S
                                                                                     ('GHC.Generics.MetaSel
                                                                                        ('GHC.Base.Just
                                                                                           "pintflag")
                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                        'GHC.Generics.DecidedLazy)
                                                                                     (GHC.Generics.K1
                                                                                        GHC.Generics.R
                                                                                        GHC.Types.Bool)
                                                                                   GHC.Generics.:*: GHC.Generics.M1
                                                                                                      GHC.Generics.S
                                                                                                      ('GHC.Generics.MetaSel
                                                                                                         ('GHC.Base.Just
                                                                                                            "trimdflag")
                                                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                                                         'GHC.Generics.NoSourceStrictness
                                                                                                         'GHC.Generics.DecidedLazy)
                                                                                                      (GHC.Generics.K1
                                                                                                         GHC.Generics.R
                                                                                                         GHC.Types.Bool))))
                                              GHC.Generics.:*: (((GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       ('GHC.Base.Just "trimdpos")
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R
                                                                       GHC.Integer.Type.Integer)
                                                                  GHC.Generics.:*: GHC.Generics.M1
                                                                                     GHC.Generics.S
                                                                                     ('GHC.Generics.MetaSel
                                                                                        ('GHC.Base.Just
                                                                                           "trimdendpos")
                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                        'GHC.Generics.DecidedLazy)
                                                                                     (GHC.Generics.K1
                                                                                        GHC.Generics.R
                                                                                        GHC.Integer.Type.Integer))
                                                                 GHC.Generics.:*: (GHC.Generics.M1
                                                                                     GHC.Generics.S
                                                                                     ('GHC.Generics.MetaSel
                                                                                        ('GHC.Base.Just
                                                                                           "headerstrings")
                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                        'GHC.Generics.DecidedLazy)
                                                                                     (GHC.Generics.K1
                                                                                        GHC.Generics.R
                                                                                        Lib.Header)
                                                                                   GHC.Generics.:*: GHC.Generics.M1
                                                                                                      GHC.Generics.S
                                                                                                      ('GHC.Generics.MetaSel
                                                                                                         ('GHC.Base.Just
                                                                                                            "isheader")
                                                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                                                         'GHC.Generics.NoSourceStrictness
                                                                                                         'GHC.Generics.DecidedLazy)
                                                                                                      (GHC.Generics.K1
                                                                                                         GHC.Generics.R
                                                                                                         GHC.Types.Bool)))
                                                                GHC.Generics.:*: ((GHC.Generics.M1
                                                                                     GHC.Generics.S
                                                                                     ('GHC.Generics.MetaSel
                                                                                        ('GHC.Base.Just
                                                                                           "mid")
                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                        'GHC.Generics.DecidedLazy)
                                                                                     (GHC.Generics.K1
                                                                                        GHC.Generics.R
                                                                                        Data.ByteString.Internal.ByteString)
                                                                                   GHC.Generics.:*: GHC.Generics.M1
                                                                                                      GHC.Generics.S
                                                                                                      ('GHC.Generics.MetaSel
                                                                                                         ('GHC.Base.Just
                                                                                                            "xmid")
                                                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                                                         'GHC.Generics.NoSourceStrictness
                                                                                                         'GHC.Generics.DecidedLazy)
                                                                                                      (GHC.Generics.K1
                                                                                                         GHC.Generics.R
                                                                                                         Data.ByteString.Internal.ByteString))
                                                                                  GHC.Generics.:*: (GHC.Generics.M1
                                                                                                      GHC.Generics.S
                                                                                                      ('GHC.Generics.MetaSel
                                                                                                         ('GHC.Base.Just
                                                                                                            "tbed")
                                                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                                                         'GHC.Generics.NoSourceStrictness
                                                                                                         'GHC.Generics.DecidedLazy)
                                                                                                      (GHC.Generics.K1
                                                                                                         GHC.Generics.R
                                                                                                         Lib.BedRecord)
                                                                                                    GHC.Generics.:*: GHC.Generics.M1
                                                                                                                       GHC.Generics.S
                                                                                                                       ('GHC.Generics.MetaSel
                                                                                                                          ('GHC.Base.Just
                                                                                                                             "trimdToZeroLength")
                                                                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                                                                          'GHC.Generics.NoSourceStrictness
                                                                                                                          'GHC.Generics.DecidedLazy)
                                                                                                                       (GHC.Generics.K1
                                                                                                                          GHC.Generics.R
                                                                                                                          GHC.Types.Bool)))))>_R) <x>_N) }) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  $fGenericAlignedRead_$cto ::
    GHC.Generics.Rep Lib.AlignedRead x -> Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(S(S(S(LS)S(SS))S(S(SS)S(SS)))S(S(S(SS)S(SS))S(S(SS)S(SS)))),1*U(1*U(1*U(1*U(U,1*U(U,U)),1*U(1*U(U,U),1*U(U,U))),1*U(1*U(1*U(U,U),1*U(U,U)),1*U(1*U(U,U),1*U(U,U)))),1*U(1*U(1*U(1*U(U,U),1*U(U,U)),1*U(1*U(U,U),1*U(U,U))),1*U(1*U(1*U(U,U),1*U(U,U)),1*U(1*U(U,U),1*U(U,U)))))>,
     Unfolding: (\ @ x (ds6 :: GHC.Generics.Rep Lib.AlignedRead x) ->
                 case ds6
                        `cast`
                      (Trans
                           (Sub (Lib.Rep_AlignedRead[0]))
                           (Trans
                                (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.D>_P
                                     <'GHC.Generics.MetaData
                                        "AlignedRead"
                                        "Lib"
                                        "primerclip-0.3.5.0-EKfIVVkqmIVLNVlfKBtA8g"
                                        'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "AlignedRead" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                        ((((GHC.Generics.M1
                                              GHC.Generics.S
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "qname")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.K1
                                                 GHC.Generics.R Data.ByteString.Internal.ByteString)
                                            GHC.Generics.:*: (GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "flag")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R GHC.Types.Int)
                                                              GHC.Generics.:*: GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "rname")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    Lib.UChr)))
                                           GHC.Generics.:*: ((GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "pos")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R
                                                                   GHC.Integer.Type.Integer)
                                                              GHC.Generics.:*: GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "endpos")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    GHC.Integer.Type.Integer))
                                                             GHC.Generics.:*: (GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "mapqual")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    GHC.Integer.Type.Integer)
                                                                               GHC.Generics.:*: GHC.Generics.M1
                                                                                                  GHC.Generics.S
                                                                                                  ('GHC.Generics.MetaSel
                                                                                                     ('GHC.Base.Just
                                                                                                        "cigar")
                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                  (GHC.Generics.K1
                                                                                                     GHC.Generics.R
                                                                                                     Data.ByteString.Internal.ByteString))))
                                          GHC.Generics.:*: (((GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "trimdcigar")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R
                                                                   Data.ByteString.Internal.ByteString)
                                                              GHC.Generics.:*: GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "cigmap")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    Lib.CigarMap))
                                                             GHC.Generics.:*: (GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "trimdcigmap")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    Lib.CigarMap)
                                                                               GHC.Generics.:*: GHC.Generics.M1
                                                                                                  GHC.Generics.S
                                                                                                  ('GHC.Generics.MetaSel
                                                                                                     ('GHC.Base.Just
                                                                                                        "rnext")
                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                  (GHC.Generics.K1
                                                                                                     GHC.Generics.R
                                                                                                     Data.ByteString.Internal.ByteString)))
                                                            GHC.Generics.:*: ((GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "pnext")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    GHC.Integer.Type.Integer)
                                                                               GHC.Generics.:*: GHC.Generics.M1
                                                                                                  GHC.Generics.S
                                                                                                  ('GHC.Generics.MetaSel
                                                                                                     ('GHC.Base.Just
                                                                                                        "tlen")
                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                  (GHC.Generics.K1
                                                                                                     GHC.Generics.R
                                                                                                     GHC.Integer.Type.Integer))
                                                                              GHC.Generics.:*: (GHC.Generics.M1
                                                                                                  GHC.Generics.S
                                                                                                  ('GHC.Generics.MetaSel
                                                                                                     ('GHC.Base.Just
                                                                                                        "refseq")
                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                  (GHC.Generics.K1
                                                                                                     GHC.Generics.R
                                                                                                     Data.ByteString.Internal.ByteString)
                                                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                                                   GHC.Generics.S
                                                                                                                   ('GHC.Generics.MetaSel
                                                                                                                      ('GHC.Base.Just
                                                                                                                         "basequal")
                                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                                   (GHC.Generics.K1
                                                                                                                      GHC.Generics.R
                                                                                                                      Data.ByteString.Internal.ByteString)))))
                                         GHC.Generics.:*: ((((GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "optfields")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R
                                                                   Data.ByteString.Internal.ByteString)
                                                              GHC.Generics.:*: GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "strand")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    Data.ByteString.Internal.ByteString))
                                                             GHC.Generics.:*: (GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "paired")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    GHC.Types.Bool)
                                                                               GHC.Generics.:*: GHC.Generics.M1
                                                                                                  GHC.Generics.S
                                                                                                  ('GHC.Generics.MetaSel
                                                                                                     ('GHC.Base.Just
                                                                                                        "mapped")
                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                  (GHC.Generics.K1
                                                                                                     GHC.Generics.R
                                                                                                     GHC.Types.Bool)))
                                                            GHC.Generics.:*: ((GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "fint")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    [Lib.BedRecord])
                                                                               GHC.Generics.:*: GHC.Generics.M1
                                                                                                  GHC.Generics.S
                                                                                                  ('GHC.Generics.MetaSel
                                                                                                     ('GHC.Base.Just
                                                                                                        "rint")
                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                  (GHC.Generics.K1
                                                                                                     GHC.Generics.R
                                                                                                     [Lib.BedRecord]))
                                                                              GHC.Generics.:*: (GHC.Generics.M1
                                                                                                  GHC.Generics.S
                                                                                                  ('GHC.Generics.MetaSel
                                                                                                     ('GHC.Base.Just
                                                                                                        "pintflag")
                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                  (GHC.Generics.K1
                                                                                                     GHC.Generics.R
                                                                                                     GHC.Types.Bool)
                                                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                                                   GHC.Generics.S
                                                                                                                   ('GHC.Generics.MetaSel
                                                                                                                      ('GHC.Base.Just
                                                                                                                         "trimdflag")
                                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                                   (GHC.Generics.K1
                                                                                                                      GHC.Generics.R
                                                                                                                      GHC.Types.Bool))))
                                                           GHC.Generics.:*: (((GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "trimdpos")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    GHC.Integer.Type.Integer)
                                                                               GHC.Generics.:*: GHC.Generics.M1
                                                                                                  GHC.Generics.S
                                                                                                  ('GHC.Generics.MetaSel
                                                                                                     ('GHC.Base.Just
                                                                                                        "trimdendpos")
                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                  (GHC.Generics.K1
                                                                                                     GHC.Generics.R
                                                                                                     GHC.Integer.Type.Integer))
                                                                              GHC.Generics.:*: (GHC.Generics.M1
                                                                                                  GHC.Generics.S
                                                                                                  ('GHC.Generics.MetaSel
                                                                                                     ('GHC.Base.Just
                                                                                                        "headerstrings")
                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                  (GHC.Generics.K1
                                                                                                     GHC.Generics.R
                                                                                                     Lib.Header)
                                                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                                                   GHC.Generics.S
                                                                                                                   ('GHC.Generics.MetaSel
                                                                                                                      ('GHC.Base.Just
                                                                                                                         "isheader")
                                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                                   (GHC.Generics.K1
                                                                                                                      GHC.Generics.R
                                                                                                                      GHC.Types.Bool)))
                                                                             GHC.Generics.:*: ((GHC.Generics.M1
                                                                                                  GHC.Generics.S
                                                                                                  ('GHC.Generics.MetaSel
                                                                                                     ('GHC.Base.Just
                                                                                                        "mid")
                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                  (GHC.Generics.K1
                                                                                                     GHC.Generics.R
                                                                                                     Data.ByteString.Internal.ByteString)
                                                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                                                   GHC.Generics.S
                                                                                                                   ('GHC.Generics.MetaSel
                                                                                                                      ('GHC.Base.Just
                                                                                                                         "xmid")
                                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                                   (GHC.Generics.K1
                                                                                                                      GHC.Generics.R
                                                                                                                      Data.ByteString.Internal.ByteString))
                                                                                               GHC.Generics.:*: (GHC.Generics.M1
                                                                                                                   GHC.Generics.S
                                                                                                                   ('GHC.Generics.MetaSel
                                                                                                                      ('GHC.Base.Just
                                                                                                                         "tbed")
                                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                                   (GHC.Generics.K1
                                                                                                                      GHC.Generics.R
                                                                                                                      Lib.BedRecord)
                                                                                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                    GHC.Generics.S
                                                                                                                                    ('GHC.Generics.MetaSel
                                                                                                                                       ('GHC.Base.Just
                                                                                                                                          "trimdToZeroLength")
                                                                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                                                                       'GHC.Generics.DecidedLazy)
                                                                                                                                    (GHC.Generics.K1
                                                                                                                                       GHC.Generics.R
                                                                                                                                       GHC.Types.Bool))))))>_R)
                                (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "AlignedRead" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <(((GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "qname")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1
                                              GHC.Generics.R Data.ByteString.Internal.ByteString)
                                         GHC.Generics.:*: (GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "flag")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R GHC.Types.Int)
                                                           GHC.Generics.:*: GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "rname")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 Lib.UChr)))
                                        GHC.Generics.:*: ((GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "pos")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R
                                                                GHC.Integer.Type.Integer)
                                                           GHC.Generics.:*: GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "endpos")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 GHC.Integer.Type.Integer))
                                                          GHC.Generics.:*: (GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "mapqual")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 GHC.Integer.Type.Integer)
                                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                                               GHC.Generics.S
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Base.Just
                                                                                                     "cigar")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.K1
                                                                                                  GHC.Generics.R
                                                                                                  Data.ByteString.Internal.ByteString))))
                                       GHC.Generics.:*: (((GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "trimdcigar")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R
                                                                Data.ByteString.Internal.ByteString)
                                                           GHC.Generics.:*: GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "cigmap")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 Lib.CigarMap))
                                                          GHC.Generics.:*: (GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "trimdcigmap")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 Lib.CigarMap)
                                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                                               GHC.Generics.S
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Base.Just
                                                                                                     "rnext")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.K1
                                                                                                  GHC.Generics.R
                                                                                                  Data.ByteString.Internal.ByteString)))
                                                         GHC.Generics.:*: ((GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "pnext")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 GHC.Integer.Type.Integer)
                                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                                               GHC.Generics.S
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Base.Just
                                                                                                     "tlen")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.K1
                                                                                                  GHC.Generics.R
                                                                                                  GHC.Integer.Type.Integer))
                                                                           GHC.Generics.:*: (GHC.Generics.M1
                                                                                               GHC.Generics.S
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Base.Just
                                                                                                     "refseq")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.K1
                                                                                                  GHC.Generics.R
                                                                                                  Data.ByteString.Internal.ByteString)
                                                                                             GHC.Generics.:*: GHC.Generics.M1
                                                                                                                GHC.Generics.S
                                                                                                                ('GHC.Generics.MetaSel
                                                                                                                   ('GHC.Base.Just
                                                                                                                      "basequal")
                                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                                (GHC.Generics.K1
                                                                                                                   GHC.Generics.R
                                                                                                                   Data.ByteString.Internal.ByteString)))))
                                      GHC.Generics.:*: ((((GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "optfields")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R
                                                                Data.ByteString.Internal.ByteString)
                                                           GHC.Generics.:*: GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "strand")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 Data.ByteString.Internal.ByteString))
                                                          GHC.Generics.:*: (GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "paired")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 GHC.Types.Bool)
                                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                                               GHC.Generics.S
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Base.Just
                                                                                                     "mapped")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.K1
                                                                                                  GHC.Generics.R
                                                                                                  GHC.Types.Bool)))
                                                         GHC.Generics.:*: ((GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "fint")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 [Lib.BedRecord])
                                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                                               GHC.Generics.S
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Base.Just
                                                                                                     "rint")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.K1
                                                                                                  GHC.Generics.R
                                                                                                  [Lib.BedRecord]))
                                                                           GHC.Generics.:*: (GHC.Generics.M1
                                                                                               GHC.Generics.S
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Base.Just
                                                                                                     "pintflag")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.K1
                                                                                                  GHC.Generics.R
                                                                                                  GHC.Types.Bool)
                                                                                             GHC.Generics.:*: GHC.Generics.M1
                                                                                                                GHC.Generics.S
                                                                                                                ('GHC.Generics.MetaSel
                                                                                                                   ('GHC.Base.Just
                                                                                                                      "trimdflag")
                                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                                (GHC.Generics.K1
                                                                                                                   GHC.Generics.R
                                                                                                                   GHC.Types.Bool))))
                                                        GHC.Generics.:*: (((GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "trimdpos")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 GHC.Integer.Type.Integer)
                                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                                               GHC.Generics.S
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Base.Just
                                                                                                     "trimdendpos")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.K1
                                                                                                  GHC.Generics.R
                                                                                                  GHC.Integer.Type.Integer))
                                                                           GHC.Generics.:*: (GHC.Generics.M1
                                                                                               GHC.Generics.S
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Base.Just
                                                                                                     "headerstrings")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.K1
                                                                                                  GHC.Generics.R
                                                                                                  Lib.Header)
                                                                                             GHC.Generics.:*: GHC.Generics.M1
                                                                                                                GHC.Generics.S
                                                                                                                ('GHC.Generics.MetaSel
                                                                                                                   ('GHC.Base.Just
                                                                                                                      "isheader")
                                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                                (GHC.Generics.K1
                                                                                                                   GHC.Generics.R
                                                                                                                   GHC.Types.Bool)))
                                                                          GHC.Generics.:*: ((GHC.Generics.M1
                                                                                               GHC.Generics.S
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Base.Just
                                                                                                     "mid")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.K1
                                                                                                  GHC.Generics.R
                                                                                                  Data.ByteString.Internal.ByteString)
                                                                                             GHC.Generics.:*: GHC.Generics.M1
                                                                                                                GHC.Generics.S
                                                                                                                ('GHC.Generics.MetaSel
                                                                                                                   ('GHC.Base.Just
                                                                                                                      "xmid")
                                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                                (GHC.Generics.K1
                                                                                                                   GHC.Generics.R
                                                                                                                   Data.ByteString.Internal.ByteString))
                                                                                            GHC.Generics.:*: (GHC.Generics.M1
                                                                                                                GHC.Generics.S
                                                                                                                ('GHC.Generics.MetaSel
                                                                                                                   ('GHC.Base.Just
                                                                                                                      "tbed")
                                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                                (GHC.Generics.K1
                                                                                                                   GHC.Generics.R
                                                                                                                   Lib.BedRecord)
                                                                                                              GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                 GHC.Generics.S
                                                                                                                                 ('GHC.Generics.MetaSel
                                                                                                                                    ('GHC.Base.Just
                                                                                                                                       "trimdToZeroLength")
                                                                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                                                                    'GHC.Generics.DecidedLazy)
                                                                                                                                 (GHC.Generics.K1
                                                                                                                                    GHC.Generics.R
                                                                                                                                    GHC.Types.Bool)))))>_R)) <x>_N) of wild { GHC.Generics.:*: ds7 ds8 ->
                 case ds7 of wild1 { GHC.Generics.:*: ds9 ds10 ->
                 case ds9 of wild2 { GHC.Generics.:*: ds11 ds12 ->
                 case ds11 of wild3 { GHC.Generics.:*: ds13 ds14 ->
                 case ds14 of wild4 { GHC.Generics.:*: ds15 ds16 ->
                 case ds12 of wild5 { GHC.Generics.:*: ds17 ds18 ->
                 case ds17 of wild6 { GHC.Generics.:*: ds19 ds20 ->
                 case ds18 of wild7 { GHC.Generics.:*: ds21 ds22 ->
                 case ds10 of wild8 { GHC.Generics.:*: ds23 ds24 ->
                 case ds23 of wild9 { GHC.Generics.:*: ds25 ds26 ->
                 case ds25 of wild10 { GHC.Generics.:*: ds27 ds28 ->
                 case ds26 of wild11 { GHC.Generics.:*: ds29 ds30 ->
                 case ds24 of wild12 { GHC.Generics.:*: ds31 ds32 ->
                 case ds31 of wild13 { GHC.Generics.:*: ds33 ds34 ->
                 case ds32 of wild14 { GHC.Generics.:*: ds35 ds36 ->
                 case ds8 of wild15 { GHC.Generics.:*: ds37 ds38 ->
                 case ds37 of wild16 { GHC.Generics.:*: ds39 ds40 ->
                 case ds39 of wild17 { GHC.Generics.:*: ds41 ds42 ->
                 case ds41 of wild18 { GHC.Generics.:*: ds43 ds44 ->
                 case ds42 of wild19 { GHC.Generics.:*: ds45 ds46 ->
                 case ds40 of wild20 { GHC.Generics.:*: ds47 ds48 ->
                 case ds47 of wild21 { GHC.Generics.:*: ds49 ds50 ->
                 case ds48 of wild22 { GHC.Generics.:*: ds51 ds52 ->
                 case ds38 of wild23 { GHC.Generics.:*: ds53 ds54 ->
                 case ds53 of wild24 { GHC.Generics.:*: ds55 ds56 ->
                 case ds55 of wild25 { GHC.Generics.:*: ds57 ds58 ->
                 case ds56 of wild26 { GHC.Generics.:*: ds59 ds60 ->
                 case ds54 of wild27 { GHC.Generics.:*: ds61 ds62 ->
                 case ds61 of wild28 { GHC.Generics.:*: ds63 ds64 ->
                 case ds62 of wild29 { GHC.Generics.:*: ds65 ds66 ->
                 Lib.AlignedRead
                   ds13
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "qname")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N
                             <GHC.Generics.R>_P
                             <Data.ByteString.Internal.ByteString>_R
                             <x>_P))
                   ds15
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "flag")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Types.Int>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Types.Int>_R <x>_P))
                   ds16
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "rname")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R Lib.UChr>_R <x>_N)
                        (GHC.Generics.N:K1[0] <*>_N <GHC.Generics.R>_P <Lib.UChr>_R <x>_P))
                   ds19
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "pos")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ds20
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "endpos")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ds21
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "mapqual")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ds22
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "cigar")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N
                             <GHC.Generics.R>_P
                             <Data.ByteString.Internal.ByteString>_R
                             <x>_P))
                   ds27
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "trimdcigar")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N
                             <GHC.Generics.R>_P
                             <Data.ByteString.Internal.ByteString>_R
                             <x>_P))
                   ds28
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "cigmap")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R Lib.CigarMap>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <Lib.CigarMap>_R <x>_P))
                   ds29
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "trimdcigmap")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R Lib.CigarMap>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <Lib.CigarMap>_R <x>_P))
                   ds30
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "rnext")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N
                             <GHC.Generics.R>_P
                             <Data.ByteString.Internal.ByteString>_R
                             <x>_P))
                   ds33
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "pnext")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ds34
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "tlen")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ds35
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "refseq")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N
                             <GHC.Generics.R>_P
                             <Data.ByteString.Internal.ByteString>_R
                             <x>_P))
                   ds36
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "basequal")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N
                             <GHC.Generics.R>_P
                             <Data.ByteString.Internal.ByteString>_R
                             <x>_P))
                   ds43
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "optfields")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N
                             <GHC.Generics.R>_P
                             <Data.ByteString.Internal.ByteString>_R
                             <x>_P))
                   ds44
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "strand")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N
                             <GHC.Generics.R>_P
                             <Data.ByteString.Internal.ByteString>_R
                             <x>_P))
                   ds45
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "paired")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Types.Bool>_R <x>_P))
                   ds46
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "mapped")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Types.Bool>_R <x>_P))
                   ds49
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "fint")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R [Lib.BedRecord]>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <[Lib.BedRecord]>_R <x>_P))
                   ds50
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "rint")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R [Lib.BedRecord]>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <[Lib.BedRecord]>_R <x>_P))
                   ds51
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "pintflag")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Types.Bool>_R <x>_P))
                   ds52
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "trimdflag")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Types.Bool>_R <x>_P))
                   ds57
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "trimdpos")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ds58
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "trimdendpos")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ds59
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "headerstrings")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R Lib.Header>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <Lib.Header>_R <x>_P))
                   ds60
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "isheader")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Types.Bool>_R <x>_P))
                   ds63
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "mid")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N
                             <GHC.Generics.R>_P
                             <Data.ByteString.Internal.ByteString>_R
                             <x>_P))
                   ds64
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "xmid")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N
                             <GHC.Generics.R>_P
                             <Data.ByteString.Internal.ByteString>_R
                             <x>_P))
                   ds65
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "tbed")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R Lib.BedRecord>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <Lib.BedRecord>_R <x>_P))
                   ds66
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "trimdToZeroLength")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N
                             <GHC.Generics.R>_P
                             <GHC.Types.Bool>_R
                             <x>_P)) } } } } } } } } } } } } } } } } } } } } } } } } } } } } } }) -}
b27cefdd8405a17038845775c0c42c29
  $fGenericBEDPE :: GHC.Generics.Generic Lib.BEDPE
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.BEDPE
                  Lib.$fGenericBEDPE1
                    `cast`
                  (forall (x :: <*>_N).
                   <Lib.BEDPE>_R
                   ->_R Trans
                            (Sym (GHC.Generics.N:M1[0]
                                      <*>_N
                                      <GHC.Generics.D>_P
                                      <'GHC.Generics.MetaData
                                         "BEDPE"
                                         "Lib"
                                         "primerclip-0.3.5.0-EKfIVVkqmIVLNVlfKBtA8g"
                                         'GHC.Types.False>_P
                                      <GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "BEDPE" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                         ((GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "chr1")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                                           GHC.Generics.:*: (GHC.Generics.M1
                                                               GHC.Generics.S
                                                               ('GHC.Generics.MetaSel
                                                                  ('GHC.Base.Just "start1")
                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                  'GHC.Generics.NoSourceStrictness
                                                                  'GHC.Generics.DecidedLazy)
                                                               (GHC.Generics.K1
                                                                  GHC.Generics.R
                                                                  GHC.Integer.Type.Integer)
                                                             GHC.Generics.:*: GHC.Generics.M1
                                                                                GHC.Generics.S
                                                                                ('GHC.Generics.MetaSel
                                                                                   ('GHC.Base.Just
                                                                                      "end1")
                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                   'GHC.Generics.DecidedLazy)
                                                                                (GHC.Generics.K1
                                                                                   GHC.Generics.R
                                                                                   GHC.Integer.Type.Integer)))
                                          GHC.Generics.:*: ((GHC.Generics.M1
                                                               GHC.Generics.S
                                                               ('GHC.Generics.MetaSel
                                                                  ('GHC.Base.Just "chr2")
                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                  'GHC.Generics.NoSourceStrictness
                                                                  'GHC.Generics.DecidedLazy)
                                                               (GHC.Generics.K1
                                                                  GHC.Generics.R Lib.UChr)
                                                             GHC.Generics.:*: GHC.Generics.M1
                                                                                GHC.Generics.S
                                                                                ('GHC.Generics.MetaSel
                                                                                   ('GHC.Base.Just
                                                                                      "start2")
                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                   'GHC.Generics.DecidedLazy)
                                                                                (GHC.Generics.K1
                                                                                   GHC.Generics.R
                                                                                   GHC.Integer.Type.Integer))
                                                            GHC.Generics.:*: (GHC.Generics.M1
                                                                                GHC.Generics.S
                                                                                ('GHC.Generics.MetaSel
                                                                                   ('GHC.Base.Just
                                                                                      "end2")
                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                   'GHC.Generics.DecidedLazy)
                                                                                (GHC.Generics.K1
                                                                                   GHC.Generics.R
                                                                                   GHC.Integer.Type.Integer)
                                                                              GHC.Generics.:*: GHC.Generics.M1
                                                                                                 GHC.Generics.S
                                                                                                 ('GHC.Generics.MetaSel
                                                                                                    ('GHC.Base.Just
                                                                                                       "bedpename")
                                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                                    'GHC.Generics.DecidedLazy)
                                                                                                 (GHC.Generics.K1
                                                                                                    GHC.Generics.R
                                                                                                    Data.ByteString.Internal.ByteString))))>_R))
                            (Sub (Sym (Lib.Rep_BEDPE[0]))) <x>_N)
                  Lib.$fGenericBEDPE_$cto -}
b27cefdd8405a17038845775c0c42c29
  $fGenericBEDPE1 ::
    Lib.BEDPE
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "BEDPE" 'GHC.Generics.PrefixI 'GHC.Types.True)
         ((GHC.Generics.M1
             GHC.Generics.S
             ('GHC.Generics.MetaSel
                ('GHC.Base.Just "chr1")
                'GHC.Generics.NoSourceUnpackedness
                'GHC.Generics.NoSourceStrictness
                'GHC.Generics.DecidedLazy)
             (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
           GHC.Generics.:*: (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "start1")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                             GHC.Generics.:*: GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "end1")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R GHC.Integer.Type.Integer)))
          GHC.Generics.:*: ((GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "chr2")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                             GHC.Generics.:*: GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "start2")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R GHC.Integer.Type.Integer))
                            GHC.Generics.:*: (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "end2")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R GHC.Integer.Type.Integer)
                                              GHC.Generics.:*: GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Base.Just "bedpename")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    Data.ByteString.Internal.ByteString))))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U,U,U,U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: Lib.BEDPE) ->
                 case x1 of wild { Lib.BEDPE g2 g3 g4 g5 g6 g7 g8 ->
                 (GHC.Generics.:*:
                    @ *
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "chr1")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                       GHC.Generics.:*: (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "start1")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "end1")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R
                                                               GHC.Integer.Type.Integer)))
                    @ ((GHC.Generics.M1
                          GHC.Generics.S
                          ('GHC.Generics.MetaSel
                             ('GHC.Base.Just "chr2")
                             'GHC.Generics.NoSourceUnpackedness
                             'GHC.Generics.NoSourceStrictness
                             'GHC.Generics.DecidedLazy)
                          (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                        GHC.Generics.:*: GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "start2")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1
                                              GHC.Generics.R GHC.Integer.Type.Integer))
                       GHC.Generics.:*: (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "end2")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "bedpename")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R
                                                               Data.ByteString.Internal.ByteString)))
                    @ x
                    (GHC.Generics.:*:
                       @ *
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "chr1")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R Lib.UChr))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "start1")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                          GHC.Generics.:*: GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "end1")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R GHC.Integer.Type.Integer))
                       @ x
                       g2
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <*>_N <GHC.Generics.R>_P <Lib.UChr>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <*>_N
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "chr1")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1 GHC.Generics.R Lib.UChr>_R) <x>_N))
                       (GHC.Generics.:*:
                          @ *
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "start1")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "end1")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                          @ x
                          g3
                            `cast`
                          (Trans
                               (Sym (GHC.Generics.N:K1[0]
                                         <*>_N
                                         <GHC.Generics.R>_P
                                         <GHC.Integer.Type.Integer>_R
                                         <x>_P))
                               (Sym (GHC.Generics.N:M1[0]
                                         <*>_N
                                         <GHC.Generics.S>_P
                                         <'GHC.Generics.MetaSel
                                            ('GHC.Base.Just "start1")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy>_P
                                         <GHC.Generics.K1
                                            GHC.Generics.R GHC.Integer.Type.Integer>_R) <x>_N))
                          g4
                            `cast`
                          (Trans
                               (Sym (GHC.Generics.N:K1[0]
                                         <*>_N
                                         <GHC.Generics.R>_P
                                         <GHC.Integer.Type.Integer>_R
                                         <x>_P))
                               (Sym (GHC.Generics.N:M1[0]
                                         <*>_N
                                         <GHC.Generics.S>_P
                                         <'GHC.Generics.MetaSel
                                            ('GHC.Base.Just "end1")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy>_P
                                         <GHC.Generics.K1
                                            GHC.Generics.R GHC.Integer.Type.Integer>_R) <x>_N))))
                    (GHC.Generics.:*:
                       @ *
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "chr2")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                          GHC.Generics.:*: GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "start2")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R GHC.Integer.Type.Integer))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "end2")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                          GHC.Generics.:*: GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "bedpename")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R Data.ByteString.Internal.ByteString))
                       @ x
                       (GHC.Generics.:*:
                          @ *
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "chr2")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R Lib.UChr))
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "start2")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                          @ x
                          g5
                            `cast`
                          (Trans
                               (Sym (GHC.Generics.N:K1[0]
                                         <*>_N <GHC.Generics.R>_P <Lib.UChr>_R <x>_P))
                               (Sym (GHC.Generics.N:M1[0]
                                         <*>_N
                                         <GHC.Generics.S>_P
                                         <'GHC.Generics.MetaSel
                                            ('GHC.Base.Just "chr2")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy>_P
                                         <GHC.Generics.K1 GHC.Generics.R Lib.UChr>_R) <x>_N))
                          g6
                            `cast`
                          (Trans
                               (Sym (GHC.Generics.N:K1[0]
                                         <*>_N
                                         <GHC.Generics.R>_P
                                         <GHC.Integer.Type.Integer>_R
                                         <x>_P))
                               (Sym (GHC.Generics.N:M1[0]
                                         <*>_N
                                         <GHC.Generics.S>_P
                                         <'GHC.Generics.MetaSel
                                            ('GHC.Base.Just "start2")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy>_P
                                         <GHC.Generics.K1
                                            GHC.Generics.R GHC.Integer.Type.Integer>_R) <x>_N)))
                       (GHC.Generics.:*:
                          @ *
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "end2")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "bedpename")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1
                                  GHC.Generics.R Data.ByteString.Internal.ByteString))
                          @ x
                          g7
                            `cast`
                          (Trans
                               (Sym (GHC.Generics.N:K1[0]
                                         <*>_N
                                         <GHC.Generics.R>_P
                                         <GHC.Integer.Type.Integer>_R
                                         <x>_P))
                               (Sym (GHC.Generics.N:M1[0]
                                         <*>_N
                                         <GHC.Generics.S>_P
                                         <'GHC.Generics.MetaSel
                                            ('GHC.Base.Just "end2")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy>_P
                                         <GHC.Generics.K1
                                            GHC.Generics.R GHC.Integer.Type.Integer>_R) <x>_N))
                          g8
                            `cast`
                          (Trans
                               (Sym (GHC.Generics.N:K1[0]
                                         <*>_N
                                         <GHC.Generics.R>_P
                                         <Data.ByteString.Internal.ByteString>_R
                                         <x>_P))
                               (Sym (GHC.Generics.N:M1[0]
                                         <*>_N
                                         <GHC.Generics.S>_P
                                         <'GHC.Generics.MetaSel
                                            ('GHC.Base.Just "bedpename")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy>_P
                                         <GHC.Generics.K1
                                            GHC.Generics.R
                                            Data.ByteString.Internal.ByteString>_R) <x>_N)))))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <*>_N
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "BEDPE" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <(GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "chr1")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                             GHC.Generics.:*: (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "start1")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R GHC.Integer.Type.Integer)
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "end1")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     GHC.Integer.Type.Integer)))
                            GHC.Generics.:*: ((GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "chr2")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "start2")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     GHC.Integer.Type.Integer))
                                              GHC.Generics.:*: (GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "end2")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     GHC.Integer.Type.Integer)
                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                   GHC.Generics.S
                                                                                   ('GHC.Generics.MetaSel
                                                                                      ('GHC.Base.Just
                                                                                         "bedpename")
                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                      'GHC.Generics.DecidedLazy)
                                                                                   (GHC.Generics.K1
                                                                                      GHC.Generics.R
                                                                                      Data.ByteString.Internal.ByteString)))>_R) <x>_N) }) -}
b27cefdd8405a17038845775c0c42c29
  $fGenericBEDPE_$cto :: GHC.Generics.Rep Lib.BEDPE x -> Lib.BEDPE
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(S(LS)S(SS)),1*U(1*U(U,1*U(U,U)),1*U(1*U(U,U),1*U(U,U)))>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (ds6 :: GHC.Generics.Rep Lib.BEDPE x) ->
                 case ds6
                        `cast`
                      (Trans
                           (Sub (Lib.Rep_BEDPE[0]))
                           (Trans
                                (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.D>_P
                                     <'GHC.Generics.MetaData
                                        "BEDPE"
                                        "Lib"
                                        "primerclip-0.3.5.0-EKfIVVkqmIVLNVlfKBtA8g"
                                        'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "BEDPE" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                        ((GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "chr1")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                                          GHC.Generics.:*: (GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "start1")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 GHC.Integer.Type.Integer)
                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "end1")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  GHC.Integer.Type.Integer)))
                                         GHC.Generics.:*: ((GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "chr2")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R Lib.UChr)
                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "start2")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  GHC.Integer.Type.Integer))
                                                           GHC.Generics.:*: (GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "end2")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  GHC.Integer.Type.Integer)
                                                                             GHC.Generics.:*: GHC.Generics.M1
                                                                                                GHC.Generics.S
                                                                                                ('GHC.Generics.MetaSel
                                                                                                   ('GHC.Base.Just
                                                                                                      "bedpename")
                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                (GHC.Generics.K1
                                                                                                   GHC.Generics.R
                                                                                                   Data.ByteString.Internal.ByteString))))>_R)
                                (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "BEDPE" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <(GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "chr1")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                                       GHC.Generics.:*: (GHC.Generics.M1
                                                           GHC.Generics.S
                                                           ('GHC.Generics.MetaSel
                                                              ('GHC.Base.Just "start1")
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.K1
                                                              GHC.Generics.R
                                                              GHC.Integer.Type.Integer)
                                                         GHC.Generics.:*: GHC.Generics.M1
                                                                            GHC.Generics.S
                                                                            ('GHC.Generics.MetaSel
                                                                               ('GHC.Base.Just
                                                                                  "end1")
                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                               'GHC.Generics.NoSourceStrictness
                                                                               'GHC.Generics.DecidedLazy)
                                                                            (GHC.Generics.K1
                                                                               GHC.Generics.R
                                                                               GHC.Integer.Type.Integer)))
                                      GHC.Generics.:*: ((GHC.Generics.M1
                                                           GHC.Generics.S
                                                           ('GHC.Generics.MetaSel
                                                              ('GHC.Base.Just "chr2")
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                                                         GHC.Generics.:*: GHC.Generics.M1
                                                                            GHC.Generics.S
                                                                            ('GHC.Generics.MetaSel
                                                                               ('GHC.Base.Just
                                                                                  "start2")
                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                               'GHC.Generics.NoSourceStrictness
                                                                               'GHC.Generics.DecidedLazy)
                                                                            (GHC.Generics.K1
                                                                               GHC.Generics.R
                                                                               GHC.Integer.Type.Integer))
                                                        GHC.Generics.:*: (GHC.Generics.M1
                                                                            GHC.Generics.S
                                                                            ('GHC.Generics.MetaSel
                                                                               ('GHC.Base.Just
                                                                                  "end2")
                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                               'GHC.Generics.NoSourceStrictness
                                                                               'GHC.Generics.DecidedLazy)
                                                                            (GHC.Generics.K1
                                                                               GHC.Generics.R
                                                                               GHC.Integer.Type.Integer)
                                                                          GHC.Generics.:*: GHC.Generics.M1
                                                                                             GHC.Generics.S
                                                                                             ('GHC.Generics.MetaSel
                                                                                                ('GHC.Base.Just
                                                                                                   "bedpename")
                                                                                                'GHC.Generics.NoSourceUnpackedness
                                                                                                'GHC.Generics.NoSourceStrictness
                                                                                                'GHC.Generics.DecidedLazy)
                                                                                             (GHC.Generics.K1
                                                                                                GHC.Generics.R
                                                                                                Data.ByteString.Internal.ByteString)))>_R)) <x>_N) of wild { GHC.Generics.:*: ds7 ds8 ->
                 case ds7 of wild1 { GHC.Generics.:*: ds9 ds10 ->
                 case ds10 of wild2 { GHC.Generics.:*: ds11 ds12 ->
                 case ds8 of wild3 { GHC.Generics.:*: ds13 ds14 ->
                 case ds13 of wild4 { GHC.Generics.:*: ds15 ds16 ->
                 case ds14 of wild5 { GHC.Generics.:*: ds17 ds18 ->
                 Lib.BEDPE
                   ds9
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "chr1")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R Lib.UChr>_R <x>_N)
                        (GHC.Generics.N:K1[0] <*>_N <GHC.Generics.R>_P <Lib.UChr>_R <x>_P))
                   ds11
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "start1")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ds12
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "end1")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ds15
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "chr2")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R Lib.UChr>_R <x>_N)
                        (GHC.Generics.N:K1[0] <*>_N <GHC.Generics.R>_P <Lib.UChr>_R <x>_P))
                   ds16
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "start2")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ds17
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "end2")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ds18
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "bedpename")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N
                             <GHC.Generics.R>_P
                             <Data.ByteString.Internal.ByteString>_R
                             <x>_P)) } } } } } }) -}
629d9d543a825463dd90ec69a5fb19f7
  $fGenericBedRecord :: GHC.Generics.Generic Lib.BedRecord
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.BedRecord
                  Lib.$fGenericBedRecord1
                    `cast`
                  (forall (x :: <*>_N).
                   <Lib.BedRecord>_R
                   ->_R Trans
                            (Sym (GHC.Generics.N:M1[0]
                                      <*>_N
                                      <GHC.Generics.D>_P
                                      <'GHC.Generics.MetaData
                                         "BedRecord"
                                         "Lib"
                                         "primerclip-0.3.5.0-EKfIVVkqmIVLNVlfKBtA8g"
                                         'GHC.Types.False>_P
                                      <GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "BedRecord" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                         ((GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "bedchr")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                                           GHC.Generics.:*: GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "bedstart")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 GHC.Integer.Type.Integer))
                                          GHC.Generics.:*: (GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "bedend")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 GHC.Integer.Type.Integer)
                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "bedname")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  Data.ByteString.Internal.ByteString)))>_R))
                            (Sub (Sym (Lib.Rep_BedRecord[0]))) <x>_N)
                  Lib.$fGenericBedRecord_$cto -}
629d9d543a825463dd90ec69a5fb19f7
  $fGenericBedRecord1 ::
    Lib.BedRecord
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "BedRecord" 'GHC.Generics.PrefixI 'GHC.Types.True)
         ((GHC.Generics.M1
             GHC.Generics.S
             ('GHC.Generics.MetaSel
                ('GHC.Base.Just "bedchr")
                'GHC.Generics.NoSourceUnpackedness
                'GHC.Generics.NoSourceStrictness
                'GHC.Generics.DecidedLazy)
             (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
           GHC.Generics.:*: GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "bedstart")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
          GHC.Generics.:*: (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "bedend")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                            GHC.Generics.:*: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "bedname")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString)))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: Lib.BedRecord) ->
                 case x1 of wild { Lib.BedRecord g2 g3 g4 g5 ->
                 (GHC.Generics.:*:
                    @ *
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "bedchr")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                       GHC.Generics.:*: GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "bedstart")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "bedend")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                       GHC.Generics.:*: GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "bedname")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1
                                             GHC.Generics.R Data.ByteString.Internal.ByteString))
                    @ x
                    (GHC.Generics.:*:
                       @ *
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "bedchr")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R Lib.UChr))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "bedstart")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                       @ x
                       g2
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <*>_N <GHC.Generics.R>_P <Lib.UChr>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <*>_N
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "bedchr")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1 GHC.Generics.R Lib.UChr>_R) <x>_N))
                       g3
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <*>_N <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <*>_N
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "bedstart")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1
                                         GHC.Generics.R GHC.Integer.Type.Integer>_R) <x>_N)))
                    (GHC.Generics.:*:
                       @ *
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "bedend")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "bedname")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1
                               GHC.Generics.R Data.ByteString.Internal.ByteString))
                       @ x
                       g4
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <*>_N <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <*>_N
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "bedend")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1
                                         GHC.Generics.R GHC.Integer.Type.Integer>_R) <x>_N))
                       g5
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <*>_N
                                      <GHC.Generics.R>_P
                                      <Data.ByteString.Internal.ByteString>_R
                                      <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <*>_N
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "bedname")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1
                                         GHC.Generics.R
                                         Data.ByteString.Internal.ByteString>_R) <x>_N))))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <*>_N
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "BedRecord" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <(GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "bedchr")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                             GHC.Generics.:*: GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "bedstart")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R GHC.Integer.Type.Integer))
                            GHC.Generics.:*: (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "bedend")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R GHC.Integer.Type.Integer)
                                              GHC.Generics.:*: GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Base.Just "bedname")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    Data.ByteString.Internal.ByteString))>_R) <x>_N) }) -}
629d9d543a825463dd90ec69a5fb19f7
  $fGenericBedRecord_$cto ::
    GHC.Generics.Rep Lib.BedRecord x -> Lib.BedRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SS),1*U(1*U(U,U),1*U(U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (ds6 :: GHC.Generics.Rep Lib.BedRecord x) ->
                 case ds6
                        `cast`
                      (Trans
                           (Sub (Lib.Rep_BedRecord[0]))
                           (Trans
                                (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.D>_P
                                     <'GHC.Generics.MetaData
                                        "BedRecord"
                                        "Lib"
                                        "primerclip-0.3.5.0-EKfIVVkqmIVLNVlfKBtA8g"
                                        'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "BedRecord" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                        ((GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "bedchr")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                                          GHC.Generics.:*: GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "bedstart")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R
                                                                GHC.Integer.Type.Integer))
                                         GHC.Generics.:*: (GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "bedend")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R
                                                                GHC.Integer.Type.Integer)
                                                           GHC.Generics.:*: GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "bedname")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 Data.ByteString.Internal.ByteString)))>_R)
                                (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "BedRecord" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <(GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "bedchr")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                                       GHC.Generics.:*: GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "bedstart")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R
                                                             GHC.Integer.Type.Integer))
                                      GHC.Generics.:*: (GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "bedend")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R
                                                             GHC.Integer.Type.Integer)
                                                        GHC.Generics.:*: GHC.Generics.M1
                                                                           GHC.Generics.S
                                                                           ('GHC.Generics.MetaSel
                                                                              ('GHC.Base.Just
                                                                                 "bedname")
                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                              'GHC.Generics.NoSourceStrictness
                                                                              'GHC.Generics.DecidedLazy)
                                                                           (GHC.Generics.K1
                                                                              GHC.Generics.R
                                                                              Data.ByteString.Internal.ByteString))>_R)) <x>_N) of wild { GHC.Generics.:*: ds7 ds8 ->
                 case ds7 of wild1 { GHC.Generics.:*: ds9 ds10 ->
                 case ds8 of wild2 { GHC.Generics.:*: ds11 ds12 ->
                 Lib.BedRecord
                   ds9
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "bedchr")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R Lib.UChr>_R <x>_N)
                        (GHC.Generics.N:K1[0] <*>_N <GHC.Generics.R>_P <Lib.UChr>_R <x>_P))
                   ds10
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "bedstart")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ds11
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "bedend")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ds12
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "bedname")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N
                             <GHC.Generics.R>_P
                             <Data.ByteString.Internal.ByteString>_R
                             <x>_P)) } } }) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  $fGenericPairedAln :: GHC.Generics.Generic Lib.PairedAln
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.PairedAln
                  Lib.$fGenericPairedAln1
                    `cast`
                  (forall (x :: <*>_N).
                   <Lib.PairedAln>_R
                   ->_R Trans
                            (Sym (GHC.Generics.N:M1[0]
                                      <*>_N
                                      <GHC.Generics.D>_P
                                      <'GHC.Generics.MetaData
                                         "PairedAln"
                                         "Lib"
                                         "primerclip-0.3.5.0-EKfIVVkqmIVLNVlfKBtA8g"
                                         'GHC.Types.False>_P
                                      <GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "PairedAln" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                         ((GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "r1prim")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1 GHC.Generics.R Lib.AlignedRead)
                                           GHC.Generics.:*: GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "r2prim")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R Lib.AlignedRead))
                                          GHC.Generics.:*: (GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "r1secs")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R [Lib.AlignedRead])
                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "r2secs")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  [Lib.AlignedRead])))>_R))
                            (Sub (Sym (Lib.Rep_PairedAln[0]))) <x>_N)
                  Lib.$fGenericPairedAln_$cto -}
c13536c0ddcfc999f8a708d0f6fd76f1
  $fGenericPairedAln1 ::
    Lib.PairedAln
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "PairedAln" 'GHC.Generics.PrefixI 'GHC.Types.True)
         ((GHC.Generics.M1
             GHC.Generics.S
             ('GHC.Generics.MetaSel
                ('GHC.Base.Just "r1prim")
                'GHC.Generics.NoSourceUnpackedness
                'GHC.Generics.NoSourceStrictness
                'GHC.Generics.DecidedLazy)
             (GHC.Generics.K1 GHC.Generics.R Lib.AlignedRead)
           GHC.Generics.:*: GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "r2prim")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R Lib.AlignedRead))
          GHC.Generics.:*: (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "r1secs")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R [Lib.AlignedRead])
                            GHC.Generics.:*: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "r2secs")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1 GHC.Generics.R [Lib.AlignedRead])))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: Lib.PairedAln) ->
                 case x1 of wild { Lib.PairedAln g2 g3 g4 g5 ->
                 (GHC.Generics.:*:
                    @ *
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "r1prim")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R Lib.AlignedRead)
                       GHC.Generics.:*: GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "r2prim")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1 GHC.Generics.R Lib.AlignedRead))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "r1secs")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R [Lib.AlignedRead])
                       GHC.Generics.:*: GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "r2secs")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1 GHC.Generics.R [Lib.AlignedRead]))
                    @ x
                    (GHC.Generics.:*:
                       @ *
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "r1prim")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R Lib.AlignedRead))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "r2prim")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R Lib.AlignedRead))
                       @ x
                       g2
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <*>_N <GHC.Generics.R>_P <Lib.AlignedRead>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <*>_N
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "r1prim")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1 GHC.Generics.R Lib.AlignedRead>_R) <x>_N))
                       g3
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <*>_N <GHC.Generics.R>_P <Lib.AlignedRead>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <*>_N
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "r2prim")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1 GHC.Generics.R Lib.AlignedRead>_R) <x>_N)))
                    (GHC.Generics.:*:
                       @ *
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "r1secs")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R [Lib.AlignedRead]))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "r2secs")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R [Lib.AlignedRead]))
                       @ x
                       g4
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <*>_N <GHC.Generics.R>_P <[Lib.AlignedRead]>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <*>_N
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "r1secs")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1 GHC.Generics.R [Lib.AlignedRead]>_R) <x>_N))
                       g5
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <*>_N <GHC.Generics.R>_P <[Lib.AlignedRead]>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <*>_N
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "r2secs")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1
                                         GHC.Generics.R [Lib.AlignedRead]>_R) <x>_N))))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <*>_N
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "PairedAln" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <(GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "r1prim")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R Lib.AlignedRead)
                             GHC.Generics.:*: GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "r2prim")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1 GHC.Generics.R Lib.AlignedRead))
                            GHC.Generics.:*: (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "r1secs")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1 GHC.Generics.R [Lib.AlignedRead])
                                              GHC.Generics.:*: GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Base.Just "r2secs")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    [Lib.AlignedRead]))>_R) <x>_N) }) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  $fGenericPairedAln_$cto ::
    GHC.Generics.Rep Lib.PairedAln x -> Lib.PairedAln
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SS),1*U(1*U(U,U),1*U(U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (ds6 :: GHC.Generics.Rep Lib.PairedAln x) ->
                 case ds6
                        `cast`
                      (Trans
                           (Sub (Lib.Rep_PairedAln[0]))
                           (Trans
                                (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.D>_P
                                     <'GHC.Generics.MetaData
                                        "PairedAln"
                                        "Lib"
                                        "primerclip-0.3.5.0-EKfIVVkqmIVLNVlfKBtA8g"
                                        'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "PairedAln" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                        ((GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "r1prim")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.K1 GHC.Generics.R Lib.AlignedRead)
                                          GHC.Generics.:*: GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "r2prim")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R Lib.AlignedRead))
                                         GHC.Generics.:*: (GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "r1secs")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R [Lib.AlignedRead])
                                                           GHC.Generics.:*: GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "r2secs")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 [Lib.AlignedRead])))>_R)
                                (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "PairedAln" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <(GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "r1prim")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.K1 GHC.Generics.R Lib.AlignedRead)
                                       GHC.Generics.:*: GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "r2prim")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R Lib.AlignedRead))
                                      GHC.Generics.:*: (GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "r1secs")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R [Lib.AlignedRead])
                                                        GHC.Generics.:*: GHC.Generics.M1
                                                                           GHC.Generics.S
                                                                           ('GHC.Generics.MetaSel
                                                                              ('GHC.Base.Just
                                                                                 "r2secs")
                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                              'GHC.Generics.NoSourceStrictness
                                                                              'GHC.Generics.DecidedLazy)
                                                                           (GHC.Generics.K1
                                                                              GHC.Generics.R
                                                                              [Lib.AlignedRead]))>_R)) <x>_N) of wild { GHC.Generics.:*: ds7 ds8 ->
                 case ds7 of wild1 { GHC.Generics.:*: ds9 ds10 ->
                 case ds8 of wild2 { GHC.Generics.:*: ds11 ds12 ->
                 Lib.PairedAln
                   ds9
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "r1prim")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R Lib.AlignedRead>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <Lib.AlignedRead>_R <x>_P))
                   ds10
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "r2prim")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R Lib.AlignedRead>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <Lib.AlignedRead>_R <x>_P))
                   ds11
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "r1secs")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R [Lib.AlignedRead]>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <[Lib.AlignedRead]>_R <x>_P))
                   ds12
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "r2secs")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R [Lib.AlignedRead]>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <[Lib.AlignedRead]>_R <x>_P)) } } }) -}
8c7f5d294706d5be2e2968524bb42a6a
  $fGenericUChr :: GHC.Generics.Generic Lib.UChr
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.UChr
                  Lib.$fGenericUChr1
                    `cast`
                  (forall (x :: <*>_N).
                   <Lib.UChr>_R
                   ->_R Trans
                            (Sym (GHC.Generics.N:M1[0]
                                      <*>_N
                                      <GHC.Generics.D>_P
                                      <'GHC.Generics.MetaData
                                         "UChr"
                                         "Lib"
                                         "primerclip-0.3.5.0-EKfIVVkqmIVLNVlfKBtA8g"
                                         'GHC.Types.False>_P
                                      <(((((GHC.Generics.M1
                                              GHC.Generics.C
                                              ('GHC.Generics.MetaCons
                                                 "C1" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                              GHC.Generics.U1
                                            GHC.Generics.:+: (GHC.Generics.M1
                                                                GHC.Generics.C
                                                                ('GHC.Generics.MetaCons
                                                                   "C2"
                                                                   'GHC.Generics.PrefixI
                                                                   'GHC.Types.False)
                                                                GHC.Generics.U1
                                                              GHC.Generics.:+: GHC.Generics.M1
                                                                                 GHC.Generics.C
                                                                                 ('GHC.Generics.MetaCons
                                                                                    "C3"
                                                                                    'GHC.Generics.PrefixI
                                                                                    'GHC.Types.False)
                                                                                 GHC.Generics.U1))
                                           GHC.Generics.:+: (GHC.Generics.M1
                                                               GHC.Generics.C
                                                               ('GHC.Generics.MetaCons
                                                                  "C4"
                                                                  'GHC.Generics.PrefixI
                                                                  'GHC.Types.False)
                                                               GHC.Generics.U1
                                                             GHC.Generics.:+: (GHC.Generics.M1
                                                                                 GHC.Generics.C
                                                                                 ('GHC.Generics.MetaCons
                                                                                    "C5"
                                                                                    'GHC.Generics.PrefixI
                                                                                    'GHC.Types.False)
                                                                                 GHC.Generics.U1
                                                                               GHC.Generics.:+: GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "C6"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1)))
                                          GHC.Generics.:+: ((GHC.Generics.M1
                                                               GHC.Generics.C
                                                               ('GHC.Generics.MetaCons
                                                                  "C7"
                                                                  'GHC.Generics.PrefixI
                                                                  'GHC.Types.False)
                                                               GHC.Generics.U1
                                                             GHC.Generics.:+: (GHC.Generics.M1
                                                                                 GHC.Generics.C
                                                                                 ('GHC.Generics.MetaCons
                                                                                    "C8"
                                                                                    'GHC.Generics.PrefixI
                                                                                    'GHC.Types.False)
                                                                                 GHC.Generics.U1
                                                                               GHC.Generics.:+: GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "C9"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1))
                                                            GHC.Generics.:+: ((GHC.Generics.M1
                                                                                 GHC.Generics.C
                                                                                 ('GHC.Generics.MetaCons
                                                                                    "C10"
                                                                                    'GHC.Generics.PrefixI
                                                                                    'GHC.Types.False)
                                                                                 GHC.Generics.U1
                                                                               GHC.Generics.:+: GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "C11"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1)
                                                                              GHC.Generics.:+: (GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "C12"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "C13"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1))))
                                         GHC.Generics.:+: (((GHC.Generics.M1
                                                               GHC.Generics.C
                                                               ('GHC.Generics.MetaCons
                                                                  "C14"
                                                                  'GHC.Generics.PrefixI
                                                                  'GHC.Types.False)
                                                               GHC.Generics.U1
                                                             GHC.Generics.:+: (GHC.Generics.M1
                                                                                 GHC.Generics.C
                                                                                 ('GHC.Generics.MetaCons
                                                                                    "C15"
                                                                                    'GHC.Generics.PrefixI
                                                                                    'GHC.Types.False)
                                                                                 GHC.Generics.U1
                                                                               GHC.Generics.:+: GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "C16"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1))
                                                            GHC.Generics.:+: ((GHC.Generics.M1
                                                                                 GHC.Generics.C
                                                                                 ('GHC.Generics.MetaCons
                                                                                    "C17"
                                                                                    'GHC.Generics.PrefixI
                                                                                    'GHC.Types.False)
                                                                                 GHC.Generics.U1
                                                                               GHC.Generics.:+: GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "C18"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1)
                                                                              GHC.Generics.:+: (GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "C19"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "C20"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1)))
                                                           GHC.Generics.:+: ((GHC.Generics.M1
                                                                                GHC.Generics.C
                                                                                ('GHC.Generics.MetaCons
                                                                                   "C21"
                                                                                   'GHC.Generics.PrefixI
                                                                                   'GHC.Types.False)
                                                                                GHC.Generics.U1
                                                                              GHC.Generics.:+: (GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "C22"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "CX"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1))
                                                                             GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "CY"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "CMT"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1)
                                                                                               GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "Chr1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1
                                                                                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "Chr2"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1)))))
                                        GHC.Generics.:+: ((((GHC.Generics.M1
                                                               GHC.Generics.C
                                                               ('GHC.Generics.MetaCons
                                                                  "Chr3"
                                                                  'GHC.Generics.PrefixI
                                                                  'GHC.Types.False)
                                                               GHC.Generics.U1
                                                             GHC.Generics.:+: (GHC.Generics.M1
                                                                                 GHC.Generics.C
                                                                                 ('GHC.Generics.MetaCons
                                                                                    "Chr4"
                                                                                    'GHC.Generics.PrefixI
                                                                                    'GHC.Types.False)
                                                                                 GHC.Generics.U1
                                                                               GHC.Generics.:+: GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "Chr5"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1))
                                                            GHC.Generics.:+: ((GHC.Generics.M1
                                                                                 GHC.Generics.C
                                                                                 ('GHC.Generics.MetaCons
                                                                                    "Chr6"
                                                                                    'GHC.Generics.PrefixI
                                                                                    'GHC.Types.False)
                                                                                 GHC.Generics.U1
                                                                               GHC.Generics.:+: GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "Chr7"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1)
                                                                              GHC.Generics.:+: (GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "Chr8"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "Chr9"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1)))
                                                           GHC.Generics.:+: ((GHC.Generics.M1
                                                                                GHC.Generics.C
                                                                                ('GHC.Generics.MetaCons
                                                                                   "Chr10"
                                                                                   'GHC.Generics.PrefixI
                                                                                   'GHC.Types.False)
                                                                                GHC.Generics.U1
                                                                              GHC.Generics.:+: (GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "Chr11"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "Chr12"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1))
                                                                             GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "Chr13"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "Chr14"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1)
                                                                                               GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "Chr15"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1
                                                                                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "Chr16"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1))))
                                                          GHC.Generics.:+: (((GHC.Generics.M1
                                                                                GHC.Generics.C
                                                                                ('GHC.Generics.MetaCons
                                                                                   "Chr17"
                                                                                   'GHC.Generics.PrefixI
                                                                                   'GHC.Types.False)
                                                                                GHC.Generics.U1
                                                                              GHC.Generics.:+: (GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "Chr18"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "Chr19"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1))
                                                                             GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "Chr20"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "Chr21"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1)
                                                                                               GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "Chr22"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1
                                                                                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "ChrX"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1)))
                                                                            GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                 GHC.Generics.C
                                                                                                 ('GHC.Generics.MetaCons
                                                                                                    "ChrY"
                                                                                                    'GHC.Generics.PrefixI
                                                                                                    'GHC.Types.False)
                                                                                                 GHC.Generics.U1
                                                                                               GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "ChrM"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1
                                                                                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000207P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1))
                                                                                              GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000226P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1
                                                                                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000229P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1)
                                                                                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000231P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1
                                                                                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                                     GHC.Generics.C
                                                                                                                                                     ('GHC.Generics.MetaCons
                                                                                                                                                        "GL000210P1"
                                                                                                                                                        'GHC.Generics.PrefixI
                                                                                                                                                        'GHC.Types.False)
                                                                                                                                                     GHC.Generics.U1))))))
                                       GHC.Generics.:+: (((((GHC.Generics.M1
                                                               GHC.Generics.C
                                                               ('GHC.Generics.MetaCons
                                                                  "GL000239P1"
                                                                  'GHC.Generics.PrefixI
                                                                  'GHC.Types.False)
                                                               GHC.Generics.U1
                                                             GHC.Generics.:+: (GHC.Generics.M1
                                                                                 GHC.Generics.C
                                                                                 ('GHC.Generics.MetaCons
                                                                                    "GL000235P1"
                                                                                    'GHC.Generics.PrefixI
                                                                                    'GHC.Types.False)
                                                                                 GHC.Generics.U1
                                                                               GHC.Generics.:+: GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "GL000201P1"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1))
                                                            GHC.Generics.:+: ((GHC.Generics.M1
                                                                                 GHC.Generics.C
                                                                                 ('GHC.Generics.MetaCons
                                                                                    "GL000247P1"
                                                                                    'GHC.Generics.PrefixI
                                                                                    'GHC.Types.False)
                                                                                 GHC.Generics.U1
                                                                               GHC.Generics.:+: GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "GL000245P1"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1)
                                                                              GHC.Generics.:+: (GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "GL000197P1"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000203P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1)))
                                                           GHC.Generics.:+: ((GHC.Generics.M1
                                                                                GHC.Generics.C
                                                                                ('GHC.Generics.MetaCons
                                                                                   "GL000246P1"
                                                                                   'GHC.Generics.PrefixI
                                                                                   'GHC.Types.False)
                                                                                GHC.Generics.U1
                                                                              GHC.Generics.:+: (GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "GL000249P1"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000196P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1))
                                                                             GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "GL000248P1"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000244P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1)
                                                                                               GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000238P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1
                                                                                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000202P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1))))
                                                          GHC.Generics.:+: (((GHC.Generics.M1
                                                                                GHC.Generics.C
                                                                                ('GHC.Generics.MetaCons
                                                                                   "GL000234P1"
                                                                                   'GHC.Generics.PrefixI
                                                                                   'GHC.Types.False)
                                                                                GHC.Generics.U1
                                                                              GHC.Generics.:+: (GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "GL000232P1"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000206P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1))
                                                                             GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "GL000240P1"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000236P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1)
                                                                                               GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000241P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1
                                                                                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000243P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1)))
                                                                            GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                 GHC.Generics.C
                                                                                                 ('GHC.Generics.MetaCons
                                                                                                    "GL000242P1"
                                                                                                    'GHC.Generics.PrefixI
                                                                                                    'GHC.Types.False)
                                                                                                 GHC.Generics.U1
                                                                                               GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000230P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1
                                                                                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000237P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1))
                                                                                              GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000233P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1
                                                                                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000204P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1)
                                                                                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000198P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1
                                                                                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                                     GHC.Generics.C
                                                                                                                                                     ('GHC.Generics.MetaCons
                                                                                                                                                        "GL000208P1"
                                                                                                                                                        'GHC.Generics.PrefixI
                                                                                                                                                        'GHC.Types.False)
                                                                                                                                                     GHC.Generics.U1)))))
                                                         GHC.Generics.:+: ((((GHC.Generics.M1
                                                                                GHC.Generics.C
                                                                                ('GHC.Generics.MetaCons
                                                                                   "GL000191P1"
                                                                                   'GHC.Generics.PrefixI
                                                                                   'GHC.Types.False)
                                                                                GHC.Generics.U1
                                                                              GHC.Generics.:+: (GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "GL000227P1"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000228P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1))
                                                                             GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "GL000214P1"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000221P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1)
                                                                                               GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000209P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1
                                                                                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000218P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1)))
                                                                            GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                 GHC.Generics.C
                                                                                                 ('GHC.Generics.MetaCons
                                                                                                    "GL000220P1"
                                                                                                    'GHC.Generics.PrefixI
                                                                                                    'GHC.Types.False)
                                                                                                 GHC.Generics.U1
                                                                                               GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000213P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1
                                                                                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000211P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1))
                                                                                              GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000199P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1
                                                                                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000217P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1)
                                                                                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000216P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1
                                                                                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                                     GHC.Generics.C
                                                                                                                                                     ('GHC.Generics.MetaCons
                                                                                                                                                        "GL000215P1"
                                                                                                                                                        'GHC.Generics.PrefixI
                                                                                                                                                        'GHC.Types.False)
                                                                                                                                                     GHC.Generics.U1))))
                                                                           GHC.Generics.:+: (((GHC.Generics.M1
                                                                                                 GHC.Generics.C
                                                                                                 ('GHC.Generics.MetaCons
                                                                                                    "GL000205P1"
                                                                                                    'GHC.Generics.PrefixI
                                                                                                    'GHC.Types.False)
                                                                                                 GHC.Generics.U1
                                                                                               GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000219P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1
                                                                                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000224P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1))
                                                                                              GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000223P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1
                                                                                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000195P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1)
                                                                                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000212P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1
                                                                                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                                     GHC.Generics.C
                                                                                                                                                     ('GHC.Generics.MetaCons
                                                                                                                                                        "GL000222P1"
                                                                                                                                                        'GHC.Generics.PrefixI
                                                                                                                                                        'GHC.Types.False)
                                                                                                                                                     GHC.Generics.U1)))
                                                                                             GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                                  GHC.Generics.C
                                                                                                                  ('GHC.Generics.MetaCons
                                                                                                                     "GL000200P1"
                                                                                                                     'GHC.Generics.PrefixI
                                                                                                                     'GHC.Types.False)
                                                                                                                  GHC.Generics.U1
                                                                                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000193P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1
                                                                                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                                     GHC.Generics.C
                                                                                                                                                     ('GHC.Generics.MetaCons
                                                                                                                                                        "GL000194P1"
                                                                                                                                                        'GHC.Generics.PrefixI
                                                                                                                                                        'GHC.Types.False)
                                                                                                                                                     GHC.Generics.U1))
                                                                                                               GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000225P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1
                                                                                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                                     GHC.Generics.C
                                                                                                                                                     ('GHC.Generics.MetaCons
                                                                                                                                                        "GL000192P1"
                                                                                                                                                        'GHC.Generics.PrefixI
                                                                                                                                                        'GHC.Types.False)
                                                                                                                                                     GHC.Generics.U1)
                                                                                                                                 GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                                                     GHC.Generics.C
                                                                                                                                                     ('GHC.Generics.MetaCons
                                                                                                                                                        "NC_007605"
                                                                                                                                                        'GHC.Generics.PrefixI
                                                                                                                                                        'GHC.Types.False)
                                                                                                                                                     GHC.Generics.U1
                                                                                                                                                   GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                                                      GHC.Generics.C
                                                                                                                                                                      ('GHC.Generics.MetaCons
                                                                                                                                                                         "NONE"
                                                                                                                                                                         'GHC.Generics.PrefixI
                                                                                                                                                                         'GHC.Types.False)
                                                                                                                                                                      GHC.Generics.U1))))))>_R))
                            (Sub (Sym (Lib.Rep_UChr[0]))) <x>_N)
                  Lib.$fGenericUChr_$cto -}
8c7f5d294706d5be2e2968524bb42a6a
  $fGenericUChr1 ::
    Lib.UChr
    -> (GHC.Generics.:+:)
         (((((GHC.Generics.M1
                GHC.Generics.C
                ('GHC.Generics.MetaCons
                   "C1" 'GHC.Generics.PrefixI 'GHC.Types.False)
                GHC.Generics.U1
              GHC.Generics.:+: (GHC.Generics.M1
                                  GHC.Generics.C
                                  ('GHC.Generics.MetaCons
                                     "C2" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                  GHC.Generics.U1
                                GHC.Generics.:+: GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "C3" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                   GHC.Generics.U1))
             GHC.Generics.:+: (GHC.Generics.M1
                                 GHC.Generics.C
                                 ('GHC.Generics.MetaCons
                                    "C4" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: (GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "C5" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "C6"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1)))
            GHC.Generics.:+: ((GHC.Generics.M1
                                 GHC.Generics.C
                                 ('GHC.Generics.MetaCons
                                    "C7" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: (GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "C8" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "C9"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1))
                              GHC.Generics.:+: ((GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "C10" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "C11"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1)
                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "C12"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "C13"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1))))
           GHC.Generics.:+: (((GHC.Generics.M1
                                 GHC.Generics.C
                                 ('GHC.Generics.MetaCons
                                    "C14" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: (GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "C15" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "C16"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1))
                              GHC.Generics.:+: ((GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "C17" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "C18"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1)
                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "C19"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "C20"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1)))
                             GHC.Generics.:+: ((GHC.Generics.M1
                                                  GHC.Generics.C
                                                  ('GHC.Generics.MetaCons
                                                     "C21" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                  GHC.Generics.U1
                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "C22"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "CX"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1))
                                               GHC.Generics.:+: ((GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "CY"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "CMT"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1)
                                                                 GHC.Generics.:+: (GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "Chr1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1
                                                                                   GHC.Generics.:+: GHC.Generics.M1
                                                                                                      GHC.Generics.C
                                                                                                      ('GHC.Generics.MetaCons
                                                                                                         "Chr2"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False)
                                                                                                      GHC.Generics.U1)))))
          GHC.Generics.:+: ((((GHC.Generics.M1
                                 GHC.Generics.C
                                 ('GHC.Generics.MetaCons
                                    "Chr3" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: (GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "Chr4" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "Chr5"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1))
                              GHC.Generics.:+: ((GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "Chr6" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "Chr7"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1)
                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "Chr8"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "Chr9"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1)))
                             GHC.Generics.:+: ((GHC.Generics.M1
                                                  GHC.Generics.C
                                                  ('GHC.Generics.MetaCons
                                                     "Chr10" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                  GHC.Generics.U1
                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "Chr11"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "Chr12"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1))
                                               GHC.Generics.:+: ((GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "Chr13"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "Chr14"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1)
                                                                 GHC.Generics.:+: (GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "Chr15"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1
                                                                                   GHC.Generics.:+: GHC.Generics.M1
                                                                                                      GHC.Generics.C
                                                                                                      ('GHC.Generics.MetaCons
                                                                                                         "Chr16"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False)
                                                                                                      GHC.Generics.U1))))
                            GHC.Generics.:+: (((GHC.Generics.M1
                                                  GHC.Generics.C
                                                  ('GHC.Generics.MetaCons
                                                     "Chr17" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                  GHC.Generics.U1
                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "Chr18"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "Chr19"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1))
                                               GHC.Generics.:+: ((GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "Chr20"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "Chr21"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1)
                                                                 GHC.Generics.:+: (GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "Chr22"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1
                                                                                   GHC.Generics.:+: GHC.Generics.M1
                                                                                                      GHC.Generics.C
                                                                                                      ('GHC.Generics.MetaCons
                                                                                                         "ChrX"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False)
                                                                                                      GHC.Generics.U1)))
                                              GHC.Generics.:+: ((GHC.Generics.M1
                                                                   GHC.Generics.C
                                                                   ('GHC.Generics.MetaCons
                                                                      "ChrY"
                                                                      'GHC.Generics.PrefixI
                                                                      'GHC.Types.False)
                                                                   GHC.Generics.U1
                                                                 GHC.Generics.:+: (GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "ChrM"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1
                                                                                   GHC.Generics.:+: GHC.Generics.M1
                                                                                                      GHC.Generics.C
                                                                                                      ('GHC.Generics.MetaCons
                                                                                                         "GL000207P1"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False)
                                                                                                      GHC.Generics.U1))
                                                                GHC.Generics.:+: ((GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000226P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1
                                                                                   GHC.Generics.:+: GHC.Generics.M1
                                                                                                      GHC.Generics.C
                                                                                                      ('GHC.Generics.MetaCons
                                                                                                         "GL000229P1"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False)
                                                                                                      GHC.Generics.U1)
                                                                                  GHC.Generics.:+: (GHC.Generics.M1
                                                                                                      GHC.Generics.C
                                                                                                      ('GHC.Generics.MetaCons
                                                                                                         "GL000231P1"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False)
                                                                                                      GHC.Generics.U1
                                                                                                    GHC.Generics.:+: GHC.Generics.M1
                                                                                                                       GHC.Generics.C
                                                                                                                       ('GHC.Generics.MetaCons
                                                                                                                          "GL000210P1"
                                                                                                                          'GHC.Generics.PrefixI
                                                                                                                          'GHC.Types.False)
                                                                                                                       GHC.Generics.U1))))))
         (((((GHC.Generics.M1
                GHC.Generics.C
                ('GHC.Generics.MetaCons
                   "GL000239P1" 'GHC.Generics.PrefixI 'GHC.Types.False)
                GHC.Generics.U1
              GHC.Generics.:+: (GHC.Generics.M1
                                  GHC.Generics.C
                                  ('GHC.Generics.MetaCons
                                     "GL000235P1" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                  GHC.Generics.U1
                                GHC.Generics.:+: GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "GL000201P1"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1))
             GHC.Generics.:+: ((GHC.Generics.M1
                                  GHC.Generics.C
                                  ('GHC.Generics.MetaCons
                                     "GL000247P1" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                  GHC.Generics.U1
                                GHC.Generics.:+: GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "GL000245P1"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1)
                               GHC.Generics.:+: (GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "GL000197P1"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000203P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1)))
            GHC.Generics.:+: ((GHC.Generics.M1
                                 GHC.Generics.C
                                 ('GHC.Generics.MetaCons
                                    "GL000246P1" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: (GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "GL000249P1"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000196P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1))
                              GHC.Generics.:+: ((GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "GL000248P1"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000244P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1)
                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000238P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000202P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1))))
           GHC.Generics.:+: (((GHC.Generics.M1
                                 GHC.Generics.C
                                 ('GHC.Generics.MetaCons
                                    "GL000234P1" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: (GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "GL000232P1"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000206P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1))
                              GHC.Generics.:+: ((GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "GL000240P1"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000236P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1)
                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000241P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000243P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1)))
                             GHC.Generics.:+: ((GHC.Generics.M1
                                                  GHC.Generics.C
                                                  ('GHC.Generics.MetaCons
                                                     "GL000242P1"
                                                     'GHC.Generics.PrefixI
                                                     'GHC.Types.False)
                                                  GHC.Generics.U1
                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000230P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000237P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1))
                                               GHC.Generics.:+: ((GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000233P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000204P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1)
                                                                 GHC.Generics.:+: (GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000198P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1
                                                                                   GHC.Generics.:+: GHC.Generics.M1
                                                                                                      GHC.Generics.C
                                                                                                      ('GHC.Generics.MetaCons
                                                                                                         "GL000208P1"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False)
                                                                                                      GHC.Generics.U1)))))
          GHC.Generics.:+: ((((GHC.Generics.M1
                                 GHC.Generics.C
                                 ('GHC.Generics.MetaCons
                                    "GL000191P1" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: (GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "GL000227P1"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000228P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1))
                              GHC.Generics.:+: ((GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "GL000214P1"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000221P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1)
                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000209P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000218P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1)))
                             GHC.Generics.:+: ((GHC.Generics.M1
                                                  GHC.Generics.C
                                                  ('GHC.Generics.MetaCons
                                                     "GL000220P1"
                                                     'GHC.Generics.PrefixI
                                                     'GHC.Types.False)
                                                  GHC.Generics.U1
                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000213P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000211P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1))
                                               GHC.Generics.:+: ((GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000199P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000217P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1)
                                                                 GHC.Generics.:+: (GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000216P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1
                                                                                   GHC.Generics.:+: GHC.Generics.M1
                                                                                                      GHC.Generics.C
                                                                                                      ('GHC.Generics.MetaCons
                                                                                                         "GL000215P1"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False)
                                                                                                      GHC.Generics.U1))))
                            GHC.Generics.:+: (((GHC.Generics.M1
                                                  GHC.Generics.C
                                                  ('GHC.Generics.MetaCons
                                                     "GL000205P1"
                                                     'GHC.Generics.PrefixI
                                                     'GHC.Types.False)
                                                  GHC.Generics.U1
                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000219P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000224P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1))
                                               GHC.Generics.:+: ((GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000223P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000195P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1)
                                                                 GHC.Generics.:+: (GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000212P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1
                                                                                   GHC.Generics.:+: GHC.Generics.M1
                                                                                                      GHC.Generics.C
                                                                                                      ('GHC.Generics.MetaCons
                                                                                                         "GL000222P1"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False)
                                                                                                      GHC.Generics.U1)))
                                              GHC.Generics.:+: ((GHC.Generics.M1
                                                                   GHC.Generics.C
                                                                   ('GHC.Generics.MetaCons
                                                                      "GL000200P1"
                                                                      'GHC.Generics.PrefixI
                                                                      'GHC.Types.False)
                                                                   GHC.Generics.U1
                                                                 GHC.Generics.:+: (GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000193P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1
                                                                                   GHC.Generics.:+: GHC.Generics.M1
                                                                                                      GHC.Generics.C
                                                                                                      ('GHC.Generics.MetaCons
                                                                                                         "GL000194P1"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False)
                                                                                                      GHC.Generics.U1))
                                                                GHC.Generics.:+: ((GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000225P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1
                                                                                   GHC.Generics.:+: GHC.Generics.M1
                                                                                                      GHC.Generics.C
                                                                                                      ('GHC.Generics.MetaCons
                                                                                                         "GL000192P1"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False)
                                                                                                      GHC.Generics.U1)
                                                                                  GHC.Generics.:+: (GHC.Generics.M1
                                                                                                      GHC.Generics.C
                                                                                                      ('GHC.Generics.MetaCons
                                                                                                         "NC_007605"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False)
                                                                                                      GHC.Generics.U1
                                                                                                    GHC.Generics.:+: GHC.Generics.M1
                                                                                                                       GHC.Generics.C
                                                                                                                       ('GHC.Generics.MetaCons
                                                                                                                          "NONE"
                                                                                                                          'GHC.Generics.PrefixI
                                                                                                                          'GHC.Types.False)
                                                                                                                       GHC.Generics.U1))))))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
8c7f5d294706d5be2e2968524bb42a6a
  $fGenericUChr_$cto :: GHC.Generics.Rep Lib.UChr x -> Lib.UChr
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
c13536c0ddcfc999f8a708d0f6fd76f1
  $fOrdAlignedRead :: GHC.Classes.Ord Lib.AlignedRead
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.AlignedRead
                  Lib.$fEqAlignedRead
                  Lib.$fOrdAlignedRead_$ccompare
                  Lib.$fOrdAlignedRead_$c<
                  Lib.$fOrdAlignedRead_$c<=
                  Lib.$fOrdAlignedRead_$c>
                  Lib.$fOrdAlignedRead_$c>=
                  Lib.$fOrdAlignedRead_$cmax
                  Lib.$fOrdAlignedRead_$cmin -}
c13536c0ddcfc999f8a708d0f6fd76f1
  $fOrdAlignedRead_$c< ::
    Lib.AlignedRead -> Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.AlignedRead) (y :: Lib.AlignedRead) ->
                 case Lib.$fOrdAlignedRead_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True }) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  $fOrdAlignedRead_$c<= ::
    Lib.AlignedRead -> Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.AlignedRead) (y :: Lib.AlignedRead) ->
                 case Lib.$fOrdAlignedRead_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False }) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  $fOrdAlignedRead_$c> ::
    Lib.AlignedRead -> Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.AlignedRead) (y :: Lib.AlignedRead) ->
                 case Lib.$fOrdAlignedRead_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True }) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  $fOrdAlignedRead_$c>= ::
    Lib.AlignedRead -> Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.AlignedRead) (y :: Lib.AlignedRead) ->
                 case Lib.$fOrdAlignedRead_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False }) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  $fOrdAlignedRead_$ccompare ::
    Lib.AlignedRead -> Lib.AlignedRead -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.AlignedRead) (w1 :: Lib.AlignedRead) ->
                 case w of ww { Lib.AlignedRead ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ->
                 case w1 of ww32 { Lib.AlignedRead ww33 ww34 ww35 ww36 ww37 ww38 ww39 ww40 ww41 ww42 ww43 ww44 ww45 ww46 ww47 ww48 ww49 ww50 ww51 ww52 ww53 ww54 ww55 ww56 ww57 ww58 ww59 ww60 ww61 ww62 ww63 ->
                 Lib.$w$ccompare ww3 ww4 ww6 ww35 ww36 ww38 } }) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  $fOrdAlignedRead_$cmax ::
    Lib.AlignedRead -> Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)><S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.AlignedRead) (y :: Lib.AlignedRead) ->
                 case Lib.$fOrdAlignedRead_$ccompare x y of wild {
                   DEFAULT -> y GHC.Types.GT -> x }) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  $fOrdAlignedRead_$cmin ::
    Lib.AlignedRead -> Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)><S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.AlignedRead) (y :: Lib.AlignedRead) ->
                 case Lib.$fOrdAlignedRead_$ccompare x y of wild {
                   DEFAULT -> x GHC.Types.GT -> y }) -}
b27cefdd8405a17038845775c0c42c29
  $fOrdBEDPE :: GHC.Classes.Ord Lib.BEDPE
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.BEDPE
                  Lib.$fEqBEDPE
                  Lib.$fOrdBEDPE_$ccompare
                  Lib.$fOrdBEDPE_$c<
                  Lib.$fOrdBEDPE_$c<=
                  Lib.$fOrdBEDPE_$c>
                  Lib.$fOrdBEDPE_$c>=
                  Lib.$fOrdBEDPE_$cmax
                  Lib.$fOrdBEDPE_$cmin -}
b27cefdd8405a17038845775c0c42c29
  $fOrdBEDPE_$c< :: Lib.BEDPE -> Lib.BEDPE -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLL),1*U(U,1*U,A,A,A,A,A)><S(SLLLLLL),1*U(U,1*U,A,A,A,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.BEDPE) (w1 :: Lib.BEDPE) ->
                 case w of ww { Lib.BEDPE ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case w1 of ww8 { Lib.BEDPE ww9 ww10 ww11 ww12 ww13 ww14 ww15 ->
                 Lib.$w$c< ww1 ww2 ww9 ww10 } }) -}
b27cefdd8405a17038845775c0c42c29
  $fOrdBEDPE_$c<= :: Lib.BEDPE -> Lib.BEDPE -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLL),1*U(U,1*U,A,A,A,A,A)><S(SLLLLLL),1*U(U,1*U,A,A,A,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.BEDPE) (w1 :: Lib.BEDPE) ->
                 case w of ww { Lib.BEDPE ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case w1 of ww8 { Lib.BEDPE ww9 ww10 ww11 ww12 ww13 ww14 ww15 ->
                 Lib.$w$c<= ww1 ww2 ww9 ww10 } }) -}
b27cefdd8405a17038845775c0c42c29
  $fOrdBEDPE_$c> :: Lib.BEDPE -> Lib.BEDPE -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLL),1*U(U,1*U,A,A,A,A,A)><S(SLLLLLL),1*U(U,1*U,A,A,A,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.BEDPE) (w1 :: Lib.BEDPE) ->
                 case w of ww { Lib.BEDPE ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case w1 of ww8 { Lib.BEDPE ww9 ww10 ww11 ww12 ww13 ww14 ww15 ->
                 Lib.$w$c> ww1 ww2 ww9 ww10 } }) -}
b27cefdd8405a17038845775c0c42c29
  $fOrdBEDPE_$c>= :: Lib.BEDPE -> Lib.BEDPE -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLL),1*U(U,1*U,A,A,A,A,A)><S(SLLLLLL),1*U(U,1*U,A,A,A,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.BEDPE) (w1 :: Lib.BEDPE) ->
                 case w of ww { Lib.BEDPE ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case w1 of ww8 { Lib.BEDPE ww9 ww10 ww11 ww12 ww13 ww14 ww15 ->
                 Lib.$w$c>= ww1 ww2 ww9 ww10 } }) -}
b27cefdd8405a17038845775c0c42c29
  $fOrdBEDPE_$ccompare ::
    Lib.BEDPE -> Lib.BEDPE -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLL),1*U(U,1*U,A,A,A,A,A)><S(SLLLLLL),1*U(U,1*U,A,A,A,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.BEDPE) (w1 :: Lib.BEDPE) ->
                 case w of ww { Lib.BEDPE ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case w1 of ww8 { Lib.BEDPE ww9 ww10 ww11 ww12 ww13 ww14 ww15 ->
                 Lib.$w$ccompare1 ww1 ww2 ww9 ww10 } }) -}
b27cefdd8405a17038845775c0c42c29
  $fOrdBEDPE_$cmax :: Lib.BEDPE -> Lib.BEDPE -> Lib.BEDPE
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLL),1*U(U,U,U,U,U,U,U)><S(SLLLLLL),1*U(U,U,U,U,U,U,U)>m,
     Unfolding: (\ (x :: Lib.BEDPE) (y :: Lib.BEDPE) ->
                 case x of wild { Lib.BEDPE ds6 ds7 ds8 ds9 ds10 ds11 ds12 ->
                 case y of wild1 { Lib.BEDPE ds13 ds14 ds15 ds16 ds17 ds18 ds19 ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ds6 of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ds13 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild3 {
                        GHC.Types.False -> wild
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ds7 ds14 of wild4 {
                             DEFAULT -> wild1 GHC.Types.GT -> wild } }
                   GHC.Types.True -> wild1 } } } } }) -}
b27cefdd8405a17038845775c0c42c29
  $fOrdBEDPE_$cmin :: Lib.BEDPE -> Lib.BEDPE -> Lib.BEDPE
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLL),1*U(U,U,U,U,U,U,U)><S(SLLLLLL),1*U(U,U,U,U,U,U,U)>m,
     Unfolding: (\ (x :: Lib.BEDPE) (y :: Lib.BEDPE) ->
                 case x of wild { Lib.BEDPE ds6 ds7 ds8 ds9 ds10 ds11 ds12 ->
                 case y of wild1 { Lib.BEDPE ds13 ds14 ds15 ds16 ds17 ds18 ds19 ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ds6 of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ds13 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild3 {
                        GHC.Types.False -> wild1
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ds7 ds14 of wild4 {
                             DEFAULT -> wild GHC.Types.GT -> wild1 } }
                   GHC.Types.True -> wild } } } } }) -}
629d9d543a825463dd90ec69a5fb19f7
  $fOrdBedRecord :: GHC.Classes.Ord Lib.BedRecord
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.BedRecord
                  Lib.$fEqBedRecord
                  Lib.$fOrdBedRecord_$ccompare
                  Lib.$fOrdBedRecord_$c<
                  Lib.$fOrdBedRecord_$c<=
                  Lib.$fOrdBedRecord_$c>
                  Lib.$fOrdBedRecord_$c>=
                  Lib.$fOrdBedRecord_$cmax
                  Lib.$fOrdBedRecord_$cmin -}
629d9d543a825463dd90ec69a5fb19f7
  $fOrdBedRecord_$c< ::
    Lib.BedRecord -> Lib.BedRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(U,1*U,A,A)><S(SLLL),1*U(U,1*U,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.BedRecord) (w1 :: Lib.BedRecord) ->
                 case w of ww { Lib.BedRecord ww1 ww2 ww3 ww4 ->
                 case w1 of ww5 { Lib.BedRecord ww6 ww7 ww8 ww9 ->
                 Lib.$w$c<1 ww1 ww2 ww6 ww7 } }) -}
629d9d543a825463dd90ec69a5fb19f7
  $fOrdBedRecord_$c<= ::
    Lib.BedRecord -> Lib.BedRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(U,1*U,A,A)><S(SLLL),1*U(U,1*U,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.BedRecord) (w1 :: Lib.BedRecord) ->
                 case w of ww { Lib.BedRecord ww1 ww2 ww3 ww4 ->
                 case w1 of ww5 { Lib.BedRecord ww6 ww7 ww8 ww9 ->
                 Lib.$w$c<=1 ww1 ww2 ww6 ww7 } }) -}
629d9d543a825463dd90ec69a5fb19f7
  $fOrdBedRecord_$c> ::
    Lib.BedRecord -> Lib.BedRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(U,1*U,A,A)><S(SLLL),1*U(U,1*U,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.BedRecord) (w1 :: Lib.BedRecord) ->
                 case w of ww { Lib.BedRecord ww1 ww2 ww3 ww4 ->
                 case w1 of ww5 { Lib.BedRecord ww6 ww7 ww8 ww9 ->
                 Lib.$w$c>1 ww1 ww2 ww6 ww7 } }) -}
629d9d543a825463dd90ec69a5fb19f7
  $fOrdBedRecord_$c>= ::
    Lib.BedRecord -> Lib.BedRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(U,1*U,A,A)><S(SLLL),1*U(U,1*U,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.BedRecord) (w1 :: Lib.BedRecord) ->
                 case w of ww { Lib.BedRecord ww1 ww2 ww3 ww4 ->
                 case w1 of ww5 { Lib.BedRecord ww6 ww7 ww8 ww9 ->
                 Lib.$w$c>=1 ww1 ww2 ww6 ww7 } }) -}
629d9d543a825463dd90ec69a5fb19f7
  $fOrdBedRecord_$ccompare ::
    Lib.BedRecord -> Lib.BedRecord -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(U,1*U,A,A)><S(SLLL),1*U(U,1*U,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.BedRecord) (w1 :: Lib.BedRecord) ->
                 case w of ww { Lib.BedRecord ww1 ww2 ww3 ww4 ->
                 case w1 of ww5 { Lib.BedRecord ww6 ww7 ww8 ww9 ->
                 Lib.$w$ccompare2 ww1 ww2 ww6 ww7 } }) -}
629d9d543a825463dd90ec69a5fb19f7
  $fOrdBedRecord_$cmax ::
    Lib.BedRecord -> Lib.BedRecord -> Lib.BedRecord
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(U,U,U,U)><S(SLLL),1*U(U,U,U,U)>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.BedRecord) (w1 :: Lib.BedRecord) ->
                 case w of ww { Lib.BedRecord ww1 ww2 ww3 ww4 ->
                 case w1 of ww5 { Lib.BedRecord ww6 ww7 ww8 ww9 ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww1 of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww6 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> Lib.BedRecord ww1 ww2 ww3 ww4
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww2 ww7 of wild2 {
                             DEFAULT -> Lib.BedRecord ww6 ww7 ww8 ww9
                             GHC.Types.GT -> Lib.BedRecord ww1 ww2 ww3 ww4 } }
                   GHC.Types.True -> Lib.BedRecord ww6 ww7 ww8 ww9 } } } } }) -}
629d9d543a825463dd90ec69a5fb19f7
  $fOrdBedRecord_$cmin ::
    Lib.BedRecord -> Lib.BedRecord -> Lib.BedRecord
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(U,U,U,U)><S(SLLL),1*U(U,U,U,U)>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.BedRecord) (w1 :: Lib.BedRecord) ->
                 case w of ww { Lib.BedRecord ww1 ww2 ww3 ww4 ->
                 case w1 of ww5 { Lib.BedRecord ww6 ww7 ww8 ww9 ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww1 of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww6 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> Lib.BedRecord ww6 ww7 ww8 ww9
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww2 ww7 of wild2 {
                             DEFAULT -> Lib.BedRecord ww1 ww2 ww3 ww4
                             GHC.Types.GT -> Lib.BedRecord ww6 ww7 ww8 ww9 } }
                   GHC.Types.True -> Lib.BedRecord ww1 ww2 ww3 ww4 } } } } }) -}
e1e6de4207e3ff4889dbcac2af544cf2
  $fOrdChromNameFormat :: GHC.Classes.Ord Lib.ChromNameFormat
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.ChromNameFormat
                  Lib.$fEqChromNameFormat
                  Lib.$fOrdChromNameFormat_$ccompare
                  Lib.$fOrdChromNameFormat_$c<
                  Lib.$fOrdChromNameFormat_$c<=
                  Lib.$fOrdChromNameFormat_$c>
                  Lib.$fOrdChromNameFormat_$c>=
                  Lib.$fOrdChromNameFormat_$cmax
                  Lib.$fOrdChromNameFormat_$cmin -}
e1e6de4207e3ff4889dbcac2af544cf2
  $fOrdChromNameFormat_$c< ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.ChromNameFormat) (b :: Lib.ChromNameFormat) ->
                 case a of wild {
                   Lib.GRC
                   -> case b of wild1 {
                        Lib.GRC -> GHC.Types.False Lib.UCSC -> GHC.Types.True }
                   Lib.UCSC -> case b of wild1 { DEFAULT -> GHC.Types.False } }) -}
e1e6de4207e3ff4889dbcac2af544cf2
  $fOrdChromNameFormat_$c<= ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.ChromNameFormat) (b :: Lib.ChromNameFormat) ->
                 case b of wild {
                   Lib.GRC
                   -> case a of wild1 {
                        Lib.GRC -> GHC.Types.True Lib.UCSC -> GHC.Types.False }
                   Lib.UCSC -> case a of wild1 { DEFAULT -> GHC.Types.True } }) -}
e1e6de4207e3ff4889dbcac2af544cf2
  $fOrdChromNameFormat_$c> ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, True)
                (\ (a :: Lib.ChromNameFormat) (b :: Lib.ChromNameFormat) ->
                 Lib.$fOrdChromNameFormat_$c< b a) -}
e1e6de4207e3ff4889dbcac2af544cf2
  $fOrdChromNameFormat_$c>= ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.ChromNameFormat) (b :: Lib.ChromNameFormat) ->
                 case a of wild {
                   Lib.GRC
                   -> case b of wild1 {
                        Lib.GRC -> GHC.Types.True Lib.UCSC -> GHC.Types.False }
                   Lib.UCSC -> case b of wild1 { DEFAULT -> GHC.Types.True } }) -}
e1e6de4207e3ff4889dbcac2af544cf2
  $fOrdChromNameFormat_$ccompare ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.ChromNameFormat) (b :: Lib.ChromNameFormat) ->
                 case a of wild {
                   Lib.GRC
                   -> case b of wild1 {
                        Lib.GRC -> GHC.Types.EQ Lib.UCSC -> GHC.Types.LT }
                   Lib.UCSC
                   -> case b of wild1 {
                        Lib.GRC -> GHC.Types.GT Lib.UCSC -> GHC.Types.EQ } }) -}
e1e6de4207e3ff4889dbcac2af544cf2
  $fOrdChromNameFormat_$cmax ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat -> Lib.ChromNameFormat
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.ChromNameFormat) (y :: Lib.ChromNameFormat) ->
                 case y of wild {
                   Lib.GRC -> x
                   Lib.UCSC -> case x of wild1 { DEFAULT -> Lib.UCSC } }) -}
e1e6de4207e3ff4889dbcac2af544cf2
  $fOrdChromNameFormat_$cmin ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat -> Lib.ChromNameFormat
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.ChromNameFormat) (y :: Lib.ChromNameFormat) ->
                 case y of wild {
                   Lib.GRC -> case x of wild1 { DEFAULT -> Lib.GRC }
                   Lib.UCSC -> x }) -}
1b5721207ca1189d551bcd24be98a5dc
  $fOrdMasterRecord :: GHC.Classes.Ord Lib.MasterRecord
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.MasterRecord
                  Lib.$fEqMasterRecord
                  Lib.$fOrdMasterRecord_$ccompare
                  Lib.$fOrdMasterRecord_$c<
                  Lib.$fOrdMasterRecord_$c<=
                  Lib.$fOrdMasterRecord_$c>
                  Lib.$fOrdMasterRecord_$c>=
                  Lib.$fOrdMasterRecord_$cmax
                  Lib.$fOrdMasterRecord_$cmin -}
1b5721207ca1189d551bcd24be98a5dc
  $fOrdMasterRecord_$c< ::
    Lib.MasterRecord -> Lib.MasterRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(U,1*U,1*U,A,A,A,A,A,A,A,A,A)><S(SLLLLLLLLLLL),1*U(U,1*U,1*U,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.MasterRecord) (y :: Lib.MasterRecord) ->
                 case Lib.$fOrdMasterRecord_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True }) -}
1b5721207ca1189d551bcd24be98a5dc
  $fOrdMasterRecord_$c<= ::
    Lib.MasterRecord -> Lib.MasterRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(U,1*U,1*U,A,A,A,A,A,A,A,A,A)><S(SLLLLLLLLLLL),1*U(U,1*U,1*U,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.MasterRecord) (y :: Lib.MasterRecord) ->
                 case Lib.$fOrdMasterRecord_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False }) -}
1b5721207ca1189d551bcd24be98a5dc
  $fOrdMasterRecord_$c> ::
    Lib.MasterRecord -> Lib.MasterRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(U,1*U,1*U,A,A,A,A,A,A,A,A,A)><S(SLLLLLLLLLLL),1*U(U,1*U,1*U,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.MasterRecord) (y :: Lib.MasterRecord) ->
                 case Lib.$fOrdMasterRecord_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True }) -}
1b5721207ca1189d551bcd24be98a5dc
  $fOrdMasterRecord_$c>= ::
    Lib.MasterRecord -> Lib.MasterRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(U,1*U,1*U,A,A,A,A,A,A,A,A,A)><S(SLLLLLLLLLLL),1*U(U,1*U,1*U,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.MasterRecord) (y :: Lib.MasterRecord) ->
                 case Lib.$fOrdMasterRecord_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False }) -}
1b5721207ca1189d551bcd24be98a5dc
  $fOrdMasterRecord_$ccompare ::
    Lib.MasterRecord -> Lib.MasterRecord -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(U,1*U,1*U,A,A,A,A,A,A,A,A,A)><S(SLLLLLLLLLLL),1*U(U,1*U,1*U,A,A,A,A,A,A,A,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.MasterRecord) (w1 :: Lib.MasterRecord) ->
                 case w of ww { Lib.MasterRecord ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ->
                 case w1 of ww13 { Lib.MasterRecord ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ->
                 Lib.$w$ccompare3 ww1 ww2 ww3 ww14 ww15 ww16 } }) -}
1b5721207ca1189d551bcd24be98a5dc
  $fOrdMasterRecord_$cmax ::
    Lib.MasterRecord -> Lib.MasterRecord -> Lib.MasterRecord
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(U,U,U,U,U,U,U,U,U,U,U,U)><S(SLLLLLLLLLLL),1*U(U,U,U,U,U,U,U,U,U,U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.MasterRecord) (y :: Lib.MasterRecord) ->
                 case Lib.$fOrdMasterRecord_$ccompare x y of wild {
                   DEFAULT -> y GHC.Types.GT -> x }) -}
1b5721207ca1189d551bcd24be98a5dc
  $fOrdMasterRecord_$cmin ::
    Lib.MasterRecord -> Lib.MasterRecord -> Lib.MasterRecord
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(U,U,U,U,U,U,U,U,U,U,U,U)><S(SLLLLLLLLLLL),1*U(U,U,U,U,U,U,U,U,U,U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.MasterRecord) (y :: Lib.MasterRecord) ->
                 case Lib.$fOrdMasterRecord_$ccompare x y of wild {
                   DEFAULT -> x GHC.Types.GT -> y }) -}
b5f7c91e0a039228d8ca476cc3bdf320
  $fOrdMidFamily :: GHC.Classes.Ord Lib.MidFamily
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.MidFamily
                  Lib.$fEqMidFamily
                  Lib.$fOrdMidFamily_$ccompare
                  Lib.$fOrdMidFamily_$c<
                  Lib.$fOrdMidFamily_$c<=
                  Lib.$fOrdMidFamily_$c>
                  Lib.$fOrdMidFamily_$c>=
                  Lib.$fOrdMidFamily_$cmax
                  Lib.$fOrdMidFamily_$cmin -}
b5f7c91e0a039228d8ca476cc3bdf320
  $fOrdMidFamily_$c< ::
    Lib.MidFamily -> Lib.MidFamily -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLL),1*U(U,1*U,1*U,A,A,1*U,A,A,A,A)><S(SLLLLLLLLL),1*U(U,1*U,1*U,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.MidFamily) (y :: Lib.MidFamily) ->
                 case Lib.$fOrdMidFamily_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True }) -}
b5f7c91e0a039228d8ca476cc3bdf320
  $fOrdMidFamily_$c<= ::
    Lib.MidFamily -> Lib.MidFamily -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLL),1*U(U,1*U,1*U,A,A,1*U,A,A,A,A)><S(SLLLLLLLLL),1*U(U,1*U,1*U,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.MidFamily) (y :: Lib.MidFamily) ->
                 case Lib.$fOrdMidFamily_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False }) -}
b5f7c91e0a039228d8ca476cc3bdf320
  $fOrdMidFamily_$c> ::
    Lib.MidFamily -> Lib.MidFamily -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLL),1*U(U,1*U,1*U,A,A,1*U,A,A,A,A)><S(SLLLLLLLLL),1*U(U,1*U,1*U,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.MidFamily) (y :: Lib.MidFamily) ->
                 case Lib.$fOrdMidFamily_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True }) -}
b5f7c91e0a039228d8ca476cc3bdf320
  $fOrdMidFamily_$c>= ::
    Lib.MidFamily -> Lib.MidFamily -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLL),1*U(U,1*U,1*U,A,A,1*U,A,A,A,A)><S(SLLLLLLLLL),1*U(U,1*U,1*U,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.MidFamily) (y :: Lib.MidFamily) ->
                 case Lib.$fOrdMidFamily_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False }) -}
b5f7c91e0a039228d8ca476cc3bdf320
  $fOrdMidFamily_$ccompare ::
    Lib.MidFamily -> Lib.MidFamily -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLL),1*U(U,1*U,1*U,A,A,1*U,A,A,A,A)><S(SLLLLLLLLL),1*U(U,1*U,1*U,A,A,1*U,A,A,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.MidFamily) (w1 :: Lib.MidFamily) ->
                 case w of ww { Lib.MidFamily ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ->
                 case w1 of ww11 { Lib.MidFamily ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ->
                 Lib.$w$ccompare4 ww1 ww2 ww3 ww6 ww12 ww13 ww14 ww17 } }) -}
b5f7c91e0a039228d8ca476cc3bdf320
  $fOrdMidFamily_$cmax ::
    Lib.MidFamily -> Lib.MidFamily -> Lib.MidFamily
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLL),1*U(U,U,U,U,U,U,U,U,U,U)><S(SLLLLLLLLL),1*U(U,U,U,U,U,U,U,U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.MidFamily) (y :: Lib.MidFamily) ->
                 case Lib.$fOrdMidFamily_$ccompare x y of wild {
                   DEFAULT -> y GHC.Types.GT -> x }) -}
b5f7c91e0a039228d8ca476cc3bdf320
  $fOrdMidFamily_$cmin ::
    Lib.MidFamily -> Lib.MidFamily -> Lib.MidFamily
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLL),1*U(U,U,U,U,U,U,U,U,U,U)><S(SLLLLLLLLL),1*U(U,U,U,U,U,U,U,U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.MidFamily) (y :: Lib.MidFamily) ->
                 case Lib.$fOrdMidFamily_$ccompare x y of wild {
                   DEFAULT -> x GHC.Types.GT -> y }) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  $fOrdPairedAln :: GHC.Classes.Ord Lib.PairedAln
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.PairedAln
                  Lib.$fEqPairedAln
                  Lib.$fOrdPairedAln_$ccompare
                  Lib.$fOrdPairedAln_$c<
                  Lib.$fOrdPairedAln_$c<=
                  Lib.$fOrdPairedAln_$c>
                  Lib.$fOrdPairedAln_$c>=
                  Lib.$fOrdPairedAln_$cmax
                  Lib.$fOrdPairedAln_$cmin -}
c13536c0ddcfc999f8a708d0f6fd76f1
  $fOrdPairedAln_$c< ::
    Lib.PairedAln -> Lib.PairedAln -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),A,A)><S(S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.PairedAln) (y :: Lib.PairedAln) ->
                 case Lib.$fOrdPairedAln_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True }) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  $fOrdPairedAln_$c<= ::
    Lib.PairedAln -> Lib.PairedAln -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),A,A)><S(S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.PairedAln) (y :: Lib.PairedAln) ->
                 case Lib.$fOrdPairedAln_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False }) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  $fOrdPairedAln_$c> ::
    Lib.PairedAln -> Lib.PairedAln -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),A,A)><S(S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.PairedAln) (y :: Lib.PairedAln) ->
                 case Lib.$fOrdPairedAln_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True }) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  $fOrdPairedAln_$c>= ::
    Lib.PairedAln -> Lib.PairedAln -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),A,A)><S(S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.PairedAln) (y :: Lib.PairedAln) ->
                 case Lib.$fOrdPairedAln_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False }) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  $fOrdPairedAln_$ccompare ::
    Lib.PairedAln -> Lib.PairedAln -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),A,A)><S(S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),A,A)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.PairedAln) (w1 :: Lib.PairedAln) ->
                 case w of ww { Lib.PairedAln ww1 ww2 ww3 ww4 ->
                 case ww1 of ww5 { Lib.AlignedRead ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ww36 ->
                 case w1 of ww37 { Lib.PairedAln ww38 ww39 ww40 ww41 ->
                 case ww38 of ww42 { Lib.AlignedRead ww43 ww44 ww45 ww46 ww47 ww48 ww49 ww50 ww51 ww52 ww53 ww54 ww55 ww56 ww57 ww58 ww59 ww60 ww61 ww62 ww63 ww64 ww65 ww66 ww67 ww68 ww69 ww70 ww71 ww72 ww73 ->
                 Lib.$w$ccompare5 ww8 ww9 ww11 ww2 ww45 ww46 ww48 ww39 } } } }) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  $fOrdPairedAln_$cmax ::
    Lib.PairedAln -> Lib.PairedAln -> Lib.PairedAln
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)><S(S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.PairedAln) (y :: Lib.PairedAln) ->
                 case Lib.$fOrdPairedAln_$ccompare x y of wild {
                   DEFAULT -> y GHC.Types.GT -> x }) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  $fOrdPairedAln_$cmin ::
    Lib.PairedAln -> Lib.PairedAln -> Lib.PairedAln
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)><S(S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.PairedAln) (y :: Lib.PairedAln) ->
                 case Lib.$fOrdPairedAln_$ccompare x y of wild {
                   DEFAULT -> x GHC.Types.GT -> y }) -}
8c7f5d294706d5be2e2968524bb42a6a
  $fOrdUChr :: GHC.Classes.Ord Lib.UChr
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.UChr
                  Lib.$fEqUChr
                  Lib.$fOrdUChr_$ccompare
                  Lib.$fOrdUChr_$c<
                  Lib.$fOrdUChr_$c<=
                  Lib.$fOrdUChr_$c>
                  Lib.$fOrdUChr_$c>=
                  Lib.$fOrdUChr_$cmax
                  Lib.$fOrdUChr_$cmin -}
8c7f5d294706d5be2e2968524bb42a6a
  $fOrdUChr_$c< :: Lib.UChr -> Lib.UChr -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.UChr) (b :: Lib.UChr) ->
                 case a of x1 { DEFAULT ->
                 case b of x2 { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x1 of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x2 of b# { DEFAULT ->
                 GHC.Prim.tagToEnum#
                   @ GHC.Types.Bool
                   (GHC.Prim.<# a# b#) } } } }) -}
8c7f5d294706d5be2e2968524bb42a6a
  $fOrdUChr_$c<= :: Lib.UChr -> Lib.UChr -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.UChr) (b :: Lib.UChr) ->
                 case b of x1 { DEFAULT ->
                 case a of x2 { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x1 of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False } } } } }) -}
8c7f5d294706d5be2e2968524bb42a6a
  $fOrdUChr_$c> :: Lib.UChr -> Lib.UChr -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.UChr) (b :: Lib.UChr) ->
                 case b of x1 { DEFAULT ->
                 case a of x2 { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x1 of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x2 of b# { DEFAULT ->
                 GHC.Prim.tagToEnum#
                   @ GHC.Types.Bool
                   (GHC.Prim.<# a# b#) } } } }) -}
8c7f5d294706d5be2e2968524bb42a6a
  $fOrdUChr_$c>= :: Lib.UChr -> Lib.UChr -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.UChr) (b :: Lib.UChr) ->
                 case a of x1 { DEFAULT ->
                 case b of x2 { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x1 of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False } } } } }) -}
8c7f5d294706d5be2e2968524bb42a6a
  $fOrdUChr_$ccompare :: Lib.UChr -> Lib.UChr -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.UChr) (b :: Lib.UChr) ->
                 case a of x1 { DEFAULT ->
                 case b of x2 { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x1 of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.GT GHC.Types.True -> GHC.Types.EQ }
                   GHC.Types.True -> GHC.Types.LT } } } } }) -}
8c7f5d294706d5be2e2968524bb42a6a
  $fOrdUChr_$cmax :: Lib.UChr -> Lib.UChr -> Lib.UChr
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.UChr) (y :: Lib.UChr) ->
                 case y of x1 { DEFAULT ->
                 case x of x2 { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x1 of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False -> x1 GHC.Types.True -> x2 } } } } }) -}
8c7f5d294706d5be2e2968524bb42a6a
  $fOrdUChr_$cmin :: Lib.UChr -> Lib.UChr -> Lib.UChr
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.UChr) (y :: Lib.UChr) ->
                 case y of x1 { DEFAULT ->
                 case x of x2 { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x1 of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False -> x2 GHC.Types.True -> x1 } } } } }) -}
e1e6de4207e3ff4889dbcac2af544cf2
  $fReadChromNameFormat :: GHC.Read.Read Lib.ChromNameFormat
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.ChromNameFormat
                  Lib.$fReadChromNameFormat_$creadsPrec
                  Lib.$fReadChromNameFormat_$creadList
                  Lib.$fReadChromNameFormat1
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Lib.ChromNameFormat>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Lib.ChromNameFormat>_R)))
                  Lib.$fReadChromNameFormat_$creadListPrec -}
e1e6de4207e3ff4889dbcac2af544cf2
  $fReadChromNameFormat1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Lib.ChromNameFormat -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2,
     Unfolding: (GHC.Read.$fRead()6
                   @ Lib.ChromNameFormat
                   Lib.$fReadChromNameFormat2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <Lib.ChromNameFormat>_R))) -}
cf798777c044850c53380f800b022422
  $fReadChromNameFormat10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Lib.$fReadChromNameFormat11) -}
bf2c6046824858a42d27981fc3ea7791
  $fReadChromNameFormat11 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("GRC"#) -}
e1e6de4207e3ff4889dbcac2af544cf2
  $fReadChromNameFormat12 ::
    Text.ParserCombinators.ReadP.P [Lib.ChromNameFormat]
  {- Unfolding: ((Lib.$fReadChromNameFormat_$creadListPrec
                    `cast`
                  (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                       <[Lib.ChromNameFormat]>_R)
                    GHC.Read.$fRead()8)
                   `cast`
                 (Text.ParserCombinators.ReadP.N:ReadP[0] <[Lib.ChromNameFormat]>_R)
                   @ [Lib.ChromNameFormat]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                      @ [Lib.ChromNameFormat])) -}
e1e6de4207e3ff4889dbcac2af544cf2
  $fReadChromNameFormat2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP Lib.ChromNameFormat
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec) ->
                 GHC.Read.choose2
                   @ Lib.ChromNameFormat
                   Lib.$fReadChromNameFormat_sps
                   eta) -}
e1e6de4207e3ff4889dbcac2af544cf2
  $fReadChromNameFormat3 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec Lib.ChromNameFormat)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec Lib.ChromNameFormat)
                   Lib.$fReadChromNameFormat4
                   (GHC.Types.[]
                      @ (GHC.Base.String,
                         Text.ParserCombinators.ReadPrec.ReadPrec Lib.ChromNameFormat))) -}
e1e6de4207e3ff4889dbcac2af544cf2
  $fReadChromNameFormat4 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec Lib.ChromNameFormat)
  {- Strictness: m,
     Unfolding: ((Lib.$fReadChromNameFormat6,
                  Lib.$fReadChromNameFormat5
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Lib.ChromNameFormat>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Lib.ChromNameFormat>_R))))) -}
e1e6de4207e3ff4889dbcac2af544cf2
  $fReadChromNameFormat5 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Lib.ChromNameFormat -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds6 :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (k1 :: Lib.ChromNameFormat -> Text.ParserCombinators.ReadP.P b) ->
                 k1 Lib.UCSC) -}
fb2999b4c99af67b36e7a91ee85e3a81
  $fReadChromNameFormat6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Lib.$fReadChromNameFormat7) -}
2eab455303d2924b3d5ab426c83a8040
  $fReadChromNameFormat7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("UCSC"#) -}
e1e6de4207e3ff4889dbcac2af544cf2
  $fReadChromNameFormat8 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec Lib.ChromNameFormat)
  {- Strictness: m,
     Unfolding: ((Lib.$fReadChromNameFormat10,
                  Lib.$fReadChromNameFormat9
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Lib.ChromNameFormat>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Lib.ChromNameFormat>_R))))) -}
e1e6de4207e3ff4889dbcac2af544cf2
  $fReadChromNameFormat9 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Lib.ChromNameFormat -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds6 :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (k1 :: Lib.ChromNameFormat -> Text.ParserCombinators.ReadP.P b) ->
                 k1 Lib.GRC) -}
e1e6de4207e3ff4889dbcac2af544cf2
  $fReadChromNameFormat_$creadList ::
    Text.ParserCombinators.ReadP.ReadS [Lib.ChromNameFormat]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [Lib.ChromNameFormat]
                   Lib.$fReadChromNameFormat12) -}
e1e6de4207e3ff4889dbcac2af544cf2
  $fReadChromNameFormat_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec [Lib.ChromNameFormat]
  {- Unfolding: (GHC.Read.list
                   @ Lib.ChromNameFormat
                   Lib.$fReadChromNameFormat1
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                       <Lib.ChromNameFormat>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                  <Lib.ChromNameFormat>_R)))) -}
e1e6de4207e3ff4889dbcac2af544cf2
  $fReadChromNameFormat_$creadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS Lib.ChromNameFormat
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (n :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ Lib.ChromNameFormat
                   (GHC.Read.$fRead()6
                      @ Lib.ChromNameFormat
                      Lib.$fReadChromNameFormat2
                        `cast`
                      (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                <Lib.ChromNameFormat>_R))
                      n
                      @ Lib.ChromNameFormat
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ Lib.ChromNameFormat))) -}
e1e6de4207e3ff4889dbcac2af544cf2
  $fReadChromNameFormat_sps ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec Lib.ChromNameFormat)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec Lib.ChromNameFormat)
                   Lib.$fReadChromNameFormat8
                   Lib.$fReadChromNameFormat3) -}
ee93d4d492885470c77de705e87ad292
  $fReadRunStats :: GHC.Read.Read Lib.RunStats
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.RunStats
                  Lib.$fReadRunStats_$creadsPrec
                  Lib.$fReadRunStats_$creadList
                  Lib.$fReadRunStats1
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Lib.RunStats>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Lib.RunStats>_R)))
                  Lib.$fReadRunStats_$creadListPrec -}
ee93d4d492885470c77de705e87ad292
  $fReadRunStats1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Lib.RunStats -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2,
     Unfolding: (GHC.Read.$fRead()6
                   @ Lib.RunStats
                   Lib.$fReadRunStats2
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                       <Lib.RunStats>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                  <Lib.RunStats>_R)))) -}
ee93d4d492885470c77de705e87ad292
  $fReadRunStats2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Lib.RunStats -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S(S),1*U(U)><L,C(U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (w1 :: Lib.RunStats -> Text.ParserCombinators.ReadP.P b) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Lib.$w$creadPrec ww1 @ b w1 }) -}
ee93d4d492885470c77de705e87ad292
  $fReadRunStats3 :: Text.ParserCombinators.ReadP.P [Lib.RunStats]
  {- Unfolding: ((Lib.$fReadRunStats_$creadListPrec
                    `cast`
                  (Text.ParserCombinators.ReadPrec.N:ReadPrec[0] <[Lib.RunStats]>_R)
                    GHC.Read.$fRead()8)
                   `cast`
                 (Text.ParserCombinators.ReadP.N:ReadP[0] <[Lib.RunStats]>_R)
                   @ [Lib.RunStats]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                      @ [Lib.RunStats])) -}
ee93d4d492885470c77de705e87ad292
  $fReadRunStats_$creadList ::
    Text.ParserCombinators.ReadP.ReadS [Lib.RunStats]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [Lib.RunStats]
                   Lib.$fReadRunStats3) -}
ee93d4d492885470c77de705e87ad292
  $fReadRunStats_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec [Lib.RunStats]
  {- Unfolding: (GHC.Read.list
                   @ Lib.RunStats
                   Lib.$fReadRunStats1
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                       <Lib.RunStats>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                  <Lib.RunStats>_R)))) -}
ee93d4d492885470c77de705e87ad292
  $fReadRunStats_$creadsPrec ::
    GHC.Types.Int -> Text.ParserCombinators.ReadP.ReadS Lib.RunStats
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (n :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ Lib.RunStats
                   (GHC.Read.$fRead()6
                      @ Lib.RunStats
                      Lib.$fReadRunStats2
                        `cast`
                      (Trans
                           (<Text.ParserCombinators.ReadPrec.Prec>_R
                            ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                          <Lib.RunStats>_R))
                           (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                     <Lib.RunStats>_R)))
                      n
                      @ Lib.RunStats
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ Lib.RunStats))) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  $fShowAlignedRead :: GHC.Show.Show Lib.AlignedRead
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.AlignedRead
                  Lib.$fShowAlignedRead_$cshowsPrec
                  Lib.$fShowAlignedRead_$cshow
                  Lib.$fShowAlignedRead_$cshowList -}
c13536c0ddcfc999f8a708d0f6fd76f1
  $fShowAlignedRead1 :: Lib.AlignedRead -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (Lib.$fShowAlignedRead_$cshowsPrec
                   Lib.$fShowAlignedRead2) -}
10e405adeed892a7352e4b085558560e
  $fShowAlignedRead2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  $fShowAlignedRead_$cshow :: Lib.AlignedRead -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(1*U(U,U,U,U),U(U),1*U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),U,U,1*U(U,U,U,U),U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(1*U,U,U,1*U(U,U,U,U)),U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.AlignedRead) ->
                 Lib.$fShowAlignedRead_$cshowsPrec
                   Lib.$fShowAlignedRead2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  $fShowAlignedRead_$cshowList :: [Lib.AlignedRead] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Lib.AlignedRead
                   Lib.$fShowAlignedRead1) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  $fShowAlignedRead_$cshowsPrec ::
    GHC.Types.Int -> Lib.AlignedRead -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S(S),1*U(U)><S,1*U(1*U(U,U,U,U),U(U),1*U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),U,U,1*U(U,U,U,U),U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(1*U,U,U,1*U(U,U,U,U)),U)> -}
b27cefdd8405a17038845775c0c42c29
  $fShowBEDPE :: GHC.Show.Show Lib.BEDPE
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.BEDPE
                  Lib.$fShowBEDPE_$cshowsPrec
                  Lib.$fShowBEDPE_$cshow
                  Lib.$fShowBEDPE_$cshowList -}
b27cefdd8405a17038845775c0c42c29
  $fShowBEDPE1 :: Lib.BEDPE -> GHC.Show.ShowS
  {- Arity: 1, Strictness: <S,1*U(1*U,U,U,1*U,U,U,1*U(U,U,U,U))>,
     Unfolding: (\ (w :: Lib.BEDPE) ->
                 case w of ww { Lib.BEDPE ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 Lib.$w$cshowsPrec 0# ww1 ww2 ww3 ww4 ww5 ww6 ww7 }) -}
b27cefdd8405a17038845775c0c42c29
  $fShowBEDPE_$cshow :: Lib.BEDPE -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,U,U,1*U,U,U,1*U(U,U,U,U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.BEDPE) ->
                 Lib.$fShowBEDPE_$cshowsPrec
                   Lib.$fShowAlignedRead2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
b27cefdd8405a17038845775c0c42c29
  $fShowBEDPE_$cshowList :: [Lib.BEDPE] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__ @ Lib.BEDPE Lib.$fShowBEDPE1) -}
b27cefdd8405a17038845775c0c42c29
  $fShowBEDPE_$cshowsPrec ::
    GHC.Types.Int -> Lib.BEDPE -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S(S),1*U(U)><S,1*U(1*U,U,U,1*U,U,U,1*U(U,U,U,U))>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Lib.BEDPE) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Lib.BEDPE ww3 ww4 ww5 ww6 ww7 ww8 ww9 ->
                 Lib.$w$cshowsPrec ww1 ww3 ww4 ww5 ww6 ww7 ww8 ww9 } }) -}
629d9d543a825463dd90ec69a5fb19f7
  $fShowBedRecord :: GHC.Show.Show Lib.BedRecord
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.BedRecord
                  Lib.$fShowBedRecord_$cshowsPrec
                  Lib.$fShowBedRecord_$cshow
                  Lib.$fShowBedRecord_$cshowList -}
629d9d543a825463dd90ec69a5fb19f7
  $fShowBedRecord1 :: Lib.BedRecord -> GHC.Show.ShowS
  {- Arity: 1, Strictness: <S,1*U(1*U,U,U,1*U(U,U,U,U))>,
     Unfolding: (\ (w :: Lib.BedRecord) ->
                 case w of ww { Lib.BedRecord ww1 ww2 ww3 ww4 ->
                 Lib.$w$cshowsPrec1 0# ww1 ww2 ww3 ww4 }) -}
629d9d543a825463dd90ec69a5fb19f7
  $fShowBedRecord_$cshow :: Lib.BedRecord -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,U,U,1*U(U,U,U,U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.BedRecord) ->
                 Lib.$fShowBedRecord_$cshowsPrec
                   Lib.$fShowAlignedRead2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
629d9d543a825463dd90ec69a5fb19f7
  $fShowBedRecord_$cshowList :: [Lib.BedRecord] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Lib.BedRecord
                   Lib.$fShowBedRecord1) -}
629d9d543a825463dd90ec69a5fb19f7
  $fShowBedRecord_$cshowsPrec ::
    GHC.Types.Int -> Lib.BedRecord -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S(S),1*U(U)><S,1*U(1*U,U,U,1*U(U,U,U,U))>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Lib.BedRecord) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Lib.BedRecord ww3 ww4 ww5 ww6 ->
                 Lib.$w$cshowsPrec1 ww1 ww3 ww4 ww5 ww6 } }) -}
e1e6de4207e3ff4889dbcac2af544cf2
  $fShowChromNameFormat :: GHC.Show.Show Lib.ChromNameFormat
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.ChromNameFormat
                  Lib.$fShowChromNameFormat_$cshowsPrec
                  Lib.$fShowChromNameFormat_$cshow
                  Lib.$fShowChromNameFormat_$cshowList -}
e1e6de4207e3ff4889dbcac2af544cf2
  $fShowChromNameFormat1 :: Lib.ChromNameFormat -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds6 :: Lib.ChromNameFormat) (eta :: GHC.Base.String) ->
                 case ds6 of wild {
                   Lib.GRC
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c2 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c2
                           n
                           Lib.$fReadChromNameFormat10)
                        eta
                   Lib.UCSC
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c2 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c2
                           n
                           Lib.$fReadChromNameFormat6)
                        eta }) -}
e1e6de4207e3ff4889dbcac2af544cf2
  $fShowChromNameFormat_$cshow ::
    Lib.ChromNameFormat -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.ChromNameFormat) ->
                 case x of wild {
                   Lib.GRC -> Lib.$fReadChromNameFormat10
                   Lib.UCSC -> Lib.$fReadChromNameFormat6 }) -}
e1e6de4207e3ff4889dbcac2af544cf2
  $fShowChromNameFormat_$cshowList ::
    [Lib.ChromNameFormat] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Lib.ChromNameFormat
                   Lib.$fShowChromNameFormat1) -}
e1e6de4207e3ff4889dbcac2af544cf2
  $fShowChromNameFormat_$cshowsPrec ::
    GHC.Types.Int -> Lib.ChromNameFormat -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds6 :: GHC.Types.Int)
                   (ds7 :: Lib.ChromNameFormat)
                   (eta :: GHC.Base.String) ->
                 case ds7 of wild {
                   Lib.GRC
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c2 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c2
                           n
                           Lib.$fReadChromNameFormat10)
                        eta
                   Lib.UCSC
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c2 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c2
                           n
                           Lib.$fReadChromNameFormat6)
                        eta }) -}
6f19773577bdf1a116e6a2279d330c12
  $fShowCigarMod :: GHC.Show.Show Lib.CigarMod
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.CigarMod
                  Lib.$fShowCigarMod_$cshowsPrec
                  Lib.$fShowCigarMod_$cshow
                  Lib.$fShowCigarMod_$cshowList -}
6f19773577bdf1a116e6a2279d330c12
  $fShowCigarMod1 :: Lib.CigarMod -> GHC.Show.ShowS
  {- Arity: 1, Strictness: <S,1*U(U,U,1*U(U,U,U,U),1*U(U,U,U,U),U)>,
     Unfolding: (\ (w :: Lib.CigarMod) ->
                 case w of ww { Lib.CigarMod ww1 ww2 ww3 ww4 ww5 ->
                 Lib.$w$cshowsPrec2 0# ww1 ww2 ww3 ww4 ww5 }) -}
6f19773577bdf1a116e6a2279d330c12
  $fShowCigarMod_$cshow :: Lib.CigarMod -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(U,U,1*U(U,U,U,U),1*U(U,U,U,U),U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.CigarMod) ->
                 Lib.$fShowCigarMod_$cshowsPrec
                   Lib.$fShowAlignedRead2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
6f19773577bdf1a116e6a2279d330c12
  $fShowCigarMod_$cshowList :: [Lib.CigarMod] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Lib.CigarMod
                   Lib.$fShowCigarMod1) -}
6f19773577bdf1a116e6a2279d330c12
  $fShowCigarMod_$cshowsPrec ::
    GHC.Types.Int -> Lib.CigarMod -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S(S),1*U(U)><S,1*U(U,U,1*U(U,U,U,U),1*U(U,U,U,U),U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Lib.CigarMod) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Lib.CigarMod ww3 ww4 ww5 ww6 ww7 ->
                 Lib.$w$cshowsPrec2 ww1 ww3 ww4 ww5 ww6 ww7 } }) -}
1b5721207ca1189d551bcd24be98a5dc
  $fShowMasterRecord :: GHC.Show.Show Lib.MasterRecord
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.MasterRecord
                  Lib.$fShowMasterRecord_$cshowsPrec
                  Lib.$fShowMasterRecord_$cshow
                  Lib.$fShowMasterRecord_$cshowList -}
1b5721207ca1189d551bcd24be98a5dc
  $fShowMasterRecord1 :: Lib.MasterRecord -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (Lib.$fShowMasterRecord_$cshowsPrec
                   Lib.$fShowAlignedRead2) -}
1b5721207ca1189d551bcd24be98a5dc
  $fShowMasterRecord_$cshow :: Lib.MasterRecord -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(1*U,U,U,1*U(U,U,U,U),U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.MasterRecord) ->
                 Lib.$fShowMasterRecord_$cshowsPrec
                   Lib.$fShowAlignedRead2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
1b5721207ca1189d551bcd24be98a5dc
  $fShowMasterRecord_$cshowList ::
    [Lib.MasterRecord] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Lib.MasterRecord
                   Lib.$fShowMasterRecord1) -}
1b5721207ca1189d551bcd24be98a5dc
  $fShowMasterRecord_$cshowsPrec ::
    GHC.Types.Int -> Lib.MasterRecord -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S(S),1*U(U)><S,1*U(1*U,U,U,1*U(U,U,U,U),U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U))> -}
b5f7c91e0a039228d8ca476cc3bdf320
  $fShowMidFamily :: GHC.Show.Show Lib.MidFamily
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.MidFamily
                  Lib.$fShowMidFamily_$cshowsPrec
                  Lib.$fShowMidFamily_$cshow
                  Lib.$fShowMidFamily_$cshowList -}
b5f7c91e0a039228d8ca476cc3bdf320
  $fShowMidFamily1 :: Lib.MidFamily -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (Lib.$fShowMidFamily_$cshowsPrec
                   Lib.$fShowAlignedRead2) -}
b5f7c91e0a039228d8ca476cc3bdf320
  $fShowMidFamily_$cshow :: Lib.MidFamily -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(1*U,U,U,1*U(U,U,U,U),U,U,U,U,U,1*U(1*U,U,U,1*U(U,U,U,U)))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.MidFamily) ->
                 Lib.$fShowMidFamily_$cshowsPrec
                   Lib.$fShowAlignedRead2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
b5f7c91e0a039228d8ca476cc3bdf320
  $fShowMidFamily_$cshowList :: [Lib.MidFamily] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Lib.MidFamily
                   Lib.$fShowMidFamily1) -}
b5f7c91e0a039228d8ca476cc3bdf320
  $fShowMidFamily_$cshowsPrec ::
    GHC.Types.Int -> Lib.MidFamily -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S(S),1*U(U)><S,1*U(1*U,U,U,1*U(U,U,U,U),U,U,U,U,U,1*U(1*U,U,U,1*U(U,U,U,U)))> -}
f1e8a13132b4d566d11f9275b6e14c57
  $fShowOpts :: GHC.Show.Show Lib.Opts
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.Opts
                  Lib.$fShowOpts_$cshowsPrec
                  Lib.$fShowOpts_$cshow
                  Lib.$fShowOpts_$cshowList -}
f1e8a13132b4d566d11f9275b6e14c57
  $fShowOpts1 :: Lib.Opts -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U(1*U,1*U,1*U,1*U,1*U)><L,U>,
     Unfolding: (\ (w :: Lib.Opts) (w1 :: GHC.Base.String) ->
                 case w of ww { Lib.Opts ww1 ww2 ww3 ww4 ww5 ->
                 Lib.$w$cshowsPrec3 0# ww1 ww2 ww3 ww4 ww5 w1 }) -}
f1e8a13132b4d566d11f9275b6e14c57
  $fShowOpts_$cshow :: Lib.Opts -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,1*U,1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.Opts) ->
                 Lib.$fShowOpts_$cshowsPrec
                   Lib.$fShowAlignedRead2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
f1e8a13132b4d566d11f9275b6e14c57
  $fShowOpts_$cshowList :: [Lib.Opts] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__ @ Lib.Opts Lib.$fShowOpts1) -}
f1e8a13132b4d566d11f9275b6e14c57
  $fShowOpts_$cshowsPrec ::
    GHC.Types.Int -> Lib.Opts -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U,1*U,1*U,1*U)><L,U>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Lib.Opts) (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Lib.Opts ww3 ww4 ww5 ww6 ww7 ->
                 Lib.$w$cshowsPrec3 ww1 ww3 ww4 ww5 ww6 ww7 w2 } }) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  $fShowPairedAln :: GHC.Show.Show Lib.PairedAln
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.PairedAln
                  Lib.$fShowPairedAln_$cshowsPrec
                  Lib.$fShowPairedAln_$cshow
                  Lib.$fShowPairedAln_$cshowList -}
c13536c0ddcfc999f8a708d0f6fd76f1
  $fShowPairedAln1 :: Lib.PairedAln -> GHC.Show.ShowS
  {- Arity: 1,
     Strictness: <S,1*U(1*U(1*U(U,U,U,U),U(U),1*U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),U,U,1*U(U,U,U,U),U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(1*U,U,U,1*U(U,U,U,U)),U),1*U(1*U(U,U,U,U),U(U),1*U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),U,U,1*U(U,U,U,U),U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(1*U,U,U,1*U(U,U,U,U)),U),U,U)>,
     Unfolding: (\ (w :: Lib.PairedAln) ->
                 case w of ww { Lib.PairedAln ww1 ww2 ww3 ww4 ->
                 Lib.$w$cshowsPrec4 0# ww1 ww2 ww3 ww4 }) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  $fShowPairedAln_$cshow :: Lib.PairedAln -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(1*U(1*U(U,U,U,U),U(U),1*U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),U,U,1*U(U,U,U,U),U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(1*U,U,U,1*U(U,U,U,U)),U),1*U(1*U(U,U,U,U),U(U),1*U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),U,U,1*U(U,U,U,U),U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(1*U,U,U,1*U(U,U,U,U)),U),U,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.PairedAln) ->
                 Lib.$fShowPairedAln_$cshowsPrec
                   Lib.$fShowAlignedRead2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  $fShowPairedAln_$cshowList :: [Lib.PairedAln] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Lib.PairedAln
                   Lib.$fShowPairedAln1) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  $fShowPairedAln_$cshowsPrec ::
    GHC.Types.Int -> Lib.PairedAln -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S(S),1*U(U)><S,1*U(1*U(1*U(U,U,U,U),U(U),1*U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),U,U,1*U(U,U,U,U),U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(1*U,U,U,1*U(U,U,U,U)),U),1*U(1*U(U,U,U,U),U(U),1*U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),U,U,1*U(U,U,U,U),U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(1*U,U,U,1*U(U,U,U,U)),U),U,U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Lib.PairedAln) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Lib.PairedAln ww3 ww4 ww5 ww6 ->
                 Lib.$w$cshowsPrec4 ww1 ww3 ww4 ww5 ww6 } }) -}
ee93d4d492885470c77de705e87ad292
  $fShowRunStats :: GHC.Show.Show Lib.RunStats
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.RunStats
                  Lib.$fShowRunStats_$cshowsPrec
                  Lib.$fShowRunStats_$cshow
                  Lib.$fShowRunStats_$cshowList -}
ee93d4d492885470c77de705e87ad292
  $fShowRunStats1 :: Lib.RunStats -> GHC.Show.ShowS
  {- Arity: 1, Strictness: <S,1*U(U,U,U,U,1*U(U),1*U(U))>,
     Unfolding: (\ (w :: Lib.RunStats) ->
                 case w of ww { Lib.RunStats ww1 ww2 ww3 ww4 ww5 ww6 ->
                 Lib.$w$cshowsPrec5 0# ww1 ww2 ww3 ww4 ww5 ww6 }) -}
ee93d4d492885470c77de705e87ad292
  $fShowRunStats_$cshow :: Lib.RunStats -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(U,U,U,U,1*U(U),1*U(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.RunStats) ->
                 Lib.$fShowRunStats_$cshowsPrec
                   Lib.$fShowAlignedRead2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
ee93d4d492885470c77de705e87ad292
  $fShowRunStats_$cshowList :: [Lib.RunStats] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Lib.RunStats
                   Lib.$fShowRunStats1) -}
ee93d4d492885470c77de705e87ad292
  $fShowRunStats_$cshowsPrec ::
    GHC.Types.Int -> Lib.RunStats -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S(S),1*U(U)><S,1*U(U,U,U,U,1*U(U),1*U(U))>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Lib.RunStats) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Lib.RunStats ww3 ww4 ww5 ww6 ww7 ww8 ->
                 Lib.$w$cshowsPrec5 ww1 ww3 ww4 ww5 ww6 ww7 ww8 } }) -}
702609d8da67b0d9f67ab238dcd1cdb7
  $fShowSAMFlag :: GHC.Show.Show Lib.SAMFlag
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.SAMFlag
                  Lib.$fShowSAMFlag_$cshowsPrec
                  Lib.$fShowSAMFlag_$cshow
                  Lib.$fShowSAMFlag_$cshowList -}
702609d8da67b0d9f67ab238dcd1cdb7
  $fShowSAMFlag1 :: Lib.SAMFlag -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (Lib.$fShowSAMFlag_$cshowsPrec
                   Lib.$fShowAlignedRead2) -}
702609d8da67b0d9f67ab238dcd1cdb7
  $fShowSAMFlag_$cshow :: Lib.SAMFlag -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.SAMFlag) ->
                 Lib.$fShowSAMFlag_$cshowsPrec
                   Lib.$fShowAlignedRead2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
702609d8da67b0d9f67ab238dcd1cdb7
  $fShowSAMFlag_$cshowList :: [Lib.SAMFlag] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Lib.SAMFlag
                   Lib.$fShowSAMFlag1) -}
702609d8da67b0d9f67ab238dcd1cdb7
  $fShowSAMFlag_$cshowsPrec ::
    GHC.Types.Int -> Lib.SAMFlag -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U))><L,U> -}
8c7f5d294706d5be2e2968524bb42a6a
  $fShowUChr :: GHC.Show.Show Lib.UChr
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.UChr
                  Lib.$fShowUChr_$cshowsPrec
                  Lib.$fShowUChr_$cshow
                  Lib.$fShowUChr_$cshowList -}
8c7f5d294706d5be2e2968524bb42a6a
  $fShowUChr1 :: Lib.UChr -> GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.UChr) (s :: GHC.Base.String)[OneShot] ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c2 :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr @ GHC.Types.Char @ b c2 n (Lib.$fShowUChr_$cshow x))
                   s) -}
8c7f5d294706d5be2e2968524bb42a6a
  $fShowUChr_$cshow :: Lib.UChr -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U> -}
8c7f5d294706d5be2e2968524bb42a6a
  $fShowUChr_$cshowList :: [Lib.UChr] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Lib.UChr]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Lib.UChr Lib.$fShowUChr1 ls s) -}
8c7f5d294706d5be2e2968524bb42a6a
  $fShowUChr_$cshowsPrec ::
    GHC.Types.Int -> Lib.UChr -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds6 :: GHC.Types.Int) (x :: Lib.UChr) (s :: GHC.Base.String) ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c2 :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr @ GHC.Types.Char @ b c2 n (Lib.$fShowUChr_$cshow x))
                   s) -}
3e965120219f51b5e9db4963f710b88a
  $s$fApplicativeResourceT ::
    GHC.Base.Applicative
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  Lib.$s$fApplicativeResourceT_$s$fFunctorResourceT
                  (\ @ a (eta :: a) ->
                   let {
                     x :: GHC.Prim.State# GHC.Prim.RealWorld
                          -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                       {- Arity: 1 -}
                     = \ (s :: GHC.Prim.State# GHC.Prim.RealWorld) -> (# s, eta #)
                   } in
                   (\ (ds6 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                    x)
                     `cast`
                   (Trans
                        (<GHC.IORef.IORef
                            Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                         ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                        (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                  <GHC.Types.IO>_R <a>_N))))
                  (\ @ a
                     @ b
                     (ds6 :: Control.Monad.Trans.Resource.Internal.ResourceT
                               GHC.Types.IO (a -> b))
                     (ds7 :: Control.Monad.Trans.Resource.Internal.ResourceT
                               GHC.Types.IO a)
                     (r :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (ds6
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <a -> b>_N)
                           r)
                          `cast`
                        (GHC.Types.N:IO[0] <a -> b>_R)
                          s of ds8 { (#,#) ipv ipv1 ->
                   case (ds7
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <a>_N)
                           r)
                          `cast`
                        (GHC.Types.N:IO[0] <a>_R)
                          ipv of ds9 { (#,#) ipv2 ipv3 ->
                   (# ipv2, ipv1 ipv3 #) } })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   Trans
                       (<Control.Monad.Trans.Resource.Internal.ResourceT
                           GHC.Types.IO (a -> b)>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO a>_R
                        ->_R <GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                        ->_R Sym (GHC.Types.N:IO[0] <b>_R))
                       (<Control.Monad.Trans.Resource.Internal.ResourceT
                           GHC.Types.IO (a -> b)>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO a>_R
                        ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                      <GHC.Types.IO>_R <b>_N)))
                  (\ @ a
                     @ b
                     @ c2
                     (eta :: a -> b -> c2)
                     (eta1 :: Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO a)
                     (eta2 :: Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b)
                     (eta3 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (eta1
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <a>_N)
                           eta3)
                          `cast`
                        (GHC.Types.N:IO[0] <a>_R)
                          s of ds6 { (#,#) ipv ipv1 ->
                   case (eta2
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <b>_N)
                           eta3)
                          `cast`
                        (GHC.Types.N:IO[0] <b>_R)
                          ipv of ds7 { (#,#) ipv2 ipv3 ->
                   (# ipv2, eta ipv1 ipv3 #) } })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N) (c2 :: <*>_N).
                   Trans
                       (<a -> b -> c2>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO a>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b>_R
                        ->_R <GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                        ->_R Sym (GHC.Types.N:IO[0] <c2>_R))
                       (<a -> b -> c2>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO a>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b>_R
                        ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                      <GHC.Types.IO>_R <c2>_N)))
                  (\ @ a
                     @ b
                     (eta :: Control.Monad.Trans.Resource.Internal.ResourceT
                               GHC.Types.IO a)
                     (eta1 :: Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b)
                     (eta2 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (eta
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <a>_N)
                           eta2)
                          `cast`
                        (GHC.Types.N:IO[0] <a>_R)
                          s of ds6 { (#,#) ipv ipv1 ->
                   (eta1
                      `cast`
                    (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                         <GHC.Types.IO>_R <b>_N)
                      eta2)
                     `cast`
                   (GHC.Types.N:IO[0] <b>_R)
                     ipv })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   Trans
                       (<Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b>_R
                        ->_R <GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                        ->_R Sym (GHC.Types.N:IO[0] <b>_R))
                       (<Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b>_R
                        ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                      <GHC.Types.IO>_R <b>_N)))
                  (\ @ a
                     @ b
                     (eta1 :: Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO a)
                     (eta2 :: Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b)
                     (eta3 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (eta1
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <a>_N)
                           eta3)
                          `cast`
                        (GHC.Types.N:IO[0] <a>_R)
                          s of ds6 { (#,#) ipv ipv1 ->
                   case (eta2
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <b>_N)
                           eta3)
                          `cast`
                        (GHC.Types.N:IO[0] <b>_R)
                          ipv of ds7 { (#,#) ipv2 ipv3 ->
                   (# ipv2, ipv1 #) } })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   Trans
                       (<Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b>_R
                        ->_R <GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                        ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                       (<Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b>_R
                        ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                      <GHC.Types.IO>_R <a>_N))) -}
f6f4fa490ae1a37a8a226d8b66e0e253
  $s$fApplicativeResourceT_$cpure ::
    a -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,A><S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (eta :: a) ->
                 let {
                   x :: GHC.Prim.State# GHC.Prim.RealWorld
                        -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                     {- Arity: 1 -}
                   = \ (s :: GHC.Prim.State# GHC.Prim.RealWorld) -> (# s, eta #)
                 } in
                 (\ (ds6 :: GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                  x)
                   `cast`
                 (Trans
                      (<GHC.IORef.IORef
                          Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                       ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                      (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                <GHC.Types.IO>_R <a>_N)))) -}
9baa366402d5fc43b4901f82934d9f42
  $s$fApplicativeResourceT_$s$fFunctorResourceT ::
    GHC.Base.Functor
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  (\ @ a
                     @ b
                     (f12 :: a -> b)
                     (ds6 :: Control.Monad.Trans.Resource.Internal.ResourceT
                               GHC.Types.IO a)
                     (r :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (ds6
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <a>_N)
                           r)
                          `cast`
                        (GHC.Types.N:IO[0] <a>_R)
                          s of ds7 { (#,#) ipv ipv1 ->
                   (# ipv, f12 ipv1 #) })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   Trans
                       (<a -> b>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO a>_R
                        ->_R <GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                        ->_R Sym (GHC.Types.N:IO[0] <b>_R))
                       (<a -> b>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO a>_R
                        ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                      <GHC.Types.IO>_R <b>_N)))
                  (\ @ a
                     @ b
                     (x :: a)
                     (eta :: Control.Monad.Trans.Resource.Internal.ResourceT
                               GHC.Types.IO b)
                     (eta1 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (eta
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <b>_N)
                           eta1)
                          `cast`
                        (GHC.Types.N:IO[0] <b>_R)
                          s of ds6 { (#,#) ipv ipv1 ->
                   (# ipv, x #) })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   Trans
                       (<a>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b>_R
                        ->_R <GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                        ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                       (<a>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b>_R
                        ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                      <GHC.Types.IO>_R <a>_N))) -}
7152d944e33d2b9216710eec6e1af525
  $s$fEq(,) ::
    GHC.Classes.Eq
      (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                  (GHC.Classes.$fEq(,)_$c==
                     @ GHC.Integer.Type.Integer
                     @ Data.ByteString.Internal.ByteString
                     GHC.Integer.Type.$fEqInteger
                     Data.ByteString.Internal.$fEqByteString)
                  (GHC.Classes.$fEq(,)_$c/=
                     @ GHC.Integer.Type.Integer
                     @ Data.ByteString.Internal.ByteString
                     GHC.Integer.Type.$fEqInteger
                     Data.ByteString.Internal.$fEqByteString) -}
1ad3d7428ea10af4ea9052ace68de7f6
  $s$fMonadResourceT ::
    GHC.Base.Monad
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  Lib.$s$fApplicativeResourceT
                  (\ @ a
                     @ b
                     (ds6 :: Control.Monad.Trans.Resource.Internal.ResourceT
                               GHC.Types.IO a)
                     (f12 :: a
                             -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO b)
                     (r :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (ds6
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <a>_N)
                           r)
                          `cast`
                        (GHC.Types.N:IO[0] <a>_R)
                          s of ds7 { (#,#) ipv ipv1 ->
                   ((f12 ipv1)
                      `cast`
                    (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                         <GHC.Types.IO>_R <b>_N)
                      r)
                     `cast`
                   (GHC.Types.N:IO[0] <b>_R)
                     ipv })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   Trans
                       (<Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                        ->_R <a
                              -> Control.Monad.Trans.Resource.Internal.ResourceT
                                   GHC.Types.IO b>_R
                        ->_R <GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                        ->_R Sym (GHC.Types.N:IO[0] <b>_R))
                       (<Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                        ->_R <a
                              -> Control.Monad.Trans.Resource.Internal.ResourceT
                                   GHC.Types.IO b>_R
                        ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                      <GHC.Types.IO>_R <b>_N)))
                  Lib.$s$fMonadResourceT_$s$fMonadResourceT_$c>>
                  (\ @ a (eta :: a) ->
                   let {
                     x :: GHC.Prim.State# GHC.Prim.RealWorld
                          -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                       {- Arity: 1 -}
                     = \ (s :: GHC.Prim.State# GHC.Prim.RealWorld) -> (# s, eta #)
                   } in
                   (\ (ds6 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                    x)
                     `cast`
                   (Trans
                        (<GHC.IORef.IORef
                            Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                         ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                        (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                  <GHC.Types.IO>_R <a>_N))))
                  (\ @ a ->
                   GHC.Err.errorWithoutStackTrace
                     @ 'GHC.Types.LiftedRep
                     @ (Control.Monad.Trans.Resource.Internal.ResourceT
                          GHC.Types.IO a)) -}
9cce06dfe0a774ad47857529deb56011
  $s$fMonadResourceT_$s$fMonadResourceT_$c>> ::
    Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
    -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO b
    -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO b
  {- Arity: 4, HasNoCafRefs,
     Strictness: <C(C(S(SL))),1*C1(C1(U(U,A)))><L,1*C1(C1(U(U,U)))><L,U><S,U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ a
                   @ b
                   (m109 :: Control.Monad.Trans.Resource.Internal.ResourceT
                              GHC.Types.IO a)
                   (k1 :: Control.Monad.Trans.Resource.Internal.ResourceT
                            GHC.Types.IO b)
                   (r :: GHC.IORef.IORef
                           Control.Monad.Trans.Resource.Internal.ReleaseMap)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (m109
                         `cast`
                       (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                            <GHC.Types.IO>_R <a>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0] <a>_R)
                        s of ds6 { (#,#) ipv ipv1 ->
                 (k1
                    `cast`
                  (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                       <GHC.Types.IO>_R <b>_N)
                    r)
                   `cast`
                 (GHC.Types.N:IO[0] <b>_R)
                   ipv })
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N).
                 Trans
                     (<Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                      ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                              GHC.Types.IO b>_R
                      ->_R <GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                      ->_R Sym (GHC.Types.N:IO[0] <b>_R))
                     (<Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                      ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                              GHC.Types.IO b>_R
                      ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                    <GHC.Types.IO>_R <b>_N))) -}
9ec1833da64c651ea2b7fce0b03b674c
  $sfromList ::
    [(GHC.Types.Int, a)] -> Data.Map.Internal.Map GHC.Types.Int a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a (ds6 :: [(GHC.Types.Int, a)]) ->
                 case ds6 of wild {
                   [] -> Data.Map.Internal.Tip @ GHC.Types.Int @ a
                   : ds7 ds8
                   -> case ds7 of wild1 { (,) kx x ->
                      case ds8 of wild2 {
                        []
                        -> case x of x1 { DEFAULT ->
                           case kx of dt { GHC.Types.I# ipv ->
                           Data.Map.Internal.Bin
                             @ GHC.Types.Int
                             @ a
                             1#
                             dt
                             x1
                             (Data.Map.Internal.Tip @ GHC.Types.Int @ a)
                             (Data.Map.Internal.Tip @ GHC.Types.Int @ a) } }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds9 ->
                           case kx of wild4 { GHC.Types.I# x1 ->
                           case ky of wild5 { GHC.Types.I# y ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.>=# x1 y) of wild6 {
                             GHC.Types.False
                             -> case x of x0 { DEFAULT ->
                                Lib.$wpoly_go8
                                  @ a
                                  1#
                                  (Data.Map.Internal.Bin
                                     @ GHC.Types.Int
                                     @ a
                                     1#
                                     wild4
                                     x0
                                     (Data.Map.Internal.Tip @ GHC.Types.Int @ a)
                                     (Data.Map.Internal.Tip @ GHC.Types.Int @ a))
                                  wild2 }
                             GHC.Types.True
                             -> case x of x0 { DEFAULT ->
                                Lib.$sfromList1
                                  @ a
                                  (Data.Map.Internal.Bin
                                     @ GHC.Types.Int
                                     @ a
                                     1#
                                     wild4
                                     x0
                                     (Data.Map.Internal.Tip @ GHC.Types.Int @ a)
                                     (Data.Map.Internal.Tip @ GHC.Types.Int @ a))
                                  wild2 } } } } } } } }) -}
4885086d42aa4807b8dc5c5a3dc06060
  $sfromList1 ::
    Data.Map.Internal.Map GHC.Types.Int a
    -> [(GHC.Types.Int, a)] -> Data.Map.Internal.Map GHC.Types.Int a
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
9260b647f43704779b3d3544190db350
  $sfromList2 :: [(Lib.UChr, a)] -> Data.Map.Internal.Map Lib.UChr a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a (ds6 :: [(Lib.UChr, a)]) ->
                 case ds6 of wild {
                   [] -> Data.Map.Internal.Tip @ Lib.UChr @ a
                   : ds7 ds8
                   -> case ds7 of wild1 { (,) kx x ->
                      case ds8 of wild2 {
                        []
                        -> case x of x1 { DEFAULT ->
                           case kx of dt { DEFAULT ->
                           Data.Map.Internal.Bin
                             @ Lib.UChr
                             @ a
                             1#
                             dt
                             x1
                             (Data.Map.Internal.Tip @ Lib.UChr @ a)
                             (Data.Map.Internal.Tip @ Lib.UChr @ a) } }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds9 ->
                           case GHC.Prim.dataToTag# @ Lib.UChr kx of a# { DEFAULT ->
                           case GHC.Prim.dataToTag# @ Lib.UChr ky of b# { DEFAULT ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<# a# b#) of wild4 {
                             GHC.Types.False
                             -> case x of x0 { DEFAULT ->
                                Lib.$sfromList3
                                  @ a
                                  (Data.Map.Internal.Bin
                                     @ Lib.UChr
                                     @ a
                                     1#
                                     kx
                                     x0
                                     (Data.Map.Internal.Tip @ Lib.UChr @ a)
                                     (Data.Map.Internal.Tip @ Lib.UChr @ a))
                                  wild2 }
                             GHC.Types.True
                             -> case x of x0 { DEFAULT ->
                                Lib.$wpoly_go1
                                  @ a
                                  1#
                                  (Data.Map.Internal.Bin
                                     @ Lib.UChr
                                     @ a
                                     1#
                                     kx
                                     x0
                                     (Data.Map.Internal.Tip @ Lib.UChr @ a)
                                     (Data.Map.Internal.Tip @ Lib.UChr @ a))
                                  wild2 } } } } } } } }) -}
e045ee5d8f89682c9f2a31bf52a8d02e
  $sfromList3 ::
    Data.Map.Internal.Map Lib.UChr a
    -> [(Lib.UChr, a)] -> Data.Map.Internal.Map Lib.UChr a
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
a4c4fb507063f83fbea8724c4dc94008
  $sfromList4 :: [Lib.UChr] -> Data.Set.Internal.Set Lib.UChr
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds6 :: [Lib.UChr]) ->
                 case ds6 of wild {
                   [] -> Data.Set.Internal.Tip @ Lib.UChr
                   : x ds7
                   -> case ds7 of wild1 {
                        []
                        -> case x of dt { DEFAULT ->
                           Data.Set.Internal.Bin
                             @ Lib.UChr
                             1#
                             dt
                             (Data.Set.Internal.Tip @ Lib.UChr)
                             (Data.Set.Internal.Tip @ Lib.UChr) }
                        : ipv ipv1
                        -> case GHC.Prim.dataToTag# @ Lib.UChr x of a# { DEFAULT ->
                           case GHC.Prim.dataToTag# @ Lib.UChr ipv of b# { DEFAULT ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<# a# b#) of wild2 {
                             GHC.Types.False
                             -> Lib.$sfromList_go4
                                  (Data.Set.Internal.Bin
                                     @ Lib.UChr
                                     1#
                                     x
                                     (Data.Set.Internal.Tip @ Lib.UChr)
                                     (Data.Set.Internal.Tip @ Lib.UChr))
                                  wild1
                             GHC.Types.True
                             -> Lib.$wgo3
                                  1#
                                  (Data.Set.Internal.Bin
                                     @ Lib.UChr
                                     1#
                                     x
                                     (Data.Set.Internal.Tip @ Lib.UChr)
                                     (Data.Set.Internal.Tip @ Lib.UChr))
                                  wild1 } } } } }) -}
8887b0c760e2df731fd5ff0a51d44330
  $sfromList_go4 ::
    Data.Set.Internal.Set Lib.UChr
    -> [Lib.UChr] -> Data.Set.Internal.Set Lib.UChr
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
54cc550808e89b4d5b424041a6b47139
  $sinsert_$sgo3 ::
    Lib.UChr
    -> Lib.UChr
    -> Data.Set.Internal.Set Lib.UChr
    -> Data.Set.Internal.Set Lib.UChr
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U> -}
1016463446caf37adf3b9fdf7575cdfe
  $sinsert_$sgo8 ::
    Lib.UChr
    -> a1
    -> Data.Map.Internal.Map Lib.UChr a1
    -> Data.Map.Internal.Map Lib.UChr a1
  {- Arity: 3, Strictness: <S,1*U><S,1*U><S,1*U> -}
b6a04be64651cbb960a17fa81f500bac
  $slookup1 ::
    Lib.UChr -> Data.Map.Internal.Map Lib.UChr a -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
41e7d4a2d86432b891d2bd7d039d9e9e
  $tc'AlignedRead :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11065269491497263426##
                   1047067115192115432##
                   Lib.$trModule
                   Lib.$tc'AlignedRead2
                   0#
                   Lib.$tc'AlignedRead1) -}
bb833232926339f37eee33af4c684641
  $tc'AlignedRead1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
8f9446e171a2afea4d8b713c829cb685
  $tc'AlignedRead2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'AlignedRead3) -}
c168a8b2691b41cec2f37bcc311dac34
  $tc'AlignedRead3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'AlignedRead"#) -}
056bbf144623e76dfde48f3078cc9e2b
  $tc'BEDPE :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7755880174452634121##
                   1573744807153371193##
                   Lib.$trModule
                   Lib.$tc'BEDPE2
                   0#
                   Lib.$tc'BEDPE1) -}
b65abf383771d2d3f20673f19216a4a7
  $tc'BEDPE1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
69d5d0d2be38e1fe595a88776392f3b9
  $tc'BEDPE2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'BEDPE3) -}
cf38da3d7b0dfa6f8614f0541cc783df
  $tc'BEDPE3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'BEDPE"#) -}
cf5ea3bbb31a7a68e05ef3815c2fa6e5
  $tc'BedRecord :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17323035865084545254##
                   13461752285447635775##
                   Lib.$trModule
                   Lib.$tc'BedRecord2
                   0#
                   Lib.$tc'BedRecord1) -}
f08d1dd1824db52f283b35266d591a29
  $tc'BedRecord1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
8e8b7eee57536ac7f7d512bf02a2b93d
  $tc'BedRecord2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'BedRecord3) -}
21f1eb537a9d42c60cd48cb0c1eff431
  $tc'BedRecord3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'BedRecord"#) -}
94bfebcbf00f24f0a769095b4a19b88e
  $tc'C1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16528544445647706657##
                   12973861007554131838##
                   Lib.$trModule
                   Lib.$tc'C30
                   0#
                   Lib.$tc'C29) -}
48f62445b2bf3f67af92031ce9b34d40
  $tc'C10 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5799066919005042076##
                   6190715847024615122##
                   Lib.$trModule
                   Lib.$tc'C32
                   0#
                   Lib.$tc'C29) -}
4dff09b54b780e85028e3a1e1113be49
  $tc'C11 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12305765176664571466##
                   13152318302994840088##
                   Lib.$trModule
                   Lib.$tc'C34
                   0#
                   Lib.$tc'C29) -}
99d7a520d92712ed8b559549d20005c8
  $tc'C12 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18178876688755862685##
                   8732355776448748891##
                   Lib.$trModule
                   Lib.$tc'C36
                   0#
                   Lib.$tc'C29) -}
b1e785deb1f1e3e93f75ee2437691050
  $tc'C13 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17999965455795518920##
                   8016367980727051476##
                   Lib.$trModule
                   Lib.$tc'C38
                   0#
                   Lib.$tc'C29) -}
c3760dbe85a47aa04d36dbbb8fc9799a
  $tc'C14 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6481647021954024703##
                   1929220914672392229##
                   Lib.$trModule
                   Lib.$tc'C40
                   0#
                   Lib.$tc'C29) -}
f5f7e7b30bb161a2d200ca87ed1ca924
  $tc'C15 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14928600321593220249##
                   16079088904172253282##
                   Lib.$trModule
                   Lib.$tc'C42
                   0#
                   Lib.$tc'C29) -}
f6f0cdbe81b443e25fb96899d1ec22f4
  $tc'C16 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7205736899086488028##
                   3528779951036954557##
                   Lib.$trModule
                   Lib.$tc'C44
                   0#
                   Lib.$tc'C29) -}
2d134c92df2ad7b228eddb587a4fa9bc
  $tc'C17 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9459386250084819648##
                   7577632224718710340##
                   Lib.$trModule
                   Lib.$tc'C46
                   0#
                   Lib.$tc'C29) -}
19e2e964698201c174bd07ed7c9333e6
  $tc'C18 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11762694411036112547##
                   667763380263189545##
                   Lib.$trModule
                   Lib.$tc'C48
                   0#
                   Lib.$tc'C29) -}
2f5edcf1f83e3c80a43ab64cb7a3578d
  $tc'C19 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   400026132670225870##
                   15239722606477758204##
                   Lib.$trModule
                   Lib.$tc'C50
                   0#
                   Lib.$tc'C29) -}
20a5169d7599d4474d26f3a324022f76
  $tc'C2 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10922524718857241849##
                   889471011492273617##
                   Lib.$trModule
                   Lib.$tc'C52
                   0#
                   Lib.$tc'C29) -}
a2ae510a561c92cb6a884e98336f86ea
  $tc'C20 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4238680229679822324##
                   18188481932160303516##
                   Lib.$trModule
                   Lib.$tc'C54
                   0#
                   Lib.$tc'C29) -}
a72193d94a9280b7d145ca6dbfaaa2a9
  $tc'C21 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5749913028150521602##
                   12847709342747140885##
                   Lib.$trModule
                   Lib.$tc'C56
                   0#
                   Lib.$tc'C29) -}
2b93c9599a87e8976686ed1e7cc66478
  $tc'C22 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7198407889816242634##
                   7251418629582653330##
                   Lib.$trModule
                   Lib.$tc'C58
                   0#
                   Lib.$tc'C29) -}
61f4fc5beff0e5185be236f6f2b2ee6a
  $tc'C29 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
c95d489b3faf817b2b397ffd7db9b836
  $tc'C3 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1322383916297247361##
                   3689810932662990924##
                   Lib.$trModule
                   Lib.$tc'C60
                   0#
                   Lib.$tc'C29) -}
0f1ce0261c9c69086f664adb0e99b49a
  $tc'C30 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C31) -}
109200bcd93d5b49d9414d816f776658
  $tc'C31 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C1"#) -}
b0b9a6649f2b71715da45f15d19acb1a
  $tc'C32 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C33) -}
376c668902c52f685c5ff83ad7607de6
  $tc'C33 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C10"#) -}
fe39b7ee22fca6d3bc6244bf8a850798
  $tc'C34 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C35) -}
f64beb6ec21d32d482e2374495cf37e0
  $tc'C35 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C11"#) -}
6bc8d98c796656a54134bfdcd41a04f0
  $tc'C36 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C37) -}
ef7b5e95080f2b9c8c4ac9d7f49b495d
  $tc'C37 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C12"#) -}
bfe193c7de6058cb3a1eeb54d31a4b8f
  $tc'C38 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C39) -}
9720c1b817562a523024792b20b9d261
  $tc'C39 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C13"#) -}
7a3eef5179f6dddd347e20c116d8a734
  $tc'C4 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5634596358274461377##
                   8546918119678170535##
                   Lib.$trModule
                   Lib.$tc'C62
                   0#
                   Lib.$tc'C29) -}
72e9a441bb4c2fc2a336e5cd068b01a2
  $tc'C40 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C41) -}
fe0fa4a79c6282dd8353f768367af5b0
  $tc'C41 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C14"#) -}
a52df134a9624ac7fec678e93222d15f
  $tc'C42 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C43) -}
456d3b0b3c2df97234e8664290d1e925
  $tc'C43 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C15"#) -}
76dca903b3e235fe882ef11690c818aa
  $tc'C44 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C45) -}
e9168efc915bce85ed7087fbc8dc797c
  $tc'C45 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C16"#) -}
53e1a2b9c895d2cff021f488e0578673
  $tc'C46 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C47) -}
8b24959bd255f854e2b4acf6470b70b7
  $tc'C47 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C17"#) -}
fcb94da0ac82aade0bcdce44ca918646
  $tc'C48 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C49) -}
23d5b6979eeac0e1b5de33a372a5d8a6
  $tc'C49 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C18"#) -}
af844e3d694ae3715831c5f3cd1d6ef0
  $tc'C5 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6763884211470478854##
                   4702932142727106151##
                   Lib.$trModule
                   Lib.$tc'C64
                   0#
                   Lib.$tc'C29) -}
36ed6dcb09c9ee3b23e15541ef131cad
  $tc'C50 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C51) -}
d15ea5269514e980dd7d1a54faa1a824
  $tc'C51 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C19"#) -}
f44c52d7695742959fbfd50c422ff979
  $tc'C52 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C53) -}
539da1d06115de0159319783d5b9a3e7
  $tc'C53 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C2"#) -}
a59ba8d7a2e3d69237185f5a2fa3a1e5
  $tc'C54 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C55) -}
d2162df724689bf1ab7e4c0e5a77250a
  $tc'C55 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C20"#) -}
64f749a3d0f41ca54d37fddeb84657ba
  $tc'C56 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C57) -}
929dbcf823ed9009df6f98ab99ca923b
  $tc'C57 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C21"#) -}
b9449ddadbed656c683b4dc947722180
  $tc'C58 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C59) -}
9d571a123cb0ff0a0616ab6c5fbcdee2
  $tc'C59 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C22"#) -}
0da5d4dd79314642d60b3fb0698f0789
  $tc'C6 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15590002084760252787##
                   15760373334987484053##
                   Lib.$trModule
                   Lib.$tc'C66
                   0#
                   Lib.$tc'C29) -}
adb1e77d648cd38ce92bf0f940d4eaa6
  $tc'C60 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C61) -}
33bf38265cdb1a59aecf253d956a6f9c
  $tc'C61 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C3"#) -}
80e77c40e4cb61b6290121aa80dd570d
  $tc'C62 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C63) -}
0cd2732de4a91fbe1d082b4713d01c54
  $tc'C63 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C4"#) -}
3df4258365c8708fc3cebae74ad83e80
  $tc'C64 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C65) -}
675343d680ead73995ba6e969684d652
  $tc'C65 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C5"#) -}
2f12fba6aec9b51744d09cf345f726cd
  $tc'C66 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C67) -}
cc1544363e01482fb102cb1f0d8e2bc3
  $tc'C67 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C6"#) -}
1a837cbaad8c0d83d637bc937d0eac78
  $tc'C68 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C69) -}
0e78395b52e8ccdaea06c501cf064854
  $tc'C69 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C7"#) -}
8882f3fe628d9ba420803d1126ae410d
  $tc'C7 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4820761541992260714##
                   4910409567105948675##
                   Lib.$trModule
                   Lib.$tc'C68
                   0#
                   Lib.$tc'C29) -}
71cc7c177798c8a917c820f50e528af0
  $tc'C70 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C71) -}
2f8133546fa378944d02335ddaa8beda
  $tc'C71 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C8"#) -}
9f23f75cf58725df6f37a9ce8a9ed017
  $tc'C72 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C73) -}
194d0b04ede4e73390cd021562465ac2
  $tc'C73 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C9"#) -}
262c8c664bb333682dc918f6563913df
  $tc'C8 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2614351649159476816##
                   8822071084502163740##
                   Lib.$trModule
                   Lib.$tc'C70
                   0#
                   Lib.$tc'C29) -}
92ffe2c9061ba803e1f73649e8e7dce5
  $tc'C9 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14837563550635939199##
                   1695656002920419045##
                   Lib.$trModule
                   Lib.$tc'C72
                   0#
                   Lib.$tc'C29) -}
268eaa6a6af37e502028df365d9c162c
  $tc'CMT :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5146572642623375934##
                   17374065551685583878##
                   Lib.$trModule
                   Lib.$tc'CMT1
                   0#
                   Lib.$tc'C29) -}
f54e5807f57a03092326ad5beff1ccd4
  $tc'CMT1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'CMT2) -}
9322875a97f0f2c2b909fe2d9d643f07
  $tc'CMT2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'CMT"#) -}
ff688d1a401a52c3c698b3e5d53ff3ea
  $tc'CX :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11175012886444505292##
                   16130483246296716587##
                   Lib.$trModule
                   Lib.$tc'CX1
                   0#
                   Lib.$tc'C29) -}
8e89b153192567a2ccf7a0e4369aa1a2
  $tc'CX1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'CX2) -}
271166d4390f0848db4900b540379751
  $tc'CX2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'CX"#) -}
a5a0d1aa3ee6735d7942ec7e622f5443
  $tc'CY :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13198714197817956334##
                   5471494747027540868##
                   Lib.$trModule
                   Lib.$tc'CY1
                   0#
                   Lib.$tc'C29) -}
b954d3b9fba28fd7d2921bda01c23242
  $tc'CY1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'CY2) -}
a991c314d7d4a2d8e099d8f1217b36b2
  $tc'CY2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'CY"#) -}
d332083961889b9b0d984c103cf012b2
  $tc'Chr1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4319719443540290104##
                   759274895445051164##
                   Lib.$trModule
                   Lib.$tc'Chr29
                   0#
                   Lib.$tc'C29) -}
d36d12004298c409698d34a100c03aa2
  $tc'Chr10 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16346996706347782956##
                   11958392638789180372##
                   Lib.$trModule
                   Lib.$tc'Chr31
                   0#
                   Lib.$tc'C29) -}
b6d3a350f5735b77a2051432e426034b
  $tc'Chr11 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15789741088928900181##
                   15145248785793275021##
                   Lib.$trModule
                   Lib.$tc'Chr33
                   0#
                   Lib.$tc'C29) -}
e076a53f5f36fca5c5e3ee8039fe61b2
  $tc'Chr12 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9300355393616639599##
                   936273692989094525##
                   Lib.$trModule
                   Lib.$tc'Chr35
                   0#
                   Lib.$tc'C29) -}
5b1fc666daebff3791f4354b8113e280
  $tc'Chr13 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6069826275744435174##
                   1411879207617651911##
                   Lib.$trModule
                   Lib.$tc'Chr37
                   0#
                   Lib.$tc'C29) -}
b97e27ab8049ec6d366f0b5faf4e4d89
  $tc'Chr14 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16158715772192515624##
                   15765404004242020162##
                   Lib.$trModule
                   Lib.$tc'Chr39
                   0#
                   Lib.$tc'C29) -}
eb96e1d4e11034e12af6ca18f5e71cdb
  $tc'Chr15 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13727675717082841760##
                   16231313921454956413##
                   Lib.$trModule
                   Lib.$tc'Chr41
                   0#
                   Lib.$tc'C29) -}
1e6d8141de511861cf8a3aba994c9e1b
  $tc'Chr16 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12990326009725957857##
                   11364144545008298216##
                   Lib.$trModule
                   Lib.$tc'Chr43
                   0#
                   Lib.$tc'C29) -}
6ce2f23b38cebd9d741d67644558b615
  $tc'Chr17 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13548301309754128929##
                   8668169274295467448##
                   Lib.$trModule
                   Lib.$tc'Chr45
                   0#
                   Lib.$tc'C29) -}
45ded4ee529d682c1f5207d845c393a0
  $tc'Chr18 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12815421476617505551##
                   14944736301677261784##
                   Lib.$trModule
                   Lib.$tc'Chr47
                   0#
                   Lib.$tc'C29) -}
426e6cfca01d86df6c8a2bb4fd43afd4
  $tc'Chr19 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13065996330156348472##
                   609081026621362966##
                   Lib.$trModule
                   Lib.$tc'Chr49
                   0#
                   Lib.$tc'C29) -}
e746b44e1f7abc1965099c4fee9cb858
  $tc'Chr2 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12914851917505424798##
                   10124157770577533864##
                   Lib.$trModule
                   Lib.$tc'Chr51
                   0#
                   Lib.$tc'C29) -}
433fadc07541b8d964bb995d67d1acf9
  $tc'Chr20 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8187089547219797327##
                   12848444470347364030##
                   Lib.$trModule
                   Lib.$tc'Chr53
                   0#
                   Lib.$tc'C29) -}
e64b194f6f1b5162c029e18eb9a7928a
  $tc'Chr21 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15385397120728879570##
                   15144453066486927878##
                   Lib.$trModule
                   Lib.$tc'Chr55
                   0#
                   Lib.$tc'C29) -}
0a76c930443f332ca72214bc0b7dcaf8
  $tc'Chr22 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5395637466754936608##
                   915986580228438422##
                   Lib.$trModule
                   Lib.$tc'Chr57
                   0#
                   Lib.$tc'C29) -}
f1fdaca9395c0704417ebd5903bcf144
  $tc'Chr29 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr30) -}
fbf99c39dabe07282ba2161466ac9297
  $tc'Chr3 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14305184293094167224##
                   8265475094085851432##
                   Lib.$trModule
                   Lib.$tc'Chr59
                   0#
                   Lib.$tc'C29) -}
e188d318fb2da991d9538613fb994828
  $tc'Chr30 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr1"#) -}
9d2c3b3eb58026bc9a9e808a06961a50
  $tc'Chr31 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr32) -}
cf2f8cc2c80f2cd49ce00e75dc8a5d86
  $tc'Chr32 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr10"#) -}
a17b617979c230f63a4d0b7c822fdf22
  $tc'Chr33 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr34) -}
1587d0fb155802911b0f57f85bd12324
  $tc'Chr34 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr11"#) -}
d704f9c9b759554dfd842ee9b25d5aa4
  $tc'Chr35 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr36) -}
13e20fb6f1921fb15c0e065a24823113
  $tc'Chr36 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr12"#) -}
6860bdc1c47a39d7d6b68595a7123692
  $tc'Chr37 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr38) -}
dc41f689c9d903e94253545e4a3cc831
  $tc'Chr38 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr13"#) -}
98ba2b0179e9c841fe9a71641a4f28e0
  $tc'Chr39 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr40) -}
4ed5e86083dc543aee041cf4759894f9
  $tc'Chr4 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6025883302644930873##
                   16025091288546895113##
                   Lib.$trModule
                   Lib.$tc'Chr61
                   0#
                   Lib.$tc'C29) -}
64a9051ea560d2c271451a98a6f50bfd
  $tc'Chr40 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr14"#) -}
47f00c5151940a2aed5b945316c65cbc
  $tc'Chr41 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr42) -}
b99ddafc9dd958800d9e3b3ee1b2a8bb
  $tc'Chr42 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr15"#) -}
a89be305ad25862e146187be2296d947
  $tc'Chr43 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr44) -}
4f6f44aba86cb84bb1f1f7aab09a3212
  $tc'Chr44 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr16"#) -}
bb1dab6820b7a1748ae7d86595ad77db
  $tc'Chr45 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr46) -}
7d3061db50a1c00924814bb70be7e117
  $tc'Chr46 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr17"#) -}
f24002b2610138bc2de91294324e75fc
  $tc'Chr47 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr48) -}
bf5aae9f26718ac55243fb7f0597737c
  $tc'Chr48 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr18"#) -}
e57148c01d2d729531fc610b486f96d9
  $tc'Chr49 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr50) -}
296398235dbb9cd085b0823fecfe324b
  $tc'Chr5 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6238134394526480795##
                   4627589337768680058##
                   Lib.$trModule
                   Lib.$tc'Chr63
                   0#
                   Lib.$tc'C29) -}
58f8bfd305e0e85706d63d97c4bb4f37
  $tc'Chr50 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr19"#) -}
9fa7cdccfca8d3c437237ce7ac21b778
  $tc'Chr51 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr52) -}
9b978c8f8ac565ddc0bdbebcf8adef41
  $tc'Chr52 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr2"#) -}
0a16dea607e5ba79ebe7b3e90feefb77
  $tc'Chr53 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr54) -}
7a8bbf1079db3960ebece18216d55a33
  $tc'Chr54 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr20"#) -}
7e657c682f373c11dcf3495e74344a72
  $tc'Chr55 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr56) -}
016620bce8ae863a1065e743c7017348
  $tc'Chr56 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr21"#) -}
ebbafff488f7b5e9d8e0b5c4462dc0b1
  $tc'Chr57 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr58) -}
8c1b41037ca9f850a7146b8f7736d9d1
  $tc'Chr58 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr22"#) -}
92db352a11b55d390e3aeacb5565e27b
  $tc'Chr59 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr60) -}
9c3111ffff1c3b585d8ab2eda245d1fa
  $tc'Chr6 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9544155127390135381##
                   6452816421312854508##
                   Lib.$trModule
                   Lib.$tc'Chr65
                   0#
                   Lib.$tc'C29) -}
85cc35348c0d044ec4784d267a84f390
  $tc'Chr60 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr3"#) -}
724b72a4960bfbec916510bf027b041e
  $tc'Chr61 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr62) -}
9b00d2751b189009410f43c0b9e8de79
  $tc'Chr62 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr4"#) -}
91c40550fc47a0af20ddf45b9d06dff3
  $tc'Chr63 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr64) -}
4f8c511beecc018f50b9bdaa14ca41f5
  $tc'Chr64 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr5"#) -}
857e6a40b3657109bc7fecd8a6355302
  $tc'Chr65 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr66) -}
80f207b5b988324b837f6ac52cc37e3f
  $tc'Chr66 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr6"#) -}
36dabb9ae0602bbd31c9ccf7b8b23d85
  $tc'Chr67 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr68) -}
c69acb3eee5acbfc8a420fdf481f64c2
  $tc'Chr68 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr7"#) -}
c4cdb7ce8b33437e6a57dfb34ea10a8f
  $tc'Chr69 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr70) -}
fbe77e01606d9d782614f7ccdc046880
  $tc'Chr7 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9122937540934347076##
                   18217149212050539776##
                   Lib.$trModule
                   Lib.$tc'Chr67
                   0#
                   Lib.$tc'C29) -}
3b29756419b1a645ebba3cc78fe3a935
  $tc'Chr70 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr8"#) -}
e71624cd642845f99e2f330aec9442d4
  $tc'Chr71 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr72) -}
24bc46c6e7e0e6bef1033d6b1b1f8926
  $tc'Chr72 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr9"#) -}
ad7b992749d0801ae4e53b619015a7d4
  $tc'Chr8 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8398269481461186105##
                   17446240934362987827##
                   Lib.$trModule
                   Lib.$tc'Chr69
                   0#
                   Lib.$tc'C29) -}
b037051cbf500e5f46ec2a1ea0abab77
  $tc'Chr9 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12996184233893130366##
                   8170348192121426126##
                   Lib.$trModule
                   Lib.$tc'Chr71
                   0#
                   Lib.$tc'C29) -}
905331462e704ab8d40db441a73b03d6
  $tc'ChrM :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7864624910987438704##
                   8059255608227383250##
                   Lib.$trModule
                   Lib.$tc'ChrM1
                   0#
                   Lib.$tc'C29) -}
8aa8b24cd233bcac22fab81bd2aada79
  $tc'ChrM1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'ChrM2) -}
0e37fad1affc4284948ab3db470a04f3
  $tc'ChrM2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ChrM"#) -}
e52a4c81da54e10077a3c1abc11a9f47
  $tc'ChrX :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11451817447031370209##
                   1691104496804632908##
                   Lib.$trModule
                   Lib.$tc'ChrX1
                   0#
                   Lib.$tc'C29) -}
b58fe4d0b0e1d16123d51d52eff79109
  $tc'ChrX1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'ChrX2) -}
926017a5304e3d3a6899626e6f19b47f
  $tc'ChrX2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ChrX"#) -}
214998c63ddac679876d9b25d0fccbbd
  $tc'ChrY :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16487416199558685442##
                   13579549616816304292##
                   Lib.$trModule
                   Lib.$tc'ChrY1
                   0#
                   Lib.$tc'C29) -}
4f8acce1978e652c41efe00f32d11a1a
  $tc'ChrY1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'ChrY2) -}
25ecd729fc609360ae87955873678a62
  $tc'ChrY2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ChrY"#) -}
f8e48d843a3e2281f0fba8a00b19b419
  $tc'CigarMod :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17852687495666046641##
                   5360240244784763013##
                   Lib.$trModule
                   Lib.$tc'CigarMod2
                   0#
                   Lib.$tc'CigarMod1) -}
5bdf68c487e500fad431f1138885552d
  $tc'CigarMod1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
793d2b7bf31905aff17a76139cf180da
  $tc'CigarMod2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'CigarMod3) -}
89fe12df6747f7f83a80ca642716faab
  $tc'CigarMod3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'CigarMod"#) -}
120d71047e4abfed097b919ed60a0bd0
  $tc'GL000191P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10025595160261713248##
                   2296474292080881080##
                   Lib.$trModule
                   Lib.$tc'GL000191P2
                   0#
                   Lib.$tc'C29) -}
87e636bf3dda44fae0389a0201966bc9
  $tc'GL000191P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000191P3) -}
1de79b0698bfd1ff901ab24a3d42c6ab
  $tc'GL000191P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000191P1"#) -}
47fbb07a2dec6fc5d6863f1a6f0302fb
  $tc'GL000192P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7828092231502998263##
                   13354090054922447925##
                   Lib.$trModule
                   Lib.$tc'GL000192P2
                   0#
                   Lib.$tc'C29) -}
52ccbfc29fc82c779f82b7e64c64d6bd
  $tc'GL000192P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000192P3) -}
f89b331f35fe3fb43a313eb53d70900e
  $tc'GL000192P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000192P1"#) -}
7ef1db93dda9a79387e350d64e9490c3
  $tc'GL000193P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12115722775812723783##
                   17558018105284202385##
                   Lib.$trModule
                   Lib.$tc'GL000193P2
                   0#
                   Lib.$tc'C29) -}
c8f65082a41b8361e8cc44da5c87432e
  $tc'GL000193P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000193P3) -}
b835d45d81be4957968260aac6cb7612
  $tc'GL000193P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000193P1"#) -}
76dc51e2ec2f89057a8aacd014b7df7d
  $tc'GL000194P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5489044938073919926##
                   14132746498860521784##
                   Lib.$trModule
                   Lib.$tc'GL000194P2
                   0#
                   Lib.$tc'C29) -}
2396afbb6a0c77f0ff6e05f403c47689
  $tc'GL000194P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000194P3) -}
8155e566f27f8baed1685d9fed597e8a
  $tc'GL000194P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000194P1"#) -}
57c562c24dbe55aa659c80e0c359e2db
  $tc'GL000195P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12363013073567834039##
                   12961942643279817639##
                   Lib.$trModule
                   Lib.$tc'GL000195P2
                   0#
                   Lib.$tc'C29) -}
c9201725dd4619515f356620f99cbe57
  $tc'GL000195P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000195P3) -}
abfc8a6c2b61d8e90e2883686d713468
  $tc'GL000195P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000195P1"#) -}
f676269e5f0585e07c834459d840126d
  $tc'GL000196P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6439158404841413918##
                   9386286124144840420##
                   Lib.$trModule
                   Lib.$tc'GL000196P2
                   0#
                   Lib.$tc'C29) -}
ff7a81f2de3905cddcc86decbd3f8b0c
  $tc'GL000196P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000196P3) -}
458b7a78f0eacb7bb3c9c41f31466375
  $tc'GL000196P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000196P1"#) -}
c02a151843f4829b923bd9bd94cb2644
  $tc'GL000197P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10620765245936972387##
                   16356545768045374733##
                   Lib.$trModule
                   Lib.$tc'GL000197P2
                   0#
                   Lib.$tc'C29) -}
c1d7b427640213e241a37452361fc2e8
  $tc'GL000197P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000197P3) -}
8c49d8a1a11d97c488da31e41d3a89a5
  $tc'GL000197P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000197P1"#) -}
121850e4a02d76cd9c7d8e899ed442d4
  $tc'GL000198P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14693413606387874092##
                   7660930774691955918##
                   Lib.$trModule
                   Lib.$tc'GL000198P2
                   0#
                   Lib.$tc'C29) -}
12e2e80c7b9ee02191a0151ff00e812b
  $tc'GL000198P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000198P3) -}
44a000480995811a1cce55bd8b6a1c25
  $tc'GL000198P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000198P1"#) -}
ecbfe5204c102b352b4c0081e7adc8a1
  $tc'GL000199P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4486354430818279247##
                   15346306638277583681##
                   Lib.$trModule
                   Lib.$tc'GL000199P2
                   0#
                   Lib.$tc'C29) -}
156909f9d3fc71b05caf2c80f1ee8674
  $tc'GL000199P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000199P3) -}
457281b42bd29d157ad1128b134f00c2
  $tc'GL000199P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000199P1"#) -}
68ae097bfe5411cf8cf36752862ecfb2
  $tc'GL000200P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15443258124629673315##
                   10007892595191296004##
                   Lib.$trModule
                   Lib.$tc'GL000200P2
                   0#
                   Lib.$tc'C29) -}
5405a8d5e871d251ab0b3ca45515050e
  $tc'GL000200P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000200P3) -}
7ab8703717242cd99ba05f20b3ad5ccf
  $tc'GL000200P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000200P1"#) -}
63ceed0db7acf7a3e3e1a0c48ffdc13d
  $tc'GL000201P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11512747289210354624##
                   12576418637094918455##
                   Lib.$trModule
                   Lib.$tc'GL000201P2
                   0#
                   Lib.$tc'C29) -}
6d97dd27c21c0177bbdfc5b75c6af6c5
  $tc'GL000201P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000201P3) -}
39648e979bfa50605039e6761758c175
  $tc'GL000201P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000201P1"#) -}
f44abb7a93b6a2f4f522fd926bbe2b57
  $tc'GL000202P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4693765283553790911##
                   10835934529966161706##
                   Lib.$trModule
                   Lib.$tc'GL000202P2
                   0#
                   Lib.$tc'C29) -}
c59e919eb2de1cdc85f32b9edfb1829e
  $tc'GL000202P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000202P3) -}
91ecdde38a1cefab57b5602947d14e1f
  $tc'GL000202P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000202P1"#) -}
5e0c81026fe990fcacc1d1e24414b8bd
  $tc'GL000203P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4166658354432250623##
                   996519018173826912##
                   Lib.$trModule
                   Lib.$tc'GL000203P2
                   0#
                   Lib.$tc'C29) -}
63fa63e4961c639c45a7a8bad68b4dc6
  $tc'GL000203P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000203P3) -}
a2b6d7b5b4e0137addc136a264a90aef
  $tc'GL000203P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000203P1"#) -}
d3b678e6409e2e23c18498e0d6fba3b5
  $tc'GL000204P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4944917868002628862##
                   1071616204126116554##
                   Lib.$trModule
                   Lib.$tc'GL000204P2
                   0#
                   Lib.$tc'C29) -}
e6cd5b991569b82acdbd2db4643367a4
  $tc'GL000204P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000204P3) -}
3a6b6d169cd09cffa06d4462da9a6f0f
  $tc'GL000204P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000204P1"#) -}
be0dd92b1fe68be56daba4b5e52bee5b
  $tc'GL000205P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11939115194914930891##
                   13060965620163625430##
                   Lib.$trModule
                   Lib.$tc'GL000205P2
                   0#
                   Lib.$tc'C29) -}
fc862f59ad3e29fd3d67613d423c6db4
  $tc'GL000205P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000205P3) -}
bcbce39d584d073d181384ba34fd7ecc
  $tc'GL000205P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000205P1"#) -}
3700118fbeed359706801f4b93bf21f9
  $tc'GL000206P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9931377442909348542##
                   9292147509363453343##
                   Lib.$trModule
                   Lib.$tc'GL000206P2
                   0#
                   Lib.$tc'C29) -}
0714de46d0864a310cfb2a0a39d2c32f
  $tc'GL000206P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000206P3) -}
a99dd24d19603d8ce9e157573acb0265
  $tc'GL000206P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000206P1"#) -}
d04f94949e4a6a62d7032607124d0744
  $tc'GL000207P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   106257669086384340##
                   4370145042620408478##
                   Lib.$trModule
                   Lib.$tc'GL000207P2
                   0#
                   Lib.$tc'C29) -}
d4cfd636cdc583664aa11348d465b9f0
  $tc'GL000207P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000207P3) -}
fcca6765b5d484aea7ee5fa6c6295d7f
  $tc'GL000207P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000207P1"#) -}
94b109136a88c4bfc3103647392d5795
  $tc'GL000208P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10190386985025216440##
                   13930738197519199802##
                   Lib.$trModule
                   Lib.$tc'GL000208P2
                   0#
                   Lib.$tc'C29) -}
7ea5a93a01488db5bd3f42f3b701a1b5
  $tc'GL000208P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000208P3) -}
d21685b616e2e6c88b2f252e159e0790
  $tc'GL000208P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000208P1"#) -}
cc569b886b5fbb30ac8e713b17d59cd6
  $tc'GL000209P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9157754732258103765##
                   4153721872043241982##
                   Lib.$trModule
                   Lib.$tc'GL000209P2
                   0#
                   Lib.$tc'C29) -}
72d5deaadcd9cbfa1dacf07b69b40062
  $tc'GL000209P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000209P3) -}
a665d9465a8672a5a3f7fdf9924f0316
  $tc'GL000209P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000209P1"#) -}
bf829ed8904113b99f83b1564fa91a00
  $tc'GL000210P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9872280125405344839##
                   8347366761591199273##
                   Lib.$trModule
                   Lib.$tc'GL000210P2
                   0#
                   Lib.$tc'C29) -}
e52d3176038dae0288a14919602b9b67
  $tc'GL000210P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000210P3) -}
dcd5832982ac3fc12bb7975818a875d3
  $tc'GL000210P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000210P1"#) -}
c71183e5e118973401b64933ac37c484
  $tc'GL000211P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14412871282138383260##
                   18195885699239456331##
                   Lib.$trModule
                   Lib.$tc'GL000211P2
                   0#
                   Lib.$tc'C29) -}
9e50861377e7e286540f3b037a1303f8
  $tc'GL000211P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000211P3) -}
0fb33be9d43f9eb0d3be6dd03c9ebe37
  $tc'GL000211P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000211P1"#) -}
571719da7ad774d66ea9bef5d74e07d4
  $tc'GL000212P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13667521195246842903##
                   5653009905651233927##
                   Lib.$trModule
                   Lib.$tc'GL000212P2
                   0#
                   Lib.$tc'C29) -}
d3f112cfa12c0045b7c50f7ea79c7bbd
  $tc'GL000212P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000212P3) -}
241aadcf5893ff4d1829cd99a9a554c2
  $tc'GL000212P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000212P1"#) -}
2c6ebab56689111dde6abf81d9d59263
  $tc'GL000213P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3235135764061926346##
                   4465778782114314907##
                   Lib.$trModule
                   Lib.$tc'GL000213P2
                   0#
                   Lib.$tc'C29) -}
c8a313df14e5b2a3624589b12d00c125
  $tc'GL000213P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000213P3) -}
dfbcdad4ce50e6bf0e33a71302ea6980
  $tc'GL000213P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000213P1"#) -}
393bb0711612574857b183b1669e4f1f
  $tc'GL000214P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18403486894854548686##
                   13894046292731898540##
                   Lib.$trModule
                   Lib.$tc'GL000214P2
                   0#
                   Lib.$tc'C29) -}
df6079cc216d6928e4e7625d4227f785
  $tc'GL000214P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000214P3) -}
4a0164ec301c0e6a3ff40dc800816ad8
  $tc'GL000214P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000214P1"#) -}
00d23ecccbdf8c3be028b5eee2e9f266
  $tc'GL000215P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5487948358012395209##
                   18386024170488570025##
                   Lib.$trModule
                   Lib.$tc'GL000215P2
                   0#
                   Lib.$tc'C29) -}
3208cdddba666ca325e1581098f349f0
  $tc'GL000215P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000215P3) -}
0d47a1b4c12abc297f1b154323403fae
  $tc'GL000215P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000215P1"#) -}
d7076a91d40baeb4c696bc83e2d61fab
  $tc'GL000216P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   669689677363798412##
                   14515414138379267183##
                   Lib.$trModule
                   Lib.$tc'GL000216P2
                   0#
                   Lib.$tc'C29) -}
0920b6ac32c51eed6c7afdbd0524607e
  $tc'GL000216P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000216P3) -}
d257d1783c6a5f22180bfa1ce4475ba3
  $tc'GL000216P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000216P1"#) -}
35f36b0687d856c3739d036828aa400a
  $tc'GL000217P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15414334494690892113##
                   13041183010369693704##
                   Lib.$trModule
                   Lib.$tc'GL000217P2
                   0#
                   Lib.$tc'C29) -}
92ad6c96b5dc02531a7f064d4febd3b7
  $tc'GL000217P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000217P3) -}
f1127ff679957193710ecc66f9248295
  $tc'GL000217P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000217P1"#) -}
947b510300cfdd03429eb7dc52f53098
  $tc'GL000218P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2771726359806512117##
                   1551859489758165802##
                   Lib.$trModule
                   Lib.$tc'GL000218P2
                   0#
                   Lib.$tc'C29) -}
2bd557593cc95c44b499f447fa1086f0
  $tc'GL000218P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000218P3) -}
8dc94b7bd3c02561582f77ff33e43b9e
  $tc'GL000218P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000218P1"#) -}
4378b7994e65fd4435a94c791550a0cc
  $tc'GL000219P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3224618192962635268##
                   5592234555889595796##
                   Lib.$trModule
                   Lib.$tc'GL000219P2
                   0#
                   Lib.$tc'C29) -}
13b335febc71e51baa94b767262ade0b
  $tc'GL000219P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000219P3) -}
30dbb2bae47dea3c0165d842d15439f2
  $tc'GL000219P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000219P1"#) -}
3833dc8d646b63ee80a8372b8e6ede97
  $tc'GL000220P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9324756424594975611##
                   6669441726269511439##
                   Lib.$trModule
                   Lib.$tc'GL000220P2
                   0#
                   Lib.$tc'C29) -}
99f0394637cc16aae937a9ac4fb22ead
  $tc'GL000220P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000220P3) -}
d10ae5b3b75ec973c6bd642f6ca87ceb
  $tc'GL000220P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000220P1"#) -}
dd0c56f26a653a4ccfdeafaec0dc6875
  $tc'GL000221P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10946374788525946331##
                   965892379202423452##
                   Lib.$trModule
                   Lib.$tc'GL000221P2
                   0#
                   Lib.$tc'C29) -}
d6a60c2f5a7d12aac711bee42f380a9e
  $tc'GL000221P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000221P3) -}
4b63894a1d2762f8fb44f2d21b85d340
  $tc'GL000221P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000221P1"#) -}
f24bd09257b4556cd42775ef2bd4815f
  $tc'GL000222P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17632214910024587052##
                   17025805870824352337##
                   Lib.$trModule
                   Lib.$tc'GL000222P2
                   0#
                   Lib.$tc'C29) -}
43f97012ce8c4004d83ae66b9e99d602
  $tc'GL000222P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000222P3) -}
fcdff4b5dc054aa61c886e64db457b7f
  $tc'GL000222P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000222P1"#) -}
a912e68622266c6e399ec0942cbbff3a
  $tc'GL000223P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6218204657501342167##
                   5815008631332200066##
                   Lib.$trModule
                   Lib.$tc'GL000223P2
                   0#
                   Lib.$tc'C29) -}
de141967706a007c28082b000d675234
  $tc'GL000223P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000223P3) -}
524f566a1002246a797cc8fb2de97cbb
  $tc'GL000223P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000223P1"#) -}
ca85c303064767dd2205e13bf9bef4ad
  $tc'GL000224P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8437197016420321801##
                   13081644271273444134##
                   Lib.$trModule
                   Lib.$tc'GL000224P2
                   0#
                   Lib.$tc'C29) -}
c45228a51eb2009c2ddd841626248c1f
  $tc'GL000224P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000224P3) -}
f07c134a3d6eb78dfe6e9ddafa2310f0
  $tc'GL000224P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000224P1"#) -}
5482d4e15ccd4ec9bb20e4080ec2bf94
  $tc'GL000225P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17668695393060230485##
                   5555765587893043433##
                   Lib.$trModule
                   Lib.$tc'GL000225P2
                   0#
                   Lib.$tc'C29) -}
6db870561b11609094b843b3b305b2ec
  $tc'GL000225P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000225P3) -}
792fc06e7311063f6535848b83587298
  $tc'GL000225P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000225P1"#) -}
99375b104dc959feec77de0bc90bd4d4
  $tc'GL000226P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10692466174901798581##
                   17812157845390992508##
                   Lib.$trModule
                   Lib.$tc'GL000226P2
                   0#
                   Lib.$tc'C29) -}
d74193125f13397fdff7c19fca0513d2
  $tc'GL000226P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000226P3) -}
bb9186992e60d48d157259d4dc8aa5d4
  $tc'GL000226P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000226P1"#) -}
e8733be72d88873fbebbf1fafca89f25
  $tc'GL000227P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6476382663049194221##
                   9904353514011304247##
                   Lib.$trModule
                   Lib.$tc'GL000227P2
                   0#
                   Lib.$tc'C29) -}
f84deb70bd6fc66b500d1cd00cd846be
  $tc'GL000227P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000227P3) -}
040d6dda16fe4eb015696fa7128663ec
  $tc'GL000227P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000227P1"#) -}
21a67bcd6550895591317acf6abd0466
  $tc'GL000228P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7701283478447144320##
                   11260651639869220740##
                   Lib.$trModule
                   Lib.$tc'GL000228P2
                   0#
                   Lib.$tc'C29) -}
7bd5aee8d216ed0bf761294656444096
  $tc'GL000228P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000228P3) -}
0e6218efadf22218210355f35e2c2339
  $tc'GL000228P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000228P1"#) -}
6d102db8c5a885b19354c2d4bead942a
  $tc'GL000229P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12508991131718288358##
                   15117890367702881300##
                   Lib.$trModule
                   Lib.$tc'GL000229P2
                   0#
                   Lib.$tc'C29) -}
cc0c84fc432eb68b1f285880ef998d64
  $tc'GL000229P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000229P3) -}
77b9dd52c60936aa5b8b6173ff75f452
  $tc'GL000229P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000229P1"#) -}
0254e6cba6ed1e67727a31ff40366933
  $tc'GL000230P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11484448416263431893##
                   8481701797184102088##
                   Lib.$trModule
                   Lib.$tc'GL000230P2
                   0#
                   Lib.$tc'C29) -}
7a684ee22cd773f6300b40ddf38b6cc7
  $tc'GL000230P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000230P3) -}
0b2b040fa6aec490477412351006b867
  $tc'GL000230P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000230P1"#) -}
9a767ac66bbb47392ea791f23a6bb99e
  $tc'GL000231P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3818021877686056398##
                   3817441038991961355##
                   Lib.$trModule
                   Lib.$tc'GL000231P2
                   0#
                   Lib.$tc'C29) -}
8ca563a57eea62fee78771c9480798dc
  $tc'GL000231P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000231P3) -}
337901453a97f90eb89b54ec3171e090
  $tc'GL000231P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000231P1"#) -}
8ced394884e789be6651ec89ed48e582
  $tc'GL000232P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7519238023354488827##
                   16327803211467259725##
                   Lib.$trModule
                   Lib.$tc'GL000232P2
                   0#
                   Lib.$tc'C29) -}
d583fea43cfd6eea5363a80adc469c17
  $tc'GL000232P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000232P3) -}
efcd34b726fecb1a5b45cbc5ed226b96
  $tc'GL000232P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000232P1"#) -}
1b12c6f53de3ea60f47a88b2f1b95db4
  $tc'GL000233P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15835037037352242652##
                   17319199408413168958##
                   Lib.$trModule
                   Lib.$tc'GL000233P2
                   0#
                   Lib.$tc'C29) -}
3e7d80080566d1dddf473dbac36ce862
  $tc'GL000233P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000233P3) -}
2be44daaaea9b454f177c34233768067
  $tc'GL000233P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000233P1"#) -}
c7bb70b9c6f6fc44e37158e3f8caf241
  $tc'GL000234P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8054457882543772578##
                   511789885172930318##
                   Lib.$trModule
                   Lib.$tc'GL000234P2
                   0#
                   Lib.$tc'C29) -}
f27a8aacdcbf7ce84302be9e6e454497
  $tc'GL000234P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000234P3) -}
21368c68e8e4d5c7d6be236ddc0244c3
  $tc'GL000234P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000234P1"#) -}
56716ddcf19577db87a91c50b73ec939
  $tc'GL000235P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1586126524890861628##
                   2785679600195440715##
                   Lib.$trModule
                   Lib.$tc'GL000235P2
                   0#
                   Lib.$tc'C29) -}
15a2957774e1ef902b42701948b68e7f
  $tc'GL000235P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000235P3) -}
084a1bd040384afb943e0c0b7b8e4e54
  $tc'GL000235P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000235P1"#) -}
46c61beed05f595375c6344c56bc9183
  $tc'GL000236P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7406545399819780972##
                   1338899968058342427##
                   Lib.$trModule
                   Lib.$tc'GL000236P2
                   0#
                   Lib.$tc'C29) -}
89344dd101fa8a4d413c00a47910f600
  $tc'GL000236P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000236P3) -}
227c860e471105e679c7639e34aad2a0
  $tc'GL000236P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000236P1"#) -}
ed13f6f8c3080ef9f76a28ac15f1b811
  $tc'GL000237P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11249375038786918619##
                   2542373289452287514##
                   Lib.$trModule
                   Lib.$tc'GL000237P2
                   0#
                   Lib.$tc'C29) -}
58ccc3c561cd4bfaabea312cb463d2cd
  $tc'GL000237P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000237P3) -}
37a5d072f34c7dd99c8e0938d80d52ff
  $tc'GL000237P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000237P1"#) -}
20757e65c6dfcf9dc7b6a347764bebfd
  $tc'GL000238P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13362437118375541972##
                   12197868828803549762##
                   Lib.$trModule
                   Lib.$tc'GL000238P2
                   0#
                   Lib.$tc'C29) -}
9f934ee5645adaabbb31e5b94eff6936
  $tc'GL000238P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000238P3) -}
873f7b6c7cc639bf40bca294f0349de0
  $tc'GL000238P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000238P1"#) -}
b18791a208fc03bca977a3868e740537
  $tc'GL000239P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17835029273774123741##
                   17006139089348411092##
                   Lib.$trModule
                   Lib.$tc'GL000239P2
                   0#
                   Lib.$tc'C29) -}
d720cc596b292afbd1ad132703ffea05
  $tc'GL000239P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000239P3) -}
81b10f89b9996612e0076b67d542f507
  $tc'GL000239P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000239P1"#) -}
1997198ed165800ecc989023d2844e03
  $tc'GL000240P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11993023168256191366##
                   14210364504425572111##
                   Lib.$trModule
                   Lib.$tc'GL000240P2
                   0#
                   Lib.$tc'C29) -}
2725bf560686a24fd0ed12b737cc1f8f
  $tc'GL000240P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000240P3) -}
adb5846cdd918c7ebfba5a3fcb20223f
  $tc'GL000240P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000240P1"#) -}
c66967c38b4cac6da18e21d2be798b32
  $tc'GL000241P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9424668456582191294##
                   15556976097596643619##
                   Lib.$trModule
                   Lib.$tc'GL000241P2
                   0#
                   Lib.$tc'C29) -}
e447f3c5b52f73b8e8d0918f6468e82c
  $tc'GL000241P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000241P3) -}
375946a6a6af8ecbdf6c693a5d16f7da
  $tc'GL000241P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000241P1"#) -}
ad03fc0994b387097d6dc3e8d7fee29e
  $tc'GL000242P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4144438555589736353##
                   10223210506463052285##
                   Lib.$trModule
                   Lib.$tc'GL000242P2
                   0#
                   Lib.$tc'C29) -}
46b162205b4d4e4002a7745a98ad3c22
  $tc'GL000242P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000242P3) -}
70f928a722c78458ed427aa522885936
  $tc'GL000242P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000242P1"#) -}
a39b01b212f695aacdbbae2af6fe7aee
  $tc'GL000243P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   578034194729209692##
                   14831416122893618717##
                   Lib.$trModule
                   Lib.$tc'GL000243P2
                   0#
                   Lib.$tc'C29) -}
ac5f0378f902c9ba06658eb8539f8ee2
  $tc'GL000243P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000243P3) -}
7cf626ad380a785e1aaf2455f471412f
  $tc'GL000243P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000243P1"#) -}
8b027313f22071b100d638ea1592adf2
  $tc'GL000244P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11431135579069153587##
                   16440756994244747744##
                   Lib.$trModule
                   Lib.$tc'GL000244P2
                   0#
                   Lib.$tc'C29) -}
51c53feaf33db4585c6c94fc56e1263d
  $tc'GL000244P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000244P3) -}
919472fbf588edcd98ea4267b8370700
  $tc'GL000244P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000244P1"#) -}
229dbfb53bd28ebdbbc8a8f45329e06d
  $tc'GL000245P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4776798297490399321##
                   2423355039655791459##
                   Lib.$trModule
                   Lib.$tc'GL000245P2
                   0#
                   Lib.$tc'C29) -}
bcd3d449cc4f124be220dc01a4fe21ce
  $tc'GL000245P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000245P3) -}
beab978b414ab25b6382deb76632d563
  $tc'GL000245P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000245P1"#) -}
a5fdb37d00069558aa6a7e8525a0a0e0
  $tc'GL000246P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17929715452684081409##
                   3356879429096613248##
                   Lib.$trModule
                   Lib.$tc'GL000246P2
                   0#
                   Lib.$tc'C29) -}
1973e34383bc9fe3d5879d8016cc69a4
  $tc'GL000246P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000246P3) -}
9b122e3917790f4496ebecbe56b83f46
  $tc'GL000246P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000246P1"#) -}
2b5c677e4e9dddc73b4d02b1c8034d67
  $tc'GL000247P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1180407965950355413##
                   6619317492877385031##
                   Lib.$trModule
                   Lib.$tc'GL000247P2
                   0#
                   Lib.$tc'C29) -}
a05f1fccb81455ae12bc697402292aa0
  $tc'GL000247P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000247P3) -}
115ba37679f5ee7f9792a9cb781acbe5
  $tc'GL000247P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000247P1"#) -}
6a48604e29155ee5546ac4ab848acd23
  $tc'GL000248P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3158781879077385740##
                   13618891544981834818##
                   Lib.$trModule
                   Lib.$tc'GL000248P2
                   0#
                   Lib.$tc'C29) -}
af3701f99fd3c3f4a307903234a26d16
  $tc'GL000248P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000248P3) -}
55a7bf330570a2d740cda71e81cc9a98
  $tc'GL000248P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000248P1"#) -}
0a44322dd328de525d486a99b998d3be
  $tc'GL000249P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11881342333007599875##
                   15144417776377240448##
                   Lib.$trModule
                   Lib.$tc'GL000249P2
                   0#
                   Lib.$tc'C29) -}
94c0446ab36c94565c9119109a37c403
  $tc'GL000249P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000249P3) -}
c6beb2a825b594f4c8e34a52c291e837
  $tc'GL000249P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000249P1"#) -}
18a81bc95c015a3faabd9274ec19ac5a
  $tc'GRC :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   191138425806027556##
                   17310955212607044068##
                   Lib.$trModule
                   Lib.$tc'GRC2
                   0#
                   Lib.$tc'GRC1) -}
1994dddb048e0f8d2320c0b9790c059a
  $tc'GRC1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
bec87f78cd01138bf1a1d9a1e7e74f50
  $tc'GRC2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GRC3) -}
428a4f06d11b54776bf49954e268f5e2
  $tc'GRC3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GRC"#) -}
b2f4c1e0a0812c9df63e290a46a8116e
  $tc'MasterRecord :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5953401614401952689##
                   6525918954601464312##
                   Lib.$trModule
                   Lib.$tc'MasterRecord2
                   0#
                   Lib.$tc'MasterRecord1) -}
28b2cf4a8a0533246436d3847108aa7d
  $tc'MasterRecord1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
e0d29f7b9495d0d73ccbbfff655ae645
  $tc'MasterRecord2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'MasterRecord3) -}
ba0c0188d083b2cb02dadf820172bed9
  $tc'MasterRecord3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'MasterRecord"#) -}
478d75769acdea1bbcbb52743ca40a24
  $tc'MidFamily :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   354307611892949245##
                   15008787296832749736##
                   Lib.$trModule
                   Lib.$tc'MidFamily2
                   0#
                   Lib.$tc'MidFamily1) -}
644db80c7028d2a9d1acfa4805009264
  $tc'MidFamily1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
ddb39e9c966f26368037b5b2455626c9
  $tc'MidFamily2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'MidFamily3) -}
21446a55b87c31d4a856e0da3144bf09
  $tc'MidFamily3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'MidFamily"#) -}
83751c200ba76f6be3bddb8311e439cd
  $tc'NC_007605 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5810733917980922893##
                   5838858770543979326##
                   Lib.$trModule
                   Lib.$tc'NC_1
                   0#
                   Lib.$tc'C29) -}
f0a1b8182e9e79c4fba131ac578b6470
  $tc'NC_1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'NC_2) -}
eb61a6cda87df847d496cabb0fd3a042
  $tc'NC_2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'NC_007605"#) -}
4dde82cbe5b3cf105e6a3f2588e92c56
  $tc'NONE :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8034130833244570633##
                   16548435578991804361##
                   Lib.$trModule
                   Lib.$tc'NONE1
                   0#
                   Lib.$tc'C29) -}
b36180b951a5d99c7ddca1dfdf86ca03
  $tc'NONE1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'NONE2) -}
f300b90a3e33dba228a55fee42a1fb09
  $tc'NONE2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'NONE"#) -}
ef89be09a35d0febea3c279b9d151b85
  $tc'Opts :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12960341841121754537##
                   739692778621230395##
                   Lib.$trModule
                   Lib.$tc'Opts2
                   0#
                   Lib.$tc'Opts1) -}
38ba3b03552ac391824dfa822a89d055
  $tc'Opts1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
dd7712c019a1e35ecc5e98836674aca5
  $tc'Opts2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Opts3) -}
6a6590c80496adbcbfdfdf2f7d47be99
  $tc'Opts3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Opts"#) -}
37d54e9c579901da6794805a11f75893
  $tc'PairedAln :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1604457795636293994##
                   1408850130352311332##
                   Lib.$trModule
                   Lib.$tc'PairedAln2
                   0#
                   Lib.$tc'PairedAln1) -}
1c4081a578d928841ef57ca53c359229
  $tc'PairedAln1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
cdfa504f67b5badd2baf95c76d92e147
  $tc'PairedAln2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'PairedAln3) -}
811a884d658dc017cfc33b5e11d9413a
  $tc'PairedAln3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PairedAln"#) -}
2d6fa1fd2092ad923bb5bd17f1396bf1
  $tc'RunStats :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9153881004992250109##
                   7372940026851426016##
                   Lib.$trModule
                   Lib.$tc'RunStats2
                   0#
                   Lib.$tc'RunStats1) -}
ad9419d849592b451f8ecf23a6306ad7
  $tc'RunStats1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
3afc5c5e3ca9f9061b7cad8bf2588c36
  $tc'RunStats2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'RunStats3) -}
fa63ac29b2e138ed33981e049a141b50
  $tc'RunStats3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'RunStats"#) -}
17118887ce5f4ea40aef346ea81ff0a4
  $tc'SAMFlag :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8522448998942699601##
                   5641445475027485041##
                   Lib.$trModule
                   Lib.$tc'SAMFlag2
                   0#
                   Lib.$tc'SAMFlag1) -}
e82c5f32a0025ba066f55643b40f343b
  $tc'SAMFlag1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
4dd7ee62baaf0ec709fd9ea704023601
  $tc'SAMFlag2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'SAMFlag3) -}
b19f7a6a9ba553223de9c51dd95b7995
  $tc'SAMFlag3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'SAMFlag"#) -}
84e941fcfef93634bd1b96c9dd8bfb87
  $tc'UCSC :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13949628922892615377##
                   8347507259886336937##
                   Lib.$trModule
                   Lib.$tc'UCSC1
                   0#
                   Lib.$tc'GRC1) -}
c61311c316ca9f58dd1e74c58ebc66be
  $tc'UCSC1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'UCSC2) -}
fe4ed6a789f51ae985a32ce514845eb8
  $tc'UCSC2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'UCSC"#) -}
15ad3b04b446b511247873b577af2c9c
  $tcAlignedRead :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2526743647896914567##
                   4144731210527558130##
                   Lib.$trModule
                   Lib.$tcAlignedRead1
                   0#
                   GHC.Types.krep$*) -}
088cd64d15128d0c694fcc5803b7300d
  $tcAlignedRead1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tcAlignedRead2) -}
9bff6d22b9612c6a3e228b727353536c
  $tcAlignedRead2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("AlignedRead"#) -}
7c8eb93fbb5f5081af9151d472f01753
  $tcBEDPE :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3375119182164707989##
                   1420963486666945733##
                   Lib.$trModule
                   Lib.$tcBEDPE1
                   0#
                   GHC.Types.krep$*) -}
7151ef2b616653c419b63c8c03c7656a
  $tcBEDPE1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tcBEDPE2) -}
d487e6367b79742d96d29ca212ea7308
  $tcBEDPE2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("BEDPE"#) -}
3a58a61c6093a714a03e93fdf40fd278
  $tcBedRecord :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9305225028528667577##
                   8694972240004145609##
                   Lib.$trModule
                   Lib.$tcBedRecord1
                   0#
                   GHC.Types.krep$*) -}
60b6a84f2c05952a8a11c06a970a9165
  $tcBedRecord1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tcBedRecord2) -}
b703c09102e34a960ede8c173d183013
  $tcBedRecord2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("BedRecord"#) -}
7526c20fe0b7583f7c6d417f2d51c310
  $tcChromNameFormat :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7909543731647025618##
                   7316935344464786470##
                   Lib.$trModule
                   Lib.$tcChromNameFormat1
                   0#
                   GHC.Types.krep$*) -}
396016a0362d4c8b2d2c208c8c30b3eb
  $tcChromNameFormat1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tcChromNameFormat2) -}
15803335beadcff1b625a25e6f7913b0
  $tcChromNameFormat2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ChromNameFormat"#) -}
44a80e15fb63c187c2b1276d70631eb9
  $tcCigarMod :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   956913644113872089##
                   11395784054439524339##
                   Lib.$trModule
                   Lib.$tcCigarMod1
                   0#
                   GHC.Types.krep$*) -}
8e9dac205975fe194b69eb3ebe8a4618
  $tcCigarMod1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tcCigarMod2) -}
cd19f45a53d691dc8119e66040950290
  $tcCigarMod2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("CigarMod"#) -}
ecf21d3e239fb5a2c4eaff898173b495
  $tcMasterRecord :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1225913910804549107##
                   611309242458411091##
                   Lib.$trModule
                   Lib.$tcMasterRecord1
                   0#
                   GHC.Types.krep$*) -}
f4d176399062df3dd3dba1b4ee1b075f
  $tcMasterRecord1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tcMasterRecord2) -}
1692a9c51fae736cd428934e4e2339af
  $tcMasterRecord2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("MasterRecord"#) -}
8d682c3abf3535b50c371352e4cca7a5
  $tcMidFamily :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14629118011264837052##
                   14071383920845285079##
                   Lib.$trModule
                   Lib.$tcMidFamily1
                   0#
                   GHC.Types.krep$*) -}
0d640c5cde9861d913dbde5280e2b28c
  $tcMidFamily1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tcMidFamily2) -}
2cf9976f9fb4f98754ca1e32f9127edd
  $tcMidFamily2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("MidFamily"#) -}
4091dff7fd778d443ebecbbb8ffac1dd
  $tcOpts :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1291745271239087261##
                   7462211708173930910##
                   Lib.$trModule
                   Lib.$tcOpts1
                   0#
                   GHC.Types.krep$*) -}
da0fc667eff936f74d887fbebcaec662
  $tcOpts1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tcOpts2) -}
861f79ca91eb235e06b93b33fd45c270
  $tcOpts2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Opts"#) -}
284d2bac25311cee86ca91713a759b83
  $tcPairedAln :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16968292557251372318##
                   8058593898834421225##
                   Lib.$trModule
                   Lib.$tcPairedAln1
                   0#
                   GHC.Types.krep$*) -}
08eb64f83ed2e21bf7758c2d0d640abb
  $tcPairedAln1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tcPairedAln2) -}
7ad710cf1955666be5cd286ac3beef62
  $tcPairedAln2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("PairedAln"#) -}
3d0f8b962e1a6fa4b16d58c77c296c24
  $tcRunStats :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3585263735936072611##
                   12512979636210661602##
                   Lib.$trModule
                   Lib.$tcRunStats1
                   0#
                   GHC.Types.krep$*) -}
a311c13bc0219b5367c35477a4d7b3db
  $tcRunStats1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tcRunStats2) -}
f620398b6ff678c2adffecb473ce72b7
  $tcRunStats2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("RunStats"#) -}
bf82be87d92fc27bf0ae5cd59d008684
  $tcSAMFlag :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14931601665060595101##
                   12691381733685805898##
                   Lib.$trModule
                   Lib.$tcSAMFlag1
                   0#
                   GHC.Types.krep$*) -}
4143b15cf2a6262c30cdf3a7a5df53ab
  $tcSAMFlag1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tcSAMFlag2) -}
8e4152ffd76281edcfadab97e35d74d6
  $tcSAMFlag2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("SAMFlag"#) -}
bdcc51ad439bf5aa7c0e02b2c4f21ddb
  $tcUChr :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6881263579318598434##
                   5830174198687572611##
                   Lib.$trModule
                   Lib.$tcUChr1
                   0#
                   GHC.Types.krep$*) -}
902b5cc2e525298b379eaea006c7c01d
  $tcUChr1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tcUChr2) -}
504778714eea3bc0abb435e1f453cd12
  $tcUChr2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("UChr"#) -}
fd9007e8201c28f4d4ee9f9532f3c27a
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Lib.$trModule3 Lib.$trModule1) -}
6aedb236281e03feabde0037bd6b7f81
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$trModule2) -}
0c4b3ed4bfb486906041b60c75480657
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Lib"#) -}
81cb3477f8d5bf357ca38bf133da82ba
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$trModule4) -}
ae67bc3a6597ca6356e94fe3e24992fd
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("primerclip-0.3.5.0-EKfIVVkqmIVLNVlfKBtA8g"#) -}
4d170e466c51bd6f1e6f64e09451f922
  $w$c< ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs, Strictness: <S,U><L,1*U><S,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: Lib.UChr)
                   (ww3 :: GHC.Integer.Type.Integer) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww1 ww3 of wild2 {
                             DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True } }
                   GHC.Types.True -> GHC.Types.True } } }) -}
ddfd894eb1e770babe62e31525e04669
  $w$c<1 ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs, Strictness: <S,U><L,1*U><S,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: Lib.UChr)
                   (ww3 :: GHC.Integer.Type.Integer) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww1 ww3 of wild2 {
                             DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True } }
                   GHC.Types.True -> GHC.Types.True } } }) -}
484b69735fb3ae366a582a32abed8e79
  $w$c<= ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs, Strictness: <S,U><L,1*U><S,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: Lib.UChr)
                   (ww3 :: GHC.Integer.Type.Integer) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww1 ww3 of wild2 {
                             DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False } }
                   GHC.Types.True -> GHC.Types.True } } }) -}
95beab6eb4897ec386d4ee4037f77192
  $w$c<=1 ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs, Strictness: <S,U><L,1*U><S,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: Lib.UChr)
                   (ww3 :: GHC.Integer.Type.Integer) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww1 ww3 of wild2 {
                             DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False } }
                   GHC.Types.True -> GHC.Types.True } } }) -}
939a8b03f9b13724d0c77f5af1e36f9e
  $w$c== ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> GHC.Types.Bool
  {- Arity: 8, HasNoCafRefs,
     Strictness: <S,U><L,1*U><L,1*U><L,1*U(U,U,U,U)><S,U><L,1*U><L,1*U><L,1*U(U,U,U,U)>,
     Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: GHC.Integer.Type.Integer)
                   (ww3 :: Data.ByteString.Internal.ByteString)
                   (ww4 :: Lib.UChr)
                   (ww5 :: GHC.Integer.Type.Integer)
                   (ww6 :: GHC.Integer.Type.Integer)
                   (ww7 :: Data.ByteString.Internal.ByteString) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww4 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==# a# b#) of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case GHC.Integer.Type.eqInteger# ww1 ww5 of wild1 { DEFAULT ->
                      case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild1 of wild2 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case GHC.Integer.Type.eqInteger# ww2 ww6 of wild3 { DEFAULT ->
                           case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild3 of wild4 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> Data.ByteString.Internal.eq ww3 ww7 } } } } } } }) -}
a2043878c58410c8819f343945c36fdc
  $w$c==1 ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> GHC.Types.Bool
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> GHC.Types.Bool
    -> GHC.Types.Bool
  {- Arity: 10, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U(U,U,U,U)><L,1*U(U,U,U,U)><L,1*U><S,1*U><L,1*U><L,1*U(U,U,U,U)><L,1*U(U,U,U,U)><L,1*U>,
     Inline: [0] -}
b01b1592a9e579b9ef02e5d4ed09debe
  $w$c==2 ::
    GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
  {- Arity: 10, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><L,1*U><L,1*U><S,1*U><L,1*U><L,1*U><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Types.Bool)
                   (ww1 :: GHC.Types.Bool)
                   (ww2 :: GHC.Base.String)
                   (ww3 :: GHC.Base.String)
                   (ww4 :: GHC.Base.String)
                   (ww5 :: GHC.Types.Bool)
                   (ww6 :: GHC.Types.Bool)
                   (ww7 :: GHC.Base.String)
                   (ww8 :: GHC.Base.String)
                   (ww9 :: GHC.Base.String) ->
                 let {
                   $j :: GHC.Types.Bool <join 0>
                   = let {
                       $j1 :: GHC.Types.Bool <join 0>
                       = case GHC.Base.eqString ww2 ww7 of wild {
                           GHC.Types.False -> GHC.Types.False
                           GHC.Types.True
                           -> case GHC.Base.eqString ww3 ww8 of wild1 {
                                GHC.Types.False -> GHC.Types.False
                                GHC.Types.True -> GHC.Base.eqString ww4 ww9 } }
                     } in
                     case ww1 of wild {
                       GHC.Types.False
                       -> case ww6 of wild1 {
                            GHC.Types.False -> $j1 GHC.Types.True -> GHC.Types.False }
                       GHC.Types.True
                       -> case ww6 of wild1 {
                            GHC.Types.False -> GHC.Types.False GHC.Types.True -> $j1 } }
                 } in
                 case ww of wild {
                   GHC.Types.False
                   -> case ww5 of wild1 {
                        GHC.Types.False -> $j GHC.Types.True -> GHC.Types.False }
                   GHC.Types.True
                   -> case ww5 of wild1 {
                        GHC.Types.False -> GHC.Types.False GHC.Types.True -> $j } }) -}
822a4191b7481da17cdc8df487964c20
  $w$c> ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs, Strictness: <S,U><L,1*U><S,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: Lib.UChr)
                   (ww3 :: GHC.Integer.Type.Integer) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww1 ww3 of wild2 {
                             DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True } }
                   GHC.Types.True -> GHC.Types.False } } }) -}
a82ffeb1edec3d1fdd584fbedf5272bd
  $w$c>1 ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs, Strictness: <S,U><L,1*U><S,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: Lib.UChr)
                   (ww3 :: GHC.Integer.Type.Integer) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww1 ww3 of wild2 {
                             DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True } }
                   GHC.Types.True -> GHC.Types.False } } }) -}
635f30d77d9093c0d79781d08fec618c
  $w$c>= ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs, Strictness: <S,U><L,1*U><S,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: Lib.UChr)
                   (ww3 :: GHC.Integer.Type.Integer) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww1 ww3 of wild2 {
                             DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False } }
                   GHC.Types.True -> GHC.Types.False } } }) -}
115b353ed5967b7430d265247af44a71
  $w$c>=1 ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs, Strictness: <S,U><L,1*U><S,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: Lib.UChr)
                   (ww3 :: GHC.Integer.Type.Integer) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww1 ww3 of wild2 {
                             DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False } }
                   GHC.Types.True -> GHC.Types.False } } }) -}
0b3d6cb870eb03aae5437cbf34a13af8
  $w$ccompare ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Ordering
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S,U><L,1*U><L,1*U><S,U><L,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: GHC.Integer.Type.Integer)
                   (ww3 :: Lib.UChr)
                   (ww4 :: GHC.Integer.Type.Integer)
                   (ww5 :: GHC.Integer.Type.Integer) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww3 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.GT
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww1 ww4 of wild2 {
                             GHC.Types.LT -> GHC.Types.LT
                             GHC.Types.EQ -> GHC.Integer.Type.compareInteger ww2 ww5
                             GHC.Types.GT -> GHC.Types.GT } }
                   GHC.Types.True -> GHC.Types.LT } } }) -}
19c656da28fb17ed59ea30f45012b994
  $w$ccompare1 ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Ordering
  {- Arity: 4, HasNoCafRefs, Strictness: <S,U><L,1*U><S,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: Lib.UChr)
                   (ww3 :: GHC.Integer.Type.Integer) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.GT
                        GHC.Types.True -> GHC.Integer.Type.compareInteger ww1 ww3 }
                   GHC.Types.True -> GHC.Types.LT } } }) -}
3970ca388b10a5c92cc54ee2a1600001
  $w$ccompare2 ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Ordering
  {- Arity: 4, HasNoCafRefs, Strictness: <S,U><L,1*U><S,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: Lib.UChr)
                   (ww3 :: GHC.Integer.Type.Integer) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.GT
                        GHC.Types.True -> GHC.Integer.Type.compareInteger ww1 ww3 }
                   GHC.Types.True -> GHC.Types.LT } } }) -}
cbb21708963c23c28a86c28187f00b8a
  $w$ccompare3 ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Ordering
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S,U><L,1*U><L,1*U><S,U><L,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: GHC.Integer.Type.Integer)
                   (ww3 :: Lib.UChr)
                   (ww4 :: GHC.Integer.Type.Integer)
                   (ww5 :: GHC.Integer.Type.Integer) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww3 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.GT
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww1 ww4 of wild2 {
                             GHC.Types.LT -> GHC.Types.LT
                             GHC.Types.EQ -> GHC.Integer.Type.compareInteger ww2 ww5
                             GHC.Types.GT -> GHC.Types.GT } }
                   GHC.Types.True -> GHC.Types.LT } } }) -}
59c5da650f7a0bcb92ab46121270c394
  $w$ccompare4 ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Ordering
  {- Arity: 8, HasNoCafRefs,
     Strictness: <S,U><L,1*U><L,1*U><L,1*U><S,U><L,1*U><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: GHC.Integer.Type.Integer)
                   (ww3 :: GHC.Integer.Type.Integer)
                   (ww4 :: Lib.UChr)
                   (ww5 :: GHC.Integer.Type.Integer)
                   (ww6 :: GHC.Integer.Type.Integer)
                   (ww7 :: GHC.Integer.Type.Integer) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww4 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.GT
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww1 ww5 of wild2 {
                             GHC.Types.LT -> GHC.Types.LT
                             GHC.Types.EQ
                             -> case GHC.Integer.Type.compareInteger ww2 ww6 of wild3 {
                                  GHC.Types.LT -> GHC.Types.LT
                                  GHC.Types.EQ -> GHC.Integer.Type.compareInteger ww3 ww7
                                  GHC.Types.GT -> GHC.Types.GT }
                             GHC.Types.GT -> GHC.Types.GT } }
                   GHC.Types.True -> GHC.Types.LT } } }) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  $w$ccompare5 ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Lib.AlignedRead
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Lib.AlignedRead
    -> GHC.Types.Ordering
  {- Arity: 8, HasNoCafRefs,
     Strictness: <S,U><L,1*U><L,1*U><L,1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,U><L,1*U><L,1*U><L,1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: GHC.Integer.Type.Integer)
                   (ww3 :: Lib.AlignedRead)
                   (ww4 :: Lib.UChr)
                   (ww5 :: GHC.Integer.Type.Integer)
                   (ww6 :: GHC.Integer.Type.Integer)
                   (ww7 :: Lib.AlignedRead) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww4 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.GT
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww1 ww5 of wild2 {
                             GHC.Types.LT -> GHC.Types.LT
                             GHC.Types.EQ
                             -> case GHC.Integer.Type.compareInteger ww2 ww6 of wild3 {
                                  GHC.Types.LT -> GHC.Types.LT
                                  GHC.Types.EQ -> Lib.$fOrdAlignedRead_$ccompare ww3 ww7
                                  GHC.Types.GT -> GHC.Types.GT }
                             GHC.Types.GT -> GHC.Types.GT } }
                   GHC.Types.True -> GHC.Types.LT } } }) -}
ee93d4d492885470c77de705e87ad292
  $w$creadPrec ::
    GHC.Prim.Int#
    -> forall b.
       (Lib.RunStats -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S,U><L,C(U)>, Inline: [0] -}
08d805e9356d3094d85d1502d0a472be
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> GHC.Show.ShowS
  {- Arity: 8,
     Strictness: <S,U><L,1*U><L,U><L,U><L,1*U><L,U><L,U><L,1*U(U,U,U,U)>,
     Inline: [0] -}
47b6f59dfa71a76a63ea930c035e84a6
  $w$cshowsPrec1 ::
    GHC.Prim.Int#
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> GHC.Show.ShowS
  {- Arity: 5, Strictness: <S,U><L,1*U><L,U><L,U><L,1*U(U,U,U,U)>,
     Inline: [0] -}
2949abd400ba3618fe9681bb7e8e1901
  $w$cshowsPrec2 ::
    GHC.Prim.Int#
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> GHC.Types.Bool
    -> GHC.Show.ShowS
  {- Arity: 6,
     Strictness: <S,U><L,U><L,U><L,1*U(U,U,U,U)><L,1*U(U,U,U,U)><L,U>,
     Inline: [0] -}
78f15f25ac7f5d16662f46c708d82a2d
  $w$cshowsPrec3 ::
    GHC.Prim.Int#
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 7,
     Strictness: <S,U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,U>,
     Inline: [0] -}
c13536c0ddcfc999f8a708d0f6fd76f1
  $w$cshowsPrec4 ::
    GHC.Prim.Int#
    -> Lib.AlignedRead
    -> Lib.AlignedRead
    -> [Lib.AlignedRead]
    -> [Lib.AlignedRead]
    -> GHC.Show.ShowS
  {- Arity: 5,
     Strictness: <S,U><L,1*U(1*U(U,U,U,U),U(U),1*U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),U,U,1*U(U,U,U,U),U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(1*U,U,U,1*U(U,U,U,U)),U)><L,1*U(1*U(U,U,U,U),U(U),1*U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),U,U,1*U(U,U,U,U),U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(1*U,U,U,1*U(U,U,U,U)),U)><L,U><L,U>,
     Inline: [0] -}
cdbad1089cdc5d0a5c8fdd5a12ba256d
  $w$cshowsPrec5 ::
    GHC.Prim.Int#
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Show.ShowS
  {- Arity: 7,
     Strictness: <S,U><L,U><L,U><L,U><L,U><L,1*U(U)><L,1*U(U)>,
     Inline: [0] -}
e1e6de4207e3ff4889dbcac2af544cf2
  $w$ctoEnum :: GHC.Prim.Int# -> Lib.ChromNameFormat
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 0#) of wild {
                   GHC.Types.False -> Lib.$wlvl ww
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# ww 1#) of wild1 {
                        GHC.Types.False -> Lib.$wlvl ww
                        GHC.Types.True
                        -> GHC.Prim.tagToEnum# @ Lib.ChromNameFormat ww } }) -}
8c7f5d294706d5be2e2968524bb42a6a
  $w$ctoEnum1 :: GHC.Prim.Int# -> Lib.UChr
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 0#) of wild {
                   GHC.Types.False -> Lib.$wlvl1 ww
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# ww 110#) of wild1 {
                        GHC.Types.False -> Lib.$wlvl1 ww
                        GHC.Types.True -> GHC.Prim.tagToEnum# @ Lib.UChr ww } }) -}
43a448acad203c035b2e35446c800bc6
  $w$sgo8 ::
    GHC.Prim.Int#
    -> a1
    -> Data.Map.Internal.Map GHC.Types.Int a1
    -> Data.Map.Internal.Map GHC.Types.Int a1
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
02e25504e997ddc83a3347b14d93813a
  $walignmentsetparser ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [Lib.AlignedRead]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
204f0360f9cd9e42a50e16a3f5fb2d36
  $walnparser ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.AlignedRead
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
07429d6580126363ebc47c01c5a1ca90
  $walnparserEOL ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.AlignedRead
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
c8e2a81c9c5cf8071a9bad130b0d3ca5
  $walnsToPairedAln ::
    [Lib.AlignedRead]
    -> (# Lib.AlignedRead, Lib.AlignedRead, [Lib.AlignedRead],
          [Lib.AlignedRead] #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ (w :: [Lib.AlignedRead]) ->
                 case w of wild {
                   []
                   -> (# Lib.defaultAlignment, Lib.defaultAlignment,
                         GHC.Types.[] @ Lib.AlignedRead, GHC.Types.[] @ Lib.AlignedRead #)
                   : ipv ipv1
                   -> let {
                        ds6 :: ([Lib.AlignedRead], [Lib.AlignedRead])
                        = case Lib.$wgo2 wild of ww { (#,#) ww1 ww2 -> (ww1, ww2) }
                      } in
                      let {
                        ds7 :: ([Lib.AlignedRead], [Lib.AlignedRead])
                        = case ds6 of wild1 { (,) r1s r2s ->
                          case Lib.$wgo1 r1s of ww { (#,#) ww1 ww2 -> (ww1, ww2) } }
                      } in
                      let {
                        ds8 :: ([Lib.AlignedRead], [Lib.AlignedRead])
                        = case ds6 of wild1 { (,) r1s r2s ->
                          case Lib.$wgo r2s of ww { (#,#) ww1 ww2 -> (ww1, ww2) } }
                      } in
                      (# case ds7 of wild1 { (,) r1pl r1secs1 ->
                         case r1pl of wild2 {
                           [] -> Lib.alnsToPairedAln1 : ds9 ds10 -> ds9 } },
                         case ds8 of wild1 { (,) r2pl r2secs1 ->
                         case r2pl of wild2 {
                           [] -> Lib.alnsToPairedAln1 : ds9 ds10 -> ds9 } },
                         case ds7 of wild1 { (,) r1pl r1secs1 -> r1secs1 },
                         case ds8 of wild1 { (,) r2pl r2secs1 -> r2secs1 } #) }) -}
70eef2675b2de1a4a6ff2019926b1e87
  $wanyPrimerIntAln ::
    GHC.Types.Bool
    -> Lib.AlignedRead
    -> [Lib.AlignedRead]
    -> [Lib.AlignedRead]
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A)><L,1*U><L,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Types.Bool)
                   (ww1 :: Lib.AlignedRead)
                   (ww2 :: [Lib.AlignedRead])
                   (ww3 :: [Lib.AlignedRead]) ->
                 case ww of wild {
                   GHC.Types.False
                   -> case ww1 of wild1 { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                      case ds27 of wild2 {
                        GHC.Types.False
                        -> let {
                             $j :: GHC.Types.Bool <join 0> = Lib.anyPrimerIntAln_go ww3
                           } in
                           letrec {
                             go16 :: [Lib.AlignedRead] -> GHC.Types.Bool
                               <join 1> {- Arity: 1, Strictness: <S,1*U> -}
                             = \ (ds37 :: [Lib.AlignedRead]) ->
                               case ds37 of wild3 {
                                 [] -> $j
                                 : y ys
                                 -> case y of wild4 { Lib.AlignedRead ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ->
                                    case ds59 of wild5 {
                                      GHC.Types.False -> go16 ys
                                      GHC.Types.True -> GHC.Types.True } } }
                           } in
                           go16 ww2
                        GHC.Types.True -> GHC.Types.True } }
                   GHC.Types.True -> GHC.Types.True }) -}
7ca75b49e099883b9b02db7494688dde
  $wbedPEparser ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.BEDPE
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
a3a4a659f90705fabc4c47c24a19a6bc
  $wbedrecparser ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.BedRecord
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
4bab316a7c5ee443c12d9d57151da3dd
  $wboolZeroLengthCigar ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Types.Bool
  {- Arity: 4, Strictness: <S,U><L,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 Lib.boolZeroLengthCigar_go
                   (Data.ByteString.Internal.$wunpackAppendCharsLazy
                      ww
                      ww1
                      ww2
                      ww3
                      (GHC.Types.[] @ GHC.Types.Char))) -}
68ef522341ad036148288f3a6239e260
  $wcheckChromNameMatchStatus ::
    Lib.Header
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Array# Lib.BedRecord
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 5, Strictness: <L,U><L,U><S,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (w :: Lib.Header)
                   (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Array# Lib.BedRecord)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 letrec {
                   $wgo40 :: GHC.Prim.Int# -> [Lib.UChr]
                     {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                   = \ (ww3 :: GHC.Prim.Int#) ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.>=# ww3 ww1) of wild {
                       GHC.Types.False
                       -> case GHC.Prim.indexArray#
                                 @ Lib.BedRecord
                                 ww2
                                 (GHC.Prim.+# ww ww3) of ds6 { Unit# ipv ->
                          GHC.Types.:
                            @ Lib.UChr
                            (case ipv of wild1 { Lib.BedRecord ds7 ds8 ds9 ds10 -> ds7 })
                            ($wgo40 (GHC.Prim.+# ww3 1#)) }
                       GHC.Types.True -> GHC.Types.[] @ Lib.UChr }
                 } in
                 case Lib.$wgo4
                        (Data.OldList.intersectBy
                           @ Lib.UChr
                           Lib.$fEqUChr_$c==
                           (Data.Set.Internal.$fDataSet_go
                              @ Lib.UChr
                              (GHC.Types.[] @ Lib.UChr)
                              (Lib.$sfromList4 ($wgo40 0#)))
                           (letrec {
                              go16 :: GHC.Prim.Int# -> [Lib.UChr]
                                {- Arity: 1, Strictness: <S,U> -}
                              = \ (x :: GHC.Prim.Int#) ->
                                case GHC.List.$w!!
                                       @ Data.ByteString.Internal.ByteString
                                       w
                                       x of wild { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                                case Lib.$whdrchromp
                                       @ Lib.UChr
                                       dt
                                       dt1
                                       dt2
                                       dt3
                                       dt3
                                       0#
                                       0#
                                       Data.Attoparsec.Internal.Types.Complete
                                       (Data.Attoparsec.ByteString.Internal.failK @ Lib.UChr)
                                         `cast`
                                       (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                                        ->_R <Data.Attoparsec.Internal.Types.Pos
                                              -> Data.Attoparsec.Internal.Types.More
                                              -> [GHC.Base.String]
                                              -> GHC.Base.String
                                              -> Data.Attoparsec.Internal.Types.IResult
                                                   Data.ByteString.Internal.ByteString Lib.UChr>_R)
                                       (Data.Attoparsec.ByteString.Internal.successK @ Lib.UChr)
                                         `cast`
                                       (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                                        ->_R <Data.Attoparsec.Internal.Types.Pos
                                              -> Data.Attoparsec.Internal.Types.More
                                              -> Lib.UChr
                                              -> Data.Attoparsec.Internal.Types.IResult
                                                   Data.ByteString.Internal.ByteString
                                                   Lib.UChr>_R) of wild1 {
                                  Data.Attoparsec.Internal.Types.Fail ds6 ds7 err
                                  -> case ds7 of wild2 { DEFAULT ->
                                     case x of wild3 {
                                       DEFAULT -> go16 (GHC.Prim.+# wild3 1#)
                                       25# -> GHC.Types.[] @ Lib.UChr } }
                                  Data.Attoparsec.Internal.Types.Partial ipv
                                  -> case Lib.checkChromNameMatchStatus5 ret_ty [Lib.UChr] of {}
                                  Data.Attoparsec.Internal.Types.Done ds6 a1
                                  -> GHC.Types.:
                                       @ Lib.UChr
                                       a1
                                       (case x of wild2 {
                                          DEFAULT -> go16 (GHC.Prim.+# wild2 1#)
                                          25# -> GHC.Types.[] @ Lib.UChr }) } }
                            } in
                            Data.Set.Internal.$fDataSet_go
                              @ Lib.UChr
                              (GHC.Types.[] @ Lib.UChr)
                              (Lib.$sfromList4 (go16 1#))))
                        0# of ww3 { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww3 1#) of wild {
                   GHC.Types.False
                   -> case Lib.checkChromNameMatchStatus4
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                      of {}
                   GHC.Types.True
                   -> GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Lib.checkChromNameMatchStatus2
                        GHC.Types.True
                        w1 } }) -}
3753c04600b08c8687ce4aa2a4a2ed72
  $wcheckcigseqlen ::
    Data.ByteString.Internal.ByteString
    -> GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.ByteString.Internal.ByteString
    -> GHC.Types.Bool
  {- Arity: 6,
     Strictness: <L,1*U(U,U,U,U)><L,U><L,U><L,U><S,U><L,1*U(U,U,U,U)>,
     Inline: [0] -}
2252046fdd3304e96f42b00da892f401
  $wcheckcigseqlen2 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> GHC.Types.Bool
  {- Arity: 6,
     Strictness: <L,U><L,U><L,U><S,U><L,1*U(U,U,U,U)><L,1*U(U,U,U,U)>,
     Inline: [0] -}
4c3043a071c767780b15404d30e4afdb
  $wchecknonzeroCigMatch ::
    Data.ByteString.Internal.ByteString
    -> GHC.Types.Bool -> GHC.Types.Bool -> GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,1*U(U,U,U,1*U)><L,1*U><S,1*U>, Inline: [0],
     Unfolding: (\ (ww :: Data.ByteString.Internal.ByteString)
                   (ww1 :: GHC.Types.Bool)
                   (ww2 :: GHC.Types.Bool) ->
                 case ww2 of wild {
                   GHC.Types.False
                   -> case ww1 of wild1 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True
                        -> case ww of wild2 { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                           case dt3 of ds6 {
                             DEFAULT
                             -> case Lib.$wgo5
                                       (GHC.Prim.plusAddr# dt dt2)
                                       (GHC.Prim.plusAddr# dt (GHC.Prim.+# dt2 ds6))
                                       GHC.Prim.realWorld# of ds7 { (#,#) ipv ipv1 ->
                                case GHC.Prim.touch#
                                       @ 'GHC.Types.LiftedRep
                                       @ GHC.ForeignPtr.ForeignPtrContents
                                       dt1
                                       ipv of s' { DEFAULT ->
                                ipv1 } }
                             0# -> GHC.Types.False } } }
                   GHC.Types.True -> GHC.Types.True }) -}
4b5d96f0e2289961bcec768305e4e63e
  $wcigarP ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                            r) ->
                 Lib.$wp
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w
                   w1
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (a1 :: (GHC.Integer.Type.Integer,
                              Data.ByteString.Internal.ByteString))[OneShot] ->
                    case t'
                           `cast`
                         (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww7 { Data.Attoparsec.ByteString.Buffer.Buf ww8 ww9 ww10 ww11 ww12 ww13 ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww14 { GHC.Types.I# ww15 ->
                    Lib.$wmany_v
                      @ r
                      ww8
                      ww9
                      ww10
                      ww11
                      ww12
                      ww13
                      ww15
                      more'
                      (\ (t'1 :: Data.Attoparsec.Internal.Types.State
                                   Data.ByteString.Internal.ByteString)
                         (pos'1 :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                         (more'1 :: Data.Attoparsec.Internal.Types.More)[OneShot]
                         (a3 :: [(GHC.Integer.Type.Integer,
                                  Data.ByteString.Internal.ByteString)])[OneShot] ->
                       case pos'1
                              `cast`
                            (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                       w2
                         t'1
                         nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                         more'1
                         (GHC.Types.:
                            @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                            a1
                            a3) }) } })) -}
8f0463b08742bd77a163e064b222ce90
  $wcigseqlenHdrPassTest ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> GHC.Types.Bool
  {- Arity: 6,
     Strictness: <L,U><L,U><L,U><S,U><L,1*U(U,U,U,U)><L,1*U(U,U,U,U)>,
     Inline: [0] -}
f377a58f687a322aef505fd0e6113e5d
  $wclip ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Types.Bool
    -> (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer,
          Data.ByteString.Internal.ByteString,
          Data.ByteString.Internal.ByteString, GHC.Types.Bool #)
  {- Arity: 8, Strictness: <L,U><L,U><L,U><S,U><L,U><S,U><S,U><L,U>,
     Inline: [0] -}
ecb5f1b319f7d7b07c0b271e3e62d33e
  $wcontractcigar ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.ByteString.Internal.ByteString
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.addtrimtag5 of wild1 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                 let {
                   $j :: Data.ByteString.Internal.ByteString <join 0>
                   = Data.ByteString.concat
                       (GHC.Base.map
                          @ Data.ByteString.Internal.ByteString
                          @ Data.ByteString.Internal.ByteString
                          Lib.contractcigar1
                          (Data.ByteString.$wgroup ww ww1 ww2 ww3))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim./=# ww3 dt7) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqAddr# ww dt4) of wild3 {
                        GHC.Types.False
                        -> case Data.ByteString.Internal.$wcompareBytes
                                  ww
                                  ww1
                                  ww2
                                  ww3
                                  dt4
                                  dt5
                                  dt6
                                  dt7 of wild4 {
                             DEFAULT -> $j GHC.Types.EQ -> wild1 }
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# ww2 dt6) of wild4 {
                             GHC.Types.False
                             -> case Data.ByteString.Internal.$wcompareBytes
                                       ww
                                       ww1
                                       ww2
                                       ww3
                                       dt4
                                       dt5
                                       dt6
                                       dt7 of wild5 {
                                  DEFAULT -> $j GHC.Types.EQ -> wild1 }
                             GHC.Types.True -> wild1 } }
                   GHC.Types.True -> $j } }) -}
9bac844f59bc7dbd1074c3c7015d0455
  $wcreateprimerbedmaps ::
    GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Data.Map.Internal.Map
             Lib.UChr (Data.IntMap.Internal.IntMap Lib.BedRecord),
           Data.Map.Internal.Map
             Lib.UChr (Data.IntMap.Internal.IntMap Lib.BedRecord)) #)
  {- Arity: 3, Strictness: <S,1*U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Types.Bool)
                   (ww1 :: GHC.Base.String)
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case ww of wild {
                   GHC.Types.False
                   -> case Lib.createprimerbedmaps4 ww1 w of ds6 { (#,#) ipv ipv1 ->
                      (# ipv,
                         (case Lib.masterToFPrimerBED
                                 ipv1 of ww2 { Data.Vector.Vector ww3 ww4 ww5 ->
                          Lib.$wmakechrbedmap ww3 ww4 ww5 },
                          case Lib.masterToRPrimerBED
                                 ipv1 of ww2 { Data.Vector.Vector ww3 ww4 ww5 ->
                          Lib.$wmakechrbedmap ww3 ww4 ww5 }) #) }
                   GHC.Types.True
                   -> case Lib.createprimerbedmaps2 ww1 w of ds6 { (#,#) ipv ipv1 ->
                      (# ipv,
                         (case GHC.Magic.runRW#
                                 @ ('GHC.Types.TupleRep
                                      '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                                 @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                                      Data.Vector.Vector Lib.BedRecord #)
                                 (\ (s114 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                  case GHC.Prim.newArray#
                                         @ Lib.BedRecord
                                         @ (Control.Monad.Primitive.PrimState
                                              (GHC.ST.ST GHC.Prim.RealWorld))
                                         0#
                                         (Data.Vector.Mutable.uninitialised @ Lib.BedRecord)
                                         s114
                                           `cast`
                                         (Nth:2
                                              (Nth:2
                                                   (Trans
                                                        (<GHC.ST.STRep
                                                            GHC.Prim.RealWorld
                                                            (Data.Primitive.Array.MutableArray
                                                               (Control.Monad.Primitive.PrimState
                                                                  (GHC.ST.ST GHC.Prim.RealWorld))
                                                               Lib.BedRecord)>_R
                                                         ->_R Sym (GHC.ST.N:ST[0]
                                                                       <GHC.Prim.RealWorld>_N
                                                                       <Data.Primitive.Array.MutableArray
                                                                          (Control.Monad.Primitive.PrimState
                                                                             (GHC.ST.ST
                                                                                GHC.Prim.RealWorld))
                                                                          Lib.BedRecord>_R))
                                                        (((GHC.Prim.State#
                                                             (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                       <GHC.Prim.RealWorld>_N)))_R
                                                          ->_R ((#,#)
                                                                  <'GHC.Types.TupleRep '[]>_R
                                                                  <'GHC.Types.LiftedRep>_R
                                                                  (GHC.Prim.State#
                                                                     (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                               <GHC.Prim.RealWorld>_N)))_R
                                                                  <Data.Primitive.Array.MutableArray
                                                                     (Control.Monad.Primitive.PrimState
                                                                        (GHC.ST.ST
                                                                           GHC.Prim.RealWorld))
                                                                     Lib.BedRecord>_R)_R)
                                                         ->_R <GHC.ST.ST
                                                                 GHC.Prim.RealWorld
                                                                 (Data.Primitive.Array.MutableArray
                                                                    (Control.Monad.Primitive.PrimState
                                                                       (GHC.ST.ST
                                                                          GHC.Prim.RealWorld))
                                                                    Lib.BedRecord)>_R)))) of ds7 { (#,#) ipv2 ipv3 ->
                                  Lib.$wfoldlM_loop1
                                    GHC.Types.SPEC
                                    0#
                                    0#
                                    ipv3
                                      `cast`
                                    (GHC.Prim.MutableArray#
                                       (Control.Monad.Primitive.D:R:PrimStateST[0]
                                            <GHC.Prim.RealWorld>_N)
                                       <Lib.BedRecord>_R)_R
                                    0#
                                    (GHC.Base.map @ Lib.BEDPE @ Lib.BedRecord Lib.bedpeToFbed ipv1)
                                    ipv2
                                      `cast`
                                    (Nth:2
                                         (Nth:3
                                              (Nth:2
                                                   (Trans
                                                        (((GHC.Prim.State#
                                                             (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                  <GHC.Prim.RealWorld>_N))_R
                                                          ->_R ((#,#)
                                                                  <'GHC.Types.TupleRep '[]>_R
                                                                  <'GHC.Types.LiftedRep>_R
                                                                  (GHC.Prim.State#
                                                                     (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                          <GHC.Prim.RealWorld>_N))_R
                                                                  <Data.Primitive.Array.MutableArray
                                                                     (Control.Monad.Primitive.PrimState
                                                                        (GHC.ST.ST
                                                                           GHC.Prim.RealWorld))
                                                                     Lib.BedRecord>_R)_R)
                                                         ->_R <GHC.ST.ST
                                                                 GHC.Prim.RealWorld
                                                                 (Data.Primitive.Array.MutableArray
                                                                    (Control.Monad.Primitive.PrimState
                                                                       (GHC.ST.ST
                                                                          GHC.Prim.RealWorld))
                                                                    Lib.BedRecord)>_R)
                                                        (<GHC.ST.STRep
                                                            GHC.Prim.RealWorld
                                                            (Data.Primitive.Array.MutableArray
                                                               (Control.Monad.Primitive.PrimState
                                                                  (GHC.ST.ST GHC.Prim.RealWorld))
                                                               Lib.BedRecord)>_R
                                                         ->_R GHC.ST.N:ST[0]
                                                                  <GHC.Prim.RealWorld>_N
                                                                  <Data.Primitive.Array.MutableArray
                                                                     (Control.Monad.Primitive.PrimState
                                                                        (GHC.ST.ST
                                                                           GHC.Prim.RealWorld))
                                                                     Lib.BedRecord>_R))))) }) of ds7 { (#,#) ipv2 ipv3 ->
                          case ipv3 of ww2 { Data.Vector.Vector ww3 ww4 ww5 ->
                          Lib.$wmakechrbedmap ww3 ww4 ww5 } },
                          case GHC.Magic.runRW#
                                 @ ('GHC.Types.TupleRep
                                      '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                                 @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                                      Data.Vector.Vector Lib.BedRecord #)
                                 (\ (s114 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                  case GHC.Prim.newArray#
                                         @ Lib.BedRecord
                                         @ (Control.Monad.Primitive.PrimState
                                              (GHC.ST.ST GHC.Prim.RealWorld))
                                         0#
                                         (Data.Vector.Mutable.uninitialised @ Lib.BedRecord)
                                         s114
                                           `cast`
                                         (Nth:2
                                              (Nth:2
                                                   (Trans
                                                        (<GHC.ST.STRep
                                                            GHC.Prim.RealWorld
                                                            (Data.Primitive.Array.MutableArray
                                                               (Control.Monad.Primitive.PrimState
                                                                  (GHC.ST.ST GHC.Prim.RealWorld))
                                                               Lib.BedRecord)>_R
                                                         ->_R Sym (GHC.ST.N:ST[0]
                                                                       <GHC.Prim.RealWorld>_N
                                                                       <Data.Primitive.Array.MutableArray
                                                                          (Control.Monad.Primitive.PrimState
                                                                             (GHC.ST.ST
                                                                                GHC.Prim.RealWorld))
                                                                          Lib.BedRecord>_R))
                                                        (((GHC.Prim.State#
                                                             (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                       <GHC.Prim.RealWorld>_N)))_R
                                                          ->_R ((#,#)
                                                                  <'GHC.Types.TupleRep '[]>_R
                                                                  <'GHC.Types.LiftedRep>_R
                                                                  (GHC.Prim.State#
                                                                     (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                               <GHC.Prim.RealWorld>_N)))_R
                                                                  <Data.Primitive.Array.MutableArray
                                                                     (Control.Monad.Primitive.PrimState
                                                                        (GHC.ST.ST
                                                                           GHC.Prim.RealWorld))
                                                                     Lib.BedRecord>_R)_R)
                                                         ->_R <GHC.ST.ST
                                                                 GHC.Prim.RealWorld
                                                                 (Data.Primitive.Array.MutableArray
                                                                    (Control.Monad.Primitive.PrimState
                                                                       (GHC.ST.ST
                                                                          GHC.Prim.RealWorld))
                                                                    Lib.BedRecord)>_R)))) of ds7 { (#,#) ipv2 ipv3 ->
                                  Lib.$wfoldlM_loop
                                    GHC.Types.SPEC
                                    0#
                                    0#
                                    ipv3
                                      `cast`
                                    (GHC.Prim.MutableArray#
                                       (Control.Monad.Primitive.D:R:PrimStateST[0]
                                            <GHC.Prim.RealWorld>_N)
                                       <Lib.BedRecord>_R)_R
                                    0#
                                    (GHC.Base.map @ Lib.BEDPE @ Lib.BedRecord Lib.bedpeToRbed ipv1)
                                    ipv2
                                      `cast`
                                    (Nth:2
                                         (Nth:3
                                              (Nth:2
                                                   (Trans
                                                        (((GHC.Prim.State#
                                                             (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                  <GHC.Prim.RealWorld>_N))_R
                                                          ->_R ((#,#)
                                                                  <'GHC.Types.TupleRep '[]>_R
                                                                  <'GHC.Types.LiftedRep>_R
                                                                  (GHC.Prim.State#
                                                                     (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                          <GHC.Prim.RealWorld>_N))_R
                                                                  <Data.Primitive.Array.MutableArray
                                                                     (Control.Monad.Primitive.PrimState
                                                                        (GHC.ST.ST
                                                                           GHC.Prim.RealWorld))
                                                                     Lib.BedRecord>_R)_R)
                                                         ->_R <GHC.ST.ST
                                                                 GHC.Prim.RealWorld
                                                                 (Data.Primitive.Array.MutableArray
                                                                    (Control.Monad.Primitive.PrimState
                                                                       (GHC.ST.ST
                                                                          GHC.Prim.RealWorld))
                                                                    Lib.BedRecord)>_R)
                                                        (<GHC.ST.STRep
                                                            GHC.Prim.RealWorld
                                                            (Data.Primitive.Array.MutableArray
                                                               (Control.Monad.Primitive.PrimState
                                                                  (GHC.ST.ST GHC.Prim.RealWorld))
                                                               Lib.BedRecord)>_R
                                                         ->_R GHC.ST.N:ST[0]
                                                                  <GHC.Prim.RealWorld>_N
                                                                  <Data.Primitive.Array.MutableArray
                                                                     (Control.Monad.Primitive.PrimState
                                                                        (GHC.ST.ST
                                                                           GHC.Prim.RealWorld))
                                                                     Lib.BedRecord>_R))))) }) of ds7 { (#,#) ipv2 ipv3 ->
                          case ipv3 of ww2 { Data.Vector.Vector ww3 ww4 ww5 ->
                          Lib.$wmakechrbedmap ww3 ww4 ww5 } }) #) } }) -}
e88d9015bda7e897b605ae01becf0ccd
  $wds ::
    ((GHC.Integer.Type.Integer
      -> GHC.Integer.Type.Integer
      -> GHC.Integer.Type.Integer
      -> Lib.RunStats)
     -> Data.Conduit.Internal.Pipe.Pipe
          Lib.AlignedRead
          Lib.AlignedRead
          Data.Void.Void
          ()
          (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
          b1)
    -> (# Lib.AlignedRead
          -> Data.Conduit.Internal.Pipe.Pipe
               Lib.AlignedRead
               Lib.AlignedRead
               Data.Void.Void
               ()
               (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
               b1,
          ()
          -> Data.Conduit.Internal.Pipe.Pipe
               Lib.AlignedRead
               Lib.AlignedRead
               Data.Void.Void
               ()
               (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
               b1 #)
  {- Arity: 1, Strictness: <L,C(U)>, Inline: [0],
     Unfolding: (\ @ b1
                   (w :: (GHC.Integer.Type.Integer
                          -> GHC.Integer.Type.Integer
                          -> GHC.Integer.Type.Integer
                          -> Lib.RunStats)
                         -> Data.Conduit.Internal.Pipe.Pipe
                              Lib.AlignedRead
                              Lib.AlignedRead
                              Data.Void.Void
                              ()
                              (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                              b1) ->
                 Lib.$wloop1
                   Lib.defaultBed2
                   @ b1
                   (\ (a1 :: GHC.Integer.Type.Integer) ->
                    let {
                      lvl1019 :: GHC.Types.Double
                      = case GHC.Integer.Type.doubleFromInteger a1 of wild2 { DEFAULT ->
                        GHC.Types.D# wild2 }
                    } in
                    w (\ (mapd :: GHC.Integer.Type.Integer)
                         (trimd :: GHC.Integer.Type.Integer)
                         (trimd2z :: GHC.Integer.Type.Integer) ->
                       Lib.RunStats
                         a1
                         mapd
                         trimd
                         trimd2z
                         (case GHC.Integer.Type.doubleFromInteger
                                 trimd of wild2 { DEFAULT ->
                          case lvl1019 of wild3 { GHC.Types.D# y ->
                          case GHC.Prim./## wild2 y of wild4 { DEFAULT ->
                          GHC.Types.D# (GHC.Prim.*## wild4 100.0##) } } })
                         (case GHC.Integer.Type.doubleFromInteger mapd of wild2 { DEFAULT ->
                          case lvl1019 of wild3 { GHC.Types.D# y ->
                          case GHC.Prim./## wild2 y of wild4 { DEFAULT ->
                          GHC.Types.D# (GHC.Prim.*## wild4 100.0##) } } })))) -}
45e598105af4eff9461442179f251d7f
  $wfoldlM_loop ::
    GHC.Types.SPEC
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.MutableArray# GHC.Prim.RealWorld Lib.BedRecord
    -> GHC.Prim.Int#
    -> [Lib.BedRecord]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Vector.Vector Lib.BedRecord #)
  {- Arity: 7, Strictness: <S,1*U><L,U><L,U><S,U><L,U><S,1*U><S,U>,
     Inline: [0] -}
1b147fe401b8bddf92df8e06fac816b0
  $wfoldlM_loop1 ::
    GHC.Types.SPEC
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.MutableArray# GHC.Prim.RealWorld Lib.BedRecord
    -> GHC.Prim.Int#
    -> [Lib.BedRecord]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Vector.Vector Lib.BedRecord #)
  {- Arity: 7, Strictness: <S,1*U><L,U><L,U><S,U><L,U><S,1*U><S,U>,
     Inline: [0] -}
ac6949a63de84853ae67301e3fbd2792
  $wfoldlM_loop2 ::
    GHC.Types.SPEC
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.MutableArray# GHC.Prim.RealWorld Lib.BedRecord
    -> GHC.Prim.Int#
    -> [Lib.BedRecord]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Vector.Vector Lib.BedRecord #)
  {- Arity: 7, Strictness: <S,1*U><L,U><L,U><S,U><L,U><S,1*U><S,U>,
     Inline: [0] -}
8c6556abdf231f42a0272327cdf94402
  $wfoldlM_loop3 ::
    GHC.Types.SPEC
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.MutableArray# GHC.Prim.RealWorld Lib.BedRecord
    -> GHC.Prim.Int#
    -> [Lib.BedRecord]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Vector.Vector Lib.BedRecord #)
  {- Arity: 7, Strictness: <S,1*U><L,U><L,U><S,U><L,U><S,1*U><S,U>,
     Inline: [0] -}
cb6b9802517db65b57897cf2923722b9
  $wfoldlM_loop4 ::
    GHC.Types.SPEC
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.MutableArray# GHC.Prim.RealWorld Lib.BedRecord
    -> GHC.Prim.Int#
    -> [Lib.BedRecord]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Vector.Vector Lib.BedRecord #)
  {- Arity: 7, Strictness: <S,1*U><L,U><L,U><S,U><L,U><S,1*U><S,U>,
     Inline: [0] -}
0971bb44037910a0404e1d87268d3b34
  $wgetAlignedLength ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Integer.Type.Integer
  {- Arity: 4, Strictness: <S,U><L,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.$wparseCigar
                        @ [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                        ww
                        ww1
                        ww2
                        ww3
                        ww3
                        0#
                        0#
                        Data.Attoparsec.Internal.Types.Complete
                        (Data.Attoparsec.ByteString.Internal.failK
                           @ [(GHC.Integer.Type.Integer,
                               Data.ByteString.Internal.ByteString)])
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [GHC.Base.String]
                               -> GHC.Base.String
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString
                                    [(GHC.Integer.Type.Integer,
                                      Data.ByteString.Internal.ByteString)]>_R)
                        (Data.Attoparsec.ByteString.Internal.successK
                           @ [(GHC.Integer.Type.Integer,
                               Data.ByteString.Internal.ByteString)])
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [(GHC.Integer.Type.Integer,
                                    Data.ByteString.Internal.ByteString)]
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString
                                    [(GHC.Integer.Type.Integer,
                                      Data.ByteString.Internal.ByteString)]>_R) of wild {
                   Data.Attoparsec.Internal.Types.Fail ds6 ds7 err
                   -> case ds7 of wild1 { DEFAULT ->
                      case GHC.List.badHead ret_ty GHC.Integer.Type.Integer of {} }
                   Data.Attoparsec.Internal.Types.Partial ipv
                   -> case Lib.checkCigarSeqlen1 ret_ty GHC.Integer.Type.Integer of {}
                   Data.Attoparsec.Internal.Types.Done ds6 a1
                   -> Lib.getAlignedLength_go a1 Lib.defaultBed2 }) -}
1014b4cba3f92598bb96cba80709cecc
  $wgetTrimdcigCoordDiff ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
  {- Arity: 6, Strictness: <S,U><L,U><S,U><S,U><L,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Integer.Type.Integer)
                   (ww5 :: GHC.Integer.Type.Integer) ->
                 case Lib.addtrimtag5 of wild1 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                 let {
                   $j :: GHC.Integer.Type.Integer <join 0>
                   = GHC.Integer.Type.minusInteger
                       (GHC.Integer.Type.minusInteger ww5 ww4)
                       (Lib.getTrimdcigCoordDiff_go
                          (Lib.$wmapcig ww ww1 ww2 ww3)
                          Lib.defaultBed2)
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim./=# ww3 dt7) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqAddr# ww dt4) of wild3 {
                        GHC.Types.False
                        -> case Data.ByteString.Internal.$wcompareBytes
                                  ww
                                  ww1
                                  ww2
                                  ww3
                                  dt4
                                  dt5
                                  dt6
                                  dt7 of wild4 {
                             DEFAULT -> $j GHC.Types.EQ -> Lib.defaultBed2 }
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# ww2 dt6) of wild4 {
                             GHC.Types.False
                             -> case Data.ByteString.Internal.$wcompareBytes
                                       ww
                                       ww1
                                       ww2
                                       ww3
                                       dt4
                                       dt5
                                       dt6
                                       dt7 of wild5 {
                                  DEFAULT -> $j GHC.Types.EQ -> Lib.defaultBed2 }
                             GHC.Types.True -> Lib.defaultBed2 } }
                   GHC.Types.True -> $j } }) -}
530edddf50eb317d84891cb10a8c65db
  $wgetcigseqdiff ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Integer.Type.Integer
  {- Arity: 5, Strictness: <S,U><L,U><S,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#) ->
                 GHC.Integer.Type.minusInteger
                   (GHC.Integer.Type.smallInteger ww4)
                   (Lib.getcigseqdiff_go
                      (Lib.$wmapcig ww ww1 ww2 ww3)
                      Lib.defaultBed2)) -}
a22f7e37668117678ce53f864f79ee2e
  $wgetcol ::
    GHC.Types.Int
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Array# (Data.Vector.Vector a)
    -> Data.Vector.Vector a
  {- Arity: 4, Strictness: <L,U(U)><L,U><S,U><L,U>, Inline: [0],
     Unfolding: (\ @ a
                   (w :: GHC.Types.Int)
                   (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Array# (Data.Vector.Vector a)) ->
                 case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Vector.Vector a #)
                        (\ (s114 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newArray#
                                @ a
                                @ (Control.Monad.Primitive.PrimState
                                     (GHC.ST.ST GHC.Prim.RealWorld))
                                ww1
                                (Data.Vector.Mutable.uninitialised @ a)
                                s114
                                  `cast`
                                (Nth:2
                                     (Nth:2
                                          (Trans
                                               (<GHC.ST.STRep
                                                   GHC.Prim.RealWorld
                                                   (Data.Primitive.Array.MutableArray
                                                      (Control.Monad.Primitive.PrimState
                                                         (GHC.ST.ST GHC.Prim.RealWorld))
                                                      a)>_R
                                                ->_R Sym (GHC.ST.N:ST[0]
                                                              <GHC.Prim.RealWorld>_N
                                                              <Data.Primitive.Array.MutableArray
                                                                 (Control.Monad.Primitive.PrimState
                                                                    (GHC.ST.ST GHC.Prim.RealWorld))
                                                                 a>_R))
                                               (((GHC.Prim.State#
                                                    (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                              <GHC.Prim.RealWorld>_N)))_R
                                                 ->_R ((#,#)
                                                         <'GHC.Types.TupleRep '[]>_R
                                                         <'GHC.Types.LiftedRep>_R
                                                         (GHC.Prim.State#
                                                            (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                      <GHC.Prim.RealWorld>_N)))_R
                                                         <Data.Primitive.Array.MutableArray
                                                            (Control.Monad.Primitive.PrimState
                                                               (GHC.ST.ST GHC.Prim.RealWorld))
                                                            a>_R)_R)
                                                ->_R <GHC.ST.ST
                                                        GHC.Prim.RealWorld
                                                        (Data.Primitive.Array.MutableArray
                                                           (Control.Monad.Primitive.PrimState
                                                              (GHC.ST.ST GHC.Prim.RealWorld))
                                                           a)>_R)))) of ds6 { (#,#) ipv ipv1 ->
                         letrec {
                           $wfoldlM'_loop :: GHC.Types.SPEC
                                             -> GHC.Prim.Int#
                                             -> GHC.Prim.Int#
                                             -> GHC.Prim.State# GHC.Prim.RealWorld
                                             -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                   Data.Vector.Vector a #)
                             <join 4> {- Arity: 4, Strictness: <S,1*U><L,U><S,U><S,U>,
                                         Inline: [0] -}
                           = \ (w1 :: GHC.Types.SPEC)
                               (ww3 :: GHC.Prim.Int#)
                               (ww4 :: GHC.Prim.Int#)
                               (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                             case w1 of ds7 { DEFAULT ->
                             case GHC.Prim.tagToEnum#
                                    @ GHC.Types.Bool
                                    (GHC.Prim.>=# ww4 ww1) of wild {
                               GHC.Types.False
                               -> case GHC.Prim.writeArray#
                                         @ (Control.Monad.Primitive.PrimState
                                              (GHC.ST.ST GHC.Prim.RealWorld))
                                         @ a
                                         ipv1
                                         ww3
                                         (case w of wild1 { GHC.Types.I# x ->
                                          let {
                                            file :: GHC.Prim.Addr# = "./Data/Vector/Generic.hs"#
                                          } in
                                          case GHC.Prim.indexArray#
                                                 @ (Data.Vector.Vector a)
                                                 ww2
                                                 (GHC.Prim.+# ww ww4) of ds8 { Unit# ipv2 ->
                                          case GHC.Prim.tagToEnum#
                                                 @ GHC.Types.Bool
                                                 (GHC.Prim.>=# x 0#) of wild2 {
                                            GHC.Types.False
                                            -> case ipv2 of v2 { Data.Vector.Vector ipv3 ipv4 ipv5 ->
                                               Lib.getcol1 @ a ipv4 x file }
                                            GHC.Types.True
                                            -> case ipv2 of v2 { Data.Vector.Vector ipv3 ipv4 ipv5 ->
                                               case GHC.Prim.tagToEnum#
                                                      @ GHC.Types.Bool
                                                      (GHC.Prim.<# x ipv4) of wild3 {
                                                 GHC.Types.False -> Lib.getcol1 @ a ipv4 x file
                                                 GHC.Types.True
                                                 -> case GHC.Prim.indexArray#
                                                           @ a
                                                           ipv5
                                                           (GHC.Prim.+#
                                                              ipv3
                                                              x) of ds9 { Unit# ipv6 ->
                                                    ipv6 } } } } } })
                                         w2
                                           `cast`
                                         (Nth:2
                                              (Nth:2
                                                   (Trans
                                                        (<GHC.ST.STRep GHC.Prim.RealWorld ()>_R
                                                         ->_R Sym (GHC.ST.N:ST[0]
                                                                       <GHC.Prim.RealWorld>_N
                                                                       <()>_R))
                                                        (((GHC.Prim.State#
                                                             (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                       <GHC.Prim.RealWorld>_N)))_R
                                                          ->_R ((#,#)
                                                                  <'GHC.Types.TupleRep '[]>_R
                                                                  <'GHC.Types.LiftedRep>_R
                                                                  (GHC.Prim.State#
                                                                     (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                               <GHC.Prim.RealWorld>_N)))_R
                                                                  <()>_R)_R)
                                                         ->_R <GHC.ST.ST
                                                                 GHC.Prim.RealWorld
                                                                 ()>_R)))) of s'# { DEFAULT ->
                                  $wfoldlM'_loop
                                    GHC.Types.SPEC
                                    (GHC.Prim.+# ww3 1#)
                                    (GHC.Prim.+# ww4 1#)
                                    s'#
                                      `cast`
                                    (Nth:2
                                         (Nth:3
                                              (Nth:2
                                                   (Trans
                                                        (((GHC.Prim.State#
                                                             (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                  <GHC.Prim.RealWorld>_N))_R
                                                          ->_R ((#,#)
                                                                  <'GHC.Types.TupleRep '[]>_R
                                                                  <'GHC.Types.LiftedRep>_R
                                                                  (GHC.Prim.State#
                                                                     (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                          <GHC.Prim.RealWorld>_N))_R
                                                                  <()>_R)_R)
                                                         ->_R <GHC.ST.ST GHC.Prim.RealWorld ()>_R)
                                                        (<GHC.ST.STRep GHC.Prim.RealWorld ()>_R
                                                         ->_R GHC.ST.N:ST[0]
                                                                  <GHC.Prim.RealWorld>_N
                                                                  <()>_R))))) }
                               GHC.Types.True
                               -> case GHC.Prim.unsafeFreezeArray#
                                         @ (Control.Monad.Primitive.PrimState
                                              (GHC.ST.ST GHC.Prim.RealWorld))
                                         @ a
                                         ipv1
                                         w2
                                           `cast`
                                         (Nth:2
                                              (Nth:2
                                                   (Trans
                                                        (<GHC.ST.STRep
                                                            GHC.Prim.RealWorld
                                                            (Data.Primitive.Array.Array a)>_R
                                                         ->_R Sym (GHC.ST.N:ST[0]
                                                                       <GHC.Prim.RealWorld>_N
                                                                       <Data.Primitive.Array.Array
                                                                          a>_R))
                                                        (((GHC.Prim.State#
                                                             (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                       <GHC.Prim.RealWorld>_N)))_R
                                                          ->_R ((#,#)
                                                                  <'GHC.Types.TupleRep '[]>_R
                                                                  <'GHC.Types.LiftedRep>_R
                                                                  (GHC.Prim.State#
                                                                     (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                               <GHC.Prim.RealWorld>_N)))_R
                                                                  <Data.Primitive.Array.Array
                                                                     a>_R)_R)
                                                         ->_R <GHC.ST.ST
                                                                 GHC.Prim.RealWorld
                                                                 (Data.Primitive.Array.Array
                                                                    a)>_R)))) of ds8 { (#,#) ipv2 ipv3 ->
                                  (# ipv2
                                       `cast`
                                     (Nth:2
                                          (Nth:3
                                               (Nth:2
                                                    (Trans
                                                         (((GHC.Prim.State#
                                                              (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                   <GHC.Prim.RealWorld>_N))_R
                                                           ->_R ((#,#)
                                                                   <'GHC.Types.TupleRep '[]>_R
                                                                   <'GHC.Types.LiftedRep>_R
                                                                   (GHC.Prim.State#
                                                                      (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                           <GHC.Prim.RealWorld>_N))_R
                                                                   <Data.Primitive.Array.Array
                                                                      a>_R)_R)
                                                          ->_R <GHC.ST.ST
                                                                  GHC.Prim.RealWorld
                                                                  (Data.Primitive.Array.Array a)>_R)
                                                         (<GHC.ST.STRep
                                                             GHC.Prim.RealWorld
                                                             (Data.Primitive.Array.Array a)>_R
                                                          ->_R GHC.ST.N:ST[0]
                                                                   <GHC.Prim.RealWorld>_N
                                                                   <Data.Primitive.Array.Array
                                                                      a>_R))))),
                                     Data.Vector.Vector @ a 0# ww3 ipv3 #) } } }
                         } in
                         $wfoldlM'_loop
                           GHC.Types.SPEC
                           0#
                           0#
                           ipv
                             `cast`
                           (Nth:2
                                (Nth:3
                                     (Nth:2
                                          (Trans
                                               (((GHC.Prim.State#
                                                    (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                         <GHC.Prim.RealWorld>_N))_R
                                                 ->_R ((#,#)
                                                         <'GHC.Types.TupleRep '[]>_R
                                                         <'GHC.Types.LiftedRep>_R
                                                         (GHC.Prim.State#
                                                            (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                 <GHC.Prim.RealWorld>_N))_R
                                                         <Data.Primitive.Array.MutableArray
                                                            (Control.Monad.Primitive.PrimState
                                                               (GHC.ST.ST GHC.Prim.RealWorld))
                                                            a>_R)_R)
                                                ->_R <GHC.ST.ST
                                                        GHC.Prim.RealWorld
                                                        (Data.Primitive.Array.MutableArray
                                                           (Control.Monad.Primitive.PrimState
                                                              (GHC.ST.ST GHC.Prim.RealWorld))
                                                           a)>_R)
                                               (<GHC.ST.STRep
                                                   GHC.Prim.RealWorld
                                                   (Data.Primitive.Array.MutableArray
                                                      (Control.Monad.Primitive.PrimState
                                                         (GHC.ST.ST GHC.Prim.RealWorld))
                                                      a)>_R
                                                ->_R GHC.ST.N:ST[0]
                                                         <GHC.Prim.RealWorld>_N
                                                         <Data.Primitive.Array.MutableArray
                                                            (Control.Monad.Primitive.PrimState
                                                               (GHC.ST.ST GHC.Prim.RealWorld))
                                                            a>_R))))) }) of ds6 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
a6244e5f8329b535b9ba12a9c7a585d3
  $wgl ::
    [Data.ByteString.Internal.ByteString]
    -> GHC.Prim.Int# -> GHC.Prim.Int#
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,U>, Inline: [0] -}
ac7a9e294e281e7804bee395ede420df
  $wgl1 ::
    [Data.ByteString.Internal.ByteString]
    -> GHC.Prim.Int# -> GHC.Prim.Int#
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,U>, Inline: [0] -}
3dc91d3c028ab407fced4646449c042c
  $wgo ::
    [Lib.AlignedRead] -> (# [Lib.AlignedRead], [Lib.AlignedRead] #)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>, Inline: [0] -}
0a980f53ff30874f49eabcb1e563671d
  $wgo1 ::
    [Lib.AlignedRead] -> (# [Lib.AlignedRead], [Lib.AlignedRead] #)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>, Inline: [0] -}
eb39d0e10b922ca17091896a91265aef
  $wgo2 ::
    [Lib.AlignedRead] -> (# [Lib.AlignedRead], [Lib.AlignedRead] #)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>, Inline: [0] -}
9cdee9eaa024e49f9124988b28340a05
  $wgo3 ::
    GHC.Prim.Int#
    -> Data.Set.Internal.Set Lib.UChr
    -> [Lib.UChr]
    -> Data.Set.Internal.Set Lib.UChr
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
eac9cb1c93301ba09b6978adb88e03fd
  $wgo4 :: [Lib.UChr] -> GHC.Prim.Int# -> GHC.Prim.Int#
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,U>, Inline: [0] -}
c3241260757780231d36e48f4f817a8a
  $wgo5 ::
    GHC.Prim.Addr#
    -> GHC.Prim.Addr#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 3, HasNoCafRefs, Strictness: <S,U><S,U><S,U>,
     Inline: [0] -}
e255306b9abba54dfdb3f817177a5cb5
  $wgo6 ::
    GHC.Prim.Addr#
    -> GHC.Prim.Addr#
    -> GHC.Prim.Addr#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Ptr.Ptr GHC.Word.Word8 #)
  {- Arity: 4, HasNoCafRefs, Strictness: <S,U><L,U><S,U><S,U>,
     Inline: [0] -}
639d52ff24913ca43226b6ae042ee4c8
  $wgo7 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         ()
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
d734d9f5f6211e3750ea655eb63b3024
  $wgo8 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         ()
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
5c611ca0d838aa77a4191b68072111fe
  $whdrSEalnparserEOL ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.AlignedRead
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.AlignedRead
                            r) ->
                 Lib.$wsamhdrparserEOL
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w
                   w1
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (a1 :: Data.ByteString.Internal.ByteString)[OneShot] ->
                    case t'
                           `cast`
                         (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww7 { Data.Attoparsec.ByteString.Buffer.Buf ww8 ww9 ww10 ww11 ww12 ww13 ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww14 { GHC.Types.I# ww15 ->
                    Lib.$wmany_v1
                      @ r
                      ww8
                      ww9
                      ww10
                      ww11
                      ww12
                      ww13
                      ww15
                      more'
                      (\ (t'1 :: Data.Attoparsec.Internal.Types.State
                                   Data.ByteString.Internal.ByteString)
                         (pos'1 :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                         (more'1 :: Data.Attoparsec.Internal.Types.More)[OneShot]
                         (a3 :: [Data.ByteString.Internal.ByteString])[OneShot] ->
                       case pos'1
                              `cast`
                            (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                       w2
                         t'1
                         nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                         more'1
                         (Lib.AlignedRead
                            Lib.hdrSEalnparserEOL2
                            Lib.$fShowAlignedRead2
                            Lib.NONE
                            Lib.defaultBed2
                            Lib.defaultBed2
                            Lib.defaultBed2
                            Lib.addtrimtag5
                            Lib.addtrimtag5
                            Lib.defaultAlignment_v
                            Lib.defaultAlignment_v
                            Lib.addtrimtag5
                            Lib.defaultBed2
                            Lib.defaultBed2
                            Lib.defaultAlignment1
                            Lib.defaultAlignment1
                            Lib.defaultAlignment1
                            Lib.defaultAlignment1
                            GHC.Types.False
                            GHC.Types.False
                            (GHC.Types.[] @ Lib.BedRecord)
                            (GHC.Types.[] @ Lib.BedRecord)
                            GHC.Types.False
                            GHC.Types.False
                            Lib.defaultBed2
                            Lib.defaultBed2
                            (GHC.Types.: @ Data.ByteString.Internal.ByteString a1 a3)
                            GHC.Types.True
                            Lib.defaultAlignment1
                            Lib.defaultAlignment1
                            Lib.defaultBed
                            GHC.Types.False) }) } })) -}
4a797944fab3ea335e29f36e928c4840
  $whdralnparser ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.AlignedRead
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.AlignedRead
                            r) ->
                 Lib.$wsamhdrparser
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w
                   w1
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (a1 :: Data.ByteString.Internal.ByteString)[OneShot] ->
                    case t'
                           `cast`
                         (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww7 { Data.Attoparsec.ByteString.Buffer.Buf ww8 ww9 ww10 ww11 ww12 ww13 ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww14 { GHC.Types.I# ww15 ->
                    Lib.$wmany_v2
                      @ r
                      ww8
                      ww9
                      ww10
                      ww11
                      ww12
                      ww13
                      ww15
                      more'
                      (\ (t'1 :: Data.Attoparsec.Internal.Types.State
                                   Data.ByteString.Internal.ByteString)
                         (pos'1 :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                         (more'1 :: Data.Attoparsec.Internal.Types.More)[OneShot]
                         (a3 :: [Data.ByteString.Internal.ByteString])[OneShot] ->
                       case pos'1
                              `cast`
                            (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                       w2
                         t'1
                         nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                         more'1
                         (Lib.AlignedRead
                            Lib.hdrSEalnparserEOL2
                            Lib.$fShowAlignedRead2
                            Lib.NONE
                            Lib.defaultBed2
                            Lib.defaultBed2
                            Lib.defaultBed2
                            Lib.addtrimtag5
                            Lib.addtrimtag5
                            Lib.defaultAlignment_v
                            Lib.defaultAlignment_v
                            Lib.addtrimtag5
                            Lib.defaultBed2
                            Lib.defaultBed2
                            Lib.defaultAlignment1
                            Lib.defaultAlignment1
                            Lib.defaultAlignment1
                            Lib.defaultAlignment1
                            GHC.Types.False
                            GHC.Types.False
                            (GHC.Types.[] @ Lib.BedRecord)
                            (GHC.Types.[] @ Lib.BedRecord)
                            GHC.Types.False
                            GHC.Types.False
                            Lib.defaultBed2
                            Lib.defaultBed2
                            (GHC.Types.: @ Data.ByteString.Internal.ByteString a1 a3)
                            GHC.Types.True
                            Lib.defaultAlignment1
                            Lib.defaultAlignment1
                            Lib.defaultBed
                            GHC.Types.False) }) } })) -}
6ef62d2f0a219da0db7a78c816b78d86
  $whdralnparserEOL ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.PairedAln
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.PairedAln
                            r) ->
                 Lib.$wsamhdrparserEOL
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w
                   w1
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (a1 :: Data.ByteString.Internal.ByteString)[OneShot] ->
                    case t'
                           `cast`
                         (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww7 { Data.Attoparsec.ByteString.Buffer.Buf ww8 ww9 ww10 ww11 ww12 ww13 ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww14 { GHC.Types.I# ww15 ->
                    Lib.$wmany_v3
                      @ r
                      ww8
                      ww9
                      ww10
                      ww11
                      ww12
                      ww13
                      ww15
                      more'
                      (\ (t'1 :: Data.Attoparsec.Internal.Types.State
                                   Data.ByteString.Internal.ByteString)
                         (pos'1 :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                         (more'1 :: Data.Attoparsec.Internal.Types.More)[OneShot]
                         (a3 :: [Data.ByteString.Internal.ByteString])[OneShot] ->
                       case pos'1
                              `cast`
                            (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                       w2
                         t'1
                         nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                         more'1
                         (Lib.PairedAln
                            (Lib.AlignedRead
                               Lib.hdrSEalnparserEOL2
                               Lib.$fShowAlignedRead2
                               Lib.NONE
                               Lib.defaultBed2
                               Lib.defaultBed2
                               Lib.defaultBed2
                               Lib.addtrimtag5
                               Lib.addtrimtag5
                               Lib.defaultAlignment_v
                               Lib.defaultAlignment_v
                               Lib.addtrimtag5
                               Lib.defaultBed2
                               Lib.defaultBed2
                               Lib.defaultAlignment1
                               Lib.defaultAlignment1
                               Lib.defaultAlignment1
                               Lib.defaultAlignment1
                               GHC.Types.False
                               GHC.Types.False
                               (GHC.Types.[] @ Lib.BedRecord)
                               (GHC.Types.[] @ Lib.BedRecord)
                               GHC.Types.False
                               GHC.Types.False
                               Lib.defaultBed2
                               Lib.defaultBed2
                               (GHC.Types.: @ Data.ByteString.Internal.ByteString a1 a3)
                               GHC.Types.True
                               Lib.defaultAlignment1
                               Lib.defaultAlignment1
                               Lib.defaultBed
                               GHC.Types.False)
                            Lib.defaultAlignment
                            (GHC.Types.[] @ Lib.AlignedRead)
                            (GHC.Types.[] @ Lib.AlignedRead)) }) } })) -}
a4cf3306fa792e2e48eb31cd13eb345d
  $whdrchromp ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.UChr
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <L,U><L,U><L,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
dfe67d4d76046ed0cddbb333544889b7
  $witypep ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (ww :: GHC.Prim.Int#)
                   (w1 :: Data.Attoparsec.Internal.Types.More)
                   (w2 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w3 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 Lib.itypep_m
                   `cast`
                 (Data.Attoparsec.Internal.Types.N:Parser[0]
                      <Data.ByteString.Internal.ByteString>_N
                      <Data.ByteString.Internal.ByteString>_R)
                   @ r
                   w
                   (GHC.Types.I# ww)
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                   w1
                   w2
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)
                      (more' :: Data.Attoparsec.Internal.Types.More)
                      (a1 :: Data.ByteString.Internal.ByteString) ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                    w3
                      t'
                      nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                      more'
                      Lib.itypep_v })) -}
8db496f6f095397482952b1a812d2d6c
  $wix ::
    GHC.Prim.Int#
    -> GHC.Prim.Int# -> GHC.Prim.Int# -> GHC.Prim.Array# a -> a
  {- Arity: 4, Strictness: <S,U><S,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ @ a
                   (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Array# a) ->
                 let {
                   file :: GHC.Prim.Addr# = "./Data/Vector/Generic.hs"#
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 0#) of wild1 {
                   GHC.Types.False -> Lib.getcol1 @ a ww2 ww file
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<# ww ww2) of wild3 {
                        GHC.Types.False -> Lib.getcol1 @ a ww2 ww file
                        GHC.Types.True
                        -> case GHC.Prim.indexArray#
                                  @ a
                                  ww3
                                  (GHC.Prim.+# ww1 ww) of ds6 { Unit# ipv ->
                           ipv } } }) -}
37a2b3387d20df40f4e450b8989543d0
  $wloop ::
    GHC.Integer.Type.Integer
    -> forall b.
       (GHC.Integer.Type.Integer
        -> Data.Conduit.Internal.Pipe.Pipe
             Lib.AlignedRead
             Lib.AlignedRead
             Data.Void.Void
             ()
             (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
             b)
       -> (# Lib.AlignedRead
             -> Data.Conduit.Internal.Pipe.Pipe
                  Lib.AlignedRead
                  Lib.AlignedRead
                  Data.Void.Void
                  ()
                  (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  b,
             ()
             -> Data.Conduit.Internal.Pipe.Pipe
                  Lib.AlignedRead
                  Lib.AlignedRead
                  Data.Void.Void
                  ()
                  (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  b #)
  {- Arity: 2, Strictness: <S,1*U><L,C(U)>, Inline: [0] -}
b8ad5e0c19371089360dce136d7e680d
  $wloop1 ::
    GHC.Integer.Type.Integer
    -> forall b.
       (GHC.Integer.Type.Integer
        -> Data.Conduit.Internal.Pipe.Pipe
             Lib.AlignedRead
             Lib.AlignedRead
             Data.Void.Void
             ()
             (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
             b)
       -> (# Lib.AlignedRead
             -> Data.Conduit.Internal.Pipe.Pipe
                  Lib.AlignedRead
                  Lib.AlignedRead
                  Data.Void.Void
                  ()
                  (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  b,
             ()
             -> Data.Conduit.Internal.Pipe.Pipe
                  Lib.AlignedRead
                  Lib.AlignedRead
                  Data.Void.Void
                  ()
                  (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  b #)
  {- Arity: 2, Strictness: <S,1*U><L,C(U)>, Inline: [0] -}
4d8a74fecfaf50ffe8396752e4205bad
  $wloop2 ::
    GHC.Integer.Type.Integer
    -> forall b.
       (GHC.Integer.Type.Integer
        -> Data.Conduit.Internal.Pipe.Pipe
             Lib.AlignedRead
             Lib.AlignedRead
             Data.Void.Void
             ()
             (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
             b)
       -> (# Lib.AlignedRead
             -> Data.Conduit.Internal.Pipe.Pipe
                  Lib.AlignedRead
                  Lib.AlignedRead
                  Data.Void.Void
                  ()
                  (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  b,
             ()
             -> Data.Conduit.Internal.Pipe.Pipe
                  Lib.AlignedRead
                  Lib.AlignedRead
                  Data.Void.Void
                  ()
                  (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  b #)
  {- Arity: 2, Strictness: <S,1*U><L,C(U)>, Inline: [0] -}
e1e6de4207e3ff4889dbcac2af544cf2
  $wlvl :: GHC.Prim.Int# -> Lib.ChromNameFormat
  {- Arity: 1, Strictness: <B,U>x, Inline: [0] -}
8c7f5d294706d5be2e2968524bb42a6a
  $wlvl1 :: GHC.Prim.Int# -> Lib.UChr
  {- Arity: 1, Strictness: <B,U>x, Inline: [0] -}
52927043186da2b75b094bb20917dcb3
  $wlvl2 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Types.Bool
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.countDs2 of wild1 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim./=# ww3 dt7) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqAddr# ww dt4) of wild3 {
                        GHC.Types.False
                        -> case Data.ByteString.Internal.$wcompareBytes
                                  ww
                                  ww1
                                  ww2
                                  ww3
                                  dt4
                                  dt5
                                  dt6
                                  dt7 of wild4 {
                             DEFAULT -> GHC.Types.False GHC.Types.EQ -> GHC.Types.True }
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# ww2 dt6) of wild4 {
                             GHC.Types.False
                             -> case Data.ByteString.Internal.$wcompareBytes
                                       ww
                                       ww1
                                       ww2
                                       ww3
                                       dt4
                                       dt5
                                       dt6
                                       dt7 of wild5 {
                                  DEFAULT -> GHC.Types.False GHC.Types.EQ -> GHC.Types.True }
                             GHC.Types.True -> GHC.Types.True } }
                   GHC.Types.True -> GHC.Types.False } }) -}
8c8055b4f8ac4ea44a9efc23b3aababb
  $wlvl3 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Types.Bool
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.countDs2 of wild1 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim./=# ww3 dt7) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqAddr# ww dt4) of wild3 {
                        GHC.Types.False
                        -> case Data.ByteString.Internal.$wcompareBytes
                                  ww
                                  ww1
                                  ww2
                                  ww3
                                  dt4
                                  dt5
                                  dt6
                                  dt7 of wild4 {
                             DEFAULT -> GHC.Types.True GHC.Types.EQ -> GHC.Types.False }
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# ww2 dt6) of wild4 {
                             GHC.Types.False
                             -> case Data.ByteString.Internal.$wcompareBytes
                                       ww
                                       ww1
                                       ww2
                                       ww3
                                       dt4
                                       dt5
                                       dt6
                                       dt7 of wild5 {
                                  DEFAULT -> GHC.Types.True GHC.Types.EQ -> GHC.Types.False }
                             GHC.Types.True -> GHC.Types.False } }
                   GHC.Types.True -> GHC.Types.True } }) -}
1fe1b166f254b84ae46f138c5560d648
  $wlvl4 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Types.Bool
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.countDs2 of wild1 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim./=# ww3 dt7) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqAddr# ww dt4) of wild3 {
                        GHC.Types.False
                        -> case Data.ByteString.Internal.$wcompareBytes
                                  ww
                                  ww1
                                  ww2
                                  ww3
                                  dt4
                                  dt5
                                  dt6
                                  dt7 of wild4 {
                             DEFAULT -> GHC.Types.True GHC.Types.EQ -> GHC.Types.False }
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# ww2 dt6) of wild4 {
                             GHC.Types.False
                             -> case Data.ByteString.Internal.$wcompareBytes
                                       ww
                                       ww1
                                       ww2
                                       ww3
                                       dt4
                                       dt5
                                       dt6
                                       dt7 of wild5 {
                                  DEFAULT -> GHC.Types.True GHC.Types.EQ -> GHC.Types.False }
                             GHC.Types.True -> GHC.Types.False } }
                   GHC.Types.True -> GHC.Types.True } }) -}
5eca8c7c1d0fb3bbfe585fd58b2844c1
  $wlvl5 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.AlignedRead
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.AlignedRead
                            r) ->
                 Lib.$whdralnparser
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                      (_pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (_ctx :: [GHC.Base.String])[OneShot]
                      (_msg :: GHC.Base.String)[OneShot] ->
                    case t'
                           `cast`
                         (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww7 { Data.Attoparsec.ByteString.Buffer.Buf ww8 ww9 ww10 ww11 ww12 ww13 ->
                    Lib.$walnparser @ r ww8 ww9 ww10 ww11 ww12 ww13 ww6 more' w1 w2 })
                   w2) -}
13961e26cc75ca0d17cf2ea7d47f3511
  $wlvl6 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Types.Bool
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.countDs2 of wild1 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim./=# ww3 dt7) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqAddr# ww dt4) of wild3 {
                        GHC.Types.False
                        -> case Data.ByteString.Internal.$wcompareBytes
                                  ww
                                  ww1
                                  ww2
                                  ww3
                                  dt4
                                  dt5
                                  dt6
                                  dt7 of wild4 {
                             DEFAULT -> GHC.Types.True GHC.Types.EQ -> GHC.Types.False }
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# ww2 dt6) of wild4 {
                             GHC.Types.False
                             -> case Data.ByteString.Internal.$wcompareBytes
                                       ww
                                       ww1
                                       ww2
                                       ww3
                                       dt4
                                       dt5
                                       dt6
                                       dt7 of wild5 {
                                  DEFAULT -> GHC.Types.True GHC.Types.EQ -> GHC.Types.False }
                             GHC.Types.True -> GHC.Types.False } }
                   GHC.Types.True -> GHC.Types.True } }) -}
5bde8176212a4e4b8f2a4c371e08a8b5
  $wmIDp ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <L,U><L,U><L,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
93865748c634ded91a1c0dca244b7a1a
  $wmakeTrimmedUpdates ::
    Lib.PairedAln
    -> (# Lib.AlignedRead, Lib.AlignedRead, [Lib.AlignedRead],
          [Lib.AlignedRead] #)
  {- Arity: 1,
     Strictness: <L,1*U(U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)>,
     Inline: [0],
     Unfolding: (\ (w :: Lib.PairedAln) ->
                 let {
                   p :: Lib.PairedAln
                   = Lib.updateZeroTrimdPairFields
                       (Lib.updateZeroTrimdPairFlags (Lib.updateTrimdPairFields w))
                 } in
                 let {
                   ww :: [Lib.AlignedRead]
                   = case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                     GHC.Base.map
                       @ Lib.AlignedRead
                       @ Lib.AlignedRead
                       Lib.updateTrimdAlnFields
                       ds9 }
                 } in
                 let {
                   ww1 :: [Lib.AlignedRead]
                   = case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                     GHC.Base.map
                       @ Lib.AlignedRead
                       @ Lib.AlignedRead
                       Lib.updateTrimdAlnFields
                       ds8 }
                 } in
                 let {
                   ww2 :: Lib.AlignedRead
                   = case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                     Lib.updateTrimdAlnFields ds7 }
                 } in
                 let {
                   ww3 :: Lib.AlignedRead
                   = case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                     Lib.updateTrimdAlnFields ds6 }
                 } in
                 case Lib.checkInsertSize
                        Lib.makeTrimmedUpdates2
                        Lib.makeTrimmedUpdates1
                        (Lib.PairedAln ww3 ww2 ww1 ww) of wild {
                   GHC.Types.False -> (# ww3, ww2, ww1, ww #)
                   GHC.Types.True
                   -> case ww3 of wild1 { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                      case ds24 of wild2 {
                        GHC.Types.False -> (# wild1, ww2, ww1, ww #)
                        GHC.Types.True
                        -> case ww2 of wild3 { Lib.AlignedRead ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ->
                           case ds55 of wild4 {
                             GHC.Types.False -> (# wild1, wild3, ww1, ww #)
                             GHC.Types.True
                             -> (# Lib.AlignedRead
                                     ds6
                                     (case ds7 of wild5 { GHC.Types.I# x# ->
                                      GHC.Types.I# (GHC.Prim.orI# x# 2#) })
                                     ds8
                                     ds9
                                     ds10
                                     ds11
                                     ds12
                                     ds13
                                     ds14
                                     ds15
                                     ds16
                                     ds17
                                     ds18
                                     ds19
                                     ds20
                                     ds21
                                     ds22
                                     ds23
                                     GHC.Types.True
                                     ds25
                                     ds26
                                     ds27
                                     ds28
                                     ds29
                                     ds30
                                     ds31
                                     ds32
                                     ds33
                                     ds34
                                     ds35
                                     ds36,
                                   Lib.AlignedRead
                                     ds37
                                     (case ds38 of wild5 { GHC.Types.I# x# ->
                                      GHC.Types.I# (GHC.Prim.orI# x# 2#) })
                                     ds39
                                     ds40
                                     ds41
                                     ds42
                                     ds43
                                     ds44
                                     ds45
                                     ds46
                                     ds47
                                     ds48
                                     ds49
                                     ds50
                                     ds51
                                     ds52
                                     ds53
                                     ds54
                                     GHC.Types.True
                                     ds56
                                     ds57
                                     ds58
                                     ds59
                                     ds60
                                     ds61
                                     ds62
                                     ds63
                                     ds64
                                     ds65
                                     ds66
                                     ds67,
                                   ww1, ww #) } } } } }) -}
f3d0a7d6fb3512097dd1a46031e525b8
  $wmakechrbedmap ::
    GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Array# Lib.BedRecord
    -> Data.Map.Internal.Map
         Lib.UChr (Data.IntMap.Internal.IntMap Lib.BedRecord)
  {- Arity: 3, Strictness: <L,U><S,U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Array# Lib.BedRecord) ->
                 letrec {
                   $wgo40 :: GHC.Prim.Int# -> [Lib.BedRecord]
                     {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                   = \ (ww3 :: GHC.Prim.Int#) ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.>=# ww3 ww1) of wild {
                       GHC.Types.False
                       -> case GHC.Prim.indexArray#
                                 @ Lib.BedRecord
                                 ww2
                                 (GHC.Prim.+# ww ww3) of ds6 { Unit# ipv ->
                          GHC.Types.: @ Lib.BedRecord ipv ($wgo40 (GHC.Prim.+# ww3 1#)) }
                       GHC.Types.True -> GHC.Types.[] @ Lib.BedRecord }
                 } in
                 let {
                   bbychr :: [[Lib.BedRecord]]
                   = Data.OldList.groupBy
                       @ Lib.BedRecord
                       Lib.createprimerbedmaps3
                       ($wgo40 0#)
                 } in
                 Lib.$sfromList2
                   @ (Data.IntMap.Internal.IntMap Lib.BedRecord)
                   (Lib.createprimerbedmaps_go
                      bbychr
                      (GHC.Base.map
                         @ [Lib.BedRecord]
                         @ (Data.IntMap.Internal.IntMap Lib.BedRecord)
                         Lib.makebedmap
                         bbychr))) -}
d444172803033989f4e0bf96fb887194
  $wmakeprimertups ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> [(GHC.Types.Int, Lib.BedRecord)]
  {- Arity: 4, Strictness: <L,U><S,U><S,U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: GHC.Integer.Type.Integer)
                   (ww3 :: Data.ByteString.Internal.ByteString) ->
                 let {
                   pe :: GHC.Integer.Type.Integer
                   = GHC.Integer.Type.plusInteger ww2 Lib.makeprimertups1
                 } in
                 let {
                   ps :: GHC.Integer.Type.Integer
                   = GHC.Integer.Type.minusInteger ww1 Lib.makeprimertups1
                 } in
                 letrec {
                   go16 :: GHC.Integer.Type.Integer
                           -> [Lib.BedRecord] -> [(GHC.Types.Int, Lib.BedRecord)]
                     {- Arity: 2, Strictness: <S,U><L,1*U> -}
                   = \ (x :: GHC.Integer.Type.Integer) (eta :: [Lib.BedRecord]) ->
                     case GHC.Integer.Type.gtInteger# x pe of wild { DEFAULT ->
                     case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild of wild1 {
                       GHC.Types.False
                       -> case eta of wild2 {
                            [] -> GHC.Types.[] @ (GHC.Types.Int, Lib.BedRecord)
                            : y ys
                            -> GHC.Types.:
                                 @ (GHC.Types.Int, Lib.BedRecord)
                                 (case GHC.Integer.Type.integerToInt x of wild3 { DEFAULT ->
                                  GHC.Types.I# wild3 },
                                  y)
                                 (go16 (GHC.Integer.Type.plusInteger x Lib.expandcigar1) ys) }
                       GHC.Types.True -> GHC.Types.[] @ (GHC.Types.Int, Lib.BedRecord) } }
                 } in
                 go16
                   ps
                   (case GHC.Integer.Type.integerToInt
                           (GHC.Integer.Type.plusInteger
                              (GHC.Integer.Type.minusInteger pe ps)
                              Lib.expandcigar1) of wild { DEFAULT ->
                    case GHC.Prim.tagToEnum#
                           @ GHC.Types.Bool
                           (GHC.Prim.<# 0# wild) of wild1 {
                      GHC.Types.False -> GHC.Types.[] @ Lib.BedRecord
                      GHC.Types.True
                      -> let {
                           b :: Lib.BedRecord = Lib.BedRecord ww ww1 ww2 ww3
                         } in
                         let {
                           lvl1019 :: [Lib.BedRecord]
                           = GHC.Types.: @ Lib.BedRecord b (GHC.Types.[] @ Lib.BedRecord)
                         } in
                         letrec {
                           $wxs :: GHC.Prim.Int# -> [Lib.BedRecord]
                             {- Arity: 1, Strictness: <S,1*U>, Inline: [0] -}
                           = \ (ww4 :: GHC.Prim.Int#) ->
                             case ww4 of ds6 {
                               DEFAULT
                               -> GHC.Types.: @ Lib.BedRecord b ($wxs (GHC.Prim.-# ds6 1#))
                               1# -> lvl1019 }
                         } in
                         $wxs wild } })) -}
741f8aebed148b9c09759902850904a1
  $wmany_v ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
717083691ab146ce0d764404ce725ff9
  $wmany_v1 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [Data.ByteString.Internal.ByteString]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
04ed62a54570c9ff47a2eee76636534a
  $wmany_v2 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [Data.ByteString.Internal.ByteString]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
f711241c0295318fe70e492117ed9022
  $wmany_v3 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [Data.ByteString.Internal.ByteString]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
cd0562953000e1a9d676332a24217000
  $wmany_v4 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [Lib.PairedAln]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
62d1f85b4454f310c22a225db43622d4
  $wmany_v5 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [Lib.AlignedRead]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
b0026edffc444512f72b1a2b1ca7b13d
  $wmapcig ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> [(GHC.Integer.Type.Integer,
         Data.ByteString.Internal.ByteString)]
  {- Arity: 4, Strictness: <S,U><L,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.$wparseCigar
                        @ [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                        ww
                        ww1
                        ww2
                        ww3
                        ww3
                        0#
                        0#
                        Data.Attoparsec.Internal.Types.Complete
                        (Data.Attoparsec.ByteString.Internal.failK
                           @ [(GHC.Integer.Type.Integer,
                               Data.ByteString.Internal.ByteString)])
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [GHC.Base.String]
                               -> GHC.Base.String
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString
                                    [(GHC.Integer.Type.Integer,
                                      Data.ByteString.Internal.ByteString)]>_R)
                        (Data.Attoparsec.ByteString.Internal.successK
                           @ [(GHC.Integer.Type.Integer,
                               Data.ByteString.Internal.ByteString)])
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [(GHC.Integer.Type.Integer,
                                    Data.ByteString.Internal.ByteString)]
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString
                                    [(GHC.Integer.Type.Integer,
                                      Data.ByteString.Internal.ByteString)]>_R) of wild {
                   Data.Attoparsec.Internal.Types.Fail ds6 ds7 err
                   -> case ds7 of wild1 { DEFAULT ->
                      GHC.List.badHead
                        @ [(GHC.Integer.Type.Integer,
                            Data.ByteString.Internal.ByteString)] }
                   Data.Attoparsec.Internal.Types.Partial ipv
                   -> case Lib.checkCigarSeqlen1
                      ret_ty [(GHC.Integer.Type.Integer,
                               Data.ByteString.Internal.ByteString)]
                      of {}
                   Data.Attoparsec.Internal.Types.Done ds6 a1 -> a1 }) -}
209b518ebd9064ab751d744ea536065c
  $wmasterparser ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.MasterRecord
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
f2de87a0df2fb63df42dfe052932b65a
  $wnoclip ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Types.Bool
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.noclip2 of wild1 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                 let {
                   $j :: GHC.Types.Bool <join 0>
                   = case Lib.noclip1 of wild2 { Data.ByteString.Internal.PS dt1 dt2 dt3 dt10 ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim./=# ww3 dt10) of wild3 {
                       GHC.Types.False
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.eqAddr# ww dt1) of wild4 {
                            GHC.Types.False
                            -> case Data.ByteString.Internal.$wcompareBytes
                                      ww
                                      ww1
                                      ww2
                                      ww3
                                      dt1
                                      dt2
                                      dt3
                                      dt10 of wild5 {
                                 DEFAULT -> GHC.Types.True GHC.Types.EQ -> GHC.Types.False }
                            GHC.Types.True
                            -> case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.==# ww2 dt3) of wild5 {
                                 GHC.Types.False
                                 -> case Data.ByteString.Internal.$wcompareBytes
                                           ww
                                           ww1
                                           ww2
                                           ww3
                                           dt1
                                           dt2
                                           dt3
                                           dt10 of wild6 {
                                      DEFAULT -> GHC.Types.True GHC.Types.EQ -> GHC.Types.False }
                                 GHC.Types.True -> GHC.Types.False } }
                       GHC.Types.True -> GHC.Types.True } }
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim./=# ww3 dt7) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqAddr# ww dt4) of wild3 {
                        GHC.Types.False
                        -> case Data.ByteString.Internal.$wcompareBytes
                                  ww
                                  ww1
                                  ww2
                                  ww3
                                  dt4
                                  dt5
                                  dt6
                                  dt7 of wild4 {
                             DEFAULT -> $j GHC.Types.EQ -> GHC.Types.False }
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# ww2 dt6) of wild4 {
                             GHC.Types.False
                             -> case Data.ByteString.Internal.$wcompareBytes
                                       ww
                                       ww1
                                       ww2
                                       ww3
                                       dt4
                                       dt5
                                       dt6
                                       dt7 of wild5 {
                                  DEFAULT -> $j GHC.Types.EQ -> GHC.Types.False }
                             GHC.Types.True -> GHC.Types.False } }
                   GHC.Types.True -> $j } }) -}
16f0b9559629578bbbe3944906d6a730
  $wnohardclip ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Types.Bool
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.noclip2 of wild1 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim./=# ww3 dt7) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqAddr# ww dt4) of wild3 {
                        GHC.Types.False
                        -> case Data.ByteString.Internal.$wcompareBytes
                                  ww
                                  ww1
                                  ww2
                                  ww3
                                  dt4
                                  dt5
                                  dt6
                                  dt7 of wild4 {
                             DEFAULT -> GHC.Types.True GHC.Types.EQ -> GHC.Types.False }
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# ww2 dt6) of wild4 {
                             GHC.Types.False
                             -> case Data.ByteString.Internal.$wcompareBytes
                                       ww
                                       ww1
                                       ww2
                                       ww3
                                       dt4
                                       dt5
                                       dt6
                                       dt7 of wild5 {
                                  DEFAULT -> GHC.Types.True GHC.Types.EQ -> GHC.Types.False }
                             GHC.Types.True -> GHC.Types.False } }
                   GHC.Types.True -> GHC.Types.True } }) -}
e96cda99d441a609a50561a7644a0dac
  $wnomapCigToNomapRname ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Lib.UChr
    -> Lib.UChr
  {- Arity: 5, Strictness: <L,U><L,U><L,U><S,U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (w :: Lib.UChr) ->
                 case Lib.addtrimtag5 of wild1 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim./=# ww3 dt7) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqAddr# ww dt4) of wild3 {
                        GHC.Types.False
                        -> case Data.ByteString.Internal.$wcompareBytes
                                  ww
                                  ww1
                                  ww2
                                  ww3
                                  dt4
                                  dt5
                                  dt6
                                  dt7 of wild4 {
                             DEFAULT -> w GHC.Types.EQ -> Lib.NONE }
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# ww2 dt6) of wild4 {
                             GHC.Types.False
                             -> case Data.ByteString.Internal.$wcompareBytes
                                       ww
                                       ww1
                                       ww2
                                       ww3
                                       dt4
                                       dt5
                                       dt6
                                       dt7 of wild5 {
                                  DEFAULT -> w GHC.Types.EQ -> Lib.NONE }
                             GHC.Types.True -> Lib.NONE } }
                   GHC.Types.True -> w } }) -}
70df7ccca799027ea8bd8543434b8be4
  $wnopadding ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Types.Bool
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.noclip2 of wild1 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                 let {
                   $j :: GHC.Types.Bool <join 0>
                   = case Lib.countDs2 of wild2 { Data.ByteString.Internal.PS dt1 dt2 dt3 dt10 ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim./=# ww3 dt10) of wild3 {
                       GHC.Types.False
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.eqAddr# ww dt1) of wild4 {
                            GHC.Types.False
                            -> case Data.ByteString.Internal.$wcompareBytes
                                      ww
                                      ww1
                                      ww2
                                      ww3
                                      dt1
                                      dt2
                                      dt3
                                      dt10 of wild5 {
                                 DEFAULT -> GHC.Types.True GHC.Types.EQ -> GHC.Types.False }
                            GHC.Types.True
                            -> case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.==# ww2 dt3) of wild5 {
                                 GHC.Types.False
                                 -> case Data.ByteString.Internal.$wcompareBytes
                                           ww
                                           ww1
                                           ww2
                                           ww3
                                           dt1
                                           dt2
                                           dt3
                                           dt10 of wild6 {
                                      DEFAULT -> GHC.Types.True GHC.Types.EQ -> GHC.Types.False }
                                 GHC.Types.True -> GHC.Types.False } }
                       GHC.Types.True -> GHC.Types.True } }
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim./=# ww3 dt7) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqAddr# ww dt4) of wild3 {
                        GHC.Types.False
                        -> case Data.ByteString.Internal.$wcompareBytes
                                  ww
                                  ww1
                                  ww2
                                  ww3
                                  dt4
                                  dt5
                                  dt6
                                  dt7 of wild4 {
                             DEFAULT -> $j GHC.Types.EQ -> GHC.Types.False }
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# ww2 dt6) of wild4 {
                             GHC.Types.False
                             -> case Data.ByteString.Internal.$wcompareBytes
                                       ww
                                       ww1
                                       ww2
                                       ww3
                                       dt4
                                       dt5
                                       dt6
                                       dt7 of wild5 {
                                  DEFAULT -> $j GHC.Types.EQ -> GHC.Types.False }
                             GHC.Types.True -> GHC.Types.False } }
                   GHC.Types.True -> $j } }) -}
f2de2b17eaf5a6f5df19f6095f523194
  $woptasp ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
3520fe3a511db369e236f311c8455f92
  $woptfieldp ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5, Strictness: <L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (ww :: GHC.Prim.Int#)
                   (w1 :: Data.Attoparsec.Internal.Types.More)
                   (w2 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w3 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 let {
                   pos1 :: GHC.Types.Int = GHC.Types.I# ww
                 } in
                 let {
                   lose :: Data.Attoparsec.Internal.Types.Failure
                             Data.ByteString.Internal.ByteString
                             (Data.Attoparsec.Internal.Types.State
                                Data.ByteString.Internal.ByteString)
                             r
                     {- Arity: 5, Strictness: <L,U><L,A><L,U><L,A><L,A>,
                        Unfolding: InlineRule (5, True, True)
                                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                                               Data.ByteString.Internal.ByteString)
                                      (_pos' :: Data.Attoparsec.Internal.Types.Pos)
                                      (more' :: Data.Attoparsec.Internal.Types.More)
                                      (_ctx :: [GHC.Base.String])
                                      (_msg :: GHC.Base.String) ->
                                    Lib.optfieldp2
                                      @ r
                                      t'
                                      pos1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                                      more'
                                      w2
                                      w3) -}
                   = \ (t' :: Data.Attoparsec.Internal.Types.State
                                Data.ByteString.Internal.ByteString)
                       (_pos' :: Data.Attoparsec.Internal.Types.Pos)
                       (more' :: Data.Attoparsec.Internal.Types.More)
                       (_ctx :: [GHC.Base.String])
                       (_msg :: GHC.Base.String) ->
                     Lib.$woptxsp @ r t' ww more' w2 w3
                 } in
                 Lib.$woptnmp
                   @ r
                   w
                   ww
                   w1
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                      (_pos' :: Data.Attoparsec.Internal.Types.Pos)
                      (more' :: Data.Attoparsec.Internal.Types.More)
                      (_ctx :: [GHC.Base.String])
                      (_msg :: GHC.Base.String) ->
                    Lib.$woptasp @ r t' ww more' lose w3)
                   w3) -}
70beaa5ca35bc17efd55ee9244a9c7ba
  $woptfieldpEOL ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         GHC.Types.Char
         r
    -> Data.Attoparsec.ByteString.Internal.Result r
  {- Arity: 10,
     Strictness: <L,U><L,U><L,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            GHC.Types.Char
                            r) ->
                 let {
                   $wsucc1 :: Data.Attoparsec.Internal.Types.State
                                Data.ByteString.Internal.ByteString
                              -> GHC.Prim.Int#
                              -> Data.Attoparsec.Internal.Types.More
                              -> GHC.Word.Word8
                              -> Data.Attoparsec.Internal.Types.IResult
                                   Data.ByteString.Internal.ByteString r
                     {- Arity: 4, Strictness: <L,U><L,U><L,U><L,1*U(U)>, Inline: [0] -}
                   = \ (w3 :: Data.Attoparsec.Internal.Types.State
                                Data.ByteString.Internal.ByteString)
                       (ww7 :: GHC.Prim.Int#)[OneShot]
                       (w4 :: Data.Attoparsec.Internal.Types.More)[OneShot]
                       (w5 :: GHC.Word.Word8)[OneShot] ->
                     let {
                       c2 :: GHC.Types.Char
                       = case w5 of wild { GHC.Word.W8# x# ->
                         GHC.Types.C# (GHC.Prim.chr# (GHC.Prim.word2Int# x#)) }
                     } in
                     case Data.Attoparsec.ByteString.FastSet.memberWord8
                            (case c2 of wild { GHC.Types.C# c# ->
                             GHC.Word.W8#
                               (GHC.Prim.narrow8Word# (GHC.Prim.int2Word# (GHC.Prim.ord# c#))) })
                            Lib.optfieldpEOL_ds of wild {
                       GHC.Types.False
                       -> w2
                            w3
                            (GHC.Types.I# (GHC.Prim.+# ww7 1#))
                              `cast`
                            (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                            w4
                            c2
                       GHC.Types.True
                       -> w1
                            w3
                            (GHC.Types.I# ww7)
                              `cast`
                            (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                            w4
                            (GHC.Types.[] @ GHC.Base.String)
                            Lib.optfieldpEOL4 }
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww3 (GHC.Prim.+# ww6 1#)) of wild1 {
                   GHC.Types.False
                   -> Data.Attoparsec.ByteString.Internal.$wensureSuspended
                        @ r
                        Lib.optfieldpEOL3
                        (Data.Attoparsec.ByteString.Buffer.Buf ww ww1 ww2 ww3 ww4 ww5)
                        ww6
                        w
                        w1
                          `cast`
                        (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [GHC.Base.String]
                               -> GHC.Base.String
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString r>_R)
                        (\ (t' :: Data.Attoparsec.ByteString.Buffer.Buffer)
                           (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                           (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                           (bs' :: Data.ByteString.Internal.ByteString)[OneShot] ->
                         case bs' of wild2 { Data.ByteString.Internal.PS dt7 dt8 dt9 dt10 ->
                         case GHC.Prim.readWord8OffAddr#
                                @ GHC.Prim.RealWorld
                                (GHC.Prim.plusAddr# dt7 dt9)
                                0#
                                GHC.Prim.realWorld# of ds6 { (#,#) ipv1 ipv2 ->
                         case GHC.Prim.touch#
                                @ 'GHC.Types.LiftedRep
                                @ GHC.ForeignPtr.ForeignPtrContents
                                dt8
                                ipv1 of s' { DEFAULT ->
                         case pos'
                                `cast`
                              (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                         $wsucc1
                           t'
                             `cast`
                           (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])))
                           ww8
                           more'
                           (GHC.Word.W8# ipv2) } } } })
                   GHC.Types.True
                   -> $wsucc1
                        (Data.Attoparsec.ByteString.Buffer.Buf ww ww1 ww2 ww3 ww4 ww5)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])))
                        ww6
                        w
                        (case GHC.Prim.readWord8OffAddr#
                                @ GHC.Prim.RealWorld
                                (GHC.Prim.plusAddr# ww (GHC.Prim.+# ww2 ww6))
                                0#
                                GHC.Prim.realWorld# of ds6 { (#,#) ipv1 ipv2 ->
                         case GHC.Prim.touch#
                                @ 'GHC.Types.LiftedRep
                                @ GHC.ForeignPtr.ForeignPtrContents
                                ww1
                                ipv1 of s' { DEFAULT ->
                         GHC.Word.W8# ipv2 } }) }) -}
9261c4483509045b7df26adcc75443a2
  $woptfieldstotalp ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
dbad0d5ce14869e2a1ae373fa1e3f816
  $woptidp ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (ww :: GHC.Prim.Int#)
                   (w1 :: Data.Attoparsec.Internal.Types.More)
                   (w2 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w3 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 let {
                   nt :: GHC.Types.Int = GHC.Types.I# ww
                 } in
                 let {
                   lvl1019 :: Data.Attoparsec.Internal.Types.State
                                Data.ByteString.Internal.ByteString
                              -> Data.Attoparsec.Internal.Types.Pos
                              -> Data.Attoparsec.Internal.Types.More
                              -> Data.ByteString.Internal.ByteString
                              -> Data.Attoparsec.Internal.Types.IResult
                                   Data.ByteString.Internal.ByteString r
                     {- Arity: 4, Strictness: <L,U><S,1*U(U)><L,U><L,A>,
                        Unfolding: InlineRule (4, True, False)
                                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                                               Data.ByteString.Internal.ByteString)
                                      (pos' :: Data.Attoparsec.Internal.Types.Pos)
                                      (more' :: Data.Attoparsec.Internal.Types.More)
                                      (a1 :: Data.ByteString.Internal.ByteString) ->
                                    case pos'
                                           `cast`
                                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                                    w3
                                      t'
                                      nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                                      more'
                                      Lib.optidp_v2 }) -}
                   = \ (t' :: Data.Attoparsec.Internal.Types.State
                                Data.ByteString.Internal.ByteString)
                       (pos' :: Data.Attoparsec.Internal.Types.Pos)
                       (more' :: Data.Attoparsec.Internal.Types.More)
                       (a1 :: Data.ByteString.Internal.ByteString) ->
                     case pos'
                            `cast`
                          (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                     w3
                       t'
                       nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                       more'
                       Lib.optidp_v2 }
                 } in
                 let {
                   lvl1020 :: Data.Attoparsec.Internal.Types.State
                                Data.ByteString.Internal.ByteString
                              -> Data.Attoparsec.Internal.Types.Pos
                              -> Data.Attoparsec.Internal.Types.More
                              -> Data.ByteString.Internal.ByteString
                              -> Data.Attoparsec.Internal.Types.IResult
                                   Data.ByteString.Internal.ByteString r
                     {- Arity: 4, Strictness: <L,U><S,1*U(U)><L,U><L,A>,
                        Unfolding: InlineRule (4, True, False)
                                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                                               Data.ByteString.Internal.ByteString)
                                      (pos' :: Data.Attoparsec.Internal.Types.Pos)
                                      (more' :: Data.Attoparsec.Internal.Types.More)
                                      (a1 :: Data.ByteString.Internal.ByteString) ->
                                    case pos'
                                           `cast`
                                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                                    w3
                                      t'
                                      nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                                      more'
                                      Lib.optidp_v1 }) -}
                   = \ (t' :: Data.Attoparsec.Internal.Types.State
                                Data.ByteString.Internal.ByteString)
                       (pos' :: Data.Attoparsec.Internal.Types.Pos)
                       (more' :: Data.Attoparsec.Internal.Types.More)
                       (a1 :: Data.ByteString.Internal.ByteString) ->
                     case pos'
                            `cast`
                          (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                     w3
                       t'
                       nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                       more'
                       Lib.optidp_v1 }
                 } in
                 let {
                   lose :: Data.Attoparsec.Internal.Types.Failure
                             Data.ByteString.Internal.ByteString
                             (Data.Attoparsec.Internal.Types.State
                                Data.ByteString.Internal.ByteString)
                             r
                     {- Arity: 5, Strictness: <L,U><L,A><L,U><L,A><L,A>,
                        Unfolding: InlineRule (5, True, True)
                                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                                               Data.ByteString.Internal.ByteString)
                                      (_pos' :: Data.Attoparsec.Internal.Types.Pos)
                                      (more' :: Data.Attoparsec.Internal.Types.More)
                                      (_ctx :: [GHC.Base.String])
                                      (_msg :: GHC.Base.String) ->
                                    Lib.optidp_m2
                                      `cast`
                                    (Data.Attoparsec.Internal.Types.N:Parser[0]
                                         <Data.ByteString.Internal.ByteString>_N
                                         <Data.ByteString.Internal.ByteString>_R)
                                      @ r
                                      t'
                                      nt `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                                      more'
                                      w2
                                      lvl1020) -}
                   = \ (t' :: Data.Attoparsec.Internal.Types.State
                                Data.ByteString.Internal.ByteString)
                       (_pos' :: Data.Attoparsec.Internal.Types.Pos)
                       (more' :: Data.Attoparsec.Internal.Types.More)
                       (_ctx :: [GHC.Base.String])
                       (_msg :: GHC.Base.String) ->
                     Lib.optidp_m2
                       `cast`
                     (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)
                       @ r
                       t'
                       nt `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                       more'
                       w2
                       lvl1020
                 } in
                 Lib.optidp_m1
                   `cast`
                 (Data.Attoparsec.Internal.Types.N:Parser[0]
                      <Data.ByteString.Internal.ByteString>_N
                      <Data.ByteString.Internal.ByteString>_R)
                   @ r
                   w
                   nt `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                   w1
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                      (_pos' :: Data.Attoparsec.Internal.Types.Pos)
                      (more' :: Data.Attoparsec.Internal.Types.More)
                      (_ctx :: [GHC.Base.String])
                      (_msg :: GHC.Base.String) ->
                    Lib.optidp_m
                      `cast`
                    (Data.Attoparsec.Internal.Types.N:Parser[0]
                         <Data.ByteString.Internal.ByteString>_N
                         <Data.ByteString.Internal.ByteString>_R)
                      @ r
                      t'
                      nt `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                      more'
                      lose
                      lvl1019)
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)
                      (more' :: Data.Attoparsec.Internal.Types.More)
                      (a1 :: Data.ByteString.Internal.ByteString) ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                    w3
                      t'
                      nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                      more'
                      Lib.optidp_v })) -}
22445076669cbfcb01eaf5f8cdb930eb
  $woptnmp ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
349cb656fb782eff8ebc586377ae1005
  $woptxsp ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
90f1a64b647ebaa93d828be049ddbb3c
  $wp ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
fca7a070cf14193d9b9a0b7c80bcb91d
  $wp1 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.PairedAln
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.PairedAln
                            r) ->
                 Lib.$whdralnparserEOL
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                      (_pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (_ctx :: [GHC.Base.String])[OneShot]
                      (_msg :: GHC.Base.String)[OneShot] ->
                    case t'
                           `cast`
                         (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww7 { Data.Attoparsec.ByteString.Buffer.Buf ww8 ww9 ww10 ww11 ww12 ww13 ->
                    Lib.$wpairedalnparser
                      @ r
                      ww8
                      ww9
                      ww10
                      ww11
                      ww12
                      ww13
                      ww6
                      more'
                      w1
                      w2 })
                   w2) -}
d0b5289f4f4739ef3c47ec5ad11f3c78
  $wp2 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.AlignedRead
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.AlignedRead
                            r) ->
                 Lib.$whdrSEalnparserEOL
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                      (_pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (_ctx :: [GHC.Base.String])[OneShot]
                      (_msg :: GHC.Base.String)[OneShot] ->
                    case t'
                           `cast`
                         (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww7 { Data.Attoparsec.ByteString.Buffer.Buf ww8 ww9 ww10 ww11 ww12 ww13 ->
                    Lib.$walnparserEOL
                      @ r
                      ww8
                      ww9
                      ww10
                      ww11
                      ww12
                      ww13
                      ww6
                      more'
                      w1
                      w2 })
                   w2) -}
f418e89015dfa910d7c349ad9762f50f
  $wpairedalnparser ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.PairedAln
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
cb7686f6071c7bc0242eb12b4a4e2298
  $wparseAln ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Either.Either GHC.Base.String Lib.AlignedRead
  {- Arity: 4, Strictness: <S,U><L,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.$walnparser
                        @ Lib.AlignedRead
                        ww
                        ww1
                        ww2
                        ww3
                        ww3
                        0#
                        0#
                        Data.Attoparsec.Internal.Types.Complete
                        (Data.Attoparsec.ByteString.Internal.failK @ Lib.AlignedRead)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [GHC.Base.String]
                               -> GHC.Base.String
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString Lib.AlignedRead>_R)
                        (Data.Attoparsec.ByteString.Internal.successK @ Lib.AlignedRead)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> Lib.AlignedRead
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString
                                    Lib.AlignedRead>_R) of wild {
                   Data.Attoparsec.Internal.Types.Fail ds6 ds7 err
                   -> case ds7 of wild1 {
                        [] -> Data.Either.Left @ GHC.Base.String @ Lib.AlignedRead err
                        : ipv ipv1
                        -> Data.Either.Left
                             @ [GHC.Types.Char]
                             @ Lib.AlignedRead
                             (GHC.Base.++
                                @ GHC.Types.Char
                                (Data.OldList.intercalate_$spoly_go
                                   @ GHC.Types.Char
                                   ipv
                                   (Data.OldList.prependToAll
                                      @ [GHC.Types.Char]
                                      Lib.parseAln3
                                      ipv1))
                                (GHC.CString.unpackAppendCString# Lib.parseAln2 err)) }
                   Data.Attoparsec.Internal.Types.Partial ipv -> Lib.parseAln1
                   Data.Attoparsec.Internal.Types.Done ds6 a1
                   -> Data.Either.Right @ GHC.Base.String @ Lib.AlignedRead a1 }) -}
40047b4a2e5fe35ccda52c4a40682ff7
  $wparseBED ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Either.Either GHC.Base.String Lib.BedRecord
  {- Arity: 4, Strictness: <S,U><L,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.$wbedrecparser
                        @ Lib.BedRecord
                        ww
                        ww1
                        ww2
                        ww3
                        ww3
                        0#
                        0#
                        Data.Attoparsec.Internal.Types.Complete
                        (Data.Attoparsec.ByteString.Internal.failK @ Lib.BedRecord)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [GHC.Base.String]
                               -> GHC.Base.String
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString Lib.BedRecord>_R)
                        (Data.Attoparsec.ByteString.Internal.successK @ Lib.BedRecord)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> Lib.BedRecord
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString Lib.BedRecord>_R) of wild {
                   Data.Attoparsec.Internal.Types.Fail ds6 ds7 err
                   -> case ds7 of wild1 {
                        [] -> Data.Either.Left @ GHC.Base.String @ Lib.BedRecord err
                        : ipv ipv1
                        -> Data.Either.Left
                             @ [GHC.Types.Char]
                             @ Lib.BedRecord
                             (GHC.Base.++
                                @ GHC.Types.Char
                                (Data.OldList.intercalate_$spoly_go
                                   @ GHC.Types.Char
                                   ipv
                                   (Data.OldList.prependToAll
                                      @ [GHC.Types.Char]
                                      Lib.parseAln3
                                      ipv1))
                                (GHC.CString.unpackAppendCString# Lib.parseAln2 err)) }
                   Data.Attoparsec.Internal.Types.Partial ipv -> Lib.parseBED1
                   Data.Attoparsec.Internal.Types.Done ds6 a1
                   -> Data.Either.Right @ GHC.Base.String @ Lib.BedRecord a1 }) -}
6685c300cedcafa269b3e9a924933e71
  $wparseBEDPE ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Either.Either GHC.Base.String Lib.BEDPE
  {- Arity: 4, Strictness: <S,U><L,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.$wbedPEparser
                        @ Lib.BEDPE
                        ww
                        ww1
                        ww2
                        ww3
                        ww3
                        0#
                        0#
                        Data.Attoparsec.Internal.Types.Complete
                        (Data.Attoparsec.ByteString.Internal.failK @ Lib.BEDPE)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [GHC.Base.String]
                               -> GHC.Base.String
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString Lib.BEDPE>_R)
                        (Data.Attoparsec.ByteString.Internal.successK @ Lib.BEDPE)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> Lib.BEDPE
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString Lib.BEDPE>_R) of wild {
                   Data.Attoparsec.Internal.Types.Fail ds6 ds7 err
                   -> case ds7 of wild1 {
                        [] -> Data.Either.Left @ GHC.Base.String @ Lib.BEDPE err
                        : ipv ipv1
                        -> Data.Either.Left
                             @ [GHC.Types.Char]
                             @ Lib.BEDPE
                             (GHC.Base.++
                                @ GHC.Types.Char
                                (Data.OldList.intercalate_$spoly_go
                                   @ GHC.Types.Char
                                   ipv
                                   (Data.OldList.prependToAll
                                      @ [GHC.Types.Char]
                                      Lib.parseAln3
                                      ipv1))
                                (GHC.CString.unpackAppendCString# Lib.parseAln2 err)) }
                   Data.Attoparsec.Internal.Types.Partial ipv -> Lib.parseBEDPE1
                   Data.Attoparsec.Internal.Types.Done ds6 a1
                   -> Data.Either.Right @ GHC.Base.String @ Lib.BEDPE a1 }) -}
3b415d986b6a8894cae0aa77b43f4b4a
  $wparseCigar ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                            r) ->
                 let {
                   ww7 :: GHC.Types.Int = GHC.Types.I# ww6
                 } in
                 let {
                   w5 :: Data.Attoparsec.Internal.Types.Failure
                           Data.ByteString.Internal.ByteString
                           (Data.Attoparsec.Internal.Types.State
                              Data.ByteString.Internal.ByteString)
                           r
                     {- Arity: 5,
                        Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><L,A><L,U><L,A><L,A>,
                        Unfolding: InlineRule (5, True, True)
                                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                                               Data.ByteString.Internal.ByteString)
                                      (_pos' :: Data.Attoparsec.Internal.Types.Pos)
                                      (more' :: Data.Attoparsec.Internal.Types.More)
                                      (_ctx :: [GHC.Base.String])
                                      (_msg :: GHC.Base.String) ->
                                    Lib.checkCigarSeqlen2
                                      @ r
                                      t'
                                      ww7 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                                      more'
                                      w1
                                      w2) -}
                   = \ (t' :: Data.Attoparsec.Internal.Types.State
                                Data.ByteString.Internal.ByteString)
                       (_pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                       (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                       (_ctx :: [GHC.Base.String])[OneShot]
                       (_msg :: GHC.Base.String)[OneShot] ->
                     case t'
                            `cast`
                          (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww8 { Data.Attoparsec.ByteString.Buffer.Buf ww9 ww10 ww11 ww12 ww13 ww14 ->
                     Lib.$wstarcigarP @ r ww9 ww10 ww11 ww12 ww13 ww14 ww6 more' w1 w2 }
                 } in
                 Lib.$wp
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w
                   w5
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (a1 :: (GHC.Integer.Type.Integer,
                              Data.ByteString.Internal.ByteString))[OneShot] ->
                    case t'
                           `cast`
                         (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww8 { Data.Attoparsec.ByteString.Buffer.Buf ww9 ww10 ww11 ww12 ww13 ww14 ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww15 { GHC.Types.I# ww16 ->
                    Lib.$wmany_v
                      @ r
                      ww9
                      ww10
                      ww11
                      ww12
                      ww13
                      ww14
                      ww16
                      more'
                      (\ (t'1 :: Data.Attoparsec.Internal.Types.State
                                   Data.ByteString.Internal.ByteString)
                         (pos'1 :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                         (more'1 :: Data.Attoparsec.Internal.Types.More)[OneShot]
                         (a3 :: [(GHC.Integer.Type.Integer,
                                  Data.ByteString.Internal.ByteString)])[OneShot] ->
                       case pos'1
                              `cast`
                            (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                       w2
                         t'1
                         nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                         more'1
                         (GHC.Types.:
                            @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                            a1
                            a3) }) } })) -}
f2dfa632b40f023d95dc31bd1cfd0693
  $wparsePairedAlns ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [Lib.PairedAln]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
f921a3cd3567d834926f412410575c75
  $wparsePairedAlns' ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [[Lib.AlignedRead]]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
dfcc79be9a7733f5e4c8b3a3dc9a2390
  $wparsePairedAlnsFromSAM ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Either.Either GHC.Base.String [Lib.PairedAln]
  {- Arity: 4, Strictness: <S,U><L,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.$wparsePairedAlns
                        @ [Lib.PairedAln]
                        ww
                        ww1
                        ww2
                        ww3
                        ww3
                        0#
                        0#
                        Data.Attoparsec.Internal.Types.Complete
                        (Data.Attoparsec.ByteString.Internal.failK @ [Lib.PairedAln])
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [GHC.Base.String]
                               -> GHC.Base.String
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString [Lib.PairedAln]>_R)
                        (Data.Attoparsec.ByteString.Internal.successK @ [Lib.PairedAln])
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [Lib.PairedAln]
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString
                                    [Lib.PairedAln]>_R) of wild {
                   Data.Attoparsec.Internal.Types.Fail ds6 ds7 err
                   -> case ds7 of wild1 {
                        [] -> Data.Either.Left @ GHC.Base.String @ [Lib.PairedAln] err
                        : ipv ipv1
                        -> Data.Either.Left
                             @ [GHC.Types.Char]
                             @ [Lib.PairedAln]
                             (GHC.Base.++
                                @ GHC.Types.Char
                                (Data.OldList.intercalate_$spoly_go
                                   @ GHC.Types.Char
                                   ipv
                                   (Data.OldList.prependToAll
                                      @ [GHC.Types.Char]
                                      Lib.parseAln3
                                      ipv1))
                                (GHC.CString.unpackAppendCString# Lib.parseAln2 err)) }
                   Data.Attoparsec.Internal.Types.Partial ipv
                   -> Lib.parsePairedAlnsFromSAM1
                   Data.Attoparsec.Internal.Types.Done ds6 a1
                   -> Data.Either.Right @ GHC.Base.String @ [Lib.PairedAln] a1 }) -}
36f62d10de265264fa7d8c82dc5806f1
  $wparsePairedAlnsOrHdr ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [Lib.PairedAln]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [Lib.PairedAln]
                            r) ->
                 Lib.$wp1
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w
                   w1
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (a1 :: Lib.PairedAln)[OneShot] ->
                    case t'
                           `cast`
                         (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww7 { Data.Attoparsec.ByteString.Buffer.Buf ww8 ww9 ww10 ww11 ww12 ww13 ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww14 { GHC.Types.I# ww15 ->
                    Lib.$wmany_v4
                      @ r
                      ww8
                      ww9
                      ww10
                      ww11
                      ww12
                      ww13
                      ww15
                      more'
                      (\ (t'1 :: Data.Attoparsec.Internal.Types.State
                                   Data.ByteString.Internal.ByteString)
                         (pos'1 :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                         (more'1 :: Data.Attoparsec.Internal.Types.More)[OneShot]
                         (a3 :: [Lib.PairedAln])[OneShot] ->
                       case pos'1
                              `cast`
                            (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                       w2
                         t'1
                         nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                         more'1
                         (GHC.Types.: @ Lib.PairedAln a1 a3) }) } })) -}
a6cac274ad040f14470506616fddf737
  $wparseReadsetsFromSAM ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> [[Lib.AlignedRead]]
  {- Arity: 4, Strictness: <S,U><L,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.$wparsePairedAlns'
                        @ [[Lib.AlignedRead]]
                        ww
                        ww1
                        ww2
                        ww3
                        ww3
                        0#
                        0#
                        Data.Attoparsec.Internal.Types.Complete
                        (Data.Attoparsec.ByteString.Internal.failK @ [[Lib.AlignedRead]])
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [GHC.Base.String]
                               -> GHC.Base.String
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString [[Lib.AlignedRead]]>_R)
                        (Data.Attoparsec.ByteString.Internal.successK
                           @ [[Lib.AlignedRead]])
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [[Lib.AlignedRead]]
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString
                                    [[Lib.AlignedRead]]>_R) of wild {
                   Data.Attoparsec.Internal.Types.Fail ds6 ds7 err
                   -> case ds7 of wild1 { DEFAULT ->
                      GHC.Types.[] @ [Lib.AlignedRead] }
                   Data.Attoparsec.Internal.Types.Partial ipv
                   -> case Lib.parseReadsetsFromSAM1 ret_ty [[Lib.AlignedRead]] of {}
                   Data.Attoparsec.Internal.Types.Done ds6 a1 -> a1 }) -}
d1f71e61a56aa4d3f8628184efeb9d9a
  $wparseSingleAlnsOrHdr ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [Lib.AlignedRead]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [Lib.AlignedRead]
                            r) ->
                 Lib.$wp2
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w
                   w1
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (a1 :: Lib.AlignedRead)[OneShot] ->
                    case t'
                           `cast`
                         (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww7 { Data.Attoparsec.ByteString.Buffer.Buf ww8 ww9 ww10 ww11 ww12 ww13 ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww14 { GHC.Types.I# ww15 ->
                    Lib.$wmany_v5
                      @ r
                      ww8
                      ww9
                      ww10
                      ww11
                      ww12
                      ww13
                      ww15
                      more'
                      (\ (t'1 :: Data.Attoparsec.Internal.Types.State
                                   Data.ByteString.Internal.ByteString)
                         (pos'1 :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                         (more'1 :: Data.Attoparsec.Internal.Types.More)[OneShot]
                         (a3 :: [Lib.AlignedRead])[OneShot] ->
                       case pos'1
                              `cast`
                            (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                       w2
                         t'1
                         nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                         more'1
                         (GHC.Types.: @ Lib.AlignedRead a1 a3) }) } })) -}
97c7977ca6d59ec8041c45a4c3c9b1f5
  $wparsechkBED ::
    GHC.Prim.Int#
    -> GHC.Prim.Int# -> [GHC.Types.Int] -> [GHC.Types.Char]
  {- Arity: 3, Strictness: <S,U><S,U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.Int#)
                   (w :: [GHC.Types.Int]) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==# ww ww1) of wild {
                   GHC.Types.False
                   -> GHC.CString.unpackAppendCString#
                        Lib.createprimerbedmaps13
                        (case GHC.List.$wlenAcc @ GHC.Types.Int w 0# of ww2 { DEFAULT ->
                         case GHC.Show.$wshowSignedInt
                                0#
                                ww2
                                (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                         GHC.Base.++
                           @ GHC.Types.Char
                           (GHC.Types.: @ GHC.Types.Char ww5 ww6)
                           (GHC.CString.unpackAppendCString#
                              Lib.createprimerbedmaps12
                              (case GHC.Show.$wshowSignedInt
                                      0#
                                      ww
                                      (GHC.Types.[] @ GHC.Types.Char) of ww3 { (#,#) ww7 ww8 ->
                               GHC.Base.++
                                 @ GHC.Types.Char
                                 (GHC.Types.: @ GHC.Types.Char ww7 ww8)
                                 Lib.parsechkBED3 })) } })
                   GHC.Types.True
                   -> GHC.CString.unpackAppendCString#
                        Lib.createprimerbedmaps9
                        (case GHC.Show.$wshowSignedInt
                                0#
                                ww
                                (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                         GHC.Base.++
                           @ GHC.Types.Char
                           (GHC.Types.: @ GHC.Types.Char ww5 ww6)
                           Lib.parsechkBED1 }) }) -}
62756e34923ea5aadc9e9916995319b6
  $wparsechkMaster ::
    GHC.Prim.Int#
    -> GHC.Prim.Int# -> [GHC.Types.Int] -> [GHC.Types.Char]
  {- Arity: 3, Strictness: <S,U><S,U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.Int#)
                   (w :: [GHC.Types.Int]) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==# ww ww1) of wild {
                   GHC.Types.False
                   -> GHC.CString.unpackAppendCString#
                        Lib.createprimerbedmaps13
                        (case GHC.List.$wlenAcc @ GHC.Types.Int w 0# of ww2 { DEFAULT ->
                         case GHC.Show.$wshowSignedInt
                                0#
                                ww2
                                (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                         GHC.Base.++
                           @ GHC.Types.Char
                           (GHC.Types.: @ GHC.Types.Char ww5 ww6)
                           (GHC.CString.unpackAppendCString#
                              Lib.createprimerbedmaps12
                              (case GHC.Show.$wshowSignedInt
                                      0#
                                      ww
                                      (GHC.Types.[] @ GHC.Types.Char) of ww3 { (#,#) ww7 ww8 ->
                               GHC.Base.++
                                 @ GHC.Types.Char
                                 (GHC.Types.: @ GHC.Types.Char ww7 ww8)
                                 Lib.createprimerbedmaps10 })) } })
                   GHC.Types.True
                   -> GHC.CString.unpackAppendCString#
                        Lib.createprimerbedmaps9
                        (case GHC.Show.$wshowSignedInt
                                0#
                                ww
                                (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                         GHC.Base.++
                           @ GHC.Types.Char
                           (GHC.Types.: @ GHC.Types.Char ww5 ww6)
                           Lib.createprimerbedmaps7 }) }) -}
2479a42d701bd2197e9ca2f9e133f64a
  $wparsechkSAM ::
    GHC.Prim.Int#
    -> GHC.Prim.Int# -> [GHC.Types.Int] -> [GHC.Types.Char]
  {- Arity: 3, Strictness: <S,U><S,U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.Int#)
                   (w :: [GHC.Types.Int]) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==# ww ww1) of wild {
                   GHC.Types.False
                   -> GHC.CString.unpackAppendCString#
                        Lib.createprimerbedmaps13
                        (case GHC.List.$wlenAcc @ GHC.Types.Int w 0# of ww2 { DEFAULT ->
                         case GHC.Show.$wshowSignedInt
                                0#
                                ww2
                                (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                         GHC.Base.++
                           @ GHC.Types.Char
                           (GHC.Types.: @ GHC.Types.Char ww5 ww6)
                           (GHC.CString.unpackAppendCString#
                              Lib.createprimerbedmaps12
                              (case GHC.Show.$wshowSignedInt
                                      0#
                                      ww
                                      (GHC.Types.[] @ GHC.Types.Char) of ww3 { (#,#) ww7 ww8 ->
                               GHC.Base.++
                                 @ GHC.Types.Char
                                 (GHC.Types.: @ GHC.Types.Char ww7 ww8)
                                 Lib.parsechkSAM3 })) } })
                   GHC.Types.True
                   -> GHC.CString.unpackAppendCString#
                        Lib.createprimerbedmaps9
                        (case GHC.Show.$wshowSignedInt
                                0#
                                ww
                                (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                         GHC.Base.++
                           @ GHC.Types.Char
                           (GHC.Types.: @ GHC.Types.Char ww5 ww6)
                           Lib.parsechkSAM1 }) }) -}
6450609ee348125f31591d560864db30
  $wparsemIDstring ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.ByteString.Internal.ByteString
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 let {
                   midvals :: [Data.ByteString.Internal.ByteString]
                   = case ww3 of ds6 {
                       DEFAULT
                       -> let {
                            lvl1019 :: GHC.Ptr.Ptr GHC.Word.Word8
                            = GHC.Ptr.Ptr @ GHC.Word.Word8 ww
                          } in
                          letrec {
                            $wsplitLoop :: (GHC.Prim.Word# -> GHC.Types.Bool)
                                           -> GHC.Ptr.Ptr GHC.Word.Word8
                                           -> GHC.Prim.Int#
                                           -> GHC.Types.Int
                                           -> GHC.Prim.Int#
                                           -> GHC.ForeignPtr.ForeignPtr GHC.Word.Word8
                                           -> GHC.Prim.State# GHC.Prim.RealWorld
                                           -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                 [Data.ByteString.Internal.ByteString] #)
                              {- Arity: 7,
                                 Strictness: <L,U><L,1*U(U)><S,U><L,1*U(U)><S,U><L,U(U,U)><S,U>,
                                 Inline: [0] -}
                            = \ (w :: GHC.Prim.Word# -> GHC.Types.Bool)
                                (w1 :: GHC.Ptr.Ptr GHC.Word.Word8)
                                (ww4 :: GHC.Prim.Int#)
                                (w2 :: GHC.Types.Int)
                                (ww5 :: GHC.Prim.Int#)
                                (w3 :: GHC.ForeignPtr.ForeignPtr GHC.Word.Word8)
                                (w4 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                              case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# ww4 ww5) of wild1 {
                                GHC.Types.False
                                -> case w1 of wild2 { GHC.Ptr.Ptr a ->
                                   case w2 of wild3 { GHC.Types.I# x1 ->
                                   case GHC.Prim.readWord8OffAddr#
                                          @ GHC.Prim.RealWorld
                                          a
                                          (GHC.Prim.+# x1 ww4)
                                          w4 of ds7 { (#,#) ipv ipv1 ->
                                   case w ipv1 of wild5 {
                                     GHC.Types.False
                                     -> $wsplitLoop w wild2 (GHC.Prim.+# ww4 1#) wild3 ww5 w3 ipv
                                     GHC.Types.True
                                     -> (# ipv,
                                           GHC.Types.:
                                             @ Data.ByteString.Internal.ByteString
                                             (case w3 of dt { GHC.ForeignPtr.ForeignPtr dt1 dt2 ->
                                              Data.ByteString.Internal.PS dt1 dt2 x1 ww4 })
                                             (case w of pred'1 { DEFAULT ->
                                              case w3 of fp'1 { GHC.ForeignPtr.ForeignPtr ipv2 ipv3 ->
                                              case $wsplitLoop
                                                     pred'1
                                                     lvl1019
                                                     0#
                                                     (GHC.Types.I#
                                                        (GHC.Prim.+# (GHC.Prim.+# x1 ww4) 1#))
                                                     (GHC.Prim.-# (GHC.Prim.-# ww5 ww4) 1#)
                                                     fp'1
                                                     GHC.Prim.realWorld# of ds8 { (#,#) ipv4 ipv5 ->
                                              case GHC.Prim.touch#
                                                     @ 'GHC.Types.LiftedRep
                                                     @ GHC.ForeignPtr.ForeignPtrContents
                                                     ww1
                                                     ipv4 of s' { DEFAULT ->
                                              ipv5 } } } }) #) } } } }
                                GHC.Types.True
                                -> (# w4,
                                      GHC.Types.:
                                        @ Data.ByteString.Internal.ByteString
                                        (case w3 of dt { GHC.ForeignPtr.ForeignPtr dt1 dt2 ->
                                         case w2 of dt3 { GHC.Types.I# dt4 ->
                                         Data.ByteString.Internal.PS dt1 dt2 dt4 ww4 } })
                                        (GHC.Types.[] @ Data.ByteString.Internal.ByteString) #) }
                          } in
                          case $wsplitLoop
                                 Lib.parsemIDstring2
                                 lvl1019
                                 0#
                                 (GHC.Types.I# ww2)
                                 ds6
                                 (GHC.ForeignPtr.ForeignPtr @ GHC.Word.Word8 ww ww1)
                                 GHC.Prim.realWorld# of ds7 { (#,#) ipv ipv1 ->
                          case GHC.Prim.touch#
                                 @ 'GHC.Types.LiftedRep
                                 @ GHC.ForeignPtr.ForeignPtrContents
                                 ww1
                                 ipv of s' { DEFAULT ->
                          Lib.parsemIDstring_go ipv1 } }
                       0# -> GHC.Types.[] @ Data.ByteString.Internal.ByteString }
                 } in
                 case GHC.List.$wlenAcc
                        @ Data.ByteString.Internal.ByteString
                        midvals
                        0# of ww4 { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<=# ww4 0#) of wild {
                   GHC.Types.False
                   -> GHC.List.head @ Data.ByteString.Internal.ByteString midvals
                   GHC.Types.True -> Lib.parsemIDstring1 } }) -}
ff75a96ba411163d8e461b0d42f69ad5
  $wparsesignedint ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Integer.Type.Integer
  {- Arity: 4, Strictness: <S,U><L,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Data.Attoparsec.ByteString.Char8.$wdouble
                        @ GHC.Types.Double
                        ww
                        ww1
                        ww2
                        ww3
                        ww3
                        0#
                        0#
                        Data.Attoparsec.Internal.Types.Complete
                        (Data.Attoparsec.ByteString.Internal.failK @ GHC.Types.Double)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [GHC.Base.String]
                               -> GHC.Base.String
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString GHC.Types.Double>_R)
                        (Data.Attoparsec.ByteString.Internal.successK @ GHC.Types.Double)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> GHC.Types.Double
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString
                                    GHC.Types.Double>_R) of wild {
                   Data.Attoparsec.Internal.Types.Fail ds6 ds7 err
                   -> case ds7 of wild1 { DEFAULT ->
                      case GHC.List.badHead ret_ty GHC.Integer.Type.Integer of {} }
                   Data.Attoparsec.Internal.Types.Partial ipv
                   -> case Lib.parsesignedint1 ret_ty GHC.Integer.Type.Integer of {}
                   Data.Attoparsec.Internal.Types.Done ds6 a1
                   -> case a1 of wild1 { GHC.Types.D# x ->
                      case GHC.Integer.Type.decodeDoubleInteger
                             x of ds7 { (#,#) ipv ipv1 ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<# ipv1 0#) of wild2 {
                        GHC.Types.False -> GHC.Integer.Type.shiftLInteger ipv ipv1
                        GHC.Types.True
                        -> let {
                             s :: GHC.Prim.Int# = GHC.Prim.negateInt# ipv1
                           } in
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.># s 52#) of wild3 {
                             GHC.Types.False
                             -> case GHC.Integer.Type.integerToInt ipv of n { DEFAULT ->
                                GHC.Integer.Type.smallInteger (GHC.Prim.uncheckedIShiftRA# n s) }
                             GHC.Types.True
                             -> case GHC.Integer.Type.ltInteger#
                                       ipv
                                       Lib.defaultBed2 of wild4 { DEFAULT ->
                                case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild4 of wild5 {
                                  GHC.Types.False -> Lib.defaultBed2
                                  GHC.Types.True -> Lib.updateTrimdAlnFields1 } } } } } } }) -}
af7bbb10c48cfb243c2fea0ffe703060
  $wpoly_go1 ::
    GHC.Prim.Int#
    -> Data.Map.Internal.Map Lib.UChr a
    -> [(Lib.UChr, a)]
    -> Data.Map.Internal.Map Lib.UChr a
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
8d8dcf2e3ff2ef5475d9f8a2596cee55
  $wpoly_go8 ::
    GHC.Prim.Int#
    -> Data.Map.Internal.Map GHC.Types.Int a
    -> [(GHC.Types.Int, a)]
    -> Data.Map.Internal.Map GHC.Types.Int a
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
a1a891896912b412caeb04172f27a5ac
  $wsafemapcig ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Base.Maybe Lib.CigarMap
  {- Arity: 4, Strictness: <S,U><L,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 let {
                   cigtups :: [[(GHC.Integer.Type.Integer,
                                 Data.ByteString.Internal.ByteString)]]
                   = case Lib.$wparseCigar
                            @ [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                            ww
                            ww1
                            ww2
                            ww3
                            ww3
                            0#
                            0#
                            Data.Attoparsec.Internal.Types.Complete
                            (Data.Attoparsec.ByteString.Internal.failK
                               @ [(GHC.Integer.Type.Integer,
                                   Data.ByteString.Internal.ByteString)])
                              `cast`
                            (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                             ->_R <Data.Attoparsec.Internal.Types.Pos
                                   -> Data.Attoparsec.Internal.Types.More
                                   -> [GHC.Base.String]
                                   -> GHC.Base.String
                                   -> Data.Attoparsec.Internal.Types.IResult
                                        Data.ByteString.Internal.ByteString
                                        [(GHC.Integer.Type.Integer,
                                          Data.ByteString.Internal.ByteString)]>_R)
                            (Data.Attoparsec.ByteString.Internal.successK
                               @ [(GHC.Integer.Type.Integer,
                                   Data.ByteString.Internal.ByteString)])
                              `cast`
                            (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                             ->_R <Data.Attoparsec.Internal.Types.Pos
                                   -> Data.Attoparsec.Internal.Types.More
                                   -> [(GHC.Integer.Type.Integer,
                                        Data.ByteString.Internal.ByteString)]
                                   -> Data.Attoparsec.Internal.Types.IResult
                                        Data.ByteString.Internal.ByteString
                                        [(GHC.Integer.Type.Integer,
                                          Data.ByteString.Internal.ByteString)]>_R) of wild {
                       Data.Attoparsec.Internal.Types.Fail ds6 ds7 err
                       -> case ds7 of wild1 { DEFAULT ->
                          GHC.Types.[]
                            @ [(GHC.Integer.Type.Integer,
                                Data.ByteString.Internal.ByteString)] }
                       Data.Attoparsec.Internal.Types.Partial ipv
                       -> case Lib.checkCigarSeqlen1
                          ret_ty [[(GHC.Integer.Type.Integer,
                                    Data.ByteString.Internal.ByteString)]]
                          of {}
                       Data.Attoparsec.Internal.Types.Done ds6 a1
                       -> GHC.Types.:
                            @ [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                            a1
                            (GHC.Types.[]
                               @ [(GHC.Integer.Type.Integer,
                                   Data.ByteString.Internal.ByteString)]) }
                 } in
                 case GHC.List.$wlenAcc
                        @ [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                        cigtups
                        0# of ww4 { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.># ww4 0#) of wild {
                   GHC.Types.False -> GHC.Base.Nothing @ Lib.CigarMap
                   GHC.Types.True
                   -> GHC.Base.Just
                        @ [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                        (GHC.List.head
                           @ [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                           cigtups) } }) -}
72439506f02e13f535eff0497b223425
  $wsamhdrparser ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <L,U><L,U><L,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
d001f84f3bbfb4e8def9f7a6c0b505bc
  $wsamhdrparserEOL ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <L,U><L,U><L,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
670599643b72c3556ae5ec96b1ca9dac
  $wseqp ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
274400527623b093a6deefa0a5b8ad5b
  $wsoftclipbase ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> GHC.Types.Bool
    -> (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer,
          Data.ByteString.Internal.ByteString,
          Data.ByteString.Internal.ByteString, GHC.Types.Bool #)
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U(U,U,U,U)><S,1*U>,
     Inline: [0] -}
3dc4fc81fdbf2b3ba36e6b267270c8f1
  $wspaces ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 8, Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More) ->
                 Lib.$wgo8 @ r ww ww1 ww2 ww3 ww4 ww5 ww6 w (Lib.spaces2 @ r)) -}
44191d5f5110ca178a25b1bdc9fe1856
  $wstarcigarP ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <L,U><L,U><L,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
9eb055341bfdbd9bf217bc87ab16ef68
  $wtrimprimerPairsE ::
    Lib.CMap
    -> Lib.CMap
    -> Lib.PairedAln
    -> (# Lib.AlignedRead, Lib.AlignedRead, [Lib.AlignedRead],
          [Lib.AlignedRead] #)
  {- Arity: 3,
     Strictness: <L,U><L,U><L,1*U(1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,A,A,A,U,U,U,U,U,U,U,U,U),1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,A,A,A,U,U,U,U,U,U,U,U,U),1*U,1*U)>,
     Inline: [0],
     Unfolding: (\ (w :: Lib.CMap)
                   (w1 :: Lib.CMap)
                   (w2 :: Lib.PairedAln) ->
                 case Lib.$wmakeTrimmedUpdates
                        (let {
                           w3 :: Lib.PairedAln
                           = case w2 of ww { Lib.PairedAln ww1 ww2 ww3 ww4 ->
                             let {
                               addpints :: Lib.AlignedRead -> Lib.AlignedRead {- Arity: 1 -}
                               = Lib.addprimerints w w1
                             } in
                             Lib.PairedAln
                               (Lib.addprimerints w w1 ww1)
                               (Lib.addprimerints w w1 ww2)
                               (GHC.Base.map @ Lib.AlignedRead @ Lib.AlignedRead addpints ww3)
                               (GHC.Base.map @ Lib.AlignedRead @ Lib.AlignedRead addpints ww4) }
                         } in
                         Lib.PairedAln
                           (case w3 of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                            Lib.trimalignment ds6 })
                           (case w3 of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                            Lib.trimalignment ds7 })
                           (case w3 of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                            GHC.Base.map
                              @ Lib.AlignedRead
                              @ Lib.AlignedRead
                              Lib.trimalignment
                              ds8 })
                           (case w3 of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                            GHC.Base.map
                              @ Lib.AlignedRead
                              @ Lib.AlignedRead
                              Lib.trimalignment
                              ds9 })) of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 (# ww1, ww2,
                    GHC.List.filter
                      @ Lib.AlignedRead
                      Lib.removeNonPrimaryZeroLengthAlignments1
                      ww3,
                    GHC.List.filter
                      @ Lib.AlignedRead
                      Lib.removeNonPrimaryZeroLengthAlignments1
                      ww4 #) }) -}
a721857f19d7bfd8891c1523e4a8e0ee
  $wtxtfieldp ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
5fb9d6c1de73452967138efb24b88ffc
  $wuchrparser ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.UChr
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
1a37c0e1d5f27daea5ee11cba841f22b
  $wupdateCigB ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.ByteString.Internal.ByteString
  {- Arity: 6, Strictness: <L,U><L,U><S,U><L,U><S,U><S,U>,
     Inline: [0] -}
77ae5aed668db8cd2fbb995e37b1f380
  $wupdateCigF ::
    GHC.Integer.Type.Integer
    -> GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.ByteString.Internal.ByteString
  {- Arity: 5, Strictness: <L,U><S,U><L,U><S,U><S,U>, Inline: [0] -}
1e1245fc444d8e62e98bacdbc9b3323f
  $wupdateCigR ::
    GHC.Integer.Type.Integer
    -> GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.ByteString.Internal.ByteString
  {- Arity: 5, Strictness: <L,U><S,U><L,U><S,U><S,U>, Inline: [0] -}
f3d49ab62b2afc6abe439c1a43eabd42
  $wvalidateTrimdPairAlnStart ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,1*U><S,1*U><S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Integer.Type.Integer)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: GHC.Integer.Type.Integer)
                   (ww3 :: GHC.Integer.Type.Integer) ->
                 case GHC.Integer.Type.eqInteger# ww2 ww1 of wild { DEFAULT ->
                 case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild of wild1 {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case GHC.Integer.Type.eqInteger# ww ww3 of wild2 { DEFAULT ->
                      GHC.Prim.tagToEnum# @ GHC.Types.Bool wild2 } } }) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  data AlignedRead
    = AlignedRead {qname :: Data.ByteString.Internal.ByteString,
                   flag :: GHC.Types.Int,
                   rname :: Lib.UChr,
                   pos :: GHC.Integer.Type.Integer,
                   endpos :: GHC.Integer.Type.Integer,
                   mapqual :: GHC.Integer.Type.Integer,
                   cigar :: Data.ByteString.Internal.ByteString,
                   trimdcigar :: Data.ByteString.Internal.ByteString,
                   cigmap :: Lib.CigarMap,
                   trimdcigmap :: Lib.CigarMap,
                   rnext :: Data.ByteString.Internal.ByteString,
                   pnext :: GHC.Integer.Type.Integer,
                   tlen :: GHC.Integer.Type.Integer,
                   refseq :: Data.ByteString.Internal.ByteString,
                   basequal :: Data.ByteString.Internal.ByteString,
                   optfields :: Data.ByteString.Internal.ByteString,
                   strand :: Data.ByteString.Internal.ByteString,
                   paired :: GHC.Types.Bool,
                   mapped :: GHC.Types.Bool,
                   fint :: [Lib.BedRecord],
                   rint :: [Lib.BedRecord],
                   pintflag :: GHC.Types.Bool,
                   trimdflag :: GHC.Types.Bool,
                   trimdpos :: GHC.Integer.Type.Integer,
                   trimdendpos :: GHC.Integer.Type.Integer,
                   headerstrings :: Lib.Header,
                   isheader :: GHC.Types.Bool,
                   mid :: Data.ByteString.Internal.ByteString,
                   xmid :: Data.ByteString.Internal.ByteString,
                   tbed :: Lib.BedRecord,
                   trimdToZeroLength :: GHC.Types.Bool}
447a43392b85273af07525c861640aa1
  type Alignments = [Lib.AlignedRead]
28c40e7f9d678d36b19162676391984b
  type BED = Data.Vector.Vector Lib.BedRecord
b27cefdd8405a17038845775c0c42c29
  data BEDPE
    = BEDPE {chr1 :: Lib.UChr,
             start1 :: GHC.Integer.Type.Integer,
             end1 :: GHC.Integer.Type.Integer,
             chr2 :: Lib.UChr,
             start2 :: GHC.Integer.Type.Integer,
             end2 :: GHC.Integer.Type.Integer,
             bedpename :: Data.ByteString.Internal.ByteString}
80f7c510548f25ad513e25a45a70890f
  type BedMap = Data.IntMap.Internal.IntMap Lib.BedRecord
629d9d543a825463dd90ec69a5fb19f7
  data BedRecord
    = BedRecord {bedchr :: Lib.UChr,
                 bedstart :: GHC.Integer.Type.Integer,
                 bedend :: GHC.Integer.Type.Integer,
                 bedname :: Data.ByteString.Internal.ByteString}
4c8dfc97203875a4479770dc86a50e88
  type CMap = Data.Map.Internal.Map Lib.UChr Lib.BedMap
e1e6de4207e3ff4889dbcac2af544cf2
  data ChromNameFormat = GRC | UCSC
7fb478a97ec7839e5bde64832a3183e7
  type CigarMap =
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
6f19773577bdf1a116e6a2279d330c12
  data CigarMod
    = CigarMod {currpos :: GHC.Integer.Type.Integer,
                targetpos :: GHC.Integer.Type.Integer,
                softclipOps :: Data.ByteString.Internal.ByteString,
                remCigOps :: Data.ByteString.Internal.ByteString,
                trimcomplete :: GHC.Types.Bool}
64e0988db8973ab4dd85192a43d03e5f
  type Header = [Data.ByteString.Internal.ByteString]
1b5721207ca1189d551bcd24be98a5dc
  data MasterRecord
    = MasterRecord {mchrom :: Lib.UChr,
                    mtargetstart :: GHC.Integer.Type.Integer,
                    mtargetend :: GHC.Integer.Type.Integer,
                    mampname :: Data.ByteString.Internal.ByteString,
                    mforstart :: GHC.Integer.Type.Integer,
                    mforend :: GHC.Integer.Type.Integer,
                    mrevstart :: GHC.Integer.Type.Integer,
                    mrevend :: GHC.Integer.Type.Integer,
                    mforname :: Data.ByteString.Internal.ByteString,
                    mrevname :: Data.ByteString.Internal.ByteString,
                    mforseq :: Data.ByteString.Internal.ByteString,
                    mrevseq :: Data.ByteString.Internal.ByteString}
b5f7c91e0a039228d8ca476cc3bdf320
  data MidFamily
    = MidFamily {chrom :: Lib.UChr,
                 alnstart :: GHC.Integer.Type.Integer,
                 alnend :: GHC.Integer.Type.Integer,
                 midseq :: Data.ByteString.Internal.ByteString,
                 alns :: [Lib.AlignedRead],
                 alncount :: GHC.Integer.Type.Integer,
                 txposedcount :: GHC.Integer.Type.Integer,
                 postxposdcnt :: GHC.Integer.Type.Integer,
                 negtxposdcnt :: GHC.Integer.Type.Integer,
                 targetbed :: Lib.BedRecord}
f1e8a13132b4d566d11f9275b6e14c57
  data Opts
    = Opts {bedpeformat :: GHC.Types.Bool,
            sereads :: GHC.Types.Bool,
            incoordsfile :: GHC.Base.String,
            insamfile :: GHC.Base.String,
            outfilename :: GHC.Base.String}
c13536c0ddcfc999f8a708d0f6fd76f1
  data PairedAln
    = PairedAln {r1prim :: Lib.AlignedRead,
                 r2prim :: Lib.AlignedRead,
                 r1secs :: [Lib.AlignedRead],
                 r2secs :: [Lib.AlignedRead]}
c13536c0ddcfc999f8a708d0f6fd76f1
  axiom Lib.Rep_AlignedRead::
      GHC.Generics.Rep Lib.AlignedRead
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "AlignedRead"
               "Lib"
               "primerclip-0.3.5.0-EKfIVVkqmIVLNVlfKBtA8g"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "AlignedRead" 'GHC.Generics.PrefixI 'GHC.Types.True)
               ((((GHC.Generics.S1
                     ('GHC.Generics.MetaSel
                        ('GHC.Base.Just "qname")
                        'GHC.Generics.NoSourceUnpackedness
                        'GHC.Generics.NoSourceStrictness
                        'GHC.Generics.DecidedLazy)
                     (GHC.Generics.Rec0 Data.ByteString.Internal.ByteString)
                   GHC.Generics.:*: (GHC.Generics.S1
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "flag")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 GHC.Types.Int)
                                     GHC.Generics.:*: GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "rname")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0 Lib.UChr)))
                  GHC.Generics.:*: ((GHC.Generics.S1
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "pos")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                                     GHC.Generics.:*: GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "endpos")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0
                                                           GHC.Integer.Type.Integer))
                                    GHC.Generics.:*: (GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "mapqual")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                                                      GHC.Generics.:*: GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just "cigar")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            Data.ByteString.Internal.ByteString))))
                 GHC.Generics.:*: (((GHC.Generics.S1
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "trimdcigar")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 Data.ByteString.Internal.ByteString)
                                     GHC.Generics.:*: GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "cigmap")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0 Lib.CigarMap))
                                    GHC.Generics.:*: (GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "trimdcigmap")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0 Lib.CigarMap)
                                                      GHC.Generics.:*: GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just "rnext")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            Data.ByteString.Internal.ByteString)))
                                   GHC.Generics.:*: ((GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "pnext")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                                                      GHC.Generics.:*: GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just "tlen")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            GHC.Integer.Type.Integer))
                                                     GHC.Generics.:*: (GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just
                                                                               "refseq")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            Data.ByteString.Internal.ByteString)
                                                                       GHC.Generics.:*: GHC.Generics.S1
                                                                                          ('GHC.Generics.MetaSel
                                                                                             ('GHC.Base.Just
                                                                                                "basequal")
                                                                                             'GHC.Generics.NoSourceUnpackedness
                                                                                             'GHC.Generics.NoSourceStrictness
                                                                                             'GHC.Generics.DecidedLazy)
                                                                                          (GHC.Generics.Rec0
                                                                                             Data.ByteString.Internal.ByteString)))))
                GHC.Generics.:*: ((((GHC.Generics.S1
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "optfields")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 Data.ByteString.Internal.ByteString)
                                     GHC.Generics.:*: GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "strand")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0
                                                           Data.ByteString.Internal.ByteString))
                                    GHC.Generics.:*: (GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "paired")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0 GHC.Types.Bool)
                                                      GHC.Generics.:*: GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just
                                                                               "mapped")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            GHC.Types.Bool)))
                                   GHC.Generics.:*: ((GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "fint")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0 [Lib.BedRecord])
                                                      GHC.Generics.:*: GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just "rint")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            [Lib.BedRecord]))
                                                     GHC.Generics.:*: (GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just
                                                                               "pintflag")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            GHC.Types.Bool)
                                                                       GHC.Generics.:*: GHC.Generics.S1
                                                                                          ('GHC.Generics.MetaSel
                                                                                             ('GHC.Base.Just
                                                                                                "trimdflag")
                                                                                             'GHC.Generics.NoSourceUnpackedness
                                                                                             'GHC.Generics.NoSourceStrictness
                                                                                             'GHC.Generics.DecidedLazy)
                                                                                          (GHC.Generics.Rec0
                                                                                             GHC.Types.Bool))))
                                  GHC.Generics.:*: (((GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "trimdpos")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                                                      GHC.Generics.:*: GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just
                                                                               "trimdendpos")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            GHC.Integer.Type.Integer))
                                                     GHC.Generics.:*: (GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just
                                                                               "headerstrings")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            Lib.Header)
                                                                       GHC.Generics.:*: GHC.Generics.S1
                                                                                          ('GHC.Generics.MetaSel
                                                                                             ('GHC.Base.Just
                                                                                                "isheader")
                                                                                             'GHC.Generics.NoSourceUnpackedness
                                                                                             'GHC.Generics.NoSourceStrictness
                                                                                             'GHC.Generics.DecidedLazy)
                                                                                          (GHC.Generics.Rec0
                                                                                             GHC.Types.Bool)))
                                                    GHC.Generics.:*: ((GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just "mid")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            Data.ByteString.Internal.ByteString)
                                                                       GHC.Generics.:*: GHC.Generics.S1
                                                                                          ('GHC.Generics.MetaSel
                                                                                             ('GHC.Base.Just
                                                                                                "xmid")
                                                                                             'GHC.Generics.NoSourceUnpackedness
                                                                                             'GHC.Generics.NoSourceStrictness
                                                                                             'GHC.Generics.DecidedLazy)
                                                                                          (GHC.Generics.Rec0
                                                                                             Data.ByteString.Internal.ByteString))
                                                                      GHC.Generics.:*: (GHC.Generics.S1
                                                                                          ('GHC.Generics.MetaSel
                                                                                             ('GHC.Base.Just
                                                                                                "tbed")
                                                                                             'GHC.Generics.NoSourceUnpackedness
                                                                                             'GHC.Generics.NoSourceStrictness
                                                                                             'GHC.Generics.DecidedLazy)
                                                                                          (GHC.Generics.Rec0
                                                                                             Lib.BedRecord)
                                                                                        GHC.Generics.:*: GHC.Generics.S1
                                                                                                           ('GHC.Generics.MetaSel
                                                                                                              ('GHC.Base.Just
                                                                                                                 "trimdToZeroLength")
                                                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                                                              'GHC.Generics.NoSourceStrictness
                                                                                                              'GHC.Generics.DecidedLazy)
                                                                                                           (GHC.Generics.Rec0
                                                                                                              GHC.Types.Bool)))))))
b27cefdd8405a17038845775c0c42c29
  axiom Lib.Rep_BEDPE::
      GHC.Generics.Rep Lib.BEDPE
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "BEDPE"
               "Lib"
               "primerclip-0.3.5.0-EKfIVVkqmIVLNVlfKBtA8g"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "BEDPE" 'GHC.Generics.PrefixI 'GHC.Types.True)
               ((GHC.Generics.S1
                   ('GHC.Generics.MetaSel
                      ('GHC.Base.Just "chr1")
                      'GHC.Generics.NoSourceUnpackedness
                      'GHC.Generics.NoSourceStrictness
                      'GHC.Generics.DecidedLazy)
                   (GHC.Generics.Rec0 Lib.UChr)
                 GHC.Generics.:*: (GHC.Generics.S1
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "start1")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                                   GHC.Generics.:*: GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "end1")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0 GHC.Integer.Type.Integer)))
                GHC.Generics.:*: ((GHC.Generics.S1
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "chr2")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 Lib.UChr)
                                   GHC.Generics.:*: GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "start2")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0 GHC.Integer.Type.Integer))
                                  GHC.Generics.:*: (GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "end2")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                                                    GHC.Generics.:*: GHC.Generics.S1
                                                                       ('GHC.Generics.MetaSel
                                                                          ('GHC.Base.Just
                                                                             "bedpename")
                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                          'GHC.Generics.NoSourceStrictness
                                                                          'GHC.Generics.DecidedLazy)
                                                                       (GHC.Generics.Rec0
                                                                          Data.ByteString.Internal.ByteString)))))
629d9d543a825463dd90ec69a5fb19f7
  axiom Lib.Rep_BedRecord::
      GHC.Generics.Rep Lib.BedRecord
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "BedRecord"
               "Lib"
               "primerclip-0.3.5.0-EKfIVVkqmIVLNVlfKBtA8g"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "BedRecord" 'GHC.Generics.PrefixI 'GHC.Types.True)
               ((GHC.Generics.S1
                   ('GHC.Generics.MetaSel
                      ('GHC.Base.Just "bedchr")
                      'GHC.Generics.NoSourceUnpackedness
                      'GHC.Generics.NoSourceStrictness
                      'GHC.Generics.DecidedLazy)
                   (GHC.Generics.Rec0 Lib.UChr)
                 GHC.Generics.:*: GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "bedstart")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Integer.Type.Integer))
                GHC.Generics.:*: (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "bedend")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "bedname")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0
                                                        Data.ByteString.Internal.ByteString))))
c13536c0ddcfc999f8a708d0f6fd76f1
  axiom Lib.Rep_PairedAln::
      GHC.Generics.Rep Lib.PairedAln
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "PairedAln"
               "Lib"
               "primerclip-0.3.5.0-EKfIVVkqmIVLNVlfKBtA8g"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "PairedAln" 'GHC.Generics.PrefixI 'GHC.Types.True)
               ((GHC.Generics.S1
                   ('GHC.Generics.MetaSel
                      ('GHC.Base.Just "r1prim")
                      'GHC.Generics.NoSourceUnpackedness
                      'GHC.Generics.NoSourceStrictness
                      'GHC.Generics.DecidedLazy)
                   (GHC.Generics.Rec0 Lib.AlignedRead)
                 GHC.Generics.:*: GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "r2prim")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 Lib.AlignedRead))
                GHC.Generics.:*: (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "r1secs")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 [Lib.AlignedRead])
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "r2secs")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 [Lib.AlignedRead]))))
8c7f5d294706d5be2e2968524bb42a6a
  axiom Lib.Rep_UChr::
      GHC.Generics.Rep Lib.UChr
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "UChr"
               "Lib"
               "primerclip-0.3.5.0-EKfIVVkqmIVLNVlfKBtA8g"
               'GHC.Types.False)
            ((((((GHC.Generics.C1
                    ('GHC.Generics.MetaCons
                       "C1" 'GHC.Generics.PrefixI 'GHC.Types.False)
                    GHC.Generics.U1
                  GHC.Generics.:+: (GHC.Generics.C1
                                      ('GHC.Generics.MetaCons
                                         "C2" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                      GHC.Generics.U1
                                    GHC.Generics.:+: GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "C3"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1))
                 GHC.Generics.:+: (GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "C4" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: (GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "C5"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1
                                                     GHC.Generics.:+: GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "C6"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1)))
                GHC.Generics.:+: ((GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "C7" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: (GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "C8"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1
                                                     GHC.Generics.:+: GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "C9"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1))
                                  GHC.Generics.:+: ((GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "C10"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1
                                                     GHC.Generics.:+: GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "C11"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1)
                                                    GHC.Generics.:+: (GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "C12"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "C13"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1))))
               GHC.Generics.:+: (((GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "C14" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: (GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "C15"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1
                                                     GHC.Generics.:+: GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "C16"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1))
                                  GHC.Generics.:+: ((GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "C17"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1
                                                     GHC.Generics.:+: GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "C18"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1)
                                                    GHC.Generics.:+: (GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "C19"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "C20"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1)))
                                 GHC.Generics.:+: ((GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "C21"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1
                                                    GHC.Generics.:+: (GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "C22"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "CX"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1))
                                                   GHC.Generics.:+: ((GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "CY"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "CMT"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1)
                                                                     GHC.Generics.:+: (GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "Chr1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "Chr2"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1)))))
              GHC.Generics.:+: ((((GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "Chr3" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: (GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "Chr4"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1
                                                     GHC.Generics.:+: GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "Chr5"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1))
                                  GHC.Generics.:+: ((GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "Chr6"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1
                                                     GHC.Generics.:+: GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "Chr7"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1)
                                                    GHC.Generics.:+: (GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "Chr8"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "Chr9"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1)))
                                 GHC.Generics.:+: ((GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "Chr10"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1
                                                    GHC.Generics.:+: (GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "Chr11"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "Chr12"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1))
                                                   GHC.Generics.:+: ((GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "Chr13"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "Chr14"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1)
                                                                     GHC.Generics.:+: (GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "Chr15"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "Chr16"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1))))
                                GHC.Generics.:+: (((GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "Chr17"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1
                                                    GHC.Generics.:+: (GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "Chr18"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "Chr19"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1))
                                                   GHC.Generics.:+: ((GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "Chr20"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "Chr21"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1)
                                                                     GHC.Generics.:+: (GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "Chr22"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "ChrX"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1)))
                                                  GHC.Generics.:+: ((GHC.Generics.C1
                                                                       ('GHC.Generics.MetaCons
                                                                          "ChrY"
                                                                          'GHC.Generics.PrefixI
                                                                          'GHC.Types.False)
                                                                       GHC.Generics.U1
                                                                     GHC.Generics.:+: (GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "ChrM"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000207P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1))
                                                                    GHC.Generics.:+: ((GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000226P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000229P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1)
                                                                                      GHC.Generics.:+: (GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000231P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1
                                                                                                        GHC.Generics.:+: GHC.Generics.C1
                                                                                                                           ('GHC.Generics.MetaCons
                                                                                                                              "GL000210P1"
                                                                                                                              'GHC.Generics.PrefixI
                                                                                                                              'GHC.Types.False)
                                                                                                                           GHC.Generics.U1))))))
             GHC.Generics.:+: (((((GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "GL000239P1" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: (GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "GL000235P1"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1
                                                     GHC.Generics.:+: GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "GL000201P1"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1))
                                  GHC.Generics.:+: ((GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "GL000247P1"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1
                                                     GHC.Generics.:+: GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "GL000245P1"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1)
                                                    GHC.Generics.:+: (GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "GL000197P1"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000203P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1)))
                                 GHC.Generics.:+: ((GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "GL000246P1"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1
                                                    GHC.Generics.:+: (GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "GL000249P1"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000196P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1))
                                                   GHC.Generics.:+: ((GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "GL000248P1"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000244P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1)
                                                                     GHC.Generics.:+: (GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000238P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000202P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1))))
                                GHC.Generics.:+: (((GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "GL000234P1"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1
                                                    GHC.Generics.:+: (GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "GL000232P1"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000206P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1))
                                                   GHC.Generics.:+: ((GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "GL000240P1"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000236P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1)
                                                                     GHC.Generics.:+: (GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000241P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000243P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1)))
                                                  GHC.Generics.:+: ((GHC.Generics.C1
                                                                       ('GHC.Generics.MetaCons
                                                                          "GL000242P1"
                                                                          'GHC.Generics.PrefixI
                                                                          'GHC.Types.False)
                                                                       GHC.Generics.U1
                                                                     GHC.Generics.:+: (GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000230P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000237P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1))
                                                                    GHC.Generics.:+: ((GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000233P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000204P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1)
                                                                                      GHC.Generics.:+: (GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000198P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1
                                                                                                        GHC.Generics.:+: GHC.Generics.C1
                                                                                                                           ('GHC.Generics.MetaCons
                                                                                                                              "GL000208P1"
                                                                                                                              'GHC.Generics.PrefixI
                                                                                                                              'GHC.Types.False)
                                                                                                                           GHC.Generics.U1)))))
                               GHC.Generics.:+: ((((GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "GL000191P1"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1
                                                    GHC.Generics.:+: (GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "GL000227P1"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000228P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1))
                                                   GHC.Generics.:+: ((GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "GL000214P1"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000221P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1)
                                                                     GHC.Generics.:+: (GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000209P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000218P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1)))
                                                  GHC.Generics.:+: ((GHC.Generics.C1
                                                                       ('GHC.Generics.MetaCons
                                                                          "GL000220P1"
                                                                          'GHC.Generics.PrefixI
                                                                          'GHC.Types.False)
                                                                       GHC.Generics.U1
                                                                     GHC.Generics.:+: (GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000213P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000211P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1))
                                                                    GHC.Generics.:+: ((GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000199P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000217P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1)
                                                                                      GHC.Generics.:+: (GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000216P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1
                                                                                                        GHC.Generics.:+: GHC.Generics.C1
                                                                                                                           ('GHC.Generics.MetaCons
                                                                                                                              "GL000215P1"
                                                                                                                              'GHC.Generics.PrefixI
                                                                                                                              'GHC.Types.False)
                                                                                                                           GHC.Generics.U1))))
                                                 GHC.Generics.:+: (((GHC.Generics.C1
                                                                       ('GHC.Generics.MetaCons
                                                                          "GL000205P1"
                                                                          'GHC.Generics.PrefixI
                                                                          'GHC.Types.False)
                                                                       GHC.Generics.U1
                                                                     GHC.Generics.:+: (GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000219P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000224P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1))
                                                                    GHC.Generics.:+: ((GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000223P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000195P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1)
                                                                                      GHC.Generics.:+: (GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000212P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1
                                                                                                        GHC.Generics.:+: GHC.Generics.C1
                                                                                                                           ('GHC.Generics.MetaCons
                                                                                                                              "GL000222P1"
                                                                                                                              'GHC.Generics.PrefixI
                                                                                                                              'GHC.Types.False)
                                                                                                                           GHC.Generics.U1)))
                                                                   GHC.Generics.:+: ((GHC.Generics.C1
                                                                                        ('GHC.Generics.MetaCons
                                                                                           "GL000200P1"
                                                                                           'GHC.Generics.PrefixI
                                                                                           'GHC.Types.False)
                                                                                        GHC.Generics.U1
                                                                                      GHC.Generics.:+: (GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000193P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1
                                                                                                        GHC.Generics.:+: GHC.Generics.C1
                                                                                                                           ('GHC.Generics.MetaCons
                                                                                                                              "GL000194P1"
                                                                                                                              'GHC.Generics.PrefixI
                                                                                                                              'GHC.Types.False)
                                                                                                                           GHC.Generics.U1))
                                                                                     GHC.Generics.:+: ((GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000225P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1
                                                                                                        GHC.Generics.:+: GHC.Generics.C1
                                                                                                                           ('GHC.Generics.MetaCons
                                                                                                                              "GL000192P1"
                                                                                                                              'GHC.Generics.PrefixI
                                                                                                                              'GHC.Types.False)
                                                                                                                           GHC.Generics.U1)
                                                                                                       GHC.Generics.:+: (GHC.Generics.C1
                                                                                                                           ('GHC.Generics.MetaCons
                                                                                                                              "NC_007605"
                                                                                                                              'GHC.Generics.PrefixI
                                                                                                                              'GHC.Types.False)
                                                                                                                           GHC.Generics.U1
                                                                                                                         GHC.Generics.:+: GHC.Generics.C1
                                                                                                                                            ('GHC.Generics.MetaCons
                                                                                                                                               "NONE"
                                                                                                                                               'GHC.Generics.PrefixI
                                                                                                                                               'GHC.Types.False)
                                                                                                                                            GHC.Generics.U1)))))))
ee93d4d492885470c77de705e87ad292
  data RunStats
    = RunStats {alnsTotal :: GHC.Integer.Type.Integer,
                alnsMapped :: GHC.Integer.Type.Integer,
                alnsTrimd :: GHC.Integer.Type.Integer,
                alnsTrimdToZero :: GHC.Integer.Type.Integer,
                trimmedPct :: GHC.Types.Double,
                mappedPct :: GHC.Types.Double}
467baa5b695914219e544ea0fc6f4cc8
  type SAM = (Lib.Header, Lib.Alignments)
702609d8da67b0d9f67ab238dcd1cdb7
  data SAMFlag
    = SAMFlag {pairedRead :: GHC.Types.Bool,
               mateMapped :: GHC.Types.Bool,
               notMapped :: GHC.Types.Bool,
               pairNotMapped :: GHC.Types.Bool,
               queryPlus :: GHC.Types.Bool,
               mateNeg :: GHC.Types.Bool,
               fstInPair :: GHC.Types.Bool,
               sndInPair :: GHC.Types.Bool,
               notPrimary :: GHC.Types.Bool,
               failedQC :: GHC.Types.Bool,
               dupRead :: GHC.Types.Bool,
               intflag :: GHC.Types.Int}
8c7f5d294706d5be2e2968524bb42a6a
  data UChr
    = C1
    | C2
    | C3
    | C4
    | C5
    | C6
    | C7
    | C8
    | C9
    | C10
    | C11
    | C12
    | C13
    | C14
    | C15
    | C16
    | C17
    | C18
    | C19
    | C20
    | C21
    | C22
    | CX
    | CY
    | CMT
    | Chr1
    | Chr2
    | Chr3
    | Chr4
    | Chr5
    | Chr6
    | Chr7
    | Chr8
    | Chr9
    | Chr10
    | Chr11
    | Chr12
    | Chr13
    | Chr14
    | Chr15
    | Chr16
    | Chr17
    | Chr18
    | Chr19
    | Chr20
    | Chr21
    | Chr22
    | ChrX
    | ChrY
    | ChrM
    | GL000207P1
    | GL000226P1
    | GL000229P1
    | GL000231P1
    | GL000210P1
    | GL000239P1
    | GL000235P1
    | GL000201P1
    | GL000247P1
    | GL000245P1
    | GL000197P1
    | GL000203P1
    | GL000246P1
    | GL000249P1
    | GL000196P1
    | GL000248P1
    | GL000244P1
    | GL000238P1
    | GL000202P1
    | GL000234P1
    | GL000232P1
    | GL000206P1
    | GL000240P1
    | GL000236P1
    | GL000241P1
    | GL000243P1
    | GL000242P1
    | GL000230P1
    | GL000237P1
    | GL000233P1
    | GL000204P1
    | GL000198P1
    | GL000208P1
    | GL000191P1
    | GL000227P1
    | GL000228P1
    | GL000214P1
    | GL000221P1
    | GL000209P1
    | GL000218P1
    | GL000220P1
    | GL000213P1
    | GL000211P1
    | GL000199P1
    | GL000217P1
    | GL000216P1
    | GL000215P1
    | GL000205P1
    | GL000219P1
    | GL000224P1
    | GL000223P1
    | GL000195P1
    | GL000212P1
    | GL000222P1
    | GL000200P1
    | GL000193P1
    | GL000194P1
    | GL000225P1
    | GL000192P1
    | NC_007605
    | NONE
e6d630f30a199c2caf70616d168a133f
  addprimerints ::
    Lib.CMap -> Lib.CMap -> Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,1*U><L,1*U><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,A,A,A,U,U,U,U,U,U,U,U,U)>,
     Unfolding: (\ (fpmap :: Lib.CMap)
                   (rpmap :: Lib.CMap)
                   (aln :: Lib.AlignedRead) ->
                 case aln of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 let {
                   starthits :: [Lib.BedRecord]
                   = Data.Maybe.catMaybes1
                       @ Lib.BedRecord
                       (GHC.Base.map
                          @ (Data.IntMap.Internal.IntMap Lib.BedRecord)
                          @ (GHC.Base.Maybe Lib.BedRecord)
                          (let {
                             lvl1019 :: GHC.Types.Int
                             = case GHC.Integer.Type.integerToInt ds9 of wild1 { DEFAULT ->
                               GHC.Types.I# wild1 }
                           } in
                           \ (bmap :: Data.IntMap.Internal.IntMap Lib.BedRecord) ->
                           Data.IntMap.Internal.lookup @ Lib.BedRecord lvl1019 bmap)
                          (Data.Maybe.catMaybes1
                             @ (Data.IntMap.Internal.IntMap Lib.BedRecord)
                             (GHC.Types.:
                                @ (GHC.Base.Maybe (Data.IntMap.Internal.IntMap Lib.BedRecord))
                                (Lib.$slookup1
                                   @ (Data.IntMap.Internal.IntMap Lib.BedRecord)
                                   ds8
                                   fpmap)
                                (GHC.Types.[]
                                   @ (GHC.Base.Maybe
                                        (Data.IntMap.Internal.IntMap Lib.BedRecord))))))
                 } in
                 let {
                   endhits :: [Lib.BedRecord]
                   = Data.Maybe.catMaybes1
                       @ Lib.BedRecord
                       (GHC.Base.map
                          @ (Data.IntMap.Internal.IntMap Lib.BedRecord)
                          @ (GHC.Base.Maybe Lib.BedRecord)
                          (let {
                             lvl1019 :: GHC.Types.Int
                             = case GHC.Integer.Type.integerToInt ds10 of wild1 { DEFAULT ->
                               GHC.Types.I# wild1 }
                           } in
                           \ (bmap :: Data.IntMap.Internal.IntMap Lib.BedRecord) ->
                           Data.IntMap.Internal.lookup @ Lib.BedRecord lvl1019 bmap)
                          (Data.Maybe.catMaybes1
                             @ (Data.IntMap.Internal.IntMap Lib.BedRecord)
                             (GHC.Types.:
                                @ (GHC.Base.Maybe (Data.IntMap.Internal.IntMap Lib.BedRecord))
                                (Lib.$slookup1
                                   @ (Data.IntMap.Internal.IntMap Lib.BedRecord)
                                   ds8
                                   rpmap)
                                (GHC.Types.[]
                                   @ (GHC.Base.Maybe
                                        (Data.IntMap.Internal.IntMap Lib.BedRecord))))))
                 } in
                 Lib.AlignedRead
                   ds6
                   ds7
                   ds8
                   ds9
                   ds10
                   ds11
                   ds12
                   ds13
                   ds14
                   ds15
                   ds16
                   ds17
                   ds18
                   ds19
                   ds20
                   ds21
                   ds22
                   ds23
                   ds24
                   starthits
                   endhits
                   (case GHC.List.$wlenAcc
                           @ Lib.BedRecord
                           (Data.OldList.sortBy
                              @ Lib.BedRecord
                              Lib.$fOrdBedRecord_$ccompare
                              (GHC.Base.++ @ Lib.BedRecord starthits endhits))
                           0# of ww2 { DEFAULT ->
                    GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.># ww2 0#) })
                   ds28
                   ds29
                   ds30
                   ds31
                   ds32
                   ds33
                   ds34
                   ds35
                   ds36 }) -}
64daa2466add327e870d8a379f8f14a4
  addprimerintsPairedAln ::
    Lib.CMap -> Lib.CMap -> Lib.PairedAln -> Lib.PairedAln
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U><L,U><S,1*U(1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,A,A,A,U,U,U,U,U,U,U,U,U),1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,A,A,A,U,U,U,U,U,U,U,U,U),1*U,1*U)>m,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Lib.CMap) (w1 :: Lib.CMap) (w2 :: Lib.PairedAln) ->
                 case w2 of ww { Lib.PairedAln ww1 ww2 ww3 ww4 ->
                 let {
                   addpints :: Lib.AlignedRead -> Lib.AlignedRead {- Arity: 1 -}
                   = Lib.addprimerints w w1
                 } in
                 Lib.PairedAln
                   (Lib.addprimerints w w1 ww1)
                   (Lib.addprimerints w w1 ww2)
                   (GHC.Base.map @ Lib.AlignedRead @ Lib.AlignedRead addpints ww3)
                   (GHC.Base.map
                      @ Lib.AlignedRead
                      @ Lib.AlignedRead
                      addpints
                      ww4) }) -}
30f487c79c79e3d666b76352589f2204
  addtrimtag :: Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 1,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLSLLLLLLLL),1*U(U,U(U),U,U,U,U,U,U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Unfolding: (\ (a :: Lib.AlignedRead) ->
                 case a of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 let {
                   $j :: Lib.AlignedRead <join 0>
                   = case ds28 of wild1 {
                       GHC.Types.False -> wild
                       GHC.Types.True
                       -> Lib.AlignedRead
                            ds6
                            (case ds7 of wild2 { GHC.Types.I# x# ->
                             GHC.Types.I# (GHC.Prim.orI# (GHC.Prim.andI# x# -3#) 4#) })
                            ds8
                            ds9
                            ds10
                            ds11
                            ds12
                            ds13
                            ds14
                            ds15
                            ds16
                            ds17
                            ds18
                            ds19
                            ds20
                            (Data.ByteString.concat
                               (GHC.Types.:
                                  @ Data.ByteString.Internal.ByteString
                                  ds21
                                  Lib.addtrimtag6))
                            ds22
                            ds23
                            ds24
                            ds25
                            ds26
                            ds27
                            GHC.Types.True
                            ds29
                            ds30
                            ds31
                            ds32
                            ds33
                            ds34
                            ds35
                            ds36 }
                 } in
                 case ds28 of wild1 {
                   GHC.Types.False -> $j
                   GHC.Types.True
                   -> case ds13 of wild2 { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                      case Lib.addtrimtag5 of wild3 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim./=# dt3 dt7) of wild4 {
                        GHC.Types.False
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.eqAddr# dt dt4) of wild5 {
                             GHC.Types.False
                             -> case Data.ByteString.Internal.$wcompareBytes
                                       dt
                                       dt1
                                       dt2
                                       dt3
                                       dt4
                                       dt5
                                       dt6
                                       dt7 of wild6 {
                                  DEFAULT
                                  -> Lib.AlignedRead
                                       ds6
                                       ds7
                                       ds8
                                       ds9
                                       ds10
                                       ds11
                                       ds12
                                       wild2
                                       ds14
                                       ds15
                                       ds16
                                       ds17
                                       ds18
                                       ds19
                                       ds20
                                       (Data.ByteString.concat
                                          (GHC.Types.:
                                             @ Data.ByteString.Internal.ByteString
                                             ds21
                                             Lib.addtrimtag1))
                                       ds22
                                       ds23
                                       ds24
                                       ds25
                                       ds26
                                       ds27
                                       GHC.Types.True
                                       ds29
                                       ds30
                                       ds31
                                       ds32
                                       ds33
                                       ds34
                                       ds35
                                       ds36
                                  GHC.Types.EQ -> $j }
                             GHC.Types.True
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.==# dt2 dt6) of wild6 {
                                  GHC.Types.False
                                  -> case Data.ByteString.Internal.$wcompareBytes
                                            dt
                                            dt1
                                            dt2
                                            dt3
                                            dt4
                                            dt5
                                            dt6
                                            dt7 of wild7 {
                                       DEFAULT
                                       -> Lib.AlignedRead
                                            ds6
                                            ds7
                                            ds8
                                            ds9
                                            ds10
                                            ds11
                                            ds12
                                            wild2
                                            ds14
                                            ds15
                                            ds16
                                            ds17
                                            ds18
                                            ds19
                                            ds20
                                            (Data.ByteString.concat
                                               (GHC.Types.:
                                                  @ Data.ByteString.Internal.ByteString
                                                  ds21
                                                  Lib.addtrimtag1))
                                            ds22
                                            ds23
                                            ds24
                                            ds25
                                            ds26
                                            ds27
                                            GHC.Types.True
                                            ds29
                                            ds30
                                            ds31
                                            ds32
                                            ds33
                                            ds34
                                            ds35
                                            ds36
                                       GHC.Types.EQ -> $j }
                                  GHC.Types.True -> $j } }
                        GHC.Types.True
                        -> Lib.AlignedRead
                             ds6
                             ds7
                             ds8
                             ds9
                             ds10
                             ds11
                             ds12
                             wild2
                             ds14
                             ds15
                             ds16
                             ds17
                             ds18
                             ds19
                             ds20
                             (Data.ByteString.concat
                                (GHC.Types.:
                                   @ Data.ByteString.Internal.ByteString
                                   ds21
                                   Lib.addtrimtag1))
                             ds22
                             ds23
                             ds24
                             ds25
                             ds26
                             ds27
                             GHC.Types.True
                             ds29
                             ds30
                             ds31
                             ds32
                             ds33
                             ds34
                             ds35
                             ds36 } } } } }) -}
d46e41f96285ea1b21fa0b4cc1e7c2c3
  addtrimtag1 :: [Data.ByteString.Internal.ByteString]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.ByteString.Internal.ByteString
                   Lib.addtrimtag4
                   Lib.addtrimtag2) -}
755199a92124f9209a8fa5096ba1a2d2
  addtrimtag2 :: [Data.ByteString.Internal.ByteString]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.ByteString.Internal.ByteString
                   Lib.addtrimtag3
                   (GHC.Types.[] @ Data.ByteString.Internal.ByteString)) -}
2a9e5ae11b6e4e5584c3668a9f7ce579
  addtrimtag3 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.addtrimtag_addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.addtrimtag_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
cc1064fef68dccab372253abf2cf21bd
  addtrimtag4 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.addtrimtag_addr#1
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.addtrimtag_addr#1
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
bbac7e47e1509e047678427a3b1de052
  addtrimtag5 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.addtrimtag_addr#2
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.addtrimtag_addr#2
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
bbbe6b55ddf64eeb4380d8904adc267f
  addtrimtag6 :: [Data.ByteString.Internal.ByteString]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.ByteString.Internal.ByteString
                   Lib.addtrimtag4
                   Lib.addtrimtag7) -}
b1d554fc1f289da23bbd7f972505e941
  addtrimtag7 :: [Data.ByteString.Internal.ByteString]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.ByteString.Internal.ByteString
                   Lib.addtrimtag8
                   (GHC.Types.[] @ Data.ByteString.Internal.ByteString)) -}
f8f831d65d5fb36d288271fc9133b21c
  addtrimtag8 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.addtrimtag_addr#3
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.addtrimtag_addr#3
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
02d3c1e195a66e04d1e40940fdc6ddcc
  addtrimtag_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("CO:Z:primer_trimmed"#) -}
2d0a741058f4a82c7fcbb7af8530fbb5
  addtrimtag_addr#1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("\t"#) -}
fb58a97d50a3863ad4116dffc9a65ed9
  addtrimtag_addr#2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("*"#) -}
c07007cb2565ad1913a0d2a6c5beeefd
  addtrimtag_addr#3 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("CO:Z:zero_alignment_length_after_primer_trim"#) -}
e504a182a5b59050051c7b4cdc20a975
  alignmentsetparser ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString [Lib.AlignedRead]
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.alignmentsetparser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <[Lib.AlignedRead]>_R)) -}
21d97e286eda8e6e0eeb71db4b618af0
  alignmentsetparser1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [Lib.AlignedRead]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [Lib.AlignedRead]
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$walignmentsetparser
                   @ r
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww8
                   w2
                   w3
                   w4 } }) -}
2f28e14360477973886c9595cb494a57
  allPairedAln ::
    (Lib.AlignedRead -> GHC.Types.Bool)
    -> Lib.PairedAln -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <C(S),C(U)><L,U(1*U,1*U,1*U,U)>,
     Unfolding: (\ (b :: Lib.AlignedRead -> GHC.Types.Bool)
                   (p :: Lib.PairedAln) ->
                 case b (case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                         ds6 }) of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case b (case p of wild1 { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                              ds7 }) of wild1 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case p of wild2 { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                           let {
                             $j :: GHC.Types.Bool <join 0>
                             = letrec {
                                 go16 :: [Lib.AlignedRead] -> GHC.Types.Bool
                                   <join 1> {- Arity: 1, Strictness: <S,1*U> -}
                                 = \ (ds10 :: [Lib.AlignedRead]) ->
                                   case ds10 of wild3 {
                                     [] -> GHC.Types.False
                                     : y ys
                                     -> case b y of wild4 {
                                          GHC.Types.False -> go16 ys
                                          GHC.Types.True -> GHC.Types.True } }
                               } in
                               go16 ds9
                           } in
                           letrec {
                             go16 :: [Lib.AlignedRead] -> GHC.Types.Bool
                               <join 1> {- Arity: 1, Strictness: <S,1*U> -}
                             = \ (ds10 :: [Lib.AlignedRead]) ->
                               case ds10 of wild3 {
                                 [] -> GHC.Types.False
                                 : y ys
                                 -> case b y of wild4 {
                                      GHC.Types.False -> go16 ys GHC.Types.True -> $j } }
                           } in
                           go16 ds8 } } }) -}
b5f7c91e0a039228d8ca476cc3bdf320
  alncount :: Lib.MidFamily -> GHC.Integer.Type.Integer
  RecSel Left Lib.MidFamily
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSLLLL),1*U(A,A,A,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MidFamily) ->
                 case ds6 of wild { Lib.MidFamily ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds12 }) -}
b5f7c91e0a039228d8ca476cc3bdf320
  alnend :: Lib.MidFamily -> GHC.Integer.Type.Integer
  RecSel Left Lib.MidFamily
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLL),1*U(A,A,1*U,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MidFamily) ->
                 case ds6 of wild { Lib.MidFamily ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds9 }) -}
4a280e6dbe0c391ede1ab9a0b0be612c
  alnparser ::
    Data.Attoparsec.ByteString.Internal.Parser Lib.AlignedRead
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.alnparser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <Lib.AlignedRead>_R)) -}
ca710819a4175fcc1a04e01c5ed1a84f
  alnparser1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.AlignedRead
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.AlignedRead
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$walnparser @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
47995498f29899956000e805c39daef3
  alnparserEOL ::
    Data.Attoparsec.ByteString.Internal.Parser Lib.AlignedRead
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.alnparserEOL1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <Lib.AlignedRead>_R)) -}
fc645bd54fa8ee34cda06f9a8417e644
  alnparserEOL1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.AlignedRead
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.AlignedRead
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$walnparserEOL @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
b5f7c91e0a039228d8ca476cc3bdf320
  alns :: Lib.MidFamily -> [Lib.AlignedRead]
  RecSel Left Lib.MidFamily
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLLLLL),1*U(A,A,A,A,1*U,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MidFamily) ->
                 case ds6 of wild { Lib.MidFamily ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds11 }) -}
ee93d4d492885470c77de705e87ad292
  alnsMapped :: Lib.RunStats -> GHC.Integer.Type.Integer
  RecSel Left Lib.RunStats
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLL),1*U(A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.RunStats) ->
                 case ds6 of wild { Lib.RunStats ds7 ds8 ds9 ds10 ds11 ds12 ->
                 ds8 }) -}
6d389fdc27e11108f0757ef0b9d67699
  alnsToPairedAln :: [Lib.AlignedRead] -> Lib.PairedAln
  {- Arity: 1, Strictness: <S,1*U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: [Lib.AlignedRead]) ->
                 case Lib.$walnsToPairedAln w of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 Lib.PairedAln ww1 ww2 ww3 ww4 }) -}
3e742a729733a432ab53180482b29e42
  alnsToPairedAln1 :: Lib.AlignedRead
  {- Strictness: x -}
ee93d4d492885470c77de705e87ad292
  alnsTotal :: Lib.RunStats -> GHC.Integer.Type.Integer
  RecSel Left Lib.RunStats
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLL),1*U(1*U,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.RunStats) ->
                 case ds6 of wild { Lib.RunStats ds7 ds8 ds9 ds10 ds11 ds12 ->
                 ds7 }) -}
ee93d4d492885470c77de705e87ad292
  alnsTrimd :: Lib.RunStats -> GHC.Integer.Type.Integer
  RecSel Left Lib.RunStats
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLL),1*U(A,A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.RunStats) ->
                 case ds6 of wild { Lib.RunStats ds7 ds8 ds9 ds10 ds11 ds12 ->
                 ds9 }) -}
ee93d4d492885470c77de705e87ad292
  alnsTrimdToZero :: Lib.RunStats -> GHC.Integer.Type.Integer
  RecSel Left Lib.RunStats
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLL),1*U(A,A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.RunStats) ->
                 case ds6 of wild { Lib.RunStats ds7 ds8 ds9 ds10 ds11 ds12 ->
                 ds10 }) -}
b5f7c91e0a039228d8ca476cc3bdf320
  alnstart :: Lib.MidFamily -> GHC.Integer.Type.Integer
  RecSel Left Lib.MidFamily
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLLLLL),1*U(A,1*U,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MidFamily) ->
                 case ds6 of wild { Lib.MidFamily ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds8 }) -}
5f1836fd5d921f2a11598949c344ef73
  anyPairedAln ::
    (Lib.AlignedRead -> GHC.Types.Bool)
    -> Lib.PairedAln -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <C(S),C(U)><L,U(1*U,1*U,1*U,U)>,
     Unfolding: (\ (b :: Lib.AlignedRead -> GHC.Types.Bool)
                   (p :: Lib.PairedAln) ->
                 case b (case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                         ds6 }) of wild {
                   GHC.Types.False
                   -> case b (case p of wild1 { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                              ds7 }) of wild1 {
                        GHC.Types.False
                        -> case p of wild2 { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                           let {
                             $j :: GHC.Types.Bool <join 0>
                             = letrec {
                                 go16 :: [Lib.AlignedRead] -> GHC.Types.Bool
                                   <join 1> {- Arity: 1, Strictness: <S,1*U> -}
                                 = \ (ds10 :: [Lib.AlignedRead]) ->
                                   case ds10 of wild3 {
                                     [] -> GHC.Types.False
                                     : y ys
                                     -> case b y of wild4 {
                                          GHC.Types.False -> go16 ys
                                          GHC.Types.True -> GHC.Types.True } }
                               } in
                               go16 ds9
                           } in
                           letrec {
                             go16 :: [Lib.AlignedRead] -> GHC.Types.Bool
                               <join 1> {- Arity: 1, Strictness: <S,1*U> -}
                             = \ (ds10 :: [Lib.AlignedRead]) ->
                               case ds10 of wild3 {
                                 [] -> $j
                                 : y ys
                                 -> case b y of wild4 {
                                      GHC.Types.False -> go16 ys
                                      GHC.Types.True -> GHC.Types.True } }
                           } in
                           go16 ds8 }
                        GHC.Types.True -> GHC.Types.True }
                   GHC.Types.True -> GHC.Types.True }) -}
c50ef606f29c48aff529f701bb03f980
  anyPrimerIntAln :: Lib.PairedAln -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(S(LLLLLLLLLLLLLLLLLLLLLSLLLLLLLLL)LLL),1*U(1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A),1*U,U)>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.PairedAln) ->
                 case w of ww { Lib.PairedAln ww1 ww2 ww3 ww4 ->
                 case ww1 of ww5 { Lib.AlignedRead ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ww36 ->
                 Lib.$wanyPrimerIntAln ww27 ww2 ww3 ww4 } }) -}
9a9be6a771105714ca44e95228f5044d
  anyPrimerIntAln_go :: [Lib.AlignedRead] -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
c13536c0ddcfc999f8a708d0f6fd76f1
  basequal :: Lib.AlignedRead -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLSLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds21 }) -}
c446e5b43f30b2ccc3b922b8a5710bef
  bedPEparser :: Data.Attoparsec.ByteString.Internal.Parser Lib.BEDPE
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.bedPEparser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <Lib.BEDPE>_R)) -}
1922a7c6b81eebcabfdff0de6749ec00
  bedPEparser1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.BEDPE
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.BEDPE
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wbedPEparser @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
629d9d543a825463dd90ec69a5fb19f7
  bedchr :: Lib.BedRecord -> Lib.UChr
  RecSel Left Lib.BedRecord
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLLL),1*U(1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.BedRecord) ->
                 case ds6 of wild { Lib.BedRecord ds7 ds8 ds9 ds10 -> ds7 }) -}
629d9d543a825463dd90ec69a5fb19f7
  bedend :: Lib.BedRecord -> GHC.Integer.Type.Integer
  RecSel Left Lib.BedRecord
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLSL),1*U(A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.BedRecord) ->
                 case ds6 of wild { Lib.BedRecord ds7 ds8 ds9 ds10 -> ds9 }) -}
d4f55e00ad089bbf4fa4a6ddf7b06ffe
  bedmaplookup ::
    GHC.Integer.Type.Integer
    -> Data.IntMap.Internal.IntMap Lib.BedRecord
    -> GHC.Base.Maybe Lib.BedRecord
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (pos1 :: GHC.Integer.Type.Integer)
                   (bmap :: Data.IntMap.Internal.IntMap Lib.BedRecord) ->
                 case GHC.Integer.Type.integerToInt pos1 of wild { DEFAULT ->
                 Data.IntMap.Internal.$wlookup @ Lib.BedRecord wild bmap }) -}
629d9d543a825463dd90ec69a5fb19f7
  bedname :: Lib.BedRecord -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.BedRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLS),1*U(A,A,A,1*U(U,U,U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.BedRecord) ->
                 case ds6 of wild { Lib.BedRecord ds7 ds8 ds9 ds10 -> ds10 }) -}
30e1d0139732502a08b98ac9ff60a33a
  bedpeToFbed :: Lib.BEDPE -> Lib.BedRecord
  {- Arity: 1, Strictness: <L,U(1*U,1*U,1*U,A,A,A,1*U)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.BEDPE) ->
                 Lib.BedRecord
                   (case w of wild { Lib.BEDPE ds6 ds7 ds8 ds9 ds10 ds11 ds12 ->
                    ds6 })
                   (case w of wild { Lib.BEDPE ds6 ds7 ds8 ds9 ds10 ds11 ds12 ->
                    ds7 })
                   (case w of wild { Lib.BEDPE ds6 ds7 ds8 ds9 ds10 ds11 ds12 ->
                    ds8 })
                   (GHC.Base.mappend
                      @ Data.ByteString.Internal.ByteString
                      Data.ByteString.Internal.$fMonoidByteString
                      (case w of wild { Lib.BEDPE ds6 ds7 ds8 ds9 ds10 ds11 ds12 ->
                       ds12 })
                      Lib.bedpeToFbed1)) -}
64d0dc50055422b803a9fdd972408fe9
  bedpeToFbed1 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.bedpeToFbed_addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.bedpeToFbed_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
7aab33ba139eb3cea7f956a51ca98bb1
  bedpeToFbed_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("_F"#) -}
bb32b8f06daa0a11387840e8b49a1bea
  bedpeToRbed :: Lib.BEDPE -> Lib.BedRecord
  {- Arity: 1, Strictness: <L,U(A,A,A,1*U,1*U,1*U,1*U)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.BEDPE) ->
                 Lib.BedRecord
                   (case w of wild { Lib.BEDPE ds6 ds7 ds8 ds9 ds10 ds11 ds12 ->
                    ds9 })
                   (case w of wild { Lib.BEDPE ds6 ds7 ds8 ds9 ds10 ds11 ds12 ->
                    ds10 })
                   (case w of wild { Lib.BEDPE ds6 ds7 ds8 ds9 ds10 ds11 ds12 ->
                    ds11 })
                   (GHC.Base.mappend
                      @ Data.ByteString.Internal.ByteString
                      Data.ByteString.Internal.$fMonoidByteString
                      (case w of wild { Lib.BEDPE ds6 ds7 ds8 ds9 ds10 ds11 ds12 ->
                       ds12 })
                      Lib.bedpeToRbed1)) -}
ccfc3d5e6dffc1f139593359bb58f9e4
  bedpeToRbed1 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.bedpeToRbed_addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.bedpeToRbed_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
cbf791e430d4d8fc12c38207a714c1e9
  bedpeToRbed_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("_R"#) -}
f1e8a13132b4d566d11f9275b6e14c57
  bedpeformat :: Lib.Opts -> GHC.Types.Bool
  RecSel Left Lib.Opts
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLLLL),1*U(1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.Opts) ->
                 case ds6 of wild { Lib.Opts ds7 ds8 ds9 ds10 ds11 -> ds7 }) -}
b27cefdd8405a17038845775c0c42c29
  bedpename :: Lib.BEDPE -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.BEDPE
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLS),1*U(A,A,A,A,A,A,1*U(U,U,U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.BEDPE) ->
                 case ds6 of wild { Lib.BEDPE ds7 ds8 ds9 ds10 ds11 ds12 ds13 ->
                 ds13 }) -}
6c33e0fc09e1e12327c2cb29c41cdf92
  bedrecparser ::
    Data.Attoparsec.ByteString.Internal.Parser Lib.BedRecord
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.bedrecparser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <Lib.BedRecord>_R)) -}
dbe429723030fab528f71fba52940dbc
  bedrecparser1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.BedRecord
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.BedRecord
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wbedrecparser @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
629d9d543a825463dd90ec69a5fb19f7
  bedstart :: Lib.BedRecord -> GHC.Integer.Type.Integer
  RecSel Left Lib.BedRecord
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSLL),1*U(A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.BedRecord) ->
                 case ds6 of wild { Lib.BedRecord ds7 ds8 ds9 ds10 -> ds8 }) -}
7aed35ffc951b84650f9d62b38271cf1
  boolZeroLengthCigar ::
    Data.ByteString.Internal.ByteString -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S(SLSS),1*U(U,U,U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.ByteString.Internal.ByteString) ->
                 case w of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wboolZeroLengthCigar ww1 ww2 ww3 ww4 }) -}
5896005333b4d59d2b59817e09fb9392
  boolZeroLengthCigar_go :: [GHC.Types.Char] -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S,1*U> -}
8576ccd727611f9c5d84d3b9b76135f3
  calcMappedCount ::
    GHC.Real.Integral i =>
    Data.Conduit.Internal.Conduit.ConduitM
      Lib.AlignedRead
      c
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      i
  {- Arity: 1, HasNoCafRefs,
     Strictness: <L,1*U(1*U(1*U(C(C1(U)),A,A,A,A,A,C(U)),A,A),A,A,A,A,A,A,A,A)> -}
e7cd9163b5c7687f9377bea4793b4518
  calcMappedCount1 ::
    (GHC.Integer.Type.Integer
     -> Data.Conduit.Internal.Pipe.Pipe
          Lib.AlignedRead
          Lib.AlignedRead
          c
          ()
          (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
          b1)
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         c
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         b1
  {- Arity: 1, Strictness: <L,C(U)> -}
72c7bda74ddf71ccd3b69a4c45291773
  calcNotMappedPct ::
    Data.Conduit.Internal.Conduit.Sink
      Lib.AlignedRead
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      GHC.Types.Double
  {- Arity: 1, Strictness: <L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Lib.calcNotMappedPct1
                  `cast`
                (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                          <Lib.AlignedRead>_N
                          <Data.Void.Void>_N
                          <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                          <GHC.Types.Double>_R)) -}
6cfdb98fa9e941998ced18992fb90278
  calcNotMappedPct1 ::
    (GHC.Types.Double
     -> Data.Conduit.Internal.Pipe.Pipe
          Lib.AlignedRead
          Lib.AlignedRead
          Data.Void.Void
          ()
          (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
          b1)
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         b1
  {- Arity: 1, Strictness: <L,C(U)>,
     Unfolding: (\ @ b1
                   (eta :: GHC.Types.Double
                           -> Data.Conduit.Internal.Pipe.Pipe
                                Lib.AlignedRead
                                Lib.AlignedRead
                                Data.Void.Void
                                ()
                                (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                                b1) ->
                 Data.Conduit.Internal.Conduit.$fApplicativeZipSink2
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ Lib.AlignedRead
                   @ (GHC.Integer.Type.Integer -> GHC.Types.Double)
                   @ GHC.Integer.Type.Integer
                   Lib.$s$fMonadResourceT
                   Lib.calcNotMappedPct3
                     `cast`
                   (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                             <Lib.AlignedRead>_N
                             <Data.Void.Void>_N
                             <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                             <GHC.Integer.Type.Integer -> GHC.Types.Double>_R))
                   Lib.calcNotMappedPct2
                     `cast`
                   (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                             <Lib.AlignedRead>_N
                             <Data.Void.Void>_N
                             <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                             <GHC.Integer.Type.Integer>_R))
                   @ b1
                   (\ (a1 :: (GHC.Integer.Type.Integer -> GHC.Types.Double,
                              GHC.Integer.Type.Integer)) ->
                    eta (case a1 of wild { (,) x ds6 -> x ds6 }))) -}
48ecd2dcb029c9bc13f4f37229269af0
  calcNotMappedPct2 ::
    (GHC.Integer.Type.Integer
     -> Data.Conduit.Internal.Pipe.Pipe
          Lib.AlignedRead
          Lib.AlignedRead
          Data.Void.Void
          ()
          (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
          b)
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         b
  {- Arity: 1, Strictness: <L,C(U)>m2,
     Unfolding: (\ @ b
                   (w :: GHC.Integer.Type.Integer
                         -> Data.Conduit.Internal.Pipe.Pipe
                              Lib.AlignedRead
                              Lib.AlignedRead
                              Data.Void.Void
                              ()
                              (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                              b) ->
                 case Lib.$wloop Lib.defaultBed2 @ b w of ww { (#,#) ww1 ww2 ->
                 Data.Conduit.Internal.Pipe.NeedInput
                   @ Lib.AlignedRead
                   @ Lib.AlignedRead
                   @ Data.Void.Void
                   @ ()
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ b
                   ww1
                   ww2 }) -}
e97e5a3b655e91dcf72fba493cd61cb5
  calcNotMappedPct3 ::
    ((GHC.Integer.Type.Integer -> GHC.Types.Double)
     -> Data.Conduit.Internal.Pipe.Pipe
          Lib.AlignedRead
          Lib.AlignedRead
          Data.Void.Void
          ()
          (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
          b1)
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         b1
  {- Arity: 1, Strictness: <L,C(U)> -}
5222a667e4f8e210d1d1fbb2ea2e19b7
  calcRunStats ::
    Data.Conduit.Internal.Conduit.ZipSink
      Lib.AlignedRead
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      Lib.RunStats
  {- Arity: 1, Strictness: <L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Lib.calcRunStats1
                  `cast`
                (Trans
                     (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                               <Lib.AlignedRead>_N
                               <Data.Void.Void>_N
                               <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                               <Lib.RunStats>_R))
                     (Sym (Data.Conduit.Internal.Conduit.N:ZipSink[0]
                               <Lib.AlignedRead>_N) <Control.Monad.Trans.Resource.Internal.ResourceT
                                                       GHC.Types.IO>_N <Lib.RunStats>_N)) -}
47fa3e255ee010376f4da62133896e78
  calcRunStats1 ::
    (Lib.RunStats
     -> Data.Conduit.Internal.Pipe.Pipe
          Lib.AlignedRead
          Lib.AlignedRead
          Data.Void.Void
          ()
          (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
          b1)
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         b1
  {- Arity: 1, Strictness: <L,C(U)>,
     Unfolding: (\ @ b1
                   (eta :: Lib.RunStats
                           -> Data.Conduit.Internal.Pipe.Pipe
                                Lib.AlignedRead
                                Lib.AlignedRead
                                Data.Void.Void
                                ()
                                (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                                b1) ->
                 Data.Conduit.Internal.Conduit.$fApplicativeZipSink2
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ Lib.AlignedRead
                   @ (GHC.Integer.Type.Integer -> Lib.RunStats)
                   @ GHC.Integer.Type.Integer
                   Lib.$s$fMonadResourceT
                   Lib.calcRunStats3
                     `cast`
                   (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                             <Lib.AlignedRead>_N
                             <Data.Void.Void>_N
                             <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                             <GHC.Integer.Type.Integer -> Lib.RunStats>_R))
                   (Lib.calcRunStats2 @ Data.Void.Void)
                     `cast`
                   (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                             <Lib.AlignedRead>_N
                             <Data.Void.Void>_N
                             <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                             <GHC.Integer.Type.Integer>_R))
                   @ b1
                   (\ (a1 :: (GHC.Integer.Type.Integer -> Lib.RunStats,
                              GHC.Integer.Type.Integer)) ->
                    eta (case a1 of wild { (,) x ds6 -> x ds6 }))) -}
1147ca2ec65a7cc301edeeebccfeb4aa
  calcRunStats2 ::
    (GHC.Integer.Type.Integer
     -> Data.Conduit.Internal.Pipe.Pipe
          Lib.AlignedRead
          Lib.AlignedRead
          c
          ()
          (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
          b1)
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         c
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         b1
  {- Arity: 1, Strictness: <L,C(U)> -}
daf026f81668a3bd73072e19b3835e63
  calcRunStats3 ::
    ((GHC.Integer.Type.Integer -> Lib.RunStats)
     -> Data.Conduit.Internal.Pipe.Pipe
          Lib.AlignedRead
          Lib.AlignedRead
          Data.Void.Void
          ()
          (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
          b1)
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         b1
  {- Arity: 1, Strictness: <L,C(U)>,
     Unfolding: (\ @ b1
                   (eta :: (GHC.Integer.Type.Integer -> Lib.RunStats)
                           -> Data.Conduit.Internal.Pipe.Pipe
                                Lib.AlignedRead
                                Lib.AlignedRead
                                Data.Void.Void
                                ()
                                (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                                b1) ->
                 Data.Conduit.Internal.Conduit.$fApplicativeZipSink2
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ Lib.AlignedRead
                   @ (GHC.Integer.Type.Integer
                      -> GHC.Integer.Type.Integer -> Lib.RunStats)
                   @ GHC.Integer.Type.Integer
                   Lib.$s$fMonadResourceT
                   Lib.calcRunStats5
                     `cast`
                   (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                             <Lib.AlignedRead>_N
                             <Data.Void.Void>_N
                             <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                             <GHC.Integer.Type.Integer
                              -> GHC.Integer.Type.Integer -> Lib.RunStats>_R))
                   (Lib.calcRunStats4 @ Data.Void.Void)
                     `cast`
                   (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                             <Lib.AlignedRead>_N
                             <Data.Void.Void>_N
                             <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                             <GHC.Integer.Type.Integer>_R))
                   @ b1
                   (\ (a1 :: (GHC.Integer.Type.Integer
                              -> GHC.Integer.Type.Integer -> Lib.RunStats,
                              GHC.Integer.Type.Integer)) ->
                    eta (case a1 of wild { (,) x ds6 -> x ds6 }))) -}
2bdec049a9a2795c3b260994fbc68585
  calcRunStats4 ::
    (GHC.Integer.Type.Integer
     -> Data.Conduit.Internal.Pipe.Pipe
          Lib.AlignedRead
          Lib.AlignedRead
          c
          ()
          (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
          b1)
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         c
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         b1
  {- Arity: 1, Strictness: <L,C(U)> -}
947357b8967af93bf00c56a3dc9dd099
  calcRunStats5 ::
    ((GHC.Integer.Type.Integer
      -> GHC.Integer.Type.Integer -> Lib.RunStats)
     -> Data.Conduit.Internal.Pipe.Pipe
          Lib.AlignedRead
          Lib.AlignedRead
          Data.Void.Void
          ()
          (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
          b1)
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         b1
  {- Arity: 1, Strictness: <L,C(U)>,
     Unfolding: (\ @ b1
                   (eta :: (GHC.Integer.Type.Integer
                            -> GHC.Integer.Type.Integer -> Lib.RunStats)
                           -> Data.Conduit.Internal.Pipe.Pipe
                                Lib.AlignedRead
                                Lib.AlignedRead
                                Data.Void.Void
                                ()
                                (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                                b1) ->
                 Data.Conduit.Internal.Conduit.$fApplicativeZipSink2
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ Lib.AlignedRead
                   @ (GHC.Integer.Type.Integer
                      -> GHC.Integer.Type.Integer
                      -> GHC.Integer.Type.Integer
                      -> Lib.RunStats)
                   @ GHC.Integer.Type.Integer
                   Lib.$s$fMonadResourceT
                   Lib.calcRunStats6
                     `cast`
                   (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                             <Lib.AlignedRead>_N
                             <Data.Void.Void>_N
                             <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                             <GHC.Integer.Type.Integer
                              -> GHC.Integer.Type.Integer
                              -> GHC.Integer.Type.Integer
                              -> Lib.RunStats>_R))
                   (Lib.calcMappedCount1 @ Data.Void.Void)
                     `cast`
                   (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                             <Lib.AlignedRead>_N
                             <Data.Void.Void>_N
                             <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                             <GHC.Integer.Type.Integer>_R))
                   @ b1
                   (\ (a1 :: (GHC.Integer.Type.Integer
                              -> GHC.Integer.Type.Integer
                              -> GHC.Integer.Type.Integer
                              -> Lib.RunStats,
                              GHC.Integer.Type.Integer)) ->
                    eta (case a1 of wild { (,) x ds6 -> x ds6 }))) -}
1f1627efa49efb5a8413d922c9235d57
  calcRunStats6 ::
    ((GHC.Integer.Type.Integer
      -> GHC.Integer.Type.Integer
      -> GHC.Integer.Type.Integer
      -> Lib.RunStats)
     -> Data.Conduit.Internal.Pipe.Pipe
          Lib.AlignedRead
          Lib.AlignedRead
          Data.Void.Void
          ()
          (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
          b1)
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         b1
  {- Arity: 1, Strictness: <L,C(U)>m2, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ @ b1
                   (w :: (GHC.Integer.Type.Integer
                          -> GHC.Integer.Type.Integer
                          -> GHC.Integer.Type.Integer
                          -> Lib.RunStats)
                         -> Data.Conduit.Internal.Pipe.Pipe
                              Lib.AlignedRead
                              Lib.AlignedRead
                              Data.Void.Void
                              ()
                              (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                              b1) ->
                 case Lib.$wds @ b1 w of ww { (#,#) ww1 ww2 ->
                 Data.Conduit.Internal.Pipe.NeedInput
                   @ Lib.AlignedRead
                   @ Lib.AlignedRead
                   @ Data.Void.Void
                   @ ()
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ b1
                   ww1
                   ww2 }) -}
277e954289db0b05949f5f7a36ea25f2
  calcTrimdToZero ::
    GHC.Real.Integral i =>
    Data.Conduit.Internal.Conduit.ConduitM
      Lib.AlignedRead
      c
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      i
  {- Arity: 1, HasNoCafRefs,
     Strictness: <L,1*U(1*U(1*U(C(C1(U)),A,A,A,A,A,C(U)),A,A),A,A,A,A,A,A,A,A)> -}
3bec0d942facd6e40c7026369d4f862a
  calcTrimmedPct ::
    Data.Conduit.Internal.Conduit.Sink
      Lib.AlignedRead
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      GHC.Types.Double
  {- Arity: 1, Strictness: <L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Lib.calcTrimmedPct1
                  `cast`
                (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                          <Lib.AlignedRead>_N
                          <Data.Void.Void>_N
                          <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                          <GHC.Types.Double>_R)) -}
634b430db34a8c801fbf96330bc34b4a
  calcTrimmedPct1 ::
    (GHC.Types.Double
     -> Data.Conduit.Internal.Pipe.Pipe
          Lib.AlignedRead
          Lib.AlignedRead
          Data.Void.Void
          ()
          (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
          b1)
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         b1
  {- Arity: 1, Strictness: <L,C(U)>,
     Unfolding: (\ @ b1
                   (eta :: GHC.Types.Double
                           -> Data.Conduit.Internal.Pipe.Pipe
                                Lib.AlignedRead
                                Lib.AlignedRead
                                Data.Void.Void
                                ()
                                (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                                b1) ->
                 Data.Conduit.Internal.Conduit.$fApplicativeZipSink2
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ Lib.AlignedRead
                   @ (GHC.Integer.Type.Integer -> GHC.Types.Double)
                   @ GHC.Integer.Type.Integer
                   Lib.$s$fMonadResourceT
                   Lib.calcTrimmedPct3
                     `cast`
                   (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                             <Lib.AlignedRead>_N
                             <Data.Void.Void>_N
                             <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                             <GHC.Integer.Type.Integer -> GHC.Types.Double>_R))
                   Lib.calcTrimmedPct2
                     `cast`
                   (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                             <Lib.AlignedRead>_N
                             <Data.Void.Void>_N
                             <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                             <GHC.Integer.Type.Integer>_R))
                   @ b1
                   (\ (a1 :: (GHC.Integer.Type.Integer -> GHC.Types.Double,
                              GHC.Integer.Type.Integer)) ->
                    eta (case a1 of wild { (,) x ds6 -> x ds6 }))) -}
731d21f8b5b89775c618b34e040cb5c7
  calcTrimmedPct2 ::
    (GHC.Integer.Type.Integer
     -> Data.Conduit.Internal.Pipe.Pipe
          Lib.AlignedRead
          Lib.AlignedRead
          Data.Void.Void
          ()
          (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
          b)
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         b
  {- Arity: 1, Strictness: <L,C(U)>m2,
     Unfolding: (\ @ b
                   (w :: GHC.Integer.Type.Integer
                         -> Data.Conduit.Internal.Pipe.Pipe
                              Lib.AlignedRead
                              Lib.AlignedRead
                              Data.Void.Void
                              ()
                              (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                              b) ->
                 case Lib.$wloop2 Lib.defaultBed2 @ b w of ww { (#,#) ww1 ww2 ->
                 Data.Conduit.Internal.Pipe.NeedInput
                   @ Lib.AlignedRead
                   @ Lib.AlignedRead
                   @ Data.Void.Void
                   @ ()
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ b
                   ww1
                   ww2 }) -}
1deb210dc27cda9a2e6cd761e3fffede
  calcTrimmedPct3 ::
    ((GHC.Integer.Type.Integer -> GHC.Types.Double)
     -> Data.Conduit.Internal.Pipe.Pipe
          Lib.AlignedRead
          Lib.AlignedRead
          Data.Void.Void
          ()
          (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
          b1)
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         b1
  {- Arity: 1, Strictness: <L,C(U)> -}
c372b225fde89b91b874c1645400a0d7
  calculateTrimStats ::
    Data.Conduit.Internal.Conduit.ConduitM
      Lib.AlignedRead
      c
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      GHC.Integer.Type.Integer
  {- Arity: 1, Strictness: <L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Lib.calcRunStats4
                  `cast`
                (forall (c2 :: <*>_N).
                 Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                          <Lib.AlignedRead>_N
                          <c2>_N
                          <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                          <GHC.Integer.Type.Integer>_R)) -}
531d56730d3834a20371c40417479a4c
  checkChromNameMatchStatus ::
    Lib.Header -> Lib.BED -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,U><S(SSS),1*U(U,U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.checkChromNameMatchStatus1
                  `cast`
                (<Lib.Header>_R
                 ->_R <Lib.BED>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
5e1d2336b4dcd99061aa748f97b0abc6
  checkChromNameMatchStatus1 ::
    Lib.Header
    -> Lib.BED
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U><S(SSS),1*U(U,U,U)><S,U>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Lib.Header)
                   (w1 :: Lib.BED)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w1 of ww { Data.Vector.Vector ww1 ww2 ww3 ->
                 Lib.$wcheckChromNameMatchStatus w ww1 ww2 ww3 w2 }) -}
d1e212a3d112084e024d00aacc8de1f2
  checkChromNameMatchStatus2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Lib.checkChromNameMatchStatus3) -}
b7f5d86206e6e657e407ddd7764e19df
  checkChromNameMatchStatus3 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("SAM and BED chromosome name formats match."#) -}
7a019d037d1a55d833ba6a066d14ed74
  checkChromNameMatchStatus4 :: GHC.Types.IO ()
  {- Strictness: x -}
037f673e458e799f85e1a832147bfe40
  checkChromNameMatchStatus5 ::
    Data.Either.Either GHC.Base.String Lib.UChr
  {- Strictness: x -}
948b4af653f330674747500d37e37ed7
  checkCigarSeqlen :: Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 1,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLSLLLL),1*U(U,U,U,U,U,U,U(U,U,U,U),U(U,U,U,U),U,U,U,U,U,U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Unfolding: (\ (a :: Lib.AlignedRead) ->
                 case a of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 case ds32 of wild1 {
                   GHC.Types.False
                   -> case ds13 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                      case Lib.$wsafemapcig ww1 ww2 ww3 ww4 of wild2 {
                        GHC.Base.Nothing -> Lib.defaultAlignment
                        GHC.Base.Just a1
                        -> case ds12 of ww5 { Data.ByteString.Internal.PS ww6 ww7 ww8 ww9 ->
                           case Lib.$wcigseqlenHdrPassTest ww6 ww7 ww8 ww9 ww ds19 of wild3 {
                             GHC.Types.False -> Lib.defaultAlignment
                             GHC.Types.True -> wild } } } }
                   GHC.Types.True -> wild } }) -}
fb817735862e882a06f9d2a3207b1278
  checkCigarSeqlen1 ::
    Data.Either.Either
      GHC.Base.String
      [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
  {- Strictness: x -}
dd42deec8a0e84e49683d7cc42edefd8
  checkCigarSeqlen2 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wstarcigarP @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
7375b5a119abe6d5fa7302dbd2e30e50
  checkInsertSize ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer -> Lib.PairedAln -> GHC.Types.Bool
  {- Arity: 3, Strictness: <S,U><L,U><L,U(1*U,1*U,1*U,1*U)>,
     Unfolding: (\ (minsz :: GHC.Integer.Type.Integer)
                   (maxsz :: GHC.Integer.Type.Integer)
                   (p :: Lib.PairedAln) ->
                 case GHC.Base.map
                        @ Lib.AlignedRead
                        @ GHC.Integer.Type.Integer
                        Lib.tlen
                        (GHC.Types.:
                           @ Lib.AlignedRead
                           (case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 -> ds6 })
                           (GHC.Types.:
                              @ Lib.AlignedRead
                              (case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 -> ds7 })
                              (case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                               GHC.Base.++ @ Lib.AlignedRead ds8 ds9 }))) of wild {
                   [] -> case GHC.List.minimum1 ret_ty GHC.Types.Bool of {}
                   : ipv ipv1
                   -> case GHC.Integer.Type.geInteger#
                             (GHC.List.minimum_go ipv1 ipv)
                             minsz of wild1 { DEFAULT ->
                      case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild1 of wild2 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case GHC.Integer.Type.leInteger#
                                  (GHC.List.maximum_go ipv1 ipv)
                                  maxsz of wild3 { DEFAULT ->
                           GHC.Prim.tagToEnum# @ GHC.Types.Bool wild3 } } } }) -}
2d2e83d289e6e40d77d16a5db15bd791
  checkcigseqlen :: Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 1,
     Strictness: <S(LLLLLLLS(SLSS)LLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,1*U(U,U,U,U),1*U(U,U,U,U),A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.AlignedRead) ->
                 case w of ww { Lib.AlignedRead ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ->
                 case ww8 of ww32 { Data.ByteString.Internal.PS ww33 ww34 ww35 ww36 ->
                 Lib.$wcheckcigseqlen ww7 ww33 ww34 ww35 ww36 ww14 } }) -}
9bc7b50f3f524efa2305ffb33c561b20
  checkcigseqlen2 :: Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 1,
     Strictness: <S(LLLLLLS(SLSS)LLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,1*U(U,U,U,U),1*U(U,U,U,U),A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.AlignedRead) ->
                 case w of ww { Lib.AlignedRead ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ->
                 case ww7 of ww32 { Data.ByteString.Internal.PS ww33 ww34 ww35 ww36 ->
                 Lib.$wcheckcigseqlen2 ww33 ww34 ww35 ww36 ww8 ww14 } }) -}
1b80b85809daef36425985d883c57ebe
  checknonzeroCigMatch :: Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLSLLLL),1*U(A,A,A,A,A,A,A,1*U(U,U,U,1*U),A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,1*U,A,A,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.AlignedRead) ->
                 case w of ww { Lib.AlignedRead ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ->
                 Lib.$wchecknonzeroCigMatch ww8 ww19 ww27 }) -}
68d2515b9c082d04e9e2cfcd8401a817
  checkpos :: GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer
  {- Arity: 1, HasNoCafRefs, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (i :: GHC.Integer.Type.Integer) ->
                 case GHC.Integer.Type.ltInteger#
                        i
                        Lib.defaultBed2 of wild { DEFAULT ->
                 case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild of wild1 {
                   GHC.Types.False -> i GHC.Types.True -> Lib.defaultBed2 } }) -}
b27cefdd8405a17038845775c0c42c29
  chr1 :: Lib.BEDPE -> Lib.UChr
  RecSel Left Lib.BEDPE
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLL),1*U(1*U,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.BEDPE) ->
                 case ds6 of wild { Lib.BEDPE ds7 ds8 ds9 ds10 ds11 ds12 ds13 ->
                 ds7 }) -}
b27cefdd8405a17038845775c0c42c29
  chr2 :: Lib.BEDPE -> Lib.UChr
  RecSel Left Lib.BEDPE
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLL),1*U(A,A,A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.BEDPE) ->
                 case ds6 of wild { Lib.BEDPE ds7 ds8 ds9 ds10 ds11 ds12 ds13 ->
                 ds10 }) -}
b5f7c91e0a039228d8ca476cc3bdf320
  chrom :: Lib.MidFamily -> Lib.UChr
  RecSel Left Lib.MidFamily
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLL),1*U(1*U,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MidFamily) ->
                 case ds6 of wild { Lib.MidFamily ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds7 }) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  cigar :: Lib.AlignedRead -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLSLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds13 }) -}
510a72aaea71939e9434cc22da07cf59
  cigarP ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString
      [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.cigarP1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <[(GHC.Integer.Type.Integer,
                             Data.ByteString.Internal.ByteString)]>_R)) -}
ffc5f5bd3ef6cd87f137719724ff92f8
  cigarP1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wcigarP @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  cigmap :: Lib.AlignedRead -> Lib.CigarMap
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLSLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds15 }) -}
c1d80a6f9835ec5e77f9b1a5a9743831
  cigseqlenHdrPassTest :: Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 1,
     Strictness: <S(LLLLLLS(SLSS)LLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,1*U(U,U,U,U),1*U(U,U,U,U),A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.AlignedRead) ->
                 case w of ww { Lib.AlignedRead ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ->
                 case ww7 of ww32 { Data.ByteString.Internal.PS ww33 ww34 ww35 ww36 ->
                 Lib.$wcigseqlenHdrPassTest ww33 ww34 ww35 ww36 ww8 ww14 } }) -}
d54e6006ccd777d224ef8198fecacfc5
  clearNamesAndPositions :: Lib.PairedAln -> Lib.PairedAln
  {- Arity: 1,
     Strictness: <S,1*U(1*U(U,U,A,A,U,U,U,U,U,U,A,A,A,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),1*U(U,U,A,A,U,U,U,U,U,U,A,A,A,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (p :: Lib.PairedAln) ->
                 case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                 Lib.PairedAln
                   (case ds6 of wild1 { Lib.AlignedRead ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ->
                    Lib.AlignedRead
                      ds10
                      ds11
                      Lib.NONE
                      Lib.defaultBed2
                      ds14
                      ds15
                      ds16
                      ds17
                      ds18
                      ds19
                      Lib.addtrimtag5
                      Lib.defaultBed2
                      Lib.defaultBed2
                      ds23
                      ds24
                      ds25
                      ds26
                      ds27
                      ds28
                      ds29
                      ds30
                      ds31
                      ds32
                      ds33
                      ds34
                      ds35
                      ds36
                      ds37
                      ds38
                      ds39
                      ds40 })
                   (case ds7 of wild1 { Lib.AlignedRead ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ->
                    Lib.AlignedRead
                      ds10
                      ds11
                      Lib.NONE
                      Lib.defaultBed2
                      ds14
                      ds15
                      ds16
                      ds17
                      ds18
                      ds19
                      Lib.addtrimtag5
                      Lib.defaultBed2
                      Lib.defaultBed2
                      ds23
                      ds24
                      ds25
                      ds26
                      ds27
                      ds28
                      ds29
                      ds30
                      ds31
                      ds32
                      ds33
                      ds34
                      ds35
                      ds36
                      ds37
                      ds38
                      ds39
                      ds40 })
                   ds8
                   ds9 }) -}
8fb529443189ccab2f23374b6e2f08ed
  clearNonRealCigar :: Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 1,
     Strictness: <S(LLLLLLLS(SLSS)LLLLLLLLLLLLLLLLLLLLLLL),1*U(U,U,U,U,U,U,U,U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Unfolding: (\ (a :: Lib.AlignedRead) ->
                 case a of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 case ds13 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 let {
                   $j :: Lib.AlignedRead <join 0>
                   = Lib.AlignedRead
                       ds6
                       ds7
                       ds8
                       ds9
                       ds10
                       Lib.defaultBed2
                       ds12
                       Lib.addtrimtag5
                       ds14
                       ds15
                       ds16
                       ds17
                       Lib.defaultBed2
                       ds19
                       ds20
                       ds21
                       ds22
                       ds23
                       GHC.Types.False
                       ds25
                       ds26
                       ds27
                       ds28
                       Lib.defaultBed2
                       Lib.defaultBed2
                       ds31
                       ds32
                       ds33
                       ds34
                       ds35
                       GHC.Types.True
                 } in
                 letrec {
                   go16 :: [GHC.Types.Char] -> Lib.AlignedRead
                     <join 1> {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds37 :: [GHC.Types.Char]) ->
                     case ds37 of wild1 {
                       [] -> $j
                       : y ys
                       -> case GHC.List.elem
                                 @ GHC.Types.Char
                                 GHC.Classes.$fEqChar
                                 y
                                 Lib.clearNonRealCigar1 of wild2 {
                            GHC.Types.False -> go16 ys GHC.Types.True -> wild } }
                 } in
                 go16
                   (Data.ByteString.Internal.$wunpackAppendCharsLazy
                      ww1
                      ww2
                      ww3
                      ww4
                      (GHC.Types.[] @ GHC.Types.Char)) } }) -}
650caba343eddefd9fe8dfb8c5b061e3
  clearNonRealCigar1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Lib.clearNonRealCigar2) -}
de1667da0a7f7c8c6ba5143362322c0e
  clearNonRealCigar2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("MIDN"#) -}
4345b94e5bd5a5fa13a792ffabbf8a45
  clearR1primNextFields :: Lib.PairedAln -> Lib.PairedAln
  {- Arity: 1,
     Strictness: <S(S(LLLLLLLLLLLLLLLLLLSLLLLLLLLLLLL)LLL),1*U(1*U(U,U,U,U,U,U,U,U,U,U,A,A,A,U,U,U,U,U,1*U,U,U,U,U,U,U,U,U,U,U,U,U),U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)>m,
     Unfolding: (\ (p :: Lib.PairedAln) ->
                 case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                 case ds6 of wild1 { Lib.AlignedRead ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ->
                 case ds28 of wild2 {
                   GHC.Types.False
                   -> Lib.PairedAln
                        (Lib.AlignedRead
                           ds10
                           ds11
                           Lib.NONE
                           Lib.defaultBed2
                           ds14
                           ds15
                           ds16
                           ds17
                           ds18
                           ds19
                           Lib.addtrimtag5
                           Lib.defaultBed2
                           Lib.defaultBed2
                           ds23
                           ds24
                           ds25
                           ds26
                           ds27
                           GHC.Types.False
                           ds29
                           ds30
                           ds31
                           ds32
                           ds33
                           ds34
                           ds35
                           ds36
                           ds37
                           ds38
                           ds39
                           ds40)
                        (case ds7 of wild3 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                         Lib.AlignedRead
                           ds41
                           ds42
                           Lib.NONE
                           Lib.defaultBed2
                           ds45
                           ds46
                           ds47
                           ds48
                           ds49
                           ds50
                           Lib.addtrimtag5
                           Lib.defaultBed2
                           Lib.defaultBed2
                           ds54
                           ds55
                           ds56
                           ds57
                           ds58
                           ds59
                           ds60
                           ds61
                           ds62
                           ds63
                           ds64
                           ds65
                           ds66
                           ds67
                           ds68
                           ds69
                           ds70
                           ds71 })
                        ds8
                        ds9
                   GHC.Types.True
                   -> Lib.PairedAln
                        (Lib.AlignedRead
                           ds10
                           ds11
                           ds12
                           ds13
                           ds14
                           ds15
                           ds16
                           ds17
                           ds18
                           ds19
                           Lib.addtrimtag5
                           Lib.defaultBed2
                           Lib.defaultBed2
                           ds23
                           ds24
                           ds25
                           ds26
                           ds27
                           GHC.Types.True
                           ds29
                           ds30
                           ds31
                           ds32
                           ds33
                           ds34
                           ds35
                           ds36
                           ds37
                           ds38
                           ds39
                           ds40)
                        ds7
                        ds8
                        ds9 } } }) -}
8689f01f3ea77de9e63646fc75f86afd
  clearR2primNextFields :: Lib.PairedAln -> Lib.PairedAln
  {- Arity: 1,
     Strictness: <S(LS(LLLLLLLLLLLLLLLLLLSLLLLLLLLLLLL)LL),1*U(U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),1*U(U,U,U,U,U,U,U,U,U,U,A,A,A,U,U,U,U,U,1*U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)>m,
     Unfolding: (\ (p :: Lib.PairedAln) ->
                 case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                 case ds7 of wild1 { Lib.AlignedRead ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ->
                 case ds28 of wild2 {
                   GHC.Types.False
                   -> Lib.PairedAln
                        (case ds6 of wild3 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                         Lib.AlignedRead
                           ds41
                           ds42
                           Lib.NONE
                           Lib.defaultBed2
                           ds45
                           ds46
                           ds47
                           ds48
                           ds49
                           ds50
                           Lib.addtrimtag5
                           Lib.defaultBed2
                           Lib.defaultBed2
                           ds54
                           ds55
                           ds56
                           ds57
                           ds58
                           ds59
                           ds60
                           ds61
                           ds62
                           ds63
                           ds64
                           ds65
                           ds66
                           ds67
                           ds68
                           ds69
                           ds70
                           ds71 })
                        (Lib.AlignedRead
                           ds10
                           ds11
                           Lib.NONE
                           Lib.defaultBed2
                           ds14
                           ds15
                           ds16
                           ds17
                           ds18
                           ds19
                           Lib.addtrimtag5
                           Lib.defaultBed2
                           Lib.defaultBed2
                           ds23
                           ds24
                           ds25
                           ds26
                           ds27
                           GHC.Types.False
                           ds29
                           ds30
                           ds31
                           ds32
                           ds33
                           ds34
                           ds35
                           ds36
                           ds37
                           ds38
                           ds39
                           ds40)
                        ds8
                        ds9
                   GHC.Types.True
                   -> Lib.PairedAln
                        ds6
                        (Lib.AlignedRead
                           ds10
                           ds11
                           ds12
                           ds13
                           ds14
                           ds15
                           ds16
                           ds17
                           ds18
                           ds19
                           Lib.addtrimtag5
                           Lib.defaultBed2
                           Lib.defaultBed2
                           ds23
                           ds24
                           ds25
                           ds26
                           ds27
                           GHC.Types.True
                           ds29
                           ds30
                           ds31
                           ds32
                           ds33
                           ds34
                           ds35
                           ds36
                           ds37
                           ds38
                           ds39
                           ds40)
                        ds8
                        ds9 } } }) -}
e787b72b5967e500ce2ee4fb0ce4cabe
  clip :: Lib.CigarMod -> Lib.CigarMod
  {- Arity: 1,
     Strictness: <S(LLLS(SLSS)L),1*U(U,U,U,1*U(U,U,U,U),U)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.CigarMod) ->
                 case w of ww { Lib.CigarMod ww1 ww2 ww3 ww4 ww5 ->
                 case ww4 of ww6 { Data.ByteString.Internal.PS ww7 ww8 ww9 ww10 ->
                 case Lib.$wclip
                        ww1
                        ww2
                        ww3
                        ww7
                        ww8
                        ww9
                        ww10
                        ww5 of ww11 { (#,,,,#) ww12 ww13 ww14 ww15 ww16 ->
                 Lib.CigarMod ww12 ww13 ww14 ww15 ww16 } } }) -}
860dbb9b6e71b2ea75603c876a9ee006
  collectPrimIntAlns :: [Lib.PairedAln] -> [Lib.PairedAln]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ps :: [Lib.PairedAln]) ->
                 GHC.Base.build
                   @ Lib.PairedAln
                   (\ @ b
                      (c2 :: Lib.PairedAln -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ Lib.PairedAln
                      @ b
                      (GHC.List.filterFB @ Lib.PairedAln @ b c2 Lib.anyPrimerIntAln)
                      n
                      ps)) -}
978d1882c8887a7949756ce2f83cf32d
  contractcigar ::
    Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
  {- Arity: 1, Strictness: <S(SLSS),1*U(U,U,U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.ByteString.Internal.ByteString) ->
                 case w of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wcontractcigar ww1 ww2 ww3 ww4 }) -}
da57bff22f1ccb700b5485c7c56c09ae
  contractcigar1 ::
    Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
  {- Arity: 1, Strictness: <L,U(U,U,U,U)>,
     Unfolding: (\ (x :: Data.ByteString.Internal.ByteString) ->
                 GHC.Base.mappend
                   @ Data.ByteString.Internal.ByteString
                   Data.ByteString.Internal.$fMonoidByteString
                   (case x of wild { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                    case GHC.Show.$wshowSignedInt
                           0#
                           dt3
                           (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                    let {
                      cs :: [GHC.Types.Char] = GHC.Types.: @ GHC.Types.Char ww5 ww6
                    } in
                    case GHC.List.$wlenAcc @ GHC.Types.Char cs 0# of ww { DEFAULT ->
                    Data.ByteString.Internal.$wunsafePackLenChars ww cs } } })
                   (case x of wild { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                    case GHC.Prim.tagToEnum#
                           @ GHC.Types.Bool
                           (GHC.Prim.<=# dt3 0#) of wild1 {
                      GHC.Types.False
                      -> case GHC.Prim.readWord8OffAddr#
                                @ GHC.Prim.RealWorld
                                (GHC.Prim.plusAddr# dt dt2)
                                0#
                                GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                         case GHC.Prim.touch#
                                @ 'GHC.Types.LiftedRep
                                @ GHC.ForeignPtr.ForeignPtrContents
                                dt1
                                ipv of s' { DEFAULT ->
                         case GHC.Magic.runRW#
                                @ ('GHC.Types.TupleRep
                                     '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                                @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     Data.ByteString.Internal.ByteString #)
                                (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                 case GHC.Prim.newPinnedByteArray#
                                        @ GHC.Prim.RealWorld
                                        1#
                                        s of ds7 { (#,#) ipv2 ipv3 ->
                                 let {
                                   ipv4 :: GHC.Prim.Addr#
                                   = GHC.Prim.byteArrayContents#
                                       ipv3
                                         `cast`
                                       (UnsafeCo representational (GHC.Prim.MutableByteArray#
                                                                     GHC.Prim.RealWorld) GHC.Prim.ByteArray#)
                                 } in
                                 case GHC.Prim.writeWord8OffAddr#
                                        @ GHC.Prim.RealWorld
                                        ipv4
                                        0#
                                        (GHC.Prim.narrow8Word# ipv1)
                                        ipv2 of s114 { DEFAULT ->
                                 let {
                                   ipv5 :: GHC.ForeignPtr.ForeignPtrContents
                                   = GHC.ForeignPtr.PlainPtr ipv3
                                 } in
                                 case GHC.Prim.touch#
                                        @ 'GHC.Types.LiftedRep
                                        @ GHC.ForeignPtr.ForeignPtrContents
                                        ipv5
                                        s114 of s'1 { DEFAULT ->
                                 (# s'1,
                                    Data.ByteString.Internal.PS
                                      ipv4
                                      ipv5
                                      0#
                                      1# #) } } }) of ds7 { (#,#) ipv2 ipv3 ->
                         ipv3 } } }
                      GHC.Types.True
                      -> case Lib.contractcigar2
                         ret_ty Data.ByteString.Internal.ByteString
                         of {} } })) -}
294d2f4b03968ab08ed9e6fc4acb9aff
  contractcigar2 :: GHC.Word.Word8
  {- Strictness: x -}
6e7b1f0fa3960cc070ef5b810f5fd6be
  countDs ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> GHC.Integer.Type.Integer
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (cs :: [(GHC.Integer.Type.Integer,
                            Data.ByteString.Internal.ByteString)]) ->
                 Lib.countDs_gl
                   (GHC.Base.build
                      @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                      (\ @ b
                         (c2 :: (GHC.Integer.Type.Integer,
                                 Data.ByteString.Internal.ByteString)
                                -> b -> b)[OneShot]
                         (n :: b)[OneShot] ->
                       GHC.Base.foldr
                         @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                         @ b
                         (GHC.List.filterFB
                            @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                            @ b
                            c2
                            Lib.countDs1)
                         n
                         cs))
                   Data.OldList.genericLength1) -}
43bfb9125e39011e0304e473da37b9ca
  countDs1 ::
    (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
    -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S(LS(SLSS)),1*U(A,1*U(U,U,U,U))>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: (GHC.Integer.Type.Integer,
                          Data.ByteString.Internal.ByteString)) ->
                 case w of ww { (,) ww1 ww2 ->
                 case ww2 of ww3 { Data.ByteString.Internal.PS ww4 ww5 ww6 ww7 ->
                 Lib.$wlvl2 ww4 ww5 ww6 ww7 } }) -}
ca8c3dc08f7d86cb562d74d3e9bdd747
  countDs2 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.countDs_addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.countDs_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
199e138cabc118b5a3874528b9babe60
  countDs_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("D"#) -}
61647bcd0f87c1a3daa7687b49ecc38e
  countDs_gl ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
cd55bc210d2654fe8e7e77ec24553008
  createprimerbedmaps ::
    Lib.Opts
    -> GHC.Types.IO
         (Data.Map.Internal.Map
            Lib.UChr (Data.IntMap.Internal.IntMap Lib.BedRecord),
          Data.Map.Internal.Map
            Lib.UChr (Data.IntMap.Internal.IntMap Lib.BedRecord))
  {- Arity: 2, Strictness: <S(SLLLL),1*U(1*U,A,U,A,A)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.createprimerbedmaps1
                  `cast`
                (<Lib.Opts>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <(Data.Map.Internal.Map
                                   Lib.UChr (Data.IntMap.Internal.IntMap Lib.BedRecord),
                                 Data.Map.Internal.Map
                                   Lib.UChr (Data.IntMap.Internal.IntMap Lib.BedRecord))>_R)) -}
77b557df7714d8dbcac0b42225286673
  createprimerbedmaps1 ::
    Lib.Opts
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Data.Map.Internal.Map
             Lib.UChr (Data.IntMap.Internal.IntMap Lib.BedRecord),
           Data.Map.Internal.Map
             Lib.UChr (Data.IntMap.Internal.IntMap Lib.BedRecord)) #)
  {- Arity: 2, Strictness: <S(SLLLL),1*U(1*U,A,U,A,A)><S,U>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.Opts) (w1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Lib.Opts ww1 ww2 ww3 ww4 ww5 ->
                 Lib.$wcreateprimerbedmaps ww1 ww3 w1 }) -}
76a1e8d4b09fe34bcd6601d8c9de246c
  createprimerbedmaps10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Lib.createprimerbedmaps11) -}
4bdd9eb7d31e9d9d4b3f7b9d7e5a33eb
  createprimerbedmaps11 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: (" master records failed to parse (see masterparsefails.log)\n"#) -}
0e3fa4bd332c3ffd0c56c3134758240e
  createprimerbedmaps12 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (" of "#) -}
d049f07b2d11ac6e9ebc4f954b646d26
  createprimerbedmaps13 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("WARNING: "#) -}
4eecaff014887514f5210f3f1044cba4
  createprimerbedmaps14 ::
    Data.ByteString.Internal.ByteString
    -> Data.Either.Either GHC.Base.String Lib.MasterRecord
  {- Arity: 1,
     Unfolding: (Data.Attoparsec.ByteString.Internal.parseOnly
                   @ Lib.MasterRecord
                   Lib.createprimerbedmaps15
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                             <Data.ByteString.Internal.ByteString>_N <Lib.MasterRecord>_R))) -}
adaac010642361b038fd8db1398b0e3c
  createprimerbedmaps15 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.MasterRecord
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.MasterRecord
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wmasterparser @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
b7d2c14f892da7bcb38eba4217cb1d4f
  createprimerbedmaps16 ::
    GHC.Types.Int
    -> Data.Either.Either GHC.Base.String Lib.MasterRecord
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><S,1*U>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds6 :: GHC.Types.Int)
                   (x :: Data.Either.Either
                           GHC.Base.String Lib.MasterRecord)[OneShot] ->
                 Data.Either.isRight @ GHC.Base.String @ Lib.MasterRecord x) -}
1737346025dc51d894199e792e08da9f
  createprimerbedmaps2 ::
    GHC.IO.FilePath
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [Lib.BEDPE] #)
  {- Arity: 2, Strictness: <L,U><S,U> -}
8fd995ae5f97720b03692e465dafb63c
  createprimerbedmaps3 ::
    Lib.BedRecord -> Lib.BedRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(U,A,A,A)><S(SLLL),1*U(U,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.BedRecord) (y :: Lib.BedRecord) ->
                 case x of wild { Lib.BedRecord ds6 ds7 ds8 ds9 ->
                 case ds6 of x1 { DEFAULT ->
                 case y of wild1 { Lib.BedRecord ds10 ds11 ds12 ds13 ->
                 case ds10 of x2 { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x1 of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x2 of b# { DEFAULT ->
                 GHC.Prim.tagToEnum#
                   @ GHC.Types.Bool
                   (GHC.Prim.==# a# b#) } } } } } }) -}
b56f6eef6bde4c9b2a375c6eb553ffb8
  createprimerbedmaps4 ::
    GHC.IO.FilePath
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [Lib.MasterRecord] #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (fp :: GHC.IO.FilePath)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case System.IO.withBinaryFile1
                        @ Data.ByteString.Internal.ByteString
                        fp
                        GHC.IO.IOMode.ReadMode
                        Data.ByteString.readFile2
                          `cast`
                        (<GHC.IO.Handle.Types.Handle>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Data.ByteString.Internal.ByteString>_R))
                        eta of ds6 { (#,#) ipv ipv1 ->
                 let {
                   ipv2 :: [Data.ByteString.Internal.ByteString]
                   = case ipv1 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                     Data.ByteString.Char8.$wlines ww1 ww2 ww3 ww4 }
                 } in
                 let {
                   ds7 :: (Data.Map.Internal.Map
                             GHC.Types.Int
                             (Data.Either.Either GHC.Base.String Lib.MasterRecord),
                           Data.Map.Internal.Map
                             GHC.Types.Int
                             (Data.Either.Either GHC.Base.String Lib.MasterRecord))
                   = case Data.Map.Internal.$wpoly_go3
                            @ GHC.Types.Int
                            @ (Data.Either.Either GHC.Base.String Lib.MasterRecord)
                            Lib.createprimerbedmaps16
                            (Lib.$sfromList
                               @ (Data.Either.Either GHC.Base.String Lib.MasterRecord)
                               (Lib.createprimerbedmaps_go1
                                  0#
                                  (GHC.Base.map
                                     @ Data.ByteString.Internal.ByteString
                                     @ (Data.Either.Either GHC.Base.String Lib.MasterRecord)
                                     Lib.createprimerbedmaps14
                                     ipv2))) of ww { (#,#) ww1 ww2 ->
                     (ww1, ww2) }
                 } in
                 let {
                   succs :: [Lib.MasterRecord]
                   = case ds7 of wild { (,) succm failm ->
                     Lib.createprimerbedmaps_go13
                       (GHC.Types.[] @ Lib.MasterRecord)
                       succm }
                 } in
                 let {
                   failedlinenums :: [GHC.Types.Int]
                   = case ds7 of wild { (,) succm failm ->
                     Data.Map.Internal.keys_go
                       @ GHC.Types.Int
                       @ (Data.Either.Either GHC.Base.String Lib.MasterRecord)
                       (GHC.Types.[] @ GHC.Types.Int)
                       failm }
                 } in
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        (case GHC.List.$wlenAcc
                                @ Data.ByteString.Internal.ByteString
                                ipv2
                                0# of ww2 { DEFAULT ->
                         case GHC.List.$wlenAcc
                                @ Lib.MasterRecord
                                succs
                                0# of ww1 { DEFAULT ->
                         Lib.$wparsechkMaster ww2 ww1 failedlinenums } })
                        GHC.Types.True
                        ipv of ds8 { (#,#) ipv3 ipv4 ->
                 case System.IO.withBinaryFile1
                        @ ()
                        Lib.createprimerbedmaps5
                        GHC.IO.IOMode.WriteMode
                        (\ (ds9 :: GHC.IO.Handle.Types.Handle)[OneShot]
                           (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case Data.ByteString.Char8.unlines
                                (GHC.Base.map
                                   @ GHC.Types.Int
                                   @ Data.ByteString.Internal.ByteString
                                   (GHC.List.!! @ Data.ByteString.Internal.ByteString ipv2)
                                   failedlinenums) of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                         Data.ByteString.$whPut ds9 ww1 ww2 ww3 ww4 eta1 })
                          `cast`
                        (<GHC.IO.Handle.Types.Handle>_R
                         ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                        ipv3 of ds9 { (#,#) ipv5 ipv6 ->
                 (# ipv5, succs #) } } }) -}
08e97542f847b841a2f59c7c90abd132
  createprimerbedmaps5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Lib.createprimerbedmaps6) -}
718cae6a530f009986314adc018b5ad8
  createprimerbedmaps6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("masterparsefails.log"#) -}
b2093d60679bb1e6ff86b3368b08b02e
  createprimerbedmaps7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Lib.createprimerbedmaps8) -}
9d723478eef70069ffdbf7c4f1fad613
  createprimerbedmaps8 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: (" master records parsed successfully.\n"#) -}
7c1f173f9424907d29e60fde7b354201
  createprimerbedmaps9 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("all "#) -}
4314ead77f637747838f404ddda34ab2
  createprimerbedmaps_go ::
    [[Lib.BedRecord]]
    -> [Data.IntMap.Internal.IntMap Lib.BedRecord]
    -> [(Lib.UChr, Data.IntMap.Internal.IntMap Lib.BedRecord)]
  {- Arity: 2, Strictness: <S,1*U><L,1*U> -}
3968d3d06594b4f1c5639f0324aafeac
  createprimerbedmaps_go1 ::
    GHC.Prim.Int#
    -> [Data.Either.Either GHC.Base.String Lib.MasterRecord]
    -> [(GHC.Types.Int,
         Data.Either.Either GHC.Base.String Lib.MasterRecord)]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U> -}
7d81ad391e6af5b6ab4cdc968347b29b
  createprimerbedmaps_go13 ::
    [Lib.MasterRecord]
    -> Data.Map.Internal.Map
         GHC.Types.Int (Data.Either.Either GHC.Base.String Lib.MasterRecord)
    -> [Lib.MasterRecord]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U><S,1*U> -}
6f19773577bdf1a116e6a2279d330c12
  currpos :: Lib.CigarMod -> GHC.Integer.Type.Integer
  RecSel Left Lib.CigarMod
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLLLL),1*U(1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.CigarMod) ->
                 case ds6 of wild { Lib.CigarMod ds7 ds8 ds9 ds10 ds11 -> ds7 }) -}
f65fafb59c97a32a9e5a1ee1ebd39f80
  defaultAlignment :: Lib.AlignedRead
  {- Unfolding: (Lib.AlignedRead
                   Lib.defaultAlignment3
                   Lib.$fShowAlignedRead2
                   Lib.NONE
                   Lib.defaultBed2
                   Lib.defaultBed2
                   Lib.defaultBed2
                   Lib.addtrimtag5
                   Lib.addtrimtag5
                   Lib.defaultAlignment_v
                   Lib.defaultAlignment_v
                   Lib.addtrimtag5
                   Lib.defaultBed2
                   Lib.defaultBed2
                   Lib.defaultAlignment1
                   Lib.defaultAlignment1
                   Lib.defaultAlignment1
                   Lib.defaultAlignment1
                   GHC.Types.False
                   GHC.Types.False
                   (GHC.Types.[] @ Lib.BedRecord)
                   (GHC.Types.[] @ Lib.BedRecord)
                   GHC.Types.False
                   GHC.Types.False
                   Lib.defaultBed2
                   Lib.defaultBed2
                   (GHC.Types.[] @ Data.ByteString.Internal.ByteString)
                   GHC.Types.False
                   Lib.defaultAlignment1
                   Lib.defaultAlignment1
                   Lib.defaultBed
                   GHC.Types.False) -}
b63906bb7cc32acbe88272e255fe4cf5
  defaultAlignment1 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.List.$wlenAcc
                        @ GHC.Types.Char
                        (GHC.Types.[] @ GHC.Types.Char)
                        0# of ww { DEFAULT ->
                 Data.ByteString.Internal.$wunsafePackLenChars
                   ww
                   (GHC.Types.[] @ GHC.Types.Char) }) -}
23709f06b4058313cdf663b3130409ad
  defaultAlignment2 ::
    (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
  {- Strictness: m,
     Unfolding: ((Lib.defaultBed2, Lib.addtrimtag5)) -}
eee2640a719c35ba3297e4237a16d22c
  defaultAlignment3 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.defaultAlignment_addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.defaultAlignment_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
772c73972cff5fc08c781bb040472065
  defaultAlignment_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("NONE"#) -}
cbe14d5418dbba9e799c6d178820b421
  defaultAlignment_v ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                   Lib.defaultAlignment2
                   (GHC.Types.[]
                      @ (GHC.Integer.Type.Integer,
                         Data.ByteString.Internal.ByteString))) -}
bfe9cbac9935f496088c74d6d99661ea
  defaultBEDPE :: Lib.BEDPE
  {- Strictness: m,
     Unfolding: (Lib.BEDPE
                   Lib.NONE
                   Lib.defaultBed2
                   Lib.defaultBed2
                   Lib.NONE
                   Lib.defaultBed2
                   Lib.defaultBed2
                   Lib.defaultBEDPE1) -}
cc5472aa30f04712a1222dbb7e479fd5
  defaultBEDPE1 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.defaultBEDPE_addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.defaultBEDPE_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
bfec85bccfaaf30af3f204fc4afce562
  defaultBEDPE_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("DEFAULTBEDPE"#) -}
fd2b9517c2b4937903ea72f30754a3ae
  defaultBed :: Lib.BedRecord
  {- Strictness: m,
     Unfolding: (Lib.BedRecord
                   Lib.NONE
                   Lib.defaultBed2
                   Lib.defaultBed2
                   Lib.defaultBed1) -}
81beeccf986d4b8dc4c598980a66270a
  defaultBed1 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.defaultBed_addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.defaultBed_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
cd7b8a218b769e621eb5e047451a452a
  defaultBed2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
4e98e554a09e272c72139a75f793f7dc
  defaultBed_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("DEFAULT"#) -}
94b6ba0d6b68d3244b30d1dfb3547202
  defaultMasterRec :: Lib.MasterRecord
  {- Unfolding: (Lib.MasterRecord
                   Lib.NONE
                   Lib.defaultBed2
                   Lib.defaultBed2
                   Lib.defaultMasterRec1
                   Lib.defaultBed2
                   Lib.defaultBed2
                   Lib.defaultBed2
                   Lib.defaultBed2
                   Lib.defaultMasterRec1
                   Lib.defaultMasterRec1
                   Lib.defaultMasterRec1
                   Lib.defaultMasterRec1) -}
fb87c5c5dce9db9d57abf57cdb0a517f
  defaultMasterRec1 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.defaultMasterRec_addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.defaultMasterRec_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
0a507fd2adc521beeafb3d94e1b4cde5
  defaultMasterRec_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("EMPTY"#) -}
2d928a21334ca0b5ceea3348acb0ac1a
  defaultMidFam :: Lib.MidFamily
  {- Strictness: m,
     Unfolding: (Lib.MidFamily
                   Lib.NONE
                   Lib.defaultBed2
                   Lib.defaultBed2
                   Lib.defaultMasterRec1
                   (GHC.Types.[] @ Lib.AlignedRead)
                   Lib.defaultBed2
                   Lib.defaultBed2
                   Lib.defaultBed2
                   Lib.defaultBed2
                   Lib.defaultBed) -}
b8ef0da688da8e11758ef8c38b0bb34c
  defaultPairedAln :: Lib.PairedAln
  {- Strictness: m,
     Unfolding: (Lib.PairedAln
                   Lib.defaultAlignment
                   Lib.defaultAlignment
                   (GHC.Types.[] @ Lib.AlignedRead)
                   (GHC.Types.[] @ Lib.AlignedRead)) -}
702609d8da67b0d9f67ab238dcd1cdb7
  dupRead :: Lib.SAMFlag -> GHC.Types.Bool
  RecSel Left Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLSL),1*U(A,A,A,A,A,A,A,A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.SAMFlag) ->
                 case ds6 of wild { Lib.SAMFlag ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds17 }) -}
b27cefdd8405a17038845775c0c42c29
  end1 :: Lib.BEDPE -> GHC.Integer.Type.Integer
  RecSel Left Lib.BEDPE
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLL),1*U(A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.BEDPE) ->
                 case ds6 of wild { Lib.BEDPE ds7 ds8 ds9 ds10 ds11 ds12 ds13 ->
                 ds9 }) -}
b27cefdd8405a17038845775c0c42c29
  end2 :: Lib.BEDPE -> GHC.Integer.Type.Integer
  RecSel Left Lib.BEDPE
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSL),1*U(A,A,A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.BEDPE) ->
                 case ds6 of wild { Lib.BEDPE ds7 ds8 ds9 ds10 ds11 ds12 ds13 ->
                 ds12 }) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  endpos :: Lib.AlignedRead -> GHC.Integer.Type.Integer
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds11 }) -}
604e1c7866541db2130de6c200d87415
  expandRefmatchedCigar ::
    Lib.CigarMap -> Data.ByteString.Internal.ByteString
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (cmap :: Lib.CigarMap) ->
                 case Data.ByteString.concat
                        (Lib.expandRefmatchedCigar_go
                           cmap) of wild { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<=# dt3 0#) of wild1 {
                   GHC.Types.False
                   -> case GHC.Magic.runRW#
                             @ ('GHC.Types.TupleRep
                                  '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                             @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                                  Data.ByteString.Internal.ByteString #)
                             (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case GHC.Prim.noDuplicate#
                                     @ GHC.Prim.RealWorld
                                     s of s' { DEFAULT ->
                              case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.<# dt3 0#) of wild2 {
                                GHC.Types.False
                                -> case GHC.Prim.newPinnedByteArray#
                                          @ GHC.Prim.RealWorld
                                          dt3
                                          s' of ds6 { (#,#) ipv ipv1 ->
                                   let {
                                     ipv2 :: GHC.Prim.Addr#
                                     = GHC.Prim.byteArrayContents#
                                         ipv1
                                           `cast`
                                         (UnsafeCo representational (GHC.Prim.MutableByteArray#
                                                                       GHC.Prim.RealWorld) GHC.Prim.ByteArray#)
                                   } in
                                   case Lib.$wgo6
                                          (GHC.Prim.plusAddr# dt dt2)
                                          ipv2
                                          (GHC.Prim.plusAddr# dt (GHC.Prim.+# dt2 dt3))
                                          ipv of ds7 { (#,#) ipv4 ipv5 ->
                                   case ipv5 of wild3 { GHC.Ptr.Ptr a1 ->
                                   case GHC.Prim.touch#
                                          @ 'GHC.Types.LiftedRep
                                          @ GHC.ForeignPtr.ForeignPtrContents
                                          dt1
                                          ipv4 of s'1 { DEFAULT ->
                                   let {
                                     ipv6 :: GHC.Prim.Int# = GHC.Prim.minusAddr# a1 ipv2
                                   } in
                                   let {
                                     ipv3 :: GHC.ForeignPtr.ForeignPtrContents
                                     = GHC.ForeignPtr.PlainPtr ipv1
                                   } in
                                   case GHC.Prim.tagToEnum#
                                          @ GHC.Types.Bool
                                          (GHC.Prim.>=# ipv6 dt3) of wild4 {
                                     GHC.Types.False
                                     -> case GHC.Prim.tagToEnum#
                                               @ GHC.Types.Bool
                                               (GHC.Prim.<# ipv6 0#) of wild5 {
                                          GHC.Types.False
                                          -> case GHC.Prim.newPinnedByteArray#
                                                    @ GHC.Prim.RealWorld
                                                    ipv6
                                                    s'1 of ds8 { (#,#) ipv7 ipv8 ->
                                             let {
                                               ipv9 :: GHC.Prim.Addr#
                                               = GHC.Prim.byteArrayContents#
                                                   ipv8
                                                     `cast`
                                                   (UnsafeCo representational (GHC.Prim.MutableByteArray#
                                                                                 GHC.Prim.RealWorld) GHC.Prim.ByteArray#)
                                             } in
                                             case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                                                   -> GHC.Prim.Addr#
                                                                                   -> GHC.Prim.Word#
                                                                                   -> GHC.Prim.State#
                                                                                        GHC.Prim.RealWorld
                                                                                   -> (# GHC.Prim.State#
                                                                                           GHC.Prim.RealWorld,
                                                                                         GHC.Prim.Addr# #)}
                                                    ipv9
                                                    ipv2
                                                    (GHC.Prim.int2Word# ipv6)
                                                    ipv7 of wild6 { (#,#) ds9 ds10 ->
                                             let {
                                               ipv10 :: GHC.ForeignPtr.ForeignPtrContents
                                               = GHC.ForeignPtr.PlainPtr ipv8
                                             } in
                                             case GHC.Prim.touch#
                                                    @ 'GHC.Types.LiftedRep
                                                    @ GHC.ForeignPtr.ForeignPtrContents
                                                    ipv10
                                                    ds9 of s'2 { DEFAULT ->
                                             case GHC.Prim.touch#
                                                    @ 'GHC.Types.LiftedRep
                                                    @ GHC.ForeignPtr.ForeignPtrContents
                                                    ipv3
                                                    s'2 of s'3 { DEFAULT ->
                                             (# s'3,
                                                Data.ByteString.Internal.PS
                                                  ipv9
                                                  ipv10
                                                  0#
                                                  ipv6 #) } } } }
                                          GHC.Types.True
                                          -> case GHC.ForeignPtr.mallocPlainForeignPtrBytes2
                                             ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                       Data.ByteString.Internal.ByteString #)
                                             of {} }
                                     GHC.Types.True
                                     -> case GHC.Prim.touch#
                                               @ 'GHC.Types.LiftedRep
                                               @ GHC.ForeignPtr.ForeignPtrContents
                                               ipv3
                                               s'1 of s'2 { DEFAULT ->
                                        (# s'2,
                                           Data.ByteString.Internal.PS
                                             ipv2
                                             ipv3
                                             0#
                                             dt3 #) } } } } } }
                                GHC.Types.True
                                -> case GHC.ForeignPtr.mallocPlainForeignPtrBytes2
                                   ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                             Data.ByteString.Internal.ByteString #)
                                   of {} } }) of ds6 { (#,#) ipv ipv1 ->
                      ipv1 }
                   GHC.Types.True -> wild } }) -}
714cead503d42afacd7316425b06cb00
  expandRefmatchedCigar_go ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> [Data.ByteString.Internal.ByteString]
  {- Arity: 1, Strictness: <S,1*U> -}
11a2c0c63a09c838774dea5b2e77e97b
  expandcigar :: Lib.CigarMap -> Data.ByteString.Internal.ByteString
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (cmap :: Lib.CigarMap) ->
                 Data.ByteString.concat (Lib.expandRefmatchedCigar_go cmap)) -}
bee2fee389aeff4e3ed7d15c664d1c78
  expandcigar1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
27b9e4a0ea707f1b200d8db845c20d5b
  expandcigar2 ::
    Lib.CigarMap
    -> [(GHC.Integer.Type.Integer,
         Data.ByteString.Internal.ByteString)]
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (cmap :: Lib.CigarMap) ->
                 case Data.ByteString.concat
                        (Lib.expandRefmatchedCigar_go
                           cmap) of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 let {
                   ops :: [Data.ByteString.Internal.ByteString]
                   = GHC.Base.map
                       @ GHC.Types.Char
                       @ Data.ByteString.Internal.ByteString
                       Data.ByteString.Char8.singleton
                       (Data.ByteString.Internal.$wunpackAppendCharsLazy
                          ww1
                          ww2
                          ww3
                          ww4
                          (GHC.Types.[] @ GHC.Types.Char))
                 } in
                 let {
                   lim :: GHC.Integer.Type.Integer
                   = Lib.expandcigar2_gl ops Data.OldList.genericLength1
                 } in
                 letrec {
                   go16 :: GHC.Integer.Type.Integer
                           -> [Data.ByteString.Internal.ByteString]
                           -> [(GHC.Integer.Type.Integer,
                                Data.ByteString.Internal.ByteString)]
                     {- Arity: 2, Strictness: <S,U><L,1*U> -}
                   = \ (x :: GHC.Integer.Type.Integer)
                       (eta :: [Data.ByteString.Internal.ByteString]) ->
                     case GHC.Integer.Type.gtInteger# x lim of wild { DEFAULT ->
                     case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild of wild1 {
                       GHC.Types.False
                       -> case eta of wild2 {
                            []
                            -> GHC.Types.[]
                                 @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                            : y ys
                            -> GHC.Types.:
                                 @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                                 (x, y)
                                 (go16 (GHC.Integer.Type.plusInteger x Lib.expandcigar1) ys) }
                       GHC.Types.True
                       -> GHC.Types.[]
                            @ (GHC.Integer.Type.Integer,
                               Data.ByteString.Internal.ByteString) } }
                 } in
                 go16 Lib.expandcigar1 ops }) -}
ec29426b61f33ebcd63aa319f1a49414
  expandcigar2_gl ::
    [Data.ByteString.Internal.ByteString]
    -> GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
c7edab082a65fa7d1bd1d1900c11eb51
  exrights :: Data.Either.Either a1 a2 -> a2
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a @ a1 (x :: Data.Either.Either a a1) ->
                 case x of wild {
                   Data.Either.Left ipv -> GHC.List.badHead @ a1
                   Data.Either.Right a2 -> a2 }) -}
d852d3153308408c8589fb27432ebec0
  exrights2 :: [a] -> GHC.Base.Maybe a
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (xs :: [a]) ->
                 case GHC.List.$wlenAcc @ a xs 0# of ww2 {
                   DEFAULT -> GHC.Base.Just @ a (GHC.List.head @ a xs)
                   0# -> GHC.Base.Nothing @ a }) -}
702609d8da67b0d9f67ab238dcd1cdb7
  failedQC :: Lib.SAMFlag -> GHC.Types.Bool
  RecSel Left Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLSLL),1*U(A,A,A,A,A,A,A,A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.SAMFlag) ->
                 case ds6 of wild { Lib.SAMFlag ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds16 }) -}
a49610febbf87e8d9b9c112697d21f5c
  filtpadassoc ::
    [(GHC.Types.Int, Data.ByteString.Internal.ByteString)]
    -> [(GHC.Types.Int, Data.ByteString.Internal.ByteString)]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (asclist :: [(GHC.Types.Int,
                                 Data.ByteString.Internal.ByteString)]) ->
                 GHC.Base.build
                   @ (GHC.Types.Int, Data.ByteString.Internal.ByteString)
                   (\ @ b
                      (c2 :: (GHC.Types.Int, Data.ByteString.Internal.ByteString)
                             -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ (GHC.Types.Int, Data.ByteString.Internal.ByteString)
                      @ b
                      (GHC.List.filterFB
                         @ (GHC.Types.Int, Data.ByteString.Internal.ByteString)
                         @ b
                         c2
                         Lib.filtpadassoc1)
                      n
                      asclist)) -}
5ff267a9264c7c70921fc3d7523483d6
  filtpadassoc1 ::
    (GHC.Types.Int, Data.ByteString.Internal.ByteString)
    -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S(LS(SLSS)),1*U(A,1*U(U,U,U,U))>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: (GHC.Types.Int, Data.ByteString.Internal.ByteString)) ->
                 case w of ww { (,) ww1 ww2 ->
                 case ww2 of ww3 { Data.ByteString.Internal.PS ww4 ww5 ww6 ww7 ->
                 Lib.$wlvl3 ww4 ww5 ww6 ww7 } }) -}
1736274264d166a0b7055d88a0e93b34
  filtpadcmap :: Lib.CigarMap -> Lib.CigarMap
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (cmap :: Lib.CigarMap) ->
                 GHC.Base.build
                   @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                   (\ @ b
                      (c2 :: (GHC.Integer.Type.Integer,
                              Data.ByteString.Internal.ByteString)
                             -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                      @ b
                      (GHC.List.filterFB
                         @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                         @ b
                         c2
                         Lib.filtpadcmap1)
                      n
                      cmap)) -}
435826e9e5b880a7bd4becaa81f1c92e
  filtpadcmap1 ::
    (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
    -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S(LS(SLSS)),1*U(A,1*U(U,U,U,U))>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: (GHC.Integer.Type.Integer,
                          Data.ByteString.Internal.ByteString)) ->
                 case w of ww { (,) ww1 ww2 ->
                 case ww2 of ww3 { Data.ByteString.Internal.PS ww4 ww5 ww6 ww7 ->
                 Lib.$wlvl4 ww4 ww5 ww6 ww7 } }) -}
4da3e122d26c4b89037833446ef97fcc
  findByQname ::
    Data.ByteString.Internal.ByteString
    -> [Lib.AlignedRead] -> [Lib.AlignedRead]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U(U,U,U,U)><S,1*U>,
     Unfolding: (\ (name :: Data.ByteString.Internal.ByteString)
                   (as :: [Lib.AlignedRead]) ->
                 GHC.List.filter
                   @ Lib.AlignedRead
                   (\ (x :: Lib.AlignedRead) ->
                    case x of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                    case ds6 of wild1 { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                    case name of wild2 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                    case GHC.Prim.tagToEnum#
                           @ GHC.Types.Bool
                           (GHC.Prim./=# dt3 dt7) of wild3 {
                      GHC.Types.False
                      -> case GHC.Prim.tagToEnum#
                                @ GHC.Types.Bool
                                (GHC.Prim.eqAddr# dt dt4) of wild4 {
                           GHC.Types.False
                           -> case Data.ByteString.Internal.$wcompareBytes
                                     dt
                                     dt1
                                     dt2
                                     dt3
                                     dt4
                                     dt5
                                     dt6
                                     dt7 of wild5 {
                                DEFAULT -> GHC.Types.False GHC.Types.EQ -> GHC.Types.True }
                           GHC.Types.True
                           -> case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.==# dt2 dt6) of wild5 {
                                GHC.Types.False
                                -> case Data.ByteString.Internal.$wcompareBytes
                                          dt
                                          dt1
                                          dt2
                                          dt3
                                          dt4
                                          dt5
                                          dt6
                                          dt7 of wild6 {
                                     DEFAULT -> GHC.Types.False GHC.Types.EQ -> GHC.Types.True }
                                GHC.Types.True -> GHC.Types.True } }
                      GHC.Types.True -> GHC.Types.False } } } })
                   as) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  fint :: Lib.AlignedRead -> [Lib.BedRecord]
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLSLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds26 }) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  flag :: Lib.AlignedRead -> GHC.Types.Int
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds8 }) -}
df3ed59359025d6ccf697b682d10911a
  flattenPairedAln :: Lib.PairedAln -> [Lib.AlignedRead]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(1*U,1*U,1*U,1*U)>,
     Unfolding: (\ (p :: Lib.PairedAln) ->
                 Data.OldList.sortBy
                   @ Lib.AlignedRead
                   Lib.$fOrdAlignedRead_$ccompare
                   (GHC.Types.:
                      @ Lib.AlignedRead
                      (case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 -> ds6 })
                      (GHC.Types.:
                         @ Lib.AlignedRead
                         (case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 -> ds7 })
                         (case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                          GHC.Base.++ @ Lib.AlignedRead ds8 ds9 })))) -}
35d315ba19dfa1515c7179a92abf32f5
  flipClrBit :: GHC.Types.Int -> GHC.Types.Int -> GHC.Types.Int
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>m,
     Unfolding: InlineRule (2, True, True)
                (\ (x :: GHC.Types.Int) (y :: GHC.Types.Int) ->
                 Data.Bits.$fBitsInt_$cclearBit y x) -}
fa01ad408c3accd04bfb3c2df9817c5f
  flipSetBit :: GHC.Types.Int -> GHC.Types.Int -> GHC.Types.Int
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,1*U(U)>m,
     Unfolding: InlineRule (2, True, True)
                (\ (x :: GHC.Types.Int) (y :: GHC.Types.Int) ->
                 Data.Bits.$fBitsInt_$csetBit y x) -}
2d83551e68c867d1f264ed1af3820e98
  flipTstBit :: GHC.Types.Int -> GHC.Types.Int -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,1*U(U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: GHC.Types.Int) (y :: GHC.Types.Int) ->
                 case y of wild { GHC.Types.I# x# ->
                 case x of wild1 { GHC.Types.I# i# ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# i# 64#) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.andI#
                             x#
                             (GHC.Prim.uncheckedIShiftL# 1# i#) of wild4 {
                        DEFAULT -> GHC.Types.True 0# -> GHC.Types.False }
                   GHC.Types.True -> GHC.Types.False } } }) -}
702609d8da67b0d9f67ab238dcd1cdb7
  fstInPair :: Lib.SAMFlag -> GHC.Types.Bool
  RecSel Left Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLSLLLLL),1*U(A,A,A,A,A,A,1*U,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.SAMFlag) ->
                 case ds6 of wild { Lib.SAMFlag ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds13 }) -}
02f33f7d5dcebf42afc1a812827e9b5a
  genLogFilePath :: GHC.IO.FilePath -> GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (fp :: GHC.IO.FilePath) ->
                 case GHC.List.$wlenAcc @ GHC.Types.Char fp 0# of ww { DEFAULT ->
                 case Data.ByteString.Internal.$wunsafePackLenChars
                        ww
                        fp of wild { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                 let {
                   parts :: [Data.ByteString.Internal.ByteString]
                   = case dt3 of ds6 {
                       DEFAULT
                       -> letrec {
                            $wloop3 :: GHC.Prim.Int# -> [Data.ByteString.Internal.ByteString]
                              {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                            = \ (ww1 :: GHC.Prim.Int#) ->
                              case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                                    -> GHC.Prim.Int#
                                                                    -> GHC.Prim.Word#
                                                                    -> GHC.Prim.State#
                                                                         GHC.Prim.RealWorld
                                                                    -> (# GHC.Prim.State#
                                                                            GHC.Prim.RealWorld,
                                                                          GHC.Prim.Addr# #)}
                                     (GHC.Prim.plusAddr# dt (GHC.Prim.+# dt2 ww1))
                                     46#
                                     (GHC.Prim.int2Word# (GHC.Prim.-# ds6 ww1))
                                     GHC.Prim.realWorld# of wild2 { (#,#) ds7 ds8 ->
                              case GHC.Prim.touch#
                                     @ 'GHC.Types.LiftedRep
                                     @ GHC.ForeignPtr.ForeignPtrContents
                                     dt1
                                     ds7 of s' { DEFAULT ->
                              case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.eqAddr# ds8 __NULL) of wild3 {
                                GHC.Types.False
                                -> let {
                                     i :: GHC.Types.Int
                                     = case GHC.Prim.touch#
                                              @ 'GHC.Types.LiftedRep
                                              @ GHC.ForeignPtr.ForeignPtrContents
                                              dt1
                                              GHC.Prim.realWorld# of s'1 { DEFAULT ->
                                       GHC.Types.I#
                                         (GHC.Prim.minusAddr# ds8 (GHC.Prim.plusAddr# dt dt2)) }
                                   } in
                                   GHC.Types.:
                                     @ Data.ByteString.Internal.ByteString
                                     (case i of wild4 { GHC.Types.I# x1 ->
                                      Data.ByteString.Internal.PS
                                        dt
                                        dt1
                                        (GHC.Prim.+# dt2 ww1)
                                        (GHC.Prim.-# x1 ww1) })
                                     (case i of wild4 { GHC.Types.I# x1 ->
                                      $wloop3 (GHC.Prim.+# x1 1#) })
                                GHC.Types.True
                                -> GHC.Types.:
                                     @ Data.ByteString.Internal.ByteString
                                     (Data.ByteString.Internal.PS
                                        dt
                                        dt1
                                        (GHC.Prim.+# dt2 ww1)
                                        (GHC.Prim.-# ds6 ww1))
                                     (GHC.Types.[] @ Data.ByteString.Internal.ByteString) } } }
                          } in
                          $wloop3 0#
                       0# -> GHC.Types.[] @ Data.ByteString.Internal.ByteString }
                 } in
                 case GHC.List.$wlenAcc
                        @ Data.ByteString.Internal.ByteString
                        parts
                        0# of ww2 { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# ww2 2#) of wild1 {
                   GHC.Types.False
                   -> case GHC.Base.mappend
                             @ Data.ByteString.Internal.ByteString
                             Data.ByteString.Internal.$fMonoidByteString
                             (case parts of wild2 {
                                [] -> GHC.List.badHead @ Data.ByteString.Internal.ByteString
                                : x ds6 -> x })
                             Lib.genLogFilePath3 of ww1 { Data.ByteString.Internal.PS ww3 ww4 ww5 ww6 ->
                      Data.ByteString.Internal.$wunpackAppendCharsLazy
                        ww3
                        ww4
                        ww5
                        ww6
                        (GHC.Types.[] @ GHC.Types.Char) }
                   GHC.Types.True -> Lib.genLogFilePath1 } } } }) -}
054dda7803156ceb51bb17b49563e57a
  genLogFilePath1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.genLogFilePath2) -}
3f76c87616d31257183a5147a6453b72
  genLogFilePath2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("primerclip_runstats.log"#) -}
29cbd242c85e008863faceda8ad968f9
  genLogFilePath3 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.genLogFilePath_addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.genLogFilePath_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
3cef5d8583b1c3811010b5e30e49cae8
  genLogFilePath_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("_primerclip_runstats.log"#) -}
7648437798da0299cd23b9fe7371ddd1
  getAlignedLength ::
    Data.ByteString.Internal.ByteString -> GHC.Integer.Type.Integer
  {- Arity: 1, Strictness: <S(SLSS),1*U(U,U,U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.ByteString.Internal.ByteString) ->
                 case w of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wgetAlignedLength ww1 ww2 ww3 ww4 }) -}
9d8eca3d7d64b633d3bb61bcf27a1d4b
  getAlignedLength_go ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
1ca676988c34ccda0e45c8a437d0af75
  getFPrimerBEDfromMaster :: Lib.MasterRecord -> Lib.BedRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <L,U(1*U,A,A,A,1*U,1*U,A,A,1*U,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (mr :: Lib.MasterRecord) ->
                 Lib.BedRecord
                   (case mr of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds6 })
                   (case mr of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds10 })
                   (case mr of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds11 })
                   (case mr of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds14 })) -}
a57a06e5a2dd15518e652bafb6febe79
  getMasterFile :: GHC.IO.FilePath -> GHC.Types.IO [Lib.MasterRecord]
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.createprimerbedmaps4
                  `cast`
                (<GHC.IO.FilePath>_R
                 ->_R Sym (GHC.Types.N:IO[0] <[Lib.MasterRecord]>_R)) -}
971fe2ae24a128305c50ba75da29680c
  getNclips ::
    [Data.ByteString.Internal.ByteString]
    -> GHC.Types.Char -> [Data.ByteString.Internal.ByteString]
  {- Arity: 2, Strictness: <S,1*U><L,U(U)>,
     Unfolding: (\ (ciggrps :: [Data.ByteString.Internal.ByteString])
                   (cigchar :: GHC.Types.Char) ->
                 letrec {
                   go16 :: [Data.ByteString.Internal.ByteString]
                           -> [Data.ByteString.Internal.ByteString]
                     {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds6 :: [Data.ByteString.Internal.ByteString]) ->
                     case ds6 of wild {
                       [] -> GHC.Types.[] @ Data.ByteString.Internal.ByteString
                       : y ys
                       -> case y of wild1 { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                          case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.<=# dt3 0#) of wild2 {
                            GHC.Types.False
                            -> case GHC.Magic.runRW#
                                      @ ('GHC.Types.TupleRep
                                           '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                                      @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                                           Data.ByteString.Internal.ByteString #)
                                      (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                       case GHC.Prim.noDuplicate#
                                              @ GHC.Prim.RealWorld
                                              s of s' { DEFAULT ->
                                       case GHC.Prim.tagToEnum#
                                              @ GHC.Types.Bool
                                              (GHC.Prim.<# dt3 0#) of wild3 {
                                         GHC.Types.False
                                         -> case GHC.Prim.newPinnedByteArray#
                                                   @ GHC.Prim.RealWorld
                                                   dt3
                                                   s' of ds7 { (#,#) ipv ipv1 ->
                                            let {
                                              ipv2 :: GHC.Prim.Addr#
                                              = GHC.Prim.byteArrayContents#
                                                  ipv1
                                                    `cast`
                                                  (UnsafeCo representational (GHC.Prim.MutableByteArray#
                                                                                GHC.Prim.RealWorld) GHC.Prim.ByteArray#)
                                            } in
                                            let {
                                              ipv3 :: GHC.ForeignPtr.ForeignPtrContents
                                              = GHC.ForeignPtr.PlainPtr ipv1
                                            } in
                                            let {
                                              lvl1019 :: Data.ByteString.Internal.ByteString
                                              = Data.ByteString.Internal.PS ipv2 ipv3 0# dt3
                                            } in
                                            letrec {
                                              $wgo40 :: GHC.Prim.Addr#
                                                        -> GHC.Prim.Addr#
                                                        -> GHC.Prim.Addr#
                                                        -> GHC.Prim.State# GHC.Prim.RealWorld
                                                        -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                              Data.ByteString.Internal.ByteString #)
                                                <join 4> {- Arity: 4,
                                                            Strictness: <S,U><S,U><S,U><S,U>,
                                                            Inline: [0] -}
                                              = \ (ww :: GHC.Prim.Addr#)
                                                  (ww1 :: GHC.Prim.Addr#)
                                                  (ww2 :: GHC.Prim.Addr#)
                                                  (w :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                                case GHC.Prim.tagToEnum#
                                                       @ GHC.Types.Bool
                                                       (GHC.Prim.eqAddr# ww ww2) of wild4 {
                                                  GHC.Types.False
                                                  -> case GHC.Prim.readWord8OffAddr#
                                                            @ GHC.Prim.RealWorld
                                                            ww
                                                            0#
                                                            w of ds8 { (#,#) ipv4 ipv5 ->
                                                     case cigchar of wild5 { GHC.Types.C# y1 ->
                                                     case GHC.Prim.tagToEnum#
                                                            @ GHC.Types.Bool
                                                            (GHC.Prim.eqChar#
                                                               (GHC.Prim.chr#
                                                                  (GHC.Prim.word2Int# ipv5))
                                                               y1) of wild6 {
                                                       GHC.Types.False
                                                       -> $wgo40
                                                            (GHC.Prim.plusAddr# ww 1#)
                                                            ww1
                                                            ww2
                                                            ipv4
                                                       GHC.Types.True
                                                       -> case GHC.Prim.writeWord8OffAddr#
                                                                 @ GHC.Prim.RealWorld
                                                                 ww1
                                                                 0#
                                                                 ipv5
                                                                 ipv4 of s114 { DEFAULT ->
                                                          $wgo40
                                                            (GHC.Prim.plusAddr# ww 1#)
                                                            (GHC.Prim.plusAddr# ww1 1#)
                                                            ww2
                                                            s114 } } } }
                                                  GHC.Types.True
                                                  -> case GHC.Prim.touch#
                                                            @ 'GHC.Types.LiftedRep
                                                            @ GHC.ForeignPtr.ForeignPtrContents
                                                            dt1
                                                            w of s'1 { DEFAULT ->
                                                     let {
                                                       ipv6 :: GHC.Prim.Int#
                                                       = GHC.Prim.minusAddr# ww1 ipv2
                                                     } in
                                                     case GHC.Prim.tagToEnum#
                                                            @ GHC.Types.Bool
                                                            (GHC.Prim.>=# ipv6 dt3) of wild5 {
                                                       GHC.Types.False
                                                       -> case GHC.Prim.tagToEnum#
                                                                 @ GHC.Types.Bool
                                                                 (GHC.Prim.<# ipv6 0#) of wild6 {
                                                            GHC.Types.False
                                                            -> case GHC.Prim.newPinnedByteArray#
                                                                      @ GHC.Prim.RealWorld
                                                                      ipv6
                                                                      s'1 of ds8 { (#,#) ipv7 ipv8 ->
                                                               let {
                                                                 ipv9 :: GHC.Prim.Addr#
                                                                 = GHC.Prim.byteArrayContents#
                                                                     ipv8
                                                                       `cast`
                                                                     (UnsafeCo representational (GHC.Prim.MutableByteArray#
                                                                                                   GHC.Prim.RealWorld) GHC.Prim.ByteArray#)
                                                               } in
                                                               case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                                                                     -> GHC.Prim.Addr#
                                                                                                     -> GHC.Prim.Word#
                                                                                                     -> GHC.Prim.State#
                                                                                                          GHC.Prim.RealWorld
                                                                                                     -> (# GHC.Prim.State#
                                                                                                             GHC.Prim.RealWorld,
                                                                                                           GHC.Prim.Addr# #)}
                                                                      ipv9
                                                                      ipv2
                                                                      (GHC.Prim.int2Word# ipv6)
                                                                      ipv7 of wild7 { (#,#) ds9 ds10 ->
                                                               let {
                                                                 ipv10 :: GHC.ForeignPtr.ForeignPtrContents
                                                                 = GHC.ForeignPtr.PlainPtr ipv8
                                                               } in
                                                               case GHC.Prim.touch#
                                                                      @ 'GHC.Types.LiftedRep
                                                                      @ GHC.ForeignPtr.ForeignPtrContents
                                                                      ipv10
                                                                      ds9 of s'2 { DEFAULT ->
                                                               case GHC.Prim.touch#
                                                                      @ 'GHC.Types.LiftedRep
                                                                      @ GHC.ForeignPtr.ForeignPtrContents
                                                                      ipv3
                                                                      s'2 of s'3 { DEFAULT ->
                                                               (# s'3,
                                                                  Data.ByteString.Internal.PS
                                                                    ipv9
                                                                    ipv10
                                                                    0#
                                                                    ipv6 #) } } } }
                                                            GHC.Types.True
                                                            -> case GHC.ForeignPtr.mallocPlainForeignPtrBytes2
                                                               ret_ty (# GHC.Prim.State#
                                                                           GHC.Prim.RealWorld,
                                                                         Data.ByteString.Internal.ByteString #)
                                                               of {} }
                                                       GHC.Types.True
                                                       -> case GHC.Prim.touch#
                                                                 @ 'GHC.Types.LiftedRep
                                                                 @ GHC.ForeignPtr.ForeignPtrContents
                                                                 ipv3
                                                                 s'1 of s'2 { DEFAULT ->
                                                          (# s'2, lvl1019 #) } } } }
                                            } in
                                            $wgo40
                                              (GHC.Prim.plusAddr# dt dt2)
                                              ipv2
                                              (GHC.Prim.plusAddr# dt (GHC.Prim.+# dt2 dt3))
                                              ipv }
                                         GHC.Types.True
                                         -> case GHC.ForeignPtr.mallocPlainForeignPtrBytes2
                                            ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                      Data.ByteString.Internal.ByteString #)
                                            of {} } }) of ds7 { (#,#) ipv ipv1 ->
                               case ipv1 of wild3 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                               case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.># dt7 0#) of wild4 {
                                 GHC.Types.False -> go16 ys
                                 GHC.Types.True
                                 -> GHC.Types.:
                                      @ Data.ByteString.Internal.ByteString
                                      wild3
                                      (go16 ys) } } }
                            GHC.Types.True
                            -> case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.># dt3 0#) of wild3 {
                                 GHC.Types.False -> go16 ys
                                 GHC.Types.True
                                 -> GHC.Types.:
                                      @ Data.ByteString.Internal.ByteString
                                      wild1
                                      (go16 ys) } } } }
                 } in
                 go16 ciggrps) -}
b3cd755fc00e8ce2463762ebb17dedb0
  getNonHeaderAlns :: [Lib.AlignedRead] -> [Lib.AlignedRead]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (as :: [Lib.AlignedRead]) ->
                 GHC.Base.build
                   @ Lib.AlignedRead
                   (\ @ b
                      (c2 :: Lib.AlignedRead -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ Lib.AlignedRead
                      @ b
                      (GHC.List.filterFB @ Lib.AlignedRead @ b c2 Lib.getNonHeaderAlns1)
                      n
                      as)) -}
d3cbc1c988e5877c97a0c6f00a33856f
  getNonHeaderAlns1 :: Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLSLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.AlignedRead) ->
                 case x of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 case ds32 of wild1 {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False } }) -}
5016b5ec49928ef5c32a6974e0dd528c
  getRPrimerBEDfromMaster :: Lib.MasterRecord -> Lib.BedRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <L,U(1*U,A,A,A,A,A,1*U,1*U,A,1*U,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (mr :: Lib.MasterRecord) ->
                 Lib.BedRecord
                   (case mr of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds6 })
                   (case mr of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds12 })
                   (case mr of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds13 })
                   (case mr of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds15 })) -}
d003184534a066099a6a5c1592131689
  getRight ::
    Data.Either.Either t (a, Lib.AlignedRead) -> Lib.AlignedRead
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ t @ a (e :: Data.Either.Either t (a, Lib.AlignedRead)) ->
                 case e of wild {
                   Data.Either.Left ds6 -> Lib.defaultAlignment
                   Data.Either.Right x -> Data.Tuple.snd @ a @ Lib.AlignedRead x }) -}
e6557022055896cd8fceab081450d7bb
  getRightM ::
    (GHC.Show.Show a1, Control.Monad.IO.Class.MonadIO m) =>
    Data.Either.Either a1 (a2, Lib.AlignedRead) -> m Lib.AlignedRead
  {- Arity: 3,
     Strictness: <L,U(A,C(U),A)><S(SL),U(1*U(A,A,1*C1(C1(U)),1*C1(U),A),1*C1(U))><S,1*U>,
     Unfolding: (\ @ m109 :: * -> *
                   @ a
                   @ a1
                   ($dShow :: GHC.Show.Show a)
                   ($dMonadIO :: Control.Monad.IO.Class.MonadIO m109)
                   (eta :: Data.Either.Either a (a1, Lib.AlignedRead)) ->
                 let {
                   $dMonad :: GHC.Base.Monad m109
                   = Control.Monad.IO.Class.$p1MonadIO @ m109 $dMonadIO
                 } in
                 case eta of wild {
                   Data.Either.Left e
                   -> GHC.Base.>>
                        @ m109
                        $dMonad
                        @ ()
                        @ Lib.AlignedRead
                        (Control.Monad.IO.Class.liftIO
                           @ m109
                           $dMonadIO
                           @ ()
                           (\ (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            System.IO.appendFile2
                              @ ()
                              Lib.getRightM1
                              GHC.IO.IOMode.WriteMode
                              (\ (hdl :: GHC.IO.Handle.Types.Handle)[OneShot] ->
                               GHC.IO.Handle.Text.hPutStr2
                                 hdl
                                 (GHC.Show.show @ a $dShow e)
                                 GHC.Types.False)
                                `cast`
                              (<GHC.IO.Handle.Types.Handle>_R
                               ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                              eta1)
                             `cast`
                           (Sym (GHC.Types.N:IO[0] <()>_R)))
                        (GHC.Base.return
                           @ m109
                           $dMonad
                           @ Lib.AlignedRead
                           Lib.defaultAlignment)
                   Data.Either.Right a2
                   -> GHC.Base.return
                        @ m109
                        $dMonad
                        @ Lib.AlignedRead
                        (case a2 of wild1 { (,) ds6 y -> y }) }) -}
c1f8af64f78005dd06443e3ddcf6d5cb
  getRightM1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.getRightM2) -}
5fa6108add39331bd7d668bae85430c4
  getRightM2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("samparsefails.log"#) -}
1fa6dba22e24495ae01b340a57fc8e95
  getTargetBEDfromMaster :: Lib.MasterRecord -> Lib.BedRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <L,U(1*U,1*U,1*U,1*U,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (mr :: Lib.MasterRecord) ->
                 Lib.BedRecord
                   (case mr of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds6 })
                   (case mr of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds7 })
                   (case mr of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds8 })
                   (case mr of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds9 })) -}
276a9a30f8de361d7757041aaf1af22e
  getTrimdcigCoordDiff :: Lib.AlignedRead -> GHC.Integer.Type.Integer
  {- Arity: 1,
     Strictness: <S(LLLLLLLS(SLSS)LLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,U,1*U,A,A,A,A,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.AlignedRead) ->
                 case w of ww { Lib.AlignedRead ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ->
                 case ww8 of ww32 { Data.ByteString.Internal.PS ww33 ww34 ww35 ww36 ->
                 Lib.$wgetTrimdcigCoordDiff ww33 ww34 ww35 ww36 ww24 ww25 } }) -}
00a2d310706fbaf8509b108ccd509047
  getTrimdcigCoordDiff_go ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
d91f5b50268721d7aa0a6fc90d2fcb71
  getcigseqdiff :: Lib.AlignedRead -> GHC.Integer.Type.Integer
  {- Arity: 1,
     Strictness: <S(LLLLLLLS(SLSS)LLLLLS(LLLS)LLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,1*U(A,A,A,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.AlignedRead) ->
                 case w of ww { Lib.AlignedRead ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ->
                 case ww8 of ww32 { Data.ByteString.Internal.PS ww33 ww34 ww35 ww36 ->
                 case ww14 of ww37 { Data.ByteString.Internal.PS ww38 ww39 ww40 ww41 ->
                 Lib.$wgetcigseqdiff ww33 ww34 ww35 ww36 ww41 } } }) -}
5a32538627a501c5a2ffe01072f85cfe
  getcigseqdiff_go ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
424c18af653d1990b604c61d48767101
  getcol ::
    GHC.Types.Int
    -> Data.Vector.Vector (Data.Vector.Vector a)
    -> Data.Vector.Vector a
  {- Arity: 2, Strictness: <L,U(U)><S(SSS),1*U(U,U,U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   (w :: GHC.Types.Int)
                   (w1 :: Data.Vector.Vector (Data.Vector.Vector a)) ->
                 case w1 of ww { Data.Vector.Vector ww1 ww2 ww3 ->
                 Lib.$wgetcol @ a w ww1 ww2 ww3 }) -}
75edab5b69986c53f3dbf0bb025f0610
  getcol1 :: GHC.Prim.Int# -> GHC.Prim.Int# -> GHC.Prim.Addr# -> a
  {- Arity: 3, Strictness: <B,U><B,U><B,U>x -}
2e4a23d6403acb43654633d0c1c32cd3
  getlengths ::
    GHC.Base.Functor f =>
    f Data.ByteString.Internal.ByteString -> f GHC.Types.Int
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ f12 :: * -> *
                   ($dFunctor :: GHC.Base.Functor f12)
                   (seqs :: f12 Data.ByteString.Internal.ByteString) ->
                 GHC.Base.fmap
                   @ f12
                   $dFunctor
                   @ Data.ByteString.Internal.ByteString
                   @ GHC.Types.Int
                   Data.ByteString.length
                   seqs) -}
fcef5796a9b85cf1ebdb69f659eda77b
  hdrSEalnparserEOL ::
    Data.Attoparsec.ByteString.Internal.Parser Lib.AlignedRead
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.hdrSEalnparserEOL1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <Lib.AlignedRead>_R)) -}
f6a3bb2b725c696e5f66ebaaa71c48a8
  hdrSEalnparserEOL1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.AlignedRead
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.AlignedRead
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$whdrSEalnparserEOL
                   @ r
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww8
                   w2
                   w3
                   w4 } }) -}
dfe003710ac7f81d5ec14daff10b4183
  hdrSEalnparserEOL2 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.hdrSEalnparserEOL_addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.hdrSEalnparserEOL_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
dd379854eb43ac88d5c2eef2306e47da
  hdrSEalnparserEOL_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("HEADERLINE"#) -}
eea1606bd1dd26631f229b8987b4d39c
  hdralnparser ::
    Data.Attoparsec.ByteString.Internal.Parser Lib.AlignedRead
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.hdralnparser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <Lib.AlignedRead>_R)) -}
d0314fb1ff84dcfc3f3e11fcc2bef97f
  hdralnparser1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.AlignedRead
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.AlignedRead
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$whdralnparser @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
55531eaf98460357777cc1f3491580fe
  hdralnparserEOL ::
    Data.Attoparsec.ByteString.Internal.Parser Lib.PairedAln
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.hdralnparserEOL1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <Lib.PairedAln>_R)) -}
98781af2c0cf5c010c91b95d697ff455
  hdralnparserEOL1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.PairedAln
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.PairedAln
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$whdralnparserEOL
                   @ r
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww8
                   w2
                   w3
                   w4 } }) -}
4bcd5c6f813fb4215b05c816d8827476
  hdrchromp :: Data.Attoparsec.ByteString.Internal.Parser Lib.UChr
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.hdrchromp1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <Lib.UChr>_R)) -}
fd40c924b497abaed8a5f06c097ba2ae
  hdrchromp1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.UChr
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.UChr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$whdrchromp @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  headerstrings :: Lib.AlignedRead -> Lib.Header
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLSLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds32 }) -}
7187425fe58696f90d038365425c57ca
  headsafeAln :: [Lib.AlignedRead] -> Lib.AlignedRead
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (as :: [Lib.AlignedRead]) ->
                 case as of wild { [] -> Lib.alnsToPairedAln1 : ds6 ds7 -> ds6 }) -}
f1e8a13132b4d566d11f9275b6e14c57
  incoordsfile :: Lib.Opts -> GHC.Base.String
  RecSel Left Lib.Opts
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLSLL),1*U(A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.Opts) ->
                 case ds6 of wild { Lib.Opts ds7 ds8 ds9 ds10 ds11 -> ds9 }) -}
f1e8a13132b4d566d11f9275b6e14c57
  insamfile :: Lib.Opts -> GHC.Base.String
  RecSel Left Lib.Opts
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLSL),1*U(A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.Opts) ->
                 case ds6 of wild { Lib.Opts ds7 ds8 ds9 ds10 ds11 -> ds10 }) -}
702609d8da67b0d9f67ab238dcd1cdb7
  intflag :: Lib.SAMFlag -> GHC.Types.Int
  RecSel Left Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLS),1*U(A,A,A,A,A,A,A,A,A,A,A,1*U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.SAMFlag) ->
                 case ds6 of wild { Lib.SAMFlag ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds18 }) -}
aeb18282782b9d60bec8c29be2bf2c9b
  intgr2int :: GHC.Integer.Type.Integer -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m,
     Unfolding: InlineRule (1, True, False)
                (\ (n :: GHC.Integer.Type.Integer) ->
                 case GHC.Integer.Type.integerToInt n of wild { DEFAULT ->
                 GHC.Types.I# wild }) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  isheader :: Lib.AlignedRead -> GHC.Types.Bool
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLSLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds33 }) -}
b832e3b672f29d9f7dddb345305f44cd
  itypep ::
    Data.Attoparsec.ByteString.Internal.Parser
      Data.ByteString.Internal.ByteString
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.itypep1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)) -}
ac57117d9aa161703b8e2b1ca08caa55
  itypep1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww { GHC.Types.I# ww1 ->
                 Lib.$witypep @ r w ww1 w2 w3 w4 }) -}
651a0885282e2b5b91867817410ea390
  itypep2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.itypep_addr#) -}
447d6e546cc1d5048b44f67ef3cea780
  itypep_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("i"#) -}
252411e5883d6f4fa2ac25185717b603
  itypep_m ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString
      Data.ByteString.Internal.ByteString
  {- Unfolding: (Data.Attoparsec.ByteString.Char8.$fIsStringParser_$cfromString
                   @ Data.ByteString.Internal.ByteString
                   (GHC.Types.Eq#
                      @ *
                      @ *
                      @ Data.ByteString.Internal.ByteString
                      @ Data.ByteString.Internal.ByteString
                      @~ <Data.ByteString.Internal.ByteString>_N)
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Data.ByteString.Internal.ByteString>_N <Data.ByteString.Internal.ByteString>_N)
                   Lib.itypep2) -}
dd97cd614cadeaccd4abde314fe15745
  itypep_v :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.itypep_addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.itypep_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
ffb0bcb22fa34c3e3ec0cd4689dc9a8d
  ix :: GHC.Types.Int -> Data.Vector.Vector a -> a
  {- Arity: 2, Strictness: <S(S),1*U(U)><S(SSS),1*U(U,U,U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a (w :: GHC.Types.Int) (w1 :: Data.Vector.Vector a) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Data.Vector.Vector ww3 ww4 ww5 ->
                 Lib.$wix @ a ww1 ww3 ww4 ww5 } }) -}
8941ae6e85cfa4edb1379fb26de59c65
  justbedmaps :: [GHC.Base.Maybe Lib.BedRecord] -> [Lib.BedRecord]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, True)
                (Data.Maybe.catMaybes @ Lib.BedRecord) -}
d79b25e3c7b735399710cdc25f2c2390
  justchrmaps ::
    [GHC.Base.Maybe (Data.IntMap.Internal.IntMap Lib.BedRecord)]
    -> [Data.IntMap.Internal.IntMap Lib.BedRecord]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, True)
                (Data.Maybe.catMaybes
                   @ (Data.IntMap.Internal.IntMap Lib.BedRecord)) -}
6e9ad85110c8d3525c119996cd68becf
  mIDp ::
    Data.Attoparsec.ByteString.Internal.Parser
      Data.ByteString.Internal.ByteString
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.mIDp1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)) -}
5f838724d0b58e225074aa27721535e5
  mIDp1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wmIDp @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
4df0859962a8e7dd00aac8f1896bbba0
  makeMRNMexplicit :: Lib.PairedAln -> Lib.PairedAln
  {- Arity: 1,
     Strictness: <S(S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLS)LLL),1*U(U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)>m,
     Unfolding: (\ (p :: Lib.PairedAln) ->
                 case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                 case ds6 of wild1 { Lib.AlignedRead ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ->
                 let {
                   $j :: Lib.PairedAln <join 0> {- Strictness: m -}
                   = let {
                       r2pRNAME :: Data.ByteString.Internal.ByteString
                       = case ds7 of wild2 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                         let {
                           cs :: [GHC.Types.Char] = Lib.$fShowUChr_$cshow ds43
                         } in
                         case GHC.List.$wlenAcc @ GHC.Types.Char cs 0# of ww { DEFAULT ->
                         Data.ByteString.Internal.$wunsafePackLenChars ww cs } }
                     } in
                     let {
                       r1pRNAME :: Data.ByteString.Internal.ByteString
                       = let {
                           cs :: [GHC.Types.Char] = Lib.$fShowUChr_$cshow ds12
                         } in
                         case GHC.List.$wlenAcc @ GHC.Types.Char cs 0# of ww { DEFAULT ->
                         Data.ByteString.Internal.$wunsafePackLenChars ww cs }
                     } in
                     Lib.PairedAln
                       (Lib.AlignedRead
                          ds10
                          ds11
                          ds12
                          ds13
                          ds14
                          ds15
                          ds16
                          ds17
                          ds18
                          ds19
                          r2pRNAME
                          ds21
                          ds22
                          ds23
                          ds24
                          ds25
                          ds26
                          ds27
                          ds28
                          ds29
                          ds30
                          ds31
                          ds32
                          ds33
                          ds34
                          ds35
                          ds36
                          ds37
                          ds38
                          ds39
                          ds40)
                       (case ds7 of wild2 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                        Lib.AlignedRead
                          ds41
                          ds42
                          ds43
                          ds44
                          ds45
                          ds46
                          ds47
                          ds48
                          ds49
                          ds50
                          r1pRNAME
                          ds52
                          ds53
                          ds54
                          ds55
                          ds56
                          ds57
                          ds58
                          ds59
                          ds60
                          ds61
                          ds62
                          ds63
                          ds64
                          ds65
                          ds66
                          ds67
                          ds68
                          ds69
                          ds70
                          ds71 })
                       (GHC.Base.map
                          @ Lib.AlignedRead
                          @ Lib.AlignedRead
                          (\ (x :: Lib.AlignedRead) ->
                           case x of wild2 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                           Lib.AlignedRead
                             ds41
                             ds42
                             ds43
                             ds44
                             ds45
                             ds46
                             ds47
                             ds48
                             ds49
                             ds50
                             r2pRNAME
                             ds52
                             ds53
                             ds54
                             ds55
                             ds56
                             ds57
                             ds58
                             ds59
                             ds60
                             ds61
                             ds62
                             ds63
                             ds64
                             ds65
                             ds66
                             ds67
                             ds68
                             ds69
                             ds70
                             ds71 })
                          ds8)
                       (GHC.Base.map
                          @ Lib.AlignedRead
                          @ Lib.AlignedRead
                          (\ (x :: Lib.AlignedRead) ->
                           case x of wild2 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                           Lib.AlignedRead
                             ds41
                             ds42
                             ds43
                             ds44
                             ds45
                             ds46
                             ds47
                             ds48
                             ds49
                             ds50
                             r1pRNAME
                             ds52
                             ds53
                             ds54
                             ds55
                             ds56
                             ds57
                             ds58
                             ds59
                             ds60
                             ds61
                             ds62
                             ds63
                             ds64
                             ds65
                             ds66
                             ds67
                             ds68
                             ds69
                             ds70
                             ds71 })
                          ds9)
                 } in
                 case ds40 of wild2 {
                   GHC.Types.False
                   -> let {
                        $j1 :: Lib.PairedAln <join 0> {- Strictness: m -}
                        = case ds7 of wild3 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                          case ds71 of wild4 {
                            GHC.Types.False
                            -> letrec {
                                 go16 :: [Lib.AlignedRead] -> Lib.PairedAln
                                   <join 1> {- Arity: 1, Strictness: <S,1*U>m -}
                                 = \ (ds72 :: [Lib.AlignedRead]) ->
                                   case ds72 of wild5 {
                                     [] -> wild
                                     : y ys
                                     -> case y of wild6 { Lib.AlignedRead ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ds90 ds91 ds92 ds93 ds94 ds95 ds96 ds97 ds98 ds99 ds100 ds101 ds102 ds103 ->
                                        case ds103 of wild7 {
                                          GHC.Types.False -> go16 ys GHC.Types.True -> $j } } }
                               } in
                               go16 ds9
                            GHC.Types.True -> $j } }
                      } in
                      letrec {
                        go16 :: [Lib.AlignedRead] -> Lib.PairedAln
                          <join 1> {- Arity: 1, Strictness: <S,1*U>m -}
                        = \ (ds41 :: [Lib.AlignedRead]) ->
                          case ds41 of wild3 {
                            [] -> $j1
                            : y ys
                            -> case y of wild4 { Lib.AlignedRead ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ->
                               case ds72 of wild5 {
                                 GHC.Types.False -> go16 ys GHC.Types.True -> $j } } }
                      } in
                      go16 ds8
                   GHC.Types.True -> $j } } }) -}
46c211b717c99aa28acf99b7ef5fc1f6
  makeTrimmedUpdates :: Lib.PairedAln -> Lib.PairedAln
  {- Arity: 1,
     Strictness: <L,1*U(U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.PairedAln) ->
                 case Lib.$wmakeTrimmedUpdates w of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 Lib.PairedAln ww1 ww2 ww3 ww4 }) -}
35ad3ad2cda90500f5efd58c2c2e41ba
  makeTrimmedUpdates1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1200) -}
3941c75275604b06ddd6e3861b515c68
  makeTrimmedUpdates2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (-1200) -}
c74bb452039f34635bc23fa88518cc4d
  makebedmap ::
    [Lib.BedRecord] -> Data.IntMap.Internal.IntMap Lib.BedRecord
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (bs :: [Lib.BedRecord]) ->
                 Data.IntMap.Strict.fromList1
                   @ Lib.BedRecord
                   (Data.IntMap.Internal.Nil @ Lib.BedRecord)
                   (Lib.makebedmap_go bs)) -}
a67ef2c8ae5a7466f1f5ae7ffc634fd0
  makebedmap_go ::
    [Lib.BedRecord] -> [(GHC.Types.Int, Lib.BedRecord)]
  {- Arity: 1, Strictness: <S,1*U> -}
2b0602be84e392c8fc9bcb14681b8c54
  makechrbedmap ::
    Lib.BED
    -> Data.Map.Internal.Map
         Lib.UChr (Data.IntMap.Internal.IntMap Lib.BedRecord)
  {- Arity: 1, Strictness: <S(SSS),1*U(U,U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.BED) ->
                 case w of ww { Data.Vector.Vector ww1 ww2 ww3 ->
                 Lib.$wmakechrbedmap ww1 ww2 ww3 }) -}
44307db53c877e355b1d57bd54afa062
  makeprimertups :: Lib.BedRecord -> [(GHC.Types.Int, Lib.BedRecord)]
  {- Arity: 1, Strictness: <S(LSSL),1*U(U,U,U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.BedRecord) ->
                 case w of ww { Lib.BedRecord ww1 ww2 ww3 ww4 ->
                 Lib.$wmakeprimertups ww1 ww2 ww3 ww4 }) -}
be4f30d674faee9f50599d2dfb3b2f80
  makeprimertups1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (2) -}
1b5721207ca1189d551bcd24be98a5dc
  mampname :: Lib.MasterRecord -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.MasterRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLLLLLLL),1*U(A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MasterRecord) ->
                 case ds6 of wild { Lib.MasterRecord ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds10 }) -}
95d357e3ea258eb78fdb3ade15e49d02
  mapcig :: Data.ByteString.Internal.ByteString -> Lib.CigarMap
  {- Arity: 1, Strictness: <S(SLSS),1*U(U,U,U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.ByteString.Internal.ByteString) ->
                 case w of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wmapcig ww1 ww2 ww3 ww4 }) -}
69ba228794e9c78259abe9f8fd4f7a49
  mapfst :: GHC.Num.Num a => (a -> c) -> (a, b) -> (c, b)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,A><L,1*C1(U)><S,1*U(U,U)>m,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   @ c2
                   @ b
                   ($dNum :: GHC.Num.Num a)
                   (f12 :: a -> c2)
                   (ds6 :: (a, b)) ->
                 case ds6 of wild { (,) x y -> (f12 x, y) }) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  mapped :: Lib.AlignedRead -> GHC.Types.Bool
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLSLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds25 }) -}
ee93d4d492885470c77de705e87ad292
  mappedPct :: Lib.RunStats -> GHC.Types.Double
  RecSel Left Lib.RunStats
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLS),1*U(A,A,A,A,A,1*U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.RunStats) ->
                 case ds6 of wild { Lib.RunStats ds7 ds8 ds9 ds10 ds11 ds12 ->
                 ds12 }) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  mapqual :: Lib.AlignedRead -> GHC.Integer.Type.Integer
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds12 }) -}
315a559f3d334987dd92721bb4a184ee
  masterRecToTargetBED :: Lib.MasterRecord -> Lib.BedRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <L,U(1*U,1*U,1*U,1*U,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (m109 :: Lib.MasterRecord) ->
                 Lib.BedRecord
                   (case m109 of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds6 })
                   (case m109 of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds7 })
                   (case m109 of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds8 })
                   (case m109 of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds9 })) -}
c0002a4681e20e2184a1325ecae136d5
  masterToFPrimerBED :: [Lib.MasterRecord] -> Lib.BED
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (mrecs :: [Lib.MasterRecord]) ->
                 case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                             Data.Vector.Vector Lib.BedRecord #)
                        (\ (s114 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newArray#
                                @ Lib.BedRecord
                                @ (Control.Monad.Primitive.PrimState
                                     (GHC.ST.ST GHC.Prim.RealWorld))
                                0#
                                (Data.Vector.Mutable.uninitialised @ Lib.BedRecord)
                                s114
                                  `cast`
                                (Nth:2
                                     (Nth:2
                                          (Trans
                                               (<GHC.ST.STRep
                                                   GHC.Prim.RealWorld
                                                   (Data.Primitive.Array.MutableArray
                                                      (Control.Monad.Primitive.PrimState
                                                         (GHC.ST.ST GHC.Prim.RealWorld))
                                                      Lib.BedRecord)>_R
                                                ->_R Sym (GHC.ST.N:ST[0]
                                                              <GHC.Prim.RealWorld>_N
                                                              <Data.Primitive.Array.MutableArray
                                                                 (Control.Monad.Primitive.PrimState
                                                                    (GHC.ST.ST GHC.Prim.RealWorld))
                                                                 Lib.BedRecord>_R))
                                               (((GHC.Prim.State#
                                                    (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                              <GHC.Prim.RealWorld>_N)))_R
                                                 ->_R ((#,#)
                                                         <'GHC.Types.TupleRep '[]>_R
                                                         <'GHC.Types.LiftedRep>_R
                                                         (GHC.Prim.State#
                                                            (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                      <GHC.Prim.RealWorld>_N)))_R
                                                         <Data.Primitive.Array.MutableArray
                                                            (Control.Monad.Primitive.PrimState
                                                               (GHC.ST.ST GHC.Prim.RealWorld))
                                                            Lib.BedRecord>_R)_R)
                                                ->_R <GHC.ST.ST
                                                        GHC.Prim.RealWorld
                                                        (Data.Primitive.Array.MutableArray
                                                           (Control.Monad.Primitive.PrimState
                                                              (GHC.ST.ST GHC.Prim.RealWorld))
                                                           Lib.BedRecord)>_R)))) of ds6 { (#,#) ipv ipv1 ->
                         Lib.$wfoldlM_loop3
                           GHC.Types.SPEC
                           0#
                           0#
                           ipv1
                             `cast`
                           (GHC.Prim.MutableArray#
                              (Control.Monad.Primitive.D:R:PrimStateST[0] <GHC.Prim.RealWorld>_N)
                              <Lib.BedRecord>_R)_R
                           0#
                           (GHC.Base.map
                              @ Lib.MasterRecord
                              @ Lib.BedRecord
                              Lib.getFPrimerBEDfromMaster
                              (Data.OldList.sortBy
                                 @ Lib.MasterRecord
                                 Lib.$fOrdMasterRecord_$ccompare
                                 mrecs))
                           ipv
                             `cast`
                           (Nth:2
                                (Nth:3
                                     (Nth:2
                                          (Trans
                                               (((GHC.Prim.State#
                                                    (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                         <GHC.Prim.RealWorld>_N))_R
                                                 ->_R ((#,#)
                                                         <'GHC.Types.TupleRep '[]>_R
                                                         <'GHC.Types.LiftedRep>_R
                                                         (GHC.Prim.State#
                                                            (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                 <GHC.Prim.RealWorld>_N))_R
                                                         <Data.Primitive.Array.MutableArray
                                                            (Control.Monad.Primitive.PrimState
                                                               (GHC.ST.ST GHC.Prim.RealWorld))
                                                            Lib.BedRecord>_R)_R)
                                                ->_R <GHC.ST.ST
                                                        GHC.Prim.RealWorld
                                                        (Data.Primitive.Array.MutableArray
                                                           (Control.Monad.Primitive.PrimState
                                                              (GHC.ST.ST GHC.Prim.RealWorld))
                                                           Lib.BedRecord)>_R)
                                               (<GHC.ST.STRep
                                                   GHC.Prim.RealWorld
                                                   (Data.Primitive.Array.MutableArray
                                                      (Control.Monad.Primitive.PrimState
                                                         (GHC.ST.ST GHC.Prim.RealWorld))
                                                      Lib.BedRecord)>_R
                                                ->_R GHC.ST.N:ST[0]
                                                         <GHC.Prim.RealWorld>_N
                                                         <Data.Primitive.Array.MutableArray
                                                            (Control.Monad.Primitive.PrimState
                                                               (GHC.ST.ST GHC.Prim.RealWorld))
                                                            Lib.BedRecord>_R))))) }) of ds6 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
b214221affd821d05d5f712795cce452
  masterToRPrimerBED :: [Lib.MasterRecord] -> Lib.BED
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (mrecs :: [Lib.MasterRecord]) ->
                 case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                             Data.Vector.Vector Lib.BedRecord #)
                        (\ (s114 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newArray#
                                @ Lib.BedRecord
                                @ (Control.Monad.Primitive.PrimState
                                     (GHC.ST.ST GHC.Prim.RealWorld))
                                0#
                                (Data.Vector.Mutable.uninitialised @ Lib.BedRecord)
                                s114
                                  `cast`
                                (Nth:2
                                     (Nth:2
                                          (Trans
                                               (<GHC.ST.STRep
                                                   GHC.Prim.RealWorld
                                                   (Data.Primitive.Array.MutableArray
                                                      (Control.Monad.Primitive.PrimState
                                                         (GHC.ST.ST GHC.Prim.RealWorld))
                                                      Lib.BedRecord)>_R
                                                ->_R Sym (GHC.ST.N:ST[0]
                                                              <GHC.Prim.RealWorld>_N
                                                              <Data.Primitive.Array.MutableArray
                                                                 (Control.Monad.Primitive.PrimState
                                                                    (GHC.ST.ST GHC.Prim.RealWorld))
                                                                 Lib.BedRecord>_R))
                                               (((GHC.Prim.State#
                                                    (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                              <GHC.Prim.RealWorld>_N)))_R
                                                 ->_R ((#,#)
                                                         <'GHC.Types.TupleRep '[]>_R
                                                         <'GHC.Types.LiftedRep>_R
                                                         (GHC.Prim.State#
                                                            (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                      <GHC.Prim.RealWorld>_N)))_R
                                                         <Data.Primitive.Array.MutableArray
                                                            (Control.Monad.Primitive.PrimState
                                                               (GHC.ST.ST GHC.Prim.RealWorld))
                                                            Lib.BedRecord>_R)_R)
                                                ->_R <GHC.ST.ST
                                                        GHC.Prim.RealWorld
                                                        (Data.Primitive.Array.MutableArray
                                                           (Control.Monad.Primitive.PrimState
                                                              (GHC.ST.ST GHC.Prim.RealWorld))
                                                           Lib.BedRecord)>_R)))) of ds6 { (#,#) ipv ipv1 ->
                         Lib.$wfoldlM_loop2
                           GHC.Types.SPEC
                           0#
                           0#
                           ipv1
                             `cast`
                           (GHC.Prim.MutableArray#
                              (Control.Monad.Primitive.D:R:PrimStateST[0] <GHC.Prim.RealWorld>_N)
                              <Lib.BedRecord>_R)_R
                           0#
                           (GHC.Base.map
                              @ Lib.MasterRecord
                              @ Lib.BedRecord
                              Lib.getRPrimerBEDfromMaster
                              (Data.OldList.sortBy
                                 @ Lib.MasterRecord
                                 Lib.$fOrdMasterRecord_$ccompare
                                 mrecs))
                           ipv
                             `cast`
                           (Nth:2
                                (Nth:3
                                     (Nth:2
                                          (Trans
                                               (((GHC.Prim.State#
                                                    (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                         <GHC.Prim.RealWorld>_N))_R
                                                 ->_R ((#,#)
                                                         <'GHC.Types.TupleRep '[]>_R
                                                         <'GHC.Types.LiftedRep>_R
                                                         (GHC.Prim.State#
                                                            (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                 <GHC.Prim.RealWorld>_N))_R
                                                         <Data.Primitive.Array.MutableArray
                                                            (Control.Monad.Primitive.PrimState
                                                               (GHC.ST.ST GHC.Prim.RealWorld))
                                                            Lib.BedRecord>_R)_R)
                                                ->_R <GHC.ST.ST
                                                        GHC.Prim.RealWorld
                                                        (Data.Primitive.Array.MutableArray
                                                           (Control.Monad.Primitive.PrimState
                                                              (GHC.ST.ST GHC.Prim.RealWorld))
                                                           Lib.BedRecord)>_R)
                                               (<GHC.ST.STRep
                                                   GHC.Prim.RealWorld
                                                   (Data.Primitive.Array.MutableArray
                                                      (Control.Monad.Primitive.PrimState
                                                         (GHC.ST.ST GHC.Prim.RealWorld))
                                                      Lib.BedRecord)>_R
                                                ->_R GHC.ST.N:ST[0]
                                                         <GHC.Prim.RealWorld>_N
                                                         <Data.Primitive.Array.MutableArray
                                                            (Control.Monad.Primitive.PrimState
                                                               (GHC.ST.ST GHC.Prim.RealWorld))
                                                            Lib.BedRecord>_R))))) }) of ds6 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
c7bfa26033082470bc3ced7ed920847a
  masterToTargetBED :: [Lib.MasterRecord] -> Lib.BED
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (mrecs :: [Lib.MasterRecord]) ->
                 case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                             Data.Vector.Vector Lib.BedRecord #)
                        (\ (s114 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newArray#
                                @ Lib.BedRecord
                                @ (Control.Monad.Primitive.PrimState
                                     (GHC.ST.ST GHC.Prim.RealWorld))
                                0#
                                (Data.Vector.Mutable.uninitialised @ Lib.BedRecord)
                                s114
                                  `cast`
                                (Nth:2
                                     (Nth:2
                                          (Trans
                                               (<GHC.ST.STRep
                                                   GHC.Prim.RealWorld
                                                   (Data.Primitive.Array.MutableArray
                                                      (Control.Monad.Primitive.PrimState
                                                         (GHC.ST.ST GHC.Prim.RealWorld))
                                                      Lib.BedRecord)>_R
                                                ->_R Sym (GHC.ST.N:ST[0]
                                                              <GHC.Prim.RealWorld>_N
                                                              <Data.Primitive.Array.MutableArray
                                                                 (Control.Monad.Primitive.PrimState
                                                                    (GHC.ST.ST GHC.Prim.RealWorld))
                                                                 Lib.BedRecord>_R))
                                               (((GHC.Prim.State#
                                                    (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                              <GHC.Prim.RealWorld>_N)))_R
                                                 ->_R ((#,#)
                                                         <'GHC.Types.TupleRep '[]>_R
                                                         <'GHC.Types.LiftedRep>_R
                                                         (GHC.Prim.State#
                                                            (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                      <GHC.Prim.RealWorld>_N)))_R
                                                         <Data.Primitive.Array.MutableArray
                                                            (Control.Monad.Primitive.PrimState
                                                               (GHC.ST.ST GHC.Prim.RealWorld))
                                                            Lib.BedRecord>_R)_R)
                                                ->_R <GHC.ST.ST
                                                        GHC.Prim.RealWorld
                                                        (Data.Primitive.Array.MutableArray
                                                           (Control.Monad.Primitive.PrimState
                                                              (GHC.ST.ST GHC.Prim.RealWorld))
                                                           Lib.BedRecord)>_R)))) of ds6 { (#,#) ipv ipv1 ->
                         Lib.$wfoldlM_loop4
                           GHC.Types.SPEC
                           0#
                           0#
                           ipv1
                             `cast`
                           (GHC.Prim.MutableArray#
                              (Control.Monad.Primitive.D:R:PrimStateST[0] <GHC.Prim.RealWorld>_N)
                              <Lib.BedRecord>_R)_R
                           0#
                           (GHC.Base.map
                              @ Lib.MasterRecord
                              @ Lib.BedRecord
                              Lib.getTargetBEDfromMaster
                              (Data.OldList.sortBy
                                 @ Lib.MasterRecord
                                 Lib.$fOrdMasterRecord_$ccompare
                                 mrecs))
                           ipv
                             `cast`
                           (Nth:2
                                (Nth:3
                                     (Nth:2
                                          (Trans
                                               (((GHC.Prim.State#
                                                    (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                         <GHC.Prim.RealWorld>_N))_R
                                                 ->_R ((#,#)
                                                         <'GHC.Types.TupleRep '[]>_R
                                                         <'GHC.Types.LiftedRep>_R
                                                         (GHC.Prim.State#
                                                            (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                 <GHC.Prim.RealWorld>_N))_R
                                                         <Data.Primitive.Array.MutableArray
                                                            (Control.Monad.Primitive.PrimState
                                                               (GHC.ST.ST GHC.Prim.RealWorld))
                                                            Lib.BedRecord>_R)_R)
                                                ->_R <GHC.ST.ST
                                                        GHC.Prim.RealWorld
                                                        (Data.Primitive.Array.MutableArray
                                                           (Control.Monad.Primitive.PrimState
                                                              (GHC.ST.ST GHC.Prim.RealWorld))
                                                           Lib.BedRecord)>_R)
                                               (<GHC.ST.STRep
                                                   GHC.Prim.RealWorld
                                                   (Data.Primitive.Array.MutableArray
                                                      (Control.Monad.Primitive.PrimState
                                                         (GHC.ST.ST GHC.Prim.RealWorld))
                                                      Lib.BedRecord)>_R
                                                ->_R GHC.ST.N:ST[0]
                                                         <GHC.Prim.RealWorld>_N
                                                         <Data.Primitive.Array.MutableArray
                                                            (Control.Monad.Primitive.PrimState
                                                               (GHC.ST.ST GHC.Prim.RealWorld))
                                                            Lib.BedRecord>_R))))) }) of ds6 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
91b6504f83af2a33f914e4cb822c37e2
  masterparser ::
    Data.Attoparsec.ByteString.Internal.Parser Lib.MasterRecord
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.createprimerbedmaps15
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <Lib.MasterRecord>_R)) -}
702609d8da67b0d9f67ab238dcd1cdb7
  mateMapped :: Lib.SAMFlag -> GHC.Types.Bool
  RecSel Left Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLLLLLLL),1*U(A,1*U,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.SAMFlag) ->
                 case ds6 of wild { Lib.SAMFlag ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds8 }) -}
702609d8da67b0d9f67ab238dcd1cdb7
  mateNeg :: Lib.SAMFlag -> GHC.Types.Bool
  RecSel Left Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSLLLLLL),1*U(A,A,A,A,A,1*U,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.SAMFlag) ->
                 case ds6 of wild { Lib.SAMFlag ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds12 }) -}
1b5721207ca1189d551bcd24be98a5dc
  mchrom :: Lib.MasterRecord -> Lib.UChr
  RecSel Left Lib.MasterRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(1*U,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MasterRecord) ->
                 case ds6 of wild { Lib.MasterRecord ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds7 }) -}
1b5721207ca1189d551bcd24be98a5dc
  mforend :: Lib.MasterRecord -> GHC.Integer.Type.Integer
  RecSel Left Lib.MasterRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSLLLLLL),1*U(A,A,A,A,A,1*U,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MasterRecord) ->
                 case ds6 of wild { Lib.MasterRecord ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds12 }) -}
1b5721207ca1189d551bcd24be98a5dc
  mforname :: Lib.MasterRecord -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.MasterRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLSLLL),1*U(A,A,A,A,A,A,A,A,1*U(U,U,U,U),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MasterRecord) ->
                 case ds6 of wild { Lib.MasterRecord ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds15 }) -}
1b5721207ca1189d551bcd24be98a5dc
  mforseq :: Lib.MasterRecord -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.MasterRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLSL),1*U(A,A,A,A,A,A,A,A,A,A,1*U(U,U,U,U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MasterRecord) ->
                 case ds6 of wild { Lib.MasterRecord ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds17 }) -}
1b5721207ca1189d551bcd24be98a5dc
  mforstart :: Lib.MasterRecord -> GHC.Integer.Type.Integer
  RecSel Left Lib.MasterRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLLLLLLL),1*U(A,A,A,A,1*U,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MasterRecord) ->
                 case ds6 of wild { Lib.MasterRecord ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds11 }) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  mid :: Lib.AlignedRead -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLSLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U,U,U,U),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds34 }) -}
b5f7c91e0a039228d8ca476cc3bdf320
  midseq :: Lib.MidFamily -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.MidFamily
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLLLLL),1*U(A,A,A,1*U(U,U,U,U),A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MidFamily) ->
                 case ds6 of wild { Lib.MidFamily ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds10 }) -}
1b5721207ca1189d551bcd24be98a5dc
  mrevend :: Lib.MasterRecord -> GHC.Integer.Type.Integer
  RecSel Left Lib.MasterRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLSLLLL),1*U(A,A,A,A,A,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MasterRecord) ->
                 case ds6 of wild { Lib.MasterRecord ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds14 }) -}
1b5721207ca1189d551bcd24be98a5dc
  mrevname :: Lib.MasterRecord -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.MasterRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLSLL),1*U(A,A,A,A,A,A,A,A,A,1*U(U,U,U,U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MasterRecord) ->
                 case ds6 of wild { Lib.MasterRecord ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds16 }) -}
1b5721207ca1189d551bcd24be98a5dc
  mrevseq :: Lib.MasterRecord -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.MasterRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLS),1*U(A,A,A,A,A,A,A,A,A,A,A,1*U(U,U,U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MasterRecord) ->
                 case ds6 of wild { Lib.MasterRecord ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds18 }) -}
1b5721207ca1189d551bcd24be98a5dc
  mrevstart :: Lib.MasterRecord -> GHC.Integer.Type.Integer
  RecSel Left Lib.MasterRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLSLLLLL),1*U(A,A,A,A,A,A,1*U,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MasterRecord) ->
                 case ds6 of wild { Lib.MasterRecord ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds13 }) -}
1b5721207ca1189d551bcd24be98a5dc
  mtargetend :: Lib.MasterRecord -> GHC.Integer.Type.Integer
  RecSel Left Lib.MasterRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLL),1*U(A,A,1*U,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MasterRecord) ->
                 case ds6 of wild { Lib.MasterRecord ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds9 }) -}
1b5721207ca1189d551bcd24be98a5dc
  mtargetstart :: Lib.MasterRecord -> GHC.Integer.Type.Integer
  RecSel Left Lib.MasterRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLLLLLLL),1*U(A,1*U,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MasterRecord) ->
                 case ds6 of wild { Lib.MasterRecord ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds8 }) -}
b5f7c91e0a039228d8ca476cc3bdf320
  negtxposdcnt :: Lib.MidFamily -> GHC.Integer.Type.Integer
  RecSel Left Lib.MidFamily
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLSL),1*U(A,A,A,A,A,A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MidFamily) ->
                 case ds6 of wild { Lib.MidFamily ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds15 }) -}
8fe0a1aa2c1d850cbf4be0cf161cea64
  noclip ::
    (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
    -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S(LS(SLSS)),1*U(A,1*U(U,U,U,U))>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: (GHC.Integer.Type.Integer,
                          Data.ByteString.Internal.ByteString)) ->
                 case w of ww { (,) ww1 ww2 ->
                 case ww2 of ww3 { Data.ByteString.Internal.PS ww4 ww5 ww6 ww7 ->
                 Lib.$wnoclip ww4 ww5 ww6 ww7 } }) -}
42d38f815892beb81ae9d5b3bf184eea
  noclip1 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.noclip_addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.noclip_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
8673e27e34c47ce132a57ddc51eb5c9e
  noclip2 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.noclip_addr#1
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.noclip_addr#1
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
6ba6dbd5dc6fc5ec9bb30e7ce9b60c64
  noclip_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("S"#) -}
2c03833b0db1d97e333f12b776ebc71c
  noclip_addr#1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("H"#) -}
8bcb1f0d9e78c4c0899c90284f96a2e5
  nohardclip ::
    (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
    -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S(LS(SLSS)),1*U(A,1*U(U,U,U,U))>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: (GHC.Integer.Type.Integer,
                          Data.ByteString.Internal.ByteString)) ->
                 case w of ww { (,) ww1 ww2 ->
                 case ww2 of ww3 { Data.ByteString.Internal.PS ww4 ww5 ww6 ww7 ->
                 Lib.$wnohardclip ww4 ww5 ww6 ww7 } }) -}
4ffef89d72c3c270edae64aac9fc550b
  nomapCigToNomapRname ::
    Data.ByteString.Internal.ByteString -> Lib.UChr -> Lib.UChr
  {- Arity: 2, Strictness: <S(SLSS),1*U(U,U,U,U)><L,1*U>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.ByteString.Internal.ByteString) (w1 :: Lib.UChr) ->
                 case w of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wnomapCigToNomapRname ww1 ww2 ww3 ww4 w1 }) -}
e767031c3fba4f83fd220d14027f76c7
  nopadding ::
    (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
    -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S(LS(SLSS)),1*U(A,1*U(U,U,U,U))>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: (GHC.Integer.Type.Integer,
                          Data.ByteString.Internal.ByteString)) ->
                 case w of ww { (,) ww1 ww2 ->
                 case ww2 of ww3 { Data.ByteString.Internal.PS ww4 ww5 ww6 ww7 ->
                 Lib.$wnopadding ww4 ww5 ww6 ww7 } }) -}
702609d8da67b0d9f67ab238dcd1cdb7
  notMapped :: Lib.SAMFlag -> GHC.Types.Bool
  RecSel Left Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLL),1*U(A,A,1*U,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.SAMFlag) ->
                 case ds6 of wild { Lib.SAMFlag ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds9 }) -}
702609d8da67b0d9f67ab238dcd1cdb7
  notPrimary :: Lib.SAMFlag -> GHC.Types.Bool
  RecSel Left Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLSLLL),1*U(A,A,A,A,A,A,A,A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.SAMFlag) ->
                 case ds6 of wild { Lib.SAMFlag ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds15 }) -}
bf807fe4b5921aec23e14941cfc4f0b0
  optargs :: Options.Applicative.Types.Parser Lib.Opts
  {- Unfolding: (Options.Applicative.Types.MultP
                   @ Lib.Opts
                   @ GHC.Base.String
                   Lib.optargs8
                   Lib.optargs1) -}
d96e895e5c4f25758211baa9d056a41c
  optargs1 :: Options.Applicative.Types.Parser GHC.Base.String
  {- Strictness: m4,
     Unfolding: (Options.Applicative.Types.AltP
                   @ GHC.Base.String
                   Lib.optargs2
                   (Options.Applicative.Types.$fAlternativeParser_$cempty
                      @ GHC.Base.String)) -}
b6f2e6104f49fdd268b7488a0f76cf4e
  optargs10 :: Options.Applicative.Types.Parser GHC.Base.String
  {- Strictness: m2,
     Unfolding: (Options.Applicative.Types.OptP
                   @ GHC.Base.String
                   Lib.optargs11) -}
48c8e9d74440a08cfcf1b0e0dcebebc5
  optargs11 :: Options.Applicative.Types.Option GHC.Base.String
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.Option
                   @ GHC.Base.String
                   Lib.optargs6
                   Lib.optargs12) -}
a92cb3e0daeb6ed2bf220b1978b77224
  optargs12 :: Options.Applicative.Types.OptProperties
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.OptProperties
                   Options.Applicative.Types.Visible
                   (GHC.Base.Nothing @ Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                     `cast`
                   (Sym (Options.Applicative.Help.Chunk.N:Chunk[0]) <Text.PrettyPrint.ANSI.Leijen.Internal.Doc>_N)
                   Lib.optargs_var1
                   (GHC.Base.Nothing @ GHC.Base.String)
                   (GHC.Base.Nothing
                      @ (Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                         -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc))) -}
fa7c9d8b30303bb14b0c13607b7a1bfa
  optargs13 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("SAM_INFILE"#) -}
3bc8ccb8451aa1032375f9fab30a28fa
  optargs14 ::
    Options.Applicative.Types.Parser
      (GHC.Base.String -> GHC.Base.String -> Lib.Opts)
  {- Unfolding: (Options.Applicative.Types.MultP
                   @ (GHC.Base.String -> GHC.Base.String -> Lib.Opts)
                   @ GHC.Base.String
                   Lib.optargs20
                   Lib.optargs15) -}
86f475f6903418aa52351e4fe080359e
  optargs15 :: Options.Applicative.Types.Parser GHC.Base.String
  {- Strictness: m4,
     Unfolding: (Options.Applicative.Types.AltP
                   @ GHC.Base.String
                   Lib.optargs16
                   (Options.Applicative.Types.$fAlternativeParser_$cempty
                      @ GHC.Base.String)) -}
e76d43918cc41af1d319e9732c61f83c
  optargs16 :: Options.Applicative.Types.Parser GHC.Base.String
  {- Strictness: m2,
     Unfolding: (Options.Applicative.Types.OptP
                   @ GHC.Base.String
                   Lib.optargs17) -}
6aaa9ee32dd78fe53b84d85ee9cd45b9
  optargs17 :: Options.Applicative.Types.Option GHC.Base.String
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.Option
                   @ GHC.Base.String
                   Lib.optargs6
                   Lib.optargs18) -}
d91f3b4b923a886bd21085fc012b95a0
  optargs18 :: Options.Applicative.Types.OptProperties
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.OptProperties
                   Options.Applicative.Types.Visible
                   (GHC.Base.Nothing @ Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                     `cast`
                   (Sym (Options.Applicative.Help.Chunk.N:Chunk[0]) <Text.PrettyPrint.ANSI.Leijen.Internal.Doc>_N)
                   Lib.optargs_var2
                   (GHC.Base.Nothing @ GHC.Base.String)
                   (GHC.Base.Nothing
                      @ (Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                         -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc))) -}
b78d831024b966c7763397bbe30d91c0
  optargs19 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("PRIMER_COORDS_INFILE"#) -}
9041a873fb3f7cd69ec5e1959ea6131a
  optargs2 :: Options.Applicative.Types.Parser GHC.Base.String
  {- Strictness: m2,
     Unfolding: (Options.Applicative.Types.OptP
                   @ GHC.Base.String
                   Lib.optargs3) -}
52e627234ea9f8068716df1fb20cb984
  optargs20 ::
    Options.Applicative.Types.Parser
      (GHC.Base.String -> GHC.Base.String -> GHC.Base.String -> Lib.Opts)
  {- Unfolding: (Options.Applicative.Types.MultP
                   @ (GHC.Base.String
                      -> GHC.Base.String -> GHC.Base.String -> Lib.Opts)
                   @ GHC.Types.Bool
                   Lib.optargs32
                   Lib.optargs21) -}
a7e2cbe3a65b8b43c3ffcec03c9fe1e5
  optargs21 :: Options.Applicative.Types.Parser GHC.Types.Bool
  {- Strictness: m4,
     Unfolding: (Options.Applicative.Types.AltP
                   @ GHC.Types.Bool
                   Lib.optargs22
                   Options.Applicative.Builder.switch1) -}
50404f1c885399cf4a108f1c8e0fca49
  optargs22 :: Options.Applicative.Types.Parser GHC.Types.Bool
  {- Strictness: m4,
     Unfolding: (Options.Applicative.Types.AltP
                   @ GHC.Types.Bool
                   Lib.optargs23
                   (Options.Applicative.Types.$fAlternativeParser_$cempty
                      @ GHC.Types.Bool)) -}
e1bf0b7fe6092927a95fdae010445719
  optargs23 :: Options.Applicative.Types.Parser GHC.Types.Bool
  {- Strictness: m2,
     Unfolding: (Options.Applicative.Types.OptP
                   @ GHC.Types.Bool
                   Lib.optargs24) -}
d318cd10ed68a6a3d34b913d1188ada5
  optargs24 :: Options.Applicative.Types.Option GHC.Types.Bool
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.Option
                   @ GHC.Types.Bool
                   Lib.optargs27
                   Lib.optargs25) -}
f409c8dfa221238720645a80deeb1c13
  optargs25 :: Options.Applicative.Types.OptProperties
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.OptProperties
                   Options.Applicative.Types.Visible
                   Lib.optargs_lvl7
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Base.Nothing @ GHC.Base.String)
                   (GHC.Base.Nothing
                      @ (Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                         -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc))) -}
cbccd045701458b411a2e7f932235d34
  optargs26 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("add this switch to trim primers from single-end alignments"#) -}
280e9e9918f9feb4e32ede75026acaac
  optargs27 :: Options.Applicative.Types.OptReader GHC.Types.Bool
  {- Strictness: m2,
     Unfolding: (Options.Applicative.Types.FlagReader
                   @ GHC.Types.Bool
                   Lib.optargs28
                   GHC.Types.True) -}
f7e3e07957815aabb80caeb7259ed2d0
  optargs28 :: [Options.Applicative.Types.OptName]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Options.Applicative.Types.OptName
                   Lib.optargs_n1
                   Lib.optargs29) -}
8ac09fdf3761fed493d41e4095d9acba
  optargs29 :: [Options.Applicative.Types.OptName]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Options.Applicative.Types.OptName
                   Lib.optargs_n
                   (GHC.Types.[] @ Options.Applicative.Types.OptName)) -}
823e1ca052822f2288d9a910b7b4d4cf
  optargs3 :: Options.Applicative.Types.Option GHC.Base.String
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.Option
                   @ GHC.Base.String
                   Lib.optargs6
                   Lib.optargs4) -}
223a7b538b69c677faf54e0910fef258
  optargs30 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# Lib.optargs31) -}
2949fabddac64d6e24c280ef73d12d06
  optargs31 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("single-end"#) -}
6ee6968149e1a0a7c8a89c45b66cae66
  optargs32 ::
    Options.Applicative.Types.Parser
      (GHC.Types.Bool
       -> GHC.Base.String
       -> GHC.Base.String
       -> GHC.Base.String
       -> Lib.Opts)
  {- Unfolding: (Options.Applicative.Types.$fApplicativeParser_$cfmap
                   @ GHC.Types.Bool
                   @ (GHC.Types.Bool
                      -> GHC.Base.String
                      -> GHC.Base.String
                      -> GHC.Base.String
                      -> Lib.Opts)
                   Lib.Opts
                   Lib.optargs33) -}
ec2f4943fdb5c43b3652924b504b2143
  optargs33 :: Options.Applicative.Types.Parser GHC.Types.Bool
  {- Strictness: m4,
     Unfolding: (Options.Applicative.Types.AltP
                   @ GHC.Types.Bool
                   Lib.optargs34
                   Options.Applicative.Builder.switch1) -}
63b65e2f8549ac0bbf5eb9393ae350db
  optargs34 :: Options.Applicative.Types.Parser GHC.Types.Bool
  {- Strictness: m4,
     Unfolding: (Options.Applicative.Types.AltP
                   @ GHC.Types.Bool
                   Lib.optargs35
                   (Options.Applicative.Types.$fAlternativeParser_$cempty
                      @ GHC.Types.Bool)) -}
525996b8723e5b42d1e88f92d777ed1a
  optargs35 :: Options.Applicative.Types.Parser GHC.Types.Bool
  {- Strictness: m2,
     Unfolding: (Options.Applicative.Types.OptP
                   @ GHC.Types.Bool
                   Lib.optargs36) -}
b4f284d074ac59824ca430f0c6bb01b6
  optargs36 :: Options.Applicative.Types.Option GHC.Types.Bool
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.Option
                   @ GHC.Types.Bool
                   Lib.optargs39
                   Lib.optargs37) -}
50d4059c8aea3b4b7c9dc946ae7fb7b7
  optargs37 :: Options.Applicative.Types.OptProperties
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.OptProperties
                   Options.Applicative.Types.Visible
                   Lib.optargs_lvl1
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Base.Nothing @ GHC.Base.String)
                   (GHC.Base.Nothing
                      @ (Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                         -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc))) -}
c92d720868c055475426d06bd960f1dd
  optargs38 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("add this switch to use BEDPE coordinate input format (default format is master file)"#) -}
377aae034bd23647fffb53faf6e56391
  optargs39 :: Options.Applicative.Types.OptReader GHC.Types.Bool
  {- Strictness: m2,
     Unfolding: (Options.Applicative.Types.FlagReader
                   @ GHC.Types.Bool
                   Lib.optargs40
                   GHC.Types.True) -}
06bcb6594829b6c3f001bba01d88d026
  optargs4 :: Options.Applicative.Types.OptProperties
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.OptProperties
                   Options.Applicative.Types.Visible
                   (GHC.Base.Nothing @ Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                     `cast`
                   (Sym (Options.Applicative.Help.Chunk.N:Chunk[0]) <Text.PrettyPrint.ANSI.Leijen.Internal.Doc>_N)
                   Lib.optargs_var
                   (GHC.Base.Nothing @ GHC.Base.String)
                   (GHC.Base.Nothing
                      @ (Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                         -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc))) -}
bfed23b98b32cf0b168b2331c469f81e
  optargs40 :: [Options.Applicative.Types.OptName]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Options.Applicative.Types.OptName
                   Lib.optargs_n3
                   Lib.optargs41) -}
74d7505d51e5a0c66da3c78764753bea
  optargs41 :: [Options.Applicative.Types.OptName]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Options.Applicative.Types.OptName
                   Lib.optargs_n2
                   (GHC.Types.[] @ Options.Applicative.Types.OptName)) -}
87c97a38ed313087ca9ab3c792bffad1
  optargs42 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# Lib.optargs43) -}
e6b414ae23d288866735600ee839ddd9
  optargs43 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("bedpe"#) -}
501dcbc7cabf707a5b362a16077a4b63
  optargs5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("OUTPUT_SAM_FILENAME"#) -}
53f035e4b4a5b8490da78c80a22de7b6
  optargs6 :: Options.Applicative.Types.OptReader GHC.Base.String
  {- HasNoCafRefs, Strictness: m3,
     Unfolding: (Options.Applicative.Types.ArgReader
                   @ GHC.Base.String
                   Lib.optargs7) -}
63a086f6da3c2efed992b8bc5253f65b
  optargs7 :: Options.Applicative.Types.CReader GHC.Base.String
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Options.Applicative.Types.CReader
                   @ GHC.Base.String
                   Options.Applicative.Types.$fMonoidCompleter3
                     `cast`
                   (Trans
                        (<GHC.Base.String>_R
                         ->_R Sym (GHC.Types.N:IO[0] <[GHC.Base.String]>_R))
                        (Sym (Options.Applicative.Types.N:Completer[0])))
                   (Data.Either.Right
                      @ Options.Applicative.Types.ParseError
                      @ GHC.Base.String)
                     `cast`
                   (Trans
                        (<GHC.Base.String>_R
                         ->_R Nth:3
                                  (Trans
                                       (<Control.Monad.Trans.Except.ExceptT
                                           Options.Applicative.Types.ParseError
                                           Data.Functor.Identity.Identity
                                           GHC.Base.String>_R
                                        ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                                      <Data.Either.Either
                                                         Options.Applicative.Types.ParseError
                                                         GHC.Base.String>_R))
                                       (<Control.Monad.Trans.Except.ExceptT
                                           Options.Applicative.Types.ParseError
                                           Data.Functor.Identity.Identity
                                           GHC.Base.String>_R
                                        ->_R Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                      <Options.Applicative.Types.ParseError>_N
                                                      <Data.Functor.Identity.Identity>_R
                                                      <GHC.Base.String>_N))))
                        (Trans
                             (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                       <*>_N
                                       <GHC.Base.String>_R
                                       <Control.Monad.Trans.Except.Except
                                          Options.Applicative.Types.ParseError>_R
                                       <GHC.Base.String>_N))
                             (Sym (Options.Applicative.Types.N:ReadM[0]) <GHC.Base.String>_N)))) -}
df090194899548f60eb440fd69cda88b
  optargs8 ::
    Options.Applicative.Types.Parser (GHC.Base.String -> Lib.Opts)
  {- Unfolding: (Options.Applicative.Types.MultP
                   @ (GHC.Base.String -> Lib.Opts)
                   @ GHC.Base.String
                   Lib.optargs14
                   Lib.optargs9) -}
83756d9232eecc361d95e5cc5c36714d
  optargs9 :: Options.Applicative.Types.Parser GHC.Base.String
  {- Strictness: m4,
     Unfolding: (Options.Applicative.Types.AltP
                   @ GHC.Base.String
                   Lib.optargs10
                   (Options.Applicative.Types.$fAlternativeParser_$cempty
                      @ GHC.Base.String)) -}
d012d17135880010728f28f02d781e32
  optargs_lvl1 ::
    Options.Applicative.Help.Chunk.Chunk
      Text.PrettyPrint.ANSI.Leijen.Internal.Doc
  {- Unfolding: (Options.Applicative.Help.Chunk.paragraph_go
                   (GHC.CString.unpackCString# Lib.optargs38)) -}
5f1fbf01105d298495dc178c3faf12e0
  optargs_lvl7 ::
    Options.Applicative.Help.Chunk.Chunk
      Text.PrettyPrint.ANSI.Leijen.Internal.Doc
  {- Unfolding: (Options.Applicative.Help.Chunk.paragraph_go
                   (GHC.CString.unpackCString# Lib.optargs26)) -}
17ebcfc787622f106ee5e920ee81ac63
  optargs_n :: Options.Applicative.Types.OptName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (Options.Applicative.Types.OptShort 's'#) -}
8632de9b256f91ef9e63e76f516a2a3e
  optargs_n1 :: Options.Applicative.Types.OptName
  {- Strictness: m2,
     Unfolding: (Options.Applicative.Types.OptLong Lib.optargs30) -}
fa3b51da0a1e1925d15ca9473289c15a
  optargs_n2 :: Options.Applicative.Types.OptName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (Options.Applicative.Types.OptShort 'b'#) -}
2859b3cc3d96497f656d2a6de7485ff9
  optargs_n3 :: Options.Applicative.Types.OptName
  {- Strictness: m2,
     Unfolding: (Options.Applicative.Types.OptLong Lib.optargs42) -}
24ef53f789cbe5a7967649ea67ed69c1
  optargs_var :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# Lib.optargs5) -}
7baa5b9e45e98def5138c5984c00a635
  optargs_var1 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# Lib.optargs13) -}
311bd5123ee027a987e193f5cc6b650f
  optargs_var2 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# Lib.optargs19) -}
81a72284994ed900bacec532e02a8e86
  optasp ::
    Data.Attoparsec.ByteString.Internal.Parser
      Data.ByteString.Internal.ByteString
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.optasp1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)) -}
a05d328715884a8553417107f4e10f39
  optasp1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww { GHC.Types.I# ww1 ->
                 Lib.$woptasp @ r w ww1 w2 w3 w4 }) -}
39a5a26b75427672ba8d792afb31ba3d
  optfieldp ::
    Data.Attoparsec.ByteString.Internal.Parser
      Data.ByteString.Internal.ByteString
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.optfieldp1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)) -}
42d77ca6f9406ba79e22b2d8364b3e8f
  optfieldp1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww { GHC.Types.I# ww1 ->
                 Lib.$woptfieldp @ r w ww1 w2 w3 w4 }) -}
6ad0c0dccedae2bd942bca91aee44878
  optfieldp2 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww { GHC.Types.I# ww1 ->
                 Lib.$woptxsp @ r w ww1 w2 w3 w4 }) -}
82929d5f7b2a351e69c7b9c02bf24056
  optfieldpEOL ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString [GHC.Types.Char]
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.optfieldpEOL1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <[GHC.Types.Char]>_R)) -}
3514fe14c03a0a8be72d10a95533d5c5
  optfieldpEOL1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [GHC.Types.Char]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w2 :: Data.Attoparsec.Internal.Types.State
                            Data.ByteString.Internal.ByteString)
                   (w3 :: Data.Attoparsec.Internal.Types.Pos)
                   (w4 :: Data.Attoparsec.Internal.Types.More)
                   (w5 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w6 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [GHC.Types.Char]
                            r) ->
                 case w3
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww { GHC.Types.I# ww1 ->
                 Data.Attoparsec.Combinator.$w$smanyTill1
                   @ GHC.Types.Char
                   @ ()
                   Lib.optfieldpEOL2
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                             <Data.ByteString.Internal.ByteString>_N <GHC.Types.Char>_R))
                   Data.Attoparsec.ByteString.Internal.endOfLine1
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                             <Data.ByteString.Internal.ByteString>_N <()>_R))
                   @ r
                   w2
                   ww1
                   w4
                   w5
                   w6 }) -}
403921b402924f02ab3d56ddd2292222
  optfieldpEOL2 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         GHC.Types.Char
         r
    -> Data.Attoparsec.ByteString.Internal.Result r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            GHC.Types.Char
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$woptfieldpEOL @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
6255944fdbb52e7ceddfd362dca9dd3d
  optfieldpEOL3 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
0ffd4903a1927cf4875c94e7043e292b
  optfieldpEOL4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.optfieldpEOL5) -}
fed920e4b5949c4a25305cec9555c867
  optfieldpEOL5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Failed reading: satisfyWith"#) -}
30cf1eaa2f11f7a4e544530ef80f7ccc
  optfieldpEOL6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("\r\n"#) -}
54c95675822426b703a03e4baf13b3ee
  optfieldpEOL_ds :: Data.Attoparsec.ByteString.FastSet.FastSet
  {- Unfolding: (Data.Attoparsec.ByteString.FastSet.charClass
                   (GHC.CString.unpackCString# Lib.optfieldpEOL6)) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  optfields :: Lib.AlignedRead -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLSLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds22 }) -}
6cbee93be54bdbd68b28c7d521b7e4f0
  optfieldsp ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString
      [Data.ByteString.Internal.ByteString]
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.optfieldsp1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <[Data.ByteString.Internal.ByteString]>_R)) -}
0f59eecd3d6c228ec651dcd26d672fb9
  optfieldsp1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [Data.ByteString.Internal.ByteString]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w2 :: Data.Attoparsec.Internal.Types.State
                            Data.ByteString.Internal.ByteString)
                   (w3 :: Data.Attoparsec.Internal.Types.Pos)
                   (w4 :: Data.Attoparsec.Internal.Types.More)
                   (w5 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w6 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [Data.ByteString.Internal.ByteString]
                            r) ->
                 case w3
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww { GHC.Types.I# ww1 ->
                 Data.Attoparsec.Combinator.$w$ssepBy'1
                   @ Data.ByteString.Internal.ByteString
                   @ GHC.Types.Char
                   Lib.optfieldsp5
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                             <Data.ByteString.Internal.ByteString>_N
                             <Data.ByteString.Internal.ByteString>_R))
                   Data.Attoparsec.ByteString.Char8.space
                   @ r
                   w2
                   ww1
                   w4
                   w6 }) -}
e6c3956fc882cee0aa055844387919ae
  optfieldsp2 ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString [[GHC.Types.Char]]
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.optfieldsp6
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <[[GHC.Types.Char]]>_R)) -}
4d858e5e06f3f9e5b225e938fdc617d9
  optfieldsp3 ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString
      [Data.ByteString.Internal.ByteString]
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.optfieldsp1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <[Data.ByteString.Internal.ByteString]>_R)) -}
d91df15ef9b9cfd51784ed5dc226dc42
  optfieldsp5 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wtxtfieldp @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w4 } }) -}
13f2b5e48dc221177b93821ede2170a9
  optfieldsp6 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [[GHC.Types.Char]]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w2 :: Data.Attoparsec.Internal.Types.State
                            Data.ByteString.Internal.ByteString)
                   (w3 :: Data.Attoparsec.Internal.Types.Pos)
                   (w4 :: Data.Attoparsec.Internal.Types.More)
                   (w5 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w6 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [[GHC.Types.Char]]
                            r) ->
                 case w3
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww { GHC.Types.I# ww1 ->
                 Data.Attoparsec.Combinator.$w$ssepBy'1
                   @ [GHC.Types.Char]
                   @ GHC.Types.Char
                   Lib.optfieldpEOL1
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                             <Data.ByteString.Internal.ByteString>_N <[GHC.Types.Char]>_R))
                   Data.Attoparsec.ByteString.Char8.space
                   @ r
                   w2
                   ww1
                   w4
                   w6 }) -}
7e1aa9f429e41cd6da26036b261d85cf
  optfieldstotalp ::
    Data.Attoparsec.ByteString.Internal.Parser
      Data.ByteString.Internal.ByteString
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.optfieldstotalp1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)) -}
c30d2627fc185b834f799354d794337c
  optfieldstotalp1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$woptfieldstotalp @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w4 } }) -}
c101ce595013824f0f0a0a8d4583a24d
  optidp ::
    Data.Attoparsec.ByteString.Internal.Parser
      Data.ByteString.Internal.ByteString
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.optidp1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)) -}
e9db918f1c3400b3a7e26f2dafca11cf
  optidp1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww { GHC.Types.I# ww1 ->
                 Lib.$woptidp @ r w ww1 w2 w3 w4 }) -}
32641226c3760f2dc60895dd89b1cc28
  optidp2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.optidp_addr#1) -}
e659f9e3e1115a96e0b7d7d5884f5139
  optidp3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.optidp_addr#) -}
ca26796384534be4f67890cded2a079d
  optidp4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.optidp_addr#2) -}
34699ca72a297a1e581553cf29c2298d
  optidp_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("NM"#) -}
e2cfa3b91218453cea94f4f5ecdb0eff
  optidp_addr#1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("AS"#) -}
5f0f63392d4515756456a592bc5ad9fb
  optidp_addr#2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("XS"#) -}
b7547517f651205035a72cbd6298ec7d
  optidp_m ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString
      Data.ByteString.Internal.ByteString
  {- Unfolding: (Data.Attoparsec.ByteString.Char8.$fIsStringParser_$cfromString
                   @ Data.ByteString.Internal.ByteString
                   (GHC.Types.Eq#
                      @ *
                      @ *
                      @ Data.ByteString.Internal.ByteString
                      @ Data.ByteString.Internal.ByteString
                      @~ <Data.ByteString.Internal.ByteString>_N)
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Data.ByteString.Internal.ByteString>_N <Data.ByteString.Internal.ByteString>_N)
                   Lib.optidp2) -}
abc2992f8c80d14b75b0bfce50d66c13
  optidp_m1 ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString
      Data.ByteString.Internal.ByteString
  {- Unfolding: (Data.Attoparsec.ByteString.Char8.$fIsStringParser_$cfromString
                   @ Data.ByteString.Internal.ByteString
                   (GHC.Types.Eq#
                      @ *
                      @ *
                      @ Data.ByteString.Internal.ByteString
                      @ Data.ByteString.Internal.ByteString
                      @~ <Data.ByteString.Internal.ByteString>_N)
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Data.ByteString.Internal.ByteString>_N <Data.ByteString.Internal.ByteString>_N)
                   Lib.optidp3) -}
723d59d171e52b52922ed567770b41ff
  optidp_m2 ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString
      Data.ByteString.Internal.ByteString
  {- Unfolding: (Data.Attoparsec.ByteString.Char8.$fIsStringParser_$cfromString
                   @ Data.ByteString.Internal.ByteString
                   (GHC.Types.Eq#
                      @ *
                      @ *
                      @ Data.ByteString.Internal.ByteString
                      @ Data.ByteString.Internal.ByteString
                      @~ <Data.ByteString.Internal.ByteString>_N)
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Data.ByteString.Internal.ByteString>_N <Data.ByteString.Internal.ByteString>_N)
                   Lib.optidp4) -}
351974bc2ae66dd15a79059239f99f76
  optidp_v :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.optidp_addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.optidp_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
41a56aa8650e6a9f795fc5812d502898
  optidp_v1 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.optidp_addr#2
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.optidp_addr#2
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
7cd88bd55363ebce2cfb950f0981dde3
  optidp_v2 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.optidp_addr#1
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.optidp_addr#1
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
b258aa9d423adb81d353b74a234072f0
  optnmp ::
    Data.Attoparsec.ByteString.Internal.Parser
      Data.ByteString.Internal.ByteString
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.optnmp1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)) -}
b0d08707dd2100fbb565344cc9276645
  optnmp1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww { GHC.Types.I# ww1 ->
                 Lib.$woptnmp @ r w ww1 w2 w3 w4 }) -}
c69053aa1e1683fb514a010754aee38d
  optxsp ::
    Data.Attoparsec.ByteString.Internal.Parser
      Data.ByteString.Internal.ByteString
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.optfieldp2
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)) -}
f1e8a13132b4d566d11f9275b6e14c57
  outfilename :: Lib.Opts -> GHC.Base.String
  RecSel Left Lib.Opts
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLLS),1*U(A,A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.Opts) ->
                 case ds6 of wild { Lib.Opts ds7 ds8 ds9 ds10 ds11 -> ds11 }) -}
702609d8da67b0d9f67ab238dcd1cdb7
  pairNotMapped :: Lib.SAMFlag -> GHC.Types.Bool
  RecSel Left Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLLLLLLL),1*U(A,A,A,1*U,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.SAMFlag) ->
                 case ds6 of wild { Lib.SAMFlag ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds10 }) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  paired :: Lib.AlignedRead -> GHC.Types.Bool
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLSLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds24 }) -}
a2c70990b83b50ee0f8c920a06cb7efe
  pairedAlnToTuple ::
    Lib.PairedAln
    -> (Lib.AlignedRead, Lib.AlignedRead, [Lib.AlignedRead],
        [Lib.AlignedRead])
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(1*U,1*U,1*U,1*U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (p :: Lib.PairedAln) ->
                 (case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 -> ds6 },
                  case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 -> ds7 },
                  case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 -> ds8 },
                  case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 -> ds9 })) -}
702609d8da67b0d9f67ab238dcd1cdb7
  pairedRead :: Lib.SAMFlag -> GHC.Types.Bool
  RecSel Left Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(1*U,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.SAMFlag) ->
                 case ds6 of wild { Lib.SAMFlag ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds7 }) -}
d73c8c072d078fdd5f21fb395e5e89e2
  pairedalnparser ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString Lib.PairedAln
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.pairedalnparser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <Lib.PairedAln>_R)) -}
316ad720e31264ca373eaa027aef602d
  pairedalnparser1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.PairedAln
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.PairedAln
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wpairedalnparser
                   @ r
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww8
                   w2
                   w3
                   w4 } }) -}
10827de141f8dfb17cef4d1f4302d239
  parseAln ::
    Data.ByteString.Internal.ByteString
    -> Data.Either.Either GHC.Base.String Lib.AlignedRead
  {- Arity: 1, Strictness: <S(SLSS),1*U(U,U,U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.ByteString.Internal.ByteString) ->
                 case w of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wparseAln ww1 ww2 ww3 ww4 }) -}
128d92dfa41bfd623ce35c16d6f8ec5b
  parseAln1 :: Data.Either.Either GHC.Base.String Lib.AlignedRead
  {- Strictness: x -}
cb571d63ec1f0168f63b357453bc34f4
  parseAln2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (": "#) -}
4239f354fea37df483e4abaac1053723
  parseAln3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.parseAln4) -}
893087ff40e9e70db3533dd7a7279dd9
  parseAln4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (" > "#) -}
ffdc23a7980160b29d66c7b4164f68ac
  parseAlns ::
    [Data.ByteString.Internal.ByteString] -> Lib.Alignments
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (as :: [Data.ByteString.Internal.ByteString]) ->
                 Data.Either.rights
                   @ GHC.Base.String
                   @ Lib.AlignedRead
                   (GHC.Base.build
                      @ (Data.Either.Either GHC.Base.String Lib.AlignedRead)
                      (\ @ b1
                         (c2 :: Data.Either.Either GHC.Base.String Lib.AlignedRead
                                -> b1 -> b1)[OneShot]
                         (n :: b1)[OneShot] ->
                       GHC.Base.foldr
                         @ Data.ByteString.Internal.ByteString
                         @ b1
                         (GHC.Base.mapFB
                            @ (Data.Either.Either GHC.Base.String Lib.AlignedRead)
                            @ b1
                            @ Data.ByteString.Internal.ByteString
                            c2
                            Lib.parseAlns1)
                         n
                         as))) -}
99f632c5ad0b07fb36ff5b47f9770317
  parseAlns1 ::
    Data.ByteString.Internal.ByteString
    -> Data.Either.Either GHC.Base.String Lib.AlignedRead
  {- Arity: 1,
     Unfolding: (Data.Attoparsec.ByteString.Internal.parseOnly
                   @ Lib.AlignedRead
                   Lib.alnparser1
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                             <Data.ByteString.Internal.ByteString>_N <Lib.AlignedRead>_R))) -}
08d9c75f2bf4a759fc27202ed21ea289
  parseBED ::
    Data.ByteString.Internal.ByteString
    -> Data.Either.Either GHC.Base.String Lib.BedRecord
  {- Arity: 1, Strictness: <S(SLSS),1*U(U,U,U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.ByteString.Internal.ByteString) ->
                 case w of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wparseBED ww1 ww2 ww3 ww4 }) -}
073efb961b0582049f29e60f74afa635
  parseBED1 :: Data.Either.Either GHC.Base.String Lib.BedRecord
  {- Strictness: x -}
9534185fa3a45ec9aea6370f8ab39ed9
  parseBEDPE ::
    Data.ByteString.Internal.ByteString
    -> Data.Either.Either GHC.Base.String Lib.BEDPE
  {- Arity: 1, Strictness: <S(SLSS),1*U(U,U,U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.ByteString.Internal.ByteString) ->
                 case w of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wparseBEDPE ww1 ww2 ww3 ww4 }) -}
0bf672ef0e36e2afc45687ff6653478c
  parseBEDPE1 :: Data.Either.Either GHC.Base.String Lib.BEDPE
  {- Strictness: x -}
eb1829f87db11758f5c81f86d44161ff
  parseCigar ::
    Data.ByteString.Internal.ByteString
    -> Data.Either.Either
         GHC.Base.String
         [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
  {- Arity: 1,
     Unfolding: (Data.Attoparsec.ByteString.Internal.parseOnly
                   @ [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                   Lib.parseCigar1
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                             <Data.ByteString.Internal.ByteString>_N
                             <[(GHC.Integer.Type.Integer,
                                Data.ByteString.Internal.ByteString)]>_R))) -}
2e60d0ca8cd4d8f47f79944e6ea48ff3
  parseCigar1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wparseCigar @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
65fa76c81b83a14b2b0d2a8847f72a43
  parsePairedAlns ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString [Lib.PairedAln]
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.parsePairedAlns1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <[Lib.PairedAln]>_R)) -}
e7ba882555c07f83b2d76ba3f0307628
  parsePairedAlns' ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString [[Lib.AlignedRead]]
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.parsePairedAlns'1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <[[Lib.AlignedRead]]>_R)) -}
7de818c6ae05d3e644445af4b163ed18
  parsePairedAlns'1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [[Lib.AlignedRead]]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [[Lib.AlignedRead]]
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wparsePairedAlns'
                   @ r
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww8
                   w2
                   w3
                   w4 } }) -}
29e57c7c62e24e9efeef26dc7c1a3f9c
  parsePairedAlns1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [Lib.PairedAln]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [Lib.PairedAln]
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wparsePairedAlns
                   @ r
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww8
                   w2
                   w3
                   w4 } }) -}
f94620eb96155bfe5fc6a94a34486eae
  parsePairedAlnsFromSAM ::
    Data.ByteString.Internal.ByteString
    -> Data.Either.Either GHC.Base.String [Lib.PairedAln]
  {- Arity: 1, Strictness: <S(SLSS),1*U(U,U,U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.ByteString.Internal.ByteString) ->
                 case w of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wparsePairedAlnsFromSAM ww1 ww2 ww3 ww4 }) -}
4b20ee96f5d50f3736ed1965363ad27f
  parsePairedAlnsFromSAM1 ::
    Data.Either.Either GHC.Base.String [Lib.PairedAln]
  {- Strictness: x -}
7329899c22aaf922679dea2ea3e5792c
  parsePairedAlnsOrHdr ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString [Lib.PairedAln]
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.parsePairedAlnsOrHdr1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <[Lib.PairedAln]>_R)) -}
c51f9e6cf3b6558e43127f90c38b1714
  parsePairedAlnsOrHdr1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [Lib.PairedAln]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [Lib.PairedAln]
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wparsePairedAlnsOrHdr
                   @ r
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww8
                   w2
                   w3
                   w4 } }) -}
817e1a95c6798a543106b6602d9f1662
  parseReadsetsFromSAM ::
    Data.ByteString.Internal.ByteString -> [[Lib.AlignedRead]]
  {- Arity: 1, Strictness: <S(SLSS),1*U(U,U,U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.ByteString.Internal.ByteString) ->
                 case w of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wparseReadsetsFromSAM ww1 ww2 ww3 ww4 }) -}
c5eb334d793b239ba6620aae8a706137
  parseReadsetsFromSAM1 ::
    Data.Either.Either GHC.Base.String [[Lib.AlignedRead]]
  {- Strictness: x -}
2f64696e9cac9cb565fab2c46567f669
  parseSingleAlnsOrHdr ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString [Lib.AlignedRead]
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.parseSingleAlnsOrHdr1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <[Lib.AlignedRead]>_R)) -}
91b59e1500e43070e88c15235224b4b9
  parseSingleAlnsOrHdr1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [Lib.AlignedRead]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [Lib.AlignedRead]
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wparseSingleAlnsOrHdr
                   @ r
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww8
                   w2
                   w3
                   w4 } }) -}
8bce2d722ba4c8a83e8d83344756851a
  parsechkBED ::
    GHC.Types.Int
    -> GHC.Types.Int -> [GHC.Types.Int] -> GHC.Base.String
  {- Arity: 3, Strictness: <S(S),1*U(U)><S(S),1*U(U)><L,1*U>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: GHC.Types.Int)
                   (w2 :: [GHC.Types.Int]) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { GHC.Types.I# ww3 ->
                 Lib.$wparsechkBED ww1 ww3 w2 } }) -}
9678c60ca16871c969b576e183dace2b
  parsechkBED1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.parsechkBED2) -}
3a32ef047d5070185ac854c9c42dc936
  parsechkBED2 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: (" primer BEDPE records parsed successfully.\n"#) -}
ce5701fb7a6d7404bfe5a94fb489578b
  parsechkBED3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.parsechkBED4) -}
4606d095852a8a8ef080e5b62e2bd5f1
  parsechkBED4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: (" primer BEDPE records failed to parse (see bedparsefails.log)\n"#) -}
ad4d258f3610bd8e33ac56e30715d119
  parsechkMaster ::
    GHC.Types.Int
    -> GHC.Types.Int -> [GHC.Types.Int] -> GHC.Base.String
  {- Arity: 3, Strictness: <S(S),1*U(U)><S(S),1*U(U)><L,1*U>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: GHC.Types.Int)
                   (w2 :: [GHC.Types.Int]) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { GHC.Types.I# ww3 ->
                 Lib.$wparsechkMaster ww1 ww3 w2 } }) -}
de1a617bd491269b0796e3c39428e286
  parsechkSAM ::
    GHC.Types.Int
    -> GHC.Types.Int -> [GHC.Types.Int] -> GHC.Base.String
  {- Arity: 3, Strictness: <S(S),1*U(U)><S(S),1*U(U)><L,1*U>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: GHC.Types.Int)
                   (w2 :: [GHC.Types.Int]) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { GHC.Types.I# ww3 ->
                 Lib.$wparsechkSAM ww1 ww3 w2 } }) -}
20cb70761d6c003d957b6c71278e5621
  parsechkSAM1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.parsechkSAM2) -}
96845e797034bdab5138967da54c82e3
  parsechkSAM2 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: (" SAM alignments parsed successfully.\n"#) -}
2563d254051f2914e8921b364b8c0cd8
  parsechkSAM3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.parsechkSAM4) -}
d7ab2033c9c2b30f90bb4ef691d5c6bf
  parsechkSAM4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: (" SAM alignments failed to parse (see samparsefails.log)\n"#) -}
6423b52106c2f494c8b185ba0781e9af
  parsedbl ::
    Data.ByteString.Internal.ByteString
    -> Data.Either.Either GHC.Base.String GHC.Types.Double
  {- Arity: 1,
     Unfolding: (Data.Attoparsec.ByteString.Internal.parseOnly
                   @ GHC.Types.Double
                   Data.Attoparsec.ByteString.Char8.double1
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                             <Data.ByteString.Internal.ByteString>_N <GHC.Types.Double>_R))) -}
23ae6f130d02f07ceddf0a2672a29d09
  parseint ::
    Data.ByteString.Internal.ByteString
    -> Data.Either.Either GHC.Base.String GHC.Integer.Type.Integer
  {- Arity: 1,
     Unfolding: (Data.Attoparsec.ByteString.Internal.parseOnly
                   @ GHC.Integer.Type.Integer
                   Data.Attoparsec.ByteString.Char8.decimal6
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                             <Data.ByteString.Internal.ByteString>_N
                             <GHC.Integer.Type.Integer>_R))) -}
96023e8e87cc94094ba4c7bd05e99fc2
  parsemIDstring ::
    Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
  {- Arity: 1, Strictness: <S(SLSS),1*U(U,U,U,1*U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.ByteString.Internal.ByteString) ->
                 case w of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wparsemIDstring ww1 ww2 ww3 ww4 }) -}
e4e79144d245d99215270a23694e507a
  parsemIDstring1 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.parsemIDstring_addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.parsemIDstring_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
6892493ec54523741fc17b0fc96f9051
  parsemIDstring2 :: GHC.Prim.Word# -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (c# :: GHC.Prim.Word#) ->
                 case c# of wild {
                   DEFAULT -> GHC.Types.False
                   9## -> GHC.Types.True
                   10## -> GHC.Types.True
                   11## -> GHC.Types.True
                   12## -> GHC.Types.True
                   13## -> GHC.Types.True
                   32## -> GHC.Types.True
                   160## -> GHC.Types.True }) -}
ecf1012d9c3a088d4f7373caf56819e8
  parsemIDstring_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("NOMIDSTRING"#) -}
2c7a513dd2d56946f23ed8322870f16e
  parsemIDstring_go ::
    [Data.ByteString.Internal.ByteString]
    -> [Data.ByteString.Internal.ByteString]
  {- Arity: 1, Strictness: <S,1*U> -}
5b1ab42d9e61eff1e6d3a236175580a9
  parsesignedint ::
    Data.ByteString.Internal.ByteString -> GHC.Integer.Type.Integer
  {- Arity: 1, Strictness: <S(SLSS),1*U(U,U,U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.ByteString.Internal.ByteString) ->
                 case w of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wparsesignedint ww1 ww2 ww3 ww4 }) -}
b0324b54c11d6c5c2d2ff54c8148d3f5
  parsesignedint1 ::
    Data.Either.Either GHC.Base.String GHC.Types.Double
  {- Strictness: x -}
c13536c0ddcfc999f8a708d0f6fd76f1
  pintflag :: Lib.AlignedRead -> GHC.Types.Bool
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLSLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds28 }) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  pnext :: Lib.AlignedRead -> GHC.Integer.Type.Integer
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLSLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds18 }) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  pos :: Lib.AlignedRead -> GHC.Integer.Type.Integer
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds10 }) -}
b5f7c91e0a039228d8ca476cc3bdf320
  postxposdcnt :: Lib.MidFamily -> GHC.Integer.Type.Integer
  RecSel Left Lib.MidFamily
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLSLL),1*U(A,A,A,A,A,A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MidFamily) ->
                 case ds6 of wild { Lib.MidFamily ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds14 }) -}
cbbd3004f17c1b86d86d5e9be8fe9686
  primaryR1filter :: Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LS(S)LLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: Lib.AlignedRead) ->
                 case a of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 case ds7 of wild1 { GHC.Types.I# x# ->
                 case GHC.Prim.andI# x# 256# of wild2 {
                   DEFAULT -> GHC.Types.False
                   0#
                   -> case GHC.Prim.andI# x# 64# of wild3 {
                        DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } } } }) -}
1ab42975516d79edc19b3be52c94512d
  primaryR2filter :: Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LS(S)LLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: Lib.AlignedRead) ->
                 case a of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 case ds7 of wild1 { GHC.Types.I# x# ->
                 case GHC.Prim.andI# x# 256# of wild2 {
                   DEFAULT -> GHC.Types.False
                   0#
                   -> case GHC.Prim.andI# x# 64# of wild3 {
                        DEFAULT -> GHC.Types.False 0# -> GHC.Types.True } } } }) -}
532997a1a68aeaeda9d74e1ec0fdc687
  printAlignment ::
    Lib.AlignedRead -> Data.ByteString.Internal.ByteString
  {- Arity: 1,
     Strictness: <L,U(1*U,1*U(U),1*U,A,A,U,A,1*U,A,A,1*U(U,U,U,U),1*U,U,1*U,1*U,1*U,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A)> -}
5aeafe0d6c5101d25db97cdf65461fc9
  printAlignmentOrHdr ::
    Lib.AlignedRead -> Data.ByteString.Internal.ByteString
  {- Arity: 1,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLSLLLL),1*U(U,1*U(U),1*U,A,A,U,A,U,A,A,U(U,U,U,U),1*U,U,U,U,U,A,A,A,A,A,A,A,1*U,A,1*U,1*U,A,A,A,A)> -}
cd99e81a1a83d8437a44f1c7ea26fd3e
  printAlnStreamToFile ::
    Control.Monad.Trans.Resource.Internal.MonadResource m =>
    GHC.IO.FilePath
    -> Data.Conduit.Internal.Conduit.ConduitM Lib.AlignedRead c m ()
  {- Arity: 2,
     Strictness: <L,U(U(U(A,C(C1(U)),A,C(U),A),C(U)),C(U))><L,U> -}
c13536c0ddcfc999f8a708d0f6fd76f1
  qname :: Lib.AlignedRead -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(1*U(U,U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds7 }) -}
702609d8da67b0d9f67ab238dcd1cdb7
  queryPlus :: Lib.SAMFlag -> GHC.Types.Bool
  RecSel Left Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLLLLLLL),1*U(A,A,A,A,1*U,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.SAMFlag) ->
                 case ds6 of wild { Lib.SAMFlag ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds11 }) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  r1prim :: Lib.PairedAln -> Lib.AlignedRead
  RecSel Left Lib.PairedAln
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.PairedAln) ->
                 case ds6 of wild { Lib.PairedAln ds7 ds8 ds9 ds10 -> ds7 }) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  r1secs :: Lib.PairedAln -> [Lib.AlignedRead]
  RecSel Left Lib.PairedAln
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLSL),1*U(A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.PairedAln) ->
                 case ds6 of wild { Lib.PairedAln ds7 ds8 ds9 ds10 -> ds9 }) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  r2prim :: Lib.PairedAln -> Lib.AlignedRead
  RecSel Left Lib.PairedAln
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLL),1*U(A,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.PairedAln) ->
                 case ds6 of wild { Lib.PairedAln ds7 ds8 ds9 ds10 -> ds8 }) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  r2secs :: Lib.PairedAln -> [Lib.AlignedRead]
  RecSel Left Lib.PairedAln
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLS),1*U(A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.PairedAln) ->
                 case ds6 of wild { Lib.PairedAln ds7 ds8 ds9 ds10 -> ds10 }) -}
3e5a7f24e724c3aa16c0f1ab44d20627
  rdint :: GHC.Base.String -> GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>, Unfolding: (Lib.toBinInt) -}
490a2f8528806b4d145e781bda72d8ad
  read1filter :: Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LS(S)LLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: Lib.AlignedRead) ->
                 case a of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 case ds7 of wild1 { GHC.Types.I# x# ->
                 case GHC.Prim.andI# x# 64# of wild2 {
                   DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } } }) -}
a05ff047e950946cf4c57ab4c700000d
  readBEDPE :: GHC.IO.FilePath -> GHC.Types.IO [Lib.BEDPE]
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.createprimerbedmaps2
                  `cast`
                (<GHC.IO.FilePath>_R
                 ->_R Sym (GHC.Types.N:IO[0] <[Lib.BEDPE]>_R)) -}
1bfd2ba80d2109f301a3c90c3e07821a
  readSAM :: GHC.IO.FilePath -> GHC.Types.IO [Lib.AlignedRead]
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.readSAM1
                  `cast`
                (<GHC.IO.FilePath>_R
                 ->_R Sym (GHC.Types.N:IO[0] <[Lib.AlignedRead]>_R)) -}
1bf5af4f9d1d7b302fb3ca6e0725d7e3
  readSAM1 ::
    GHC.IO.FilePath
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [Lib.AlignedRead] #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (fp :: GHC.IO.FilePath)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case System.IO.withBinaryFile1
                        @ Data.ByteString.Internal.ByteString
                        fp
                        GHC.IO.IOMode.ReadMode
                        Data.ByteString.readFile2
                          `cast`
                        (<GHC.IO.Handle.Types.Handle>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Data.ByteString.Internal.ByteString>_R))
                        eta of ds6 { (#,#) ipv ipv1 ->
                 (# ipv,
                    case ipv1 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                    Data.Either.rights
                      @ GHC.Base.String
                      @ Lib.AlignedRead
                      (GHC.Base.map
                         @ Data.ByteString.Internal.ByteString
                         @ (Data.Either.Either GHC.Base.String Lib.AlignedRead)
                         Lib.readSAM2
                         (Data.ByteString.Char8.$wlines ww1 ww2 ww3 ww4)) } #) }) -}
8aba26fb30bfc3a3534fda033dee2b15
  readSAM2 ::
    Data.ByteString.Internal.ByteString
    -> Data.Either.Either GHC.Base.String Lib.AlignedRead
  {- Arity: 1,
     Unfolding: (Data.Attoparsec.ByteString.Internal.parseOnly
                   @ Lib.AlignedRead
                   Lib.readSAM3
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                             <Data.ByteString.Internal.ByteString>_N <Lib.AlignedRead>_R))) -}
5b2d235ac05f1beda19fa37e8f10c2ef
  readSAM3 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.AlignedRead
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.AlignedRead
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wlvl5 @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
36be9e6f315413d62effd9d34b5a8ba2
  readSAMFlag :: GHC.Types.Int -> Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(U)>,
     Unfolding: (\ (flag1 :: GHC.Types.Int) ->
                 Lib.SAMFlag
                   (case flag1 of wild { GHC.Types.I# x# ->
                    case GHC.Prim.andI# x# 1# of wild1 {
                      DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } })
                   (case flag1 of wild { GHC.Types.I# x# ->
                    case GHC.Prim.andI# x# 2# of wild1 {
                      DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } })
                   (case flag1 of wild { GHC.Types.I# x# ->
                    case GHC.Prim.andI# x# 4# of wild1 {
                      DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } })
                   (case flag1 of wild { GHC.Types.I# x# ->
                    case GHC.Prim.andI# x# 8# of wild1 {
                      DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } })
                   (case flag1 of wild { GHC.Types.I# x# ->
                    case GHC.Prim.andI# x# 16# of wild1 {
                      DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } })
                   (case flag1 of wild { GHC.Types.I# x# ->
                    case GHC.Prim.andI# x# 32# of wild1 {
                      DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } })
                   (case flag1 of wild { GHC.Types.I# x# ->
                    case GHC.Prim.andI# x# 64# of wild1 {
                      DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } })
                   (case flag1 of wild { GHC.Types.I# x# ->
                    case GHC.Prim.andI# x# 128# of wild1 {
                      DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } })
                   (case flag1 of wild { GHC.Types.I# x# ->
                    case GHC.Prim.andI# x# 256# of wild1 {
                      DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } })
                   (case flag1 of wild { GHC.Types.I# x# ->
                    case GHC.Prim.andI# x# 512# of wild1 {
                      DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } })
                   (case flag1 of wild { GHC.Types.I# x# ->
                    case GHC.Prim.andI# x# 1024# of wild1 {
                      DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } })
                   flag1) -}
bcbc24f73b57efbff68cefa56be52f12
  readSAMnameset ::
    GHC.IO.FilePath -> GHC.Types.IO [[Lib.AlignedRead]]
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.readSAMnameset1
                  `cast`
                (<GHC.IO.FilePath>_R
                 ->_R Sym (GHC.Types.N:IO[0] <[[Lib.AlignedRead]]>_R)) -}
3945883e86a41d0241c21e744f730217
  readSAMnameset1 ::
    GHC.IO.FilePath
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [[Lib.AlignedRead]] #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (fp :: GHC.IO.FilePath)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case System.IO.withBinaryFile1
                        @ Data.ByteString.Internal.ByteString
                        fp
                        GHC.IO.IOMode.ReadMode
                        Data.ByteString.readFile2
                          `cast`
                        (<GHC.IO.Handle.Types.Handle>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Data.ByteString.Internal.ByteString>_R))
                        eta of ds6 { (#,#) ipv ipv1 ->
                 (# ipv, Lib.parseReadsetsFromSAM ipv1 #) }) -}
b451eb472dd87de5dc6d21a2f64e65aa
  readSAMtoPairedAlns ::
    GHC.IO.FilePath -> GHC.Types.IO (Lib.AlignedRead, [Lib.PairedAln])
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.readSAMtoPairedAlns1
                  `cast`
                (<GHC.IO.FilePath>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <(Lib.AlignedRead, [Lib.PairedAln])>_R)) -}
d2ba06a0ed500705b27b85f6e076b5fe
  readSAMtoPairedAlns1 ::
    GHC.IO.FilePath
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Lib.AlignedRead, [Lib.PairedAln]) #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (fp :: GHC.IO.FilePath)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case System.IO.withBinaryFile1
                        @ Data.ByteString.Internal.ByteString
                        fp
                        GHC.IO.IOMode.ReadMode
                        Data.ByteString.readFile2
                          `cast`
                        (<GHC.IO.Handle.Types.Handle>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Data.ByteString.Internal.ByteString>_R))
                        eta of ds6 { (#,#) ipv ipv1 ->
                 (# ipv,
                    let {
                      ipv2 :: [[Lib.AlignedRead]]
                      = case ipv1 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                        Lib.$wparseReadsetsFromSAM ww1 ww2 ww3 ww4 }
                    } in
                    (Lib.safegetheader ipv2,
                     case ipv2 of wild {
                       [] -> case GHC.List.scanl2 ret_ty [Lib.PairedAln] of {}
                       : ds7 xs
                       -> GHC.Base.map
                            @ [Lib.AlignedRead]
                            @ Lib.PairedAln
                            Lib.alnsToPairedAln
                            xs }) #) }) -}
736410e8d3c1fb8304589b6d466084ab
  readint :: GHC.Base.String -> GHC.Integer.Type.Integer
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (s :: GHC.Base.String) ->
                 case Text.Read.readEither8
                        @ GHC.Integer.Type.Integer
                        (Text.ParserCombinators.ReadP.run
                           @ GHC.Integer.Type.Integer
                           Lib.readint3
                           s) of wild {
                   [] -> Lib.readint2
                   : x ds6
                   -> case ds6 of wild1 { [] -> x : ipv ipv1 -> Lib.readint1 } }) -}
d1ac411d168adaf9d5e1a870aeedb5ad
  readint1 :: GHC.Integer.Type.Integer
  {- Strictness: x -}
a24831aa211634b16a4f9091f1a8049d
  readint2 :: GHC.Integer.Type.Integer
  {- Strictness: x -}
c4a8e622cbfcfde7badc1272d8efd62e
  readint3 :: Text.ParserCombinators.ReadP.P GHC.Integer.Type.Integer
  {- Unfolding: (GHC.Read.$fReadInteger_$sreadNumber
                   GHC.Read.$fReadInteger2
                   Text.ParserCombinators.ReadPrec.minPrec
                   @ GHC.Integer.Type.Integer
                   (Text.Read.readEither7 @ GHC.Integer.Type.Integer)) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  refseq :: Lib.AlignedRead -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLSLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds20 }) -}
6f19773577bdf1a116e6a2279d330c12
  remCigOps :: Lib.CigarMod -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.CigarMod
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSL),1*U(A,A,A,1*U(U,U,U,U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.CigarMod) ->
                 case ds6 of wild { Lib.CigarMod ds7 ds8 ds9 ds10 ds11 -> ds10 }) -}
e0aef595ebdb18dd7747a6c0eda5d2c2
  removeDs ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> [(GHC.Integer.Type.Integer,
         Data.ByteString.Internal.ByteString)]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (cs :: [(GHC.Integer.Type.Integer,
                            Data.ByteString.Internal.ByteString)]) ->
                 GHC.Base.build
                   @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                   (\ @ b
                      (c2 :: (GHC.Integer.Type.Integer,
                              Data.ByteString.Internal.ByteString)
                             -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                      @ b
                      (GHC.List.filterFB
                         @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                         @ b
                         c2
                         Lib.removeDs1)
                      n
                      cs)) -}
96a4e4883b72f835498561fcdbeef1d7
  removeDs1 ::
    (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
    -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S(LS(SLSS)),1*U(A,1*U(U,U,U,U))>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: (GHC.Integer.Type.Integer,
                          Data.ByteString.Internal.ByteString)) ->
                 case w of ww { (,) ww1 ww2 ->
                 case ww2 of ww3 { Data.ByteString.Internal.PS ww4 ww5 ww6 ww7 ->
                 Lib.$wlvl6 ww4 ww5 ww6 ww7 } }) -}
c4d4ee09f1b80e98847fc47e874a1337
  removeNonPrimaryZeroLengthAlignments ::
    Lib.PairedAln -> Lib.PairedAln
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,1*U,1*U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (p :: Lib.PairedAln) ->
                 case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                 Lib.PairedAln
                   ds6
                   ds7
                   (GHC.Base.build
                      @ Lib.AlignedRead
                      (\ @ b
                         (c2 :: Lib.AlignedRead -> b -> b)[OneShot]
                         (n :: b)[OneShot] ->
                       GHC.Base.foldr
                         @ Lib.AlignedRead
                         @ b
                         (GHC.List.filterFB
                            @ Lib.AlignedRead
                            @ b
                            c2
                            Lib.removeNonPrimaryZeroLengthAlignments1)
                         n
                         ds8))
                   (GHC.Base.build
                      @ Lib.AlignedRead
                      (\ @ b
                         (c2 :: Lib.AlignedRead -> b -> b)[OneShot]
                         (n :: b)[OneShot] ->
                       GHC.Base.foldr
                         @ Lib.AlignedRead
                         @ b
                         (GHC.List.filterFB
                            @ Lib.AlignedRead
                            @ b
                            c2
                            Lib.removeNonPrimaryZeroLengthAlignments1)
                         n
                         ds9)) }) -}
4268bcf71e08726294b234615d47b4fe
  removeNonPrimaryZeroLengthAlignments1 ::
    Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLS),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.AlignedRead) ->
                 case x of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 case ds36 of wild1 {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False } }) -}
d0011f68faeca4999ae9e470ac930580
  rightOrDefaultPaird ::
    Data.Either.Either
      Data.Conduit.Attoparsec.ParseError
      (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln])
    -> [Lib.PairedAln]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (e :: Data.Either.Either
                           Data.Conduit.Attoparsec.ParseError
                           (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln])) ->
                 case e of wild {
                   Data.Either.Left ds6 -> GHC.Types.[] @ Lib.PairedAln
                   Data.Either.Right a
                   -> Data.Tuple.snd
                        @ Data.Conduit.Attoparsec.PositionRange
                        @ [Lib.PairedAln]
                        a }) -}
70ab87451f772f28702c62c08333e20d
  rightOrDefaultSingle ::
    Data.Either.Either
      Data.Conduit.Attoparsec.ParseError
      (Data.Conduit.Attoparsec.PositionRange, [Lib.AlignedRead])
    -> [Lib.AlignedRead]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (e :: Data.Either.Either
                           Data.Conduit.Attoparsec.ParseError
                           (Data.Conduit.Attoparsec.PositionRange, [Lib.AlignedRead])) ->
                 case e of wild {
                   Data.Either.Left ds6 -> GHC.Types.[] @ Lib.AlignedRead
                   Data.Either.Right a
                   -> Data.Tuple.snd
                        @ Data.Conduit.Attoparsec.PositionRange
                        @ [Lib.AlignedRead]
                        a }) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  rint :: Lib.AlignedRead -> [Lib.BedRecord]
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLSLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds27 }) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  rname :: Lib.AlignedRead -> Lib.UChr
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds9 }) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  rnext :: Lib.AlignedRead -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLSLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds17 }) -}
ac0db97841b5db3f62a1fc100ba4418f
  safegetheader :: [[Lib.AlignedRead]] -> Lib.AlignedRead
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: [[Lib.AlignedRead]]) ->
                 letrec {
                   go16 :: [[Lib.AlignedRead]] -> [Lib.AlignedRead]
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (ds6 :: [[Lib.AlignedRead]]) ->
                     case ds6 of wild {
                       [] -> GHC.Types.[] @ Lib.AlignedRead
                       : y ys -> GHC.Base.++ @ Lib.AlignedRead y (go16 ys) }
                 } in
                 case go16 w of wild {
                   [] -> Lib.safegetheader2
                   : ds6 ds7
                   -> case w of wild1 {
                        [] -> case GHC.List.badHead ret_ty Lib.AlignedRead of {}
                        : x ds8
                        -> case x of wild2 {
                             [] -> case GHC.List.badHead ret_ty Lib.AlignedRead of {}
                             : x1 ds9
                             -> case x1 of wild3 { Lib.AlignedRead ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ->
                                case ds36 of wild4 {
                                  GHC.Types.False -> Lib.safegetheader1
                                  GHC.Types.True
                                  -> Lib.AlignedRead
                                       ds10
                                       ds11
                                       ds12
                                       ds13
                                       ds14
                                       ds15
                                       ds16
                                       ds17
                                       ds18
                                       ds19
                                       ds20
                                       ds21
                                       ds22
                                       ds23
                                       ds24
                                       ds25
                                       ds26
                                       ds27
                                       ds28
                                       ds29
                                       ds30
                                       ds31
                                       ds32
                                       ds33
                                       ds34
                                       ds35
                                       GHC.Types.True
                                       ds37
                                       ds38
                                       ds39
                                       ds40 } } } } }) -}
99af16bd92a08c7c7859fc1415b1b1db
  safegetheader1 :: Lib.AlignedRead
  {- Strictness: x -}
34f4ccf23dea7b1e0150a7a1fd739c81
  safegetheader2 :: Lib.AlignedRead
  {- Strictness: x -}
b6fb47ad657190c616a0787a2400271d
  safemapcig ::
    Data.ByteString.Internal.ByteString -> GHC.Base.Maybe Lib.CigarMap
  {- Arity: 1, Strictness: <S(SLSS),1*U(U,U,U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.ByteString.Internal.ByteString) ->
                 case w of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wsafemapcig ww1 ww2 ww3 ww4 }) -}
8a4115c91b5ca61713ec2f5a08fa7057
  samhdrparser ::
    Data.Attoparsec.ByteString.Internal.Parser
      Data.ByteString.Internal.ByteString
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.samhdrparser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)) -}
fe2724fd42dda5b6975f9f5b86557fa6
  samhdrparser1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wsamhdrparser @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
a816e17985be7cc8172dc49a7b1078a4
  samhdrparserEOL ::
    Data.Attoparsec.ByteString.Internal.Parser
      Data.ByteString.Internal.ByteString
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.samhdrparserEOL1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)) -}
61d6a723dbf5f9075b4c15b4d0b850cb
  samhdrparserEOL1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wsamhdrparserEOL
                   @ r
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww8
                   w2
                   w3
                   w4 } }) -}
0119154c7d1343f2f90ba3d497e5e125
  secalnp ::
    Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.ByteString.Internal.Parser Lib.AlignedRead
  {- Arity: 6,
     Strictness: <S(LLLS),1*U(U,U,U,U)><S(LLLSLL),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.secalnp1
                  `cast`
                (<Data.ByteString.Internal.ByteString>_R
                 ->_R Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                               <Data.ByteString.Internal.ByteString>_N <Lib.AlignedRead>_R)) -}
8912b807284e8731e3fdc52249ef9e20
  secalnp1 ::
    Data.ByteString.Internal.ByteString
    -> forall r.
       Data.Attoparsec.Internal.Types.State
         Data.ByteString.Internal.ByteString
       -> Data.Attoparsec.Internal.Types.Pos
       -> Data.Attoparsec.Internal.Types.More
       -> Data.Attoparsec.Internal.Types.Failure
            Data.ByteString.Internal.ByteString
            (Data.Attoparsec.Internal.Types.State
               Data.ByteString.Internal.ByteString)
            r
       -> Data.Attoparsec.Internal.Types.Success
            Data.ByteString.Internal.ByteString
            (Data.Attoparsec.Internal.Types.State
               Data.ByteString.Internal.ByteString)
            Lib.AlignedRead
            r
       -> Data.Attoparsec.Internal.Types.IResult
            Data.ByteString.Internal.ByteString r
  {- Arity: 6,
     Strictness: <S(LLLS),1*U(U,U,U,U)><S(LLLSLL),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))> -}
6af0d0b420f7433339b8b94dfa2d62d4
  seqp ::
    Data.Attoparsec.ByteString.Internal.Parser
      Data.ByteString.Internal.ByteString
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.seqp1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)) -}
6c883c0703a5562c5e9dcacddf0da874
  seqp1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wseqp @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w4 } }) -}
f1e8a13132b4d566d11f9275b6e14c57
  sereads :: Lib.Opts -> GHC.Types.Bool
  RecSel Left Lib.Opts
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSLLL),1*U(A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.Opts) ->
                 case ds6 of wild { Lib.Opts ds7 ds8 ds9 ds10 ds11 -> ds8 }) -}
f358afd43fdb79c2663b0865d6507127
  setMapdProperPairBit :: Lib.PairedAln -> Lib.PairedAln
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S,1*U(1*U(U,1*U(U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),1*U(U,1*U(U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.PairedAln) ->
                 case w of ww { Lib.PairedAln ww1 ww2 ww3 ww4 ->
                 Lib.PairedAln
                   (case ww1 of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                    Lib.AlignedRead
                      ds6
                      (case ds7 of wild1 { GHC.Types.I# x# ->
                       GHC.Types.I# (GHC.Prim.orI# x# 2#) })
                      ds8
                      ds9
                      ds10
                      ds11
                      ds12
                      ds13
                      ds14
                      ds15
                      ds16
                      ds17
                      ds18
                      ds19
                      ds20
                      ds21
                      ds22
                      ds23
                      ds24
                      ds25
                      ds26
                      ds27
                      ds28
                      ds29
                      ds30
                      ds31
                      ds32
                      ds33
                      ds34
                      ds35
                      ds36 })
                   (case ww2 of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                    Lib.AlignedRead
                      ds6
                      (case ds7 of wild1 { GHC.Types.I# x# ->
                       GHC.Types.I# (GHC.Prim.orI# x# 2#) })
                      ds8
                      ds9
                      ds10
                      ds11
                      ds12
                      ds13
                      ds14
                      ds15
                      ds16
                      ds17
                      ds18
                      ds19
                      ds20
                      ds21
                      ds22
                      ds23
                      ds24
                      ds25
                      ds26
                      ds27
                      ds28
                      ds29
                      ds30
                      ds31
                      ds32
                      ds33
                      ds34
                      ds35
                      ds36 })
                   ww3
                   ww4 }) -}
cf31c3ff312f77ce60fa5e11e484b2a5
  setMateRname :: Lib.PairedAln -> Lib.PairedAln
  {- Arity: 1,
     Strictness: <S(S(LS(S)LLLLLLLLLLLLLLLLLLLLLLLLLLLLL)S(LS(S)LLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LL),1*U(U(U,U(U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U(U,U(U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)>m,
     Unfolding: (\ (p :: Lib.PairedAln) ->
                 case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                 case ds7 of ww { Lib.AlignedRead ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ->
                 case ww2 of ww32 { GHC.Types.I# ww33 ->
                 let {
                   newr2secs :: [Lib.AlignedRead]
                   = let {
                       lvl1019 :: Data.ByteString.Internal.ByteString
                       = case ds6 of wild1 { Lib.AlignedRead ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ->
                         let {
                           cs :: [GHC.Types.Char] = Lib.$fShowUChr_$cshow ds12
                         } in
                         case GHC.List.$wlenAcc @ GHC.Types.Char cs 0# of ww34 { DEFAULT ->
                         Data.ByteString.Internal.$wunsafePackLenChars ww34 cs } }
                     } in
                     GHC.Base.map
                       @ Lib.AlignedRead
                       @ Lib.AlignedRead
                       (\ (y :: Lib.AlignedRead) ->
                        case y of wild1 { Lib.AlignedRead ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ->
                        Lib.AlignedRead
                          ds10
                          ds11
                          ds12
                          ds13
                          ds14
                          ds15
                          ds16
                          ds17
                          ds18
                          ds19
                          lvl1019
                          ds21
                          ds22
                          ds23
                          ds24
                          ds25
                          ds26
                          ds27
                          ds28
                          ds29
                          ds30
                          ds31
                          ds32
                          ds33
                          ds34
                          ds35
                          ds36
                          ds37
                          ds38
                          ds39
                          ds40 })
                       ds9
                 } in
                 let {
                   newr2p :: Data.ByteString.Internal.ByteString
                   = case ds6 of wild1 { Lib.AlignedRead ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ->
                     let {
                       cs :: [GHC.Types.Char] = Lib.$fShowUChr_$cshow ds12
                     } in
                     case GHC.List.$wlenAcc @ GHC.Types.Char cs 0# of ww34 { DEFAULT ->
                     Data.ByteString.Internal.$wunsafePackLenChars ww34 cs } }
                 } in
                 case GHC.Prim.andI# ww33 4# of wild1 {
                   DEFAULT
                   -> case ds6 of wild2 { Lib.AlignedRead ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ->
                      case ds11 of wild3 { GHC.Types.I# x# ->
                      case GHC.Prim.andI# x# 4# of wild4 {
                        DEFAULT -> wild
                        0#
                        -> Lib.PairedAln
                             wild2
                             (Lib.AlignedRead
                                ww1
                                ww32
                                ww3
                                ww4
                                ww5
                                ww6
                                ww7
                                ww8
                                ww9
                                ww10
                                newr2p
                                ww12
                                ww13
                                ww14
                                ww15
                                ww16
                                ww17
                                ww18
                                ww19
                                ww20
                                ww21
                                ww22
                                ww23
                                ww24
                                ww25
                                ww26
                                ww27
                                ww28
                                ww29
                                ww30
                                ww31)
                             ds8
                             newr2secs } } }
                   0#
                   -> case ds6 of wild2 { Lib.AlignedRead ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ->
                      case ds11 of wild3 { GHC.Types.I# x# ->
                      let {
                        newr1secs :: [Lib.AlignedRead]
                        = let {
                            lvl1019 :: Data.ByteString.Internal.ByteString
                            = let {
                                cs :: [GHC.Types.Char] = Lib.$fShowUChr_$cshow ww3
                              } in
                              case GHC.List.$wlenAcc @ GHC.Types.Char cs 0# of ww34 { DEFAULT ->
                              Data.ByteString.Internal.$wunsafePackLenChars ww34 cs }
                          } in
                          GHC.Base.map
                            @ Lib.AlignedRead
                            @ Lib.AlignedRead
                            (\ (y :: Lib.AlignedRead) ->
                             case y of wild4 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                             Lib.AlignedRead
                               ds41
                               ds42
                               ds43
                               ds44
                               ds45
                               ds46
                               ds47
                               ds48
                               ds49
                               ds50
                               lvl1019
                               ds52
                               ds53
                               ds54
                               ds55
                               ds56
                               ds57
                               ds58
                               ds59
                               ds60
                               ds61
                               ds62
                               ds63
                               ds64
                               ds65
                               ds66
                               ds67
                               ds68
                               ds69
                               ds70
                               ds71 })
                            ds8
                      } in
                      let {
                        newr1p :: Data.ByteString.Internal.ByteString
                        = let {
                            cs :: [GHC.Types.Char] = Lib.$fShowUChr_$cshow ww3
                          } in
                          case GHC.List.$wlenAcc @ GHC.Types.Char cs 0# of ww34 { DEFAULT ->
                          Data.ByteString.Internal.$wunsafePackLenChars ww34 cs }
                      } in
                      case GHC.Prim.andI# x# 4# of wild4 {
                        DEFAULT
                        -> Lib.PairedAln
                             (Lib.AlignedRead
                                ds10
                                wild3
                                ds12
                                ds13
                                ds14
                                ds15
                                ds16
                                ds17
                                ds18
                                ds19
                                newr1p
                                ds21
                                ds22
                                ds23
                                ds24
                                ds25
                                ds26
                                ds27
                                ds28
                                ds29
                                ds30
                                ds31
                                ds32
                                ds33
                                ds34
                                ds35
                                ds36
                                ds37
                                ds38
                                ds39
                                ds40)
                             ww
                             newr1secs
                             ds9
                        0#
                        -> Lib.PairedAln
                             (Lib.AlignedRead
                                ds10
                                wild3
                                ds12
                                ds13
                                ds14
                                ds15
                                ds16
                                ds17
                                ds18
                                ds19
                                newr1p
                                ds21
                                ds22
                                ds23
                                ds24
                                ds25
                                ds26
                                ds27
                                ds28
                                ds29
                                ds30
                                ds31
                                ds32
                                ds33
                                ds34
                                ds35
                                ds36
                                ds37
                                ds38
                                ds39
                                ds40)
                             (Lib.AlignedRead
                                ww1
                                ww32
                                ww3
                                ww4
                                ww5
                                ww6
                                ww7
                                ww8
                                ww9
                                ww10
                                newr2p
                                ww12
                                ww13
                                ww14
                                ww15
                                ww16
                                ww17
                                ww18
                                ww19
                                ww20
                                ww21
                                ww22
                                ww23
                                ww24
                                ww25
                                ww26
                                ww27
                                ww28
                                ww29
                                ww30
                                ww31)
                             newr1secs
                             newr2secs } } } } } } }) -}
0f7042030032caa4aaff060e45e6779b
  setProperInsertSizeRange ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer -> Lib.PairedAln -> Lib.PairedAln
  {- Arity: 3,
     Strictness: <S,U><L,U><S,1*U(U(U,U(U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U(U,U(U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)>m,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Integer.Type.Integer)
                   (w1 :: GHC.Integer.Type.Integer)
                   (w2 :: Lib.PairedAln) ->
                 case w2 of ww { Lib.PairedAln ww1 ww2 ww3 ww4 ->
                 case Lib.checkInsertSize
                        w
                        w1
                        (Lib.PairedAln ww1 ww2 ww3 ww4) of wild {
                   GHC.Types.False -> Lib.PairedAln ww1 ww2 ww3 ww4
                   GHC.Types.True
                   -> case ww1 of wild1 { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                      case ds24 of wild2 {
                        GHC.Types.False -> Lib.PairedAln wild1 ww2 ww3 ww4
                        GHC.Types.True
                        -> case ww2 of wild3 { Lib.AlignedRead ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ->
                           case ds55 of wild4 {
                             GHC.Types.False -> Lib.PairedAln wild1 wild3 ww3 ww4
                             GHC.Types.True
                             -> Lib.PairedAln
                                  (Lib.AlignedRead
                                     ds6
                                     (case ds7 of wild5 { GHC.Types.I# x# ->
                                      GHC.Types.I# (GHC.Prim.orI# x# 2#) })
                                     ds8
                                     ds9
                                     ds10
                                     ds11
                                     ds12
                                     ds13
                                     ds14
                                     ds15
                                     ds16
                                     ds17
                                     ds18
                                     ds19
                                     ds20
                                     ds21
                                     ds22
                                     ds23
                                     GHC.Types.True
                                     ds25
                                     ds26
                                     ds27
                                     ds28
                                     ds29
                                     ds30
                                     ds31
                                     ds32
                                     ds33
                                     ds34
                                     ds35
                                     ds36)
                                  (Lib.AlignedRead
                                     ds37
                                     (case ds38 of wild5 { GHC.Types.I# x# ->
                                      GHC.Types.I# (GHC.Prim.orI# x# 2#) })
                                     ds39
                                     ds40
                                     ds41
                                     ds42
                                     ds43
                                     ds44
                                     ds45
                                     ds46
                                     ds47
                                     ds48
                                     ds49
                                     ds50
                                     ds51
                                     ds52
                                     ds53
                                     ds54
                                     GHC.Types.True
                                     ds56
                                     ds57
                                     ds58
                                     ds59
                                     ds60
                                     ds61
                                     ds62
                                     ds63
                                     ds64
                                     ds65
                                     ds66
                                     ds67)
                                  ww3
                                  ww4 } } } } } }) -}
f22117b9fcebff7db9d1ec526cd2a75b
  setProperPairMapFlagBit :: GHC.Types.Int -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (flg :: GHC.Types.Int) ->
                 case flg of wild { GHC.Types.I# x# ->
                 GHC.Types.I# (GHC.Prim.orI# x# 2#) }) -}
14563f067e07de2879ba618864cddaa6
  setZeroLengthAlnFlag :: GHC.Types.Int -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (flg :: GHC.Types.Int) ->
                 case flg of wild { GHC.Types.I# x# ->
                 GHC.Types.I#
                   (GHC.Prim.andI#
                      (GHC.Prim.andI# (GHC.Prim.orI# (GHC.Prim.andI# x# -3#) 4#) -257#)
                      -2049#) }) -}
3549a82ae3b502f503604a25b0921cdd
  setZeroLengthPairFlag :: GHC.Types.Int -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (flg :: GHC.Types.Int) ->
                 case flg of wild { GHC.Types.I# x# ->
                 GHC.Types.I# (GHC.Prim.orI# (GHC.Prim.andI# x# -3#) 8#) }) -}
fd6d1aaaa0b5799ad9df53b6fb3502f5
  setpintflag :: Data.Foldable.Foldable t => t a -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLC(S(S))LLLLL),1*U(A,A,A,A,A,A,A,A,A,A,1*C1(U(U)),A,A,A,A,A)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ t :: * -> *
                   @ a
                   ($dFoldable :: Data.Foldable.Foldable t)
                   (hits :: t a) ->
                 case Data.Foldable.length
                        @ t
                        $dFoldable
                        @ a
                        hits of wild { GHC.Types.I# x ->
                 GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.># x 0#) }) -}
a6a848aa6ae6ab8c03e6af9821709dd7
  showChrom :: Lib.ChromNameFormat -> Lib.UChr -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (fmt :: Lib.ChromNameFormat) (chr :: Lib.UChr) ->
                 case fmt of wild {
                   Lib.GRC
                   -> case chr of wild1 {
                        DEFAULT -> Lib.showChrom51
                        Lib.Chr1 -> Lib.showChrom50
                        Lib.Chr2 -> Lib.showChrom49
                        Lib.Chr3 -> Lib.showChrom48
                        Lib.Chr4 -> Lib.showChrom47
                        Lib.Chr5 -> Lib.showChrom46
                        Lib.Chr6 -> Lib.showChrom45
                        Lib.Chr7 -> Lib.showChrom44
                        Lib.Chr8 -> Lib.showChrom43
                        Lib.Chr9 -> Lib.showChrom42
                        Lib.Chr10 -> Lib.showChrom41
                        Lib.Chr11 -> Lib.showChrom40
                        Lib.Chr12 -> Lib.showChrom39
                        Lib.Chr13 -> Lib.showChrom38
                        Lib.Chr14 -> Lib.showChrom37
                        Lib.Chr15 -> Lib.showChrom36
                        Lib.Chr16 -> Lib.showChrom35
                        Lib.Chr17 -> Lib.showChrom34
                        Lib.Chr18 -> Lib.showChrom33
                        Lib.Chr19 -> Lib.showChrom32
                        Lib.Chr20 -> Lib.showChrom31
                        Lib.Chr21 -> Lib.showChrom30
                        Lib.Chr22 -> Lib.showChrom29
                        Lib.ChrX -> Lib.showChrom28
                        Lib.ChrY -> Lib.showChrom27
                        Lib.ChrM -> Lib.showChrom26 }
                   Lib.UCSC
                   -> case chr of wild1 {
                        DEFAULT -> Lib.showChrom51
                        Lib.Chr1 -> Lib.showChrom25
                        Lib.Chr2 -> Lib.showChrom24
                        Lib.Chr3 -> Lib.showChrom23
                        Lib.Chr4 -> Lib.showChrom22
                        Lib.Chr5 -> Lib.showChrom21
                        Lib.Chr6 -> Lib.showChrom20
                        Lib.Chr7 -> Lib.showChrom19
                        Lib.Chr8 -> Lib.showChrom18
                        Lib.Chr9 -> Lib.showChrom17
                        Lib.Chr10 -> Lib.showChrom16
                        Lib.Chr11 -> Lib.showChrom15
                        Lib.Chr12 -> Lib.showChrom14
                        Lib.Chr13 -> Lib.showChrom13
                        Lib.Chr14 -> Lib.showChrom12
                        Lib.Chr15 -> Lib.showChrom11
                        Lib.Chr16 -> Lib.showChrom10
                        Lib.Chr17 -> Lib.showChrom9
                        Lib.Chr18 -> Lib.showChrom8
                        Lib.Chr19 -> Lib.showChrom7
                        Lib.Chr20 -> Lib.showChrom6
                        Lib.Chr21 -> Lib.showChrom5
                        Lib.Chr22 -> Lib.showChrom4
                        Lib.ChrX -> Lib.showChrom3
                        Lib.ChrY -> Lib.showChrom2
                        Lib.ChrM -> Lib.showChrom1 } }) -}
2ee21c02f6b394174238f9bf1e2fbb3d
  showChrom1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#) -}
15ae04cf5fb9a40dabc429b19eda5960
  showChrom10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#9) -}
6bece5fc8be7afd5478453caad2bce72
  showChrom11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#10) -}
7de9e63c133551859319f1058f2a61b7
  showChrom12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#11) -}
db933a66eb56f37c36fb43a13a56a301
  showChrom13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#12) -}
3750f4ff82f356362f3284d1721acb0d
  showChrom14 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#13) -}
4d25bf9f7fd539c887511ba6a7197ebb
  showChrom15 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#14) -}
d3a687a7b99555179066259151494e96
  showChrom16 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#15) -}
13ec53323e14702731a2a02eda69a979
  showChrom17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#16) -}
5d6ec6446af5682f060c25113aa58c89
  showChrom18 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#17) -}
72f93f75eeb6399ad61148d7c015af9b
  showChrom19 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#18) -}
8000c1ee69d2ac54b8da16834c84e9d1
  showChrom2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#1) -}
5bdbcae4187f75e341a8bb14c8ff7dcb
  showChrom20 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#19) -}
6d861f3762bb389d925a2605423ed9d7
  showChrom21 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#20) -}
2705552e5b5bd3f0752cbb1455d751f4
  showChrom22 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#21) -}
1fded6a541c80bfd49ce84416c16c813
  showChrom23 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#22) -}
5a11fbf62d311cdd10679cb0140732db
  showChrom24 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#23) -}
d48693c4407851d09a39c2df46174bb6
  showChrom25 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#24) -}
279147d53a98a25829bcfa379c0975d0
  showChrom26 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#25) -}
0a08d36b3a0d085be089c533b41b76a9
  showChrom27 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#26) -}
ef14bfab9943b77b80ff59515dae9230
  showChrom28 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#27) -}
d846b871e8a8b86294e19583b6a440d2
  showChrom29 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#28) -}
118f9c72e8bb218061553dd9a1e06c6a
  showChrom3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#2) -}
0df66e21bd1f664dc8c000abe188c118
  showChrom30 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#29) -}
d2b2906e73d3b7f61d98feeeacf5b76f
  showChrom31 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#30) -}
8d35c22d621e412e7019c1f26ff9b41e
  showChrom32 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#31) -}
f14f2d083c939a4c5c34fbe5ca52dd26
  showChrom33 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#32) -}
c42175c09eb1a1b0fe53ff5722ef9ef3
  showChrom34 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#33) -}
27e9671e0cd6edf7e3456b7d7e141574
  showChrom35 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#34) -}
b3739af6a31e98953f3af2b1a0a7b4ba
  showChrom36 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#35) -}
8bfe68c5af18921904bfb3136b96ead3
  showChrom37 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#36) -}
0b77c59b3ffc608c17552278d1a2310c
  showChrom38 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#37) -}
0c3bedb966739041046e13f46fa33890
  showChrom39 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#38) -}
81d011a8003de941d8a91c32df1906b4
  showChrom4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#3) -}
cc8944750d15cb1cc41bcc15c90119fe
  showChrom40 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#39) -}
4c20e714e20cfbb90262520295e916cc
  showChrom41 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#40) -}
c6ecad576ea1f5b78b111613fdf155ab
  showChrom42 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#41) -}
89ff42ee888c3300eaf7f12eb58d39d0
  showChrom43 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#42) -}
efd31c13050845c0a7f332eb5e9754b8
  showChrom44 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#43) -}
f33926a50d1cc224c5849926fbc536ba
  showChrom45 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#44) -}
6d54834fddc0f634cf756d085a752a1d
  showChrom46 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#45) -}
a56c998a9c3cff78ccad1d49f18e3424
  showChrom47 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#46) -}
29ea86b3005bad95e542b1b4ee8d4738
  showChrom48 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#47) -}
c8846a70aa9b230fbe5d00812f92efdf
  showChrom49 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#48) -}
5e9a0c9539eb6cc060f29336ed203c6b
  showChrom5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#4) -}
a32b0f2c93689c042e3d49f2ca3d8429
  showChrom50 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#49) -}
bdcd91fc7c19b937b48c15b05027397d
  showChrom51 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.addtrimtag_addr#2) -}
762e317d30d6194cf206d5c42a038fd9
  showChrom6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#5) -}
75662899e6ff546fcc9bc581c32892fe
  showChrom7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#6) -}
ef61b3aae64d32b83ce422c5a74f7b29
  showChrom8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#7) -}
478cd9fa1297376b43212f92ccb1a963
  showChrom9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#8) -}
0d5bd3d2d9814e34145ec9711096ef64
  showChrom_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chrM"#) -}
4dd8028ebd9c2bba4c3f58babfd9ebf6
  showChrom_addr#1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chrY"#) -}
6fb681f9f321698a6415d295d8f44540
  showChrom_addr#10 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr15"#) -}
e35833f1cb5ea3eabd5906cb05050931
  showChrom_addr#11 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr14"#) -}
d24d2073d7aeeb7356cd9aea48e4a433
  showChrom_addr#12 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr13"#) -}
bbbbc0004de91e4468c1c5b0604b3bd1
  showChrom_addr#13 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr12"#) -}
cf7b0b8d25a3db1e59e1650ada87813e
  showChrom_addr#14 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr11"#) -}
812ea289e01c7c13a25136e412dd46b1
  showChrom_addr#15 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr10"#) -}
ba6bdb4ab47ce2dff15f348bbfdb130b
  showChrom_addr#16 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr9"#) -}
4366c0d90fa0f987e602056c7610f37b
  showChrom_addr#17 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr8"#) -}
94ace2d825c8a84f0ad1f2b7ba3d20b0
  showChrom_addr#18 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr7"#) -}
37cff07a47a94e334beed07238e7c605
  showChrom_addr#19 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr6"#) -}
da369f10568bb675465fb893c23deaba
  showChrom_addr#2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chrX"#) -}
20c25940057ed83c280be3ef18d24df6
  showChrom_addr#20 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr5"#) -}
6c8570ec36d7a0315576b628eca5c84f
  showChrom_addr#21 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr4"#) -}
ec7c27b41c0adfe0ef55923f166c3062
  showChrom_addr#22 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr3"#) -}
a0c7db7aec8ffdb807a0a3f13f8debcf
  showChrom_addr#23 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr2"#) -}
c5c772e68aa51b0f9c8d76cecaad6b4f
  showChrom_addr#24 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr1"#) -}
fddec743989b330e281b76a3ce81afd5
  showChrom_addr#25 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("MT"#) -}
ae2c7e9ad3b8a98fe90350c03275d29a
  showChrom_addr#26 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Y"#) -}
1b2f4408051d310206df2d3b4fe1e4bf
  showChrom_addr#27 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("X"#) -}
5b530d8cc4551c363a0ae5d1f7476415
  showChrom_addr#28 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("22"#) -}
02b09fe13bce9c04b8e0629b58f90906
  showChrom_addr#29 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("21"#) -}
55a4aacaaf27bcebed94471c35b4b3e5
  showChrom_addr#3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr22"#) -}
76c7c99b1d4cf04ee46591e82b1da18f
  showChrom_addr#30 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("20"#) -}
1b9319ae0708fcd958c29deafa58021b
  showChrom_addr#31 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("19"#) -}
92f07d58345ce6f4821d3c0122ac6d43
  showChrom_addr#32 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("18"#) -}
5f75a2d3c3efb0af90cb985e9efe3acd
  showChrom_addr#33 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("17"#) -}
d662df079bf3d8235545dd56a85923dc
  showChrom_addr#34 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("16"#) -}
a14c019b813a767e96d355d34c813ade
  showChrom_addr#35 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("15"#) -}
d0bb8c7011d9c3fa903f8f2011e46670
  showChrom_addr#36 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("14"#) -}
38e3d53371c93f30ad577ebf40c7880c
  showChrom_addr#37 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("13"#) -}
f0a6f14a27fa33e23d16400424cb1bf2
  showChrom_addr#38 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("12"#) -}
50a286b8eadacbd8734270a4dde57a93
  showChrom_addr#39 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("11"#) -}
546bd2e478b0ed1b9277bb60760d92f2
  showChrom_addr#4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr21"#) -}
45d15613298656cd72fa18401a484689
  showChrom_addr#40 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("10"#) -}
2b433cb327b68a49e73e99506822ed2e
  showChrom_addr#41 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("9"#) -}
e01efa9727e7e9da8dbf2a47058bee4c
  showChrom_addr#42 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("8"#) -}
8790f3237ea06eea3dcec3f30f19f7d7
  showChrom_addr#43 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("7"#) -}
c54683e3d76fe5b5ee0ce250dbd8a024
  showChrom_addr#44 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("6"#) -}
346ef4a4b121f1ca4fe699d8a0e64044
  showChrom_addr#45 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("5"#) -}
a0c13b51d78402a689089f455cb90ef3
  showChrom_addr#46 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("4"#) -}
d272deacc05d0c2bcb9e3257fd40d8eb
  showChrom_addr#47 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("3"#) -}
6cb4be1771665c4c9029070b8c0854dc
  showChrom_addr#48 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("2"#) -}
2c00fb113d6a4903dd5d9f1bb03b90a9
  showChrom_addr#49 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("1"#) -}
6effbe62a33f59c679f0a2035a0ad46b
  showChrom_addr#5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr20"#) -}
a173b6b3213f5328942a9fe93a4c6fbd
  showChrom_addr#6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr19"#) -}
6c1058846cedc5da66a02c103ba19ac6
  showChrom_addr#7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr18"#) -}
e099bc6cf935ba5a1e6e8688d265537e
  showChrom_addr#8 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr17"#) -}
fe221cefad0812cda49f25c59188b9ef
  showChrom_addr#9 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr16"#) -}
d185c2daf16dd2c14e6445b90e6c72a7
  showcigar ::
    (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
    -> Data.ByteString.Internal.ByteString
  {- Arity: 1, Strictness: <L,U(U,1*U)>,
     Unfolding: (\ (cm :: (GHC.Integer.Type.Integer,
                           Data.ByteString.Internal.ByteString)) ->
                 GHC.Base.mappend
                   @ Data.ByteString.Internal.ByteString
                   Data.ByteString.Internal.$fMonoidByteString
                   (case cm of wild { (,) x ds6 ->
                    case GHC.Show.$w$cshowsPrec4
                           0#
                           x
                           (GHC.Types.[] @ GHC.Types.Char) of ww2 { (#,#) ww3 ww4 ->
                    let {
                      cs :: [GHC.Types.Char] = GHC.Types.: @ GHC.Types.Char ww3 ww4
                    } in
                    case GHC.List.$wlenAcc @ GHC.Types.Char cs 0# of ww { DEFAULT ->
                    Data.ByteString.Internal.$wunsafePackLenChars ww cs } } })
                   (case cm of wild { (,) ds6 y -> y })) -}
07d343872f2618c1528c9c9d40e9ddd6
  skipcolon :: Data.Attoparsec.ByteString.Internal.Parser ()
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.skipcolon_go1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <()>_R)) -}
c394ab5ada989b7b076818c87393e2dd
  skipcolon_go1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         ()
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            ()
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wgo7 @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w4 } }) -}
702609d8da67b0d9f67ab238dcd1cdb7
  sndInPair :: Lib.SAMFlag -> GHC.Types.Bool
  RecSel Left Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLSLLLL),1*U(A,A,A,A,A,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.SAMFlag) ->
                 case ds6 of wild { Lib.SAMFlag ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds14 }) -}
6f19773577bdf1a116e6a2279d330c12
  softclipOps :: Lib.CigarMod -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.CigarMod
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLL),1*U(A,A,1*U(U,U,U,U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.CigarMod) ->
                 case ds6 of wild { Lib.CigarMod ds7 ds8 ds9 ds10 ds11 -> ds9 }) -}
2db844deac55866dcffed53ecea6795d
  softclipbase :: Lib.CigarMod -> Lib.CigarMod
  {- Arity: 1, Strictness: <S(LLLLS),1*U(U,U,U,U(U,U,U,U),1*U)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.CigarMod) ->
                 case w of ww { Lib.CigarMod ww1 ww2 ww3 ww4 ww5 ->
                 case Lib.$wsoftclipbase
                        ww1
                        ww2
                        ww3
                        ww4
                        ww5 of ww6 { (#,,,,#) ww7 ww8 ww9 ww10 ww11 ->
                 Lib.CigarMod ww7 ww8 ww9 ww10 ww11 } }) -}
19c831195160d13933276ad71f6635ec
  softclipinterval ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> Lib.CigarMod
  {- Arity: 3, Strictness: <L,U><L,U><L,U(U,U,U,U)>m,
     Unfolding: InlineRule (3, True, False)
                (\ (cpos :: GHC.Integer.Type.Integer)
                   (endpos1 :: GHC.Integer.Type.Integer)
                   (cigops :: Data.ByteString.Internal.ByteString) ->
                 Lib.softclipbase
                   (Lib.CigarMod
                      cpos
                      endpos1
                      Data.ByteString.empty
                      cigops
                      GHC.Types.False)) -}
d0f70247288588656a91ad43cbaf2d11
  spaces ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString [()]
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,A><L,A>,
     Unfolding: InlineRule (0, True, True)
                Lib.spaces1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <[()]>_R)) -}
476dec51f107f84b4ad3be58d6f6ae09
  spaces1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [()]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,A><L,A>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [()]
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wspaces @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 } }) -}
147dc5755a12d676df12943cae969834
  spaces2 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> ()
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 4,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,A> -}
0ce9ee8145c294ecd516858791caf39e
  starcigarP ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString
      [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.checkCigarSeqlen2
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <[(GHC.Integer.Type.Integer,
                             Data.ByteString.Internal.ByteString)]>_R)) -}
b27cefdd8405a17038845775c0c42c29
  start1 :: Lib.BEDPE -> GHC.Integer.Type.Integer
  RecSel Left Lib.BEDPE
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLL),1*U(A,1*U,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.BEDPE) ->
                 case ds6 of wild { Lib.BEDPE ds7 ds8 ds9 ds10 ds11 ds12 ds13 ->
                 ds8 }) -}
b27cefdd8405a17038845775c0c42c29
  start2 :: Lib.BEDPE -> GHC.Integer.Type.Integer
  RecSel Left Lib.BEDPE
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLL),1*U(A,A,A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.BEDPE) ->
                 case ds6 of wild { Lib.BEDPE ds7 ds8 ds9 ds10 ds11 ds12 ds13 ->
                 ds11 }) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  strand :: Lib.AlignedRead -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLSLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds23 }) -}
e57e76f1f62e827d44cc1c47b6b55cb3
  sumMatches ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> GHC.Integer.Type.Integer
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (cigs :: [(GHC.Integer.Type.Integer,
                              Data.ByteString.Internal.ByteString)]) ->
                 Lib.getAlignedLength_go cigs Lib.defaultBed2) -}
8d16ed66f11729325640ab1ee5b27e79
  sumRefMatches ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> GHC.Integer.Type.Integer
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (cigs :: [(GHC.Integer.Type.Integer,
                              Data.ByteString.Internal.ByteString)]) ->
                 Lib.getTrimdcigCoordDiff_go cigs Lib.defaultBed2) -}
79279be8be1010bf3eeee0cd971a57dd
  sumSeqMatches ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> GHC.Integer.Type.Integer
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (cigs :: [(GHC.Integer.Type.Integer,
                              Data.ByteString.Internal.ByteString)]) ->
                 Lib.getcigseqdiff_go cigs Lib.defaultBed2) -}
447651c5c506a3e4d3f29ea16201c9fc
  sumSoftClipCigOps ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> GHC.Types.Int
  {- Arity: 1, Strictness: <S,1*U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: [(GHC.Integer.Type.Integer,
                           Data.ByteString.Internal.ByteString)]) ->
                 case Lib.$wgl (Lib.sumSoftClipCigOps_go w) 0# of ww { DEFAULT ->
                 GHC.Types.I# ww }) -}
7c13cf5a7ec026d14979c8d24b050b82
  sumSoftClipCigOpsDepr ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> GHC.Types.Int
  {- Arity: 1, Strictness: <S,1*U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: [(GHC.Integer.Type.Integer,
                           Data.ByteString.Internal.ByteString)]) ->
                 case Lib.$wgl1
                        (Lib.sumSoftClipCigOpsDepr_go w)
                        0# of ww { DEFAULT ->
                 GHC.Types.I# ww }) -}
9eab112d37555102e36ce8b2f82a7205
  sumSoftClipCigOpsDepr_go ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> [Data.ByteString.Internal.ByteString]
  {- Arity: 1, Strictness: <S,1*U> -}
edc77d7f68b388f5687175d4ae963243
  sumSoftClipCigOps_go ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> [Data.ByteString.Internal.ByteString]
  {- Arity: 1, Strictness: <S,1*U> -}
85fc0787587eee45a369151b0cf0836e
  taketrim ::
    GHC.Integer.Type.Integer
    -> [(GHC.Integer.Type.Integer,
         Data.ByteString.Internal.ByteString)]
    -> [(GHC.Integer.Type.Integer,
         Data.ByteString.Internal.ByteString)]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U>,
     Unfolding: (\ (cnt :: GHC.Integer.Type.Integer)
                   (cs :: [(GHC.Integer.Type.Integer,
                            Data.ByteString.Internal.ByteString)]) ->
                 GHC.List.takeWhile
                   @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                   (\ (x :: (GHC.Integer.Type.Integer,
                             Data.ByteString.Internal.ByteString)) ->
                    case x of wild { (,) x1 ds6 ->
                    case GHC.Integer.Type.leInteger# x1 cnt of wild1 { DEFAULT ->
                    GHC.Prim.tagToEnum# @ GHC.Types.Bool wild1 } })
                   cs) -}
b5f7c91e0a039228d8ca476cc3bdf320
  targetbed :: Lib.MidFamily -> Lib.BedRecord
  RecSel Left Lib.MidFamily
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLS),1*U(A,A,A,A,A,A,A,A,A,1*U(U,U,U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MidFamily) ->
                 case ds6 of wild { Lib.MidFamily ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds16 }) -}
6f19773577bdf1a116e6a2279d330c12
  targetpos :: Lib.CigarMod -> GHC.Integer.Type.Integer
  RecSel Left Lib.CigarMod
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSLLL),1*U(A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.CigarMod) ->
                 case ds6 of wild { Lib.CigarMod ds7 ds8 ds9 ds10 ds11 -> ds8 }) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  tbed :: Lib.AlignedRead -> Lib.BedRecord
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLSL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U,U,U,U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds36 }) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  tlen :: Lib.AlignedRead -> GHC.Integer.Type.Integer
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLSLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds19 }) -}
da55f560701f083b03ee2721c4c8bb77
  toBin :: GHC.Types.Int -> GHC.Base.String
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (n :: GHC.Types.Int) ->
                 case Data.Digits.mDigitsRev
                        @ GHC.Types.Int
                        GHC.Real.$fIntegralInt
                        Lib.toBin1
                        n of wild {
                   GHC.Base.Nothing
                   -> case Data.Maybe.fromJust1 ret_ty [GHC.Types.Char] of {}
                   GHC.Base.Just x1
                   -> Lib.toBin_go
                        (GHC.List.reverse1
                           @ GHC.Types.Int
                           x1
                           (GHC.Types.[] @ GHC.Types.Int)) }) -}
5ec9625b5eaa742460b5da165de747aa
  toBin1 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 2#) -}
e1dec7ef74038e5a60b5d3621efde12b
  toBinInt :: GHC.Base.String -> GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (n :: GHC.Base.String) ->
                 case Text.Read.readEither8
                        @ GHC.Types.Int
                        (Text.ParserCombinators.ReadP.run
                           @ GHC.Types.Int
                           Lib.toBinInt3
                           n) of wild {
                   [] -> Lib.toBinInt2
                   : x ds6
                   -> case ds6 of wild1 { [] -> x : ipv ipv1 -> Lib.toBinInt1 } }) -}
b2698cb86a2647c29ba61ed5951f0cbe
  toBinInt1 :: GHC.Types.Int
  {- Strictness: x -}
7b4f4a6d49ac7637935f1f40992e55f1
  toBinInt2 :: GHC.Types.Int
  {- Strictness: x -}
fbaf0b55b2bb43de071754d811e09fba
  toBinInt3 :: Text.ParserCombinators.ReadP.P GHC.Types.Int
  {- Unfolding: (GHC.Read.$fReadInt_$sreadNumber
                   GHC.Read.$fReadInt2
                   Text.ParserCombinators.ReadPrec.minPrec
                   @ GHC.Types.Int
                   (Text.Read.readEither7 @ GHC.Types.Int)) -}
5135f7194bd8b6ad411ab23553a19c33
  toBin_go :: [GHC.Types.Int] -> [GHC.Types.Char]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
91a2f6341164b49dab953e9b85490cc5
  trimPairedAlns :: Lib.PairedAln -> Lib.PairedAln
  {- Arity: 1,
     Strictness: <L,U(1*U(U,U(U),U,U,U,U,U(U,U,U,U),A,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),1*U(U,U(U),U,U,U,U,U(U,U,U,U),A,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),1*U,1*U)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.PairedAln) ->
                 Lib.PairedAln
                   (case w of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                    Lib.trimalignment ds6 })
                   (case w of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                    Lib.trimalignment ds7 })
                   (case w of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                    GHC.Base.map
                      @ Lib.AlignedRead
                      @ Lib.AlignedRead
                      Lib.trimalignment
                      ds8 })
                   (case w of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                    GHC.Base.map
                      @ Lib.AlignedRead
                      @ Lib.AlignedRead
                      Lib.trimalignment
                      ds9 })) -}
2fb0b349d12dfa346c9d92dc9bd74486
  trimalignment :: Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 1,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLSLLLLLLLLLLL),1*U(U,U(U),U,U,U,U,U(U,U,U,U),A,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Unfolding: (\ (a :: Lib.AlignedRead) ->
                 case a of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 let {
                   mapdaln :: GHC.Types.Bool
                   = case ds7 of wild1 { GHC.Types.I# x# ->
                     case GHC.Prim.andI# x# 4# of wild2 {
                       DEFAULT -> GHC.Types.False 0# -> GHC.Types.True } }
                 } in
                 let {
                   $j :: Lib.AlignedRead <join 0>
                   = let {
                       $j1 :: Lib.AlignedRead <join 0>
                       = let {
                           $j2 :: Lib.AlignedRead <join 0>
                           = case GHC.Classes.$fEq[]_$c==
                                    @ Lib.BedRecord
                                    Lib.$fEqBedRecord
                                    ds25
                                    (GHC.Types.[] @ Lib.BedRecord) of wild1 {
                               GHC.Types.False
                               -> Lib.AlignedRead
                                    ds6
                                    ds7
                                    ds8
                                    ds9
                                    ds10
                                    ds11
                                    ds12
                                    ds12
                                    ds14
                                    ds15
                                    ds16
                                    ds17
                                    ds18
                                    ds19
                                    ds20
                                    ds21
                                    ds22
                                    ds23
                                    ds24
                                    ds25
                                    ds26
                                    ds27
                                    ds28
                                    ds29
                                    ds30
                                    ds31
                                    ds32
                                    ds33
                                    ds34
                                    ds35
                                    ds36
                               GHC.Types.True
                               -> case GHC.Classes.$fEq[]_$c==
                                         @ Lib.BedRecord
                                         Lib.$fEqBedRecord
                                         ds26
                                         (GHC.Types.[] @ Lib.BedRecord) of wild2 { DEFAULT ->
                                  Lib.AlignedRead
                                    ds6
                                    ds7
                                    ds8
                                    ds9
                                    ds10
                                    ds11
                                    ds12
                                    ds12
                                    ds14
                                    ds15
                                    ds16
                                    ds17
                                    ds18
                                    ds19
                                    ds20
                                    ds21
                                    ds22
                                    ds23
                                    ds24
                                    ds25
                                    ds26
                                    ds27
                                    ds28
                                    ds29
                                    ds30
                                    ds31
                                    ds32
                                    ds33
                                    ds34
                                    ds35
                                    ds36 } }
                         } in
                         case GHC.Classes.$fEq[]_$c==
                                @ Lib.BedRecord
                                Lib.$fEqBedRecord
                                ds25
                                (GHC.Types.[] @ Lib.BedRecord) of wild1 {
                           GHC.Types.False -> $j2
                           GHC.Types.True
                           -> case GHC.Classes.$fEq[]_$c==
                                     @ Lib.BedRecord
                                     Lib.$fEqBedRecord
                                     ds26
                                     (GHC.Types.[] @ Lib.BedRecord) of wild2 {
                                GHC.Types.False
                                -> case mapdaln of wild3 {
                                     GHC.Types.False -> $j2 GHC.Types.True -> Lib.trimrev wild }
                                GHC.Types.True -> $j2 } }
                     } in
                     case GHC.Classes.$fEq[]_$c==
                            @ Lib.BedRecord
                            Lib.$fEqBedRecord
                            ds25
                            (GHC.Types.[] @ Lib.BedRecord) of wild1 {
                       GHC.Types.False
                       -> case GHC.Classes.$fEq[]_$c==
                                 @ Lib.BedRecord
                                 Lib.$fEqBedRecord
                                 ds26
                                 (GHC.Types.[] @ Lib.BedRecord) of wild2 {
                            GHC.Types.False -> $j1
                            GHC.Types.True
                            -> case mapdaln of wild3 {
                                 GHC.Types.False -> $j1 GHC.Types.True -> Lib.trimfwd wild } }
                       GHC.Types.True -> $j1 }
                 } in
                 case GHC.Classes.$fEq[]_$c==
                        @ Lib.BedRecord
                        Lib.$fEqBedRecord
                        ds25
                        (GHC.Types.[] @ Lib.BedRecord) of wild1 {
                   GHC.Types.False
                   -> case GHC.Classes.$fEq[]_$c==
                             @ Lib.BedRecord
                             Lib.$fEqBedRecord
                             ds26
                             (GHC.Types.[] @ Lib.BedRecord) of wild2 {
                        GHC.Types.False
                        -> case mapdaln of wild3 {
                             GHC.Types.False -> $j GHC.Types.True -> Lib.trimboth wild }
                        GHC.Types.True -> $j }
                   GHC.Types.True -> $j } }) -}
0565ba5df0d69916099d7316b408c89b
  trimboth :: Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 1,
     Strictness: <S,1*U(U,U,U,U,U,U,U(U,U,U,U),A,U,A,U,U,U,U,U,U,U,U,U,U,U,U,A,A,A,U,U,U,U,U,A)>,
     Unfolding: (\ (a :: Lib.AlignedRead) ->
                 case a of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 let {
                   newendpos :: GHC.Integer.Type.Integer
                   = case ds26 of wild1 {
                       [] -> case GHC.List.badHead ret_ty GHC.Integer.Type.Integer of {}
                       : x ds37
                       -> case x of wild2 { Lib.BedRecord ds38 ds39 ds40 ds41 -> ds39 } }
                 } in
                 let {
                   rdiff :: GHC.Integer.Type.Integer
                   = GHC.Integer.Type.minusInteger ds10 newendpos
                 } in
                 let {
                   tendpos :: GHC.Integer.Type.Integer
                   = case GHC.Integer.Type.ltInteger#
                            rdiff
                            Lib.defaultBed2 of wild1 { DEFAULT ->
                     case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild1 of wild2 {
                       GHC.Types.False -> newendpos GHC.Types.True -> ds10 } }
                 } in
                 let {
                   newpos :: GHC.Integer.Type.Integer
                   = case ds25 of wild1 {
                       [] -> case GHC.List.badHead ret_ty GHC.Integer.Type.Integer of {}
                       : x ds37
                       -> case x of wild2 { Lib.BedRecord ds38 ds39 ds40 ds41 -> ds40 } }
                 } in
                 let {
                   fdiff :: GHC.Integer.Type.Integer
                   = GHC.Integer.Type.minusInteger newpos ds9
                 } in
                 let {
                   newcig :: Data.ByteString.Internal.ByteString
                   = case ds12 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                     Lib.$wupdateCigB fdiff rdiff ww1 ww2 ww3 ww4 }
                 } in
                 let {
                   tpos :: GHC.Integer.Type.Integer
                   = case GHC.Integer.Type.ltInteger#
                            fdiff
                            Lib.defaultBed2 of wild1 { DEFAULT ->
                     case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild1 of wild2 {
                       GHC.Types.False -> newpos GHC.Types.True -> ds9 } }
                 } in
                 Lib.AlignedRead
                   ds6
                   ds7
                   ds8
                   ds9
                   ds10
                   ds11
                   ds12
                   newcig
                   ds14
                   (case newcig of wild1 { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                    case Lib.$wparseCigar
                           @ [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                           dt
                           dt1
                           dt2
                           dt3
                           dt3
                           0#
                           0#
                           Data.Attoparsec.Internal.Types.Complete
                           (Data.Attoparsec.ByteString.Internal.failK
                              @ [(GHC.Integer.Type.Integer,
                                  Data.ByteString.Internal.ByteString)])
                             `cast`
                           (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                            ->_R <Data.Attoparsec.Internal.Types.Pos
                                  -> Data.Attoparsec.Internal.Types.More
                                  -> [GHC.Base.String]
                                  -> GHC.Base.String
                                  -> Data.Attoparsec.Internal.Types.IResult
                                       Data.ByteString.Internal.ByteString
                                       [(GHC.Integer.Type.Integer,
                                         Data.ByteString.Internal.ByteString)]>_R)
                           (Data.Attoparsec.ByteString.Internal.successK
                              @ [(GHC.Integer.Type.Integer,
                                  Data.ByteString.Internal.ByteString)])
                             `cast`
                           (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                            ->_R <Data.Attoparsec.Internal.Types.Pos
                                  -> Data.Attoparsec.Internal.Types.More
                                  -> [(GHC.Integer.Type.Integer,
                                       Data.ByteString.Internal.ByteString)]
                                  -> Data.Attoparsec.Internal.Types.IResult
                                       Data.ByteString.Internal.ByteString
                                       [(GHC.Integer.Type.Integer,
                                         Data.ByteString.Internal.ByteString)]>_R) of wild2 {
                      Data.Attoparsec.Internal.Types.Fail ds37 ds38 err
                      -> case ds38 of wild3 { DEFAULT ->
                         GHC.List.badHead
                           @ [(GHC.Integer.Type.Integer,
                               Data.ByteString.Internal.ByteString)] }
                      Data.Attoparsec.Internal.Types.Partial ipv
                      -> case Lib.checkCigarSeqlen1 ret_ty Lib.CigarMap of {}
                      Data.Attoparsec.Internal.Types.Done ds37 a1 -> a1 } })
                   ds16
                   ds17
                   ds18
                   ds19
                   ds20
                   ds21
                   ds22
                   ds23
                   ds24
                   ds25
                   ds26
                   ds27
                   (case GHC.Integer.Type.neqInteger# ds9 tpos of wild1 { DEFAULT ->
                    case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild1 of wild2 {
                      GHC.Types.False -> GHC.Integer.Type.neqInteger ds10 tendpos
                      GHC.Types.True -> GHC.Types.True } })
                   tpos
                   tendpos
                   ds31
                   ds32
                   ds33
                   ds34
                   ds35
                   (Lib.boolZeroLengthCigar newcig) }) -}
6f19773577bdf1a116e6a2279d330c12
  trimcomplete :: Lib.CigarMod -> GHC.Types.Bool
  RecSel Left Lib.CigarMod
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLLS),1*U(A,A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.CigarMod) ->
                 case ds6 of wild { Lib.CigarMod ds7 ds8 ds9 ds10 ds11 -> ds11 }) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  trimdToZeroLength :: Lib.AlignedRead -> GHC.Types.Bool
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLS),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds37 }) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  trimdcigar ::
    Lib.AlignedRead -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLSLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds14 }) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  trimdcigmap :: Lib.AlignedRead -> Lib.CigarMap
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLSLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds16 }) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  trimdendpos :: Lib.AlignedRead -> GHC.Integer.Type.Integer
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLSLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds31 }) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  trimdflag :: Lib.AlignedRead -> GHC.Types.Bool
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLSLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds29 }) -}
c13536c0ddcfc999f8a708d0f6fd76f1
  trimdpos :: Lib.AlignedRead -> GHC.Integer.Type.Integer
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLSLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds30 }) -}
13125ab519b7cb7c8d07bf95a4070f34
  trimfwd :: Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 1,
     Strictness: <S,1*U(U,U,U,U,U,U,U(U,U,U,U),A,U,A,U,U,U,U,U,U,U,U,U,U,U,U,A,A,U,U,U,U,U,U,A)>,
     Unfolding: (\ (a :: Lib.AlignedRead) ->
                 case a of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 let {
                   newpos :: GHC.Integer.Type.Integer
                   = case ds25 of wild1 {
                       [] -> case GHC.List.badHead ret_ty GHC.Integer.Type.Integer of {}
                       : x ds37
                       -> case x of wild2 { Lib.BedRecord ds38 ds39 ds40 ds41 -> ds40 } }
                 } in
                 let {
                   fdiff :: GHC.Integer.Type.Integer
                   = GHC.Integer.Type.minusInteger newpos ds9
                 } in
                 let {
                   newcig :: Data.ByteString.Internal.ByteString
                   = case ds12 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                     Lib.$wupdateCigF fdiff ww1 ww2 ww3 ww4 }
                 } in
                 let {
                   tpos :: GHC.Integer.Type.Integer
                   = case GHC.Integer.Type.ltInteger#
                            fdiff
                            Lib.defaultBed2 of wild1 { DEFAULT ->
                     case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild1 of wild2 {
                       GHC.Types.False -> newpos GHC.Types.True -> ds9 } }
                 } in
                 Lib.AlignedRead
                   ds6
                   ds7
                   ds8
                   ds9
                   ds10
                   ds11
                   ds12
                   newcig
                   ds14
                   (case newcig of wild1 { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                    case Lib.$wparseCigar
                           @ [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                           dt
                           dt1
                           dt2
                           dt3
                           dt3
                           0#
                           0#
                           Data.Attoparsec.Internal.Types.Complete
                           (Data.Attoparsec.ByteString.Internal.failK
                              @ [(GHC.Integer.Type.Integer,
                                  Data.ByteString.Internal.ByteString)])
                             `cast`
                           (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                            ->_R <Data.Attoparsec.Internal.Types.Pos
                                  -> Data.Attoparsec.Internal.Types.More
                                  -> [GHC.Base.String]
                                  -> GHC.Base.String
                                  -> Data.Attoparsec.Internal.Types.IResult
                                       Data.ByteString.Internal.ByteString
                                       [(GHC.Integer.Type.Integer,
                                         Data.ByteString.Internal.ByteString)]>_R)
                           (Data.Attoparsec.ByteString.Internal.successK
                              @ [(GHC.Integer.Type.Integer,
                                  Data.ByteString.Internal.ByteString)])
                             `cast`
                           (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                            ->_R <Data.Attoparsec.Internal.Types.Pos
                                  -> Data.Attoparsec.Internal.Types.More
                                  -> [(GHC.Integer.Type.Integer,
                                       Data.ByteString.Internal.ByteString)]
                                  -> Data.Attoparsec.Internal.Types.IResult
                                       Data.ByteString.Internal.ByteString
                                       [(GHC.Integer.Type.Integer,
                                         Data.ByteString.Internal.ByteString)]>_R) of wild2 {
                      Data.Attoparsec.Internal.Types.Fail ds37 ds38 err
                      -> case ds38 of wild3 { DEFAULT ->
                         GHC.List.badHead
                           @ [(GHC.Integer.Type.Integer,
                               Data.ByteString.Internal.ByteString)] }
                      Data.Attoparsec.Internal.Types.Partial ipv
                      -> case Lib.checkCigarSeqlen1 ret_ty Lib.CigarMap of {}
                      Data.Attoparsec.Internal.Types.Done ds37 a1 -> a1 } })
                   ds16
                   ds17
                   ds18
                   ds19
                   ds20
                   ds21
                   ds22
                   ds23
                   ds24
                   ds25
                   ds26
                   ds27
                   (case GHC.Integer.Type.neqInteger# ds9 tpos of wild1 { DEFAULT ->
                    GHC.Prim.tagToEnum# @ GHC.Types.Bool wild1 })
                   tpos
                   ds30
                   ds31
                   ds32
                   ds33
                   ds34
                   ds35
                   (Lib.boolZeroLengthCigar newcig) }) -}
ee93d4d492885470c77de705e87ad292
  trimmedPct :: Lib.RunStats -> GHC.Types.Double
  RecSel Left Lib.RunStats
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSL),1*U(A,A,A,A,1*U(U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.RunStats) ->
                 case ds6 of wild { Lib.RunStats ds7 ds8 ds9 ds10 ds11 ds12 ->
                 ds11 }) -}
d2a1a546b240a2e1f032be2da62c80df
  trimprimerPairsE ::
    Lib.CMap -> Lib.CMap -> Lib.PairedAln -> Lib.PairedAln
  {- Arity: 3,
     Strictness: <L,U><L,U><L,1*U(1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,A,A,A,U,U,U,U,U,U,U,U,U),1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,A,A,A,U,U,U,U,U,U,U,U,U),1*U,1*U)>m,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Lib.CMap) (w1 :: Lib.CMap) (w2 :: Lib.PairedAln) ->
                 case Lib.$wtrimprimerPairsE
                        w
                        w1
                        w2 of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 Lib.PairedAln ww1 ww2 ww3 ww4 }) -}
ebb082b4600b2f6def73b6af6e7da10f
  trimprimersE ::
    Lib.CMap -> Lib.CMap -> Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 3,
     Strictness: <L,1*U><L,1*U><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,A,A,A,U,U,U,U,U,U,U,U,U)>,
     Unfolding: InlineRule (3, True, False)
                (\ (fmap :: Lib.CMap) (rmap :: Lib.CMap) (a :: Lib.AlignedRead) ->
                 Lib.updateTrimdAlnFields
                   (Lib.trimalignment (Lib.addprimerints fmap rmap a))) -}
e9a44e344c03e105e4c6e1d2307b7fa7
  trimrev :: Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 1,
     Strictness: <S,1*U(U,U,U,U,U,U,U(U,U,U,U),A,U,A,U,U,U,U,U,U,U,U,U,U,U,U,A,U,A,U,U,U,U,U,A)>,
     Unfolding: (\ (a :: Lib.AlignedRead) ->
                 case a of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 let {
                   newendpos :: GHC.Integer.Type.Integer
                   = case ds26 of wild1 {
                       [] -> case GHC.List.badHead ret_ty GHC.Integer.Type.Integer of {}
                       : x ds37
                       -> case x of wild2 { Lib.BedRecord ds38 ds39 ds40 ds41 -> ds39 } }
                 } in
                 let {
                   rdiff :: GHC.Integer.Type.Integer
                   = GHC.Integer.Type.minusInteger ds10 newendpos
                 } in
                 let {
                   newcig :: Data.ByteString.Internal.ByteString
                   = case ds12 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                     Lib.$wupdateCigR rdiff ww1 ww2 ww3 ww4 }
                 } in
                 let {
                   tendpos :: GHC.Integer.Type.Integer
                   = case GHC.Integer.Type.ltInteger#
                            rdiff
                            Lib.defaultBed2 of wild1 { DEFAULT ->
                     case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild1 of wild2 {
                       GHC.Types.False -> newendpos GHC.Types.True -> ds10 } }
                 } in
                 Lib.AlignedRead
                   ds6
                   ds7
                   ds8
                   ds9
                   ds10
                   ds11
                   ds12
                   newcig
                   ds14
                   (case newcig of wild1 { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                    case Lib.$wparseCigar
                           @ [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                           dt
                           dt1
                           dt2
                           dt3
                           dt3
                           0#
                           0#
                           Data.Attoparsec.Internal.Types.Complete
                           (Data.Attoparsec.ByteString.Internal.failK
                              @ [(GHC.Integer.Type.Integer,
                                  Data.ByteString.Internal.ByteString)])
                             `cast`
                           (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                            ->_R <Data.Attoparsec.Internal.Types.Pos
                                  -> Data.Attoparsec.Internal.Types.More
                                  -> [GHC.Base.String]
                                  -> GHC.Base.String
                                  -> Data.Attoparsec.Internal.Types.IResult
                                       Data.ByteString.Internal.ByteString
                                       [(GHC.Integer.Type.Integer,
                                         Data.ByteString.Internal.ByteString)]>_R)
                           (Data.Attoparsec.ByteString.Internal.successK
                              @ [(GHC.Integer.Type.Integer,
                                  Data.ByteString.Internal.ByteString)])
                             `cast`
                           (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                            ->_R <Data.Attoparsec.Internal.Types.Pos
                                  -> Data.Attoparsec.Internal.Types.More
                                  -> [(GHC.Integer.Type.Integer,
                                       Data.ByteString.Internal.ByteString)]
                                  -> Data.Attoparsec.Internal.Types.IResult
                                       Data.ByteString.Internal.ByteString
                                       [(GHC.Integer.Type.Integer,
                                         Data.ByteString.Internal.ByteString)]>_R) of wild2 {
                      Data.Attoparsec.Internal.Types.Fail ds37 ds38 err
                      -> case ds38 of wild3 { DEFAULT ->
                         GHC.List.badHead
                           @ [(GHC.Integer.Type.Integer,
                               Data.ByteString.Internal.ByteString)] }
                      Data.Attoparsec.Internal.Types.Partial ipv
                      -> case Lib.checkCigarSeqlen1 ret_ty Lib.CigarMap of {}
                      Data.Attoparsec.Internal.Types.Done ds37 a1 -> a1 } })
                   ds16
                   ds17
                   ds18
                   ds19
                   ds20
                   ds21
                   ds22
                   ds23
                   ds24
                   ds25
                   ds26
                   ds27
                   (case GHC.Integer.Type.neqInteger#
                           ds10
                           tendpos of wild1 { DEFAULT ->
                    GHC.Prim.tagToEnum# @ GHC.Types.Bool wild1 })
                   ds29
                   tendpos
                   ds31
                   ds32
                   ds33
                   ds34
                   ds35
                   (Lib.boolZeroLengthCigar newcig) }) -}
b5f7c91e0a039228d8ca476cc3bdf320
  txposedcount :: Lib.MidFamily -> GHC.Integer.Type.Integer
  RecSel Left Lib.MidFamily
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLSLLL),1*U(A,A,A,A,A,A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MidFamily) ->
                 case ds6 of wild { Lib.MidFamily ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds13 }) -}
c406f7de56f21515f85a292ae6cdca02
  txtfieldp ::
    Data.Attoparsec.ByteString.Internal.Parser
      Data.ByteString.Internal.ByteString
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.optfieldsp5
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)) -}
9ec9928f5e29d6acfe1685648a7d9963
  uchrparser :: Data.Attoparsec.ByteString.Internal.Parser Lib.UChr
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.uchrparser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <Lib.UChr>_R)) -}
6f02590fffe60039439b950be27ac861
  uchrparser1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.UChr
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.UChr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wuchrparser @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
10611e7dc88153520dcb046ed556a51d
  updateCigB ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
  {- Arity: 3, Strictness: <L,U><L,U><S(SLSS),1*U(U,U,U,U)>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Integer.Type.Integer)
                   (w1 :: GHC.Integer.Type.Integer)
                   (w2 :: Data.ByteString.Internal.ByteString) ->
                 case w2 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wupdateCigB w w1 ww1 ww2 ww3 ww4 }) -}
0f96e8df3f2b49729dadf6311b06afc1
  updateCigF ::
    GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
  {- Arity: 2, Strictness: <L,U><S(SLSS),1*U(U,U,U,U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Integer.Type.Integer)
                   (w1 :: Data.ByteString.Internal.ByteString) ->
                 case w1 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wupdateCigF w ww1 ww2 ww3 ww4 }) -}
6e9efc6328861f437322975ab0bca4d5
  updateCigR ::
    GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
  {- Arity: 2, Strictness: <L,U><S(SLSS),1*U(U,U,U,U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Integer.Type.Integer)
                   (w1 :: Data.ByteString.Internal.ByteString) ->
                 case w1 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wupdateCigR w ww1 ww2 ww3 ww4 }) -}
9b0c491b0dcb4e0fbfb8b4936f50367c
  updatePairedAlnTrimdFields :: Lib.PairedAln -> Lib.PairedAln
  {- Arity: 1,
     Strictness: <L,U(1*U(U,U(U),U,U,U,U,U,U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),1*U(U,U(U),U,U,U,U,U,U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),1*U,1*U)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.PairedAln) ->
                 Lib.PairedAln
                   (case w of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                    Lib.updateTrimdAlnFields ds6 })
                   (case w of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                    Lib.updateTrimdAlnFields ds7 })
                   (case w of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                    GHC.Base.map
                      @ Lib.AlignedRead
                      @ Lib.AlignedRead
                      Lib.updateTrimdAlnFields
                      ds8 })
                   (case w of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                    GHC.Base.map
                      @ Lib.AlignedRead
                      @ Lib.AlignedRead
                      Lib.updateTrimdAlnFields
                      ds9 })) -}
2622d4528597fd483997fffb8398aaba
  updateR1nextfields :: Lib.PairedAln -> Lib.PairedAln
  {- Arity: 1,
     Strictness: <S,1*U(U,U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.PairedAln) ->
                 case w of ww { Lib.PairedAln ww1 ww2 ww3 ww4 ->
                 let {
                   ds6 :: (Lib.AlignedRead, [Lib.AlignedRead])
                   = let {
                       trimdposR2 :: GHC.Integer.Type.Integer
                       = case ww2 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                         ds30 }
                     } in
                     case GHC.Base.map
                            @ Lib.AlignedRead
                            @ Lib.AlignedRead
                            (\ (x :: Lib.AlignedRead) ->
                             case x of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                             Lib.AlignedRead
                               ds7
                               ds8
                               ds9
                               ds10
                               ds11
                               ds12
                               ds13
                               ds14
                               ds15
                               ds16
                               ds17
                               trimdposR2
                               ds19
                               ds20
                               ds21
                               ds22
                               ds23
                               ds24
                               ds25
                               ds26
                               ds27
                               ds28
                               ds29
                               ds30
                               ds31
                               ds32
                               ds33
                               ds34
                               ds35
                               ds36
                               ds37 })
                            (GHC.Types.: @ Lib.AlignedRead ww1 ww3) of wild {
                       [] -> Lib.updateTrimdPairFields2
                       : newpr1 newsecr1s -> (newpr1, newsecr1s) }
                 } in
                 Lib.PairedAln
                   (case ds6 of ds7 { (,) newpr1 newsecr1s -> newpr1 })
                   ww2
                   (case ds6 of ds7 { (,) newpr1 newsecr1s -> newsecr1s })
                   ww4 }) -}
5c64cf399cff6ef9bbdcfd0612da999b
  updateR2nextfields :: Lib.PairedAln -> Lib.PairedAln
  {- Arity: 1,
     Strictness: <S,1*U(U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U,U)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.PairedAln) ->
                 case w of ww { Lib.PairedAln ww1 ww2 ww3 ww4 ->
                 let {
                   ds6 :: (Lib.AlignedRead, [Lib.AlignedRead])
                   = let {
                       trimdposR1 :: GHC.Integer.Type.Integer
                       = case ww1 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                         ds30 }
                     } in
                     case GHC.Base.map
                            @ Lib.AlignedRead
                            @ Lib.AlignedRead
                            (\ (x :: Lib.AlignedRead) ->
                             case x of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                             Lib.AlignedRead
                               ds7
                               ds8
                               ds9
                               ds10
                               ds11
                               ds12
                               ds13
                               ds14
                               ds15
                               ds16
                               ds17
                               trimdposR1
                               ds19
                               ds20
                               ds21
                               ds22
                               ds23
                               ds24
                               ds25
                               ds26
                               ds27
                               ds28
                               ds29
                               ds30
                               ds31
                               ds32
                               ds33
                               ds34
                               ds35
                               ds36
                               ds37 })
                            (GHC.Types.: @ Lib.AlignedRead ww2 ww4) of wild {
                       [] -> Lib.updateTrimdPairFields1
                       : newpr2 newsecr2s -> (newpr2, newsecr2s) }
                 } in
                 Lib.PairedAln
                   ww1
                   (case ds6 of ds7 { (,) newpr2 newsecr2s -> newpr2 })
                   ww3
                   (case ds6 of ds7 { (,) newpr2 newsecr2s -> newsecr2s }) }) -}
e499121fc50bed1d272dd53262f580c3
  updateTrimdAlnFields :: Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 1,
     Strictness: <S(LLLLLLLS(SLSS)LLLLLLLLLLLLLLLLLLLLLLL),1*U(U,U(U),U,U,U,U,U,U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Unfolding: (\ (a :: Lib.AlignedRead) ->
                 case a of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 case ds13 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 let {
                   $j :: Lib.AlignedRead <join 0>
                   = Lib.AlignedRead
                       ds6
                       ds7
                       ds8
                       ds9
                       ds10
                       ds11
                       ds12
                       ww
                       ds14
                       ds15
                       ds16
                       ds17
                       ds18
                       ds19
                       ds20
                       (Data.ByteString.concat
                          (GHC.Types.:
                             @ Data.ByteString.Internal.ByteString
                             ds21
                             Lib.addtrimtag1))
                       ds22
                       ds23
                       ds24
                       ds25
                       ds26
                       ds27
                       ds28
                       ds29
                       ds30
                       ds31
                       ds32
                       ds33
                       ds34
                       ds35
                       ds36
                 } in
                 let {
                   $j1 :: Lib.AlignedRead <join 0>
                   = case ds28 of wild1 {
                       GHC.Types.False -> wild
                       GHC.Types.True
                       -> Lib.AlignedRead
                            ds6
                            (Lib.setZeroLengthAlnFlag ds7)
                            Lib.NONE
                            ds9
                            ds10
                            Lib.defaultBed2
                            ds12
                            Lib.addtrimtag5
                            ds14
                            ds15
                            ds16
                            ds17
                            ds18
                            ds19
                            ds20
                            (Data.ByteString.concat
                               (GHC.Types.:
                                  @ Data.ByteString.Internal.ByteString
                                  ds21
                                  Lib.addtrimtag6))
                            ds22
                            ds23
                            GHC.Types.False
                            ds25
                            ds26
                            ds27
                            GHC.Types.True
                            Lib.updateTrimdAlnFields1
                            Lib.defaultBed2
                            ds31
                            ds32
                            ds33
                            ds34
                            ds35
                            ds36 }
                 } in
                 letrec {
                   go16 :: [GHC.Types.Char] -> Lib.AlignedRead
                     <join 1> {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds37 :: [GHC.Types.Char]) ->
                     case ds37 of wild1 {
                       [] -> $j1
                       : y ys
                       -> case GHC.List.elem
                                 @ GHC.Types.Char
                                 GHC.Classes.$fEqChar
                                 y
                                 Lib.clearNonRealCigar1 of wild2 {
                            GHC.Types.False -> go16 ys GHC.Types.True -> $j } }
                 } in
                 go16
                   (Data.ByteString.Internal.$wunpackAppendCharsLazy
                      ww1
                      ww2
                      ww3
                      ww4
                      (GHC.Types.[] @ GHC.Types.Char)) } }) -}
3814b5611c5bb910466849bbde117470
  updateTrimdAlnFields1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (-1) -}
10708228f1b0464fdc67d117515829fa
  updateTrimdPairFields :: Lib.PairedAln -> Lib.PairedAln
  {- Arity: 1,
     Strictness: <S(S(LLLLLLLLLLLLLLLLLLLLLLSLLLLLLLL)LLL),1*U(U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)>m,
     Unfolding: (\ (pa :: Lib.PairedAln) ->
                 case pa of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                 case ds6 of wild1 { Lib.AlignedRead ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ->
                 let {
                   $j :: Lib.PairedAln <join 0> {- Strictness: m -}
                   = case ds32 of wild2 {
                       GHC.Types.False
                       -> case ds7 of wild3 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                          case ds63 of wild4 {
                            GHC.Types.False -> wild
                            GHC.Types.True
                            -> let {
                                 ds72 :: (Lib.AlignedRead, [Lib.AlignedRead])
                                 = case GHC.Base.map
                                          @ Lib.AlignedRead
                                          @ Lib.AlignedRead
                                          (\ (x :: Lib.AlignedRead) ->
                                           case x of wild5 { Lib.AlignedRead ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ds90 ds91 ds92 ds93 ds94 ds95 ds96 ds97 ds98 ds99 ds100 ds101 ds102 ds103 ->
                                           Lib.AlignedRead
                                             ds73
                                             ds74
                                             ds75
                                             ds76
                                             ds77
                                             ds78
                                             ds79
                                             ds80
                                             ds81
                                             ds82
                                             ds83
                                             ds64
                                             ds85
                                             ds86
                                             ds87
                                             ds88
                                             ds89
                                             ds90
                                             ds91
                                             ds92
                                             ds93
                                             ds94
                                             ds95
                                             ds96
                                             ds97
                                             ds98
                                             ds99
                                             ds100
                                             ds101
                                             ds102
                                             ds103 })
                                          (GHC.Types.: @ Lib.AlignedRead wild1 ds8) of wild5 {
                                     [] -> Lib.updateTrimdPairFields2
                                     : newpr1 newsecr1s -> (newpr1, newsecr1s) }
                               } in
                               Lib.PairedAln
                                 (case ds72 of ds73 { (,) newpr1 newsecr1s -> newpr1 })
                                 wild3
                                 (case ds72 of ds73 { (,) newpr1 newsecr1s -> newsecr1s })
                                 ds9 } }
                       GHC.Types.True
                       -> let {
                            ds41 :: (Lib.AlignedRead, [Lib.AlignedRead])
                            = case GHC.Base.map
                                     @ Lib.AlignedRead
                                     @ Lib.AlignedRead
                                     (\ (x :: Lib.AlignedRead) ->
                                      case x of wild3 { Lib.AlignedRead ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ->
                                      Lib.AlignedRead
                                        ds42
                                        ds43
                                        ds44
                                        ds45
                                        ds46
                                        ds47
                                        ds48
                                        ds49
                                        ds50
                                        ds51
                                        ds52
                                        ds33
                                        ds54
                                        ds55
                                        ds56
                                        ds57
                                        ds58
                                        ds59
                                        ds60
                                        ds61
                                        ds62
                                        ds63
                                        ds64
                                        ds65
                                        ds66
                                        ds67
                                        ds68
                                        ds69
                                        ds70
                                        ds71
                                        ds72 })
                                     (GHC.Types.: @ Lib.AlignedRead ds7 ds9) of wild3 {
                                [] -> Lib.updateTrimdPairFields1
                                : newpr2 newsecr2s -> (newpr2, newsecr2s) }
                          } in
                          Lib.PairedAln
                            wild1
                            (case ds41 of ds42 { (,) newpr2 newsecr2s -> newpr2 })
                            ds8
                            (case ds41 of ds42 { (,) newpr2 newsecr2s -> newsecr2s }) }
                 } in
                 case ds32 of wild2 {
                   GHC.Types.False -> $j
                   GHC.Types.True
                   -> case ds7 of wild3 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                      case ds63 of wild4 {
                        GHC.Types.False -> $j
                        GHC.Types.True
                        -> let {
                             ds72 :: (Lib.AlignedRead, [Lib.AlignedRead])
                             = case GHC.Base.map
                                      @ Lib.AlignedRead
                                      @ Lib.AlignedRead
                                      (\ (x :: Lib.AlignedRead) ->
                                       case x of wild5 { Lib.AlignedRead ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ds90 ds91 ds92 ds93 ds94 ds95 ds96 ds97 ds98 ds99 ds100 ds101 ds102 ds103 ->
                                       Lib.AlignedRead
                                         ds73
                                         ds74
                                         ds75
                                         ds76
                                         ds77
                                         ds78
                                         ds79
                                         ds80
                                         ds81
                                         ds82
                                         ds83
                                         ds33
                                         ds85
                                         ds86
                                         ds87
                                         ds88
                                         ds89
                                         ds90
                                         ds91
                                         ds92
                                         ds93
                                         ds94
                                         ds95
                                         ds96
                                         ds97
                                         ds98
                                         ds99
                                         ds100
                                         ds101
                                         ds102
                                         ds103 })
                                      (GHC.Types.: @ Lib.AlignedRead wild3 ds9) of wild5 {
                                 [] -> Lib.updateTrimdPairFields1
                                 : newpr2 newsecr2s -> (newpr2, newsecr2s) }
                           } in
                           let {
                             pa1 :: Lib.AlignedRead
                             = case ds72 of ds73 { (,) newpr2 newsecr2s -> newpr2 }
                           } in
                           let {
                             ds73 :: (Lib.AlignedRead, [Lib.AlignedRead])
                             = let {
                                 trimdposR2 :: GHC.Integer.Type.Integer
                                 = case pa1 of wild5 { Lib.AlignedRead ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ds90 ds91 ds92 ds93 ds94 ds95 ds96 ds97 ds98 ds99 ds100 ds101 ds102 ds103 ds104 ->
                                   ds97 }
                               } in
                               case GHC.Base.map
                                      @ Lib.AlignedRead
                                      @ Lib.AlignedRead
                                      (\ (x :: Lib.AlignedRead) ->
                                       case x of wild5 { Lib.AlignedRead ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ds90 ds91 ds92 ds93 ds94 ds95 ds96 ds97 ds98 ds99 ds100 ds101 ds102 ds103 ds104 ->
                                       Lib.AlignedRead
                                         ds74
                                         ds75
                                         ds76
                                         ds77
                                         ds78
                                         ds79
                                         ds80
                                         ds81
                                         ds82
                                         ds83
                                         ds84
                                         trimdposR2
                                         ds86
                                         ds87
                                         ds88
                                         ds89
                                         ds90
                                         ds91
                                         ds92
                                         ds93
                                         ds94
                                         ds95
                                         ds96
                                         ds97
                                         ds98
                                         ds99
                                         ds100
                                         ds101
                                         ds102
                                         ds103
                                         ds104 })
                                      (GHC.Types.: @ Lib.AlignedRead wild1 ds8) of wild5 {
                                 [] -> Lib.updateTrimdPairFields2
                                 : newpr1 newsecr1s -> (newpr1, newsecr1s) }
                           } in
                           Lib.PairedAln
                             (case ds73 of ds74 { (,) newpr1 newsecr1s -> newpr1 })
                             pa1
                             (case ds73 of ds74 { (,) newpr1 newsecr1s -> newsecr1s })
                             (case ds72 of ds74 { (,) newpr2 newsecr2s ->
                              newsecr2s }) } } } } }) -}
61ee20d1fd19eabf16a12a974569298c
  updateTrimdPairFields1 :: (Lib.AlignedRead, [Lib.AlignedRead])
  {- Strictness: x -}
bdfea49498eb62eba4615d69b1772d01
  updateTrimdPairFields2 :: (Lib.AlignedRead, [Lib.AlignedRead])
  {- Strictness: x -}
d6b7ed84652e4016bb36a796b4c0d933
  updateZeroTrimdPairFields :: Lib.PairedAln -> Lib.PairedAln
  {- Arity: 1,
     Strictness: <S(S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLS)LLL),1*U(U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)>m,
     Unfolding: (\ (p :: Lib.PairedAln) ->
                 case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                 case ds6 of wild1 { Lib.AlignedRead ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ->
                 let {
                   primR2zerotrimmed :: GHC.Types.Bool
                   = case ds7 of wild2 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                     ds71 }
                 } in
                 let {
                   $j :: Lib.PairedAln <join 0> {- Strictness: m -}
                   = case ds40 of wild2 {
                       GHC.Types.False
                       -> case primR2zerotrimmed of wild3 {
                            GHC.Types.False -> wild
                            GHC.Types.True
                            -> case ds28 of wild4 {
                                 GHC.Types.False
                                 -> Lib.PairedAln
                                      (Lib.AlignedRead
                                         ds10
                                         ds11
                                         Lib.NONE
                                         Lib.defaultBed2
                                         ds14
                                         ds15
                                         ds16
                                         ds17
                                         ds18
                                         ds19
                                         Lib.addtrimtag5
                                         Lib.defaultBed2
                                         Lib.defaultBed2
                                         ds23
                                         ds24
                                         ds25
                                         ds26
                                         ds27
                                         GHC.Types.False
                                         ds29
                                         ds30
                                         ds31
                                         ds32
                                         ds33
                                         ds34
                                         ds35
                                         ds36
                                         ds37
                                         ds38
                                         ds39
                                         GHC.Types.False)
                                      (case ds7 of wild5 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                                       Lib.AlignedRead
                                         ds41
                                         ds42
                                         Lib.NONE
                                         Lib.defaultBed2
                                         ds45
                                         ds46
                                         ds47
                                         ds48
                                         ds49
                                         ds50
                                         Lib.addtrimtag5
                                         Lib.defaultBed2
                                         Lib.defaultBed2
                                         ds54
                                         ds55
                                         ds56
                                         ds57
                                         ds58
                                         ds59
                                         ds60
                                         ds61
                                         ds62
                                         ds63
                                         ds64
                                         ds65
                                         ds66
                                         ds67
                                         ds68
                                         ds69
                                         ds70
                                         ds71 })
                                      ds8
                                      ds9
                                 GHC.Types.True
                                 -> Lib.PairedAln
                                      (Lib.AlignedRead
                                         ds10
                                         ds11
                                         ds12
                                         ds13
                                         ds14
                                         ds15
                                         ds16
                                         ds17
                                         ds18
                                         ds19
                                         Lib.addtrimtag5
                                         Lib.defaultBed2
                                         Lib.defaultBed2
                                         ds23
                                         ds24
                                         ds25
                                         ds26
                                         ds27
                                         GHC.Types.True
                                         ds29
                                         ds30
                                         ds31
                                         ds32
                                         ds33
                                         ds34
                                         ds35
                                         ds36
                                         ds37
                                         ds38
                                         ds39
                                         GHC.Types.False)
                                      ds7
                                      ds8
                                      ds9 } }
                       GHC.Types.True
                       -> case ds7 of wild3 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                          case ds59 of wild4 {
                            GHC.Types.False
                            -> Lib.PairedAln
                                 (Lib.AlignedRead
                                    ds10
                                    ds11
                                    Lib.NONE
                                    Lib.defaultBed2
                                    ds14
                                    ds15
                                    ds16
                                    ds17
                                    ds18
                                    ds19
                                    Lib.addtrimtag5
                                    Lib.defaultBed2
                                    Lib.defaultBed2
                                    ds23
                                    ds24
                                    ds25
                                    ds26
                                    ds27
                                    ds28
                                    ds29
                                    ds30
                                    ds31
                                    ds32
                                    ds33
                                    ds34
                                    ds35
                                    ds36
                                    ds37
                                    ds38
                                    ds39
                                    GHC.Types.True)
                                 (Lib.AlignedRead
                                    ds41
                                    ds42
                                    Lib.NONE
                                    Lib.defaultBed2
                                    ds45
                                    ds46
                                    ds47
                                    ds48
                                    ds49
                                    ds50
                                    Lib.addtrimtag5
                                    Lib.defaultBed2
                                    Lib.defaultBed2
                                    ds54
                                    ds55
                                    ds56
                                    ds57
                                    ds58
                                    GHC.Types.False
                                    ds60
                                    ds61
                                    ds62
                                    ds63
                                    ds64
                                    ds65
                                    ds66
                                    ds67
                                    ds68
                                    ds69
                                    ds70
                                    ds71)
                                 ds8
                                 ds9
                            GHC.Types.True
                            -> Lib.PairedAln
                                 wild1
                                 (Lib.AlignedRead
                                    ds41
                                    ds42
                                    ds43
                                    ds44
                                    ds45
                                    ds46
                                    ds47
                                    ds48
                                    ds49
                                    ds50
                                    Lib.addtrimtag5
                                    Lib.defaultBed2
                                    Lib.defaultBed2
                                    ds54
                                    ds55
                                    ds56
                                    ds57
                                    ds58
                                    GHC.Types.True
                                    ds60
                                    ds61
                                    ds62
                                    ds63
                                    ds64
                                    ds65
                                    ds66
                                    ds67
                                    ds68
                                    ds69
                                    ds70
                                    ds71)
                                 ds8
                                 ds9 } } }
                 } in
                 case ds40 of wild2 {
                   GHC.Types.False -> $j
                   GHC.Types.True
                   -> case primR2zerotrimmed of wild3 {
                        GHC.Types.False -> $j
                        GHC.Types.True
                        -> case ds28 of wild4 {
                             GHC.Types.False
                             -> case ds7 of wild5 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                                case ds59 of wild6 {
                                  GHC.Types.False
                                  -> Lib.PairedAln
                                       (Lib.AlignedRead
                                          ds10
                                          ds11
                                          Lib.NONE
                                          Lib.defaultBed2
                                          ds14
                                          ds15
                                          ds16
                                          ds17
                                          ds18
                                          ds19
                                          Lib.addtrimtag5
                                          Lib.defaultBed2
                                          Lib.defaultBed2
                                          ds23
                                          ds24
                                          ds25
                                          ds26
                                          ds27
                                          GHC.Types.False
                                          ds29
                                          ds30
                                          ds31
                                          ds32
                                          ds33
                                          ds34
                                          ds35
                                          ds36
                                          ds37
                                          ds38
                                          ds39
                                          GHC.Types.True)
                                       (Lib.AlignedRead
                                          ds41
                                          ds42
                                          Lib.NONE
                                          Lib.defaultBed2
                                          ds45
                                          ds46
                                          ds47
                                          ds48
                                          ds49
                                          ds50
                                          Lib.addtrimtag5
                                          Lib.defaultBed2
                                          Lib.defaultBed2
                                          ds54
                                          ds55
                                          ds56
                                          ds57
                                          ds58
                                          GHC.Types.False
                                          ds60
                                          ds61
                                          ds62
                                          ds63
                                          ds64
                                          ds65
                                          ds66
                                          ds67
                                          ds68
                                          ds69
                                          ds70
                                          ds71)
                                       ds8
                                       ds9
                                  GHC.Types.True
                                  -> Lib.PairedAln
                                       (Lib.AlignedRead
                                          ds10
                                          ds11
                                          Lib.NONE
                                          Lib.defaultBed2
                                          ds14
                                          ds15
                                          ds16
                                          ds17
                                          ds18
                                          ds19
                                          Lib.addtrimtag5
                                          Lib.defaultBed2
                                          Lib.defaultBed2
                                          ds23
                                          ds24
                                          ds25
                                          ds26
                                          ds27
                                          GHC.Types.False
                                          ds29
                                          ds30
                                          ds31
                                          ds32
                                          ds33
                                          ds34
                                          ds35
                                          ds36
                                          ds37
                                          ds38
                                          ds39
                                          GHC.Types.True)
                                       (Lib.AlignedRead
                                          ds41
                                          ds42
                                          Lib.NONE
                                          Lib.defaultBed2
                                          ds45
                                          ds46
                                          ds47
                                          ds48
                                          ds49
                                          ds50
                                          Lib.addtrimtag5
                                          Lib.defaultBed2
                                          Lib.defaultBed2
                                          ds54
                                          ds55
                                          ds56
                                          ds57
                                          ds58
                                          GHC.Types.True
                                          ds60
                                          ds61
                                          ds62
                                          ds63
                                          ds64
                                          ds65
                                          ds66
                                          ds67
                                          ds68
                                          ds69
                                          ds70
                                          ds71)
                                       ds8
                                       ds9 } }
                             GHC.Types.True
                             -> case ds7 of wild5 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                                case ds59 of wild6 {
                                  GHC.Types.False
                                  -> Lib.PairedAln
                                       (Lib.AlignedRead
                                          ds10
                                          ds11
                                          Lib.NONE
                                          Lib.defaultBed2
                                          ds14
                                          ds15
                                          ds16
                                          ds17
                                          ds18
                                          ds19
                                          Lib.addtrimtag5
                                          Lib.defaultBed2
                                          Lib.defaultBed2
                                          ds23
                                          ds24
                                          ds25
                                          ds26
                                          ds27
                                          GHC.Types.True
                                          ds29
                                          ds30
                                          ds31
                                          ds32
                                          ds33
                                          ds34
                                          ds35
                                          ds36
                                          ds37
                                          ds38
                                          ds39
                                          GHC.Types.True)
                                       (Lib.AlignedRead
                                          ds41
                                          ds42
                                          Lib.NONE
                                          Lib.defaultBed2
                                          ds45
                                          ds46
                                          ds47
                                          ds48
                                          ds49
                                          ds50
                                          Lib.addtrimtag5
                                          Lib.defaultBed2
                                          Lib.defaultBed2
                                          ds54
                                          ds55
                                          ds56
                                          ds57
                                          ds58
                                          GHC.Types.False
                                          ds60
                                          ds61
                                          ds62
                                          ds63
                                          ds64
                                          ds65
                                          ds66
                                          ds67
                                          ds68
                                          ds69
                                          ds70
                                          ds71)
                                       ds8
                                       ds9
                                  GHC.Types.True
                                  -> Lib.PairedAln
                                       (Lib.AlignedRead
                                          ds10
                                          ds11
                                          ds12
                                          ds13
                                          ds14
                                          ds15
                                          ds16
                                          ds17
                                          ds18
                                          ds19
                                          Lib.addtrimtag5
                                          Lib.defaultBed2
                                          Lib.defaultBed2
                                          ds23
                                          ds24
                                          ds25
                                          ds26
                                          ds27
                                          GHC.Types.True
                                          ds29
                                          ds30
                                          ds31
                                          ds32
                                          ds33
                                          ds34
                                          ds35
                                          ds36
                                          ds37
                                          ds38
                                          ds39
                                          GHC.Types.True)
                                       (Lib.AlignedRead
                                          ds41
                                          ds42
                                          ds43
                                          ds44
                                          ds45
                                          ds46
                                          ds47
                                          ds48
                                          ds49
                                          ds50
                                          Lib.addtrimtag5
                                          Lib.defaultBed2
                                          Lib.defaultBed2
                                          ds54
                                          ds55
                                          ds56
                                          ds57
                                          ds58
                                          GHC.Types.True
                                          ds60
                                          ds61
                                          ds62
                                          ds63
                                          ds64
                                          ds65
                                          ds66
                                          ds67
                                          ds68
                                          ds69
                                          ds70
                                          ds71)
                                       ds8
                                       ds9 } } } } } } }) -}
84d9d4b29f51988d818d04707f335e84
  updateZeroTrimdPairFlags :: Lib.PairedAln -> Lib.PairedAln
  {- Arity: 1,
     Strictness: <S(S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLS)LLL),1*U(U(U,U(U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U(U,U(U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)>m,
     Unfolding: (\ (pa :: Lib.PairedAln) ->
                 case pa of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                 case ds6 of wild1 { Lib.AlignedRead ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ->
                 let {
                   newMRNMp :: Lib.PairedAln = Lib.setMateRname wild
                 } in
                 let {
                   r2pMRNM :: Lib.AlignedRead
                   = case newMRNMp of wild2 { Lib.PairedAln ds41 ds42 ds43 ds44 ->
                     ds42 }
                 } in
                 let {
                   r1pMRNM :: Lib.AlignedRead
                   = case newMRNMp of wild2 { Lib.PairedAln ds41 ds42 ds43 ds44 ->
                     ds41 }
                 } in
                 let {
                   r1sMRNMs :: [Lib.AlignedRead]
                   = case newMRNMp of wild2 { Lib.PairedAln ds41 ds42 ds43 ds44 ->
                     ds43 }
                 } in
                 let {
                   r1Zs :: [Lib.AlignedRead]
                   = GHC.Base.map
                       @ Lib.AlignedRead
                       @ Lib.AlignedRead
                       Lib.updateZeroTrimdPairFlags_clrFlagMapBits
                       r1sMRNMs
                 } in
                 let {
                   r2sMRNMs :: [Lib.AlignedRead]
                   = case newMRNMp of wild2 { Lib.PairedAln ds41 ds42 ds43 ds44 ->
                     ds44 }
                 } in
                 let {
                   r2Zs :: [Lib.AlignedRead]
                   = GHC.Base.map
                       @ Lib.AlignedRead
                       @ Lib.AlignedRead
                       Lib.updateZeroTrimdPairFlags_clrFlagMapBits
                       r2sMRNMs
                 } in
                 let {
                   r2zerotrimd :: GHC.Types.Bool
                   = case ds7 of wild2 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                     ds71 }
                 } in
                 let {
                   $j :: Lib.PairedAln <join 0> {- Strictness: m -}
                   = case ds40 of wild2 {
                       GHC.Types.False
                       -> case r2zerotrimd of wild3 {
                            GHC.Types.False -> wild
                            GHC.Types.True
                            -> Lib.PairedAln
                                 (case r1pMRNM of wild4 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                                  Lib.AlignedRead
                                    ds41
                                    (case ds42 of wild5 { GHC.Types.I# x# ->
                                     GHC.Types.I# (GHC.Prim.orI# (GHC.Prim.andI# x# -3#) 8#) })
                                    ds43
                                    ds44
                                    ds45
                                    ds46
                                    ds47
                                    ds48
                                    ds49
                                    ds50
                                    ds51
                                    ds52
                                    ds53
                                    ds54
                                    ds55
                                    ds56
                                    ds57
                                    ds58
                                    ds59
                                    ds60
                                    ds61
                                    ds62
                                    ds63
                                    ds64
                                    ds65
                                    ds66
                                    ds67
                                    ds68
                                    ds69
                                    ds70
                                    ds71 })
                                 r2pMRNM
                                 r1Zs
                                 r2sMRNMs }
                       GHC.Types.True
                       -> Lib.PairedAln
                            r1pMRNM
                            (case r2pMRNM of wild3 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                             Lib.AlignedRead
                               ds41
                               (case ds42 of wild4 { GHC.Types.I# x# ->
                                GHC.Types.I# (GHC.Prim.orI# (GHC.Prim.andI# x# -3#) 8#) })
                               ds43
                               ds44
                               ds45
                               ds46
                               ds47
                               ds48
                               ds49
                               ds50
                               ds51
                               ds52
                               ds53
                               ds54
                               ds55
                               ds56
                               ds57
                               ds58
                               ds59
                               ds60
                               ds61
                               ds62
                               ds63
                               ds64
                               ds65
                               ds66
                               ds67
                               ds68
                               ds69
                               ds70
                               ds71 })
                            r1sMRNMs
                            r2Zs }
                 } in
                 case ds40 of wild2 {
                   GHC.Types.False -> $j
                   GHC.Types.True
                   -> case r2zerotrimd of wild3 {
                        GHC.Types.False -> $j
                        GHC.Types.True
                        -> Lib.PairedAln
                             (case r1pMRNM of wild4 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                              Lib.AlignedRead
                                ds41
                                (case ds42 of wild5 { GHC.Types.I# x# ->
                                 GHC.Types.I# (GHC.Prim.orI# (GHC.Prim.andI# x# -3#) 8#) })
                                ds43
                                ds44
                                ds45
                                ds46
                                ds47
                                ds48
                                ds49
                                ds50
                                ds51
                                ds52
                                ds53
                                ds54
                                ds55
                                ds56
                                ds57
                                ds58
                                ds59
                                ds60
                                ds61
                                ds62
                                ds63
                                ds64
                                ds65
                                ds66
                                ds67
                                ds68
                                ds69
                                ds70
                                ds71 })
                             (case r2pMRNM of wild4 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                              Lib.AlignedRead
                                ds41
                                (case ds42 of wild5 { GHC.Types.I# x# ->
                                 GHC.Types.I# (GHC.Prim.orI# (GHC.Prim.andI# x# -3#) 8#) })
                                ds43
                                ds44
                                ds45
                                ds46
                                ds47
                                ds48
                                ds49
                                ds50
                                ds51
                                ds52
                                ds53
                                ds54
                                ds55
                                ds56
                                ds57
                                ds58
                                ds59
                                ds60
                                ds61
                                ds62
                                ds63
                                ds64
                                ds65
                                ds66
                                ds67
                                ds68
                                ds69
                                ds70
                                ds71 })
                             r1Zs
                             r2Zs } } } }) -}
b40b5c3088a6d2d428173c81c140a46b
  updateZeroTrimdPairFlags_clrFlagMapBits ::
    Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S,1*U(U,1*U(U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.AlignedRead) ->
                 case x of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 Lib.AlignedRead
                   ds6
                   (case ds7 of wild1 { GHC.Types.I# x# ->
                    GHC.Types.I# (GHC.Prim.orI# (GHC.Prim.andI# x# -3#) 8#) })
                   ds8
                   ds9
                   ds10
                   ds11
                   ds12
                   ds13
                   ds14
                   ds15
                   ds16
                   ds17
                   ds18
                   ds19
                   ds20
                   ds21
                   ds22
                   ds23
                   ds24
                   ds25
                   ds26
                   ds27
                   ds28
                   ds29
                   ds30
                   ds31
                   ds32
                   ds33
                   ds34
                   ds35
                   ds36 }) -}
e94f682c897082eb11f0e8e208d5a509
  validateTrimdPairAlnStart :: Lib.PairedAln -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(S(LLLLLLLLLLLLLLLLLLLLLLLSLLLLLLL)S(LLLLLLLLLLLSLLLLLLLLLLLLLLLLLLL)LL),1*U(1*U(A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A),1*U(A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A),A,A)>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.PairedAln) ->
                 case w of ww { Lib.PairedAln ww1 ww2 ww3 ww4 ->
                 case ww1 of ww5 { Lib.AlignedRead ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ww36 ->
                 case ww2 of ww37 { Lib.AlignedRead ww38 ww39 ww40 ww41 ww42 ww43 ww44 ww45 ww46 ww47 ww48 ww49 ww50 ww51 ww52 ww53 ww54 ww55 ww56 ww57 ww58 ww59 ww60 ww61 ww62 ww63 ww64 ww65 ww66 ww67 ww68 ->
                 Lib.$wvalidateTrimdPairAlnStart ww17 ww29 ww49 ww61 } } }) -}
d161c1a10d61622957a786e23332e552
  writeRunStats :: GHC.IO.FilePath -> Lib.RunStats -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,U><L,U(U,U,U,U,1*U(U),1*U(U))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.writeRunStats1
                  `cast`
                (<GHC.IO.FilePath>_R
                 ->_R <Lib.RunStats>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
9e2793865c7b9f28fde7201894784dd7
  writeRunStats1 ::
    GHC.IO.FilePath
    -> Lib.RunStats
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U><L,U(U,U,U,U,1*U(U),1*U(U))><S,U> -}
c13536c0ddcfc999f8a708d0f6fd76f1
  xmid :: Lib.AlignedRead -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLSLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U,U,U,U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds35 }) -}
instance GHC.Enum.Bounded [Lib.ChromNameFormat]
  = Lib.$fBoundedChromNameFormat
instance GHC.Enum.Bounded [Lib.UChr] = Lib.$fBoundedUChr
instance GHC.Enum.Enum [Lib.ChromNameFormat]
  = Lib.$fEnumChromNameFormat
instance GHC.Enum.Enum [Lib.UChr] = Lib.$fEnumUChr
instance GHC.Classes.Eq [Lib.AlignedRead] = Lib.$fEqAlignedRead
instance GHC.Classes.Eq [Lib.BEDPE] = Lib.$fEqBEDPE
instance GHC.Classes.Eq [Lib.BedRecord] = Lib.$fEqBedRecord
instance GHC.Classes.Eq [Lib.ChromNameFormat]
  = Lib.$fEqChromNameFormat
instance GHC.Classes.Eq [Lib.CigarMod] = Lib.$fEqCigarMod
instance GHC.Classes.Eq [Lib.MasterRecord] = Lib.$fEqMasterRecord
instance GHC.Classes.Eq [Lib.MidFamily] = Lib.$fEqMidFamily
instance GHC.Classes.Eq [Lib.Opts] = Lib.$fEqOpts
instance GHC.Classes.Eq [Lib.PairedAln] = Lib.$fEqPairedAln
instance GHC.Classes.Eq [Lib.RunStats] = Lib.$fEqRunStats
instance GHC.Classes.Eq [Lib.SAMFlag] = Lib.$fEqSAMFlag
instance GHC.Classes.Eq [Lib.UChr] = Lib.$fEqUChr
instance GHC.Generics.Generic [Lib.AlignedRead]
  = Lib.$fGenericAlignedRead
instance GHC.Generics.Generic [Lib.BEDPE] = Lib.$fGenericBEDPE
instance GHC.Generics.Generic [Lib.BedRecord]
  = Lib.$fGenericBedRecord
instance GHC.Generics.Generic [Lib.PairedAln]
  = Lib.$fGenericPairedAln
instance GHC.Generics.Generic [Lib.UChr] = Lib.$fGenericUChr
instance GHC.Classes.Ord [Lib.AlignedRead] = Lib.$fOrdAlignedRead
instance GHC.Classes.Ord [Lib.BEDPE] = Lib.$fOrdBEDPE
instance GHC.Classes.Ord [Lib.BedRecord] = Lib.$fOrdBedRecord
instance GHC.Classes.Ord [Lib.ChromNameFormat]
  = Lib.$fOrdChromNameFormat
instance GHC.Classes.Ord [Lib.MasterRecord] = Lib.$fOrdMasterRecord
instance GHC.Classes.Ord [Lib.MidFamily] = Lib.$fOrdMidFamily
instance GHC.Classes.Ord [Lib.PairedAln] = Lib.$fOrdPairedAln
instance GHC.Classes.Ord [Lib.UChr] = Lib.$fOrdUChr
instance GHC.Read.Read [Lib.ChromNameFormat]
  = Lib.$fReadChromNameFormat
instance GHC.Read.Read [Lib.RunStats] = Lib.$fReadRunStats
instance GHC.Show.Show [Lib.AlignedRead] = Lib.$fShowAlignedRead
instance GHC.Show.Show [Lib.BEDPE] = Lib.$fShowBEDPE
instance GHC.Show.Show [Lib.BedRecord] = Lib.$fShowBedRecord
instance GHC.Show.Show [Lib.ChromNameFormat]
  = Lib.$fShowChromNameFormat
instance GHC.Show.Show [Lib.CigarMod] = Lib.$fShowCigarMod
instance GHC.Show.Show [Lib.MasterRecord] = Lib.$fShowMasterRecord
instance GHC.Show.Show [Lib.MidFamily] = Lib.$fShowMidFamily
instance GHC.Show.Show [Lib.Opts] = Lib.$fShowOpts
instance GHC.Show.Show [Lib.PairedAln] = Lib.$fShowPairedAln
instance GHC.Show.Show [Lib.RunStats] = Lib.$fShowRunStats
instance GHC.Show.Show [Lib.SAMFlag] = Lib.$fShowSAMFlag
instance GHC.Show.Show [Lib.UChr] = Lib.$fShowUChr
family instance GHC.Generics.Rep [Lib.PairedAln]
  = Lib.Rep_PairedAln
family instance GHC.Generics.Rep [Lib.AlignedRead]
  = Lib.Rep_AlignedRead
family instance GHC.Generics.Rep [Lib.BEDPE] = Lib.Rep_BEDPE
family instance GHC.Generics.Rep [Lib.BedRecord]
  = Lib.Rep_BedRecord
family instance GHC.Generics.Rep [Lib.UChr] = Lib.Rep_UChr
"SPEC/Lib $fApplicativeResourceT @ IO" [orphan] forall (v :: GHC.Base.Applicative
                                                               GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT @ GHC.Types.IO
                                                               v
  = Lib.$s$fApplicativeResourceT
"SPEC/Lib $fApplicativeResourceT_$cpure @ IO" [orphan] forall ($dApplicative :: GHC.Base.Applicative
                                                                                  GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT_$cpure @ GHC.Types.IO
                                                                      $dApplicative
  = Lib.$s$fApplicativeResourceT_$cpure
"SPEC/Lib $fEq(,) @ Integer @ ByteString" [orphan] forall (v1 :: GHC.Classes.Eq
                                                                   Data.ByteString.Internal.ByteString)
                                                          (v :: GHC.Classes.Eq
                                                                  GHC.Integer.Type.Integer)
  GHC.Classes.$fEq(,) @ GHC.Integer.Type.Integer
                      @ Data.ByteString.Internal.ByteString
                      v
                      v1
  = Lib.$s$fEq(,)
"SPEC/Lib $fFunctorResourceT @ IO" [orphan] forall (v :: GHC.Base.Functor
                                                           GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fFunctorResourceT @ GHC.Types.IO
                                                           v
  = Lib.$s$fApplicativeResourceT_$s$fFunctorResourceT
"SPEC/Lib $fMonadResourceT @ IO" [orphan] forall (v :: GHC.Base.Monad
                                                         GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadResourceT @ GHC.Types.IO
                                                         v
  = Lib.$s$fMonadResourceT
"SPEC/Lib $fMonadResourceT_$c>> @ IO" [orphan] forall ($dMonad :: GHC.Base.Monad
                                                                    GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadResourceT_$c>> @ GHC.Types.IO
                                                              $dMonad
  = Lib.$s$fMonadResourceT_$s$fMonadResourceT_$c>>
"SPEC/Lib fromList @ Int _" [orphan] forall @ a
                                            ($dOrd :: GHC.Classes.Ord GHC.Types.Int)
  Data.Map.Strict.Internal.fromList @ GHC.Types.Int @ a $dOrd
  = Lib.$sfromList @ a
"SPEC/Lib fromList @ UChr" forall ($dOrd :: GHC.Classes.Ord
                                              Lib.UChr)
  Data.Set.Internal.fromList @ Lib.UChr $dOrd = Lib.$sfromList4
"SPEC/Lib fromList @ UChr _" forall @ a
                                    ($dOrd :: GHC.Classes.Ord Lib.UChr)
  Data.Map.Strict.Internal.fromList @ Lib.UChr @ a $dOrd
  = Lib.$sfromList2 @ a
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False


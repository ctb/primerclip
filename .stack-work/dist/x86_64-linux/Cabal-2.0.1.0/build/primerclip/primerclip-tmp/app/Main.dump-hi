
==================== FINAL INTERFACE ====================
2018-10-02 17:41:16.515984 UTC

interface main:Main 8022
  interface hash: 75e71452f8c502fae7a29f8465a74fc4
  ABI hash: 19057fe45bb8f77392642cc24cfdda03
  export-list hash: c1d6148b0271a1b6c9a9cf340efb2bf5
  orphan hash: a18b965d16d349d6bc32b0ba550a0dd7
  flag hash: 2b3d14da8d30a11e07ace62e3e3564be
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
  Main.runPrimerTrimming
module dependencies:
package dependencies: QuickCheck-2.10.1 ansi-terminal-0.8.0.2
                      ansi-wl-pprint-0.6.8.2 array-0.5.2.0 attoparsec-0.13.2.2
                      base-4.10.1.0 binary-0.8.5.1 bytestring-0.10.8.2 colour-2.3.4
                      conduit-1.3.0 conduit-extra-1.3.0 containers-0.5.10.2
                      deepseq-1.4.3.0 digits-0.3.1 directory-1.3.0.2 exceptions-0.8.3
                      filepath-1.4.1.2 ghc-boot-th-8.2.2 ghc-prim-0.5.1.1
                      hashable-1.2.7.0 integer-gmp-1.0.1.0 integer-logarithms-1.0.2.1
                      mono-traversable-1.0.8.1 mtl-2.2.2 optparse-applicative-0.14.2.0
                      pretty-1.1.3.3 primerclip-0.3.3.0 primitive-0.6.3.0 process-1.6.1.0
                      random-1.1 resourcet-1.2.0 scientific-0.3.5.2 split-0.2.3.3
                      stm-2.4.5.0 template-haskell-2.12.0.0 text-1.2.3.0 tf-random-0.5
                      time-1.8.0.2 transformers-0.5.2.0 unix-2.7.2.2
                      unliftio-core-0.1.1.0 unordered-containers-0.2.9.0 vector-0.12.0.1
                      vector-algorithms-0.7.0.1
orphans: colour-2.3.4:Data.Colour
         vector-0.12.0.1:Data.Vector.Unboxed
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         hashable-1.2.7.0:Data.Hashable.Generic
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         text-1.2.3.0:Data.Text.Lazy text-1.2.3.0:Data.Text
         binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.0:Data.Text.Show stm-2.4.5.0:Control.Monad.STM
         transformers-0.5.2.0:Control.Monad.Trans.Error
         base-4.10.1.0:GHC.Float base-4.10.1.0:GHC.Base
family instance modules: attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.10.1.0:Control.Applicative base-4.10.1.0:Data.Complex
                         base-4.10.1.0:Data.Either base-4.10.1.0:Data.Functor.Compose
                         base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity
                         base-4.10.1.0:Data.Functor.Product base-4.10.1.0:Data.Functor.Sum
                         base-4.10.1.0:Data.List.NonEmpty base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Semigroup base-4.10.1.0:Data.Type.Equality
                         base-4.10.1.0:Data.Version base-4.10.1.0:Data.Void
                         base-4.10.1.0:GHC.Exts base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats
                         conduit-1.3.0:Data.Conduit.Internal.Conduit
                         conduit-1.3.0:Data.Conduit.Internal.Pipe
                         containers-0.5.10.2:Data.IntMap.Internal
                         containers-0.5.10.2:Data.IntSet.Internal
                         containers-0.5.10.2:Data.Map.Internal
                         containers-0.5.10.2:Data.Sequence.Internal
                         containers-0.5.10.2:Data.Set.Internal containers-0.5.10.2:Data.Tree
                         ghc-boot-th-8.2.2:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.2.2:GHC.LanguageExtensions.Type
                         mono-traversable-1.0.8.1:Data.MonoTraversable
                         mono-traversable-1.0.8.1:Data.NonNull
                         mono-traversable-1.0.8.1:Data.Sequences
                         pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3:Text.PrettyPrint.HughesPJ primerclip-0.3.3.0:Lib
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         resourcet-1.2.0:Control.Monad.Trans.Resource.Internal
                         template-haskell-2.12.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.0:Data.Text text-1.2.3.0:Data.Text.Lazy
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
import  -/  attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8 75eb155dd50974f74df242dc5b5f3c20
import  -/  base-4.10.1.0:Control.Applicative 99577a9c463ffe4790a1d37547a345bd
import  -/  base-4.10.1.0:Control.Monad ebed2e8e7444944e0c1d827c6faf40a4
import  -/  base-4.10.1.0:Data.Either d7dae5d9bf298dee616e465c14b5d60e
import  -/  base-4.10.1.0:Data.List 4ab7fa2a1b87502b23af891a384f0506
import  -/  base-4.10.1.0:Data.Maybe 07738c5485acb328136bb15596f8b845
import  -/  base-4.10.1.0:Data.Semigroup 92914a5d9e5176805d2364209875f6ed
import  -/  base-4.10.1.0:GHC.Base 782fd99b5e36f3698a26179a49afca64
import  -/  base-4.10.1.0:Prelude 31945b7d0084063347fc52506d3a4020
import  -/  base-4.10.1.0:System.IO 6e5bb580370d8d71dc5888f723cea4b4
import  -/  bytestring-0.10.8.2:Data.ByteString.Char8 ad3bf7657730adeac35cbb427299ea44
import  -/  conduit-1.3.0:Conduit 9ca771118110a6d629536df1c70cfb0c
import  -/  conduit-1.3.0:Data.Conduit 214df678ad51311214f3e8dc14f14854
import  -/  conduit-1.3.0:Data.Conduit.Combinators 879a6b83242087f07896e92d4cc7d0e9
import  -/  conduit-1.3.0:Data.Conduit.Combinators.Unqualified bb15af616225f302b124833678fb569b
import  -/  conduit-1.3.0:Data.Conduit.Internal.Conduit 2e849a9a0bf7ebe9e17389aa7226446c
import  -/  conduit-extra-1.3.0:Data.Conduit.Attoparsec b4907557e083a7d91d1ea01e01aba9c2
import  -/  conduit-extra-1.3.0:Data.Conduit.Binary 41355976e14d2e02c70b000849dc465d
import  -/  containers-0.5.10.2:Data.IntMap.Strict 7892d40daae1f0118150f998d9c28567
import  -/  containers-0.5.10.2:Data.Map.Strict 194f5b0a9785a91a43562790aa6787fc
import  -/  ghc-prim-0.5.1.1:GHC.Classes 93e2660065dce9329577e83d76d8f0d4
import  -/  ghc-prim-0.5.1.1:GHC.Types b1fd0716441595db508c1a74387bf394
import  -/  optparse-applicative-0.14.2.0:Options.Applicative 93a6ca444e605eb4e5fada3ed41aa455
import  -/  optparse-applicative-0.14.2.0:Options.Applicative.Builder 9b4b35d95a3739ae48e6b42cbe90c8ed
import  -/  optparse-applicative-0.14.2.0:Options.Applicative.Extra 3e7572295fe04361b13fe1be6a5ecfc7
import  -/  primerclip-0.3.3.0:Lib a76b6473557250899f17d8c7bf087f20
4dbf1aa03245061c15538bc68261fcdf
  $s$fApplicativeResourceT ::
    GHC.Base.Applicative
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  Main.$s$fApplicativeResourceT_$s$fFunctorResourceT
                  (\ @ a (eta :: a) ->
                   let {
                     x :: GHC.Prim.State# GHC.Prim.RealWorld
                          -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                       {- Arity: 1 -}
                     = \ (s :: GHC.Prim.State# GHC.Prim.RealWorld) -> (# s, eta #)
                   } in
                   (\ (ds :: GHC.IORef.IORef
                               Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                    x)
                     `cast`
                   (Trans
                        (<GHC.IORef.IORef
                            Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                         ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                        (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                  <GHC.Types.IO>_R <a>_N))))
                  (\ @ a
                     @ b
                     (ds :: Control.Monad.Trans.Resource.Internal.ResourceT
                              GHC.Types.IO (a -> b))
                     (ds1 :: Control.Monad.Trans.Resource.Internal.ResourceT
                               GHC.Types.IO a)
                     (r :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (ds
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <a -> b>_N)
                           r)
                          `cast`
                        (GHC.Types.N:IO[0] <a -> b>_R)
                          s of ds2 { (#,#) ipv ipv1 ->
                   case (ds1
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <a>_N)
                           r)
                          `cast`
                        (GHC.Types.N:IO[0] <a>_R)
                          ipv of ds3 { (#,#) ipv2 ipv3 ->
                   (# ipv2, ipv1 ipv3 #) } })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   Trans
                       (<Control.Monad.Trans.Resource.Internal.ResourceT
                           GHC.Types.IO (a -> b)>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO a>_R
                        ->_R <GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                        ->_R Sym (GHC.Types.N:IO[0] <b>_R))
                       (<Control.Monad.Trans.Resource.Internal.ResourceT
                           GHC.Types.IO (a -> b)>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO a>_R
                        ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                      <GHC.Types.IO>_R <b>_N)))
                  (\ @ a
                     @ b
                     @ c
                     (eta :: a -> b -> c)
                     (eta1 :: Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO a)
                     (eta2 :: Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b)
                     (eta3 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (eta1
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <a>_N)
                           eta3)
                          `cast`
                        (GHC.Types.N:IO[0] <a>_R)
                          s of ds { (#,#) ipv ipv1 ->
                   case (eta2
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <b>_N)
                           eta3)
                          `cast`
                        (GHC.Types.N:IO[0] <b>_R)
                          ipv of ds1 { (#,#) ipv2 ipv3 ->
                   (# ipv2, eta ipv1 ipv3 #) } })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N).
                   Trans
                       (<a -> b -> c>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO a>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b>_R
                        ->_R <GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                        ->_R Sym (GHC.Types.N:IO[0] <c>_R))
                       (<a -> b -> c>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO a>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b>_R
                        ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                      <GHC.Types.IO>_R <c>_N)))
                  (\ @ a
                     @ b
                     (eta :: Control.Monad.Trans.Resource.Internal.ResourceT
                               GHC.Types.IO a)
                     (eta1 :: Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b)
                     (eta2 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (eta
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <a>_N)
                           eta2)
                          `cast`
                        (GHC.Types.N:IO[0] <a>_R)
                          s of ds { (#,#) ipv ipv1 ->
                   (eta1
                      `cast`
                    (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                         <GHC.Types.IO>_R <b>_N)
                      eta2)
                     `cast`
                   (GHC.Types.N:IO[0] <b>_R)
                     ipv })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   Trans
                       (<Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b>_R
                        ->_R <GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                        ->_R Sym (GHC.Types.N:IO[0] <b>_R))
                       (<Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b>_R
                        ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                      <GHC.Types.IO>_R <b>_N)))
                  (\ @ a
                     @ b
                     (eta1 :: Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO a)
                     (eta2 :: Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b)
                     (eta3 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (eta1
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <a>_N)
                           eta3)
                          `cast`
                        (GHC.Types.N:IO[0] <a>_R)
                          s of ds { (#,#) ipv ipv1 ->
                   case (eta2
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <b>_N)
                           eta3)
                          `cast`
                        (GHC.Types.N:IO[0] <b>_R)
                          ipv of ds1 { (#,#) ipv2 ipv3 ->
                   (# ipv2, ipv1 #) } })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   Trans
                       (<Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b>_R
                        ->_R <GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                        ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                       (<Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b>_R
                        ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                      <GHC.Types.IO>_R <a>_N))) -}
7b41713d7866cba5f7537248f00a15e1
  $s$fApplicativeResourceT_$cpure ::
    a -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,A><S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (eta :: a) ->
                 let {
                   x :: GHC.Prim.State# GHC.Prim.RealWorld
                        -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                     {- Arity: 1 -}
                   = \ (s :: GHC.Prim.State# GHC.Prim.RealWorld) -> (# s, eta #)
                 } in
                 (\ (ds :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                  x)
                   `cast`
                 (Trans
                      (<GHC.IORef.IORef
                          Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                       ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                      (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                <GHC.Types.IO>_R <a>_N)))) -}
b3f1c6bd82613ab91b28b878a0134e99
  $s$fApplicativeResourceT_$s$fFunctorResourceT ::
    GHC.Base.Functor
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  (\ @ a
                     @ b
                     (f :: a -> b)
                     (ds :: Control.Monad.Trans.Resource.Internal.ResourceT
                              GHC.Types.IO a)
                     (r :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (ds
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <a>_N)
                           r)
                          `cast`
                        (GHC.Types.N:IO[0] <a>_R)
                          s of ds1 { (#,#) ipv ipv1 ->
                   (# ipv, f ipv1 #) })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   Trans
                       (<a -> b>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO a>_R
                        ->_R <GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                        ->_R Sym (GHC.Types.N:IO[0] <b>_R))
                       (<a -> b>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO a>_R
                        ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                      <GHC.Types.IO>_R <b>_N)))
                  (\ @ a
                     @ b
                     (x :: a)
                     (eta :: Control.Monad.Trans.Resource.Internal.ResourceT
                               GHC.Types.IO b)
                     (eta1 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (eta
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <b>_N)
                           eta1)
                          `cast`
                        (GHC.Types.N:IO[0] <b>_R)
                          s of ds { (#,#) ipv ipv1 ->
                   (# ipv, x #) })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   Trans
                       (<a>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b>_R
                        ->_R <GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                        ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                       (<a>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b>_R
                        ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                      <GHC.Types.IO>_R <a>_N))) -}
6bb7b65b3845d7a95991a1a11296ffc7
  $s$fMonadIOResourceT ::
    Control.Monad.IO.Class.MonadIO
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  Main.$s$fMonadIOResourceT_$s$fMonadResourceT
                  (\ @ a
                     (eta :: GHC.Types.IO a)
                     (ds :: GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                   eta)
                    `cast`
                  (forall (a :: <*>_N).
                   <GHC.Types.IO a>_R
                   ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                 <GHC.Types.IO>_R <a>_N)) -}
a50d06e986f79dcca2e0f39530238e59
  $s$fMonadIOResourceT_$cliftIO ::
    GHC.Types.IO a
    -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ a
                   (eta :: GHC.Types.IO a)
                   (ds :: GHC.IORef.IORef
                            Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                 eta)
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.Types.IO a>_R
                 ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                               <GHC.Types.IO>_R <a>_N)) -}
569d45414e8b1a4901d477c084e4ec46
  $s$fMonadIOResourceT_$s$fMonadResourceT ::
    GHC.Base.Monad
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  Main.$s$fApplicativeResourceT
                  (\ @ a
                     @ b
                     (ds :: Control.Monad.Trans.Resource.Internal.ResourceT
                              GHC.Types.IO a)
                     (f :: a
                           -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO b)
                     (r :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (ds
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <a>_N)
                           r)
                          `cast`
                        (GHC.Types.N:IO[0] <a>_R)
                          s of ds1 { (#,#) ipv ipv1 ->
                   ((f ipv1)
                      `cast`
                    (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                         <GHC.Types.IO>_R <b>_N)
                      r)
                     `cast`
                   (GHC.Types.N:IO[0] <b>_R)
                     ipv })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   Trans
                       (<Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                        ->_R <a
                              -> Control.Monad.Trans.Resource.Internal.ResourceT
                                   GHC.Types.IO b>_R
                        ->_R <GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                        ->_R Sym (GHC.Types.N:IO[0] <b>_R))
                       (<Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                        ->_R <a
                              -> Control.Monad.Trans.Resource.Internal.ResourceT
                                   GHC.Types.IO b>_R
                        ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                      <GHC.Types.IO>_R <b>_N)))
                  Main.$s$fMonadIOResourceT_$s$fMonadResourceT_$c>>
                  (\ @ a (eta :: a) ->
                   let {
                     x :: GHC.Prim.State# GHC.Prim.RealWorld
                          -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                       {- Arity: 1 -}
                     = \ (s :: GHC.Prim.State# GHC.Prim.RealWorld) -> (# s, eta #)
                   } in
                   (\ (ds :: GHC.IORef.IORef
                               Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                    x)
                     `cast`
                   (Trans
                        (<GHC.IORef.IORef
                            Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                         ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                        (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                  <GHC.Types.IO>_R <a>_N))))
                  (\ @ a ->
                   GHC.Err.errorWithoutStackTrace
                     @ 'GHC.Types.LiftedRep
                     @ (Control.Monad.Trans.Resource.Internal.ResourceT
                          GHC.Types.IO a)) -}
290afafad513b886a5a62fc8a49fbb11
  $s$fMonadIOResourceT_$s$fMonadResourceT_$c>> ::
    Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
    -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO b
    -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO b
  {- Arity: 4, HasNoCafRefs,
     Strictness: <C(C(S(SL))),1*C1(C1(U(U,A)))><L,1*C1(C1(U(U,U)))><L,U><S,U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ a
                   @ b
                   (m1 :: Control.Monad.Trans.Resource.Internal.ResourceT
                            GHC.Types.IO a)
                   (k :: Control.Monad.Trans.Resource.Internal.ResourceT
                           GHC.Types.IO b)
                   (r :: GHC.IORef.IORef
                           Control.Monad.Trans.Resource.Internal.ReleaseMap)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (m1
                         `cast`
                       (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                            <GHC.Types.IO>_R <a>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0] <a>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 (k `cast`
                  (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                       <GHC.Types.IO>_R <b>_N)
                    r)
                   `cast`
                 (GHC.Types.N:IO[0] <b>_R)
                   ipv })
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N).
                 Trans
                     (<Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                      ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                              GHC.Types.IO b>_R
                      ->_R <GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                      ->_R Sym (GHC.Types.N:IO[0] <b>_R))
                     (<Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                      ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                              GHC.Types.IO b>_R
                      ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                    <GHC.Types.IO>_R <b>_N))) -}
be799c2ee19cccb045d5e31318b1be7b
  $s$fMonadResourceResourceT ::
    Control.Monad.Trans.Resource.Internal.MonadResource
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  Main.$s$fMonadIOResourceT
                  (\ @ a
                     (eta :: Control.Monad.Trans.Resource.Internal.ResourceT
                               GHC.Types.IO a)
                     (eta1 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                   eta
                     `cast`
                   (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                        <GHC.Types.IO>_R <a>_N)
                     eta1)
                    `cast`
                  (forall (a :: <*>_N).
                   <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                   ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                 <GHC.Types.IO>_R <a>_N)) -}
18abf8ed7120a165217dfd4af7f44029
  $s$fMonadResourceResourceT1 ::
    Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
    -> GHC.IORef.IORef Control.Monad.Trans.Resource.Internal.ReleaseMap
    -> GHC.Types.IO a
  {- Arity: 2, HasNoCafRefs, Strictness: <C(S),1*C1(U)><L,U>,
     Unfolding: InlineRule (2, True, True)
                (\ @ a
                   (eta :: Control.Monad.Trans.Resource.Internal.ResourceT
                             GHC.Types.IO a)
                   (eta1 :: GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                 eta
                   `cast`
                 (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                      <GHC.Types.IO>_R <a>_N)
                   eta1) -}
9d72b2fddb818bcd8919052935e0f1f3
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule3 Main.$trModule1) -}
3108ceeaf5a318be844de422b45de9d8
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule2) -}
e5875966b74dad2d29772660b8a75e33
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Main"#) -}
33bd129667974f0a0ba4a893af79107d
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule4) -}
d026be77cb9ced20e35a61514e0458aa
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
04a6c01ea3fd17598ad07ed76e14c74b
  $wrunPrimerTrimming ::
    GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Lib.RunStats #)
  {- Arity: 5, Strictness: <S,1*U><L,U><L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Types.Bool)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Base.String)
                   (ww3 :: GHC.Base.String)
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Lib.$wcreateprimerbedmaps ww ww1 w of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) fmp rmp ->
                 (Control.Monad.Trans.Resource.runResourceT
                    @ GHC.Types.IO
                    @ Lib.RunStats
                    Control.Monad.IO.Unlift.$fMonadUnliftIOIO
                    (Data.Conduit.Internal.Pipe.runPipe
                       @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                       @ Lib.RunStats
                       Main.$s$fMonadIOResourceT_$s$fMonadResourceT
                       (Data.Conduit.Internal.Pipe.injectLeftovers
                          @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                          @ ()
                          @ Data.Void.Void
                          @ ()
                          @ Lib.RunStats
                          @ Data.Void.Void
                          Main.$s$fMonadIOResourceT_$s$fMonadResourceT
                          (Main.main_goRight7
                             ((Data.Conduit.Combinators.sourceFile
                                 @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                                 @ ()
                                 Main.$s$fMonadResourceResourceT
                                 ww2)
                                `cast`
                              (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                                   <()>_N
                                   <Data.ByteString.Internal.ByteString>_N
                                   <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                                   <()>_R)
                                @ ()
                                (Data.Conduit.Internal.Pipe.Done
                                   @ ()
                                   @ ()
                                   @ Data.ByteString.Internal.ByteString
                                   @ ()
                                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                                   @ ()))
                             (Main.main_goRight6
                                Main.main5
                                (Main.main_goRight5
                                   Main.main_go8
                                   (Main.main_goRight4
                                      Main.main_go6
                                        `cast`
                                      (Data.Conduit.Internal.Pipe.Pipe
                                         <[Lib.PairedAln]>_N
                                         <[Lib.PairedAln]>_N
                                         (Data.MonoTraversable.D:R:Element[][0] <Lib.PairedAln>_N)
                                         <()>_N
                                         <Control.Monad.Trans.Resource.Internal.ResourceT
                                            GHC.Types.IO>_N
                                         <()>_N)_R
                                      (Main.main_goRight3
                                         (letrec {
                                            go2 :: Data.Conduit.Internal.Pipe.Pipe
                                                     Lib.PairedAln
                                                     Lib.PairedAln
                                                     Lib.PairedAln
                                                     ()
                                                     (Control.Monad.Trans.Resource.Internal.ResourceT
                                                        GHC.Types.IO)
                                                     ()
                                            = Data.Conduit.Internal.Pipe.NeedInput
                                                @ Lib.PairedAln
                                                @ Lib.PairedAln
                                                @ Lib.PairedAln
                                                @ ()
                                                @ (Control.Monad.Trans.Resource.Internal.ResourceT
                                                     GHC.Types.IO)
                                                @ ()
                                                go3
                                                (Data.Conduit.Internal.Pipe.Done
                                                   @ Lib.PairedAln
                                                   @ Lib.PairedAln
                                                   @ Lib.PairedAln
                                                   @ ()
                                                   @ (Control.Monad.Trans.Resource.Internal.ResourceT
                                                        GHC.Types.IO)
                                                   @ ())
                                            go3 :: Lib.PairedAln
                                                   -> Data.Conduit.Internal.Pipe.Pipe
                                                        Lib.PairedAln
                                                        Lib.PairedAln
                                                        Lib.PairedAln
                                                        ()
                                                        (Control.Monad.Trans.Resource.Internal.ResourceT
                                                           GHC.Types.IO)
                                                        ()
                                              {- Arity: 1,
                                                 Strictness: <L,1*U(1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,A,A,A,U,U,U,U,U,U,U,U,U),1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,A,A,A,U,U,U,U,U,U,U,U,U),1*U,1*U)> -}
                                            = \ (i1 :: Lib.PairedAln) ->
                                              Data.Conduit.Internal.Pipe.HaveOutput
                                                @ Lib.PairedAln
                                                @ Lib.PairedAln
                                                @ Lib.PairedAln
                                                @ ()
                                                @ (Control.Monad.Trans.Resource.Internal.ResourceT
                                                     GHC.Types.IO)
                                                @ ()
                                                go2
                                                (Lib.trimprimerPairsE fmp rmp i1)
                                          } in
                                          go2)
                                         (Main.main_goRight2
                                            Main.main_go4
                                            (Main.main_goRight1
                                               Main.main_go2
                                                 `cast`
                                               (Data.Conduit.Internal.Pipe.Pipe
                                                  <[Lib.AlignedRead]>_N
                                                  <[Lib.AlignedRead]>_N
                                                  (Data.MonoTraversable.D:R:Element[][0]
                                                       <Lib.AlignedRead>_N)
                                                  <()>_N
                                                  <Control.Monad.Trans.Resource.Internal.ResourceT
                                                     GHC.Types.IO>_N
                                                  <()>_N)_R
                                               (Main.main_goRight
                                                  Main.main_go
                                                  (Data.Conduit.Internal.Conduit.$fApplicativeZipSink2
                                                     @ (Control.Monad.Trans.Resource.Internal.ResourceT
                                                          GHC.Types.IO)
                                                     @ Lib.AlignedRead
                                                     @ (Lib.RunStats -> Lib.RunStats)
                                                     @ Lib.RunStats
                                                     Main.$s$fMonadIOResourceT_$s$fMonadResourceT
                                                     (\ @ b2
                                                        (h :: (Lib.RunStats -> Lib.RunStats)
                                                              -> Data.Conduit.Internal.Pipe.Pipe
                                                                   Lib.AlignedRead
                                                                   Lib.AlignedRead
                                                                   Data.Void.Void
                                                                   ()
                                                                   (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                      GHC.Types.IO)
                                                                   b2)[OneShot] ->
                                                      let {
                                                        lvl18 :: Data.Conduit.Internal.Pipe.Pipe
                                                                   Lib.AlignedRead
                                                                   Lib.AlignedRead
                                                                   Data.Void.Void
                                                                   ()
                                                                   (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                      GHC.Types.IO)
                                                                   b2
                                                        = h (GHC.Base.breakpoint @ Lib.RunStats)
                                                      } in
                                                      (Lib.printAlnStreamToFile
                                                         @ (Control.Monad.Trans.Resource.Internal.ResourceT
                                                              GHC.Types.IO)
                                                         @ Data.Void.Void
                                                         Main.$s$fMonadResourceResourceT
                                                         ww3)
                                                        `cast`
                                                      (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                                                           <Lib.AlignedRead>_N
                                                           <Data.Void.Void>_N
                                                           <Control.Monad.Trans.Resource.Internal.ResourceT
                                                              GHC.Types.IO>_N
                                                           <()>_R)
                                                        @ b2
                                                        (\ (a4 :: ()) -> lvl18))
                                                       `cast`
                                                     (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                                                               <Lib.AlignedRead>_N
                                                               <Data.Void.Void>_N
                                                               <Control.Monad.Trans.Resource.Internal.ResourceT
                                                                  GHC.Types.IO>_N
                                                               <Lib.RunStats -> Lib.RunStats>_R))
                                                     Lib.calcRunStats1
                                                       `cast`
                                                     (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                                                               <Lib.AlignedRead>_N
                                                               <Data.Void.Void>_N
                                                               <Control.Monad.Trans.Resource.Internal.ResourceT
                                                                  GHC.Types.IO>_N
                                                               <Lib.RunStats>_R))
                                                     @ Lib.RunStats
                                                     Main.main4))))))))))))
                   `cast`
                 (GHC.Types.N:IO[0] <Lib.RunStats>_R)
                   ipv } }) -}
8d716e999d303f81f581995be8a7b014
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
3555b2e20147747ff0f745fb3463f9af
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Options.Applicative.Extra.customExecParser1
                        @ Lib.Opts
                        Options.Applicative.Builder.defaultPrefs
                        Main.main6
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of ww { Lib.Opts ww1 ww2 ww3 ww4 ->
                 case Main.$wrunPrimerTrimming
                        ww1
                        ww2
                        ww3
                        ww4
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main2
                        GHC.Types.True
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 Lib.writeRunStats1 ww4 ipv3 ipv4 } } } }) -}
9f03cda1c5606801ab12e8e740c6f5b2
  main10 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Trim PCR primer sequences from aligned reads"#) -}
5d49e15d7aae46026184b063faa8e7f9
  main11 :: Options.Applicative.Types.Parser Lib.Opts
  {- Unfolding: (Options.Applicative.Types.MultP
                   @ Lib.Opts
                   @ Lib.Opts
                   (Options.Applicative.Extra.helper @ Lib.Opts)
                   Lib.optargs) -}
3109c503168aba5f44aaa75a11b35999
  main12 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
8362be34db12b2cc75133cb624f436b6
  main2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main3) -}
e7aa5b3fc07001c1efb3b3cbc4024390
  main3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("primer trimming complete."#) -}
f8755d1c2b5e4ea502d4414904c6e4d2
  main4 ::
    (Lib.RunStats -> Lib.RunStats, Lib.RunStats)
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*U(1*C1(U),U)>m3,
     Unfolding: (\ (a4 :: (Lib.RunStats -> Lib.RunStats,
                           Lib.RunStats)) ->
                 Data.Conduit.Internal.Pipe.Done
                   @ Lib.AlignedRead
                   @ Lib.AlignedRead
                   @ Data.Void.Void
                   @ ()
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ Lib.RunStats
                   (case a4 of wild { (,) x ds -> x ds })) -}
f6768f89fc3d211acc628831424a1405
  main5 ::
    Data.Conduit.Internal.Pipe.Pipe
      Data.ByteString.Internal.ByteString
      Data.ByteString.Internal.ByteString
      (Data.Either.Either
         Data.Conduit.Attoparsec.ParseError
         (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln]))
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
  {- Unfolding: (Data.Conduit.Attoparsec.$w$sconduitParserEither
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ [Lib.PairedAln]
                   Lib.parsePairedAlnsOrHdr1
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                             <Data.ByteString.Internal.ByteString>_N <[Lib.PairedAln]>_R))
                   @ ()
                   (Data.Conduit.Internal.Pipe.Done
                      @ Data.ByteString.Internal.ByteString
                      @ Data.ByteString.Internal.ByteString
                      @ (Data.Either.Either
                           Data.Conduit.Attoparsec.ParseError
                           (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln]))
                      @ ()
                      @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                      @ ())) -}
ecc4038e1a28eb0c3ad3c4a83a05a77a
  main6 :: Options.Applicative.Types.ParserInfo Lib.Opts
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.ParserInfo
                   @ Lib.Opts
                   Main.main11
                   GHC.Types.True
                   Main.main9
                   Main.main7
                   (GHC.Base.Nothing @ Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                     `cast`
                   (Sym (Options.Applicative.Help.Chunk.N:Chunk[0]) <Text.PrettyPrint.ANSI.Leijen.Internal.Doc>_N)
                   Options.Applicative.Builder.info1
                   Options.Applicative.Types.Intersperse) -}
966b0de7930c7b4cd32002b771209c34
  main7 ::
    Options.Applicative.Help.Chunk.Chunk
      Text.PrettyPrint.ANSI.Leijen.Internal.Doc
  {- Unfolding: (Options.Applicative.Help.Chunk.paragraph_go
                   (GHC.CString.unpackCString# Main.main8)) -}
e3a500727d806bc25c427d9a2582ff99
  main8 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("primerclip -- Swift Biosciences Accel-Amplicon targeted panel primer trimming tool v0.3.3"#) -}
06097b57be41b17cd80defffebc8a8a6
  main9 ::
    Options.Applicative.Help.Chunk.Chunk
      Text.PrettyPrint.ANSI.Leijen.Internal.Doc
  {- Unfolding: (Options.Applicative.Help.Chunk.paragraph_go
                   (GHC.CString.unpackCString# Main.main10)) -}
0b60954ca35f24c898d3c829b1e216cb
  main_go ::
    Data.Conduit.Internal.Pipe.Pipe
      Lib.AlignedRead
      Lib.AlignedRead
      Lib.AlignedRead
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
  {- Strictness: m2,
     Unfolding: (Data.Conduit.Internal.Pipe.NeedInput
                   @ Lib.AlignedRead
                   @ Lib.AlignedRead
                   @ Lib.AlignedRead
                   @ ()
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ ()
                   Main.main_go1
                   (Data.Conduit.Internal.Pipe.Done
                      @ Lib.AlignedRead
                      @ Lib.AlignedRead
                      @ Lib.AlignedRead
                      @ ()
                      @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                      @ ())) -}
4fa230f00b312de50a86c134999c3124
  main_go1 ::
    Lib.AlignedRead
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Lib.AlignedRead
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         ()
  {- Arity: 1,
     Strictness: <S(S(LLLS)LLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)> -}
56004beb52d69e78b1f177c880dfb114
  main_go2 ::
    Data.Conduit.Internal.Pipe.Pipe
      [Lib.AlignedRead]
      [Lib.AlignedRead]
      (Data.MonoTraversable.Element [Lib.AlignedRead])
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Data.Conduit.Internal.Pipe.NeedInput
                   @ [Lib.AlignedRead]
                   @ [Lib.AlignedRead]
                   @ (Data.MonoTraversable.Element [Lib.AlignedRead])
                   @ ()
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ ()
                   Main.main_go3
                   (Data.Conduit.Internal.Pipe.Done
                      @ [Lib.AlignedRead]
                      @ [Lib.AlignedRead]
                      @ Lib.AlignedRead
                      @ ()
                      @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                      @ ())
                     `cast`
                   (<()>_R
                    ->_R (Data.Conduit.Internal.Pipe.Pipe
                            <[Lib.AlignedRead]>_N
                            <[Lib.AlignedRead]>_N
                            (Sym (Data.MonoTraversable.D:R:Element[][0] <Lib.AlignedRead>_N))
                            <()>_N
                            <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                            <()>_N)_R)) -}
463cda86be6f17f6c809d7ef7153730d
  main_go3 ::
    [Lib.AlignedRead]
    -> Data.Conduit.Internal.Pipe.Pipe
         [Lib.AlignedRead]
         [Lib.AlignedRead]
         (Data.MonoTraversable.Element [Lib.AlignedRead])
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         ()
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
a3d204eb9dae1779fd3d40c3d817ed4f
  main_go4 ::
    Data.Conduit.Internal.Pipe.Pipe
      Lib.PairedAln
      Lib.PairedAln
      [Lib.AlignedRead]
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Data.Conduit.Internal.Pipe.NeedInput
                   @ Lib.PairedAln
                   @ Lib.PairedAln
                   @ [Lib.AlignedRead]
                   @ ()
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ ()
                   Main.main_go5
                   (Data.Conduit.Internal.Pipe.Done
                      @ Lib.PairedAln
                      @ Lib.PairedAln
                      @ [Lib.AlignedRead]
                      @ ()
                      @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                      @ ())) -}
04e9eda1b6b0b41e600c9ba65e24f82f
  main_go5 ::
    Lib.PairedAln
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.PairedAln
         Lib.PairedAln
         [Lib.AlignedRead]
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(U,U,U,U)>m1 -}
89c5c7e552029679d5eeed6e92f859b2
  main_go6 ::
    Data.Conduit.Internal.Pipe.Pipe
      [Lib.PairedAln]
      [Lib.PairedAln]
      (Data.MonoTraversable.Element [Lib.PairedAln])
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Data.Conduit.Internal.Pipe.NeedInput
                   @ [Lib.PairedAln]
                   @ [Lib.PairedAln]
                   @ (Data.MonoTraversable.Element [Lib.PairedAln])
                   @ ()
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ ()
                   Main.main_go7
                   (Data.Conduit.Internal.Pipe.Done
                      @ [Lib.PairedAln]
                      @ [Lib.PairedAln]
                      @ Lib.PairedAln
                      @ ()
                      @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                      @ ())
                     `cast`
                   (<()>_R
                    ->_R (Data.Conduit.Internal.Pipe.Pipe
                            <[Lib.PairedAln]>_N
                            <[Lib.PairedAln]>_N
                            (Sym (Data.MonoTraversable.D:R:Element[][0] <Lib.PairedAln>_N))
                            <()>_N
                            <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                            <()>_N)_R)) -}
d5d41b87e2d8fd1f8400549f79cb822d
  main_go7 ::
    [Lib.PairedAln]
    -> Data.Conduit.Internal.Pipe.Pipe
         [Lib.PairedAln]
         [Lib.PairedAln]
         (Data.MonoTraversable.Element [Lib.PairedAln])
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         ()
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
50ac52418c03c57be0f7bc0f80db6e44
  main_go8 ::
    Data.Conduit.Internal.Pipe.Pipe
      (Data.Either.Either
         Data.Conduit.Attoparsec.ParseError
         (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln]))
      (Data.Either.Either
         Data.Conduit.Attoparsec.ParseError
         (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln]))
      [Lib.PairedAln]
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Data.Conduit.Internal.Pipe.NeedInput
                   @ (Data.Either.Either
                        Data.Conduit.Attoparsec.ParseError
                        (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln]))
                   @ (Data.Either.Either
                        Data.Conduit.Attoparsec.ParseError
                        (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln]))
                   @ [Lib.PairedAln]
                   @ ()
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ ()
                   Main.main_go9
                   (Data.Conduit.Internal.Pipe.Done
                      @ (Data.Either.Either
                           Data.Conduit.Attoparsec.ParseError
                           (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln]))
                      @ (Data.Either.Either
                           Data.Conduit.Attoparsec.ParseError
                           (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln]))
                      @ [Lib.PairedAln]
                      @ ()
                      @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                      @ ())) -}
6e2a378d4f903a8e3f3f9d75b68b40d8
  main_go9 ::
    Data.Either.Either
      Data.Conduit.Attoparsec.ParseError
      (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln])
    -> Data.Conduit.Internal.Pipe.Pipe
         (Data.Either.Either
            Data.Conduit.Attoparsec.ParseError
            (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln]))
         (Data.Either.Either
            Data.Conduit.Attoparsec.ParseError
            (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln]))
         [Lib.PairedAln]
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*U>m1 -}
ce155de1bc41f654b10a52bf3ceceae9
  main_goRight ::
    Data.Conduit.Internal.Pipe.Pipe
      Lib.AlignedRead
      Lib.AlignedRead
      Lib.AlignedRead
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U> -}
99c0407eca058be7094c18be792c749a
  main_goRight1 ::
    Data.Conduit.Internal.Pipe.Pipe
      [Lib.AlignedRead]
      [Lib.AlignedRead]
      Lib.AlignedRead
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
    -> Data.Conduit.Internal.Pipe.Pipe
         [Lib.AlignedRead]
         [Lib.AlignedRead]
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U> -}
13a546d32ec5edf0c46f3234589ed2ae
  main_goRight2 ::
    Data.Conduit.Internal.Pipe.Pipe
      Lib.PairedAln
      Lib.PairedAln
      [Lib.AlignedRead]
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
    -> Data.Conduit.Internal.Pipe.Pipe
         [Lib.AlignedRead]
         [Lib.AlignedRead]
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.PairedAln
         Lib.PairedAln
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U> -}
f9762462d047a2a53fab717af9cff1e0
  main_goRight3 ::
    Data.Conduit.Internal.Pipe.Pipe
      Lib.PairedAln
      Lib.PairedAln
      Lib.PairedAln
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.PairedAln
         Lib.PairedAln
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.PairedAln
         Lib.PairedAln
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U> -}
c1bef7b10f6360a435f1f1dd48b42169
  main_goRight4 ::
    Data.Conduit.Internal.Pipe.Pipe
      [Lib.PairedAln]
      [Lib.PairedAln]
      Lib.PairedAln
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.PairedAln
         Lib.PairedAln
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
    -> Data.Conduit.Internal.Pipe.Pipe
         [Lib.PairedAln]
         [Lib.PairedAln]
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U> -}
55a5d3276153fa63c11cf3c8a8bf22ae
  main_goRight5 ::
    Data.Conduit.Internal.Pipe.Pipe
      (Data.Either.Either
         Data.Conduit.Attoparsec.ParseError
         (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln]))
      (Data.Either.Either
         Data.Conduit.Attoparsec.ParseError
         (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln]))
      [Lib.PairedAln]
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
    -> Data.Conduit.Internal.Pipe.Pipe
         [Lib.PairedAln]
         [Lib.PairedAln]
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
    -> Data.Conduit.Internal.Pipe.Pipe
         (Data.Either.Either
            Data.Conduit.Attoparsec.ParseError
            (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln]))
         (Data.Either.Either
            Data.Conduit.Attoparsec.ParseError
            (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln]))
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U> -}
8aa4d4308b84151389553bda157f994a
  main_goRight6 ::
    Data.Conduit.Internal.Pipe.Pipe
      Data.ByteString.Internal.ByteString
      Data.ByteString.Internal.ByteString
      (Data.Either.Either
         Data.Conduit.Attoparsec.ParseError
         (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln]))
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
    -> Data.Conduit.Internal.Pipe.Pipe
         (Data.Either.Either
            Data.Conduit.Attoparsec.ParseError
            (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln]))
         (Data.Either.Either
            Data.Conduit.Attoparsec.ParseError
            (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln]))
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
    -> Data.Conduit.Internal.Pipe.Pipe
         Data.ByteString.Internal.ByteString
         Data.ByteString.Internal.ByteString
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U> -}
97a3cfc1ac97c6d16345f8f5c68769a2
  main_goRight7 ::
    Data.Conduit.Internal.Pipe.Pipe
      ()
      ()
      Data.ByteString.Internal.ByteString
      ()
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      ()
    -> Data.Conduit.Internal.Pipe.Pipe
         Data.ByteString.Internal.ByteString
         Data.ByteString.Internal.ByteString
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
    -> Data.Conduit.Internal.Pipe.Pipe
         ()
         ()
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         Lib.RunStats
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U> -}
62028ff261b7c3a60d32267cfdd4c642
  runPrimerTrimming :: Lib.Opts -> GHC.Types.IO Lib.RunStats
  {- Arity: 2, Strictness: <S(SLLL),1*U(1*U,U,U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.runPrimerTrimming1
                  `cast`
                (<Lib.Opts>_R ->_R Sym (GHC.Types.N:IO[0] <Lib.RunStats>_R)) -}
ec6e2f8c890e3111e867935e12262ac1
  runPrimerTrimming1 ::
    Lib.Opts
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Lib.RunStats #)
  {- Arity: 2, Strictness: <S(SLLL),1*U(1*U,U,U,U)><S,U>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.Opts) (w1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Lib.Opts ww1 ww2 ww3 ww4 ->
                 Main.$wrunPrimerTrimming ww1 ww2 ww3 ww4 w1 }) -}
"SPEC/Main $fApplicativeResourceT @ IO" [orphan] forall (v :: GHC.Base.Applicative
                                                                GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT @ GHC.Types.IO
                                                               v
  = Main.$s$fApplicativeResourceT
"SPEC/Main $fApplicativeResourceT_$cpure @ IO" [orphan] forall ($dApplicative :: GHC.Base.Applicative
                                                                                   GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT_$cpure @ GHC.Types.IO
                                                                      $dApplicative
  = Main.$s$fApplicativeResourceT_$cpure
"SPEC/Main $fFunctorResourceT @ IO" [orphan] forall (v :: GHC.Base.Functor
                                                            GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fFunctorResourceT @ GHC.Types.IO
                                                           v
  = Main.$s$fApplicativeResourceT_$s$fFunctorResourceT
"SPEC/Main $fMonadIOResourceT @ IO" [orphan] forall (v :: Control.Monad.IO.Class.MonadIO
                                                            GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadIOResourceT @ GHC.Types.IO
                                                           v
  = Main.$s$fMonadIOResourceT
"SPEC/Main $fMonadIOResourceT_$cliftIO @ IO" [orphan] forall ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                             GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadIOResourceT_$cliftIO @ GHC.Types.IO
                                                                    $dMonadIO
  = Main.$s$fMonadIOResourceT_$cliftIO
"SPEC/Main $fMonadResourceResourceT @ IO" [orphan] forall (v :: Control.Monad.IO.Class.MonadIO
                                                                  GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadResourceResourceT @ GHC.Types.IO
                                                                 v
  = Main.$s$fMonadResourceResourceT
"SPEC/Main $fMonadResourceResourceT1 @ IO" [orphan] forall ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                           GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadResourceResourceT1 @ GHC.Types.IO
                                                                  $dMonadIO
  = Main.$s$fMonadResourceResourceT1
"SPEC/Main $fMonadResourceT @ IO" [orphan] forall (v :: GHC.Base.Monad
                                                          GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadResourceT @ GHC.Types.IO
                                                         v
  = Main.$s$fMonadIOResourceT_$s$fMonadResourceT
"SPEC/Main $fMonadResourceT_$c>> @ IO" [orphan] forall ($dMonad :: GHC.Base.Monad
                                                                     GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadResourceT_$c>> @ GHC.Types.IO
                                                              $dMonad
  = Main.$s$fMonadIOResourceT_$s$fMonadResourceT_$c>>
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False


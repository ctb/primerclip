
==================== FINAL INTERFACE ====================
2017-12-11 19:22:15.386719 UTC

interface primerclip-0.1.0.0-KtmdnGpJra4GypcvVGF2ng:Lib [family instance module] 8002
  interface hash: c958200da8147a6c2d98e572c1fd57f8
  ABI hash: f35ee9b2ce1e69b9577ee6cf5bf8b19d
  export-list hash: 342c03a9c750375c5593849f562cf3db
  orphan hash: ad702c210253d94491e026eaa20196ff
  flag hash: c700d67e8f1203d8103b9f3bfac8bb0d
  sig of: Nothing
  used TH splices: False
  where
exports:
  Lib.addprimerints
  Lib.adjustcrds
  Lib.alnparser
  Lib.bedmaplookup
  Lib.bedrecparser
  Lib.calculateTrimStats
  Lib.checkChromNameMatchStatus
  Lib.checkCigarSeqlen
  Lib.checkcigseqlen
  Lib.checkcigseqlen2
  Lib.checknonzeroCigMatch
  Lib.checkpos
  Lib.cigarP
  Lib.cigseqlenHdrPassTest
  Lib.contractcigar
  Lib.countDs
  Lib.defaultAlignment
  Lib.defaultBed
  Lib.defaultMasterRec
  Lib.defaultMidFam
  Lib.expandcigar
  Lib.expandcigar2
  Lib.exrights
  Lib.exrights2
  Lib.filtpadassoc
  Lib.filtpadcmap
  Lib.getAlignedLength
  Lib.getBED
  Lib.getFPrimerBEDfromMaster
  Lib.getMasterFile
  Lib.getNclips
  Lib.getRPrimerBEDfromMaster
  Lib.getRight
  Lib.getRightM
  Lib.getSAM
  Lib.getSAM2
  Lib.getTargetBEDfromMaster
  Lib.getcol
  Lib.getlengths
  Lib.hdralnparser
  Lib.hdrchromp
  Lib.intgr2int
  Lib.itypep
  Lib.ix
  Lib.justbedmaps
  Lib.justchrmaps
  Lib.mIDp
  Lib.makebedmap
  Lib.makechrbedmap
  Lib.makeprimertups
  Lib.mapcig
  Lib.mapfst
  Lib.masterRecToTargetBED
  Lib.masterToFPrimerBED
  Lib.masterToRPrimerBED
  Lib.masterToTargetBED
  Lib.masterparser
  Lib.noclip
  Lib.nohardclip
  Lib.nopadding
  Lib.optasp
  Lib.optfieldp
  Lib.optfieldpEOL
  Lib.optfieldsp
  Lib.optfieldsp2
  Lib.optfieldsp3
  Lib.optidp
  Lib.optnmp
  Lib.optxsp
  Lib.parseAln
  Lib.parseAlns
  Lib.parseBED
  Lib.parseCigar
  Lib.parseSAM
  Lib.parsechkBED
  Lib.parsechkMaster
  Lib.parsechkSAM
  Lib.parsedbl
  Lib.parseint
  Lib.parsemIDstring
  Lib.parsesignedint
  Lib.printAlignment
  Lib.printAlignmentOrHdr
  Lib.printAlnStreamToFile
  Lib.rdint
  Lib.readSAMFlag
  Lib.readint
  Lib.removeDs
  Lib.rightOrDefault
  Lib.safemapcig
  Lib.samhdrparser
  Lib.samhdrparserEOL
  Lib.seqp
  Lib.setpintflag
  Lib.shiftcrds
  Lib.showChrom
  Lib.showcigar
  Lib.skipcolon
  Lib.spaces
  Lib.starcigarP
  Lib.sumMatches
  Lib.taketrim
  Lib.toBin
  Lib.toBinInt
  Lib.trimalignment
  Lib.trimboth
  Lib.trimfwd
  Lib.trimprimersE
  Lib.trimrem
  Lib.trimrev
  Lib.txtfieldp
  Lib.uchrparser
  Lib.updateCigB
  Lib.updateCigF
  Lib.updateCigR
  Lib.AlignedRead{Lib.AlignedRead basequal cigar cigmap endpos fint flag headerstrings isheader mapped mapqual mid optfields paired pintflag pnext pos qname refseq rint rname rnext strand tbed tlen trimdcigar trimdcigmap trimdendpos trimdflag trimdpos xmid}
  Lib.Alignments
  Lib.BED
  Lib.BedMap
  Lib.BedRecord{Lib.BedRecord bedchr bedend bedname bedstart}
  Lib.CMap
  Lib.ChromNameFormat{Lib.GRC Lib.UCSC}
  Lib.CigarMap
  Lib.Header
  Lib.MasterRecord{Lib.MasterRecord mampname mchrom mforend mforname mforseq mforstart mrevend mrevname mrevseq mrevstart mtargetend mtargetstart}
  Lib.MidFamily{Lib.MidFamily alncount alnend alns alnstart chrom midseq negtxposdcnt postxposdcnt targetbed txposedcount}
  Lib.SAM
  Lib.SAMFlag{Lib.SAMFlag dupRead failedQC fstInPair intflag mateMapped mateNeg notMapped notPrimary pairNotMapped pairedRead queryPlus sndInPair}
  Lib.UChr{Lib.C1 Lib.C10 Lib.C11 Lib.C12 Lib.C13 Lib.C14 Lib.C15 Lib.C16 Lib.C17 Lib.C18 Lib.C19 Lib.C2 Lib.C20 Lib.C21 Lib.C22 Lib.C3 Lib.C4 Lib.C5 Lib.C6 Lib.C7 Lib.C8 Lib.C9 Lib.CMT Lib.CX Lib.CY Lib.Chr1 Lib.Chr10 Lib.Chr11 Lib.Chr12 Lib.Chr13 Lib.Chr14 Lib.Chr15 Lib.Chr16 Lib.Chr17 Lib.Chr18 Lib.Chr19 Lib.Chr2 Lib.Chr20 Lib.Chr21 Lib.Chr22 Lib.Chr3 Lib.Chr4 Lib.Chr5 Lib.Chr6 Lib.Chr7 Lib.Chr8 Lib.Chr9 Lib.ChrM Lib.ChrX Lib.ChrY Lib.GL000191P1 Lib.GL000192P1 Lib.GL000193P1 Lib.GL000194P1 Lib.GL000195P1 Lib.GL000196P1 Lib.GL000197P1 Lib.GL000198P1 Lib.GL000199P1 Lib.GL000200P1 Lib.GL000201P1 Lib.GL000202P1 Lib.GL000203P1 Lib.GL000204P1 Lib.GL000205P1 Lib.GL000206P1 Lib.GL000207P1 Lib.GL000208P1 Lib.GL000209P1 Lib.GL000210P1 Lib.GL000211P1 Lib.GL000212P1 Lib.GL000213P1 Lib.GL000214P1 Lib.GL000215P1 Lib.GL000216P1 Lib.GL000217P1 Lib.GL000218P1 Lib.GL000219P1 Lib.GL000220P1 Lib.GL000221P1 Lib.GL000222P1 Lib.GL000223P1 Lib.GL000224P1 Lib.GL000225P1 Lib.GL000226P1 Lib.GL000227P1 Lib.GL000228P1 Lib.GL000229P1 Lib.GL000230P1 Lib.GL000231P1 Lib.GL000232P1 Lib.GL000233P1 Lib.GL000234P1 Lib.GL000235P1 Lib.GL000236P1 Lib.GL000237P1 Lib.GL000238P1 Lib.GL000239P1 Lib.GL000240P1 Lib.GL000241P1 Lib.GL000242P1 Lib.GL000243P1 Lib.GL000244P1 Lib.GL000245P1 Lib.GL000246P1 Lib.GL000247P1 Lib.GL000248P1 Lib.GL000249P1 Lib.NC_007605 Lib.NONE}
module dependencies:
package dependencies: QuickCheck-2.9.2@QuickCheck-2.9.2-Jyj4gc4JxkEIgGFLAsGhs9
                      array-0.5.1.1@array-0.5.1.1
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-HhuV3U7exg79UmloYn3kX2
                      base-4.9.1.0
                      base16-bytestring-0.1.1.6@base16-bytestring-0.1.1.6-4E2p94lTx8gIceMhu8Kl9o
                      base64-bytestring-1.0.0.1@base64-bytestring-1.0.0.1-4O9TExPPz6eI82Yj7L4SIj
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      chunked-data-0.3.0@chunked-data-0.3.0-9yVtbG7WxDXAouokjxBoYn
                      conduit-1.2.10@conduit-1.2.10-GgLn1U1QYcf9wsQecuZ1A4
                      conduit-combinators-1.1.1@conduit-combinators-1.1.1-6ruYzXuPCuQzxO1r1KimU
                      conduit-extra-1.1.15@conduit-extra-1.1.15-8sHNT28fM12994kb54uPaH
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      digits-0.3.1@digits-0.3.1-6oiBpqLKU4HFf04HYYakY
                      directory-1.3.0.0@directory-1.3.0.0
                      exceptions-0.8.3@exceptions-0.8.3-ADEDRATtUrMK1JW4zMQ9U
                      filepath-1.4.1.1@filepath-1.4.1.1
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      hashable-1.2.6.0@hashable-1.2.6.0-3EXxoqeEgbfAKr6aGkye6x
                      integer-gmp-1.0.0.1
                      integer-logarithms-1.0.1@integer-logarithms-1.0.1-IEHCuEd5sG4JjSjlx7m5JF
                      lifted-base-0.2.3.10@lifted-base-0.2.3.10-BoEavBFIcriDza63doCjS2
                      mmorph-1.0.9@mmorph-1.0.9-5bASEvmIkr5CpdAYXwPsn0
                      monad-control-1.0.1.0@monad-control-1.0.1.0-LQwQ0Hi5p0oAccTfTzbfD5
                      mono-traversable-1.0.2@mono-traversable-1.0.2-2XfkX4kmUKV9EdqqkFHQ4
                      mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      mwc-random-0.13.5.0@mwc-random-0.13.5.0-Dp3Ri46ZxJuCFZWIowNqha
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH
                      process-1.4.3.0@process-1.4.3.0
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      resourcet-1.1.9@resourcet-1.1.9-Ej57FoSD8NQLck5u9CwWz8
                      scientific-0.3.4.12@scientific-0.3.4.12-J9HRl69dpDBBzAMKxlfkoh
                      split-0.2.3.1@split-0.2.3.1-FWyXC6nhV0H3AfM8IzrEFk
                      stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
                      streaming-commons-0.1.17@streaming-commons-0.1.17-pXxQEId7Ie1SLoOLcDazB
                      template-haskell-2.11.1.0
                      text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR
                      tf-random-0.5@tf-random-0.5-BGjMgO8m67W8CHiEl15kZ7
                      time-1.6.0.1@time-1.6.0.1 transformers-0.5.2.0@transformers-0.5.2.0
                      transformers-base-0.4.4@transformers-base-0.4.4-GKSs0LKukAL8ymq2naFmrH
                      unix-2.7.2.1@unix-2.7.2.1
                      unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-1XEErQCPPPc2SEtcHHNx9o
                      vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG
                      vector-algorithms-0.7.0.1@vector-algorithms-0.7.0.1-C2u1KYklHg84I6SQQVEAin
orphans: attoparsec-0.13.1.0@attoparsec-0.13.1.0-HhuV3U7exg79UmloYn3kX2:Data.Attoparsec.ByteString.Char8
         base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.6.0@hashable-1.2.6.0-3EXxoqeEgbfAKr6aGkye6x:Data.Hashable.Generic
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed
family instance modules: attoparsec-0.13.1.0@attoparsec-0.13.1.0-HhuV3U7exg79UmloYn3kX2:Data.Attoparsec.Internal.Types
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Compose
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         conduit-1.2.10@conduit-1.2.10-GgLn1U1QYcf9wsQecuZ1A4:Data.Conduit.Internal.Conduit
                         conduit-1.2.10@conduit-1.2.10-GgLn1U1QYcf9wsQecuZ1A4:Data.Conduit.Internal.Pipe
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         monad-control-1.0.1.0@monad-control-1.0.1.0-LQwQ0Hi5p0oAccTfTzbfD5:Control.Monad.Trans.Control
                         mono-traversable-1.0.2@mono-traversable-1.0.2-2XfkX4kmUKV9EdqqkFHQ4:Data.MonoTraversable
                         mono-traversable-1.0.2@mono-traversable-1.0.2-2XfkX4kmUKV9EdqqkFHQ4:Data.NonNull
                         mono-traversable-1.0.2@mono-traversable-1.0.2-2XfkX4kmUKV9EdqqkFHQ4:Data.Sequences
                         mwc-random-0.13.5.0@mwc-random-0.13.5.0-Dp3Ri46ZxJuCFZWIowNqha:System.Random.MWC
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH:Control.Monad.Primitive
                         resourcet-1.1.9@resourcet-1.1.9-Ej57FoSD8NQLck5u9CwWz8:Control.Monad.Trans.Resource.Internal
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
                         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Lazy
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-1XEErQCPPPc2SEtcHHNx9o:Data.HashMap.Base
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-1XEErQCPPPc2SEtcHHNx9o:Data.HashSet
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Primitive
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Storable
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed.Base
import  -/  attoparsec-0.13.1.0@attoparsec-0.13.1.0-HhuV3U7exg79UmloYn3kX2:Data.Attoparsec.ByteString.Char8 411586256774bd277d916a2a44fa1491
import  -/  attoparsec-0.13.1.0@attoparsec-0.13.1.0-HhuV3U7exg79UmloYn3kX2:Data.Attoparsec.ByteString.Internal e8acf5c94f556f7efb6a36c91f1ffc5f
import  -/  attoparsec-0.13.1.0@attoparsec-0.13.1.0-HhuV3U7exg79UmloYn3kX2:Data.Attoparsec.Combinator d2ba5566a53570a955ff57726152912d
import  -/  base-4.9.1.0:Control.Applicative 32430a90492e727f4bd80db71c28600c
import  -/  base-4.9.1.0:Control.Exception a76dd9666251322fe34dbcca3a0817bf
import  -/  base-4.9.1.0:Control.Monad a6784c5dab0d75c63dabec5a37843f98
import  -/  base-4.9.1.0:Control.Monad.IO.Class 1a4384f66ee999caf5366398edb6ca7b
import  -/  base-4.9.1.0:Data.Bits d707ac81dd0124c7a7fb3234df2c8548
import  -/  base-4.9.1.0:Data.Char 01433d23661edb6e5ef1536ef1e6774c
import  -/  base-4.9.1.0:Data.Either 20b09ef8d0a5b74fdec011c40c1587f5
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:Data.Functor 5ab1dc703df5b482e77efb697833ca3c
import  -/  base-4.9.1.0:Data.List 07ae2acca6538aa0800bd0a993ac6ac1
import  -/  base-4.9.1.0:Data.Maybe d876c4ffe4b3c43755a781e8ad860d88
import  -/  base-4.9.1.0:Data.Monoid 51cc9cd8c130d49ba96b7c2c2406022b
import  -/  base-4.9.1.0:Data.OldList 27987919d8da2f92e3f472ca81f730f8
import  -/  base-4.9.1.0:Data.Ord 7fde5c9d64d4c27431689be19182758a
import  -/  base-4.9.1.0:Data.Tuple 7dc4bbb45d2e69c991ffac438beeca11
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Enum 3811281f7b5f26da514529cf3ed44009
import  -/  base-4.9.1.0:GHC.Err 3bba35a16538d33d424682ce66876cdd
import  -/  base-4.9.1.0:GHC.Generics 1dbec2bc7dd1c5bd8c89ed857eaed19b
import  -/  base-4.9.1.0:GHC.IO eb504c57b397cf133849f8586f15dafb
import  -/  base-4.9.1.0:GHC.List ab8c4e523e6c479c549d3bcd5fc4a439
import  -/  base-4.9.1.0:GHC.Num 00bfaa7b2f9d6084913c0697a8a49ec8
import  -/  base-4.9.1.0:GHC.Read b6821365d2d5fa2155c9e910160e7f57
import  -/  base-4.9.1.0:GHC.Real 82e4e59051a13dba1da63e1e970a69e6
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-4.9.1.0:System.IO e4a64a8e3dce8616da54f0ee7104f7db
import  -/  base-4.9.1.0:Text.Read 75c59863e882ebaec4532e9465e2ee9b
import  -/  bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString 43e99fdac51908da414a28958688da64
import  -/  bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Char8 64661030f691dd1495e363eeda7a5344
import  -/  bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Internal 89cda42ec946d9d6577dd41ab95d523e
import  -/  conduit-1.2.10@conduit-1.2.10-GgLn1U1QYcf9wsQecuZ1A4:Data.Conduit e1821bb6fffe882fe955240027b231ab
import  -/  conduit-1.2.10@conduit-1.2.10-GgLn1U1QYcf9wsQecuZ1A4:Data.Conduit.Internal.Conduit 8ce3b9b86ab5c05f009c4983cd402a46
import  -/  conduit-combinators-1.1.1@conduit-combinators-1.1.1-6ruYzXuPCuQzxO1r1KimU:Conduit 3613c556e142008d222f3ec4e8242420
import  -/  conduit-combinators-1.1.1@conduit-combinators-1.1.1-6ruYzXuPCuQzxO1r1KimU:Data.Conduit.Combinators.Unqualified 0c5c4ba2ed69c19704f62d7919b1380c
import  -/  conduit-extra-1.1.15@conduit-extra-1.1.15-8sHNT28fM12994kb54uPaH:Data.Conduit.Binary 6603188230cc506ad6096ba7447f637b
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base 248d3140f4906d3f80988682df5d56f3
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Strict ed6a6dc2532da5c9a45406821568538c
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base d432f6875983131473086af8cb290590
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map.Strict 9d0c0962e53270a0a3fb5cb63723a381
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Set 3ed2324fd1e757464a8ac2b636a64e5a
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base 192db525847d66243089501d3ee84714
import  -/  digits-0.3.1@digits-0.3.1-6oiBpqLKU4HFf04HYYakY:Data.Digits eda89960ebe5a2f5566da3ee6f6f6b99
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  integer-gmp-1.0.0.1:GHC.Integer.Type 318df275d77dcdb18e0006d8d7870c2a
import  -/  process-1.4.3.0@process-1.4.3.0:System.Process 1ee59b956b7cad68338d3f6ab3e772ed
import  -/  resourcet-1.1.9@resourcet-1.1.9-Ej57FoSD8NQLck5u9CwWz8:Control.Monad.Trans.Resource.Internal e04aa5a272a98486d05fee51891e66ce
import  -/  vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector 5a746e9670329619c461c982b12cd97b
729a34be9738ea3507254144802cc56b
  $fBoundedChromNameFormat :: GHC.Enum.Bounded Lib.ChromNameFormat
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:. @ Lib.ChromNameFormat Lib.GRC Lib.UCSC -}
3b7e185ad71459af8d347e25da054651
  $fBoundedUChr :: GHC.Enum.Bounded Lib.UChr
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:. @ Lib.UChr Lib.C1 Lib.NONE -}
729a34be9738ea3507254144802cc56b
  $fEnumChromNameFormat :: GHC.Enum.Enum Lib.ChromNameFormat
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lib.ChromNameFormat
                  Lib.$fEnumChromNameFormat_$csucc
                  Lib.$fEnumChromNameFormat_$cpred
                  Lib.$fEnumChromNameFormat_$ctoEnum
                  Lib.$fEnumChromNameFormat_$cfromEnum
                  Lib.$fEnumChromNameFormat_$cenumFrom
                  Lib.$fEnumChromNameFormat_$cenumFromThen
                  Lib.$fEnumChromNameFormat_$cenumFromTo
                  Lib.$fEnumChromNameFormat_$cenumFromThenTo -}
729a34be9738ea3507254144802cc56b
  $fEnumChromNameFormat1 :: GHC.Prim.Int# -> Lib.ChromNameFormat
  {- Arity: 1, Strictness: <L,U>x -}
729a34be9738ea3507254144802cc56b
  $fEnumChromNameFormat2 :: [Lib.ChromNameFormat]
  {- Unfolding: (Lib.$fEnumChromNameFormat_go2 1#) -}
729a34be9738ea3507254144802cc56b
  $fEnumChromNameFormat3 :: [Lib.ChromNameFormat]
  {- Unfolding: (Lib.$fEnumChromNameFormat_go3 0#) -}
729a34be9738ea3507254144802cc56b
  $fEnumChromNameFormat4 :: Lib.ChromNameFormat
  {- Strictness: x -}
729a34be9738ea3507254144802cc56b
  $fEnumChromNameFormat5 :: Lib.ChromNameFormat
  {- Strictness: x -}
729a34be9738ea3507254144802cc56b
  $fEnumChromNameFormat_$cenumFrom ::
    Lib.ChromNameFormat -> [Lib.ChromNameFormat]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (a :: Lib.ChromNameFormat) ->
                 case a of wild {
                   Lib.GRC -> Lib.$fEnumChromNameFormat3
                   Lib.UCSC -> Lib.$fEnumChromNameFormat2 }) -}
729a34be9738ea3507254144802cc56b
  $fEnumChromNameFormat_$cenumFromThen ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat -> [Lib.ChromNameFormat]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Lib.ChromNameFormat)
                   (b :: Lib.ChromNameFormat) ->
                 let {
                   $j :: GHC.Prim.Int# -> [Lib.ChromNameFormat]
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (a# :: GHC.Prim.Int#)[OneShot] ->
                     let {
                       $j1 :: GHC.Prim.Int# -> [Lib.ChromNameFormat]
                         {- Arity: 1, Strictness: <S,U> -}
                       = \ (b# :: GHC.Prim.Int#)[OneShot] ->
                         let {
                           $j2 :: GHC.Prim.Int# -> [Lib.ChromNameFormat]
                             {- Arity: 1, Strictness: <S,U> -}
                           = \ (y :: GHC.Prim.Int#)[OneShot] ->
                             case GHC.Prim.tagToEnum#
                                    @ GHC.Types.Bool
                                    (GHC.Prim.>=# b# a#) of wild {
                               GHC.Types.False
                               -> GHC.Enum.efdtIntDnFB
                                    @ [Lib.ChromNameFormat]
                                    Lib.$fEnumChromNameFormat_c1
                                    (GHC.Types.[] @ Lib.ChromNameFormat)
                                    a#
                                    b#
                                    y
                               GHC.Types.True
                               -> GHC.Enum.efdtIntUpFB
                                    @ [Lib.ChromNameFormat]
                                    Lib.$fEnumChromNameFormat_c1
                                    (GHC.Types.[] @ Lib.ChromNameFormat)
                                    a#
                                    b#
                                    y }
                         } in
                         case GHC.Prim.tagToEnum#
                                @ GHC.Types.Bool
                                (GHC.Prim.># a# b#) of wild {
                           GHC.Types.False -> $j2 1# GHC.Types.True -> $j2 0# }
                     } in
                     case b of wild { Lib.GRC -> $j1 0# Lib.UCSC -> $j1 1# }
                 } in
                 case a of wild { Lib.GRC -> $j 0# Lib.UCSC -> $j 1# }) -}
729a34be9738ea3507254144802cc56b
  $fEnumChromNameFormat_$cenumFromThenTo ::
    Lib.ChromNameFormat
    -> Lib.ChromNameFormat
    -> Lib.ChromNameFormat
    -> [Lib.ChromNameFormat]
  {- Arity: 3, Strictness: <S,1*U><S,1*U><S,1*U>,
     Unfolding: (\ (x1 :: Lib.ChromNameFormat)
                   (x2 :: Lib.ChromNameFormat)
                   (y :: Lib.ChromNameFormat) ->
                 let {
                   $j :: GHC.Prim.Int# -> [Lib.ChromNameFormat]
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (x4 :: GHC.Prim.Int#)[OneShot] ->
                     let {
                       $j1 :: GHC.Prim.Int# -> [Lib.ChromNameFormat]
                         {- Arity: 1, Strictness: <S,U> -}
                       = \ (x5 :: GHC.Prim.Int#)[OneShot] ->
                         case y of wild {
                           Lib.GRC
                           -> case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# x5 x4) of wild1 {
                                GHC.Types.False
                                -> GHC.Enum.efdtIntDnFB
                                     @ [Lib.ChromNameFormat]
                                     Lib.$fEnumChromNameFormat_c
                                     (GHC.Types.[] @ Lib.ChromNameFormat)
                                     x4
                                     x5
                                     0#
                                GHC.Types.True
                                -> GHC.Enum.efdtIntUpFB
                                     @ [Lib.ChromNameFormat]
                                     Lib.$fEnumChromNameFormat_c
                                     (GHC.Types.[] @ Lib.ChromNameFormat)
                                     x4
                                     x5
                                     0# }
                           Lib.UCSC
                           -> case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# x5 x4) of wild1 {
                                GHC.Types.False
                                -> GHC.Enum.efdtIntDnFB
                                     @ [Lib.ChromNameFormat]
                                     Lib.$fEnumChromNameFormat_c
                                     (GHC.Types.[] @ Lib.ChromNameFormat)
                                     x4
                                     x5
                                     1#
                                GHC.Types.True
                                -> GHC.Enum.efdtIntUpFB
                                     @ [Lib.ChromNameFormat]
                                     Lib.$fEnumChromNameFormat_c
                                     (GHC.Types.[] @ Lib.ChromNameFormat)
                                     x4
                                     x5
                                     1# } }
                     } in
                     case x2 of wild { Lib.GRC -> $j1 0# Lib.UCSC -> $j1 1# }
                 } in
                 case x1 of wild { Lib.GRC -> $j 0# Lib.UCSC -> $j 1# }) -}
729a34be9738ea3507254144802cc56b
  $fEnumChromNameFormat_$cenumFromTo ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat -> [Lib.ChromNameFormat]
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (x :: Lib.ChromNameFormat)
                   (y :: Lib.ChromNameFormat) ->
                 let {
                   $j :: GHC.Prim.Int# -> [Lib.ChromNameFormat]
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (x1 :: GHC.Prim.Int#)[OneShot] ->
                     case y of wild {
                       Lib.GRC
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 0#) of wild1 {
                            GHC.Types.False -> Lib.$fEnumChromNameFormat_go1 x1
                            GHC.Types.True -> GHC.Types.[] @ Lib.ChromNameFormat }
                       Lib.UCSC
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 1#) of wild1 {
                            GHC.Types.False -> Lib.$fEnumChromNameFormat_go x1
                            GHC.Types.True -> GHC.Types.[] @ Lib.ChromNameFormat } }
                 } in
                 case x of wild { Lib.GRC -> $j 0# Lib.UCSC -> $j 1# }) -}
729a34be9738ea3507254144802cc56b
  $fEnumChromNameFormat_$cfromEnum ::
    Lib.ChromNameFormat -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: Lib.ChromNameFormat) ->
                 case a of wild {
                   Lib.GRC -> GHC.Types.I# 0# Lib.UCSC -> GHC.Types.I# 1# }) -}
729a34be9738ea3507254144802cc56b
  $fEnumChromNameFormat_$cpred ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: Lib.ChromNameFormat) ->
                 case a of wild {
                   Lib.GRC -> Lib.$fEnumChromNameFormat4 Lib.UCSC -> Lib.GRC }) -}
729a34be9738ea3507254144802cc56b
  $fEnumChromNameFormat_$csucc ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: Lib.ChromNameFormat) ->
                 case a of wild {
                   Lib.GRC -> Lib.UCSC Lib.UCSC -> Lib.$fEnumChromNameFormat5 }) -}
729a34be9738ea3507254144802cc56b
  $fEnumChromNameFormat_$ctoEnum ::
    GHC.Types.Int -> Lib.ChromNameFormat
  {- Arity: 1, Strictness: <S(S),1*U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Types.Int) ->
                 case w of ww { GHC.Types.I# ww1 -> Lib.$w$ctoEnum ww1 }) -}
729a34be9738ea3507254144802cc56b
  $fEnumChromNameFormat_c ::
    GHC.Types.Int -> [Lib.ChromNameFormat] -> [Lib.ChromNameFormat]
  {- Arity: 2, Strictness: <L,1*U(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: GHC.Types.Int) (ys :: [Lib.ChromNameFormat]) ->
                 GHC.Types.:
                   @ Lib.ChromNameFormat
                   (Lib.$fEnumChromNameFormat_$ctoEnum x)
                   ys) -}
729a34be9738ea3507254144802cc56b
  $fEnumChromNameFormat_c1 ::
    GHC.Types.Int -> [Lib.ChromNameFormat] -> [Lib.ChromNameFormat]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: GHC.Types.Int) (ys :: [Lib.ChromNameFormat]) ->
                 GHC.Types.:
                   @ Lib.ChromNameFormat
                   (case x of wild { GHC.Types.I# a ->
                    GHC.Prim.tagToEnum# @ Lib.ChromNameFormat a })
                   ys) -}
729a34be9738ea3507254144802cc56b
  $fEnumChromNameFormat_go :: GHC.Prim.Int# -> [Lib.ChromNameFormat]
  {- Arity: 1, Strictness: <L,U> -}
729a34be9738ea3507254144802cc56b
  $fEnumChromNameFormat_go1 :: GHC.Prim.Int# -> [Lib.ChromNameFormat]
  {- Arity: 1, Strictness: <L,U> -}
729a34be9738ea3507254144802cc56b
  $fEnumChromNameFormat_go2 :: GHC.Prim.Int# -> [Lib.ChromNameFormat]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
729a34be9738ea3507254144802cc56b
  $fEnumChromNameFormat_go3 :: GHC.Prim.Int# -> [Lib.ChromNameFormat]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
3b7e185ad71459af8d347e25da054651
  $fEnumUChr :: GHC.Enum.Enum Lib.UChr
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lib.UChr
                  Lib.$fEnumUChr_$csucc
                  Lib.$fEnumUChr_$cpred
                  Lib.$fEnumUChr_$ctoEnum
                  Lib.$fEnumUChr_$cfromEnum
                  Lib.$fEnumUChr_$cenumFrom
                  Lib.$fEnumUChr_$cenumFromThen
                  Lib.$fEnumUChr_$cenumFromTo
                  Lib.$fEnumUChr_$cenumFromThenTo -}
3b7e185ad71459af8d347e25da054651
  $fEnumUChr1 :: GHC.Prim.Int# -> Lib.UChr
  {- Arity: 1, Strictness: <L,U>x -}
3b7e185ad71459af8d347e25da054651
  $fEnumUChr2 :: Lib.UChr
  {- Strictness: x -}
3b7e185ad71459af8d347e25da054651
  $fEnumUChr3 :: Lib.UChr
  {- Strictness: x -}
3b7e185ad71459af8d347e25da054651
  $fEnumUChr_$cenumFrom :: Lib.UChr -> [Lib.UChr]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: (\ (a :: Lib.UChr) ->
                 let {
                   x0 :: GHC.Prim.Int# = GHC.Prim.dataToTag# @ Lib.UChr a
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.># x0 110#) of wild {
                   GHC.Types.False -> Lib.$fEnumUChr_go x0
                   GHC.Types.True -> GHC.Types.[] @ Lib.UChr }) -}
3b7e185ad71459af8d347e25da054651
  $fEnumUChr_$cenumFromThen :: Lib.UChr -> Lib.UChr -> [Lib.UChr]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Lib.UChr) (b :: Lib.UChr) ->
                 let {
                   a# :: GHC.Prim.Int# = GHC.Prim.dataToTag# @ Lib.UChr a
                 } in
                 let {
                   b# :: GHC.Prim.Int# = GHC.Prim.dataToTag# @ Lib.UChr b
                 } in
                 let {
                   $j :: GHC.Prim.Int# -> [Lib.UChr] {- Arity: 1, Strictness: <S,U> -}
                   = \ (y :: GHC.Prim.Int#)[OneShot] ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.>=# b# a#) of wild {
                       GHC.Types.False
                       -> GHC.Enum.efdtIntDnFB
                            @ [Lib.UChr]
                            Lib.$fEnumUChr_c1
                            (GHC.Types.[] @ Lib.UChr)
                            a#
                            b#
                            y
                       GHC.Types.True
                       -> GHC.Enum.efdtIntUpFB
                            @ [Lib.UChr]
                            Lib.$fEnumUChr_c1
                            (GHC.Types.[] @ Lib.UChr)
                            a#
                            b#
                            y }
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.># a# b#) of wild {
                   GHC.Types.False -> $j 110# GHC.Types.True -> $j 0# }) -}
3b7e185ad71459af8d347e25da054651
  $fEnumUChr_$cenumFromThenTo ::
    Lib.UChr -> Lib.UChr -> Lib.UChr -> [Lib.UChr]
  {- Arity: 3, Strictness: <S,1*U><S,1*U><S,1*U>,
     Unfolding: (\ (x1 :: Lib.UChr) (x2 :: Lib.UChr) (y :: Lib.UChr) ->
                 let {
                   x4 :: GHC.Prim.Int# = GHC.Prim.dataToTag# @ Lib.UChr x1
                 } in
                 let {
                   x5 :: GHC.Prim.Int# = GHC.Prim.dataToTag# @ Lib.UChr x2
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# x5 x4) of wild {
                   GHC.Types.False
                   -> GHC.Enum.efdtIntDnFB
                        @ [Lib.UChr]
                        Lib.$fEnumUChr_c
                        (GHC.Types.[] @ Lib.UChr)
                        x4
                        x5
                        (GHC.Prim.dataToTag# @ Lib.UChr y)
                   GHC.Types.True
                   -> GHC.Enum.efdtIntUpFB
                        @ [Lib.UChr]
                        Lib.$fEnumUChr_c
                        (GHC.Types.[] @ Lib.UChr)
                        x4
                        x5
                        (GHC.Prim.dataToTag# @ Lib.UChr y) }) -}
3b7e185ad71459af8d347e25da054651
  $fEnumUChr_$cenumFromTo :: Lib.UChr -> Lib.UChr -> [Lib.UChr]
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (x :: Lib.UChr) (y :: Lib.UChr) ->
                 let {
                   x0 :: GHC.Prim.Int# = GHC.Prim.dataToTag# @ Lib.UChr x
                 } in
                 let {
                   y1 :: GHC.Prim.Int# = GHC.Prim.dataToTag# @ Lib.UChr y
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.># x0 y1) of wild {
                   GHC.Types.False
                   -> letrec {
                        go11 :: GHC.Prim.Int# -> [Lib.UChr]
                          {- Arity: 1, Strictness: <L,U> -}
                        = \ (x1 :: GHC.Prim.Int#) ->
                          GHC.Types.:
                            @ Lib.UChr
                            (case GHC.Prim.tagToEnum#
                                    @ GHC.Types.Bool
                                    (GHC.Prim.>=# x1 0#) of wild1 {
                               GHC.Types.False -> Lib.$fEnumUChr1 x1
                               GHC.Types.True
                               -> case GHC.Prim.tagToEnum#
                                         @ GHC.Types.Bool
                                         (GHC.Prim.<=# x1 110#) of wild2 {
                                    GHC.Types.False -> Lib.$fEnumUChr1 x1
                                    GHC.Types.True -> GHC.Prim.tagToEnum# @ Lib.UChr x1 } })
                            (case GHC.Prim.tagToEnum#
                                    @ GHC.Types.Bool
                                    (GHC.Prim.==# x1 y1) of wild1 {
                               GHC.Types.False -> go11 (GHC.Prim.+# x1 1#)
                               GHC.Types.True -> GHC.Types.[] @ Lib.UChr })
                      } in
                      go11 x0
                   GHC.Types.True -> GHC.Types.[] @ Lib.UChr }) -}
3b7e185ad71459af8d347e25da054651
  $fEnumUChr_$cfromEnum :: Lib.UChr -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: Lib.UChr) ->
                 case a of x1 { DEFAULT ->
                 GHC.Types.I# (GHC.Prim.dataToTag# @ Lib.UChr x1) }) -}
3b7e185ad71459af8d347e25da054651
  $fEnumUChr_$cpred :: Lib.UChr -> Lib.UChr
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: Lib.UChr) ->
                 case a of x1 { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x1 of wild {
                   DEFAULT -> GHC.Prim.tagToEnum# @ Lib.UChr (GHC.Prim.+# wild -1#)
                   0# -> Lib.$fEnumUChr2 } }) -}
3b7e185ad71459af8d347e25da054651
  $fEnumUChr_$csucc :: Lib.UChr -> Lib.UChr
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: Lib.UChr) ->
                 case a of x1 { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x1 of wild {
                   DEFAULT -> GHC.Prim.tagToEnum# @ Lib.UChr (GHC.Prim.+# wild 1#)
                   110# -> Lib.$fEnumUChr3 } }) -}
3b7e185ad71459af8d347e25da054651
  $fEnumUChr_$ctoEnum :: GHC.Types.Int -> Lib.UChr
  {- Arity: 1, Strictness: <S(S),1*U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Types.Int) ->
                 case w of ww { GHC.Types.I# ww1 -> Lib.$w$ctoEnum1 ww1 }) -}
3b7e185ad71459af8d347e25da054651
  $fEnumUChr_c :: GHC.Types.Int -> [Lib.UChr] -> [Lib.UChr]
  {- Arity: 2, Strictness: <L,1*U(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: GHC.Types.Int) (ys :: [Lib.UChr]) ->
                 GHC.Types.: @ Lib.UChr (Lib.$fEnumUChr_$ctoEnum x) ys) -}
3b7e185ad71459af8d347e25da054651
  $fEnumUChr_c1 :: GHC.Types.Int -> [Lib.UChr] -> [Lib.UChr]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: GHC.Types.Int) (ys :: [Lib.UChr]) ->
                 GHC.Types.:
                   @ Lib.UChr
                   (case x of wild { GHC.Types.I# a ->
                    GHC.Prim.tagToEnum# @ Lib.UChr a })
                   ys) -}
3b7e185ad71459af8d347e25da054651
  $fEnumUChr_go :: GHC.Prim.Int# -> [Lib.UChr]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
f671dfe83494b300f9d572c68e554e5e
  $fEqAlignedRead :: GHC.Classes.Eq Lib.AlignedRead
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lib.AlignedRead
                  Lib.$fEqAlignedRead_$c==
                  Lib.$fEqAlignedRead_$c/= -}
f671dfe83494b300f9d572c68e554e5e
  $fEqAlignedRead_$c/= ::
    Lib.AlignedRead -> Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LLLS)LLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(1*U(U,U,U,U),1*U(U),1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(1*U,1*U,1*U,1*U(U,U,U,U)))><S(S(LLLS)LLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(1*U(U,U,U,U),1*U(U),1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(1*U,1*U,1*U,1*U(U,U,U,U)))>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.AlignedRead) (b :: Lib.AlignedRead) ->
                 case Lib.$fEqAlignedRead_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
f671dfe83494b300f9d572c68e554e5e
  $fEqAlignedRead_$c== ::
    Lib.AlignedRead -> Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LLLS)LLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(1*U(U,U,U,U),1*U(U),1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(1*U,1*U,1*U,1*U(U,U,U,U)))><S(S(LLLS)LLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(1*U(U,U,U,U),1*U(U),1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(1*U,1*U,1*U,1*U(U,U,U,U)))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.AlignedRead) (w1 :: Lib.AlignedRead) ->
                 case w of ww { Lib.AlignedRead ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ->
                 case ww1 of ww31 { Data.ByteString.Internal.PS ww32 ww33 ww34 ww35 ->
                 case w1 of ww36 { Lib.AlignedRead ww37 ww38 ww39 ww40 ww41 ww42 ww43 ww44 ww45 ww46 ww47 ww48 ww49 ww50 ww51 ww52 ww53 ww54 ww55 ww56 ww57 ww58 ww59 ww60 ww61 ww62 ww63 ww64 ww65 ww66 ->
                 case ww37 of ww67 { Data.ByteString.Internal.PS ww68 ww69 ww70 ww71 ->
                 Lib.$w$c==
                   ww32
                   ww33
                   ww34
                   ww35
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   ww20
                   ww21
                   ww22
                   ww23
                   ww24
                   ww25
                   ww26
                   ww27
                   ww28
                   ww29
                   ww30
                   ww68
                   ww69
                   ww70
                   ww71
                   ww38
                   ww39
                   ww40
                   ww41
                   ww42
                   ww43
                   ww44
                   ww45
                   ww46
                   ww47
                   ww48
                   ww49
                   ww50
                   ww51
                   ww52
                   ww53
                   ww54
                   ww55
                   ww56
                   ww57
                   ww58
                   ww59
                   ww60
                   ww61
                   ww62
                   ww63
                   ww64
                   ww65
                   ww66 } } } }) -}
fccf42ae6afd19ae2c265e24a08011ff
  $fEqBedRecord :: GHC.Classes.Eq Lib.BedRecord
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lib.BedRecord Lib.$fEqBedRecord_$c== Lib.$fEqBedRecord_$c/= -}
fccf42ae6afd19ae2c265e24a08011ff
  $fEqBedRecord_$c/= ::
    Lib.BedRecord -> Lib.BedRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(1*U,1*U,1*U,1*U(U,U,U,U))><S(SLLL),1*U(1*U,1*U,1*U,1*U(U,U,U,U))>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.BedRecord) (b :: Lib.BedRecord) ->
                 case Lib.$fEqBedRecord_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
fccf42ae6afd19ae2c265e24a08011ff
  $fEqBedRecord_$c== ::
    Lib.BedRecord -> Lib.BedRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(1*U,1*U,1*U,1*U(U,U,U,U))><S(SLLL),1*U(1*U,1*U,1*U,1*U(U,U,U,U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.BedRecord) (w1 :: Lib.BedRecord) ->
                 case w of ww { Lib.BedRecord ww1 ww2 ww3 ww4 ->
                 case w1 of ww5 { Lib.BedRecord ww6 ww7 ww8 ww9 ->
                 Lib.$w$c==1 ww1 ww2 ww3 ww4 ww6 ww7 ww8 ww9 } }) -}
729a34be9738ea3507254144802cc56b
  $fEqChromNameFormat :: GHC.Classes.Eq Lib.ChromNameFormat
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lib.ChromNameFormat
                  Lib.$fEqChromNameFormat_$c==
                  Lib.$fEqChromNameFormat_$c/= -}
729a34be9738ea3507254144802cc56b
  $fEqChromNameFormat_$c/= ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.ChromNameFormat) (b :: Lib.ChromNameFormat) ->
                 case a of wild {
                   Lib.GRC
                   -> case b of wild1 {
                        Lib.GRC -> GHC.Types.False Lib.UCSC -> GHC.Types.True }
                   Lib.UCSC
                   -> case b of wild1 {
                        Lib.GRC -> GHC.Types.True Lib.UCSC -> GHC.Types.False } }) -}
729a34be9738ea3507254144802cc56b
  $fEqChromNameFormat_$c== ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds6 :: Lib.ChromNameFormat) (ds7 :: Lib.ChromNameFormat) ->
                 case ds6 of wild {
                   Lib.GRC
                   -> case ds7 of wild1 {
                        Lib.GRC -> GHC.Types.True Lib.UCSC -> GHC.Types.False }
                   Lib.UCSC
                   -> case ds7 of wild1 {
                        Lib.GRC -> GHC.Types.False Lib.UCSC -> GHC.Types.True } }) -}
d774c24178fe50c0a3a4a367dd390465
  $fEqMasterRecord :: GHC.Classes.Eq Lib.MasterRecord
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lib.MasterRecord
                  Lib.$fEqMasterRecord_$c==
                  Lib.$fEqMasterRecord_$c/= -}
d774c24178fe50c0a3a4a367dd390465
  $fEqMasterRecord_$c/= ::
    Lib.MasterRecord -> Lib.MasterRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(1*U,1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U))><S(SLLLLLLLLLLL),1*U(1*U,1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U))>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.MasterRecord) (b :: Lib.MasterRecord) ->
                 case Lib.$fEqMasterRecord_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
d774c24178fe50c0a3a4a367dd390465
  $fEqMasterRecord_$c== ::
    Lib.MasterRecord -> Lib.MasterRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(1*U,1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U))><S(SLLLLLLLLLLL),1*U(1*U,1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.MasterRecord) (w1 :: Lib.MasterRecord) ->
                 case w of ww { Lib.MasterRecord ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ->
                 case w1 of ww13 { Lib.MasterRecord ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ->
                 Lib.$w$c==2
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   ww20
                   ww21
                   ww22
                   ww23
                   ww24
                   ww25 } }) -}
b40c42e0053503f3e12b12c8853d8620
  $fEqMidFamily :: GHC.Classes.Eq Lib.MidFamily
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lib.MidFamily Lib.$fEqMidFamily_$c== Lib.$fEqMidFamily_$c/= -}
b40c42e0053503f3e12b12c8853d8620
  $fEqMidFamily_$c/= ::
    Lib.MidFamily -> Lib.MidFamily -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLL),1*U(1*U,1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U(1*U,1*U,1*U,1*U(U,U,U,U)))><S(SLLLLLLLLL),1*U(1*U,1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U(1*U,1*U,1*U,1*U(U,U,U,U)))>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.MidFamily) (b :: Lib.MidFamily) ->
                 case Lib.$fEqMidFamily_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
b40c42e0053503f3e12b12c8853d8620
  $fEqMidFamily_$c== ::
    Lib.MidFamily -> Lib.MidFamily -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLL),1*U(1*U,1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U(1*U,1*U,1*U,1*U(U,U,U,U)))><S(SLLLLLLLLL),1*U(1*U,1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U(1*U,1*U,1*U,1*U(U,U,U,U)))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.MidFamily) (w1 :: Lib.MidFamily) ->
                 case w of ww { Lib.MidFamily ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ->
                 case w1 of ww11 { Lib.MidFamily ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ->
                 Lib.$w$c==3
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   ww20
                   ww21 } }) -}
4d89c2d39576093eca054c05b0242d08
  $fEqSAMFlag :: GHC.Classes.Eq Lib.SAMFlag
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lib.SAMFlag Lib.$fEqSAMFlag_$c== Lib.$fEqSAMFlag_$c/= -}
4d89c2d39576093eca054c05b0242d08
  $fEqSAMFlag_$c/= :: Lib.SAMFlag -> Lib.SAMFlag -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U))><S(SLLLLLLLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U))>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.SAMFlag) (b :: Lib.SAMFlag) ->
                 case Lib.$fEqSAMFlag_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
4d89c2d39576093eca054c05b0242d08
  $fEqSAMFlag_$c== :: Lib.SAMFlag -> Lib.SAMFlag -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U))><S(SLLLLLLLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.SAMFlag) (w1 :: Lib.SAMFlag) ->
                 case w of ww { Lib.SAMFlag ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ->
                 case w1 of ww13 { Lib.SAMFlag ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ->
                 Lib.$w$c==4
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   ww20
                   ww21
                   ww22
                   ww23
                   ww24
                   ww25 } }) -}
3b7e185ad71459af8d347e25da054651
  $fEqUChr :: GHC.Classes.Eq Lib.UChr
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:. @ Lib.UChr Lib.$fEqUChr_$c== Lib.$fEqUChr_$c/= -}
3b7e185ad71459af8d347e25da054651
  $fEqUChr_$c/= :: Lib.UChr -> Lib.UChr -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.UChr) (b :: Lib.UChr) ->
                 case a of x1 { DEFAULT ->
                 case b of x2 { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==#
                           (GHC.Prim.dataToTag# @ Lib.UChr x1)
                           (GHC.Prim.dataToTag# @ Lib.UChr x2)) of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False } } }) -}
3b7e185ad71459af8d347e25da054651
  $fEqUChr_$c== :: Lib.UChr -> Lib.UChr -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.UChr) (b :: Lib.UChr) ->
                 case a of x1 { DEFAULT ->
                 case b of x2 { DEFAULT ->
                 GHC.Prim.tagToEnum#
                   @ GHC.Types.Bool
                   (GHC.Prim.==#
                      (GHC.Prim.dataToTag# @ Lib.UChr x1)
                      (GHC.Prim.dataToTag# @ Lib.UChr x2)) } }) -}
f671dfe83494b300f9d572c68e554e5e
  $fGenericAlignedRead :: GHC.Generics.Generic Lib.AlignedRead
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lib.AlignedRead
                  Lib.$fGenericAlignedRead_$cfrom
                  Lib.$fGenericAlignedRead_$cto -}
f671dfe83494b300f9d572c68e554e5e
  $fGenericAlignedRead1 ::
    Lib.AlignedRead
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "AlignedRead" 'GHC.Generics.PrefixI 'GHC.Types.True)
         ((((GHC.Generics.M1
               GHC.Generics.S
               ('GHC.Generics.MetaSel
                  ('GHC.Base.Just "qname")
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.NoSourceStrictness
                  'GHC.Generics.DecidedLazy)
               (GHC.Generics.K1
                  GHC.Generics.R Data.ByteString.Internal.ByteString)
             GHC.Generics.:*: (GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Base.Just "flag")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                               GHC.Generics.:*: GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "rname")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1 GHC.Generics.R Lib.UChr)))
            GHC.Generics.:*: ((GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Base.Just "pos")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                               GHC.Generics.:*: GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "endpos")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R GHC.Integer.Type.Integer))
                              GHC.Generics.:*: (GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "mapqual")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R GHC.Integer.Type.Integer)
                                                GHC.Generics.:*: GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Base.Just "cigar")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      Data.ByteString.Internal.ByteString))))
           GHC.Generics.:*: (((GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Base.Just "trimdcigar")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1
                                    GHC.Generics.R Data.ByteString.Internal.ByteString)
                               GHC.Generics.:*: GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "cigmap")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1 GHC.Generics.R Lib.CigarMap))
                              GHC.Generics.:*: (GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "trimdcigmap")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1 GHC.Generics.R Lib.CigarMap)
                                                GHC.Generics.:*: GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Base.Just "rnext")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      Data.ByteString.Internal.ByteString)))
                             GHC.Generics.:*: ((GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "pnext")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R GHC.Integer.Type.Integer)
                                                GHC.Generics.:*: GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Base.Just "tlen")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      GHC.Integer.Type.Integer))
                                               GHC.Generics.:*: (GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Base.Just "refseq")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      Data.ByteString.Internal.ByteString)
                                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                                    GHC.Generics.S
                                                                                    ('GHC.Generics.MetaSel
                                                                                       ('GHC.Base.Just
                                                                                          "basequal")
                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                       'GHC.Generics.DecidedLazy)
                                                                                    (GHC.Generics.K1
                                                                                       GHC.Generics.R
                                                                                       Data.ByteString.Internal.ByteString)))))
          GHC.Generics.:*: (((GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "optfields")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1
                                   GHC.Generics.R Data.ByteString.Internal.ByteString)
                              GHC.Generics.:*: (GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "strand")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R
                                                     Data.ByteString.Internal.ByteString)
                                                GHC.Generics.:*: GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Base.Just "paired")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      GHC.Types.Bool)))
                             GHC.Generics.:*: ((GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "mapped")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool)
                                                GHC.Generics.:*: GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Base.Just "fint")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      [Lib.BedRecord]))
                                               GHC.Generics.:*: (GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Base.Just "rint")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      [Lib.BedRecord])
                                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                                    GHC.Generics.S
                                                                                    ('GHC.Generics.MetaSel
                                                                                       ('GHC.Base.Just
                                                                                          "pintflag")
                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                       'GHC.Generics.DecidedLazy)
                                                                                    (GHC.Generics.K1
                                                                                       GHC.Generics.R
                                                                                       GHC.Types.Bool))))
                            GHC.Generics.:*: (((GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "trimdflag")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool)
                                                GHC.Generics.:*: GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Base.Just "trimdpos")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      GHC.Integer.Type.Integer))
                                               GHC.Generics.:*: (GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Base.Just "trimdendpos")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      GHC.Integer.Type.Integer)
                                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                                    GHC.Generics.S
                                                                                    ('GHC.Generics.MetaSel
                                                                                       ('GHC.Base.Just
                                                                                          "headerstrings")
                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                       'GHC.Generics.DecidedLazy)
                                                                                    (GHC.Generics.K1
                                                                                       GHC.Generics.R
                                                                                       Lib.Header)))
                                              GHC.Generics.:*: ((GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Base.Just "isheader")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R GHC.Types.Bool)
                                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                                    GHC.Generics.S
                                                                                    ('GHC.Generics.MetaSel
                                                                                       ('GHC.Base.Just
                                                                                          "mid")
                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                       'GHC.Generics.DecidedLazy)
                                                                                    (GHC.Generics.K1
                                                                                       GHC.Generics.R
                                                                                       Data.ByteString.Internal.ByteString))
                                                                GHC.Generics.:*: (GHC.Generics.M1
                                                                                    GHC.Generics.S
                                                                                    ('GHC.Generics.MetaSel
                                                                                       ('GHC.Base.Just
                                                                                          "xmid")
                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                       'GHC.Generics.DecidedLazy)
                                                                                    (GHC.Generics.K1
                                                                                       GHC.Generics.R
                                                                                       Data.ByteString.Internal.ByteString)
                                                                                  GHC.Generics.:*: GHC.Generics.M1
                                                                                                     GHC.Generics.S
                                                                                                     ('GHC.Generics.MetaSel
                                                                                                        ('GHC.Base.Just
                                                                                                           "tbed")
                                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                                        'GHC.Generics.DecidedLazy)
                                                                                                     (GHC.Generics.K1
                                                                                                        GHC.Generics.R
                                                                                                        Lib.BedRecord))))))
         x
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ @ x (w :: Lib.AlignedRead) ->
                 case w of ww { Lib.AlignedRead ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ->
                 (GHC.Generics.:*:
                    @ (((GHC.Generics.M1
                           GHC.Generics.S
                           ('GHC.Generics.MetaSel
                              ('GHC.Base.Just "qname")
                              'GHC.Generics.NoSourceUnpackedness
                              'GHC.Generics.NoSourceStrictness
                              'GHC.Generics.DecidedLazy)
                           (GHC.Generics.K1
                              GHC.Generics.R Data.ByteString.Internal.ByteString)
                         GHC.Generics.:*: (GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "flag")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                           GHC.Generics.:*: GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "rname")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R Lib.UChr)))
                        GHC.Generics.:*: ((GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "pos")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R GHC.Integer.Type.Integer)
                                           GHC.Generics.:*: GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "endpos")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 GHC.Integer.Type.Integer))
                                          GHC.Generics.:*: (GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "mapqual")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 GHC.Integer.Type.Integer)
                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "cigar")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  Data.ByteString.Internal.ByteString))))
                       GHC.Generics.:*: (((GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "trimdcigar")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R Data.ByteString.Internal.ByteString)
                                           GHC.Generics.:*: GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "cigmap")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R Lib.CigarMap))
                                          GHC.Generics.:*: (GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "trimdcigmap")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R Lib.CigarMap)
                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "rnext")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  Data.ByteString.Internal.ByteString)))
                                         GHC.Generics.:*: ((GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "pnext")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 GHC.Integer.Type.Integer)
                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "tlen")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  GHC.Integer.Type.Integer))
                                                           GHC.Generics.:*: (GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "refseq")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  Data.ByteString.Internal.ByteString)
                                                                             GHC.Generics.:*: GHC.Generics.M1
                                                                                                GHC.Generics.S
                                                                                                ('GHC.Generics.MetaSel
                                                                                                   ('GHC.Base.Just
                                                                                                      "basequal")
                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                (GHC.Generics.K1
                                                                                                   GHC.Generics.R
                                                                                                   Data.ByteString.Internal.ByteString)))))
                    @ (((GHC.Generics.M1
                           GHC.Generics.S
                           ('GHC.Generics.MetaSel
                              ('GHC.Base.Just "optfields")
                              'GHC.Generics.NoSourceUnpackedness
                              'GHC.Generics.NoSourceStrictness
                              'GHC.Generics.DecidedLazy)
                           (GHC.Generics.K1
                              GHC.Generics.R Data.ByteString.Internal.ByteString)
                         GHC.Generics.:*: (GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "strand")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R Data.ByteString.Internal.ByteString)
                                           GHC.Generics.:*: GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "paired")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R GHC.Types.Bool)))
                        GHC.Generics.:*: ((GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "mapped")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool)
                                           GHC.Generics.:*: GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "fint")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R [Lib.BedRecord]))
                                          GHC.Generics.:*: (GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "rint")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R [Lib.BedRecord])
                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "pintflag")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  GHC.Types.Bool))))
                       GHC.Generics.:*: (((GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "trimdflag")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool)
                                           GHC.Generics.:*: GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "trimdpos")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 GHC.Integer.Type.Integer))
                                          GHC.Generics.:*: (GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "trimdendpos")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 GHC.Integer.Type.Integer)
                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "headerstrings")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  Lib.Header)))
                                         GHC.Generics.:*: ((GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "isheader")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R GHC.Types.Bool)
                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "mid")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  Data.ByteString.Internal.ByteString))
                                                           GHC.Generics.:*: (GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "xmid")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  Data.ByteString.Internal.ByteString)
                                                                             GHC.Generics.:*: GHC.Generics.M1
                                                                                                GHC.Generics.S
                                                                                                ('GHC.Generics.MetaSel
                                                                                                   ('GHC.Base.Just
                                                                                                      "tbed")
                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                (GHC.Generics.K1
                                                                                                   GHC.Generics.R
                                                                                                   Lib.BedRecord)))))
                    @ x
                    (GHC.Generics.:*:
                       @ ((GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "qname")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString)
                           GHC.Generics.:*: (GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "flag")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                             GHC.Generics.:*: GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "rname")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R Lib.UChr)))
                          GHC.Generics.:*: ((GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "pos")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R GHC.Integer.Type.Integer)
                                             GHC.Generics.:*: GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "endpos")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R
                                                                   GHC.Integer.Type.Integer))
                                            GHC.Generics.:*: (GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "mapqual")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R
                                                                   GHC.Integer.Type.Integer)
                                                              GHC.Generics.:*: GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "cigar")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    Data.ByteString.Internal.ByteString))))
                       @ (((GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "trimdcigar")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1
                                 GHC.Generics.R Data.ByteString.Internal.ByteString)
                            GHC.Generics.:*: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "cigmap")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1 GHC.Generics.R Lib.CigarMap))
                           GHC.Generics.:*: (GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "trimdcigmap")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1 GHC.Generics.R Lib.CigarMap)
                                             GHC.Generics.:*: GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "rnext")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R
                                                                   Data.ByteString.Internal.ByteString)))
                          GHC.Generics.:*: ((GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "pnext")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R GHC.Integer.Type.Integer)
                                             GHC.Generics.:*: GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "tlen")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R
                                                                   GHC.Integer.Type.Integer))
                                            GHC.Generics.:*: (GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "refseq")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R
                                                                   Data.ByteString.Internal.ByteString)
                                                              GHC.Generics.:*: GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "basequal")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    Data.ByteString.Internal.ByteString))))
                       @ x
                       (GHC.Generics.:*:
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "qname")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1
                                  GHC.Generics.R Data.ByteString.Internal.ByteString)
                             GHC.Generics.:*: (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "flag")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "rname")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R Lib.UChr)))
                          @ ((GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "pos")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "endpos")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R GHC.Integer.Type.Integer))
                             GHC.Generics.:*: (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "mapqual")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R GHC.Integer.Type.Integer)
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "cigar")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     Data.ByteString.Internal.ByteString)))
                          @ x
                          (GHC.Generics.:*:
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "qname")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1
                                     GHC.Generics.R Data.ByteString.Internal.ByteString))
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "flag")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "rname")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1 GHC.Generics.R Lib.UChr))
                             @ x
                             ww1
                               `cast`
                             (Trans
                                  (Sym (GHC.Generics.N:K1[0]
                                            <GHC.Generics.R>_P
                                            <Data.ByteString.Internal.ByteString>_R
                                            <x>_P))
                                  (Sym (GHC.Generics.N:M1[0]
                                            <GHC.Generics.S>_P
                                            <'GHC.Generics.MetaSel
                                               ('GHC.Base.Just "qname")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy>_P
                                            <GHC.Generics.K1
                                               GHC.Generics.R
                                               Data.ByteString.Internal.ByteString>_R) <x>_N))
                             (GHC.Generics.:*:
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "flag")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "rname")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R Lib.UChr))
                                @ x
                                ww2
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <GHC.Generics.R>_P <GHC.Types.Int>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "flag")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R GHC.Types.Int>_R) <x>_N))
                                ww3
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <GHC.Generics.R>_P <Lib.UChr>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "rname")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R Lib.UChr>_R) <x>_N))))
                          (GHC.Generics.:*:
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "pos")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "endpos")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1
                                                      GHC.Generics.R GHC.Integer.Type.Integer))
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "mapqual")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "cigar")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1
                                                      GHC.Generics.R
                                                      Data.ByteString.Internal.ByteString))
                             @ x
                             (GHC.Generics.:*:
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "pos")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "endpos")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                                @ x
                                ww4
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <GHC.Generics.R>_P
                                               <GHC.Integer.Type.Integer>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "pos")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  GHC.Integer.Type.Integer>_R) <x>_N))
                                ww5
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <GHC.Generics.R>_P
                                               <GHC.Integer.Type.Integer>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "endpos")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  GHC.Integer.Type.Integer>_R) <x>_N)))
                             (GHC.Generics.:*:
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "mapqual")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "cigar")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1
                                        GHC.Generics.R Data.ByteString.Internal.ByteString))
                                @ x
                                ww6
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <GHC.Generics.R>_P
                                               <GHC.Integer.Type.Integer>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "mapqual")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  GHC.Integer.Type.Integer>_R) <x>_N))
                                ww7
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <GHC.Generics.R>_P
                                               <Data.ByteString.Internal.ByteString>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "cigar")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString>_R) <x>_N)))))
                       (GHC.Generics.:*:
                          @ ((GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "trimdcigar")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1
                                   GHC.Generics.R Data.ByteString.Internal.ByteString)
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "cigmap")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R Lib.CigarMap))
                             GHC.Generics.:*: (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "trimdcigmap")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R Lib.CigarMap)
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "rnext")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     Data.ByteString.Internal.ByteString)))
                          @ ((GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "pnext")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "tlen")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R GHC.Integer.Type.Integer))
                             GHC.Generics.:*: (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "refseq")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R
                                                    Data.ByteString.Internal.ByteString)
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "basequal")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     Data.ByteString.Internal.ByteString)))
                          @ x
                          (GHC.Generics.:*:
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "trimdcigar")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1
                                     GHC.Generics.R Data.ByteString.Internal.ByteString)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "cigmap")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1 GHC.Generics.R Lib.CigarMap))
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "trimdcigmap")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1 GHC.Generics.R Lib.CigarMap)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "rnext")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1
                                                      GHC.Generics.R
                                                      Data.ByteString.Internal.ByteString))
                             @ x
                             (GHC.Generics.:*:
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "trimdcigar")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1
                                        GHC.Generics.R Data.ByteString.Internal.ByteString))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "cigmap")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R Lib.CigarMap))
                                @ x
                                ww8
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <GHC.Generics.R>_P
                                               <Data.ByteString.Internal.ByteString>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "trimdcigar")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString>_R) <x>_N))
                                ww9
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <GHC.Generics.R>_P <Lib.CigarMap>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "cigmap")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R Lib.CigarMap>_R) <x>_N)))
                             (GHC.Generics.:*:
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "trimdcigmap")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R Lib.CigarMap))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "rnext")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1
                                        GHC.Generics.R Data.ByteString.Internal.ByteString))
                                @ x
                                ww10
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <GHC.Generics.R>_P <Lib.CigarMap>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "trimdcigmap")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R Lib.CigarMap>_R) <x>_N))
                                ww11
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <GHC.Generics.R>_P
                                               <Data.ByteString.Internal.ByteString>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "rnext")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString>_R) <x>_N))))
                          (GHC.Generics.:*:
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "pnext")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "tlen")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1
                                                      GHC.Generics.R GHC.Integer.Type.Integer))
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "refseq")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1
                                     GHC.Generics.R Data.ByteString.Internal.ByteString)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "basequal")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1
                                                      GHC.Generics.R
                                                      Data.ByteString.Internal.ByteString))
                             @ x
                             (GHC.Generics.:*:
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "pnext")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "tlen")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                                @ x
                                ww12
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <GHC.Generics.R>_P
                                               <GHC.Integer.Type.Integer>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "pnext")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  GHC.Integer.Type.Integer>_R) <x>_N))
                                ww13
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <GHC.Generics.R>_P
                                               <GHC.Integer.Type.Integer>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "tlen")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  GHC.Integer.Type.Integer>_R) <x>_N)))
                             (GHC.Generics.:*:
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "refseq")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1
                                        GHC.Generics.R Data.ByteString.Internal.ByteString))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "basequal")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1
                                        GHC.Generics.R Data.ByteString.Internal.ByteString))
                                @ x
                                ww14
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <GHC.Generics.R>_P
                                               <Data.ByteString.Internal.ByteString>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "refseq")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString>_R) <x>_N))
                                ww15
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <GHC.Generics.R>_P
                                               <Data.ByteString.Internal.ByteString>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "basequal")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString>_R) <x>_N))))))
                    (GHC.Generics.:*:
                       @ ((GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "optfields")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString)
                           GHC.Generics.:*: (GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "strand")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString)
                                             GHC.Generics.:*: GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "paired")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R GHC.Types.Bool)))
                          GHC.Generics.:*: ((GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "mapped")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool)
                                             GHC.Generics.:*: GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "fint")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R [Lib.BedRecord]))
                                            GHC.Generics.:*: (GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "rint")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R [Lib.BedRecord])
                                                              GHC.Generics.:*: GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "pintflag")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    GHC.Types.Bool))))
                       @ (((GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "trimdflag")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool)
                            GHC.Generics.:*: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "trimdpos")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R GHC.Integer.Type.Integer))
                           GHC.Generics.:*: (GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "trimdendpos")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R GHC.Integer.Type.Integer)
                                             GHC.Generics.:*: GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "headerstrings")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R Lib.Header)))
                          GHC.Generics.:*: ((GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "isheader")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool)
                                             GHC.Generics.:*: GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "mid")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R
                                                                   Data.ByteString.Internal.ByteString))
                                            GHC.Generics.:*: (GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "xmid")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R
                                                                   Data.ByteString.Internal.ByteString)
                                                              GHC.Generics.:*: GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "tbed")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    Lib.BedRecord))))
                       @ x
                       (GHC.Generics.:*:
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "optfields")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1
                                  GHC.Generics.R Data.ByteString.Internal.ByteString)
                             GHC.Generics.:*: (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "strand")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R
                                                    Data.ByteString.Internal.ByteString)
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "paired")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     GHC.Types.Bool)))
                          @ ((GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "mapped")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool)
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "fint")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R [Lib.BedRecord]))
                             GHC.Generics.:*: (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "rint")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R [Lib.BedRecord])
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "pintflag")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     GHC.Types.Bool)))
                          @ x
                          (GHC.Generics.:*:
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "optfields")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1
                                     GHC.Generics.R Data.ByteString.Internal.ByteString))
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "strand")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1
                                     GHC.Generics.R Data.ByteString.Internal.ByteString)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "paired")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool))
                             @ x
                             ww16
                               `cast`
                             (Trans
                                  (Sym (GHC.Generics.N:K1[0]
                                            <GHC.Generics.R>_P
                                            <Data.ByteString.Internal.ByteString>_R
                                            <x>_P))
                                  (Sym (GHC.Generics.N:M1[0]
                                            <GHC.Generics.S>_P
                                            <'GHC.Generics.MetaSel
                                               ('GHC.Base.Just "optfields")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy>_P
                                            <GHC.Generics.K1
                                               GHC.Generics.R
                                               Data.ByteString.Internal.ByteString>_R) <x>_N))
                             (GHC.Generics.:*:
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "strand")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1
                                        GHC.Generics.R Data.ByteString.Internal.ByteString))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "paired")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool))
                                @ x
                                ww17
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <GHC.Generics.R>_P
                                               <Data.ByteString.Internal.ByteString>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "strand")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString>_R) <x>_N))
                                ww18
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <GHC.Generics.R>_P <GHC.Types.Bool>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "paired")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R GHC.Types.Bool>_R) <x>_N))))
                          (GHC.Generics.:*:
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "mapped")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "fint")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1 GHC.Generics.R [Lib.BedRecord]))
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "rint")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1 GHC.Generics.R [Lib.BedRecord])
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "pintflag")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool))
                             @ x
                             (GHC.Generics.:*:
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "mapped")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "fint")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R [Lib.BedRecord]))
                                @ x
                                ww19
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <GHC.Generics.R>_P <GHC.Types.Bool>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "mapped")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R GHC.Types.Bool>_R) <x>_N))
                                ww20
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <GHC.Generics.R>_P <[Lib.BedRecord]>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "fint")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R [Lib.BedRecord]>_R) <x>_N)))
                             (GHC.Generics.:*:
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "rint")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R [Lib.BedRecord]))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "pintflag")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool))
                                @ x
                                ww21
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <GHC.Generics.R>_P <[Lib.BedRecord]>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "rint")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R [Lib.BedRecord]>_R) <x>_N))
                                ww22
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <GHC.Generics.R>_P <GHC.Types.Bool>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "pintflag")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R GHC.Types.Bool>_R) <x>_N)))))
                       (GHC.Generics.:*:
                          @ ((GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "trimdflag")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool)
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "trimdpos")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R GHC.Integer.Type.Integer))
                             GHC.Generics.:*: (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "trimdendpos")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R GHC.Integer.Type.Integer)
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just
                                                                        "headerstrings")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R Lib.Header)))
                          @ ((GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "isheader")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool)
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "mid")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R
                                                    Data.ByteString.Internal.ByteString))
                             GHC.Generics.:*: (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "xmid")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R
                                                    Data.ByteString.Internal.ByteString)
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "tbed")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R Lib.BedRecord)))
                          @ x
                          (GHC.Generics.:*:
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "trimdflag")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "trimdpos")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1
                                                      GHC.Generics.R GHC.Integer.Type.Integer))
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "trimdendpos")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "headerstrings")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1 GHC.Generics.R Lib.Header))
                             @ x
                             (GHC.Generics.:*:
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "trimdflag")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "trimdpos")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                                @ x
                                ww23
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <GHC.Generics.R>_P <GHC.Types.Bool>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "trimdflag")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R GHC.Types.Bool>_R) <x>_N))
                                ww24
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <GHC.Generics.R>_P
                                               <GHC.Integer.Type.Integer>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "trimdpos")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  GHC.Integer.Type.Integer>_R) <x>_N)))
                             (GHC.Generics.:*:
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "trimdendpos")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "headerstrings")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R Lib.Header))
                                @ x
                                ww25
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <GHC.Generics.R>_P
                                               <GHC.Integer.Type.Integer>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "trimdendpos")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  GHC.Integer.Type.Integer>_R) <x>_N))
                                ww26
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <GHC.Generics.R>_P <Lib.Header>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "headerstrings")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R Lib.Header>_R) <x>_N))))
                          (GHC.Generics.:*:
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "isheader")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "mid")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1
                                                      GHC.Generics.R
                                                      Data.ByteString.Internal.ByteString))
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "xmid")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1
                                     GHC.Generics.R Data.ByteString.Internal.ByteString)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "tbed")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1 GHC.Generics.R Lib.BedRecord))
                             @ x
                             (GHC.Generics.:*:
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "isheader")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "mid")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1
                                        GHC.Generics.R Data.ByteString.Internal.ByteString))
                                @ x
                                ww27
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <GHC.Generics.R>_P <GHC.Types.Bool>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "isheader")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R GHC.Types.Bool>_R) <x>_N))
                                ww28
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <GHC.Generics.R>_P
                                               <Data.ByteString.Internal.ByteString>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "mid")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString>_R) <x>_N)))
                             (GHC.Generics.:*:
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "xmid")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1
                                        GHC.Generics.R Data.ByteString.Internal.ByteString))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "tbed")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R Lib.BedRecord))
                                @ x
                                ww29
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <GHC.Generics.R>_P
                                               <Data.ByteString.Internal.ByteString>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "xmid")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString>_R) <x>_N))
                                ww30
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <GHC.Generics.R>_P <Lib.BedRecord>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "tbed")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R Lib.BedRecord>_R) <x>_N)))))))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "AlignedRead" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <(((GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Base.Just "qname")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1
                                    GHC.Generics.R Data.ByteString.Internal.ByteString)
                               GHC.Generics.:*: (GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "flag")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       ('GHC.Base.Just "rname")
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R Lib.UChr)))
                              GHC.Generics.:*: ((GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "pos")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1
                                                      GHC.Generics.R GHC.Integer.Type.Integer)
                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       ('GHC.Base.Just "endpos")
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R
                                                                       GHC.Integer.Type.Integer))
                                                GHC.Generics.:*: (GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       ('GHC.Base.Just "mapqual")
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R
                                                                       GHC.Integer.Type.Integer)
                                                                  GHC.Generics.:*: GHC.Generics.M1
                                                                                     GHC.Generics.S
                                                                                     ('GHC.Generics.MetaSel
                                                                                        ('GHC.Base.Just
                                                                                           "cigar")
                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                        'GHC.Generics.DecidedLazy)
                                                                                     (GHC.Generics.K1
                                                                                        GHC.Generics.R
                                                                                        Data.ByteString.Internal.ByteString))))
                             GHC.Generics.:*: (((GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "trimdcigar")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1
                                                      GHC.Generics.R
                                                      Data.ByteString.Internal.ByteString)
                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       ('GHC.Base.Just "cigmap")
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R Lib.CigarMap))
                                                GHC.Generics.:*: (GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       ('GHC.Base.Just
                                                                          "trimdcigmap")
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R Lib.CigarMap)
                                                                  GHC.Generics.:*: GHC.Generics.M1
                                                                                     GHC.Generics.S
                                                                                     ('GHC.Generics.MetaSel
                                                                                        ('GHC.Base.Just
                                                                                           "rnext")
                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                        'GHC.Generics.DecidedLazy)
                                                                                     (GHC.Generics.K1
                                                                                        GHC.Generics.R
                                                                                        Data.ByteString.Internal.ByteString)))
                                               GHC.Generics.:*: ((GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       ('GHC.Base.Just "pnext")
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R
                                                                       GHC.Integer.Type.Integer)
                                                                  GHC.Generics.:*: GHC.Generics.M1
                                                                                     GHC.Generics.S
                                                                                     ('GHC.Generics.MetaSel
                                                                                        ('GHC.Base.Just
                                                                                           "tlen")
                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                        'GHC.Generics.DecidedLazy)
                                                                                     (GHC.Generics.K1
                                                                                        GHC.Generics.R
                                                                                        GHC.Integer.Type.Integer))
                                                                 GHC.Generics.:*: (GHC.Generics.M1
                                                                                     GHC.Generics.S
                                                                                     ('GHC.Generics.MetaSel
                                                                                        ('GHC.Base.Just
                                                                                           "refseq")
                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                        'GHC.Generics.DecidedLazy)
                                                                                     (GHC.Generics.K1
                                                                                        GHC.Generics.R
                                                                                        Data.ByteString.Internal.ByteString)
                                                                                   GHC.Generics.:*: GHC.Generics.M1
                                                                                                      GHC.Generics.S
                                                                                                      ('GHC.Generics.MetaSel
                                                                                                         ('GHC.Base.Just
                                                                                                            "basequal")
                                                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                                                         'GHC.Generics.NoSourceStrictness
                                                                                                         'GHC.Generics.DecidedLazy)
                                                                                                      (GHC.Generics.K1
                                                                                                         GHC.Generics.R
                                                                                                         Data.ByteString.Internal.ByteString)))))
                            GHC.Generics.:*: (((GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "optfields")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R
                                                     Data.ByteString.Internal.ByteString)
                                                GHC.Generics.:*: (GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       ('GHC.Base.Just "strand")
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R
                                                                       Data.ByteString.Internal.ByteString)
                                                                  GHC.Generics.:*: GHC.Generics.M1
                                                                                     GHC.Generics.S
                                                                                     ('GHC.Generics.MetaSel
                                                                                        ('GHC.Base.Just
                                                                                           "paired")
                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                        'GHC.Generics.DecidedLazy)
                                                                                     (GHC.Generics.K1
                                                                                        GHC.Generics.R
                                                                                        GHC.Types.Bool)))
                                               GHC.Generics.:*: ((GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       ('GHC.Base.Just "mapped")
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R
                                                                       GHC.Types.Bool)
                                                                  GHC.Generics.:*: GHC.Generics.M1
                                                                                     GHC.Generics.S
                                                                                     ('GHC.Generics.MetaSel
                                                                                        ('GHC.Base.Just
                                                                                           "fint")
                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                        'GHC.Generics.DecidedLazy)
                                                                                     (GHC.Generics.K1
                                                                                        GHC.Generics.R
                                                                                        [Lib.BedRecord]))
                                                                 GHC.Generics.:*: (GHC.Generics.M1
                                                                                     GHC.Generics.S
                                                                                     ('GHC.Generics.MetaSel
                                                                                        ('GHC.Base.Just
                                                                                           "rint")
                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                        'GHC.Generics.DecidedLazy)
                                                                                     (GHC.Generics.K1
                                                                                        GHC.Generics.R
                                                                                        [Lib.BedRecord])
                                                                                   GHC.Generics.:*: GHC.Generics.M1
                                                                                                      GHC.Generics.S
                                                                                                      ('GHC.Generics.MetaSel
                                                                                                         ('GHC.Base.Just
                                                                                                            "pintflag")
                                                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                                                         'GHC.Generics.NoSourceStrictness
                                                                                                         'GHC.Generics.DecidedLazy)
                                                                                                      (GHC.Generics.K1
                                                                                                         GHC.Generics.R
                                                                                                         GHC.Types.Bool))))
                                              GHC.Generics.:*: (((GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       ('GHC.Base.Just "trimdflag")
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R
                                                                       GHC.Types.Bool)
                                                                  GHC.Generics.:*: GHC.Generics.M1
                                                                                     GHC.Generics.S
                                                                                     ('GHC.Generics.MetaSel
                                                                                        ('GHC.Base.Just
                                                                                           "trimdpos")
                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                        'GHC.Generics.DecidedLazy)
                                                                                     (GHC.Generics.K1
                                                                                        GHC.Generics.R
                                                                                        GHC.Integer.Type.Integer))
                                                                 GHC.Generics.:*: (GHC.Generics.M1
                                                                                     GHC.Generics.S
                                                                                     ('GHC.Generics.MetaSel
                                                                                        ('GHC.Base.Just
                                                                                           "trimdendpos")
                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                        'GHC.Generics.DecidedLazy)
                                                                                     (GHC.Generics.K1
                                                                                        GHC.Generics.R
                                                                                        GHC.Integer.Type.Integer)
                                                                                   GHC.Generics.:*: GHC.Generics.M1
                                                                                                      GHC.Generics.S
                                                                                                      ('GHC.Generics.MetaSel
                                                                                                         ('GHC.Base.Just
                                                                                                            "headerstrings")
                                                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                                                         'GHC.Generics.NoSourceStrictness
                                                                                                         'GHC.Generics.DecidedLazy)
                                                                                                      (GHC.Generics.K1
                                                                                                         GHC.Generics.R
                                                                                                         Lib.Header)))
                                                                GHC.Generics.:*: ((GHC.Generics.M1
                                                                                     GHC.Generics.S
                                                                                     ('GHC.Generics.MetaSel
                                                                                        ('GHC.Base.Just
                                                                                           "isheader")
                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                        'GHC.Generics.DecidedLazy)
                                                                                     (GHC.Generics.K1
                                                                                        GHC.Generics.R
                                                                                        GHC.Types.Bool)
                                                                                   GHC.Generics.:*: GHC.Generics.M1
                                                                                                      GHC.Generics.S
                                                                                                      ('GHC.Generics.MetaSel
                                                                                                         ('GHC.Base.Just
                                                                                                            "mid")
                                                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                                                         'GHC.Generics.NoSourceStrictness
                                                                                                         'GHC.Generics.DecidedLazy)
                                                                                                      (GHC.Generics.K1
                                                                                                         GHC.Generics.R
                                                                                                         Data.ByteString.Internal.ByteString))
                                                                                  GHC.Generics.:*: (GHC.Generics.M1
                                                                                                      GHC.Generics.S
                                                                                                      ('GHC.Generics.MetaSel
                                                                                                         ('GHC.Base.Just
                                                                                                            "xmid")
                                                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                                                         'GHC.Generics.NoSourceStrictness
                                                                                                         'GHC.Generics.DecidedLazy)
                                                                                                      (GHC.Generics.K1
                                                                                                         GHC.Generics.R
                                                                                                         Data.ByteString.Internal.ByteString)
                                                                                                    GHC.Generics.:*: GHC.Generics.M1
                                                                                                                       GHC.Generics.S
                                                                                                                       ('GHC.Generics.MetaSel
                                                                                                                          ('GHC.Base.Just
                                                                                                                             "tbed")
                                                                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                                                                          'GHC.Generics.NoSourceStrictness
                                                                                                                          'GHC.Generics.DecidedLazy)
                                                                                                                       (GHC.Generics.K1
                                                                                                                          GHC.Generics.R
                                                                                                                          Lib.BedRecord)))))>_R) <x>_N) }) -}
f671dfe83494b300f9d572c68e554e5e
  $fGenericAlignedRead_$cfrom ::
    Lib.AlignedRead -> GHC.Generics.Rep Lib.AlignedRead x
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>m,
     Unfolding: InlineRule (0, True, True)
                Lib.$fGenericAlignedRead1
                  `cast`
                (forall (x :: <GHC.Types.*>_N).
                 <Lib.AlignedRead>_R
                 ->_R Trans
                          (Sym (GHC.Generics.N:M1[0]
                                    <GHC.Generics.D>_P
                                    <'GHC.Generics.MetaData
                                       "AlignedRead"
                                       "Lib"
                                       "primerclip-0.1.0.0-KtmdnGpJra4GypcvVGF2ng"
                                       'GHC.Types.False>_P
                                    <GHC.Generics.M1
                                       GHC.Generics.C
                                       ('GHC.Generics.MetaCons
                                          "AlignedRead" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                       ((((GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "qname")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R Data.ByteString.Internal.ByteString)
                                           GHC.Generics.:*: (GHC.Generics.M1
                                                               GHC.Generics.S
                                                               ('GHC.Generics.MetaSel
                                                                  ('GHC.Base.Just "flag")
                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                  'GHC.Generics.NoSourceStrictness
                                                                  'GHC.Generics.DecidedLazy)
                                                               (GHC.Generics.K1
                                                                  GHC.Generics.R GHC.Types.Int)
                                                             GHC.Generics.:*: GHC.Generics.M1
                                                                                GHC.Generics.S
                                                                                ('GHC.Generics.MetaSel
                                                                                   ('GHC.Base.Just
                                                                                      "rname")
                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                   'GHC.Generics.DecidedLazy)
                                                                                (GHC.Generics.K1
                                                                                   GHC.Generics.R
                                                                                   Lib.UChr)))
                                          GHC.Generics.:*: ((GHC.Generics.M1
                                                               GHC.Generics.S
                                                               ('GHC.Generics.MetaSel
                                                                  ('GHC.Base.Just "pos")
                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                  'GHC.Generics.NoSourceStrictness
                                                                  'GHC.Generics.DecidedLazy)
                                                               (GHC.Generics.K1
                                                                  GHC.Generics.R
                                                                  GHC.Integer.Type.Integer)
                                                             GHC.Generics.:*: GHC.Generics.M1
                                                                                GHC.Generics.S
                                                                                ('GHC.Generics.MetaSel
                                                                                   ('GHC.Base.Just
                                                                                      "endpos")
                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                   'GHC.Generics.DecidedLazy)
                                                                                (GHC.Generics.K1
                                                                                   GHC.Generics.R
                                                                                   GHC.Integer.Type.Integer))
                                                            GHC.Generics.:*: (GHC.Generics.M1
                                                                                GHC.Generics.S
                                                                                ('GHC.Generics.MetaSel
                                                                                   ('GHC.Base.Just
                                                                                      "mapqual")
                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                   'GHC.Generics.DecidedLazy)
                                                                                (GHC.Generics.K1
                                                                                   GHC.Generics.R
                                                                                   GHC.Integer.Type.Integer)
                                                                              GHC.Generics.:*: GHC.Generics.M1
                                                                                                 GHC.Generics.S
                                                                                                 ('GHC.Generics.MetaSel
                                                                                                    ('GHC.Base.Just
                                                                                                       "cigar")
                                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                                    'GHC.Generics.DecidedLazy)
                                                                                                 (GHC.Generics.K1
                                                                                                    GHC.Generics.R
                                                                                                    Data.ByteString.Internal.ByteString))))
                                         GHC.Generics.:*: (((GHC.Generics.M1
                                                               GHC.Generics.S
                                                               ('GHC.Generics.MetaSel
                                                                  ('GHC.Base.Just "trimdcigar")
                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                  'GHC.Generics.NoSourceStrictness
                                                                  'GHC.Generics.DecidedLazy)
                                                               (GHC.Generics.K1
                                                                  GHC.Generics.R
                                                                  Data.ByteString.Internal.ByteString)
                                                             GHC.Generics.:*: GHC.Generics.M1
                                                                                GHC.Generics.S
                                                                                ('GHC.Generics.MetaSel
                                                                                   ('GHC.Base.Just
                                                                                      "cigmap")
                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                   'GHC.Generics.DecidedLazy)
                                                                                (GHC.Generics.K1
                                                                                   GHC.Generics.R
                                                                                   Lib.CigarMap))
                                                            GHC.Generics.:*: (GHC.Generics.M1
                                                                                GHC.Generics.S
                                                                                ('GHC.Generics.MetaSel
                                                                                   ('GHC.Base.Just
                                                                                      "trimdcigmap")
                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                   'GHC.Generics.DecidedLazy)
                                                                                (GHC.Generics.K1
                                                                                   GHC.Generics.R
                                                                                   Lib.CigarMap)
                                                                              GHC.Generics.:*: GHC.Generics.M1
                                                                                                 GHC.Generics.S
                                                                                                 ('GHC.Generics.MetaSel
                                                                                                    ('GHC.Base.Just
                                                                                                       "rnext")
                                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                                    'GHC.Generics.DecidedLazy)
                                                                                                 (GHC.Generics.K1
                                                                                                    GHC.Generics.R
                                                                                                    Data.ByteString.Internal.ByteString)))
                                                           GHC.Generics.:*: ((GHC.Generics.M1
                                                                                GHC.Generics.S
                                                                                ('GHC.Generics.MetaSel
                                                                                   ('GHC.Base.Just
                                                                                      "pnext")
                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                   'GHC.Generics.DecidedLazy)
                                                                                (GHC.Generics.K1
                                                                                   GHC.Generics.R
                                                                                   GHC.Integer.Type.Integer)
                                                                              GHC.Generics.:*: GHC.Generics.M1
                                                                                                 GHC.Generics.S
                                                                                                 ('GHC.Generics.MetaSel
                                                                                                    ('GHC.Base.Just
                                                                                                       "tlen")
                                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                                    'GHC.Generics.DecidedLazy)
                                                                                                 (GHC.Generics.K1
                                                                                                    GHC.Generics.R
                                                                                                    GHC.Integer.Type.Integer))
                                                                             GHC.Generics.:*: (GHC.Generics.M1
                                                                                                 GHC.Generics.S
                                                                                                 ('GHC.Generics.MetaSel
                                                                                                    ('GHC.Base.Just
                                                                                                       "refseq")
                                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                                    'GHC.Generics.DecidedLazy)
                                                                                                 (GHC.Generics.K1
                                                                                                    GHC.Generics.R
                                                                                                    Data.ByteString.Internal.ByteString)
                                                                                               GHC.Generics.:*: GHC.Generics.M1
                                                                                                                  GHC.Generics.S
                                                                                                                  ('GHC.Generics.MetaSel
                                                                                                                     ('GHC.Base.Just
                                                                                                                        "basequal")
                                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                                  (GHC.Generics.K1
                                                                                                                     GHC.Generics.R
                                                                                                                     Data.ByteString.Internal.ByteString)))))
                                        GHC.Generics.:*: (((GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "optfields")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 Data.ByteString.Internal.ByteString)
                                                            GHC.Generics.:*: (GHC.Generics.M1
                                                                                GHC.Generics.S
                                                                                ('GHC.Generics.MetaSel
                                                                                   ('GHC.Base.Just
                                                                                      "strand")
                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                   'GHC.Generics.DecidedLazy)
                                                                                (GHC.Generics.K1
                                                                                   GHC.Generics.R
                                                                                   Data.ByteString.Internal.ByteString)
                                                                              GHC.Generics.:*: GHC.Generics.M1
                                                                                                 GHC.Generics.S
                                                                                                 ('GHC.Generics.MetaSel
                                                                                                    ('GHC.Base.Just
                                                                                                       "paired")
                                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                                    'GHC.Generics.DecidedLazy)
                                                                                                 (GHC.Generics.K1
                                                                                                    GHC.Generics.R
                                                                                                    GHC.Types.Bool)))
                                                           GHC.Generics.:*: ((GHC.Generics.M1
                                                                                GHC.Generics.S
                                                                                ('GHC.Generics.MetaSel
                                                                                   ('GHC.Base.Just
                                                                                      "mapped")
                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                   'GHC.Generics.DecidedLazy)
                                                                                (GHC.Generics.K1
                                                                                   GHC.Generics.R
                                                                                   GHC.Types.Bool)
                                                                              GHC.Generics.:*: GHC.Generics.M1
                                                                                                 GHC.Generics.S
                                                                                                 ('GHC.Generics.MetaSel
                                                                                                    ('GHC.Base.Just
                                                                                                       "fint")
                                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                                    'GHC.Generics.DecidedLazy)
                                                                                                 (GHC.Generics.K1
                                                                                                    GHC.Generics.R
                                                                                                    [Lib.BedRecord]))
                                                                             GHC.Generics.:*: (GHC.Generics.M1
                                                                                                 GHC.Generics.S
                                                                                                 ('GHC.Generics.MetaSel
                                                                                                    ('GHC.Base.Just
                                                                                                       "rint")
                                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                                    'GHC.Generics.DecidedLazy)
                                                                                                 (GHC.Generics.K1
                                                                                                    GHC.Generics.R
                                                                                                    [Lib.BedRecord])
                                                                                               GHC.Generics.:*: GHC.Generics.M1
                                                                                                                  GHC.Generics.S
                                                                                                                  ('GHC.Generics.MetaSel
                                                                                                                     ('GHC.Base.Just
                                                                                                                        "pintflag")
                                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                                  (GHC.Generics.K1
                                                                                                                     GHC.Generics.R
                                                                                                                     GHC.Types.Bool))))
                                                          GHC.Generics.:*: (((GHC.Generics.M1
                                                                                GHC.Generics.S
                                                                                ('GHC.Generics.MetaSel
                                                                                   ('GHC.Base.Just
                                                                                      "trimdflag")
                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                   'GHC.Generics.DecidedLazy)
                                                                                (GHC.Generics.K1
                                                                                   GHC.Generics.R
                                                                                   GHC.Types.Bool)
                                                                              GHC.Generics.:*: GHC.Generics.M1
                                                                                                 GHC.Generics.S
                                                                                                 ('GHC.Generics.MetaSel
                                                                                                    ('GHC.Base.Just
                                                                                                       "trimdpos")
                                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                                    'GHC.Generics.DecidedLazy)
                                                                                                 (GHC.Generics.K1
                                                                                                    GHC.Generics.R
                                                                                                    GHC.Integer.Type.Integer))
                                                                             GHC.Generics.:*: (GHC.Generics.M1
                                                                                                 GHC.Generics.S
                                                                                                 ('GHC.Generics.MetaSel
                                                                                                    ('GHC.Base.Just
                                                                                                       "trimdendpos")
                                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                                    'GHC.Generics.DecidedLazy)
                                                                                                 (GHC.Generics.K1
                                                                                                    GHC.Generics.R
                                                                                                    GHC.Integer.Type.Integer)
                                                                                               GHC.Generics.:*: GHC.Generics.M1
                                                                                                                  GHC.Generics.S
                                                                                                                  ('GHC.Generics.MetaSel
                                                                                                                     ('GHC.Base.Just
                                                                                                                        "headerstrings")
                                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                                  (GHC.Generics.K1
                                                                                                                     GHC.Generics.R
                                                                                                                     Lib.Header)))
                                                                            GHC.Generics.:*: ((GHC.Generics.M1
                                                                                                 GHC.Generics.S
                                                                                                 ('GHC.Generics.MetaSel
                                                                                                    ('GHC.Base.Just
                                                                                                       "isheader")
                                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                                    'GHC.Generics.DecidedLazy)
                                                                                                 (GHC.Generics.K1
                                                                                                    GHC.Generics.R
                                                                                                    GHC.Types.Bool)
                                                                                               GHC.Generics.:*: GHC.Generics.M1
                                                                                                                  GHC.Generics.S
                                                                                                                  ('GHC.Generics.MetaSel
                                                                                                                     ('GHC.Base.Just
                                                                                                                        "mid")
                                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                                  (GHC.Generics.K1
                                                                                                                     GHC.Generics.R
                                                                                                                     Data.ByteString.Internal.ByteString))
                                                                                              GHC.Generics.:*: (GHC.Generics.M1
                                                                                                                  GHC.Generics.S
                                                                                                                  ('GHC.Generics.MetaSel
                                                                                                                     ('GHC.Base.Just
                                                                                                                        "xmid")
                                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                                  (GHC.Generics.K1
                                                                                                                     GHC.Generics.R
                                                                                                                     Data.ByteString.Internal.ByteString)
                                                                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                   GHC.Generics.S
                                                                                                                                   ('GHC.Generics.MetaSel
                                                                                                                                      ('GHC.Base.Just
                                                                                                                                         "tbed")
                                                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                                                   (GHC.Generics.K1
                                                                                                                                      GHC.Generics.R
                                                                                                                                      Lib.BedRecord))))))>_R))
                          (Sub (Sym (Lib.Rep_AlignedRead[0]))) <x>_N) -}
f671dfe83494b300f9d572c68e554e5e
  $fGenericAlignedRead_$cto ::
    GHC.Generics.Rep Lib.AlignedRead x -> Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(S(S(S(LS)S(SS))S(S(SS)S(SS)))S(S(S(LS)S(SS))S(S(SS)S(SS)))),1*U(1*U(1*U(1*U(U,1*U(U,U)),1*U(1*U(U,U),1*U(U,U))),1*U(1*U(1*U(U,U),1*U(U,U)),1*U(1*U(U,U),1*U(U,U)))),1*U(1*U(1*U(U,1*U(U,U)),1*U(1*U(U,U),1*U(U,U))),1*U(1*U(1*U(U,U),1*U(U,U)),1*U(1*U(U,U),1*U(U,U)))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ @ x (w :: GHC.Generics.Rep Lib.AlignedRead x) ->
                 case w `cast`
                      (Trans
                           (Sub (Lib.Rep_AlignedRead[0]))
                           (Trans
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.D>_P
                                     <'GHC.Generics.MetaData
                                        "AlignedRead"
                                        "Lib"
                                        "primerclip-0.1.0.0-KtmdnGpJra4GypcvVGF2ng"
                                        'GHC.Types.False>_P
                                     <GHC.Generics.C1
                                        ('GHC.Generics.MetaCons
                                           "AlignedRead" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                        ((((GHC.Generics.S1
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "qname")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.Rec0
                                                 Data.ByteString.Internal.ByteString)
                                            GHC.Generics.:*: (GHC.Generics.S1
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "flag")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.Rec0 GHC.Types.Int)
                                                              GHC.Generics.:*: GHC.Generics.S1
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "rname")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.Rec0
                                                                                    Lib.UChr)))
                                           GHC.Generics.:*: ((GHC.Generics.S1
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "pos")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.Rec0
                                                                   GHC.Integer.Type.Integer)
                                                              GHC.Generics.:*: GHC.Generics.S1
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "endpos")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.Rec0
                                                                                    GHC.Integer.Type.Integer))
                                                             GHC.Generics.:*: (GHC.Generics.S1
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "mapqual")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.Rec0
                                                                                    GHC.Integer.Type.Integer)
                                                                               GHC.Generics.:*: GHC.Generics.S1
                                                                                                  ('GHC.Generics.MetaSel
                                                                                                     ('GHC.Base.Just
                                                                                                        "cigar")
                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                  (GHC.Generics.Rec0
                                                                                                     Data.ByteString.Internal.ByteString))))
                                          GHC.Generics.:*: (((GHC.Generics.S1
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "trimdcigar")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.Rec0
                                                                   Data.ByteString.Internal.ByteString)
                                                              GHC.Generics.:*: GHC.Generics.S1
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "cigmap")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.Rec0
                                                                                    Lib.CigarMap))
                                                             GHC.Generics.:*: (GHC.Generics.S1
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "trimdcigmap")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.Rec0
                                                                                    Lib.CigarMap)
                                                                               GHC.Generics.:*: GHC.Generics.S1
                                                                                                  ('GHC.Generics.MetaSel
                                                                                                     ('GHC.Base.Just
                                                                                                        "rnext")
                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                  (GHC.Generics.Rec0
                                                                                                     Data.ByteString.Internal.ByteString)))
                                                            GHC.Generics.:*: ((GHC.Generics.S1
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "pnext")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.Rec0
                                                                                    GHC.Integer.Type.Integer)
                                                                               GHC.Generics.:*: GHC.Generics.S1
                                                                                                  ('GHC.Generics.MetaSel
                                                                                                     ('GHC.Base.Just
                                                                                                        "tlen")
                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                  (GHC.Generics.Rec0
                                                                                                     GHC.Integer.Type.Integer))
                                                                              GHC.Generics.:*: (GHC.Generics.S1
                                                                                                  ('GHC.Generics.MetaSel
                                                                                                     ('GHC.Base.Just
                                                                                                        "refseq")
                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                  (GHC.Generics.Rec0
                                                                                                     Data.ByteString.Internal.ByteString)
                                                                                                GHC.Generics.:*: GHC.Generics.S1
                                                                                                                   ('GHC.Generics.MetaSel
                                                                                                                      ('GHC.Base.Just
                                                                                                                         "basequal")
                                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                                   (GHC.Generics.Rec0
                                                                                                                      Data.ByteString.Internal.ByteString)))))
                                         GHC.Generics.:*: (((GHC.Generics.S1
                                                               ('GHC.Generics.MetaSel
                                                                  ('GHC.Base.Just "optfields")
                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                  'GHC.Generics.NoSourceStrictness
                                                                  'GHC.Generics.DecidedLazy)
                                                               (GHC.Generics.Rec0
                                                                  Data.ByteString.Internal.ByteString)
                                                             GHC.Generics.:*: (GHC.Generics.S1
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "strand")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.Rec0
                                                                                    Data.ByteString.Internal.ByteString)
                                                                               GHC.Generics.:*: GHC.Generics.S1
                                                                                                  ('GHC.Generics.MetaSel
                                                                                                     ('GHC.Base.Just
                                                                                                        "paired")
                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                  (GHC.Generics.Rec0
                                                                                                     GHC.Types.Bool)))
                                                            GHC.Generics.:*: ((GHC.Generics.S1
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "mapped")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.Rec0
                                                                                    GHC.Types.Bool)
                                                                               GHC.Generics.:*: GHC.Generics.S1
                                                                                                  ('GHC.Generics.MetaSel
                                                                                                     ('GHC.Base.Just
                                                                                                        "fint")
                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                  (GHC.Generics.Rec0
                                                                                                     [Lib.BedRecord]))
                                                                              GHC.Generics.:*: (GHC.Generics.S1
                                                                                                  ('GHC.Generics.MetaSel
                                                                                                     ('GHC.Base.Just
                                                                                                        "rint")
                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                  (GHC.Generics.Rec0
                                                                                                     [Lib.BedRecord])
                                                                                                GHC.Generics.:*: GHC.Generics.S1
                                                                                                                   ('GHC.Generics.MetaSel
                                                                                                                      ('GHC.Base.Just
                                                                                                                         "pintflag")
                                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                                   (GHC.Generics.Rec0
                                                                                                                      GHC.Types.Bool))))
                                                           GHC.Generics.:*: (((GHC.Generics.S1
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "trimdflag")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.Rec0
                                                                                    GHC.Types.Bool)
                                                                               GHC.Generics.:*: GHC.Generics.S1
                                                                                                  ('GHC.Generics.MetaSel
                                                                                                     ('GHC.Base.Just
                                                                                                        "trimdpos")
                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                  (GHC.Generics.Rec0
                                                                                                     GHC.Integer.Type.Integer))
                                                                              GHC.Generics.:*: (GHC.Generics.S1
                                                                                                  ('GHC.Generics.MetaSel
                                                                                                     ('GHC.Base.Just
                                                                                                        "trimdendpos")
                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                  (GHC.Generics.Rec0
                                                                                                     GHC.Integer.Type.Integer)
                                                                                                GHC.Generics.:*: GHC.Generics.S1
                                                                                                                   ('GHC.Generics.MetaSel
                                                                                                                      ('GHC.Base.Just
                                                                                                                         "headerstrings")
                                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                                   (GHC.Generics.Rec0
                                                                                                                      Lib.Header)))
                                                                             GHC.Generics.:*: ((GHC.Generics.S1
                                                                                                  ('GHC.Generics.MetaSel
                                                                                                     ('GHC.Base.Just
                                                                                                        "isheader")
                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                  (GHC.Generics.Rec0
                                                                                                     GHC.Types.Bool)
                                                                                                GHC.Generics.:*: GHC.Generics.S1
                                                                                                                   ('GHC.Generics.MetaSel
                                                                                                                      ('GHC.Base.Just
                                                                                                                         "mid")
                                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                                   (GHC.Generics.Rec0
                                                                                                                      Data.ByteString.Internal.ByteString))
                                                                                               GHC.Generics.:*: (GHC.Generics.S1
                                                                                                                   ('GHC.Generics.MetaSel
                                                                                                                      ('GHC.Base.Just
                                                                                                                         "xmid")
                                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                                   (GHC.Generics.Rec0
                                                                                                                      Data.ByteString.Internal.ByteString)
                                                                                                                 GHC.Generics.:*: GHC.Generics.S1
                                                                                                                                    ('GHC.Generics.MetaSel
                                                                                                                                       ('GHC.Base.Just
                                                                                                                                          "tbed")
                                                                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                                                                       'GHC.Generics.DecidedLazy)
                                                                                                                                    (GHC.Generics.Rec0
                                                                                                                                       Lib.BedRecord))))))>_R)
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "AlignedRead" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <(((GHC.Generics.S1
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "qname")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.Rec0 Data.ByteString.Internal.ByteString)
                                         GHC.Generics.:*: (GHC.Generics.S1
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "flag")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.Rec0 GHC.Types.Int)
                                                           GHC.Generics.:*: GHC.Generics.S1
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "rname")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.Rec0
                                                                                 Lib.UChr)))
                                        GHC.Generics.:*: ((GHC.Generics.S1
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "pos")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.Rec0
                                                                GHC.Integer.Type.Integer)
                                                           GHC.Generics.:*: GHC.Generics.S1
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "endpos")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.Rec0
                                                                                 GHC.Integer.Type.Integer))
                                                          GHC.Generics.:*: (GHC.Generics.S1
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "mapqual")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.Rec0
                                                                                 GHC.Integer.Type.Integer)
                                                                            GHC.Generics.:*: GHC.Generics.S1
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Base.Just
                                                                                                     "cigar")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.Rec0
                                                                                                  Data.ByteString.Internal.ByteString))))
                                       GHC.Generics.:*: (((GHC.Generics.S1
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "trimdcigar")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.Rec0
                                                                Data.ByteString.Internal.ByteString)
                                                           GHC.Generics.:*: GHC.Generics.S1
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "cigmap")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.Rec0
                                                                                 Lib.CigarMap))
                                                          GHC.Generics.:*: (GHC.Generics.S1
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "trimdcigmap")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.Rec0
                                                                                 Lib.CigarMap)
                                                                            GHC.Generics.:*: GHC.Generics.S1
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Base.Just
                                                                                                     "rnext")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.Rec0
                                                                                                  Data.ByteString.Internal.ByteString)))
                                                         GHC.Generics.:*: ((GHC.Generics.S1
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "pnext")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.Rec0
                                                                                 GHC.Integer.Type.Integer)
                                                                            GHC.Generics.:*: GHC.Generics.S1
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Base.Just
                                                                                                     "tlen")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.Rec0
                                                                                                  GHC.Integer.Type.Integer))
                                                                           GHC.Generics.:*: (GHC.Generics.S1
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Base.Just
                                                                                                     "refseq")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.Rec0
                                                                                                  Data.ByteString.Internal.ByteString)
                                                                                             GHC.Generics.:*: GHC.Generics.S1
                                                                                                                ('GHC.Generics.MetaSel
                                                                                                                   ('GHC.Base.Just
                                                                                                                      "basequal")
                                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                                (GHC.Generics.Rec0
                                                                                                                   Data.ByteString.Internal.ByteString)))))
                                      GHC.Generics.:*: (((GHC.Generics.S1
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "optfields")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.Rec0
                                                               Data.ByteString.Internal.ByteString)
                                                          GHC.Generics.:*: (GHC.Generics.S1
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "strand")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.Rec0
                                                                                 Data.ByteString.Internal.ByteString)
                                                                            GHC.Generics.:*: GHC.Generics.S1
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Base.Just
                                                                                                     "paired")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.Rec0
                                                                                                  GHC.Types.Bool)))
                                                         GHC.Generics.:*: ((GHC.Generics.S1
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "mapped")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.Rec0
                                                                                 GHC.Types.Bool)
                                                                            GHC.Generics.:*: GHC.Generics.S1
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Base.Just
                                                                                                     "fint")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.Rec0
                                                                                                  [Lib.BedRecord]))
                                                                           GHC.Generics.:*: (GHC.Generics.S1
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Base.Just
                                                                                                     "rint")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.Rec0
                                                                                                  [Lib.BedRecord])
                                                                                             GHC.Generics.:*: GHC.Generics.S1
                                                                                                                ('GHC.Generics.MetaSel
                                                                                                                   ('GHC.Base.Just
                                                                                                                      "pintflag")
                                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                                (GHC.Generics.Rec0
                                                                                                                   GHC.Types.Bool))))
                                                        GHC.Generics.:*: (((GHC.Generics.S1
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "trimdflag")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.Rec0
                                                                                 GHC.Types.Bool)
                                                                            GHC.Generics.:*: GHC.Generics.S1
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Base.Just
                                                                                                     "trimdpos")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.Rec0
                                                                                                  GHC.Integer.Type.Integer))
                                                                           GHC.Generics.:*: (GHC.Generics.S1
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Base.Just
                                                                                                     "trimdendpos")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.Rec0
                                                                                                  GHC.Integer.Type.Integer)
                                                                                             GHC.Generics.:*: GHC.Generics.S1
                                                                                                                ('GHC.Generics.MetaSel
                                                                                                                   ('GHC.Base.Just
                                                                                                                      "headerstrings")
                                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                                (GHC.Generics.Rec0
                                                                                                                   Lib.Header)))
                                                                          GHC.Generics.:*: ((GHC.Generics.S1
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Base.Just
                                                                                                     "isheader")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.Rec0
                                                                                                  GHC.Types.Bool)
                                                                                             GHC.Generics.:*: GHC.Generics.S1
                                                                                                                ('GHC.Generics.MetaSel
                                                                                                                   ('GHC.Base.Just
                                                                                                                      "mid")
                                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                                (GHC.Generics.Rec0
                                                                                                                   Data.ByteString.Internal.ByteString))
                                                                                            GHC.Generics.:*: (GHC.Generics.S1
                                                                                                                ('GHC.Generics.MetaSel
                                                                                                                   ('GHC.Base.Just
                                                                                                                      "xmid")
                                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                                (GHC.Generics.Rec0
                                                                                                                   Data.ByteString.Internal.ByteString)
                                                                                                              GHC.Generics.:*: GHC.Generics.S1
                                                                                                                                 ('GHC.Generics.MetaSel
                                                                                                                                    ('GHC.Base.Just
                                                                                                                                       "tbed")
                                                                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                                                                    'GHC.Generics.DecidedLazy)
                                                                                                                                 (GHC.Generics.Rec0
                                                                                                                                    Lib.BedRecord)))))>_R)) <x>_N) of ww { GHC.Generics.:*: ww1 ww2 ->
                 case ww1 of ww3 { GHC.Generics.:*: ww4 ww5 ->
                 case ww4 of ww6 { GHC.Generics.:*: ww7 ww8 ->
                 case ww7 of ww9 { GHC.Generics.:*: ww10 ww11 ->
                 case ww11 of ww12 { GHC.Generics.:*: ww13 ww14 ->
                 case ww8 of ww15 { GHC.Generics.:*: ww16 ww17 ->
                 case ww16 of ww18 { GHC.Generics.:*: ww19 ww20 ->
                 case ww17 of ww21 { GHC.Generics.:*: ww22 ww23 ->
                 case ww5 of ww24 { GHC.Generics.:*: ww25 ww26 ->
                 case ww25 of ww27 { GHC.Generics.:*: ww28 ww29 ->
                 case ww28 of ww30 { GHC.Generics.:*: ww31 ww32 ->
                 case ww29 of ww33 { GHC.Generics.:*: ww34 ww35 ->
                 case ww26 of ww36 { GHC.Generics.:*: ww37 ww38 ->
                 case ww37 of ww39 { GHC.Generics.:*: ww40 ww41 ->
                 case ww38 of ww42 { GHC.Generics.:*: ww43 ww44 ->
                 case ww2 of ww45 { GHC.Generics.:*: ww46 ww47 ->
                 case ww46 of ww48 { GHC.Generics.:*: ww49 ww50 ->
                 case ww49 of ww51 { GHC.Generics.:*: ww52 ww53 ->
                 case ww53 of ww54 { GHC.Generics.:*: ww55 ww56 ->
                 case ww50 of ww57 { GHC.Generics.:*: ww58 ww59 ->
                 case ww58 of ww60 { GHC.Generics.:*: ww61 ww62 ->
                 case ww59 of ww63 { GHC.Generics.:*: ww64 ww65 ->
                 case ww47 of ww66 { GHC.Generics.:*: ww67 ww68 ->
                 case ww67 of ww69 { GHC.Generics.:*: ww70 ww71 ->
                 case ww70 of ww72 { GHC.Generics.:*: ww73 ww74 ->
                 case ww71 of ww75 { GHC.Generics.:*: ww76 ww77 ->
                 case ww68 of ww78 { GHC.Generics.:*: ww79 ww80 ->
                 case ww79 of ww81 { GHC.Generics.:*: ww82 ww83 ->
                 case ww80 of ww84 { GHC.Generics.:*: ww85 ww86 ->
                 Lib.AlignedRead
                   ww10
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "qname")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <Data.ByteString.Internal.ByteString>_R <x>_P))
                   ww13
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "flag")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Types.Int>_R <x>_N)
                        (GHC.Generics.N:K1[0] <GHC.Generics.R>_P <GHC.Types.Int>_R <x>_P))
                   ww14
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "rname")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R Lib.UChr>_R <x>_N)
                        (GHC.Generics.N:K1[0] <GHC.Generics.R>_P <Lib.UChr>_R <x>_P))
                   ww19
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "pos")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ww20
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "endpos")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ww22
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "mapqual")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ww23
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "cigar")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <Data.ByteString.Internal.ByteString>_R <x>_P))
                   ww31
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "trimdcigar")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <Data.ByteString.Internal.ByteString>_R <x>_P))
                   ww32
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "cigmap")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R Lib.CigarMap>_R <x>_N)
                        (GHC.Generics.N:K1[0] <GHC.Generics.R>_P <Lib.CigarMap>_R <x>_P))
                   ww34
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "trimdcigmap")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R Lib.CigarMap>_R <x>_N)
                        (GHC.Generics.N:K1[0] <GHC.Generics.R>_P <Lib.CigarMap>_R <x>_P))
                   ww35
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "rnext")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <Data.ByteString.Internal.ByteString>_R <x>_P))
                   ww40
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "pnext")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ww41
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "tlen")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ww43
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "refseq")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <Data.ByteString.Internal.ByteString>_R <x>_P))
                   ww44
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "basequal")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <Data.ByteString.Internal.ByteString>_R <x>_P))
                   ww52
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "optfields")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <Data.ByteString.Internal.ByteString>_R <x>_P))
                   ww55
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "strand")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <Data.ByteString.Internal.ByteString>_R <x>_P))
                   ww56
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "paired")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool>_R <x>_N)
                        (GHC.Generics.N:K1[0] <GHC.Generics.R>_P <GHC.Types.Bool>_R <x>_P))
                   ww61
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "mapped")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool>_R <x>_N)
                        (GHC.Generics.N:K1[0] <GHC.Generics.R>_P <GHC.Types.Bool>_R <x>_P))
                   ww62
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "fint")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R [Lib.BedRecord]>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <[Lib.BedRecord]>_R <x>_P))
                   ww64
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "rint")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R [Lib.BedRecord]>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <[Lib.BedRecord]>_R <x>_P))
                   ww65
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "pintflag")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool>_R <x>_N)
                        (GHC.Generics.N:K1[0] <GHC.Generics.R>_P <GHC.Types.Bool>_R <x>_P))
                   ww73
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "trimdflag")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool>_R <x>_N)
                        (GHC.Generics.N:K1[0] <GHC.Generics.R>_P <GHC.Types.Bool>_R <x>_P))
                   ww74
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "trimdpos")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ww76
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "trimdendpos")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ww77
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "headerstrings")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R Lib.Header>_R <x>_N)
                        (GHC.Generics.N:K1[0] <GHC.Generics.R>_P <Lib.Header>_R <x>_P))
                   ww82
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "isheader")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool>_R <x>_N)
                        (GHC.Generics.N:K1[0] <GHC.Generics.R>_P <GHC.Types.Bool>_R <x>_P))
                   ww83
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "mid")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <Data.ByteString.Internal.ByteString>_R <x>_P))
                   ww85
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "xmid")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <Data.ByteString.Internal.ByteString>_R <x>_P))
                   ww86
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "tbed")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R Lib.BedRecord>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P
                             <Lib.BedRecord>_R
                             <x>_P)) } } } } } } } } } } } } } } } } } } } } } } } } } } } } }) -}
fccf42ae6afd19ae2c265e24a08011ff
  $fGenericBedRecord :: GHC.Generics.Generic Lib.BedRecord
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lib.BedRecord
                  Lib.$fGenericBedRecord_$cfrom
                  Lib.$fGenericBedRecord_$cto -}
fccf42ae6afd19ae2c265e24a08011ff
  $fGenericBedRecord1 ::
    Lib.BedRecord
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "BedRecord" 'GHC.Generics.PrefixI 'GHC.Types.True)
         ((GHC.Generics.M1
             GHC.Generics.S
             ('GHC.Generics.MetaSel
                ('GHC.Base.Just "bedchr")
                'GHC.Generics.NoSourceUnpackedness
                'GHC.Generics.NoSourceStrictness
                'GHC.Generics.DecidedLazy)
             (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
           GHC.Generics.:*: GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "bedstart")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
          GHC.Generics.:*: (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "bedend")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                            GHC.Generics.:*: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "bedname")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString)))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: Lib.BedRecord) ->
                 case x1 of wild { Lib.BedRecord g1 g2 g3 g4 ->
                 (GHC.Generics.:*:
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "bedchr")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                       GHC.Generics.:*: GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "bedstart")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "bedend")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                       GHC.Generics.:*: GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "bedname")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1
                                             GHC.Generics.R Data.ByteString.Internal.ByteString))
                    @ x
                    (GHC.Generics.:*:
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "bedchr")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R Lib.UChr))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "bedstart")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                       @ x
                       g1
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0] <GHC.Generics.R>_P <Lib.UChr>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "bedchr")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1 GHC.Generics.R Lib.UChr>_R) <x>_N))
                       g2
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "bedstart")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1
                                         GHC.Generics.R GHC.Integer.Type.Integer>_R) <x>_N)))
                    (GHC.Generics.:*:
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "bedend")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "bedname")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1
                               GHC.Generics.R Data.ByteString.Internal.ByteString))
                       @ x
                       g3
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "bedend")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1
                                         GHC.Generics.R GHC.Integer.Type.Integer>_R) <x>_N))
                       g4
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <GHC.Generics.R>_P
                                      <Data.ByteString.Internal.ByteString>_R
                                      <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "bedname")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1
                                         GHC.Generics.R
                                         Data.ByteString.Internal.ByteString>_R) <x>_N))))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "BedRecord" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <(GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "bedchr")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                             GHC.Generics.:*: GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "bedstart")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R GHC.Integer.Type.Integer))
                            GHC.Generics.:*: (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "bedend")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R GHC.Integer.Type.Integer)
                                              GHC.Generics.:*: GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Base.Just "bedname")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    Data.ByteString.Internal.ByteString))>_R) <x>_N) }) -}
fccf42ae6afd19ae2c265e24a08011ff
  $fGenericBedRecord_$cfrom ::
    Lib.BedRecord -> GHC.Generics.Rep Lib.BedRecord x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U,U)>m,
     Unfolding: InlineRule (0, True, True)
                Lib.$fGenericBedRecord1
                  `cast`
                (forall (x :: <GHC.Types.*>_N).
                 <Lib.BedRecord>_R
                 ->_R Trans
                          (Sym (GHC.Generics.N:M1[0]
                                    <GHC.Generics.D>_P
                                    <'GHC.Generics.MetaData
                                       "BedRecord"
                                       "Lib"
                                       "primerclip-0.1.0.0-KtmdnGpJra4GypcvVGF2ng"
                                       'GHC.Types.False>_P
                                    <GHC.Generics.M1
                                       GHC.Generics.C
                                       ('GHC.Generics.MetaCons
                                          "BedRecord" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                       ((GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "bedchr")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "bedstart")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R
                                                               GHC.Integer.Type.Integer))
                                        GHC.Generics.:*: (GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "bedend")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R
                                                               GHC.Integer.Type.Integer)
                                                          GHC.Generics.:*: GHC.Generics.M1
                                                                             GHC.Generics.S
                                                                             ('GHC.Generics.MetaSel
                                                                                ('GHC.Base.Just
                                                                                   "bedname")
                                                                                'GHC.Generics.NoSourceUnpackedness
                                                                                'GHC.Generics.NoSourceStrictness
                                                                                'GHC.Generics.DecidedLazy)
                                                                             (GHC.Generics.K1
                                                                                GHC.Generics.R
                                                                                Data.ByteString.Internal.ByteString)))>_R))
                          (Sub (Sym (Lib.Rep_BedRecord[0]))) <x>_N) -}
fccf42ae6afd19ae2c265e24a08011ff
  $fGenericBedRecord_$cto ::
    GHC.Generics.Rep Lib.BedRecord x -> Lib.BedRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SS),1*U(1*U(U,U),1*U(U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (ds6 :: GHC.Generics.Rep Lib.BedRecord x) ->
                 case ds6
                        `cast`
                      (Trans
                           (Sub (Lib.Rep_BedRecord[0]))
                           (Trans
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.D>_P
                                     <'GHC.Generics.MetaData
                                        "BedRecord"
                                        "Lib"
                                        "primerclip-0.1.0.0-KtmdnGpJra4GypcvVGF2ng"
                                        'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "BedRecord" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                        ((GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "bedchr")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                                          GHC.Generics.:*: GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "bedstart")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R
                                                                GHC.Integer.Type.Integer))
                                         GHC.Generics.:*: (GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "bedend")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R
                                                                GHC.Integer.Type.Integer)
                                                           GHC.Generics.:*: GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "bedname")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 Data.ByteString.Internal.ByteString)))>_R)
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "BedRecord" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <(GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "bedchr")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                                       GHC.Generics.:*: GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "bedstart")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R
                                                             GHC.Integer.Type.Integer))
                                      GHC.Generics.:*: (GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "bedend")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R
                                                             GHC.Integer.Type.Integer)
                                                        GHC.Generics.:*: GHC.Generics.M1
                                                                           GHC.Generics.S
                                                                           ('GHC.Generics.MetaSel
                                                                              ('GHC.Base.Just
                                                                                 "bedname")
                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                              'GHC.Generics.NoSourceStrictness
                                                                              'GHC.Generics.DecidedLazy)
                                                                           (GHC.Generics.K1
                                                                              GHC.Generics.R
                                                                              Data.ByteString.Internal.ByteString))>_R)) <x>_N) of wild { GHC.Generics.:*: ds7 ds8 ->
                 case ds7 of wild1 { GHC.Generics.:*: ds9 ds10 ->
                 case ds8 of wild2 { GHC.Generics.:*: ds11 ds12 ->
                 Lib.BedRecord
                   ds9
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "bedchr")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R Lib.UChr>_R <x>_N)
                        (GHC.Generics.N:K1[0] <GHC.Generics.R>_P <Lib.UChr>_R <x>_P))
                   ds10
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "bedstart")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ds11
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "bedend")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ds12
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "bedname")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P
                             <Data.ByteString.Internal.ByteString>_R
                             <x>_P)) } } }) -}
3b7e185ad71459af8d347e25da054651
  $fGenericUChr :: GHC.Generics.Generic Lib.UChr
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lib.UChr Lib.$fGenericUChr_$cfrom Lib.$fGenericUChr_$cto -}
3b7e185ad71459af8d347e25da054651
  $fGenericUChr1 ::
    Lib.UChr
    -> (GHC.Generics.:+:)
         (((((GHC.Generics.M1
                GHC.Generics.C
                ('GHC.Generics.MetaCons
                   "C1" 'GHC.Generics.PrefixI 'GHC.Types.False)
                GHC.Generics.U1
              GHC.Generics.:+: (GHC.Generics.M1
                                  GHC.Generics.C
                                  ('GHC.Generics.MetaCons
                                     "C2" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                  GHC.Generics.U1
                                GHC.Generics.:+: GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "C3" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                   GHC.Generics.U1))
             GHC.Generics.:+: (GHC.Generics.M1
                                 GHC.Generics.C
                                 ('GHC.Generics.MetaCons
                                    "C4" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: (GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "C5" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "C6"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1)))
            GHC.Generics.:+: ((GHC.Generics.M1
                                 GHC.Generics.C
                                 ('GHC.Generics.MetaCons
                                    "C7" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: (GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "C8" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "C9"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1))
                              GHC.Generics.:+: ((GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "C10" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "C11"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1)
                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "C12"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "C13"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1))))
           GHC.Generics.:+: (((GHC.Generics.M1
                                 GHC.Generics.C
                                 ('GHC.Generics.MetaCons
                                    "C14" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: (GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "C15" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "C16"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1))
                              GHC.Generics.:+: ((GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "C17" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "C18"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1)
                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "C19"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "C20"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1)))
                             GHC.Generics.:+: ((GHC.Generics.M1
                                                  GHC.Generics.C
                                                  ('GHC.Generics.MetaCons
                                                     "C21" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                  GHC.Generics.U1
                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "C22"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "CX"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1))
                                               GHC.Generics.:+: ((GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "CY"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "CMT"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1)
                                                                 GHC.Generics.:+: (GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "Chr1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1
                                                                                   GHC.Generics.:+: GHC.Generics.M1
                                                                                                      GHC.Generics.C
                                                                                                      ('GHC.Generics.MetaCons
                                                                                                         "Chr2"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False)
                                                                                                      GHC.Generics.U1)))))
          GHC.Generics.:+: ((((GHC.Generics.M1
                                 GHC.Generics.C
                                 ('GHC.Generics.MetaCons
                                    "Chr3" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: (GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "Chr4" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "Chr5"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1))
                              GHC.Generics.:+: ((GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "Chr6" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "Chr7"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1)
                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "Chr8"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "Chr9"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1)))
                             GHC.Generics.:+: ((GHC.Generics.M1
                                                  GHC.Generics.C
                                                  ('GHC.Generics.MetaCons
                                                     "Chr10" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                  GHC.Generics.U1
                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "Chr11"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "Chr12"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1))
                                               GHC.Generics.:+: ((GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "Chr13"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "Chr14"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1)
                                                                 GHC.Generics.:+: (GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "Chr15"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1
                                                                                   GHC.Generics.:+: GHC.Generics.M1
                                                                                                      GHC.Generics.C
                                                                                                      ('GHC.Generics.MetaCons
                                                                                                         "Chr16"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False)
                                                                                                      GHC.Generics.U1))))
                            GHC.Generics.:+: (((GHC.Generics.M1
                                                  GHC.Generics.C
                                                  ('GHC.Generics.MetaCons
                                                     "Chr17" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                  GHC.Generics.U1
                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "Chr18"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "Chr19"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1))
                                               GHC.Generics.:+: ((GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "Chr20"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "Chr21"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1)
                                                                 GHC.Generics.:+: (GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "Chr22"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1
                                                                                   GHC.Generics.:+: GHC.Generics.M1
                                                                                                      GHC.Generics.C
                                                                                                      ('GHC.Generics.MetaCons
                                                                                                         "ChrX"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False)
                                                                                                      GHC.Generics.U1)))
                                              GHC.Generics.:+: ((GHC.Generics.M1
                                                                   GHC.Generics.C
                                                                   ('GHC.Generics.MetaCons
                                                                      "ChrY"
                                                                      'GHC.Generics.PrefixI
                                                                      'GHC.Types.False)
                                                                   GHC.Generics.U1
                                                                 GHC.Generics.:+: (GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "ChrM"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1
                                                                                   GHC.Generics.:+: GHC.Generics.M1
                                                                                                      GHC.Generics.C
                                                                                                      ('GHC.Generics.MetaCons
                                                                                                         "GL000207P1"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False)
                                                                                                      GHC.Generics.U1))
                                                                GHC.Generics.:+: ((GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000226P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1
                                                                                   GHC.Generics.:+: GHC.Generics.M1
                                                                                                      GHC.Generics.C
                                                                                                      ('GHC.Generics.MetaCons
                                                                                                         "GL000229P1"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False)
                                                                                                      GHC.Generics.U1)
                                                                                  GHC.Generics.:+: (GHC.Generics.M1
                                                                                                      GHC.Generics.C
                                                                                                      ('GHC.Generics.MetaCons
                                                                                                         "GL000231P1"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False)
                                                                                                      GHC.Generics.U1
                                                                                                    GHC.Generics.:+: GHC.Generics.M1
                                                                                                                       GHC.Generics.C
                                                                                                                       ('GHC.Generics.MetaCons
                                                                                                                          "GL000210P1"
                                                                                                                          'GHC.Generics.PrefixI
                                                                                                                          'GHC.Types.False)
                                                                                                                       GHC.Generics.U1))))))
         (((((GHC.Generics.M1
                GHC.Generics.C
                ('GHC.Generics.MetaCons
                   "GL000239P1" 'GHC.Generics.PrefixI 'GHC.Types.False)
                GHC.Generics.U1
              GHC.Generics.:+: (GHC.Generics.M1
                                  GHC.Generics.C
                                  ('GHC.Generics.MetaCons
                                     "GL000235P1" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                  GHC.Generics.U1
                                GHC.Generics.:+: GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "GL000201P1"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1))
             GHC.Generics.:+: ((GHC.Generics.M1
                                  GHC.Generics.C
                                  ('GHC.Generics.MetaCons
                                     "GL000247P1" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                  GHC.Generics.U1
                                GHC.Generics.:+: GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "GL000245P1"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1)
                               GHC.Generics.:+: (GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "GL000197P1"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000203P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1)))
            GHC.Generics.:+: ((GHC.Generics.M1
                                 GHC.Generics.C
                                 ('GHC.Generics.MetaCons
                                    "GL000246P1" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: (GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "GL000249P1"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000196P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1))
                              GHC.Generics.:+: ((GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "GL000248P1"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000244P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1)
                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000238P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000202P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1))))
           GHC.Generics.:+: (((GHC.Generics.M1
                                 GHC.Generics.C
                                 ('GHC.Generics.MetaCons
                                    "GL000234P1" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: (GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "GL000232P1"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000206P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1))
                              GHC.Generics.:+: ((GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "GL000240P1"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000236P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1)
                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000241P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000243P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1)))
                             GHC.Generics.:+: ((GHC.Generics.M1
                                                  GHC.Generics.C
                                                  ('GHC.Generics.MetaCons
                                                     "GL000242P1"
                                                     'GHC.Generics.PrefixI
                                                     'GHC.Types.False)
                                                  GHC.Generics.U1
                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000230P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000237P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1))
                                               GHC.Generics.:+: ((GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000233P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000204P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1)
                                                                 GHC.Generics.:+: (GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000198P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1
                                                                                   GHC.Generics.:+: GHC.Generics.M1
                                                                                                      GHC.Generics.C
                                                                                                      ('GHC.Generics.MetaCons
                                                                                                         "GL000208P1"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False)
                                                                                                      GHC.Generics.U1)))))
          GHC.Generics.:+: ((((GHC.Generics.M1
                                 GHC.Generics.C
                                 ('GHC.Generics.MetaCons
                                    "GL000191P1" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: (GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "GL000227P1"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000228P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1))
                              GHC.Generics.:+: ((GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "GL000214P1"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000221P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1)
                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000209P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000218P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1)))
                             GHC.Generics.:+: ((GHC.Generics.M1
                                                  GHC.Generics.C
                                                  ('GHC.Generics.MetaCons
                                                     "GL000220P1"
                                                     'GHC.Generics.PrefixI
                                                     'GHC.Types.False)
                                                  GHC.Generics.U1
                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000213P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000211P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1))
                                               GHC.Generics.:+: ((GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000199P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000217P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1)
                                                                 GHC.Generics.:+: (GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000216P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1
                                                                                   GHC.Generics.:+: GHC.Generics.M1
                                                                                                      GHC.Generics.C
                                                                                                      ('GHC.Generics.MetaCons
                                                                                                         "GL000215P1"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False)
                                                                                                      GHC.Generics.U1))))
                            GHC.Generics.:+: (((GHC.Generics.M1
                                                  GHC.Generics.C
                                                  ('GHC.Generics.MetaCons
                                                     "GL000205P1"
                                                     'GHC.Generics.PrefixI
                                                     'GHC.Types.False)
                                                  GHC.Generics.U1
                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000219P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000224P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1))
                                               GHC.Generics.:+: ((GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000223P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000195P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1)
                                                                 GHC.Generics.:+: (GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000212P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1
                                                                                   GHC.Generics.:+: GHC.Generics.M1
                                                                                                      GHC.Generics.C
                                                                                                      ('GHC.Generics.MetaCons
                                                                                                         "GL000222P1"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False)
                                                                                                      GHC.Generics.U1)))
                                              GHC.Generics.:+: ((GHC.Generics.M1
                                                                   GHC.Generics.C
                                                                   ('GHC.Generics.MetaCons
                                                                      "GL000200P1"
                                                                      'GHC.Generics.PrefixI
                                                                      'GHC.Types.False)
                                                                   GHC.Generics.U1
                                                                 GHC.Generics.:+: (GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000193P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1
                                                                                   GHC.Generics.:+: GHC.Generics.M1
                                                                                                      GHC.Generics.C
                                                                                                      ('GHC.Generics.MetaCons
                                                                                                         "GL000194P1"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False)
                                                                                                      GHC.Generics.U1))
                                                                GHC.Generics.:+: ((GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000225P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1
                                                                                   GHC.Generics.:+: GHC.Generics.M1
                                                                                                      GHC.Generics.C
                                                                                                      ('GHC.Generics.MetaCons
                                                                                                         "GL000192P1"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False)
                                                                                                      GHC.Generics.U1)
                                                                                  GHC.Generics.:+: (GHC.Generics.M1
                                                                                                      GHC.Generics.C
                                                                                                      ('GHC.Generics.MetaCons
                                                                                                         "NC_007605"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False)
                                                                                                      GHC.Generics.U1
                                                                                                    GHC.Generics.:+: GHC.Generics.M1
                                                                                                                       GHC.Generics.C
                                                                                                                       ('GHC.Generics.MetaCons
                                                                                                                          "NONE"
                                                                                                                          'GHC.Generics.PrefixI
                                                                                                                          'GHC.Types.False)
                                                                                                                       GHC.Generics.U1))))))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
3b7e185ad71459af8d347e25da054651
  $fGenericUChr_$cfrom :: Lib.UChr -> GHC.Generics.Rep Lib.UChr x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Lib.$fGenericUChr1
                  `cast`
                (forall (x :: <GHC.Types.*>_N).
                 <Lib.UChr>_R
                 ->_R Trans
                          (Sym (GHC.Generics.N:M1[0]
                                    <GHC.Generics.D>_P
                                    <'GHC.Generics.MetaData
                                       "UChr"
                                       "Lib"
                                       "primerclip-0.1.0.0-KtmdnGpJra4GypcvVGF2ng"
                                       'GHC.Types.False>_P
                                    <(((((GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "C1" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            GHC.Generics.U1
                                          GHC.Generics.:+: (GHC.Generics.M1
                                                              GHC.Generics.C
                                                              ('GHC.Generics.MetaCons
                                                                 "C2"
                                                                 'GHC.Generics.PrefixI
                                                                 'GHC.Types.False)
                                                              GHC.Generics.U1
                                                            GHC.Generics.:+: GHC.Generics.M1
                                                                               GHC.Generics.C
                                                                               ('GHC.Generics.MetaCons
                                                                                  "C3"
                                                                                  'GHC.Generics.PrefixI
                                                                                  'GHC.Types.False)
                                                                               GHC.Generics.U1))
                                         GHC.Generics.:+: (GHC.Generics.M1
                                                             GHC.Generics.C
                                                             ('GHC.Generics.MetaCons
                                                                "C4"
                                                                'GHC.Generics.PrefixI
                                                                'GHC.Types.False)
                                                             GHC.Generics.U1
                                                           GHC.Generics.:+: (GHC.Generics.M1
                                                                               GHC.Generics.C
                                                                               ('GHC.Generics.MetaCons
                                                                                  "C5"
                                                                                  'GHC.Generics.PrefixI
                                                                                  'GHC.Types.False)
                                                                               GHC.Generics.U1
                                                                             GHC.Generics.:+: GHC.Generics.M1
                                                                                                GHC.Generics.C
                                                                                                ('GHC.Generics.MetaCons
                                                                                                   "C6"
                                                                                                   'GHC.Generics.PrefixI
                                                                                                   'GHC.Types.False)
                                                                                                GHC.Generics.U1)))
                                        GHC.Generics.:+: ((GHC.Generics.M1
                                                             GHC.Generics.C
                                                             ('GHC.Generics.MetaCons
                                                                "C7"
                                                                'GHC.Generics.PrefixI
                                                                'GHC.Types.False)
                                                             GHC.Generics.U1
                                                           GHC.Generics.:+: (GHC.Generics.M1
                                                                               GHC.Generics.C
                                                                               ('GHC.Generics.MetaCons
                                                                                  "C8"
                                                                                  'GHC.Generics.PrefixI
                                                                                  'GHC.Types.False)
                                                                               GHC.Generics.U1
                                                                             GHC.Generics.:+: GHC.Generics.M1
                                                                                                GHC.Generics.C
                                                                                                ('GHC.Generics.MetaCons
                                                                                                   "C9"
                                                                                                   'GHC.Generics.PrefixI
                                                                                                   'GHC.Types.False)
                                                                                                GHC.Generics.U1))
                                                          GHC.Generics.:+: ((GHC.Generics.M1
                                                                               GHC.Generics.C
                                                                               ('GHC.Generics.MetaCons
                                                                                  "C10"
                                                                                  'GHC.Generics.PrefixI
                                                                                  'GHC.Types.False)
                                                                               GHC.Generics.U1
                                                                             GHC.Generics.:+: GHC.Generics.M1
                                                                                                GHC.Generics.C
                                                                                                ('GHC.Generics.MetaCons
                                                                                                   "C11"
                                                                                                   'GHC.Generics.PrefixI
                                                                                                   'GHC.Types.False)
                                                                                                GHC.Generics.U1)
                                                                            GHC.Generics.:+: (GHC.Generics.M1
                                                                                                GHC.Generics.C
                                                                                                ('GHC.Generics.MetaCons
                                                                                                   "C12"
                                                                                                   'GHC.Generics.PrefixI
                                                                                                   'GHC.Types.False)
                                                                                                GHC.Generics.U1
                                                                                              GHC.Generics.:+: GHC.Generics.M1
                                                                                                                 GHC.Generics.C
                                                                                                                 ('GHC.Generics.MetaCons
                                                                                                                    "C13"
                                                                                                                    'GHC.Generics.PrefixI
                                                                                                                    'GHC.Types.False)
                                                                                                                 GHC.Generics.U1))))
                                       GHC.Generics.:+: (((GHC.Generics.M1
                                                             GHC.Generics.C
                                                             ('GHC.Generics.MetaCons
                                                                "C14"
                                                                'GHC.Generics.PrefixI
                                                                'GHC.Types.False)
                                                             GHC.Generics.U1
                                                           GHC.Generics.:+: (GHC.Generics.M1
                                                                               GHC.Generics.C
                                                                               ('GHC.Generics.MetaCons
                                                                                  "C15"
                                                                                  'GHC.Generics.PrefixI
                                                                                  'GHC.Types.False)
                                                                               GHC.Generics.U1
                                                                             GHC.Generics.:+: GHC.Generics.M1
                                                                                                GHC.Generics.C
                                                                                                ('GHC.Generics.MetaCons
                                                                                                   "C16"
                                                                                                   'GHC.Generics.PrefixI
                                                                                                   'GHC.Types.False)
                                                                                                GHC.Generics.U1))
                                                          GHC.Generics.:+: ((GHC.Generics.M1
                                                                               GHC.Generics.C
                                                                               ('GHC.Generics.MetaCons
                                                                                  "C17"
                                                                                  'GHC.Generics.PrefixI
                                                                                  'GHC.Types.False)
                                                                               GHC.Generics.U1
                                                                             GHC.Generics.:+: GHC.Generics.M1
                                                                                                GHC.Generics.C
                                                                                                ('GHC.Generics.MetaCons
                                                                                                   "C18"
                                                                                                   'GHC.Generics.PrefixI
                                                                                                   'GHC.Types.False)
                                                                                                GHC.Generics.U1)
                                                                            GHC.Generics.:+: (GHC.Generics.M1
                                                                                                GHC.Generics.C
                                                                                                ('GHC.Generics.MetaCons
                                                                                                   "C19"
                                                                                                   'GHC.Generics.PrefixI
                                                                                                   'GHC.Types.False)
                                                                                                GHC.Generics.U1
                                                                                              GHC.Generics.:+: GHC.Generics.M1
                                                                                                                 GHC.Generics.C
                                                                                                                 ('GHC.Generics.MetaCons
                                                                                                                    "C20"
                                                                                                                    'GHC.Generics.PrefixI
                                                                                                                    'GHC.Types.False)
                                                                                                                 GHC.Generics.U1)))
                                                         GHC.Generics.:+: ((GHC.Generics.M1
                                                                              GHC.Generics.C
                                                                              ('GHC.Generics.MetaCons
                                                                                 "C21"
                                                                                 'GHC.Generics.PrefixI
                                                                                 'GHC.Types.False)
                                                                              GHC.Generics.U1
                                                                            GHC.Generics.:+: (GHC.Generics.M1
                                                                                                GHC.Generics.C
                                                                                                ('GHC.Generics.MetaCons
                                                                                                   "C22"
                                                                                                   'GHC.Generics.PrefixI
                                                                                                   'GHC.Types.False)
                                                                                                GHC.Generics.U1
                                                                                              GHC.Generics.:+: GHC.Generics.M1
                                                                                                                 GHC.Generics.C
                                                                                                                 ('GHC.Generics.MetaCons
                                                                                                                    "CX"
                                                                                                                    'GHC.Generics.PrefixI
                                                                                                                    'GHC.Types.False)
                                                                                                                 GHC.Generics.U1))
                                                                           GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                GHC.Generics.C
                                                                                                ('GHC.Generics.MetaCons
                                                                                                   "CY"
                                                                                                   'GHC.Generics.PrefixI
                                                                                                   'GHC.Types.False)
                                                                                                GHC.Generics.U1
                                                                                              GHC.Generics.:+: GHC.Generics.M1
                                                                                                                 GHC.Generics.C
                                                                                                                 ('GHC.Generics.MetaCons
                                                                                                                    "CMT"
                                                                                                                    'GHC.Generics.PrefixI
                                                                                                                    'GHC.Types.False)
                                                                                                                 GHC.Generics.U1)
                                                                                             GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                 GHC.Generics.C
                                                                                                                 ('GHC.Generics.MetaCons
                                                                                                                    "Chr1"
                                                                                                                    'GHC.Generics.PrefixI
                                                                                                                    'GHC.Types.False)
                                                                                                                 GHC.Generics.U1
                                                                                                               GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                  GHC.Generics.C
                                                                                                                                  ('GHC.Generics.MetaCons
                                                                                                                                     "Chr2"
                                                                                                                                     'GHC.Generics.PrefixI
                                                                                                                                     'GHC.Types.False)
                                                                                                                                  GHC.Generics.U1)))))
                                      GHC.Generics.:+: ((((GHC.Generics.M1
                                                             GHC.Generics.C
                                                             ('GHC.Generics.MetaCons
                                                                "Chr3"
                                                                'GHC.Generics.PrefixI
                                                                'GHC.Types.False)
                                                             GHC.Generics.U1
                                                           GHC.Generics.:+: (GHC.Generics.M1
                                                                               GHC.Generics.C
                                                                               ('GHC.Generics.MetaCons
                                                                                  "Chr4"
                                                                                  'GHC.Generics.PrefixI
                                                                                  'GHC.Types.False)
                                                                               GHC.Generics.U1
                                                                             GHC.Generics.:+: GHC.Generics.M1
                                                                                                GHC.Generics.C
                                                                                                ('GHC.Generics.MetaCons
                                                                                                   "Chr5"
                                                                                                   'GHC.Generics.PrefixI
                                                                                                   'GHC.Types.False)
                                                                                                GHC.Generics.U1))
                                                          GHC.Generics.:+: ((GHC.Generics.M1
                                                                               GHC.Generics.C
                                                                               ('GHC.Generics.MetaCons
                                                                                  "Chr6"
                                                                                  'GHC.Generics.PrefixI
                                                                                  'GHC.Types.False)
                                                                               GHC.Generics.U1
                                                                             GHC.Generics.:+: GHC.Generics.M1
                                                                                                GHC.Generics.C
                                                                                                ('GHC.Generics.MetaCons
                                                                                                   "Chr7"
                                                                                                   'GHC.Generics.PrefixI
                                                                                                   'GHC.Types.False)
                                                                                                GHC.Generics.U1)
                                                                            GHC.Generics.:+: (GHC.Generics.M1
                                                                                                GHC.Generics.C
                                                                                                ('GHC.Generics.MetaCons
                                                                                                   "Chr8"
                                                                                                   'GHC.Generics.PrefixI
                                                                                                   'GHC.Types.False)
                                                                                                GHC.Generics.U1
                                                                                              GHC.Generics.:+: GHC.Generics.M1
                                                                                                                 GHC.Generics.C
                                                                                                                 ('GHC.Generics.MetaCons
                                                                                                                    "Chr9"
                                                                                                                    'GHC.Generics.PrefixI
                                                                                                                    'GHC.Types.False)
                                                                                                                 GHC.Generics.U1)))
                                                         GHC.Generics.:+: ((GHC.Generics.M1
                                                                              GHC.Generics.C
                                                                              ('GHC.Generics.MetaCons
                                                                                 "Chr10"
                                                                                 'GHC.Generics.PrefixI
                                                                                 'GHC.Types.False)
                                                                              GHC.Generics.U1
                                                                            GHC.Generics.:+: (GHC.Generics.M1
                                                                                                GHC.Generics.C
                                                                                                ('GHC.Generics.MetaCons
                                                                                                   "Chr11"
                                                                                                   'GHC.Generics.PrefixI
                                                                                                   'GHC.Types.False)
                                                                                                GHC.Generics.U1
                                                                                              GHC.Generics.:+: GHC.Generics.M1
                                                                                                                 GHC.Generics.C
                                                                                                                 ('GHC.Generics.MetaCons
                                                                                                                    "Chr12"
                                                                                                                    'GHC.Generics.PrefixI
                                                                                                                    'GHC.Types.False)
                                                                                                                 GHC.Generics.U1))
                                                                           GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                GHC.Generics.C
                                                                                                ('GHC.Generics.MetaCons
                                                                                                   "Chr13"
                                                                                                   'GHC.Generics.PrefixI
                                                                                                   'GHC.Types.False)
                                                                                                GHC.Generics.U1
                                                                                              GHC.Generics.:+: GHC.Generics.M1
                                                                                                                 GHC.Generics.C
                                                                                                                 ('GHC.Generics.MetaCons
                                                                                                                    "Chr14"
                                                                                                                    'GHC.Generics.PrefixI
                                                                                                                    'GHC.Types.False)
                                                                                                                 GHC.Generics.U1)
                                                                                             GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                 GHC.Generics.C
                                                                                                                 ('GHC.Generics.MetaCons
                                                                                                                    "Chr15"
                                                                                                                    'GHC.Generics.PrefixI
                                                                                                                    'GHC.Types.False)
                                                                                                                 GHC.Generics.U1
                                                                                                               GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                  GHC.Generics.C
                                                                                                                                  ('GHC.Generics.MetaCons
                                                                                                                                     "Chr16"
                                                                                                                                     'GHC.Generics.PrefixI
                                                                                                                                     'GHC.Types.False)
                                                                                                                                  GHC.Generics.U1))))
                                                        GHC.Generics.:+: (((GHC.Generics.M1
                                                                              GHC.Generics.C
                                                                              ('GHC.Generics.MetaCons
                                                                                 "Chr17"
                                                                                 'GHC.Generics.PrefixI
                                                                                 'GHC.Types.False)
                                                                              GHC.Generics.U1
                                                                            GHC.Generics.:+: (GHC.Generics.M1
                                                                                                GHC.Generics.C
                                                                                                ('GHC.Generics.MetaCons
                                                                                                   "Chr18"
                                                                                                   'GHC.Generics.PrefixI
                                                                                                   'GHC.Types.False)
                                                                                                GHC.Generics.U1
                                                                                              GHC.Generics.:+: GHC.Generics.M1
                                                                                                                 GHC.Generics.C
                                                                                                                 ('GHC.Generics.MetaCons
                                                                                                                    "Chr19"
                                                                                                                    'GHC.Generics.PrefixI
                                                                                                                    'GHC.Types.False)
                                                                                                                 GHC.Generics.U1))
                                                                           GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                GHC.Generics.C
                                                                                                ('GHC.Generics.MetaCons
                                                                                                   "Chr20"
                                                                                                   'GHC.Generics.PrefixI
                                                                                                   'GHC.Types.False)
                                                                                                GHC.Generics.U1
                                                                                              GHC.Generics.:+: GHC.Generics.M1
                                                                                                                 GHC.Generics.C
                                                                                                                 ('GHC.Generics.MetaCons
                                                                                                                    "Chr21"
                                                                                                                    'GHC.Generics.PrefixI
                                                                                                                    'GHC.Types.False)
                                                                                                                 GHC.Generics.U1)
                                                                                             GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                 GHC.Generics.C
                                                                                                                 ('GHC.Generics.MetaCons
                                                                                                                    "Chr22"
                                                                                                                    'GHC.Generics.PrefixI
                                                                                                                    'GHC.Types.False)
                                                                                                                 GHC.Generics.U1
                                                                                                               GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                  GHC.Generics.C
                                                                                                                                  ('GHC.Generics.MetaCons
                                                                                                                                     "ChrX"
                                                                                                                                     'GHC.Generics.PrefixI
                                                                                                                                     'GHC.Types.False)
                                                                                                                                  GHC.Generics.U1)))
                                                                          GHC.Generics.:+: ((GHC.Generics.M1
                                                                                               GHC.Generics.C
                                                                                               ('GHC.Generics.MetaCons
                                                                                                  "ChrY"
                                                                                                  'GHC.Generics.PrefixI
                                                                                                  'GHC.Types.False)
                                                                                               GHC.Generics.U1
                                                                                             GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                 GHC.Generics.C
                                                                                                                 ('GHC.Generics.MetaCons
                                                                                                                    "ChrM"
                                                                                                                    'GHC.Generics.PrefixI
                                                                                                                    'GHC.Types.False)
                                                                                                                 GHC.Generics.U1
                                                                                                               GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                  GHC.Generics.C
                                                                                                                                  ('GHC.Generics.MetaCons
                                                                                                                                     "GL000207P1"
                                                                                                                                     'GHC.Generics.PrefixI
                                                                                                                                     'GHC.Types.False)
                                                                                                                                  GHC.Generics.U1))
                                                                                            GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                                 GHC.Generics.C
                                                                                                                 ('GHC.Generics.MetaCons
                                                                                                                    "GL000226P1"
                                                                                                                    'GHC.Generics.PrefixI
                                                                                                                    'GHC.Types.False)
                                                                                                                 GHC.Generics.U1
                                                                                                               GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                  GHC.Generics.C
                                                                                                                                  ('GHC.Generics.MetaCons
                                                                                                                                     "GL000229P1"
                                                                                                                                     'GHC.Generics.PrefixI
                                                                                                                                     'GHC.Types.False)
                                                                                                                                  GHC.Generics.U1)
                                                                                                              GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                                  GHC.Generics.C
                                                                                                                                  ('GHC.Generics.MetaCons
                                                                                                                                     "GL000231P1"
                                                                                                                                     'GHC.Generics.PrefixI
                                                                                                                                     'GHC.Types.False)
                                                                                                                                  GHC.Generics.U1
                                                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                                   GHC.Generics.C
                                                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                                                      "GL000210P1"
                                                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                                                      'GHC.Types.False)
                                                                                                                                                   GHC.Generics.U1))))))
                                     GHC.Generics.:+: (((((GHC.Generics.M1
                                                             GHC.Generics.C
                                                             ('GHC.Generics.MetaCons
                                                                "GL000239P1"
                                                                'GHC.Generics.PrefixI
                                                                'GHC.Types.False)
                                                             GHC.Generics.U1
                                                           GHC.Generics.:+: (GHC.Generics.M1
                                                                               GHC.Generics.C
                                                                               ('GHC.Generics.MetaCons
                                                                                  "GL000235P1"
                                                                                  'GHC.Generics.PrefixI
                                                                                  'GHC.Types.False)
                                                                               GHC.Generics.U1
                                                                             GHC.Generics.:+: GHC.Generics.M1
                                                                                                GHC.Generics.C
                                                                                                ('GHC.Generics.MetaCons
                                                                                                   "GL000201P1"
                                                                                                   'GHC.Generics.PrefixI
                                                                                                   'GHC.Types.False)
                                                                                                GHC.Generics.U1))
                                                          GHC.Generics.:+: ((GHC.Generics.M1
                                                                               GHC.Generics.C
                                                                               ('GHC.Generics.MetaCons
                                                                                  "GL000247P1"
                                                                                  'GHC.Generics.PrefixI
                                                                                  'GHC.Types.False)
                                                                               GHC.Generics.U1
                                                                             GHC.Generics.:+: GHC.Generics.M1
                                                                                                GHC.Generics.C
                                                                                                ('GHC.Generics.MetaCons
                                                                                                   "GL000245P1"
                                                                                                   'GHC.Generics.PrefixI
                                                                                                   'GHC.Types.False)
                                                                                                GHC.Generics.U1)
                                                                            GHC.Generics.:+: (GHC.Generics.M1
                                                                                                GHC.Generics.C
                                                                                                ('GHC.Generics.MetaCons
                                                                                                   "GL000197P1"
                                                                                                   'GHC.Generics.PrefixI
                                                                                                   'GHC.Types.False)
                                                                                                GHC.Generics.U1
                                                                                              GHC.Generics.:+: GHC.Generics.M1
                                                                                                                 GHC.Generics.C
                                                                                                                 ('GHC.Generics.MetaCons
                                                                                                                    "GL000203P1"
                                                                                                                    'GHC.Generics.PrefixI
                                                                                                                    'GHC.Types.False)
                                                                                                                 GHC.Generics.U1)))
                                                         GHC.Generics.:+: ((GHC.Generics.M1
                                                                              GHC.Generics.C
                                                                              ('GHC.Generics.MetaCons
                                                                                 "GL000246P1"
                                                                                 'GHC.Generics.PrefixI
                                                                                 'GHC.Types.False)
                                                                              GHC.Generics.U1
                                                                            GHC.Generics.:+: (GHC.Generics.M1
                                                                                                GHC.Generics.C
                                                                                                ('GHC.Generics.MetaCons
                                                                                                   "GL000249P1"
                                                                                                   'GHC.Generics.PrefixI
                                                                                                   'GHC.Types.False)
                                                                                                GHC.Generics.U1
                                                                                              GHC.Generics.:+: GHC.Generics.M1
                                                                                                                 GHC.Generics.C
                                                                                                                 ('GHC.Generics.MetaCons
                                                                                                                    "GL000196P1"
                                                                                                                    'GHC.Generics.PrefixI
                                                                                                                    'GHC.Types.False)
                                                                                                                 GHC.Generics.U1))
                                                                           GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                GHC.Generics.C
                                                                                                ('GHC.Generics.MetaCons
                                                                                                   "GL000248P1"
                                                                                                   'GHC.Generics.PrefixI
                                                                                                   'GHC.Types.False)
                                                                                                GHC.Generics.U1
                                                                                              GHC.Generics.:+: GHC.Generics.M1
                                                                                                                 GHC.Generics.C
                                                                                                                 ('GHC.Generics.MetaCons
                                                                                                                    "GL000244P1"
                                                                                                                    'GHC.Generics.PrefixI
                                                                                                                    'GHC.Types.False)
                                                                                                                 GHC.Generics.U1)
                                                                                             GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                 GHC.Generics.C
                                                                                                                 ('GHC.Generics.MetaCons
                                                                                                                    "GL000238P1"
                                                                                                                    'GHC.Generics.PrefixI
                                                                                                                    'GHC.Types.False)
                                                                                                                 GHC.Generics.U1
                                                                                                               GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                  GHC.Generics.C
                                                                                                                                  ('GHC.Generics.MetaCons
                                                                                                                                     "GL000202P1"
                                                                                                                                     'GHC.Generics.PrefixI
                                                                                                                                     'GHC.Types.False)
                                                                                                                                  GHC.Generics.U1))))
                                                        GHC.Generics.:+: (((GHC.Generics.M1
                                                                              GHC.Generics.C
                                                                              ('GHC.Generics.MetaCons
                                                                                 "GL000234P1"
                                                                                 'GHC.Generics.PrefixI
                                                                                 'GHC.Types.False)
                                                                              GHC.Generics.U1
                                                                            GHC.Generics.:+: (GHC.Generics.M1
                                                                                                GHC.Generics.C
                                                                                                ('GHC.Generics.MetaCons
                                                                                                   "GL000232P1"
                                                                                                   'GHC.Generics.PrefixI
                                                                                                   'GHC.Types.False)
                                                                                                GHC.Generics.U1
                                                                                              GHC.Generics.:+: GHC.Generics.M1
                                                                                                                 GHC.Generics.C
                                                                                                                 ('GHC.Generics.MetaCons
                                                                                                                    "GL000206P1"
                                                                                                                    'GHC.Generics.PrefixI
                                                                                                                    'GHC.Types.False)
                                                                                                                 GHC.Generics.U1))
                                                                           GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                GHC.Generics.C
                                                                                                ('GHC.Generics.MetaCons
                                                                                                   "GL000240P1"
                                                                                                   'GHC.Generics.PrefixI
                                                                                                   'GHC.Types.False)
                                                                                                GHC.Generics.U1
                                                                                              GHC.Generics.:+: GHC.Generics.M1
                                                                                                                 GHC.Generics.C
                                                                                                                 ('GHC.Generics.MetaCons
                                                                                                                    "GL000236P1"
                                                                                                                    'GHC.Generics.PrefixI
                                                                                                                    'GHC.Types.False)
                                                                                                                 GHC.Generics.U1)
                                                                                             GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                 GHC.Generics.C
                                                                                                                 ('GHC.Generics.MetaCons
                                                                                                                    "GL000241P1"
                                                                                                                    'GHC.Generics.PrefixI
                                                                                                                    'GHC.Types.False)
                                                                                                                 GHC.Generics.U1
                                                                                                               GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                  GHC.Generics.C
                                                                                                                                  ('GHC.Generics.MetaCons
                                                                                                                                     "GL000243P1"
                                                                                                                                     'GHC.Generics.PrefixI
                                                                                                                                     'GHC.Types.False)
                                                                                                                                  GHC.Generics.U1)))
                                                                          GHC.Generics.:+: ((GHC.Generics.M1
                                                                                               GHC.Generics.C
                                                                                               ('GHC.Generics.MetaCons
                                                                                                  "GL000242P1"
                                                                                                  'GHC.Generics.PrefixI
                                                                                                  'GHC.Types.False)
                                                                                               GHC.Generics.U1
                                                                                             GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                 GHC.Generics.C
                                                                                                                 ('GHC.Generics.MetaCons
                                                                                                                    "GL000230P1"
                                                                                                                    'GHC.Generics.PrefixI
                                                                                                                    'GHC.Types.False)
                                                                                                                 GHC.Generics.U1
                                                                                                               GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                  GHC.Generics.C
                                                                                                                                  ('GHC.Generics.MetaCons
                                                                                                                                     "GL000237P1"
                                                                                                                                     'GHC.Generics.PrefixI
                                                                                                                                     'GHC.Types.False)
                                                                                                                                  GHC.Generics.U1))
                                                                                            GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                                 GHC.Generics.C
                                                                                                                 ('GHC.Generics.MetaCons
                                                                                                                    "GL000233P1"
                                                                                                                    'GHC.Generics.PrefixI
                                                                                                                    'GHC.Types.False)
                                                                                                                 GHC.Generics.U1
                                                                                                               GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                  GHC.Generics.C
                                                                                                                                  ('GHC.Generics.MetaCons
                                                                                                                                     "GL000204P1"
                                                                                                                                     'GHC.Generics.PrefixI
                                                                                                                                     'GHC.Types.False)
                                                                                                                                  GHC.Generics.U1)
                                                                                                              GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                                  GHC.Generics.C
                                                                                                                                  ('GHC.Generics.MetaCons
                                                                                                                                     "GL000198P1"
                                                                                                                                     'GHC.Generics.PrefixI
                                                                                                                                     'GHC.Types.False)
                                                                                                                                  GHC.Generics.U1
                                                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                                   GHC.Generics.C
                                                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                                                      "GL000208P1"
                                                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                                                      'GHC.Types.False)
                                                                                                                                                   GHC.Generics.U1)))))
                                                       GHC.Generics.:+: ((((GHC.Generics.M1
                                                                              GHC.Generics.C
                                                                              ('GHC.Generics.MetaCons
                                                                                 "GL000191P1"
                                                                                 'GHC.Generics.PrefixI
                                                                                 'GHC.Types.False)
                                                                              GHC.Generics.U1
                                                                            GHC.Generics.:+: (GHC.Generics.M1
                                                                                                GHC.Generics.C
                                                                                                ('GHC.Generics.MetaCons
                                                                                                   "GL000227P1"
                                                                                                   'GHC.Generics.PrefixI
                                                                                                   'GHC.Types.False)
                                                                                                GHC.Generics.U1
                                                                                              GHC.Generics.:+: GHC.Generics.M1
                                                                                                                 GHC.Generics.C
                                                                                                                 ('GHC.Generics.MetaCons
                                                                                                                    "GL000228P1"
                                                                                                                    'GHC.Generics.PrefixI
                                                                                                                    'GHC.Types.False)
                                                                                                                 GHC.Generics.U1))
                                                                           GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                GHC.Generics.C
                                                                                                ('GHC.Generics.MetaCons
                                                                                                   "GL000214P1"
                                                                                                   'GHC.Generics.PrefixI
                                                                                                   'GHC.Types.False)
                                                                                                GHC.Generics.U1
                                                                                              GHC.Generics.:+: GHC.Generics.M1
                                                                                                                 GHC.Generics.C
                                                                                                                 ('GHC.Generics.MetaCons
                                                                                                                    "GL000221P1"
                                                                                                                    'GHC.Generics.PrefixI
                                                                                                                    'GHC.Types.False)
                                                                                                                 GHC.Generics.U1)
                                                                                             GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                 GHC.Generics.C
                                                                                                                 ('GHC.Generics.MetaCons
                                                                                                                    "GL000209P1"
                                                                                                                    'GHC.Generics.PrefixI
                                                                                                                    'GHC.Types.False)
                                                                                                                 GHC.Generics.U1
                                                                                                               GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                  GHC.Generics.C
                                                                                                                                  ('GHC.Generics.MetaCons
                                                                                                                                     "GL000218P1"
                                                                                                                                     'GHC.Generics.PrefixI
                                                                                                                                     'GHC.Types.False)
                                                                                                                                  GHC.Generics.U1)))
                                                                          GHC.Generics.:+: ((GHC.Generics.M1
                                                                                               GHC.Generics.C
                                                                                               ('GHC.Generics.MetaCons
                                                                                                  "GL000220P1"
                                                                                                  'GHC.Generics.PrefixI
                                                                                                  'GHC.Types.False)
                                                                                               GHC.Generics.U1
                                                                                             GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                 GHC.Generics.C
                                                                                                                 ('GHC.Generics.MetaCons
                                                                                                                    "GL000213P1"
                                                                                                                    'GHC.Generics.PrefixI
                                                                                                                    'GHC.Types.False)
                                                                                                                 GHC.Generics.U1
                                                                                                               GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                  GHC.Generics.C
                                                                                                                                  ('GHC.Generics.MetaCons
                                                                                                                                     "GL000211P1"
                                                                                                                                     'GHC.Generics.PrefixI
                                                                                                                                     'GHC.Types.False)
                                                                                                                                  GHC.Generics.U1))
                                                                                            GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                                 GHC.Generics.C
                                                                                                                 ('GHC.Generics.MetaCons
                                                                                                                    "GL000199P1"
                                                                                                                    'GHC.Generics.PrefixI
                                                                                                                    'GHC.Types.False)
                                                                                                                 GHC.Generics.U1
                                                                                                               GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                  GHC.Generics.C
                                                                                                                                  ('GHC.Generics.MetaCons
                                                                                                                                     "GL000217P1"
                                                                                                                                     'GHC.Generics.PrefixI
                                                                                                                                     'GHC.Types.False)
                                                                                                                                  GHC.Generics.U1)
                                                                                                              GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                                  GHC.Generics.C
                                                                                                                                  ('GHC.Generics.MetaCons
                                                                                                                                     "GL000216P1"
                                                                                                                                     'GHC.Generics.PrefixI
                                                                                                                                     'GHC.Types.False)
                                                                                                                                  GHC.Generics.U1
                                                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                                   GHC.Generics.C
                                                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                                                      "GL000215P1"
                                                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                                                      'GHC.Types.False)
                                                                                                                                                   GHC.Generics.U1))))
                                                                         GHC.Generics.:+: (((GHC.Generics.M1
                                                                                               GHC.Generics.C
                                                                                               ('GHC.Generics.MetaCons
                                                                                                  "GL000205P1"
                                                                                                  'GHC.Generics.PrefixI
                                                                                                  'GHC.Types.False)
                                                                                               GHC.Generics.U1
                                                                                             GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                 GHC.Generics.C
                                                                                                                 ('GHC.Generics.MetaCons
                                                                                                                    "GL000219P1"
                                                                                                                    'GHC.Generics.PrefixI
                                                                                                                    'GHC.Types.False)
                                                                                                                 GHC.Generics.U1
                                                                                                               GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                  GHC.Generics.C
                                                                                                                                  ('GHC.Generics.MetaCons
                                                                                                                                     "GL000224P1"
                                                                                                                                     'GHC.Generics.PrefixI
                                                                                                                                     'GHC.Types.False)
                                                                                                                                  GHC.Generics.U1))
                                                                                            GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                                 GHC.Generics.C
                                                                                                                 ('GHC.Generics.MetaCons
                                                                                                                    "GL000223P1"
                                                                                                                    'GHC.Generics.PrefixI
                                                                                                                    'GHC.Types.False)
                                                                                                                 GHC.Generics.U1
                                                                                                               GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                  GHC.Generics.C
                                                                                                                                  ('GHC.Generics.MetaCons
                                                                                                                                     "GL000195P1"
                                                                                                                                     'GHC.Generics.PrefixI
                                                                                                                                     'GHC.Types.False)
                                                                                                                                  GHC.Generics.U1)
                                                                                                              GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                                  GHC.Generics.C
                                                                                                                                  ('GHC.Generics.MetaCons
                                                                                                                                     "GL000212P1"
                                                                                                                                     'GHC.Generics.PrefixI
                                                                                                                                     'GHC.Types.False)
                                                                                                                                  GHC.Generics.U1
                                                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                                   GHC.Generics.C
                                                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                                                      "GL000222P1"
                                                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                                                      'GHC.Types.False)
                                                                                                                                                   GHC.Generics.U1)))
                                                                                           GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                                GHC.Generics.C
                                                                                                                ('GHC.Generics.MetaCons
                                                                                                                   "GL000200P1"
                                                                                                                   'GHC.Generics.PrefixI
                                                                                                                   'GHC.Types.False)
                                                                                                                GHC.Generics.U1
                                                                                                              GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                                  GHC.Generics.C
                                                                                                                                  ('GHC.Generics.MetaCons
                                                                                                                                     "GL000193P1"
                                                                                                                                     'GHC.Generics.PrefixI
                                                                                                                                     'GHC.Types.False)
                                                                                                                                  GHC.Generics.U1
                                                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                                   GHC.Generics.C
                                                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                                                      "GL000194P1"
                                                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                                                      'GHC.Types.False)
                                                                                                                                                   GHC.Generics.U1))
                                                                                                             GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                                                  GHC.Generics.C
                                                                                                                                  ('GHC.Generics.MetaCons
                                                                                                                                     "GL000225P1"
                                                                                                                                     'GHC.Generics.PrefixI
                                                                                                                                     'GHC.Types.False)
                                                                                                                                  GHC.Generics.U1
                                                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                                   GHC.Generics.C
                                                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                                                      "GL000192P1"
                                                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                                                      'GHC.Types.False)
                                                                                                                                                   GHC.Generics.U1)
                                                                                                                               GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                                                   GHC.Generics.C
                                                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                                                      "NC_007605"
                                                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                                                      'GHC.Types.False)
                                                                                                                                                   GHC.Generics.U1
                                                                                                                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                                                    GHC.Generics.C
                                                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                                                       "NONE"
                                                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                                                       'GHC.Types.False)
                                                                                                                                                                    GHC.Generics.U1))))))>_R))
                          (Sub (Sym (Lib.Rep_UChr[0]))) <x>_N) -}
3b7e185ad71459af8d347e25da054651
  $fGenericUChr_$cto :: GHC.Generics.Rep Lib.UChr x -> Lib.UChr
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
f671dfe83494b300f9d572c68e554e5e
  $fOrdAlignedRead :: GHC.Classes.Ord Lib.AlignedRead
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lib.AlignedRead
                  Lib.$fEqAlignedRead
                  Lib.$fOrdAlignedRead_$ccompare
                  Lib.$fOrdAlignedRead_$c<
                  Lib.$fOrdAlignedRead_$c<=
                  Lib.$fOrdAlignedRead_$c>
                  Lib.$fOrdAlignedRead_$c>=
                  Lib.$fOrdAlignedRead_$cmax
                  Lib.$fOrdAlignedRead_$cmin -}
f671dfe83494b300f9d572c68e554e5e
  $fOrdAlignedRead_$c< ::
    Lib.AlignedRead -> Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,1*U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,1*U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.AlignedRead) (y :: Lib.AlignedRead) ->
                 case Lib.$fOrdAlignedRead_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True }) -}
f671dfe83494b300f9d572c68e554e5e
  $fOrdAlignedRead_$c<= ::
    Lib.AlignedRead -> Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,1*U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,1*U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.AlignedRead) (y :: Lib.AlignedRead) ->
                 case Lib.$fOrdAlignedRead_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False }) -}
f671dfe83494b300f9d572c68e554e5e
  $fOrdAlignedRead_$c> ::
    Lib.AlignedRead -> Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,1*U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,1*U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.AlignedRead) (y :: Lib.AlignedRead) ->
                 case Lib.$fOrdAlignedRead_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True }) -}
f671dfe83494b300f9d572c68e554e5e
  $fOrdAlignedRead_$c>= ::
    Lib.AlignedRead -> Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,1*U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,1*U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.AlignedRead) (y :: Lib.AlignedRead) ->
                 case Lib.$fOrdAlignedRead_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False }) -}
f671dfe83494b300f9d572c68e554e5e
  $fOrdAlignedRead_$ccompare ::
    Lib.AlignedRead -> Lib.AlignedRead -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,1*U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,1*U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.AlignedRead) (w1 :: Lib.AlignedRead) ->
                 case w of ww { Lib.AlignedRead ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ->
                 case w1 of ww31 { Lib.AlignedRead ww32 ww33 ww34 ww35 ww36 ww37 ww38 ww39 ww40 ww41 ww42 ww43 ww44 ww45 ww46 ww47 ww48 ww49 ww50 ww51 ww52 ww53 ww54 ww55 ww56 ww57 ww58 ww59 ww60 ww61 ->
                 Lib.$w$ccompare ww3 ww4 ww6 ww34 ww35 ww37 } }) -}
f671dfe83494b300f9d572c68e554e5e
  $fOrdAlignedRead_$cmax ::
    Lib.AlignedRead -> Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLL),U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)><S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLL),U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.AlignedRead) (y :: Lib.AlignedRead) ->
                 case Lib.$fOrdAlignedRead_$ccompare x y of wild {
                   DEFAULT -> y GHC.Types.GT -> x }) -}
f671dfe83494b300f9d572c68e554e5e
  $fOrdAlignedRead_$cmin ::
    Lib.AlignedRead -> Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLL),U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)><S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLL),U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.AlignedRead) (y :: Lib.AlignedRead) ->
                 case Lib.$fOrdAlignedRead_$ccompare x y of wild {
                   DEFAULT -> x GHC.Types.GT -> y }) -}
fccf42ae6afd19ae2c265e24a08011ff
  $fOrdBedRecord :: GHC.Classes.Ord Lib.BedRecord
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lib.BedRecord
                  Lib.$fEqBedRecord
                  Lib.$fOrdBedRecord_$ccompare
                  Lib.$fOrdBedRecord_$c<
                  Lib.$fOrdBedRecord_$c<=
                  Lib.$fOrdBedRecord_$c>
                  Lib.$fOrdBedRecord_$c>=
                  Lib.$fOrdBedRecord_$cmax
                  Lib.$fOrdBedRecord_$cmin -}
fccf42ae6afd19ae2c265e24a08011ff
  $fOrdBedRecord_$c< ::
    Lib.BedRecord -> Lib.BedRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(1*U,1*U,A,A)><S(SLLL),1*U(1*U,1*U,A,A)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.BedRecord) (w1 :: Lib.BedRecord) ->
                 case w of ww { Lib.BedRecord ww1 ww2 ww3 ww4 ->
                 case w1 of ww5 { Lib.BedRecord ww6 ww7 ww8 ww9 ->
                 Lib.$w$c< ww1 ww2 ww6 ww7 } }) -}
fccf42ae6afd19ae2c265e24a08011ff
  $fOrdBedRecord_$c<= ::
    Lib.BedRecord -> Lib.BedRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(1*U,1*U,A,A)><S(SLLL),1*U(1*U,1*U,A,A)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.BedRecord) (w1 :: Lib.BedRecord) ->
                 case w of ww { Lib.BedRecord ww1 ww2 ww3 ww4 ->
                 case w1 of ww5 { Lib.BedRecord ww6 ww7 ww8 ww9 ->
                 Lib.$w$c<= ww1 ww2 ww6 ww7 } }) -}
fccf42ae6afd19ae2c265e24a08011ff
  $fOrdBedRecord_$c> ::
    Lib.BedRecord -> Lib.BedRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(1*U,1*U,A,A)><S(SLLL),1*U(1*U,1*U,A,A)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.BedRecord) (w1 :: Lib.BedRecord) ->
                 case w of ww { Lib.BedRecord ww1 ww2 ww3 ww4 ->
                 case w1 of ww5 { Lib.BedRecord ww6 ww7 ww8 ww9 ->
                 Lib.$w$c> ww1 ww2 ww6 ww7 } }) -}
fccf42ae6afd19ae2c265e24a08011ff
  $fOrdBedRecord_$c>= ::
    Lib.BedRecord -> Lib.BedRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(1*U,1*U,A,A)><S(SLLL),1*U(1*U,1*U,A,A)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.BedRecord) (w1 :: Lib.BedRecord) ->
                 case w of ww { Lib.BedRecord ww1 ww2 ww3 ww4 ->
                 case w1 of ww5 { Lib.BedRecord ww6 ww7 ww8 ww9 ->
                 Lib.$w$c>= ww1 ww2 ww6 ww7 } }) -}
fccf42ae6afd19ae2c265e24a08011ff
  $fOrdBedRecord_$ccompare ::
    Lib.BedRecord -> Lib.BedRecord -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(1*U,1*U,A,A)><S(SLLL),1*U(1*U,1*U,A,A)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.BedRecord) (w1 :: Lib.BedRecord) ->
                 case w of ww { Lib.BedRecord ww1 ww2 ww3 ww4 ->
                 case w1 of ww5 { Lib.BedRecord ww6 ww7 ww8 ww9 ->
                 Lib.$w$ccompare1 ww1 ww2 ww6 ww7 } }) -}
fccf42ae6afd19ae2c265e24a08011ff
  $fOrdBedRecord_$cmax ::
    Lib.BedRecord -> Lib.BedRecord -> Lib.BedRecord
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(U,U,U,U)><S(SLLL),1*U(U,U,U,U)>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.BedRecord) (w1 :: Lib.BedRecord) ->
                 case w of ww { Lib.BedRecord ww1 ww2 ww3 ww4 ->
                 case w1 of ww5 { Lib.BedRecord ww6 ww7 ww8 ww9 ->
                 let {
                   b# :: GHC.Prim.Int# = GHC.Prim.dataToTag# @ Lib.UChr ww6
                 } in
                 let {
                   a# :: GHC.Prim.Int# = GHC.Prim.dataToTag# @ Lib.UChr ww1
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> Lib.BedRecord ww1 ww2 ww3 ww4
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww2 ww7 of wild2 {
                             DEFAULT -> Lib.BedRecord ww6 ww7 ww8 ww9
                             GHC.Types.GT -> Lib.BedRecord ww1 ww2 ww3 ww4 } }
                   GHC.Types.True -> Lib.BedRecord ww6 ww7 ww8 ww9 } } }) -}
fccf42ae6afd19ae2c265e24a08011ff
  $fOrdBedRecord_$cmin ::
    Lib.BedRecord -> Lib.BedRecord -> Lib.BedRecord
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(U,U,U,U)><S(SLLL),1*U(U,U,U,U)>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.BedRecord) (w1 :: Lib.BedRecord) ->
                 case w of ww { Lib.BedRecord ww1 ww2 ww3 ww4 ->
                 case w1 of ww5 { Lib.BedRecord ww6 ww7 ww8 ww9 ->
                 let {
                   b# :: GHC.Prim.Int# = GHC.Prim.dataToTag# @ Lib.UChr ww6
                 } in
                 let {
                   a# :: GHC.Prim.Int# = GHC.Prim.dataToTag# @ Lib.UChr ww1
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> Lib.BedRecord ww6 ww7 ww8 ww9
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww2 ww7 of wild2 {
                             DEFAULT -> Lib.BedRecord ww1 ww2 ww3 ww4
                             GHC.Types.GT -> Lib.BedRecord ww6 ww7 ww8 ww9 } }
                   GHC.Types.True -> Lib.BedRecord ww1 ww2 ww3 ww4 } } }) -}
729a34be9738ea3507254144802cc56b
  $fOrdChromNameFormat :: GHC.Classes.Ord Lib.ChromNameFormat
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lib.ChromNameFormat
                  Lib.$fEqChromNameFormat
                  Lib.$fOrdChromNameFormat_$ccompare
                  Lib.$fOrdChromNameFormat_$c<
                  Lib.$fOrdChromNameFormat_$c<=
                  Lib.$fOrdChromNameFormat_$c>
                  Lib.$fOrdChromNameFormat_$c>=
                  Lib.$fOrdChromNameFormat_$cmax
                  Lib.$fOrdChromNameFormat_$cmin -}
729a34be9738ea3507254144802cc56b
  $fOrdChromNameFormat_$c< ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.ChromNameFormat) (b :: Lib.ChromNameFormat) ->
                 case a of wild {
                   Lib.GRC
                   -> case b of wild1 {
                        Lib.GRC -> GHC.Types.False Lib.UCSC -> GHC.Types.True }
                   Lib.UCSC -> case b of wild1 { DEFAULT -> GHC.Types.False } }) -}
729a34be9738ea3507254144802cc56b
  $fOrdChromNameFormat_$c<= ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.ChromNameFormat) (b :: Lib.ChromNameFormat) ->
                 case a of wild {
                   Lib.GRC -> case b of wild1 { DEFAULT -> GHC.Types.True }
                   Lib.UCSC
                   -> case b of wild1 {
                        Lib.GRC -> GHC.Types.False Lib.UCSC -> GHC.Types.True } }) -}
729a34be9738ea3507254144802cc56b
  $fOrdChromNameFormat_$c> ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.ChromNameFormat) (b :: Lib.ChromNameFormat) ->
                 case a of wild {
                   Lib.GRC -> case b of wild1 { DEFAULT -> GHC.Types.False }
                   Lib.UCSC
                   -> case b of wild1 {
                        Lib.GRC -> GHC.Types.True Lib.UCSC -> GHC.Types.False } }) -}
729a34be9738ea3507254144802cc56b
  $fOrdChromNameFormat_$c>= ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.ChromNameFormat) (b :: Lib.ChromNameFormat) ->
                 case a of wild {
                   Lib.GRC
                   -> case b of wild1 {
                        Lib.GRC -> GHC.Types.True Lib.UCSC -> GHC.Types.False }
                   Lib.UCSC -> case b of wild1 { DEFAULT -> GHC.Types.True } }) -}
729a34be9738ea3507254144802cc56b
  $fOrdChromNameFormat_$ccompare ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.ChromNameFormat) (b :: Lib.ChromNameFormat) ->
                 case a of wild {
                   Lib.GRC
                   -> case b of wild1 {
                        Lib.GRC -> GHC.Types.EQ Lib.UCSC -> GHC.Types.LT }
                   Lib.UCSC
                   -> case b of wild1 {
                        Lib.GRC -> GHC.Types.GT Lib.UCSC -> GHC.Types.EQ } }) -}
729a34be9738ea3507254144802cc56b
  $fOrdChromNameFormat_$cmax ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat -> Lib.ChromNameFormat
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.ChromNameFormat) (y :: Lib.ChromNameFormat) ->
                 case x of wild {
                   Lib.GRC -> y
                   Lib.UCSC -> case y of wild1 { DEFAULT -> Lib.UCSC } }) -}
729a34be9738ea3507254144802cc56b
  $fOrdChromNameFormat_$cmin ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat -> Lib.ChromNameFormat
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.ChromNameFormat) (y :: Lib.ChromNameFormat) ->
                 case x of wild {
                   Lib.GRC -> case y of wild1 { DEFAULT -> Lib.GRC }
                   Lib.UCSC -> y }) -}
d774c24178fe50c0a3a4a367dd390465
  $fOrdMasterRecord :: GHC.Classes.Ord Lib.MasterRecord
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lib.MasterRecord
                  Lib.$fEqMasterRecord
                  Lib.$fOrdMasterRecord_$ccompare
                  Lib.$fOrdMasterRecord_$c<
                  Lib.$fOrdMasterRecord_$c<=
                  Lib.$fOrdMasterRecord_$c>
                  Lib.$fOrdMasterRecord_$c>=
                  Lib.$fOrdMasterRecord_$cmax
                  Lib.$fOrdMasterRecord_$cmin -}
d774c24178fe50c0a3a4a367dd390465
  $fOrdMasterRecord_$c< ::
    Lib.MasterRecord -> Lib.MasterRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(1*U,1*U,1*U,A,A,A,A,A,A,A,A,A)><S(SLLLLLLLLLLL),1*U(1*U,1*U,1*U,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.MasterRecord) (y :: Lib.MasterRecord) ->
                 case Lib.$fOrdMasterRecord_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True }) -}
d774c24178fe50c0a3a4a367dd390465
  $fOrdMasterRecord_$c<= ::
    Lib.MasterRecord -> Lib.MasterRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(1*U,1*U,1*U,A,A,A,A,A,A,A,A,A)><S(SLLLLLLLLLLL),1*U(1*U,1*U,1*U,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.MasterRecord) (y :: Lib.MasterRecord) ->
                 case Lib.$fOrdMasterRecord_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False }) -}
d774c24178fe50c0a3a4a367dd390465
  $fOrdMasterRecord_$c> ::
    Lib.MasterRecord -> Lib.MasterRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(1*U,1*U,1*U,A,A,A,A,A,A,A,A,A)><S(SLLLLLLLLLLL),1*U(1*U,1*U,1*U,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.MasterRecord) (y :: Lib.MasterRecord) ->
                 case Lib.$fOrdMasterRecord_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True }) -}
d774c24178fe50c0a3a4a367dd390465
  $fOrdMasterRecord_$c>= ::
    Lib.MasterRecord -> Lib.MasterRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(1*U,1*U,1*U,A,A,A,A,A,A,A,A,A)><S(SLLLLLLLLLLL),1*U(1*U,1*U,1*U,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.MasterRecord) (y :: Lib.MasterRecord) ->
                 case Lib.$fOrdMasterRecord_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False }) -}
d774c24178fe50c0a3a4a367dd390465
  $fOrdMasterRecord_$ccompare ::
    Lib.MasterRecord -> Lib.MasterRecord -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(1*U,1*U,1*U,A,A,A,A,A,A,A,A,A)><S(SLLLLLLLLLLL),1*U(1*U,1*U,1*U,A,A,A,A,A,A,A,A,A)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.MasterRecord) (w1 :: Lib.MasterRecord) ->
                 case w of ww { Lib.MasterRecord ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ->
                 case w1 of ww13 { Lib.MasterRecord ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ->
                 Lib.$w$ccompare2 ww1 ww2 ww3 ww14 ww15 ww16 } }) -}
d774c24178fe50c0a3a4a367dd390465
  $fOrdMasterRecord_$cmax ::
    Lib.MasterRecord -> Lib.MasterRecord -> Lib.MasterRecord
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),U(U,U,U,U,U,U,U,U,U,U,U,U)><S(SLLLLLLLLLLL),U(U,U,U,U,U,U,U,U,U,U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.MasterRecord) (y :: Lib.MasterRecord) ->
                 case Lib.$fOrdMasterRecord_$ccompare x y of wild {
                   DEFAULT -> y GHC.Types.GT -> x }) -}
d774c24178fe50c0a3a4a367dd390465
  $fOrdMasterRecord_$cmin ::
    Lib.MasterRecord -> Lib.MasterRecord -> Lib.MasterRecord
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),U(U,U,U,U,U,U,U,U,U,U,U,U)><S(SLLLLLLLLLLL),U(U,U,U,U,U,U,U,U,U,U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.MasterRecord) (y :: Lib.MasterRecord) ->
                 case Lib.$fOrdMasterRecord_$ccompare x y of wild {
                   DEFAULT -> x GHC.Types.GT -> y }) -}
b40c42e0053503f3e12b12c8853d8620
  $fOrdMidFamily :: GHC.Classes.Ord Lib.MidFamily
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lib.MidFamily
                  Lib.$fEqMidFamily
                  Lib.$fOrdMidFamily_$ccompare
                  Lib.$fOrdMidFamily_$c<
                  Lib.$fOrdMidFamily_$c<=
                  Lib.$fOrdMidFamily_$c>
                  Lib.$fOrdMidFamily_$c>=
                  Lib.$fOrdMidFamily_$cmax
                  Lib.$fOrdMidFamily_$cmin -}
b40c42e0053503f3e12b12c8853d8620
  $fOrdMidFamily_$c< ::
    Lib.MidFamily -> Lib.MidFamily -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLL),1*U(1*U,1*U,1*U,A,A,1*U,A,A,A,A)><S(SLLLLLLLLL),1*U(1*U,1*U,1*U,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.MidFamily) (y :: Lib.MidFamily) ->
                 case Lib.$fOrdMidFamily_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True }) -}
b40c42e0053503f3e12b12c8853d8620
  $fOrdMidFamily_$c<= ::
    Lib.MidFamily -> Lib.MidFamily -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLL),1*U(1*U,1*U,1*U,A,A,1*U,A,A,A,A)><S(SLLLLLLLLL),1*U(1*U,1*U,1*U,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.MidFamily) (y :: Lib.MidFamily) ->
                 case Lib.$fOrdMidFamily_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False }) -}
b40c42e0053503f3e12b12c8853d8620
  $fOrdMidFamily_$c> ::
    Lib.MidFamily -> Lib.MidFamily -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLL),1*U(1*U,1*U,1*U,A,A,1*U,A,A,A,A)><S(SLLLLLLLLL),1*U(1*U,1*U,1*U,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.MidFamily) (y :: Lib.MidFamily) ->
                 case Lib.$fOrdMidFamily_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True }) -}
b40c42e0053503f3e12b12c8853d8620
  $fOrdMidFamily_$c>= ::
    Lib.MidFamily -> Lib.MidFamily -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLL),1*U(1*U,1*U,1*U,A,A,1*U,A,A,A,A)><S(SLLLLLLLLL),1*U(1*U,1*U,1*U,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.MidFamily) (y :: Lib.MidFamily) ->
                 case Lib.$fOrdMidFamily_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False }) -}
b40c42e0053503f3e12b12c8853d8620
  $fOrdMidFamily_$ccompare ::
    Lib.MidFamily -> Lib.MidFamily -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLL),1*U(1*U,1*U,1*U,A,A,1*U,A,A,A,A)><S(SLLLLLLLLL),1*U(1*U,1*U,1*U,A,A,1*U,A,A,A,A)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.MidFamily) (w1 :: Lib.MidFamily) ->
                 case w of ww { Lib.MidFamily ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ->
                 case w1 of ww11 { Lib.MidFamily ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ->
                 Lib.$w$ccompare3 ww1 ww2 ww3 ww6 ww12 ww13 ww14 ww17 } }) -}
b40c42e0053503f3e12b12c8853d8620
  $fOrdMidFamily_$cmax ::
    Lib.MidFamily -> Lib.MidFamily -> Lib.MidFamily
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLL),U(U,U,U,U,U,U,U,U,U,U)><S(SLLLLLLLLL),U(U,U,U,U,U,U,U,U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.MidFamily) (y :: Lib.MidFamily) ->
                 case Lib.$fOrdMidFamily_$ccompare x y of wild {
                   DEFAULT -> y GHC.Types.GT -> x }) -}
b40c42e0053503f3e12b12c8853d8620
  $fOrdMidFamily_$cmin ::
    Lib.MidFamily -> Lib.MidFamily -> Lib.MidFamily
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLL),U(U,U,U,U,U,U,U,U,U,U)><S(SLLLLLLLLL),U(U,U,U,U,U,U,U,U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.MidFamily) (y :: Lib.MidFamily) ->
                 case Lib.$fOrdMidFamily_$ccompare x y of wild {
                   DEFAULT -> x GHC.Types.GT -> y }) -}
3b7e185ad71459af8d347e25da054651
  $fOrdUChr :: GHC.Classes.Ord Lib.UChr
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lib.UChr
                  Lib.$fEqUChr
                  Lib.$fOrdUChr_$ccompare
                  Lib.$fOrdUChr_$c<
                  Lib.$fOrdUChr_$c<=
                  Lib.$fOrdUChr_$c>
                  Lib.$fOrdUChr_$c>=
                  Lib.$fOrdUChr_$cmax
                  Lib.$fOrdUChr_$cmin -}
3b7e185ad71459af8d347e25da054651
  $fOrdUChr_$c< :: Lib.UChr -> Lib.UChr -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.UChr) (b :: Lib.UChr) ->
                 case a of x1 { DEFAULT ->
                 case b of x2 { DEFAULT ->
                 GHC.Prim.tagToEnum#
                   @ GHC.Types.Bool
                   (GHC.Prim.<#
                      (GHC.Prim.dataToTag# @ Lib.UChr x1)
                      (GHC.Prim.dataToTag# @ Lib.UChr x2)) } }) -}
3b7e185ad71459af8d347e25da054651
  $fOrdUChr_$c<= :: Lib.UChr -> Lib.UChr -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.UChr) (b :: Lib.UChr) ->
                 case a of x1 { DEFAULT ->
                 case b of x2 { DEFAULT ->
                 GHC.Prim.tagToEnum#
                   @ GHC.Types.Bool
                   (GHC.Prim.<=#
                      (GHC.Prim.dataToTag# @ Lib.UChr x1)
                      (GHC.Prim.dataToTag# @ Lib.UChr x2)) } }) -}
3b7e185ad71459af8d347e25da054651
  $fOrdUChr_$c> :: Lib.UChr -> Lib.UChr -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.UChr) (b :: Lib.UChr) ->
                 case a of x1 { DEFAULT ->
                 case b of x2 { DEFAULT ->
                 GHC.Prim.tagToEnum#
                   @ GHC.Types.Bool
                   (GHC.Prim.>#
                      (GHC.Prim.dataToTag# @ Lib.UChr x1)
                      (GHC.Prim.dataToTag# @ Lib.UChr x2)) } }) -}
3b7e185ad71459af8d347e25da054651
  $fOrdUChr_$c>= :: Lib.UChr -> Lib.UChr -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.UChr) (b :: Lib.UChr) ->
                 case a of x1 { DEFAULT ->
                 case b of x2 { DEFAULT ->
                 GHC.Prim.tagToEnum#
                   @ GHC.Types.Bool
                   (GHC.Prim.>=#
                      (GHC.Prim.dataToTag# @ Lib.UChr x1)
                      (GHC.Prim.dataToTag# @ Lib.UChr x2)) } }) -}
3b7e185ad71459af8d347e25da054651
  $fOrdUChr_$ccompare :: Lib.UChr -> Lib.UChr -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.UChr) (b :: Lib.UChr) ->
                 case a of x1 { DEFAULT ->
                 case b of x2 { DEFAULT ->
                 let {
                   b# :: GHC.Prim.Int# = GHC.Prim.dataToTag# @ Lib.UChr x2
                 } in
                 let {
                   a# :: GHC.Prim.Int# = GHC.Prim.dataToTag# @ Lib.UChr x1
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.GT GHC.Types.True -> GHC.Types.EQ }
                   GHC.Types.True -> GHC.Types.LT } } }) -}
3b7e185ad71459af8d347e25da054651
  $fOrdUChr_$cmax :: Lib.UChr -> Lib.UChr -> Lib.UChr
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.UChr) (y :: Lib.UChr) ->
                 case x of x1 { DEFAULT ->
                 case y of x2 { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<=#
                           (GHC.Prim.dataToTag# @ Lib.UChr x1)
                           (GHC.Prim.dataToTag# @ Lib.UChr x2)) of wild {
                   GHC.Types.False -> x1 GHC.Types.True -> x2 } } }) -}
3b7e185ad71459af8d347e25da054651
  $fOrdUChr_$cmin :: Lib.UChr -> Lib.UChr -> Lib.UChr
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.UChr) (y :: Lib.UChr) ->
                 case x of x1 { DEFAULT ->
                 case y of x2 { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<=#
                           (GHC.Prim.dataToTag# @ Lib.UChr x1)
                           (GHC.Prim.dataToTag# @ Lib.UChr x2)) of wild {
                   GHC.Types.False -> x2 GHC.Types.True -> x1 } } }) -}
729a34be9738ea3507254144802cc56b
  $fReadChromNameFormat :: GHC.Read.Read Lib.ChromNameFormat
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lib.ChromNameFormat
                  Lib.$fReadChromNameFormat_$creadsPrec
                  Lib.$fReadChromNameFormat_$creadList
                  Lib.$fReadChromNameFormat_$creadPrec
                  Lib.$fReadChromNameFormat_$creadListPrec -}
729a34be9738ea3507254144802cc56b
  $fReadChromNameFormat1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([Lib.ChromNameFormat] -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta1 :: [Lib.ChromNameFormat]
                            -> Text.ParserCombinators.ReadP.P b) ->
                 GHC.Read.list1
                   @ Lib.ChromNameFormat
                   Lib.$fReadChromNameFormat2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <Lib.ChromNameFormat>_R))
                   eta
                   @ b
                   eta1) -}
729a34be9738ea3507254144802cc56b
  $fReadChromNameFormat10 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Lib.ChromNameFormat -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds6 :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: Lib.ChromNameFormat -> Text.ParserCombinators.ReadP.P b) ->
                 eta Lib.GRC) -}
73b82ae2d9c2679792d91c4e1564a399
  $fReadChromNameFormat11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "GRC"#) -}
729a34be9738ea3507254144802cc56b
  $fReadChromNameFormat12 ::
    Text.ParserCombinators.ReadP.P [Lib.ChromNameFormat]
  {- Unfolding: (GHC.Read.list1
                   @ Lib.ChromNameFormat
                   Lib.$fReadChromNameFormat2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <Lib.ChromNameFormat>_R))
                   GHC.Read.$fRead()5
                   @ [Lib.ChromNameFormat]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                      @ [Lib.ChromNameFormat])) -}
729a34be9738ea3507254144802cc56b
  $fReadChromNameFormat2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP Lib.ChromNameFormat
  {- Arity: 1,
     Unfolding: (GHC.Read.parens1
                   @ Lib.ChromNameFormat
                   Lib.$fReadChromNameFormat3
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <Lib.ChromNameFormat>_R))) -}
729a34be9738ea3507254144802cc56b
  $fReadChromNameFormat3 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP Lib.ChromNameFormat
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec) ->
                 GHC.Read.choose2
                   @ Lib.ChromNameFormat
                   Lib.$fReadChromNameFormat4
                   eta) -}
729a34be9738ea3507254144802cc56b
  $fReadChromNameFormat4 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec Lib.ChromNameFormat)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec Lib.ChromNameFormat)
                   Lib.$fReadChromNameFormat9
                   Lib.$fReadChromNameFormat5) -}
729a34be9738ea3507254144802cc56b
  $fReadChromNameFormat5 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec Lib.ChromNameFormat)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec Lib.ChromNameFormat)
                   Lib.$fReadChromNameFormat6
                   (GHC.Types.[]
                      @ (GHC.Base.String,
                         Text.ParserCombinators.ReadPrec.ReadPrec Lib.ChromNameFormat))) -}
729a34be9738ea3507254144802cc56b
  $fReadChromNameFormat6 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec Lib.ChromNameFormat)
  {- Strictness: m,
     Unfolding: ((Lib.$fReadChromNameFormat8,
                  Lib.$fReadChromNameFormat7
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Lib.ChromNameFormat>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Lib.ChromNameFormat>_R))))) -}
729a34be9738ea3507254144802cc56b
  $fReadChromNameFormat7 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Lib.ChromNameFormat -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds6 :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: Lib.ChromNameFormat -> Text.ParserCombinators.ReadP.P b) ->
                 eta Lib.UCSC) -}
6ff9bb88ac739814aa33727ec2188a2b
  $fReadChromNameFormat8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "UCSC"#) -}
729a34be9738ea3507254144802cc56b
  $fReadChromNameFormat9 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec Lib.ChromNameFormat)
  {- Strictness: m,
     Unfolding: ((Lib.$fReadChromNameFormat11,
                  Lib.$fReadChromNameFormat10
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Lib.ChromNameFormat>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Lib.ChromNameFormat>_R))))) -}
729a34be9738ea3507254144802cc56b
  $fReadChromNameFormat_$creadList ::
    Text.ParserCombinators.ReadP.ReadS [Lib.ChromNameFormat]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [Lib.ChromNameFormat]
                   Lib.$fReadChromNameFormat12) -}
729a34be9738ea3507254144802cc56b
  $fReadChromNameFormat_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec [Lib.ChromNameFormat]
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.$fReadChromNameFormat1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <[Lib.ChromNameFormat]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                               <[Lib.ChromNameFormat]>_R))) -}
729a34be9738ea3507254144802cc56b
  $fReadChromNameFormat_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec Lib.ChromNameFormat
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Lib.$fReadChromNameFormat2
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                          <Lib.ChromNameFormat>_R)) -}
729a34be9738ea3507254144802cc56b
  $fReadChromNameFormat_$creadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS Lib.ChromNameFormat
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ Lib.ChromNameFormat
                   ((GHC.Read.parens1
                       @ Lib.ChromNameFormat
                       Lib.$fReadChromNameFormat3
                         `cast`
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Lib.ChromNameFormat>_R))
                       eta)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0] <Lib.ChromNameFormat>_R)
                      @ Lib.ChromNameFormat
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ Lib.ChromNameFormat))) -}
f671dfe83494b300f9d572c68e554e5e
  $fShowAlignedRead :: GHC.Show.Show Lib.AlignedRead
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lib.AlignedRead
                  Lib.$fShowAlignedRead_$cshowsPrec
                  Lib.$fShowAlignedRead_$cshow
                  Lib.$fShowAlignedRead_$cshowList -}
f671dfe83494b300f9d572c68e554e5e
  $fShowAlignedRead1 :: Lib.AlignedRead -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: Lib.AlignedRead) (w1 :: GHC.Base.String) ->
                 case w of ww { Lib.AlignedRead ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ->
                 Lib.$w$cshowsPrec
                   0#
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   ww20
                   ww21
                   ww22
                   ww23
                   ww24
                   ww25
                   ww26
                   ww27
                   ww28
                   ww29
                   ww30
                   w1 }) -}
f671dfe83494b300f9d572c68e554e5e
  $fShowAlignedRead_$cshow :: Lib.AlignedRead -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(1*U(U,U,U,U),1*U(U),1*U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,U,U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(1*U,U,U,1*U(U,U,U,U)))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.AlignedRead) ->
                 Lib.$fShowAlignedRead_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
f671dfe83494b300f9d572c68e554e5e
  $fShowAlignedRead_$cshowList :: [Lib.AlignedRead] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Lib.AlignedRead
                   Lib.$fShowAlignedRead1) -}
f671dfe83494b300f9d572c68e554e5e
  $fShowAlignedRead_$cshowsPrec ::
    GHC.Types.Int -> Lib.AlignedRead -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <S(S),1*U(U)><S,1*U(1*U(U,U,U,U),1*U(U),1*U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,U,U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(1*U,U,U,1*U(U,U,U,U)))><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Lib.AlignedRead)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Lib.AlignedRead ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ww32 ->
                 Lib.$w$cshowsPrec
                   ww1
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   ww20
                   ww21
                   ww22
                   ww23
                   ww24
                   ww25
                   ww26
                   ww27
                   ww28
                   ww29
                   ww30
                   ww31
                   ww32
                   w2 } }) -}
fccf42ae6afd19ae2c265e24a08011ff
  $fShowBedRecord :: GHC.Show.Show Lib.BedRecord
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lib.BedRecord
                  Lib.$fShowBedRecord_$cshowsPrec
                  Lib.$fShowBedRecord_$cshow1
                  Lib.$fShowBedRecord_$cshowList -}
fccf42ae6afd19ae2c265e24a08011ff
  $fShowBedRecord1 :: Lib.BedRecord -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: Lib.BedRecord) (w1 :: GHC.Base.String) ->
                 case w of ww { Lib.BedRecord ww1 ww2 ww3 ww4 ->
                 Lib.$w$cshowsPrec1 0# ww1 ww2 ww3 ww4 w1 }) -}
b4c010c78bc94682e7b8d0881434d5f3
  $fShowBedRecord2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "BedRecord {"#) -}
c35ed8dff2be71ebe41510f3d8db667a
  $fShowBedRecord3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "}"#) -}
f2b9d02d5b00612dcc5637dc8c9164f7
  $fShowBedRecord4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "bedname = "#) -}
ad5a4eb5e8431c87b4e98bbf150e015e
  $fShowBedRecord5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "bedend = "#) -}
755b8c8a99a75b94d0229e5b88e709a9
  $fShowBedRecord6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "bedstart = "#) -}
f3fc4576f8e8f0a43562ca562be9ebbd
  $fShowBedRecord7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ", "#) -}
18ee5a1c72f2fb84f644bef0ffd1f95e
  $fShowBedRecord8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "bedchr = "#) -}
3b7e185ad71459af8d347e25da054651
  $fShowBedRecord_$cshow :: Lib.UChr -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U> -}
fccf42ae6afd19ae2c265e24a08011ff
  $fShowBedRecord_$cshow1 :: Lib.BedRecord -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,U,U,1*U(U,U,U,U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.BedRecord) ->
                 Lib.$fShowBedRecord_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
fccf42ae6afd19ae2c265e24a08011ff
  $fShowBedRecord_$cshowList :: [Lib.BedRecord] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Lib.BedRecord
                   Lib.$fShowBedRecord1) -}
fccf42ae6afd19ae2c265e24a08011ff
  $fShowBedRecord_$cshowsPrec ::
    GHC.Types.Int -> Lib.BedRecord -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <S(S),1*U(U)><S,1*U(1*U,U,U,1*U(U,U,U,U))><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Lib.BedRecord)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Lib.BedRecord ww3 ww4 ww5 ww6 ->
                 Lib.$w$cshowsPrec1 ww1 ww3 ww4 ww5 ww6 w2 } }) -}
729a34be9738ea3507254144802cc56b
  $fShowChromNameFormat :: GHC.Show.Show Lib.ChromNameFormat
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lib.ChromNameFormat
                  Lib.$fShowChromNameFormat_$cshowsPrec
                  Lib.$fShowChromNameFormat_$cshow
                  Lib.$fShowChromNameFormat_$cshowList -}
729a34be9738ea3507254144802cc56b
  $fShowChromNameFormat1 :: Lib.ChromNameFormat -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds6 :: Lib.ChromNameFormat) (eta :: GHC.Base.String) ->
                 case ds6 of wild {
                   Lib.GRC
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           Lib.$fReadChromNameFormat11)
                        eta
                   Lib.UCSC
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           Lib.$fReadChromNameFormat8)
                        eta }) -}
729a34be9738ea3507254144802cc56b
  $fShowChromNameFormat_$cshow ::
    Lib.ChromNameFormat -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.ChromNameFormat) ->
                 case x of wild {
                   Lib.GRC -> Lib.$fReadChromNameFormat11
                   Lib.UCSC -> Lib.$fReadChromNameFormat8 }) -}
729a34be9738ea3507254144802cc56b
  $fShowChromNameFormat_$cshowList ::
    [Lib.ChromNameFormat] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Lib.ChromNameFormat
                   Lib.$fShowChromNameFormat1) -}
729a34be9738ea3507254144802cc56b
  $fShowChromNameFormat_$cshowsPrec ::
    GHC.Types.Int -> Lib.ChromNameFormat -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds6 :: GHC.Types.Int)
                   (ds7 :: Lib.ChromNameFormat)
                   (eta :: GHC.Base.String) ->
                 case ds7 of wild {
                   Lib.GRC
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           Lib.$fReadChromNameFormat11)
                        eta
                   Lib.UCSC
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           Lib.$fReadChromNameFormat8)
                        eta }) -}
d774c24178fe50c0a3a4a367dd390465
  $fShowMasterRecord :: GHC.Show.Show Lib.MasterRecord
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lib.MasterRecord
                  Lib.$fShowMasterRecord_$cshowsPrec
                  Lib.$fShowMasterRecord_$cshow
                  Lib.$fShowMasterRecord_$cshowList -}
d774c24178fe50c0a3a4a367dd390465
  $fShowMasterRecord1 :: Lib.MasterRecord -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: Lib.MasterRecord) (w1 :: GHC.Base.String) ->
                 case w of ww { Lib.MasterRecord ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ->
                 Lib.$w$cshowsPrec2
                   0#
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   w1 }) -}
d774c24178fe50c0a3a4a367dd390465
  $fShowMasterRecord_$cshow :: Lib.MasterRecord -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(1*U,U,U,1*U(U,U,U,U),U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.MasterRecord) ->
                 Lib.$fShowMasterRecord_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
d774c24178fe50c0a3a4a367dd390465
  $fShowMasterRecord_$cshowList ::
    [Lib.MasterRecord] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Lib.MasterRecord
                   Lib.$fShowMasterRecord1) -}
d774c24178fe50c0a3a4a367dd390465
  $fShowMasterRecord_$cshowsPrec ::
    GHC.Types.Int -> Lib.MasterRecord -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <S(S),1*U(U)><S,1*U(1*U,U,U,1*U(U,U,U,U),U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U))><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Lib.MasterRecord)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Lib.MasterRecord ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ->
                 Lib.$w$cshowsPrec2
                   ww1
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   w2 } }) -}
b40c42e0053503f3e12b12c8853d8620
  $fShowMidFamily :: GHC.Show.Show Lib.MidFamily
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lib.MidFamily
                  Lib.$fShowMidFamily_$cshowsPrec
                  Lib.$fShowMidFamily_$cshow
                  Lib.$fShowMidFamily_$cshowList -}
b40c42e0053503f3e12b12c8853d8620
  $fShowMidFamily1 :: Lib.MidFamily -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: Lib.MidFamily) (w1 :: GHC.Base.String) ->
                 case w of ww { Lib.MidFamily ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ->
                 Lib.$w$cshowsPrec3
                   0#
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   w1 }) -}
b40c42e0053503f3e12b12c8853d8620
  $fShowMidFamily_$cshow :: Lib.MidFamily -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(1*U,U,U,1*U(U,U,U,U),1*U,U,U,U,U,1*U(1*U,U,U,1*U(U,U,U,U)))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.MidFamily) ->
                 Lib.$fShowMidFamily_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
b40c42e0053503f3e12b12c8853d8620
  $fShowMidFamily_$cshowList :: [Lib.MidFamily] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Lib.MidFamily
                   Lib.$fShowMidFamily1) -}
b40c42e0053503f3e12b12c8853d8620
  $fShowMidFamily_$cshowsPrec ::
    GHC.Types.Int -> Lib.MidFamily -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <S(S),1*U(U)><S,1*U(1*U,U,U,1*U(U,U,U,U),1*U,U,U,U,U,1*U(1*U,U,U,1*U(U,U,U,U)))><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Lib.MidFamily)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Lib.MidFamily ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ->
                 Lib.$w$cshowsPrec3
                   ww1
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   w2 } }) -}
4d89c2d39576093eca054c05b0242d08
  $fShowSAMFlag :: GHC.Show.Show Lib.SAMFlag
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lib.SAMFlag
                  Lib.$fShowSAMFlag_$cshowsPrec
                  Lib.$fShowSAMFlag_$cshow
                  Lib.$fShowSAMFlag_$cshowList -}
4d89c2d39576093eca054c05b0242d08
  $fShowSAMFlag1 :: Lib.SAMFlag -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: Lib.SAMFlag) (w1 :: GHC.Base.String) ->
                 case w of ww { Lib.SAMFlag ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ->
                 Lib.$w$cshowsPrec4
                   0#
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   w1 }) -}
4d89c2d39576093eca054c05b0242d08
  $fShowSAMFlag_$cshow :: Lib.SAMFlag -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.SAMFlag) ->
                 Lib.$fShowSAMFlag_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
4d89c2d39576093eca054c05b0242d08
  $fShowSAMFlag_$cshowList :: [Lib.SAMFlag] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Lib.SAMFlag
                   Lib.$fShowSAMFlag1) -}
4d89c2d39576093eca054c05b0242d08
  $fShowSAMFlag_$cshowsPrec ::
    GHC.Types.Int -> Lib.SAMFlag -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U))><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Lib.SAMFlag)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Lib.SAMFlag ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ->
                 Lib.$w$cshowsPrec4
                   ww1
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   w2 } }) -}
3b7e185ad71459af8d347e25da054651
  $fShowUChr :: GHC.Show.Show Lib.UChr
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lib.UChr
                  Lib.$fShowUChr_$cshowsPrec
                  Lib.$fShowBedRecord_$cshow
                  Lib.$fShowUChr_$cshowList -}
3b7e185ad71459af8d347e25da054651
  $fShowUChr1 :: Lib.UChr -> GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 2,
     Unfolding: (\ (x :: Lib.UChr) (s :: GHC.Base.String)[OneShot] ->
                 GHC.Base.++ @ GHC.Types.Char (Lib.$fShowBedRecord_$cshow x) s) -}
3b7e185ad71459af8d347e25da054651
  $fShowUChr_$cshowList :: [Lib.UChr] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: (\ (ls :: [Lib.UChr]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Lib.UChr Lib.$fShowUChr1 ls s) -}
3b7e185ad71459af8d347e25da054651
  $fShowUChr_$cshowsPrec ::
    GHC.Types.Int -> Lib.UChr -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds6 :: GHC.Types.Int) (x :: Lib.UChr) (s :: GHC.Base.String) ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c1
                      n
                      (Lib.$fShowBedRecord_$cshow x))
                   s) -}
a5b9abdab3f59fcfbdcab51c465f0533
  $s$fEq(,) ::
    GHC.Classes.Eq
      (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                  (GHC.Classes.$fEq(,)_$c==
                     @ GHC.Integer.Type.Integer
                     @ Data.ByteString.Internal.ByteString
                     GHC.Integer.Type.$fEqInteger
                     Data.ByteString.Internal.$fEqByteString)
                  (GHC.Classes.$fEq(,)_$c/=
                     @ GHC.Integer.Type.Integer
                     @ Data.ByteString.Internal.ByteString
                     GHC.Integer.Type.$fEqInteger
                     Data.ByteString.Internal.$fEqByteString) -}
2c1a395c4669bf02d998c00f8c60d8aa
  $sfromList :: [Lib.UChr] -> Data.Set.Base.Set Lib.UChr
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds6 :: [Lib.UChr]) ->
                 case ds6 of wild {
                   [] -> Data.Set.Base.Tip @ Lib.UChr
                   : x ds7
                   -> case ds7 of wild1 {
                        []
                        -> case x of dt { DEFAULT ->
                           Data.Set.Base.Bin
                             @ Lib.UChr
                             1#
                             dt
                             (Data.Set.Base.Tip @ Lib.UChr)
                             (Data.Set.Base.Tip @ Lib.UChr) }
                        : ipv ipv1
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.>=#
                                     (GHC.Prim.dataToTag# @ Lib.UChr x)
                                     (GHC.Prim.dataToTag# @ Lib.UChr ipv)) of wild2 {
                             GHC.Types.False
                             -> Lib.$wgo5
                                  1#
                                  (Data.Set.Base.Bin
                                     @ Lib.UChr
                                     1#
                                     x
                                     (Data.Set.Base.Tip @ Lib.UChr)
                                     (Data.Set.Base.Tip @ Lib.UChr))
                                  wild1
                             GHC.Types.True
                             -> Lib.$sfromList_go5
                                  (Data.Set.Base.Bin
                                     @ Lib.UChr
                                     1#
                                     x
                                     (Data.Set.Base.Tip @ Lib.UChr)
                                     (Data.Set.Base.Tip @ Lib.UChr))
                                  wild1 } } }) -}
3967c033dd0b49df764322fc99fba3cc
  $sfromList1 :: [(Lib.UChr, a)] -> Data.Map.Base.Map Lib.UChr a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a (ds6 :: [(Lib.UChr, a)]) ->
                 case ds6 of wild {
                   [] -> Data.Map.Base.Tip @ Lib.UChr @ a
                   : ds7 ds8
                   -> case ds7 of wild1 { (,) kx x ->
                      case ds8 of wild2 {
                        []
                        -> case x of x1 { DEFAULT ->
                           case kx of dt { DEFAULT ->
                           Data.Map.Base.Bin
                             @ Lib.UChr
                             @ a
                             1#
                             dt
                             x1
                             (Data.Map.Base.Tip @ Lib.UChr @ a)
                             (Data.Map.Base.Tip @ Lib.UChr @ a) } }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds9 ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.>=#
                                     (GHC.Prim.dataToTag# @ Lib.UChr kx)
                                     (GHC.Prim.dataToTag# @ Lib.UChr ky)) of wild4 {
                             GHC.Types.False
                             -> case x of x0 { DEFAULT ->
                                Lib.$wpoly_go4
                                  @ a
                                  1#
                                  (Data.Map.Base.Bin
                                     @ Lib.UChr
                                     @ a
                                     1#
                                     kx
                                     x0
                                     (Data.Map.Base.Tip @ Lib.UChr @ a)
                                     (Data.Map.Base.Tip @ Lib.UChr @ a))
                                  wild2 }
                             GHC.Types.True
                             -> case x of x0 { DEFAULT ->
                                Lib.$sfromList2
                                  @ a
                                  (Data.Map.Base.Bin
                                     @ Lib.UChr
                                     @ a
                                     1#
                                     kx
                                     x0
                                     (Data.Map.Base.Tip @ Lib.UChr @ a)
                                     (Data.Map.Base.Tip @ Lib.UChr @ a))
                                  wild2 } } } } } }) -}
7493e2d6363eedeb6151f1b65f9b9656
  $sfromList2 ::
    Data.Map.Base.Map Lib.UChr a1
    -> [(Lib.UChr, a1)] -> Data.Map.Base.Map Lib.UChr a1
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
f30fd60659dec57e12298a016798a7a4
  $sfromList3 ::
    [(GHC.Types.Int, a)] -> Data.Map.Base.Map GHC.Types.Int a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a (ds6 :: [(GHC.Types.Int, a)]) ->
                 case ds6 of wild {
                   [] -> Data.Map.Base.Tip @ GHC.Types.Int @ a
                   : ds7 ds8
                   -> case ds7 of wild1 { (,) kx x ->
                      case ds8 of wild2 {
                        []
                        -> case x of x1 { DEFAULT ->
                           case kx of dt { GHC.Types.I# ipv ->
                           Data.Map.Base.Bin
                             @ GHC.Types.Int
                             @ a
                             1#
                             dt
                             x1
                             (Data.Map.Base.Tip @ GHC.Types.Int @ a)
                             (Data.Map.Base.Tip @ GHC.Types.Int @ a) } }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds9 ->
                           case kx of wild4 { GHC.Types.I# x1 ->
                           case ky of wild5 { GHC.Types.I# y ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.>=# x1 y) of wild6 {
                             GHC.Types.False
                             -> case x of x0 { DEFAULT ->
                                Lib.$wpoly_go1
                                  @ a
                                  1#
                                  (Data.Map.Base.Bin
                                     @ GHC.Types.Int
                                     @ a
                                     1#
                                     wild4
                                     x0
                                     (Data.Map.Base.Tip @ GHC.Types.Int @ a)
                                     (Data.Map.Base.Tip @ GHC.Types.Int @ a))
                                  wild2 }
                             GHC.Types.True
                             -> case x of x0 { DEFAULT ->
                                Lib.$sfromList4
                                  @ a
                                  (Data.Map.Base.Bin
                                     @ GHC.Types.Int
                                     @ a
                                     1#
                                     wild4
                                     x0
                                     (Data.Map.Base.Tip @ GHC.Types.Int @ a)
                                     (Data.Map.Base.Tip @ GHC.Types.Int @ a))
                                  wild2 } } } } } } } }) -}
d8586eac3cd39b3ff157af1b911227a9
  $sfromList4 ::
    Data.Map.Base.Map GHC.Types.Int a1
    -> [(GHC.Types.Int, a1)] -> Data.Map.Base.Map GHC.Types.Int a1
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
a1d8e2b35e941c0a5bc19eacb8ef2927
  $sfromList_go5 ::
    Data.Set.Base.Set Lib.UChr
    -> [Lib.UChr] -> Data.Set.Base.Set Lib.UChr
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
5313c083a55d98a80ea3208bf8258cba
  $sinsert_$sgo4 ::
    Lib.UChr
    -> a1
    -> Data.Map.Base.Map Lib.UChr a1
    -> Data.Map.Base.Map Lib.UChr a1
  {- Arity: 3, Strictness: <S,1*U><S,1*U><S,1*U> -}
f60e467dbf29ad13173ce0a75259797a
  $sinsert_$sgo5 ::
    Lib.UChr
    -> Data.Set.Base.Set Lib.UChr -> Data.Set.Base.Set Lib.UChr
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
b3d2bbc21add8c8d90460f2d7c2cb71b
  $slookup1 ::
    Lib.UChr -> Data.Map.Base.Map Lib.UChr a -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
bd06ae0cebbef63c98519d57c67b4cb5
  $tc'AlignedRead :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14450199701926717857##
                   1253905330606871650##
                   Lib.$trModule
                   Lib.$tc'AlignedRead1) -}
89507457a09ba1d6cd1cbeaafd00c1fd
  $tc'AlignedRead1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'AlignedRead"#) -}
63865456d80d8c93868085426bf359ed
  $tc'BedRecord :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15337107592435865529##
                   14114374595776417759##
                   Lib.$trModule
                   Lib.$tc'BedRecord1) -}
7d71f595ecab71108d162ff4e797cfb2
  $tc'BedRecord1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'BedRecord"#) -}
8c252d0e00487a505592a3ba324f2b77
  $tc'C1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16942281918468699184##
                   9040067028917121685##
                   Lib.$trModule
                   Lib.$tc'C29) -}
5e5f85d7f111bb5587683c9a216c1b58
  $tc'C10 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10364307698881932383##
                   12520535022029480020##
                   Lib.$trModule
                   Lib.$tc'C30) -}
5b23657cd728c1bccf2ecc2c8bfcbebf
  $tc'C11 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1752624630102077438##
                   5852194303064195900##
                   Lib.$trModule
                   Lib.$tc'C31) -}
7e113321a05f5ce761ece16b9422ed6a
  $tc'C12 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   394818433758872542##
                   974843060688338885##
                   Lib.$trModule
                   Lib.$tc'C32) -}
40669c6c86d4a80b679a269ee12f32da
  $tc'C13 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13981924925933179335##
                   3533542383231922531##
                   Lib.$trModule
                   Lib.$tc'C33) -}
95944b2182d2e6c367e90594c466da69
  $tc'C14 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6297165306471591496##
                   3538733341207588809##
                   Lib.$trModule
                   Lib.$tc'C34) -}
58fee7f063792eb55b0e4c9606cc5f20
  $tc'C15 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2222750335856050981##
                   5866677314402697326##
                   Lib.$trModule
                   Lib.$tc'C35) -}
d6d21a013718eabe680861f6a326e6c2
  $tc'C16 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2991202661246268314##
                   2703162797426532443##
                   Lib.$trModule
                   Lib.$tc'C36) -}
ac9e7a5e8523e5d785c0dbfa7b66e666
  $tc'C17 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16283258983805324377##
                   8379110427894916102##
                   Lib.$trModule
                   Lib.$tc'C37) -}
8288039a44567128a089055336d843be
  $tc'C18 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16858709099760356681##
                   5130889376708158962##
                   Lib.$trModule
                   Lib.$tc'C38) -}
daec42f2033685f0e1ddcdd5dfef099e
  $tc'C19 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12902423024573096659##
                   7070143717717213186##
                   Lib.$trModule
                   Lib.$tc'C39) -}
3394bb96caa9d668c0d207e83e9615bf
  $tc'C2 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13467554652626297375##
                   7838973224562112610##
                   Lib.$trModule
                   Lib.$tc'C40) -}
61aec632ab3175b2b9ddb950ea18ad50
  $tc'C20 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8731650544575795304##
                   6115330850473386376##
                   Lib.$trModule
                   Lib.$tc'C41) -}
0e88149dbb27bed8fc9eca0348d3efc3
  $tc'C21 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4176134595229097617##
                   17477392794677457834##
                   Lib.$trModule
                   Lib.$tc'C42) -}
3f27d56a534ad039e0683fbcf5863158
  $tc'C22 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6369807258088571414##
                   8932982923941077606##
                   Lib.$trModule
                   Lib.$tc'C43) -}
21136de36a7e9ea2e4d3e0c3ebe920a8
  $tc'C29 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'C1"#) -}
03f1d0b2bb18035ab9fb96efee6d21aa
  $tc'C3 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13188450180187412417##
                   7149521601967031082##
                   Lib.$trModule
                   Lib.$tc'C44) -}
2e66ec037b4c4d7dd4d3646fb7c61ea5
  $tc'C30 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'C10"#) -}
2d39b47cb64f6ad15afefb4dea6d6aea
  $tc'C31 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'C11"#) -}
45c94805d6cc836f7fd07de05fd248c8
  $tc'C32 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'C12"#) -}
e536ca54a5fbfc40e28332c27f2ec53d
  $tc'C33 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'C13"#) -}
4a934e8656f79a2fdfeb61b27bbcfb58
  $tc'C34 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'C14"#) -}
c256989b59bfb189a852cafc62733e49
  $tc'C35 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'C15"#) -}
2c1688e967ed45b650f6bc97a2e0cd44
  $tc'C36 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'C16"#) -}
6e3ff5fb542daa802ed01c36514f61ce
  $tc'C37 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'C17"#) -}
0e423bacc7eeebbcb85c4b963d7a3183
  $tc'C38 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'C18"#) -}
fec9bdf7bae9885f5e04599c1e323275
  $tc'C39 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'C19"#) -}
bf45e6a57d80680e8f8c1ff8c4c8674b
  $tc'C4 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6502015378655083169##
                   17626878032536194275##
                   Lib.$trModule
                   Lib.$tc'C45) -}
c8257ae99d97773fc71b20efcb7c588e
  $tc'C40 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'C2"#) -}
c5720a10cab0ea1b49bb5f9654da7dca
  $tc'C41 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'C20"#) -}
2905e0962c8381d5b67aa1a43837a2fc
  $tc'C42 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'C21"#) -}
1eb5166c3c17dfdb069a75e2c892b73e
  $tc'C43 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'C22"#) -}
4b30afbee216821e50589f652d27ce99
  $tc'C44 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'C3"#) -}
fefc7d38e37704811a1d3146d52d813f
  $tc'C45 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'C4"#) -}
dd70fd22bdcc98f1548d63495bc72c28
  $tc'C46 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'C5"#) -}
882e8534b768038bea142ef52ea238be
  $tc'C47 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'C6"#) -}
6158e1d0a65da60f5be2f08353a7991f
  $tc'C48 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'C7"#) -}
c7c126d2a9aee11d88868c0f29c288ff
  $tc'C49 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'C8"#) -}
baf737ddb3d418213016efb8d5a00a49
  $tc'C5 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10481153958618621194##
                   13829392472381140251##
                   Lib.$trModule
                   Lib.$tc'C46) -}
58c87f046c236845b3e0d2c9a2e3f22a
  $tc'C50 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'C9"#) -}
12c583799a8e9ad618181701dda8741f
  $tc'C6 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11030611618713485312##
                   11307779893077738836##
                   Lib.$trModule
                   Lib.$tc'C47) -}
a86d299429fd9955e72838ed3394bb38
  $tc'C7 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10457195428505481860##
                   14251635125433040691##
                   Lib.$trModule
                   Lib.$tc'C48) -}
1377b0d0870baa04281798ea7f1e8e7f
  $tc'C8 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11252814027181792462##
                   12721350114516430353##
                   Lib.$trModule
                   Lib.$tc'C49) -}
f4fa7eaeb52283367b75085bbe695c94
  $tc'C9 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8338033298462909611##
                   8161538165857747952##
                   Lib.$trModule
                   Lib.$tc'C50) -}
abdba8f9c27e1f8f916c79a49c4cb163
  $tc'CMT :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14715519619995150066##
                   4494386796726821951##
                   Lib.$trModule
                   Lib.$tc'CMT1) -}
8e97ad7245eeae77e8412efbe3376fef
  $tc'CMT1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'CMT"#) -}
bc3fd039f0e26d2537ba06d05f5215d3
  $tc'CX :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9544512406358921625##
                   15636675709641077158##
                   Lib.$trModule
                   Lib.$tc'CX1) -}
98d21524ee864568b1aa0def9aea785c
  $tc'CX1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'CX"#) -}
bcc17db276499aaeafcfb8b051da2614
  $tc'CY :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8552980120105086271##
                   12081708472196059726##
                   Lib.$trModule
                   Lib.$tc'CY1) -}
f559f546750fdedc8be55d2e5dca565f
  $tc'CY1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'CY"#) -}
964a9e1d765bd0bf52b2dd6683a07855
  $tc'Chr1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9671973262636744078##
                   14720260041953701286##
                   Lib.$trModule
                   Lib.$tc'Chr29) -}
fc707ac974e8458a84a58b6e67b6316b
  $tc'Chr10 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4082249975750729713##
                   1967504308425715517##
                   Lib.$trModule
                   Lib.$tc'Chr30) -}
35a1dbe99b56b35c674f8b7a557dc23f
  $tc'Chr11 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8591567706521639290##
                   16307160502376288538##
                   Lib.$trModule
                   Lib.$tc'Chr31) -}
aeae363436f2174c58be136f370a2c5e
  $tc'Chr12 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1887119256551350265##
                   9662925047440874964##
                   Lib.$trModule
                   Lib.$tc'Chr32) -}
961a3dade3bf0cd2d736ccd2f0dee214
  $tc'Chr13 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10813639478874610266##
                   4532382601777890410##
                   Lib.$trModule
                   Lib.$tc'Chr33) -}
04747d021a01c9982407a876a11d0bd5
  $tc'Chr14 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17007149538104770748##
                   6775143453779039429##
                   Lib.$trModule
                   Lib.$tc'Chr34) -}
956cb58abc1cc1b7660ae13fe14e6b37
  $tc'Chr15 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6899315322022747068##
                   12254550831620724754##
                   Lib.$trModule
                   Lib.$tc'Chr35) -}
6d9b81b33443a08708a90f4fb5e48b4d
  $tc'Chr16 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12150764898482393929##
                   8670577413265222785##
                   Lib.$trModule
                   Lib.$tc'Chr36) -}
edd470255f8fef96a0a1744bca9a48a9
  $tc'Chr17 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3928175881287600752##
                   1083846011977433625##
                   Lib.$trModule
                   Lib.$tc'Chr37) -}
b0214ad97fde07a2bfb9eb8fdcf9fe12
  $tc'Chr18 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11534412703566238480##
                   14297653729447499942##
                   Lib.$trModule
                   Lib.$tc'Chr38) -}
e6f01592d7a1de5b18dcf3ff494621a9
  $tc'Chr19 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14395931385938232578##
                   10881217460942502173##
                   Lib.$trModule
                   Lib.$tc'Chr39) -}
1e546adf39ad6bd6f756672c18cc65eb
  $tc'Chr2 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2633626310580465287##
                   11485570546966836438##
                   Lib.$trModule
                   Lib.$tc'Chr40) -}
d3248b7e45206038441601c3907f5a87
  $tc'Chr20 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2139608789772448282##
                   16578117113890524874##
                   Lib.$trModule
                   Lib.$tc'Chr41) -}
9081927b298d389cbe3e42115305c4b1
  $tc'Chr21 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9153961586906821209##
                   12073156239022046954##
                   Lib.$trModule
                   Lib.$tc'Chr42) -}
bb13f40d9b8b54c3c982bc95668d711a
  $tc'Chr22 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3929992657913657382##
                   7474374396657280907##
                   Lib.$trModule
                   Lib.$tc'Chr43) -}
49f8bb62bf08b3823dbef2f481e950da
  $tc'Chr29 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Chr1"#) -}
117a87be28623d46569335fd309c6d2c
  $tc'Chr3 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10351921480296134968##
                   10373824306501328440##
                   Lib.$trModule
                   Lib.$tc'Chr44) -}
033ee0dce439c0e44a8100cbba265d8c
  $tc'Chr30 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Chr10"#) -}
c4d00455c8400d63f423d1bf6c3d4c27
  $tc'Chr31 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Chr11"#) -}
f78112c865bc968ab19e0cd1b6611223
  $tc'Chr32 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Chr12"#) -}
ad8d14d571fe7de7eec92c384948025e
  $tc'Chr33 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Chr13"#) -}
461f862f69a87360396f6e04acc067b3
  $tc'Chr34 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Chr14"#) -}
f64ddda640376f95d6d975c02c5bad12
  $tc'Chr35 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Chr15"#) -}
d152b9d3bdc4a8c968c967025efe47c6
  $tc'Chr36 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Chr16"#) -}
62c01fd837a3956d03381cd93208fdca
  $tc'Chr37 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Chr17"#) -}
556a4b63ea69051dacd4c925ffc9fb01
  $tc'Chr38 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Chr18"#) -}
1ac79f2f5d94cd062b1fc492b2e5de4a
  $tc'Chr39 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Chr19"#) -}
0a0dc2a7e86c4f7d0cb93362ee1b1d02
  $tc'Chr4 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11349595952640175088##
                   919922674340622564##
                   Lib.$trModule
                   Lib.$tc'Chr45) -}
1ce3a08236e502fcd16792dff843b914
  $tc'Chr40 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Chr2"#) -}
9afea2e601d1403d5875d28b592eca64
  $tc'Chr41 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Chr20"#) -}
b25911a264bb0bee2ade01f86dcb04c8
  $tc'Chr42 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Chr21"#) -}
33c7c0f5a43f9f5c316f743843051c7e
  $tc'Chr43 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Chr22"#) -}
a42e4054b342753d53b1263d95491e00
  $tc'Chr44 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Chr3"#) -}
00492169342bc09ae86716bbda449609
  $tc'Chr45 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Chr4"#) -}
a0ccbf6ee6aea831c68a77de89951da7
  $tc'Chr46 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Chr5"#) -}
61f7a2cb94329f30b703e4dfd65e2815
  $tc'Chr47 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Chr6"#) -}
3bbbe0a7d5c8d757c9a0b039da8e779e
  $tc'Chr48 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Chr7"#) -}
08740ccce5e03ed1a8e75f853b8aea27
  $tc'Chr49 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Chr8"#) -}
b26a43c78d0c74c261c2656d50ccdfd0
  $tc'Chr5 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5741832573211226232##
                   15960369248327547963##
                   Lib.$trModule
                   Lib.$tc'Chr46) -}
cae12862288047fe6441c28181bde302
  $tc'Chr50 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Chr9"#) -}
2f79ac88be33eba5a17e2f7896fc91c6
  $tc'Chr6 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3188476240946970396##
                   8006009389336253983##
                   Lib.$trModule
                   Lib.$tc'Chr47) -}
e2242d95fa13ce9e32867dbeb13a7e4f
  $tc'Chr7 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5969505942672954853##
                   12823645627616026682##
                   Lib.$trModule
                   Lib.$tc'Chr48) -}
c24e5f7949de63ac3d76893963b2ce2e
  $tc'Chr8 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15681724838165913792##
                   5736474920717896006##
                   Lib.$trModule
                   Lib.$tc'Chr49) -}
e8c7a5d92958f6d7eba4b0d251106a62
  $tc'Chr9 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11578887454278991353##
                   2501791018997649971##
                   Lib.$trModule
                   Lib.$tc'Chr50) -}
edc678b79991d16d9d71be73f026ff05
  $tc'ChrM :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3966349682838613688##
                   7273387614687185064##
                   Lib.$trModule
                   Lib.$tc'ChrM1) -}
4d7779436ea254fa504fabe52f8b69fa
  $tc'ChrM1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'ChrM"#) -}
7758528a27f1b540c84a99b7ef02d339
  $tc'ChrX :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8365029086057036331##
                   7365409547355498153##
                   Lib.$trModule
                   Lib.$tc'ChrX1) -}
03d6602bda8bd2e03ed0e88b4e33934c
  $tc'ChrX1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'ChrX"#) -}
31d02f27962ad8ed378c45af3cd996fb
  $tc'ChrY :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8059300027860202811##
                   3202621927667834387##
                   Lib.$trModule
                   Lib.$tc'ChrY1) -}
ff390f0fdd326a4b1b96a21686e0ba27
  $tc'ChrY1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'ChrY"#) -}
af0ee3733bce5b4bc2ba19f7f9dd74bc
  $tc'GL000191P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11548201084621093224##
                   7890246873788714274##
                   Lib.$trModule
                   Lib.$tc'GL000191P2) -}
46abdcb9296e41e58e844f4c3d17ed19
  $tc'GL000191P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GL000191P1"#) -}
d43449195d019eecf3597be52ff3adee
  $tc'GL000192P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15093678988128666615##
                   10463318544236336985##
                   Lib.$trModule
                   Lib.$tc'GL000192P2) -}
daf0f4b28cb4782fe7167c53fa9eefaa
  $tc'GL000192P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GL000192P1"#) -}
3936e9eb81c620970ba8cc424ace73d6
  $tc'GL000193P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2255082385106450703##
                   14151213391351505609##
                   Lib.$trModule
                   Lib.$tc'GL000193P2) -}
558874e52469242e9c9122de95de5ac6
  $tc'GL000193P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GL000193P1"#) -}
0db7f62b8c32d67a807796857f668ab0
  $tc'GL000194P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14451584765819174047##
                   10728850598834477295##
                   Lib.$trModule
                   Lib.$tc'GL000194P2) -}
8924f515918a02284be255a0df49fdd5
  $tc'GL000194P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GL000194P1"#) -}
a9409e7def32db8377865144cb3d7838
  $tc'GL000195P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9118905967879035160##
                   18075988436685341725##
                   Lib.$trModule
                   Lib.$tc'GL000195P2) -}
e56ca19fd1e93e25ec96bb0e319f53e2
  $tc'GL000195P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GL000195P1"#) -}
6a0505a764747c4dbc718066809477e9
  $tc'GL000196P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12868311794913593337##
                   13352648431939239430##
                   Lib.$trModule
                   Lib.$tc'GL000196P2) -}
0f3e0052620a618319c7b0646dcb9971
  $tc'GL000196P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GL000196P1"#) -}
133da700155f73a0b6ea03d903f9c597
  $tc'GL000197P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   43309831966630282##
                   1312679197316883701##
                   Lib.$trModule
                   Lib.$tc'GL000197P2) -}
c0688ed5d27605b5f1eb9090d93ebc0e
  $tc'GL000197P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GL000197P1"#) -}
97e433d898d72aefa2750925314a1384
  $tc'GL000198P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16660872791282321462##
                   15823942426528875685##
                   Lib.$trModule
                   Lib.$tc'GL000198P2) -}
715734fd392acaa65013aef4c136d4ca
  $tc'GL000198P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GL000198P1"#) -}
c55e9dad8ad8b51cfc9195af227e6fb2
  $tc'GL000199P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16004812038885872608##
                   9857720959843110189##
                   Lib.$trModule
                   Lib.$tc'GL000199P2) -}
79b665d91c4836d5bfc0dd6e4de15239
  $tc'GL000199P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GL000199P1"#) -}
508d25a338aa15e41ef6cc5034f5ff0b
  $tc'GL000200P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2288790795995847768##
                   6051827460041400304##
                   Lib.$trModule
                   Lib.$tc'GL000200P2) -}
e112626e9c6bfd58455ba47e7a98e5d0
  $tc'GL000200P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GL000200P1"#) -}
e560da010d60b20d3d61b936e2f4b85f
  $tc'GL000201P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12619393496810949182##
                   16864408915724865938##
                   Lib.$trModule
                   Lib.$tc'GL000201P2) -}
fae67e9fafb0046f381bd18a3783dbeb
  $tc'GL000201P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GL000201P1"#) -}
a5288d538866aec79ef6501537a27da0
  $tc'GL000202P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12380041487065529733##
                   13120248501030327739##
                   Lib.$trModule
                   Lib.$tc'GL000202P2) -}
342376e3e2f64ea1384649bfdf5da399
  $tc'GL000202P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GL000202P1"#) -}
225fd8195de34b527ee2d625ed6da9f8
  $tc'GL000203P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1083074705651984365##
                   6295403287884991195##
                   Lib.$trModule
                   Lib.$tc'GL000203P2) -}
bd293623f80095cff0761c2be30fa702
  $tc'GL000203P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GL000203P1"#) -}
b4694a9bb229410758e8c823d383fca2
  $tc'GL000204P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15243822208035637493##
                   18077627495341491364##
                   Lib.$trModule
                   Lib.$tc'GL000204P2) -}
4a934252fc1e0a744bdbae68d951af26
  $tc'GL000204P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GL000204P1"#) -}
51d1911754f7ee469015030a42eb3812
  $tc'GL000205P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1579377484226962132##
                   532402843980513159##
                   Lib.$trModule
                   Lib.$tc'GL000205P2) -}
d1a9a318d3dafb5e9cdd822aa0709c5e
  $tc'GL000205P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GL000205P1"#) -}
3cf74463b1bab07cd89f729241afc246
  $tc'GL000206P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3454052270157110492##
                   11786866087011328751##
                   Lib.$trModule
                   Lib.$tc'GL000206P2) -}
f8969fb874fc2902505cb4c5cd8656b7
  $tc'GL000206P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GL000206P1"#) -}
0eb02ea997d496aecaff4d685ae730bc
  $tc'GL000207P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6916830054048670074##
                   4791443988030732594##
                   Lib.$trModule
                   Lib.$tc'GL000207P2) -}
b3510e7cf0d0dc1d5bf9a687400d2e24
  $tc'GL000207P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GL000207P1"#) -}
285184fb90fd831f98490b4abca8c7e9
  $tc'GL000208P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4934933491828799859##
                   13036197728380798757##
                   Lib.$trModule
                   Lib.$tc'GL000208P2) -}
14b603c67f6297ba859da0f84e0cf980
  $tc'GL000208P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GL000208P1"#) -}
926701e676e9b750bfeb55e54d097aff
  $tc'GL000209P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14482624937652350908##
                   16570400632287986035##
                   Lib.$trModule
                   Lib.$tc'GL000209P2) -}
f422761011e2a934679739c249be76f4
  $tc'GL000209P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GL000209P1"#) -}
eba856bd2e10ed59bb3c209fe0dccb62
  $tc'GL000210P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6676644306264289193##
                   10389047039713831039##
                   Lib.$trModule
                   Lib.$tc'GL000210P2) -}
00d0cfeec2781ba2539c7d1a1b1d99af
  $tc'GL000210P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GL000210P1"#) -}
5d86b66006878df640d037f1f59c0785
  $tc'GL000211P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10978200320228675352##
                   5224291151375288822##
                   Lib.$trModule
                   Lib.$tc'GL000211P2) -}
62c5a1012f642ca7c504adfb026436ee
  $tc'GL000211P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GL000211P1"#) -}
bcbf2bd9a0da2b9c57837549bcb48990
  $tc'GL000212P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10346597099002908677##
                   2211067216792388852##
                   Lib.$trModule
                   Lib.$tc'GL000212P2) -}
4d29e8a18ed138858f06e15acc66f529
  $tc'GL000212P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GL000212P1"#) -}
a6eda9a00ef87ea4537c8401c02d1620
  $tc'GL000213P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17615395604537599218##
                   3339569552631803311##
                   Lib.$trModule
                   Lib.$tc'GL000213P2) -}
7c6e97a98ab81acdd4e4081887301039
  $tc'GL000213P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GL000213P1"#) -}
2306d1f37ea4e085cb99ff722bbae1fc
  $tc'GL000214P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3985435544084892331##
                   13241128001586990221##
                   Lib.$trModule
                   Lib.$tc'GL000214P2) -}
2970c4407b92dceb83e57b004e41ac8d
  $tc'GL000214P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GL000214P1"#) -}
0b3fe43d26921e9a52f2a826d49ae262
  $tc'GL000215P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6598019042564585323##
                   1931319282631609344##
                   Lib.$trModule
                   Lib.$tc'GL000215P2) -}
5112f31778b0fe3be0560613d2dbe85f
  $tc'GL000215P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GL000215P1"#) -}
6f247c70caf7c95756282167b8a8260a
  $tc'GL000216P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16940084356944884852##
                   1987259782990519880##
                   Lib.$trModule
                   Lib.$tc'GL000216P2) -}
b90b6d0d3ada93795f19b09f43ccedac
  $tc'GL000216P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GL000216P1"#) -}
6d403afc8c8a59236eaed317936da1ca
  $tc'GL000217P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1048886116359811520##
                   14124831093207763283##
                   Lib.$trModule
                   Lib.$tc'GL000217P2) -}
53cdf67a7bade91e67cfa479cb77eb7a
  $tc'GL000217P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GL000217P1"#) -}
f751bb968c1f6fa9f6330861ed54f2d2
  $tc'GL000218P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11059933553353358857##
                   17359549670689271538##
                   Lib.$trModule
                   Lib.$tc'GL000218P2) -}
0c894f29c86245b5d09ee5ce1e07b45f
  $tc'GL000218P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GL000218P1"#) -}
f5ff5ee75452888a2b251528a4e60cc1
  $tc'GL000219P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5959292151406690416##
                   4976032233014247869##
                   Lib.$trModule
                   Lib.$tc'GL000219P2) -}
497cf56e8c3ae9dac0057626703e724e
  $tc'GL000219P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GL000219P1"#) -}
302145cd2b585b3585f880f08a5ea668
  $tc'GL000220P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17013269542286656903##
                   2961999054499337910##
                   Lib.$trModule
                   Lib.$tc'GL000220P2) -}
f83f55010f4411d4d97f9611a917b00e
  $tc'GL000220P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GL000220P1"#) -}
1fea0e8d1905b53298a5d8ef280e11eb
  $tc'GL000221P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12603949640863477674##
                   16077251765124941448##
                   Lib.$trModule
                   Lib.$tc'GL000221P2) -}
b8d2e96b4e091aebd915dba12ebf1a65
  $tc'GL000221P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GL000221P1"#) -}
86ebd516b72af1d3a2cf8280b71bafaf
  $tc'GL000222P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1095473316529703967##
                   5960037962818009844##
                   Lib.$trModule
                   Lib.$tc'GL000222P2) -}
d9fe27fcc25d3e3dcf2b7760718b38eb
  $tc'GL000222P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GL000222P1"#) -}
29d6e277dac71ceff044032e2b71b14e
  $tc'GL000223P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11167126909413334175##
                   16860474513349176019##
                   Lib.$trModule
                   Lib.$tc'GL000223P2) -}
b5f818b97030fb9a8c9e8c722eb16371
  $tc'GL000223P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GL000223P1"#) -}
e30af82ee228a325d475e2c058367d8f
  $tc'GL000224P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8488135891825532511##
                   9212986199102714654##
                   Lib.$trModule
                   Lib.$tc'GL000224P2) -}
7693ee05bad34c8154fe6ee6c7ee1583
  $tc'GL000224P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GL000224P1"#) -}
e56d0e89751ba8b333025185b4c566a9
  $tc'GL000225P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9432973899144056598##
                   1733331064874916066##
                   Lib.$trModule
                   Lib.$tc'GL000225P2) -}
6283ef04147d425936b20ed4fd6046d8
  $tc'GL000225P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GL000225P1"#) -}
b083e77a7e2fc68f82928a76aef1c807
  $tc'GL000226P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14361537873630814469##
                   14637264915124760782##
                   Lib.$trModule
                   Lib.$tc'GL000226P2) -}
2d4bbcc56e49517e841ef79c8e8c95f4
  $tc'GL000226P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GL000226P1"#) -}
168595268650da1c156d57bb0617c4f5
  $tc'GL000227P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2133387330442213318##
                   754757994518729992##
                   Lib.$trModule
                   Lib.$tc'GL000227P2) -}
92e6fdc603c2646a6e5e60fb787b447a
  $tc'GL000227P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GL000227P1"#) -}
0e59304faabff14fcbe31018d13a8061
  $tc'GL000228P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   913738911935154039##
                   16977878141856179046##
                   Lib.$trModule
                   Lib.$tc'GL000228P2) -}
32db826cc30a15ed59ce4f13cb5fdc0f
  $tc'GL000228P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GL000228P1"#) -}
ab78211d19751e27a2317eed1edd261e
  $tc'GL000229P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7814140183960265896##
                   12884525576778195884##
                   Lib.$trModule
                   Lib.$tc'GL000229P2) -}
d3971eb241b0a74975102e8c36060283
  $tc'GL000229P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GL000229P1"#) -}
b05b66c9fdcdb7903c256147fd250aa1
  $tc'GL000230P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2699263875851880543##
                   16592769838664121317##
                   Lib.$trModule
                   Lib.$tc'GL000230P2) -}
927b50e806055c0d4e71042a6c9ff5ab
  $tc'GL000230P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GL000230P1"#) -}
b8cc1447353dc8ab8170146725b91bad
  $tc'GL000231P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7465112091385508548##
                   11884085843265539921##
                   Lib.$trModule
                   Lib.$tc'GL000231P2) -}
924f20922139bbe18dab0d63628e852f
  $tc'GL000231P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GL000231P1"#) -}
d9d249cc23f7808e045318b15d8ccf2a
  $tc'GL000232P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14618527856913302946##
                   14302246529741380394##
                   Lib.$trModule
                   Lib.$tc'GL000232P2) -}
68d5e2aee067129bbf8b4b56126747f9
  $tc'GL000232P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GL000232P1"#) -}
39cb1c2339766b6cf824319f0b5aa801
  $tc'GL000233P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10753376074155917195##
                   1798818818873252908##
                   Lib.$trModule
                   Lib.$tc'GL000233P2) -}
161db2c6769364e22eb68ade71186a04
  $tc'GL000233P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GL000233P1"#) -}
405343dbe7424aeb206e656640d79c8d
  $tc'GL000234P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11465355265183895988##
                   2731614803064088161##
                   Lib.$trModule
                   Lib.$tc'GL000234P2) -}
4852a20ea33609c577df99f0adddd617
  $tc'GL000234P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GL000234P1"#) -}
f962d1c0a3297e34aac0b7306b2b5789
  $tc'GL000235P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16164147256103081841##
                   4854500940503616968##
                   Lib.$trModule
                   Lib.$tc'GL000235P2) -}
bb6bdface3de303058656a1c472953d9
  $tc'GL000235P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GL000235P1"#) -}
fcc0c509843702f63a620b9327beb1ba
  $tc'GL000236P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4095340562590966488##
                   14190793919377838376##
                   Lib.$trModule
                   Lib.$tc'GL000236P2) -}
02e584d3b1a99c68fea5b934c06cfd63
  $tc'GL000236P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GL000236P1"#) -}
401b8c08a4cba3f7c919eaaf01293294
  $tc'GL000237P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11733778889265496468##
                   1907973718950674366##
                   Lib.$trModule
                   Lib.$tc'GL000237P2) -}
954216143a5f73fe937435b60efac9fb
  $tc'GL000237P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GL000237P1"#) -}
a003fbc5f1472bbd956688a760c21043
  $tc'GL000238P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9640348834775934074##
                   16873504314220849040##
                   Lib.$trModule
                   Lib.$tc'GL000238P2) -}
3060cdae54fd22c76349c4dedaaa81c8
  $tc'GL000238P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GL000238P1"#) -}
a7820da3ae748722734df2aecf801296
  $tc'GL000239P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   76381905460948042##
                   17939064373890135062##
                   Lib.$trModule
                   Lib.$tc'GL000239P2) -}
39b08d387916537fb43acbb8163e9e38
  $tc'GL000239P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GL000239P1"#) -}
a28f6c21e9865c6aa41ac39e60937c79
  $tc'GL000240P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3775387274936210063##
                   3867353058035614558##
                   Lib.$trModule
                   Lib.$tc'GL000240P2) -}
81ff2cdd5e35cdf087228cc881ff3d20
  $tc'GL000240P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GL000240P1"#) -}
d7f2aa46088404004d551e2f4c314220
  $tc'GL000241P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14282443630397036584##
                   11919115045150025134##
                   Lib.$trModule
                   Lib.$tc'GL000241P2) -}
fc8ebb1c148b2a59d7147b099aeb72fa
  $tc'GL000241P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GL000241P1"#) -}
64f34c28f5f870216f2faae5492281f5
  $tc'GL000242P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15034197965465648419##
                   6551257582597808049##
                   Lib.$trModule
                   Lib.$tc'GL000242P2) -}
6e35e30fbc98f655c0f9d1b07d8ef71f
  $tc'GL000242P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GL000242P1"#) -}
5621376cd79647eb621f634252f012b4
  $tc'GL000243P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6665484224123319701##
                   15591373988586791855##
                   Lib.$trModule
                   Lib.$tc'GL000243P2) -}
7539d90ed0de74999df7c93a69112d36
  $tc'GL000243P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GL000243P1"#) -}
b0be505c4a432056bda60bee632ad915
  $tc'GL000244P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4044409292675085502##
                   7220181351239092033##
                   Lib.$trModule
                   Lib.$tc'GL000244P2) -}
fd60d420338d304c0090b5a042facefd
  $tc'GL000244P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GL000244P1"#) -}
5b61adbe5240bb4dac55426f14aaddc1
  $tc'GL000245P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3092965320848354525##
                   12825911654887024364##
                   Lib.$trModule
                   Lib.$tc'GL000245P2) -}
e554fea1e9b17bf9b9a60feeb1a7ebe2
  $tc'GL000245P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GL000245P1"#) -}
d5ba08b95bc25be4837febee0ff2f6cc
  $tc'GL000246P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12721847304331866888##
                   3628377585556248170##
                   Lib.$trModule
                   Lib.$tc'GL000246P2) -}
f69b08bee3c3fb9924c1e40eb76d3c5f
  $tc'GL000246P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GL000246P1"#) -}
857f6b42147ecb9c01491977e4aa77db
  $tc'GL000247P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3710654536813656277##
                   9264726535225948471##
                   Lib.$trModule
                   Lib.$tc'GL000247P2) -}
129fe4e06c6843c81b8e0d1e43232960
  $tc'GL000247P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GL000247P1"#) -}
37d7bc0c685c93c355c44133d2fcbbbc
  $tc'GL000248P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   277928159780419765##
                   13035330467379226814##
                   Lib.$trModule
                   Lib.$tc'GL000248P2) -}
9dc8fa834210053645e0e5dad7e3d677
  $tc'GL000248P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GL000248P1"#) -}
1efed4b2c20712ac68350f348fba5f0d
  $tc'GL000249P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8616839685550789135##
                   14720567512906454246##
                   Lib.$trModule
                   Lib.$tc'GL000249P2) -}
ef219b34ec4b782f0ba8faa5a3efe530
  $tc'GL000249P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GL000249P1"#) -}
1b4ce3dd2602b016010633e2ead78b0e
  $tc'GRC :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5017673451707684962##
                   10271854730421675720##
                   Lib.$trModule
                   Lib.$tc'GRC1) -}
a9e9adc2ab40f1b9687c8956d259709c
  $tc'GRC1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GRC"#) -}
d88c8b030ee221a00074c59883932b49
  $tc'MasterRecord :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12702800069698083817##
                   6405287360593179891##
                   Lib.$trModule
                   Lib.$tc'MasterRecord1) -}
24cd56162b99a2b7f863fd58c96b3164
  $tc'MasterRecord1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'MasterRecord"#) -}
b73434e39b3a948384dc6f349ebc7cc5
  $tc'MidFamily :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11301724566796995610##
                   2913647507868086967##
                   Lib.$trModule
                   Lib.$tc'MidFamily1) -}
5d44b5651f342367b5417f0913cfde77
  $tc'MidFamily1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'MidFamily"#) -}
85178c5ebad636248bce0206bbf58d5b
  $tc'NC_007605 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9545244295881243059##
                   7195432022974444318##
                   Lib.$trModule
                   Lib.$tc'NC_1) -}
46c571864c6783a21bf033cb944676c2
  $tc'NC_1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'NC_007605"#) -}
b1742ed4bc1cc579d868bb1655c564a4
  $tc'NONE :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3001712735811195861##
                   14257473114659783978##
                   Lib.$trModule
                   Lib.$tc'NONE1) -}
d46d3f4e6fa15352ffe7b798d8561ddc
  $tc'NONE1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'NONE"#) -}
eec04a2847c7f7e04596104f688381ac
  $tc'SAMFlag :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5030398388852873285##
                   819245797572300035##
                   Lib.$trModule
                   Lib.$tc'SAMFlag1) -}
abd1703690e0cc272b164a57c3f8a68a
  $tc'SAMFlag1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'SAMFlag"#) -}
7de835d88ea2d6ecabab344b41792610
  $tc'UCSC :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14232094395662464439##
                   10281372802269522425##
                   Lib.$trModule
                   Lib.$tc'UCSC1) -}
bac48213a0a9f10453fdd365de5a3b89
  $tc'UCSC1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'UCSC"#) -}
ab70ccea251b9a92129057d0402ebbec
  $tcAlignedRead :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2366738506459790920##
                   17195853392191363596##
                   Lib.$trModule
                   Lib.$tcAlignedRead1) -}
6b9e56c40c18c36dc47a3457c3b39dc3
  $tcAlignedRead1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "AlignedRead"#) -}
591c7247589c6e584416db238baffa6d
  $tcBedRecord :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8577005006252519801##
                   13463286475000063712##
                   Lib.$trModule
                   Lib.$tcBedRecord1) -}
d6d7c0486a84b0cabee67e71eee6915c
  $tcBedRecord1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "BedRecord"#) -}
1faef233cd8a0b2871e157455072e083
  $tcChromNameFormat :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7466356675205063650##
                   8368588358478235716##
                   Lib.$trModule
                   Lib.$tcChromNameFormat1) -}
03f936b148fc04834edf409079ee7388
  $tcChromNameFormat1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "ChromNameFormat"#) -}
6b053523645d145954fbcc7cf46eb8f1
  $tcMasterRecord :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2993037032890038225##
                   12321023017948353996##
                   Lib.$trModule
                   Lib.$tcMasterRecord1) -}
fa774fc3890d0e72d70740017076f645
  $tcMasterRecord1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "MasterRecord"#) -}
c801d0fc5e9f28a126ebcf1bd0b44ca1
  $tcMidFamily :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15890700225740093230##
                   2418392913577979616##
                   Lib.$trModule
                   Lib.$tcMidFamily1) -}
8afed7ca296819a910b49378ba75310a
  $tcMidFamily1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "MidFamily"#) -}
5d4c9143fed017909e8c621bbaf1d1e1
  $tcSAMFlag :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10771913437236592435##
                   16325344273080206741##
                   Lib.$trModule
                   Lib.$tcSAMFlag1) -}
65e4520b6c4a231768883cdcf4c5e305
  $tcSAMFlag1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "SAMFlag"#) -}
89af2d6f0a800617079f7fe8ded41853
  $tcUChr :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10999201237608052851##
                   3585648071710129888##
                   Lib.$trModule
                   Lib.$tcUChr1) -}
fe0eab0c495b1cd8ee5db3a01c0f5784
  $tcUChr1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "UChr"#) -}
85e907475d731b315e74fce35eeb9cf7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Lib.$trModule2 Lib.$trModule1) -}
e7a607c2c03461808729be27692aca72
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Lib"#) -}
a2a38f4acdbc37e2c3aa1d36c120e67e
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "primerclip-0.1.0.0-KtmdnGpJra4GypcvVGF2ng"#) -}
30f22b3cb7bc15350621fbb55e72bcf2
  $w$c< ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: Lib.UChr)
                   (ww3 :: GHC.Integer.Type.Integer) ->
                 let {
                   a# :: GHC.Prim.Int# = GHC.Prim.dataToTag# @ Lib.UChr ww
                 } in
                 let {
                   b# :: GHC.Prim.Int# = GHC.Prim.dataToTag# @ Lib.UChr ww2
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww1 ww3 of wild2 {
                             DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True } }
                   GHC.Types.True -> GHC.Types.True }) -}
45c05c6288dda0786e1888d5729c8f19
  $w$c<= ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: Lib.UChr)
                   (ww3 :: GHC.Integer.Type.Integer) ->
                 let {
                   a# :: GHC.Prim.Int# = GHC.Prim.dataToTag# @ Lib.UChr ww
                 } in
                 let {
                   b# :: GHC.Prim.Int# = GHC.Prim.dataToTag# @ Lib.UChr ww2
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww1 ww3 of wild2 {
                             DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False } }
                   GHC.Types.True -> GHC.Types.True }) -}
45f0c623adf4a6c0b8994490891e4ff6
  $w$c== ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> Lib.CigarMap
    -> Lib.CigarMap
    -> Data.ByteString.Internal.ByteString
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> [Lib.BedRecord]
    -> [Lib.BedRecord]
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Lib.Header
    -> GHC.Types.Bool
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> Lib.BedRecord
    -> GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> Lib.CigarMap
    -> Lib.CigarMap
    -> Data.ByteString.Internal.ByteString
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> [Lib.BedRecord]
    -> [Lib.BedRecord]
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Lib.Header
    -> GHC.Types.Bool
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> Lib.BedRecord
    -> GHC.Types.Bool
  {- Arity: 66, HasNoCafRefs,
     Strictness: <L,U><L,U><L,U><S,U><L,1*U(U)><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U(U,U,U,U)><L,1*U(U,U,U,U)><L,1*U><L,1*U><L,1*U(U,U,U,U)><L,1*U><L,1*U><L,1*U(U,U,U,U)><L,1*U(U,U,U,U)><L,1*U(U,U,U,U)><L,1*U(U,U,U,U)><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U(U,U,U,U)><L,1*U(U,U,U,U)><L,1*U(1*U,1*U,1*U,1*U(U,U,U,U))><L,U><L,U><L,U><S,U><L,1*U(U)><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U(U,U,U,U)><L,1*U(U,U,U,U)><L,1*U><L,1*U><L,1*U(U,U,U,U)><L,1*U><L,1*U><L,1*U(U,U,U,U)><L,1*U(U,U,U,U)><L,1*U(U,U,U,U)><L,1*U(U,U,U,U)><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U(U,U,U,U)><L,1*U(U,U,U,U)><L,1*U(1*U,1*U,1*U,1*U(U,U,U,U))>,
     Inline: [0] -}
de21d871fe83f0f9f882d96bfc539df0
  $w$c==1 ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> GHC.Types.Bool
  {- Arity: 8, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><L,1*U(U,U,U,U)><S,1*U><L,1*U><L,1*U><L,1*U(U,U,U,U)>,
     Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: GHC.Integer.Type.Integer)
                   (ww3 :: Data.ByteString.Internal.ByteString)
                   (ww4 :: Lib.UChr)
                   (ww5 :: GHC.Integer.Type.Integer)
                   (ww6 :: GHC.Integer.Type.Integer)
                   (ww7 :: Data.ByteString.Internal.ByteString) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==#
                           (GHC.Prim.dataToTag# @ Lib.UChr ww)
                           (GHC.Prim.dataToTag# @ Lib.UChr ww4)) of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case GHC.Integer.Type.eqInteger# ww1 ww5 of wild1 { DEFAULT ->
                      case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild1 of wild2 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case GHC.Integer.Type.eqInteger# ww2 ww6 of wild3 { DEFAULT ->
                           case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild3 of wild4 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True -> Data.ByteString.Internal.eq ww3 ww7 } } } } }) -}
99081a1b67a38fb156fd8f0777f9eea2
  $w$c==2 ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> GHC.Types.Bool
  {- Arity: 24, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><L,1*U(U,U,U,U)><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U(U,U,U,U)><L,1*U(U,U,U,U)><L,1*U(U,U,U,U)><L,1*U(U,U,U,U)><S,1*U><L,1*U><L,1*U><L,1*U(U,U,U,U)><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U(U,U,U,U)><L,1*U(U,U,U,U)><L,1*U(U,U,U,U)><L,1*U(U,U,U,U)>,
     Inline: [0] -}
54989fc09031302a43254f76ef031d23
  $w$c==3 ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> [Lib.AlignedRead]
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Lib.BedRecord
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> [Lib.AlignedRead]
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Lib.BedRecord
    -> GHC.Types.Bool
  {- Arity: 20, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><L,1*U(U,U,U,U)><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U(1*U,1*U,1*U,1*U(U,U,U,U))><S,1*U><L,1*U><L,1*U><L,1*U(U,U,U,U)><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U(1*U,1*U,1*U,1*U(U,U,U,U))>,
     Inline: [0] -}
39d75803a95e68b97b2878a5037e83dc
  $w$c==4 ::
    GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Types.Bool
  {- Arity: 24, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U(U)><S,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U(U)>,
     Inline: [0] -}
05cef6c14eff2654f196c560bfa5df7d
  $w$c> ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: Lib.UChr)
                   (ww3 :: GHC.Integer.Type.Integer) ->
                 let {
                   a# :: GHC.Prim.Int# = GHC.Prim.dataToTag# @ Lib.UChr ww
                 } in
                 let {
                   b# :: GHC.Prim.Int# = GHC.Prim.dataToTag# @ Lib.UChr ww2
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww1 ww3 of wild2 {
                             DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True } }
                   GHC.Types.True -> GHC.Types.False }) -}
87de6916f10d42794d8d7693047c608b
  $w$c>= ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: Lib.UChr)
                   (ww3 :: GHC.Integer.Type.Integer) ->
                 let {
                   a# :: GHC.Prim.Int# = GHC.Prim.dataToTag# @ Lib.UChr ww
                 } in
                 let {
                   b# :: GHC.Prim.Int# = GHC.Prim.dataToTag# @ Lib.UChr ww2
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww1 ww3 of wild2 {
                             DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False } }
                   GHC.Types.True -> GHC.Types.False }) -}
5791d76b21da1d362ad9427b5c648ca8
  $w$ccompare ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Ordering
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><S,1*U><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: GHC.Integer.Type.Integer)
                   (ww3 :: Lib.UChr)
                   (ww4 :: GHC.Integer.Type.Integer)
                   (ww5 :: GHC.Integer.Type.Integer) ->
                 let {
                   a# :: GHC.Prim.Int# = GHC.Prim.dataToTag# @ Lib.UChr ww
                 } in
                 let {
                   b# :: GHC.Prim.Int# = GHC.Prim.dataToTag# @ Lib.UChr ww3
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.GT
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww1 ww4 of wild2 {
                             GHC.Types.LT -> GHC.Types.LT
                             GHC.Types.EQ -> GHC.Integer.Type.compareInteger ww2 ww5
                             GHC.Types.GT -> GHC.Types.GT } }
                   GHC.Types.True -> GHC.Types.LT }) -}
201785824a503effd7eb448bce1dd004
  $w$ccompare1 ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Ordering
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: Lib.UChr)
                   (ww3 :: GHC.Integer.Type.Integer) ->
                 let {
                   a# :: GHC.Prim.Int# = GHC.Prim.dataToTag# @ Lib.UChr ww
                 } in
                 let {
                   b# :: GHC.Prim.Int# = GHC.Prim.dataToTag# @ Lib.UChr ww2
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.GT
                        GHC.Types.True -> GHC.Integer.Type.compareInteger ww1 ww3 }
                   GHC.Types.True -> GHC.Types.LT }) -}
ea964a0c309211156803eccd8ce7eaa1
  $w$ccompare2 ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Ordering
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><S,1*U><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: GHC.Integer.Type.Integer)
                   (ww3 :: Lib.UChr)
                   (ww4 :: GHC.Integer.Type.Integer)
                   (ww5 :: GHC.Integer.Type.Integer) ->
                 let {
                   a# :: GHC.Prim.Int# = GHC.Prim.dataToTag# @ Lib.UChr ww
                 } in
                 let {
                   b# :: GHC.Prim.Int# = GHC.Prim.dataToTag# @ Lib.UChr ww3
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.GT
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww1 ww4 of wild2 {
                             GHC.Types.LT -> GHC.Types.LT
                             GHC.Types.EQ -> GHC.Integer.Type.compareInteger ww2 ww5
                             GHC.Types.GT -> GHC.Types.GT } }
                   GHC.Types.True -> GHC.Types.LT }) -}
ccf400d39bd2b1b1de390ea30d9c308a
  $w$ccompare3 ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Ordering
  {- Arity: 8, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><L,1*U><S,1*U><L,1*U><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: GHC.Integer.Type.Integer)
                   (ww3 :: GHC.Integer.Type.Integer)
                   (ww4 :: Lib.UChr)
                   (ww5 :: GHC.Integer.Type.Integer)
                   (ww6 :: GHC.Integer.Type.Integer)
                   (ww7 :: GHC.Integer.Type.Integer) ->
                 let {
                   a# :: GHC.Prim.Int# = GHC.Prim.dataToTag# @ Lib.UChr ww
                 } in
                 let {
                   b# :: GHC.Prim.Int# = GHC.Prim.dataToTag# @ Lib.UChr ww4
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.GT
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww1 ww5 of wild2 {
                             GHC.Types.LT -> GHC.Types.LT
                             GHC.Types.EQ
                             -> case GHC.Integer.Type.compareInteger ww2 ww6 of wild3 {
                                  GHC.Types.LT -> GHC.Types.LT
                                  GHC.Types.EQ -> GHC.Integer.Type.compareInteger ww3 ww7
                                  GHC.Types.GT -> GHC.Types.GT }
                             GHC.Types.GT -> GHC.Types.GT } }
                   GHC.Types.True -> GHC.Types.LT }) -}
b82f50bc6e14cf4a8eeaa58d0f2b3119
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> Data.ByteString.Internal.ByteString
    -> GHC.Types.Int
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> Lib.CigarMap
    -> Lib.CigarMap
    -> Data.ByteString.Internal.ByteString
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> [Lib.BedRecord]
    -> [Lib.BedRecord]
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Lib.Header
    -> GHC.Types.Bool
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> Lib.BedRecord
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 32,
     Strictness: <S,U><L,1*U(U,U,U,U)><L,1*U(U)><L,1*U><L,U><L,U><L,U><L,1*U(U,U,U,U)><L,1*U(U,U,U,U)><L,1*U><L,1*U><L,1*U(U,U,U,U)><L,U><L,U><L,1*U(U,U,U,U)><L,1*U(U,U,U,U)><L,1*U(U,U,U,U)><L,1*U(U,U,U,U)><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,U><L,U><L,1*U><L,1*U><L,1*U(U,U,U,U)><L,1*U(U,U,U,U)><L,1*U(1*U,U,U,1*U(U,U,U,U))><L,U>,
     Inline: [0] -}
1ac25bbd6edfd1e1e941e3b72ca6a4ec
  $w$cshowsPrec1 ::
    GHC.Prim.Int#
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 6,
     Strictness: <S,U><L,1*U><L,U><L,U><L,1*U(U,U,U,U)><L,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: Lib.UChr)
                   (ww2 :: GHC.Integer.Type.Integer)
                   (ww3 :: GHC.Integer.Type.Integer)
                   (ww4 :: Data.ByteString.Internal.ByteString)
                   (w :: GHC.Base.String) ->
                 let {
                   g :: GHC.Base.String -> GHC.Base.String
                     {- Arity: 1, Strictness: <L,1*U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       Lib.$fShowBedRecord8
                       (GHC.Base.++
                          @ GHC.Types.Char
                          (Lib.$fShowBedRecord_$cshow ww1)
                          (GHC.Base.++
                             @ GHC.Types.Char
                             Lib.$fShowBedRecord7
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Lib.$fShowBedRecord6
                                (case GHC.Show.$w$cshowsPrec1
                                        0#
                                        ww2
                                        (GHC.Base.++
                                           @ GHC.Types.Char
                                           Lib.$fShowBedRecord7
                                           (GHC.Base.++
                                              @ GHC.Types.Char
                                              Lib.$fShowBedRecord5
                                              (case GHC.Show.$w$cshowsPrec1
                                                      0#
                                                      ww3
                                                      (GHC.Base.++
                                                         @ GHC.Types.Char
                                                         Lib.$fShowBedRecord7
                                                         (GHC.Base.++
                                                            @ GHC.Types.Char
                                                            Lib.$fShowBedRecord4
                                                            (GHC.Types.:
                                                               @ GHC.Types.Char
                                                               GHC.Show.shows6
                                                               (case ww4 of ww5 { Data.ByteString.Internal.PS ww6 ww7 ww8 ww9 ->
                                                                GHC.Show.showLitString
                                                                  (Data.ByteString.Internal.$wunpackAppendCharsLazy
                                                                     ww6
                                                                     ww7
                                                                     ww8
                                                                     ww9
                                                                     (GHC.Types.[]
                                                                        @ GHC.Types.Char))
                                                                  (GHC.Types.:
                                                                     @ GHC.Types.Char
                                                                     GHC.Show.shows6
                                                                     (GHC.Base.++
                                                                        @ GHC.Types.Char
                                                                        Lib.$fShowBedRecord3
                                                                        x)) })))) of ww5 { (#,#) ww6 ww7 ->
                                               GHC.Types.:
                                                 @ GHC.Types.Char
                                                 ww6
                                                 ww7 }))) of ww5 { (#,#) ww6 ww7 ->
                                 GHC.Types.: @ GHC.Types.Char ww6 ww7 }))))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False
                   -> GHC.Base.++ @ GHC.Types.Char Lib.$fShowBedRecord2 (g w)
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows7
                        (GHC.Base.++
                           @ GHC.Types.Char
                           Lib.$fShowBedRecord2
                           (g (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 w))) }) -}
4fb8f7635273f04c9049306cc00a07ce
  $w$cshowsPrec2 ::
    GHC.Prim.Int#
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 14,
     Strictness: <S,U><L,1*U><L,U><L,U><L,1*U(U,U,U,U)><L,U><L,U><L,U><L,U><L,1*U(U,U,U,U)><L,1*U(U,U,U,U)><L,1*U(U,U,U,U)><L,1*U(U,U,U,U)><L,U>,
     Inline: [0] -}
5954761ddbe71290da146cd68f73af67
  $w$cshowsPrec3 ::
    GHC.Prim.Int#
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> [Lib.AlignedRead]
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Lib.BedRecord
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 12,
     Strictness: <S,U><L,1*U><L,U><L,U><L,1*U(U,U,U,U)><L,1*U><L,U><L,U><L,U><L,U><L,1*U(1*U,U,U,1*U(U,U,U,U))><L,U>,
     Inline: [0] -}
edeb906f64465ed2e0bf5143e1bec230
  $w$cshowsPrec4 ::
    GHC.Prim.Int#
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 14,
     Strictness: <S,U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U(U)><L,U>,
     Inline: [0] -}
729a34be9738ea3507254144802cc56b
  $w$ctoEnum :: GHC.Prim.Int# -> Lib.ChromNameFormat
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 0#) of wild {
                   GHC.Types.False -> Lib.$fEnumChromNameFormat1 ww
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# ww 1#) of wild1 {
                        GHC.Types.False -> Lib.$fEnumChromNameFormat1 ww
                        GHC.Types.True
                        -> GHC.Prim.tagToEnum# @ Lib.ChromNameFormat ww } }) -}
3b7e185ad71459af8d347e25da054651
  $w$ctoEnum1 :: GHC.Prim.Int# -> Lib.UChr
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 0#) of wild {
                   GHC.Types.False -> Lib.$fEnumUChr1 ww
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# ww 110#) of wild1 {
                        GHC.Types.False -> Lib.$fEnumUChr1 ww
                        GHC.Types.True -> GHC.Prim.tagToEnum# @ Lib.UChr ww } }) -}
d58d8a174d2dc370b759e497a05badae
  $w$sgo4 ::
    GHC.Prim.Int#
    -> a1
    -> Data.Map.Base.Map GHC.Types.Int a1
    -> Data.Map.Base.Map GHC.Types.Int a1
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
9c837f02398bab7b4d8dedf5f371a97d
  $waddprimerints ::
    Lib.CMap
    -> Lib.CMap
    -> Data.ByteString.Internal.ByteString
    -> GHC.Types.Int
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> Lib.CigarMap
    -> Lib.CigarMap
    -> Data.ByteString.Internal.ByteString
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Lib.Header
    -> GHC.Types.Bool
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> Lib.BedRecord
    -> Lib.AlignedRead
  {- Arity: 29, HasNoCafRefs,
     Strictness: <L,1*U><L,1*U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ (w :: Lib.CMap)
                   (w1 :: Lib.CMap)
                   (ww :: Data.ByteString.Internal.ByteString)
                   (ww1 :: GHC.Types.Int)
                   (ww2 :: Lib.UChr)
                   (ww3 :: GHC.Integer.Type.Integer)
                   (ww4 :: GHC.Integer.Type.Integer)
                   (ww5 :: GHC.Integer.Type.Integer)
                   (ww6 :: Data.ByteString.Internal.ByteString)
                   (ww7 :: Data.ByteString.Internal.ByteString)
                   (ww8 :: Lib.CigarMap)
                   (ww9 :: Lib.CigarMap)
                   (ww10 :: Data.ByteString.Internal.ByteString)
                   (ww11 :: GHC.Integer.Type.Integer)
                   (ww12 :: GHC.Integer.Type.Integer)
                   (ww13 :: Data.ByteString.Internal.ByteString)
                   (ww14 :: Data.ByteString.Internal.ByteString)
                   (ww15 :: Data.ByteString.Internal.ByteString)
                   (ww16 :: Data.ByteString.Internal.ByteString)
                   (ww17 :: GHC.Types.Bool)
                   (ww18 :: GHC.Types.Bool)
                   (ww19 :: GHC.Types.Bool)
                   (ww20 :: GHC.Integer.Type.Integer)
                   (ww21 :: GHC.Integer.Type.Integer)
                   (ww22 :: Lib.Header)
                   (ww23 :: GHC.Types.Bool)
                   (ww24 :: Data.ByteString.Internal.ByteString)
                   (ww25 :: Data.ByteString.Internal.ByteString)
                   (ww26 :: Lib.BedRecord) ->
                 let {
                   starthits :: [Lib.BedRecord]
                   = Data.Maybe.catMaybes1
                       @ Lib.BedRecord
                       (GHC.Base.map
                          @ (Data.IntMap.Base.IntMap Lib.BedRecord)
                          @ (GHC.Base.Maybe Lib.BedRecord)
                          (\ (bmap :: Data.IntMap.Base.IntMap Lib.BedRecord) ->
                           case GHC.Integer.Type.integerToInt ww3 of wild { DEFAULT ->
                           Data.IntMap.Base.$wlookup @ Lib.BedRecord wild bmap })
                          (Data.Maybe.catMaybes1
                             @ (Data.IntMap.Base.IntMap Lib.BedRecord)
                             (GHC.Types.:
                                @ (GHC.Base.Maybe (Data.IntMap.Base.IntMap Lib.BedRecord))
                                (Lib.$slookup1 @ (Data.IntMap.Base.IntMap Lib.BedRecord) ww2 w)
                                (GHC.Types.[]
                                   @ (GHC.Base.Maybe (Data.IntMap.Base.IntMap Lib.BedRecord))))))
                 } in
                 let {
                   endhits :: [Lib.BedRecord]
                   = Data.Maybe.catMaybes1
                       @ Lib.BedRecord
                       (GHC.Base.map
                          @ (Data.IntMap.Base.IntMap Lib.BedRecord)
                          @ (GHC.Base.Maybe Lib.BedRecord)
                          (\ (bmap :: Data.IntMap.Base.IntMap Lib.BedRecord) ->
                           case GHC.Integer.Type.integerToInt ww4 of wild { DEFAULT ->
                           Data.IntMap.Base.$wlookup @ Lib.BedRecord wild bmap })
                          (Data.Maybe.catMaybes1
                             @ (Data.IntMap.Base.IntMap Lib.BedRecord)
                             (GHC.Types.:
                                @ (GHC.Base.Maybe (Data.IntMap.Base.IntMap Lib.BedRecord))
                                (Lib.$slookup1 @ (Data.IntMap.Base.IntMap Lib.BedRecord) ww2 w1)
                                (GHC.Types.[]
                                   @ (GHC.Base.Maybe (Data.IntMap.Base.IntMap Lib.BedRecord))))))
                 } in
                 Lib.AlignedRead
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   starthits
                   endhits
                   (case GHC.List.$wlenAcc
                           @ Lib.BedRecord
                           (Data.OldList.sortBy
                              @ Lib.BedRecord
                              Lib.$fOrdBedRecord_$ccompare
                              (GHC.Base.++ @ Lib.BedRecord starthits endhits))
                           0# of ww27 { DEFAULT ->
                    GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.># ww27 0#) })
                   ww19
                   ww20
                   ww21
                   ww22
                   ww23
                   ww24
                   ww25
                   ww26) -}
dc01a650e75f7e798430fe06f4fbf283
  $walnparser ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.AlignedRead
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
b5612ea29bc2ceda1356d3d3355608b1
  $wbedrecparser ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.BedRecord
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <L,U><L,U><L,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
9b6946f3632b6a71053026e141c8b781
  $wcheckChromNameMatchStatus ::
    Lib.Header
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Array# Lib.BedRecord
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 5, Strictness: <L,U><L,U><S,U><L,U><S,U>, Inline: [0] -}
151eeba864fa0901b6a5fb19064de57d
  $wcheckcigseqlen ::
    Data.ByteString.Internal.ByteString
    -> GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Types.Bool
  {- Arity: 5, Strictness: <L,1*U(U,U,U,U)><S,U><L,U><S,U><S,U>,
     Inline: [0],
     Unfolding: (\ (ww :: Data.ByteString.Internal.ByteString)
                   (ww1 :: GHC.Prim.Addr#)
                   (ww2 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#) ->
                 case GHC.Integer.Type.eqInteger#
                        (Lib.checkcigseqlen_go (Lib.mapcig ww) Lib.checkCigarSeqlen1)
                        (Lib.checkcigseqlen_gl
                           (Data.ByteString.Internal.$wunpackAppendCharsLazy
                              ww1
                              ww2
                              ww3
                              ww4
                              (GHC.Types.[] @ GHC.Types.Char))
                           Data.OldList.genericLength1) of wild { DEFAULT ->
                 GHC.Prim.tagToEnum# @ GHC.Types.Bool wild }) -}
92c5dcddc0598a6b14cc1efd73c280fa
  $wcheckcigseqlen2 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> GHC.Types.Bool
  {- Arity: 6,
     Strictness: <L,U><L,U><L,U><S,U><L,1*U(U,U,U,U)><L,1*U(U,U,U,U)>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: Data.ByteString.Internal.ByteString)
                   (ww5 :: Data.ByteString.Internal.ByteString) ->
                 case Lib.checkcigseqlen1 of wild1 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                 let {
                   $j :: GHC.Prim.Void# -> GHC.Types.Bool
                     {- Arity: 1, Strictness: <L,A> -}
                   = \ (w :: GHC.Prim.Void#)[OneShot] ->
                     case ww5 of ww6 { Data.ByteString.Internal.PS ww7 ww8 ww9 ww10 ->
                     let {
                       tcmap :: Lib.CigarMap = Lib.mapcig ww4
                     } in
                     case GHC.Integer.Type.eqInteger#
                            (Lib.checkcigseqlen2_go tcmap Lib.checkCigarSeqlen1)
                            (Lib.checkcigseqlen2_gl
                               (Data.ByteString.Internal.$wunpackAppendCharsLazy
                                  ww7
                                  ww8
                                  ww9
                                  ww10
                                  (GHC.Types.[] @ GHC.Types.Char))
                               Data.OldList.genericLength1) of wild { DEFAULT ->
                     case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild of wild2 {
                       GHC.Types.False -> GHC.Types.False
                       GHC.Types.True
                       -> case GHC.Integer.Type.gtInteger#
                                 (Lib.checkCigarSeqlen_go tcmap Lib.checkCigarSeqlen1)
                                 Lib.checkCigarSeqlen1 of wild3 { DEFAULT ->
                          GHC.Prim.tagToEnum# @ GHC.Types.Bool wild3 } } } }
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim./=# ww3 dt7) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqAddr# ww dt4) of wild {
                        GHC.Types.False
                        -> case Data.ByteString.Internal.$wcompareBytes
                                  ww
                                  ww1
                                  ww2
                                  ww3
                                  dt4
                                  dt5
                                  dt6
                                  dt7 of wild4 {
                             DEFAULT -> $j GHC.Prim.void# GHC.Types.EQ -> GHC.Types.True }
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# ww2 dt6) of wild3 {
                             GHC.Types.False
                             -> case Data.ByteString.Internal.$wcompareBytes
                                       ww
                                       ww1
                                       ww2
                                       ww3
                                       dt4
                                       dt5
                                       dt6
                                       dt7 of wild4 {
                                  DEFAULT -> $j GHC.Prim.void# GHC.Types.EQ -> GHC.Types.True }
                             GHC.Types.True -> GHC.Types.True } }
                   GHC.Types.True -> $j GHC.Prim.void# } }) -}
30609681fa96adddc52568a6693fdc46
  $wchecknonzeroCigMatch ::
    Data.ByteString.Internal.ByteString
    -> GHC.Types.Bool -> GHC.Types.Bool -> GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,1*U(U,U,U,1*U)><L,1*U><S,1*U>, Inline: [0],
     Unfolding: (\ (ww :: Data.ByteString.Internal.ByteString)
                   (ww1 :: GHC.Types.Bool)
                   (ww2 :: GHC.Types.Bool) ->
                 case ww2 of wild {
                   GHC.Types.False
                   -> case ww1 of wild1 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True
                        -> case ww of wild2 { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                           case dt3 of ds6 {
                             DEFAULT
                             -> case Lib.$wgo
                                       (GHC.Prim.plusAddr# dt dt2)
                                       (GHC.Prim.plusAddr# dt (GHC.Prim.+# dt2 ds6))
                                       GHC.Prim.realWorld# of ds7 { (#,#) ipv ipv1 ->
                                case GHC.Prim.touch#
                                       @ 'GHC.Types.PtrRepLifted
                                       @ GHC.ForeignPtr.ForeignPtrContents
                                       dt1
                                       ipv of s' { DEFAULT ->
                                ipv1 } }
                             0# -> GHC.Types.False } } }
                   GHC.Types.True -> GHC.Types.True }) -}
57db558c5856df8c3c5ba07c5c3610d5
  $wcigarP ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                            r) ->
                 Lib.$weta
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w
                   w1
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (a1 :: (GHC.Integer.Type.Integer,
                              Data.ByteString.Internal.ByteString))[OneShot] ->
                    case t'
                           `cast`
                         (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww7 { Data.Attoparsec.ByteString.Buffer.Buf ww8 ww9 ww10 ww11 ww12 ww13 ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww14 { GHC.Types.I# ww15 ->
                    Lib.$wmany_v1
                      @ r
                      ww8
                      ww9
                      ww10
                      ww11
                      ww12
                      ww13
                      ww15
                      more'
                      (\ (t'1 :: Data.Attoparsec.Internal.Types.State
                                   Data.ByteString.Internal.ByteString)
                         (pos'1 :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                         (more'1 :: Data.Attoparsec.Internal.Types.More)[OneShot]
                         (a2 :: [(GHC.Integer.Type.Integer,
                                  Data.ByteString.Internal.ByteString)])[OneShot] ->
                       case pos'1
                              `cast`
                            (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt3 { GHC.Types.I# ipv3 ->
                       w2
                         t'1
                         nt3 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                         more'1
                         (GHC.Types.:
                            @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                            a1
                            a2) }) } })) -}
2654b6a201010d3cb554bdceba3d329b
  $wcigseqlenHdrPassTest ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> GHC.Types.Bool
  {- Arity: 6,
     Strictness: <L,U><L,U><L,U><S,U><L,1*U(U,U,U,U)><L,1*U(U,U,U,U)>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: Data.ByteString.Internal.ByteString)
                   (ww5 :: Data.ByteString.Internal.ByteString) ->
                 case Lib.checkCigarSeqlen2 of wild1 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                 let {
                   $j :: GHC.Prim.Void# -> GHC.Types.Bool
                     {- Arity: 1, Strictness: <L,A> -}
                   = \ (w :: GHC.Prim.Void#)[OneShot] ->
                     case ww5 of ww6 { Data.ByteString.Internal.PS ww7 ww8 ww9 ww10 ->
                     let {
                       tcmap :: Lib.CigarMap = Lib.mapcig ww4
                     } in
                     case GHC.Integer.Type.eqInteger#
                            (Lib.checkCigarSeqlen_go1 tcmap Lib.checkCigarSeqlen1)
                            (Lib.checkCigarSeqlen_gl
                               (Data.ByteString.Internal.$wunpackAppendCharsLazy
                                  ww7
                                  ww8
                                  ww9
                                  ww10
                                  (GHC.Types.[] @ GHC.Types.Char))
                               Data.OldList.genericLength1) of wild { DEFAULT ->
                     case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild of wild2 {
                       GHC.Types.False -> GHC.Types.False
                       GHC.Types.True
                       -> case GHC.Integer.Type.gtInteger#
                                 (Lib.checkCigarSeqlen_go tcmap Lib.checkCigarSeqlen1)
                                 Lib.checkCigarSeqlen1 of wild3 { DEFAULT ->
                          GHC.Prim.tagToEnum# @ GHC.Types.Bool wild3 } } } }
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim./=# ww3 dt7) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqAddr# ww dt4) of wild {
                        GHC.Types.False
                        -> case Data.ByteString.Internal.$wcompareBytes
                                  ww
                                  ww1
                                  ww2
                                  ww3
                                  dt4
                                  dt5
                                  dt6
                                  dt7 of wild4 {
                             DEFAULT -> $j GHC.Prim.void# GHC.Types.EQ -> GHC.Types.True }
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# ww2 dt6) of wild3 {
                             GHC.Types.False
                             -> case Data.ByteString.Internal.$wcompareBytes
                                       ww
                                       ww1
                                       ww2
                                       ww3
                                       dt4
                                       dt5
                                       dt6
                                       dt7 of wild4 {
                                  DEFAULT -> $j GHC.Prim.void# GHC.Types.EQ -> GHC.Types.True }
                             GHC.Types.True -> GHC.Types.True } }
                   GHC.Types.True -> $j GHC.Prim.void# } }) -}
e0e6c04781a4a8dff8b4c4652b3518bc
  $wcontractcigar ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.ByteString.Internal.ByteString
  {- Arity: 4, Strictness: <S,U><L,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.contractcigar4 of wild1 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim./=# ww3 dt7) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqAddr# ww dt4) of wild {
                        GHC.Types.False
                        -> case Data.ByteString.Internal.$wcompareBytes
                                  ww
                                  ww1
                                  ww2
                                  ww3
                                  dt4
                                  dt5
                                  dt6
                                  dt7 of wild4 {
                             DEFAULT
                             -> Data.ByteString.Internal.$fMonoidByteString_$cmconcat
                                  (GHC.Base.map
                                     @ Data.ByteString.Internal.ByteString
                                     @ Data.ByteString.Internal.ByteString
                                     Lib.contractcigar2
                                     (Data.ByteString.$wgroup ww ww1 ww2 ww3))
                             GHC.Types.EQ -> Lib.contractcigar1 }
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# ww2 dt6) of wild3 {
                             GHC.Types.False
                             -> case Data.ByteString.Internal.$wcompareBytes
                                       ww
                                       ww1
                                       ww2
                                       ww3
                                       dt4
                                       dt5
                                       dt6
                                       dt7 of wild4 {
                                  DEFAULT
                                  -> Data.ByteString.Internal.$fMonoidByteString_$cmconcat
                                       (GHC.Base.map
                                          @ Data.ByteString.Internal.ByteString
                                          @ Data.ByteString.Internal.ByteString
                                          Lib.contractcigar2
                                          (Data.ByteString.$wgroup ww ww1 ww2 ww3))
                                  GHC.Types.EQ -> Lib.contractcigar1 }
                             GHC.Types.True -> Lib.contractcigar1 } }
                   GHC.Types.True
                   -> Data.ByteString.Internal.$fMonoidByteString_$cmconcat
                        (GHC.Base.map
                           @ Data.ByteString.Internal.ByteString
                           @ Data.ByteString.Internal.ByteString
                           Lib.contractcigar2
                           (Data.ByteString.$wgroup ww ww1 ww2 ww3)) } }) -}
3ed67b7925185eca7b7191e3461e9f6e
  $weta ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
911e674c7e25f39bd63b9a9f74f795df
  $wgetcol ::
    GHC.Types.Int
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Array# (Data.Vector.Vector a)
    -> Data.Vector.Vector a
  {- Arity: 4, Strictness: <L,U(U)><L,U><S,U><L,U>, Inline: [0],
     Unfolding: (\ @ a
                   (w :: GHC.Types.Int)
                   (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Array# (Data.Vector.Vector a)) ->
                 case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ (Data.Vector.Vector a)
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newArray#
                                @ a
                                @ (Control.Monad.Primitive.PrimState
                                     (GHC.ST.ST GHC.Prim.RealWorld))
                                ww1
                                (Data.Vector.Mutable.uninitialised @ a)
                                s1
                                  `cast`
                                (GHC.Prim.State#
                                   (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                             <GHC.Prim.RealWorld>_N)))_R of ds6 { (#,#) ipv ipv1 ->
                         letrec {
                           $wfoldlM'_loop :: GHC.Types.SPEC
                                             -> GHC.Prim.Int#
                                             -> GHC.Prim.Int#
                                             -> GHC.Prim.State# GHC.Prim.RealWorld
                                             -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                   GHC.Types.Int #)
                             {- Arity: 4, Strictness: <S,1*U><L,U><S,U><S,U>, Inline: [0] -}
                           = \ (w1 :: GHC.Types.SPEC)
                               (ww3 :: GHC.Prim.Int#)
                               (ww4 :: GHC.Prim.Int#)
                               (w2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                             case w1 of ds7 { DEFAULT ->
                             case GHC.Prim.tagToEnum#
                                    @ GHC.Types.Bool
                                    (GHC.Prim.>=# ww4 ww1) of wild {
                               GHC.Types.False
                               -> case GHC.Prim.writeArray#
                                         @ (Control.Monad.Primitive.PrimState
                                              (GHC.ST.ST GHC.Prim.RealWorld))
                                         @ a
                                         ipv1
                                         ww3
                                         (case w of wild1 { GHC.Types.I# x ->
                                          case GHC.Prim.indexArray#
                                                 @ (Data.Vector.Vector a)
                                                 ww2
                                                 (GHC.Prim.+# ww ww4) of ds8 { Unit# ipv2 ->
                                          case GHC.Prim.tagToEnum#
                                                 @ GHC.Types.Bool
                                                 (GHC.Prim.>=# x 0#) of wild2 {
                                            GHC.Types.False
                                            -> case Data.Vector.Generic.length
                                                      @ Data.Vector.Vector
                                                      @ a
                                                      (Data.Vector.$fVectorVectora @ a)
                                                      ipv2 of wild3 { GHC.Types.I# n# ->
                                               Lib.getcol1 @ a n# x }
                                            GHC.Types.True
                                            -> case Data.Vector.Generic.length
                                                      @ Data.Vector.Vector
                                                      @ a
                                                      (Data.Vector.$fVectorVectora @ a)
                                                      ipv2 of wild3 { GHC.Types.I# y ->
                                               case GHC.Prim.tagToEnum#
                                                      @ GHC.Types.Bool
                                                      (GHC.Prim.<# x y) of wild4 {
                                                 GHC.Types.False -> Lib.getcol1 @ a y x
                                                 GHC.Types.True
                                                 -> case ipv2 of wild5 { Data.Vector.Vector dt dt1 dt2 ->
                                                    case GHC.Prim.indexArray#
                                                           @ a
                                                           dt2
                                                           (GHC.Prim.+# dt x) of ds9 { Unit# ipv3 ->
                                                    ipv3 } } } } } } })
                                         w2
                                           `cast`
                                         (GHC.Prim.State#
                                            (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                      <GHC.Prim.RealWorld>_N)))_R of s'# { DEFAULT ->
                                  $wfoldlM'_loop
                                    GHC.Types.SPEC
                                    (GHC.Prim.+# ww3 1#)
                                    (GHC.Prim.+# ww4 1#)
                                    s'#
                                      `cast`
                                    (GHC.Prim.State#
                                       (Control.Monad.Primitive.D:R:PrimStateST[0]
                                            <GHC.Prim.RealWorld>_N))_R }
                               GHC.Types.True -> (# w2, GHC.Types.I# ww3 #) } }
                         } in
                         case $wfoldlM'_loop
                                GHC.Types.SPEC
                                0#
                                0#
                                ipv
                                  `cast`
                                (GHC.Prim.State#
                                   (Control.Monad.Primitive.D:R:PrimStateST[0]
                                        <GHC.Prim.RealWorld>_N))_R of ds7 { (#,#) ipv6 ipv7 ->
                         case ipv7 of dt5 { GHC.Types.I# dt6 ->
                         case GHC.Prim.unsafeFreezeArray#
                                @ (Control.Monad.Primitive.PrimState
                                     (GHC.ST.ST GHC.Prim.RealWorld))
                                @ a
                                ipv1
                                ipv6
                                  `cast`
                                (GHC.Prim.State#
                                   (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                             <GHC.Prim.RealWorld>_N)))_R of ds8 { (#,#) ipv2 ipv3 ->
                         (# ipv2
                              `cast`
                            (GHC.Prim.State#
                               (Control.Monad.Primitive.D:R:PrimStateST[0]
                                    <GHC.Prim.RealWorld>_N))_R,
                            Data.Vector.Vector
                              @ a
                              0#
                              dt6
                              ipv3 #) } } } }) of ds6 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
59b281f897c3bb26f85eabc513ff249f
  $wgo ::
    GHC.Prim.Addr#
    -> GHC.Prim.Addr#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 3, HasNoCafRefs, Strictness: <S,U><S,U><S,U>,
     Inline: [0] -}
f84925c9f50ca4266a79f023406927ea
  $wgo1 ::
    [Data.ByteString.Internal.ByteString]
    -> (# [Data.ByteString.Internal.ByteString],
          [Data.ByteString.Internal.ByteString] #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0] -}
4cb52372e6c0200028a9ee82175aee1b
  $wgo2 ::
    [Data.ByteString.Internal.ByteString]
    -> (# [Data.ByteString.Internal.ByteString],
          [Data.ByteString.Internal.ByteString] #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0] -}
77f6e5a5ae75bd9de207ea6a419abbb5
  $wgo3 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         ()
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
b40c71d7400cc0442236ac62a39b73a3
  $wgo4 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         ()
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
df073977c7f7fd94dba2446b03eb0b91
  $wgo5 ::
    GHC.Prim.Int#
    -> Data.Set.Base.Set Lib.UChr
    -> [Lib.UChr]
    -> Data.Set.Base.Set Lib.UChr
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
892bba8280ac55abeabb965cded8aba0
  $whdralnparser ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.AlignedRead
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <L,U><L,U><L,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.AlignedRead
                            r) ->
                 Lib.$wsamhdrparser
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w
                   w1
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (a1 :: Data.ByteString.Internal.ByteString)[OneShot] ->
                    case t'
                           `cast`
                         (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww7 { Data.Attoparsec.ByteString.Buffer.Buf ww8 ww9 ww10 ww11 ww12 ww13 ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww14 { GHC.Types.I# ww15 ->
                    Lib.$wmany_v2
                      @ r
                      ww8
                      ww9
                      ww10
                      ww11
                      ww12
                      ww13
                      ww15
                      more'
                      (\ (t'1 :: Data.Attoparsec.Internal.Types.State
                                   Data.ByteString.Internal.ByteString)
                         (pos'1 :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                         (more'1 :: Data.Attoparsec.Internal.Types.More)[OneShot]
                         (a2 :: [Data.ByteString.Internal.ByteString])[OneShot] ->
                       case pos'1
                              `cast`
                            (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt3 { GHC.Types.I# ipv3 ->
                       w2
                         t'1
                         nt3 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                         more'1
                         (Lib.AlignedRead
                            Lib.hdralnparser2
                            Lib.defaultAlignment10
                            Lib.NONE
                            Lib.checkCigarSeqlen1
                            Lib.checkCigarSeqlen1
                            Lib.checkCigarSeqlen1
                            Lib.defaultAlignment9
                            Lib.defaultAlignment8
                            Lib.defaultAlignment5
                            Lib.defaultAlignment2
                            Lib.defaultAlignment1
                            Lib.checkCigarSeqlen1
                            Lib.checkCigarSeqlen1
                            Lib.defaultAlignment9
                            Lib.defaultAlignment9
                            Lib.defaultAlignment9
                            Lib.defaultAlignment9
                            GHC.Types.False
                            GHC.Types.False
                            (GHC.Types.[] @ Lib.BedRecord)
                            (GHC.Types.[] @ Lib.BedRecord)
                            GHC.Types.False
                            GHC.Types.False
                            Lib.checkCigarSeqlen1
                            Lib.checkCigarSeqlen1
                            (GHC.Types.: @ Data.ByteString.Internal.ByteString a1 a2)
                            GHC.Types.True
                            Lib.defaultAlignment9
                            Lib.defaultAlignment9
                            Lib.defaultBed) }) } })) -}
a26a1c83c22a1edec145ae4be09df7f4
  $whdrchromp ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.UChr
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <L,U><L,U><L,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
5316e6ad96a801622b64171332f55e1c
  $witypep ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (ww :: GHC.Prim.Int#)
                   (w1 :: Data.Attoparsec.Internal.Types.More)
                   (w2 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w3 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 Lib.itypep3
                   `cast`
                 (Data.Attoparsec.Internal.Types.N:Parser[0]
                      <Data.ByteString.Internal.ByteString>_N
                      <Data.ByteString.Internal.ByteString>_R)
                   @ r
                   w
                   (GHC.Types.I# ww)
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                   w1
                   w2
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)
                      (more' :: Data.Attoparsec.Internal.Types.More)
                      (a1 :: Data.ByteString.Internal.ByteString) ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                    w3
                      t'
                      nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                      more'
                      Lib.itypep2 })) -}
efe7e5ea4939d276faad9c4ae7273ada
  $wix ::
    GHC.Prim.Int#
    -> GHC.Prim.Int# -> GHC.Prim.Int# -> GHC.Prim.Array# a -> a
  {- Arity: 4, Strictness: <S,U><S,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ @ a
                   (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Array# a) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 0#) of wild1 {
                   GHC.Types.False
                   -> case Data.Vector.Generic.length
                             @ Data.Vector.Vector
                             @ a
                             (Data.Vector.$fVectorVectora @ a)
                             (Data.Vector.Vector @ a ww1 ww2 ww3) of wild2 { GHC.Types.I# n# ->
                      Lib.getcol1 @ a n# ww }
                   GHC.Types.True
                   -> case Data.Vector.Generic.length
                             @ Data.Vector.Vector
                             @ a
                             (Data.Vector.$fVectorVectora @ a)
                             (Data.Vector.Vector @ a ww1 ww2 ww3) of wild2 { GHC.Types.I# y ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<# ww y) of wild3 {
                        GHC.Types.False -> Lib.getcol1 @ a y ww
                        GHC.Types.True
                        -> case GHC.Prim.indexArray#
                                  @ a
                                  ww3
                                  (GHC.Prim.+# ww1 ww) of ds6 { Unit# ipv ->
                           ipv } } } }) -}
c959e94951607f0cc5963449d5c237d8
  $wlvl ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.ByteString.Internal.ByteString
  {- Arity: 4, Strictness: <S,U><L,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<=# ww3 0#) of wild1 {
                   GHC.Types.False
                   -> case GHC.Prim.readWord8OffAddr#
                             @ GHC.Prim.RealWorld
                             (GHC.Prim.plusAddr# ww ww2)
                             0#
                             GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                      case GHC.Prim.touch#
                             @ 'GHC.Types.PtrRepLifted
                             @ GHC.ForeignPtr.ForeignPtrContents
                             ww1
                             ipv of s' { DEFAULT ->
                      case GHC.Magic.runRW#
                             @ 'GHC.Types.PtrRepLifted
                             @ Data.ByteString.Internal.ByteString
                             (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case GHC.Prim.newPinnedByteArray#
                                     @ GHC.Prim.RealWorld
                                     1#
                                     eta of ds7 { (#,#) ipv2 ipv3 ->
                              let {
                                ipv4 :: GHC.Prim.Addr#
                                = GHC.Prim.byteArrayContents#
                                    ipv3
                                      `cast`
                                    (UnsafeCo representational (GHC.Prim.MutableByteArray#
                                                                  GHC.Prim.RealWorld) GHC.Prim.ByteArray#)
                              } in
                              case GHC.Prim.writeWord8OffAddr#
                                     @ GHC.Prim.RealWorld
                                     ipv4
                                     0#
                                     (GHC.Prim.narrow8Word# ipv1)
                                     ipv2 of s2 { DEFAULT ->
                              let {
                                ipv5 :: GHC.ForeignPtr.ForeignPtrContents
                                = GHC.ForeignPtr.PlainPtr ipv3
                              } in
                              case GHC.Prim.touch#
                                     @ 'GHC.Types.PtrRepLifted
                                     @ GHC.ForeignPtr.ForeignPtrContents
                                     ipv5
                                     s2 of s'1 { DEFAULT ->
                              (# s'1,
                                 Data.ByteString.Internal.PS
                                   ipv4
                                   ipv5
                                   0#
                                   1# #) } } }) of ds7 { (#,#) ipv2 ipv3 ->
                      case GHC.Show.$wshowSignedInt
                             0#
                             ww3
                             (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                      let {
                        cs :: [GHC.Types.Char] = GHC.Types.: @ GHC.Types.Char ww5 ww6
                      } in
                      case GHC.List.$wlenAcc @ GHC.Types.Char cs 0# of ww7 { DEFAULT ->
                      case Data.ByteString.Internal.$wunsafePackLenChars
                             ww7
                             cs of ww8 { Data.ByteString.Internal.PS ww9 ww10 ww11 ww12 ->
                      case ipv3 of ww13 { Data.ByteString.Internal.PS ww14 ww15 ww16 ww17 ->
                      Data.ByteString.Internal.$w$c<>
                        ww9
                        ww10
                        ww11
                        ww12
                        ww14
                        ww15
                        ww16
                        ww17 } } } } } } }
                   GHC.Types.True
                   -> case Lib.contractcigar3
                      ret_ty Data.ByteString.Internal.ByteString
                      of {} }) -}
862c4273a696828c743f4548145d7121
  $wlvl1 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Types.Bool
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.countDs2 of wild1 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim./=# ww3 dt7) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqAddr# ww dt4) of wild {
                        GHC.Types.False
                        -> case Data.ByteString.Internal.$wcompareBytes
                                  ww
                                  ww1
                                  ww2
                                  ww3
                                  dt4
                                  dt5
                                  dt6
                                  dt7 of wild4 {
                             DEFAULT -> GHC.Types.False GHC.Types.EQ -> GHC.Types.True }
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# ww2 dt6) of wild3 {
                             GHC.Types.False
                             -> case Data.ByteString.Internal.$wcompareBytes
                                       ww
                                       ww1
                                       ww2
                                       ww3
                                       dt4
                                       dt5
                                       dt6
                                       dt7 of wild4 {
                                  DEFAULT -> GHC.Types.False GHC.Types.EQ -> GHC.Types.True }
                             GHC.Types.True -> GHC.Types.True } }
                   GHC.Types.True -> GHC.Types.False } }) -}
df85518789d34ce17495569b280c3792
  $wlvl2 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Types.Bool
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.filtpadassoc2 of wild1 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim./=# ww3 dt7) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqAddr# ww dt4) of wild {
                        GHC.Types.False
                        -> case Data.ByteString.Internal.$wcompareBytes
                                  ww
                                  ww1
                                  ww2
                                  ww3
                                  dt4
                                  dt5
                                  dt6
                                  dt7 of wild4 {
                             DEFAULT -> GHC.Types.True GHC.Types.EQ -> GHC.Types.False }
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# ww2 dt6) of wild3 {
                             GHC.Types.False
                             -> case Data.ByteString.Internal.$wcompareBytes
                                       ww
                                       ww1
                                       ww2
                                       ww3
                                       dt4
                                       dt5
                                       dt6
                                       dt7 of wild4 {
                                  DEFAULT -> GHC.Types.True GHC.Types.EQ -> GHC.Types.False }
                             GHC.Types.True -> GHC.Types.False } }
                   GHC.Types.True -> GHC.Types.True } }) -}
5729877a616b09f431ac428ce78deb55
  $wlvl3 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Types.Bool
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.filtpadcmap2 of wild1 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim./=# ww3 dt7) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqAddr# ww dt4) of wild {
                        GHC.Types.False
                        -> case Data.ByteString.Internal.$wcompareBytes
                                  ww
                                  ww1
                                  ww2
                                  ww3
                                  dt4
                                  dt5
                                  dt6
                                  dt7 of wild4 {
                             DEFAULT -> GHC.Types.True GHC.Types.EQ -> GHC.Types.False }
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# ww2 dt6) of wild3 {
                             GHC.Types.False
                             -> case Data.ByteString.Internal.$wcompareBytes
                                       ww
                                       ww1
                                       ww2
                                       ww3
                                       dt4
                                       dt5
                                       dt6
                                       dt7 of wild4 {
                                  DEFAULT -> GHC.Types.True GHC.Types.EQ -> GHC.Types.False }
                             GHC.Types.True -> GHC.Types.False } }
                   GHC.Types.True -> GHC.Types.True } }) -}
e289b367b4f891debcb58bad794f6b07
  $wlvl4 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Types.Bool
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.removeDs2 of wild1 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim./=# ww3 dt7) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqAddr# ww dt4) of wild {
                        GHC.Types.False
                        -> case Data.ByteString.Internal.$wcompareBytes
                                  ww
                                  ww1
                                  ww2
                                  ww3
                                  dt4
                                  dt5
                                  dt6
                                  dt7 of wild4 {
                             DEFAULT -> GHC.Types.True GHC.Types.EQ -> GHC.Types.False }
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# ww2 dt6) of wild3 {
                             GHC.Types.False
                             -> case Data.ByteString.Internal.$wcompareBytes
                                       ww
                                       ww1
                                       ww2
                                       ww3
                                       dt4
                                       dt5
                                       dt6
                                       dt7 of wild4 {
                                  DEFAULT -> GHC.Types.True GHC.Types.EQ -> GHC.Types.False }
                             GHC.Types.True -> GHC.Types.False } }
                   GHC.Types.True -> GHC.Types.True } }) -}
b4dc511c2bd46f7a9a5191c7e1e5d93e
  $wmIDp ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <L,U><L,U><L,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
0ee9a4e55d34ed28a7005f9403db4438
  $wmakechrbedmap ::
    GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Array# Lib.BedRecord
    -> Data.Map.Base.Map
         Lib.UChr (Data.IntMap.Base.IntMap Lib.BedRecord)
  {- Arity: 3, Strictness: <L,U><S,U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Array# Lib.BedRecord) ->
                 letrec {
                   $wgo39 :: GHC.Prim.Int# -> [Lib.BedRecord]
                     {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                   = \ (ww3 :: GHC.Prim.Int#) ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.>=# ww3 ww1) of wild {
                       GHC.Types.False
                       -> case GHC.Prim.indexArray#
                                 @ Lib.BedRecord
                                 ww2
                                 (GHC.Prim.+# ww ww3) of ds6 { Unit# ipv ->
                          GHC.Types.: @ Lib.BedRecord ipv ($wgo39 (GHC.Prim.+# ww3 1#)) }
                       GHC.Types.True -> GHC.Types.[] @ Lib.BedRecord }
                 } in
                 let {
                   bbychr :: [[Lib.BedRecord]]
                   = Data.OldList.groupBy
                       @ Lib.BedRecord
                       Lib.makechrbedmap1
                       ($wgo39 0#)
                 } in
                 Lib.$sfromList1
                   @ (Data.IntMap.Base.IntMap Lib.BedRecord)
                   (Lib.makechrbedmap_go
                      bbychr
                      (GHC.Base.map
                         @ [Lib.BedRecord]
                         @ (Data.IntMap.Base.IntMap Lib.BedRecord)
                         Lib.makebedmap
                         bbychr))) -}
7538d58ab76a83d0ac1da9f8c8c7682d
  $wmakeprimertups ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> [(GHC.Types.Int, Lib.BedRecord)]
  {- Arity: 4, Strictness: <L,U><S,U><S,U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: GHC.Integer.Type.Integer)
                   (ww3 :: Data.ByteString.Internal.ByteString) ->
                 let {
                   pe :: GHC.Integer.Type.Integer
                   = GHC.Integer.Type.plusInteger ww2 Lib.makeprimertups1
                 } in
                 let {
                   ps :: GHC.Integer.Type.Integer
                   = GHC.Integer.Type.minusInteger ww1 Lib.makeprimertups1
                 } in
                 letrec {
                   go11 :: GHC.Integer.Type.Integer
                           -> [Lib.BedRecord] -> [(GHC.Types.Int, Lib.BedRecord)]
                     {- Arity: 2, Strictness: <S,U><L,1*U> -}
                   = \ (x :: GHC.Integer.Type.Integer) (eta :: [Lib.BedRecord]) ->
                     case GHC.Integer.Type.gtInteger# x pe of wild { DEFAULT ->
                     case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild of wild1 {
                       GHC.Types.False
                       -> case eta of wild2 {
                            [] -> GHC.Types.[] @ (GHC.Types.Int, Lib.BedRecord)
                            : y ys
                            -> GHC.Types.:
                                 @ (GHC.Types.Int, Lib.BedRecord)
                                 (case GHC.Integer.Type.integerToInt x of wild3 { DEFAULT ->
                                  GHC.Types.I# wild3 },
                                  y)
                                 (go11
                                    (GHC.Integer.Type.plusInteger x GHC.Enum.$fEnumInteger1)
                                    ys) }
                       GHC.Types.True -> GHC.Types.[] @ (GHC.Types.Int, Lib.BedRecord) } }
                 } in
                 go11
                   ps
                   (case GHC.Integer.Type.integerToInt
                           (GHC.Integer.Type.plusInteger
                              (GHC.Integer.Type.minusInteger pe ps)
                              Lib.expandcigar1) of wild { DEFAULT ->
                    case GHC.Prim.tagToEnum#
                           @ GHC.Types.Bool
                           (GHC.Prim.<# 0# wild) of wild1 {
                      GHC.Types.False -> GHC.Types.[] @ Lib.BedRecord
                      GHC.Types.True
                      -> let {
                           b :: Lib.BedRecord = Lib.BedRecord ww ww1 ww2 ww3
                         } in
                         let {
                           lvl1011 :: [Lib.BedRecord]
                           = GHC.Types.: @ Lib.BedRecord b (GHC.Types.[] @ Lib.BedRecord)
                         } in
                         letrec {
                           $wxs :: GHC.Prim.Int# -> [Lib.BedRecord]
                             {- Arity: 1, Strictness: <S,1*U>, Inline: [0] -}
                           = \ (ww4 :: GHC.Prim.Int#) ->
                             case ww4 of ds6 {
                               DEFAULT
                               -> GHC.Types.: @ Lib.BedRecord b ($wxs (GHC.Prim.-# ds6 1#))
                               1# -> lvl1011 }
                         } in
                         $wxs wild } })) -}
e971cf3120cf52b9d359d35e4dcdd66f
  $wmany_v1 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
b6b7937ece2b212421d7de713dcf6f7d
  $wmany_v2 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [Data.ByteString.Internal.ByteString]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 9,
     Strictness: <L,U><L,U><L,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
101e3eba32ad4d0d598794729fd19877
  $wmasterparser ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.MasterRecord
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <L,U><L,U><L,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
ac6ebad2eae5794b0ee83d475ad0f774
  $wnoclip ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Types.Bool
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.noclip2 of wild1 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                 let {
                   $j :: GHC.Prim.Void# -> GHC.Types.Bool
                     {- Arity: 1, Strictness: <L,A> -}
                   = \ (w :: GHC.Prim.Void#)[OneShot] ->
                     case Lib.noclip1 of wild2 { Data.ByteString.Internal.PS dt1 dt2 dt3 dt10 ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim./=# ww3 dt10) of wild3 {
                       GHC.Types.False
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.eqAddr# ww dt1) of wild {
                            GHC.Types.False
                            -> case Data.ByteString.Internal.$wcompareBytes
                                      ww
                                      ww1
                                      ww2
                                      ww3
                                      dt1
                                      dt2
                                      dt3
                                      dt10 of wild4 {
                                 DEFAULT -> GHC.Types.True GHC.Types.EQ -> GHC.Types.False }
                            GHC.Types.True
                            -> case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.==# ww2 dt3) of wild4 {
                                 GHC.Types.False
                                 -> case Data.ByteString.Internal.$wcompareBytes
                                           ww
                                           ww1
                                           ww2
                                           ww3
                                           dt1
                                           dt2
                                           dt3
                                           dt10 of wild5 {
                                      DEFAULT -> GHC.Types.True GHC.Types.EQ -> GHC.Types.False }
                                 GHC.Types.True -> GHC.Types.False } }
                       GHC.Types.True -> GHC.Types.True } }
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim./=# ww3 dt7) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqAddr# ww dt4) of wild {
                        GHC.Types.False
                        -> case Data.ByteString.Internal.$wcompareBytes
                                  ww
                                  ww1
                                  ww2
                                  ww3
                                  dt4
                                  dt5
                                  dt6
                                  dt7 of wild4 {
                             DEFAULT -> $j GHC.Prim.void# GHC.Types.EQ -> GHC.Types.False }
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# ww2 dt6) of wild3 {
                             GHC.Types.False
                             -> case Data.ByteString.Internal.$wcompareBytes
                                       ww
                                       ww1
                                       ww2
                                       ww3
                                       dt4
                                       dt5
                                       dt6
                                       dt7 of wild4 {
                                  DEFAULT -> $j GHC.Prim.void# GHC.Types.EQ -> GHC.Types.False }
                             GHC.Types.True -> GHC.Types.False } }
                   GHC.Types.True -> $j GHC.Prim.void# } }) -}
9cb094aeb89075eb42caf99beecec509
  $wnohardclip ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Types.Bool
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.nohardclip1 of wild1 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim./=# ww3 dt7) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqAddr# ww dt4) of wild {
                        GHC.Types.False
                        -> case Data.ByteString.Internal.$wcompareBytes
                                  ww
                                  ww1
                                  ww2
                                  ww3
                                  dt4
                                  dt5
                                  dt6
                                  dt7 of wild4 {
                             DEFAULT -> GHC.Types.True GHC.Types.EQ -> GHC.Types.False }
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# ww2 dt6) of wild3 {
                             GHC.Types.False
                             -> case Data.ByteString.Internal.$wcompareBytes
                                       ww
                                       ww1
                                       ww2
                                       ww3
                                       dt4
                                       dt5
                                       dt6
                                       dt7 of wild4 {
                                  DEFAULT -> GHC.Types.True GHC.Types.EQ -> GHC.Types.False }
                             GHC.Types.True -> GHC.Types.False } }
                   GHC.Types.True -> GHC.Types.True } }) -}
a86144b42dcba6fb89ed89cb226ea340
  $wnopadding ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Types.Bool
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.nopadding2 of wild1 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                 let {
                   $j :: GHC.Prim.Void# -> GHC.Types.Bool
                     {- Arity: 1, Strictness: <L,A> -}
                   = \ (w :: GHC.Prim.Void#)[OneShot] ->
                     case Lib.nopadding1 of wild2 { Data.ByteString.Internal.PS dt1 dt2 dt3 dt10 ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim./=# ww3 dt10) of wild3 {
                       GHC.Types.False
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.eqAddr# ww dt1) of wild {
                            GHC.Types.False
                            -> case Data.ByteString.Internal.$wcompareBytes
                                      ww
                                      ww1
                                      ww2
                                      ww3
                                      dt1
                                      dt2
                                      dt3
                                      dt10 of wild4 {
                                 DEFAULT -> GHC.Types.True GHC.Types.EQ -> GHC.Types.False }
                            GHC.Types.True
                            -> case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.==# ww2 dt3) of wild4 {
                                 GHC.Types.False
                                 -> case Data.ByteString.Internal.$wcompareBytes
                                           ww
                                           ww1
                                           ww2
                                           ww3
                                           dt1
                                           dt2
                                           dt3
                                           dt10 of wild5 {
                                      DEFAULT -> GHC.Types.True GHC.Types.EQ -> GHC.Types.False }
                                 GHC.Types.True -> GHC.Types.False } }
                       GHC.Types.True -> GHC.Types.True } }
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim./=# ww3 dt7) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqAddr# ww dt4) of wild {
                        GHC.Types.False
                        -> case Data.ByteString.Internal.$wcompareBytes
                                  ww
                                  ww1
                                  ww2
                                  ww3
                                  dt4
                                  dt5
                                  dt6
                                  dt7 of wild4 {
                             DEFAULT -> $j GHC.Prim.void# GHC.Types.EQ -> GHC.Types.False }
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# ww2 dt6) of wild3 {
                             GHC.Types.False
                             -> case Data.ByteString.Internal.$wcompareBytes
                                       ww
                                       ww1
                                       ww2
                                       ww3
                                       dt4
                                       dt5
                                       dt6
                                       dt7 of wild4 {
                                  DEFAULT -> $j GHC.Prim.void# GHC.Types.EQ -> GHC.Types.False }
                             GHC.Types.True -> GHC.Types.False } }
                   GHC.Types.True -> $j GHC.Prim.void# } }) -}
729c9f73dc59d4adbf7af8e404e485aa
  $woptasp ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
7de48bd5e20fe553050fa5dc237e3647
  $woptfieldp ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (ww :: GHC.Prim.Int#)
                   (w1 :: Data.Attoparsec.Internal.Types.More)
                   (w2 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w3 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 let {
                   pos1 :: GHC.Types.Int = GHC.Types.I# ww
                 } in
                 let {
                   lose :: Data.Attoparsec.Internal.Types.Failure
                             Data.ByteString.Internal.ByteString
                             (Data.Attoparsec.Internal.Types.State
                                Data.ByteString.Internal.ByteString)
                             r
                     {- Arity: 5, Strictness: <L,U><L,A><L,U><L,A><L,A>,
                        Unfolding: InlineRule (5, True, True)
                                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                                               Data.ByteString.Internal.ByteString)
                                      (_pos' :: Data.Attoparsec.Internal.Types.Pos)
                                      (more' :: Data.Attoparsec.Internal.Types.More)
                                      (_ctx :: [GHC.Base.String])
                                      (_msg :: GHC.Base.String) ->
                                    Lib.optfieldp2
                                      @ r
                                      t'
                                      pos1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                                      more'
                                      w2
                                      w3) -}
                   = \ (t' :: Data.Attoparsec.Internal.Types.State
                                Data.ByteString.Internal.ByteString)
                       (_pos' :: Data.Attoparsec.Internal.Types.Pos)
                       (more' :: Data.Attoparsec.Internal.Types.More)
                       (_ctx :: [GHC.Base.String])
                       (_msg :: GHC.Base.String) ->
                     Lib.$woptxsp @ r t' ww more' w2 w3
                 } in
                 Lib.$woptnmp
                   @ r
                   w
                   ww
                   w1
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                      (_pos' :: Data.Attoparsec.Internal.Types.Pos)
                      (more' :: Data.Attoparsec.Internal.Types.More)
                      (_ctx :: [GHC.Base.String])
                      (_msg :: GHC.Base.String) ->
                    Lib.$woptasp @ r t' ww more' lose w3)
                   w3) -}
102887e3790916833fc6678fd7833a82
  $woptfieldpEOL ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         GHC.Types.Char
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <L,U><L,U><L,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            GHC.Types.Char
                            r) ->
                 let {
                   $wsucc :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString
                             -> GHC.Prim.Int#
                             -> Data.Attoparsec.Internal.Types.More
                             -> GHC.Word.Word8
                             -> Data.Attoparsec.Internal.Types.IResult
                                  Data.ByteString.Internal.ByteString r
                     {- Arity: 4, Strictness: <L,U><L,U><L,U><L,1*U(U)>, Inline: [0] -}
                   = \ (w3 :: Data.Attoparsec.Internal.Types.State
                                Data.ByteString.Internal.ByteString)
                       (ww7 :: GHC.Prim.Int#)[OneShot]
                       (w4 :: Data.Attoparsec.Internal.Types.More)[OneShot]
                       (w5 :: GHC.Word.Word8)[OneShot] ->
                     let {
                       c1 :: GHC.Types.Char
                       = case w5 of wild { GHC.Word.W8# x# ->
                         GHC.Types.C# (GHC.Prim.chr# (GHC.Prim.word2Int# x#)) }
                     } in
                     case Data.Attoparsec.ByteString.FastSet.memberWord8
                            (case c1 of wild { GHC.Types.C# c# ->
                             GHC.Word.W8#
                               (GHC.Prim.narrow8Word# (GHC.Prim.int2Word# (GHC.Prim.ord# c#))) })
                            Lib.optfieldpEOL_ds1 of wild {
                       GHC.Types.False
                       -> w2
                            w3
                            (GHC.Types.I# (GHC.Prim.+# ww7 1#))
                              `cast`
                            (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                            w4
                            c1
                       GHC.Types.True
                       -> w1
                            w3
                            (GHC.Types.I# ww7)
                              `cast`
                            (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                            w4
                            (GHC.Types.[] @ GHC.Base.String)
                            Lib.optfieldpEOL4 }
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww3 (GHC.Prim.+# ww6 1#)) of wild1 {
                   GHC.Types.False
                   -> Data.Attoparsec.ByteString.Internal.$wensureSuspended
                        @ r
                        Lib.optfieldpEOL3
                        (Data.Attoparsec.ByteString.Buffer.Buf ww ww1 ww2 ww3 ww4 ww5)
                        ww6
                        w
                        w1
                          `cast`
                        (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [GHC.Base.String]
                               -> GHC.Base.String
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString r>_R)
                        (\ (t' :: Data.Attoparsec.ByteString.Buffer.Buffer)
                           (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                           (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                           (bs' :: Data.ByteString.Internal.ByteString)[OneShot] ->
                         case bs' of wild { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                         case GHC.Prim.readWord8OffAddr#
                                @ GHC.Prim.RealWorld
                                (GHC.Prim.plusAddr# dt dt2)
                                0#
                                GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                         case GHC.Prim.touch#
                                @ 'GHC.Types.PtrRepLifted
                                @ GHC.ForeignPtr.ForeignPtrContents
                                dt1
                                ipv of s' { DEFAULT ->
                         case pos'
                                `cast`
                              (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                         $wsucc
                           t'
                             `cast`
                           (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])))
                           ww8
                           more'
                           (GHC.Word.W8# ipv1) } } } })
                   GHC.Types.True
                   -> $wsucc
                        (Data.Attoparsec.ByteString.Buffer.Buf ww ww1 ww2 ww3 ww4 ww5)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])))
                        ww6
                        w
                        (case GHC.Prim.readWord8OffAddr#
                                @ GHC.Prim.RealWorld
                                (GHC.Prim.plusAddr# ww (GHC.Prim.+# ww2 ww6))
                                0#
                                GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                         case GHC.Prim.touch#
                                @ 'GHC.Types.PtrRepLifted
                                @ GHC.ForeignPtr.ForeignPtrContents
                                ww1
                                ipv of s' { DEFAULT ->
                         GHC.Word.W8# ipv1 } }) }) -}
f2e7614c2bf8ab5fb5fc2cb65cbe1b30
  $woptidp ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (ww :: GHC.Prim.Int#)
                   (w1 :: Data.Attoparsec.Internal.Types.More)
                   (w2 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w3 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 let {
                   lvl1011 :: GHC.Types.Int = GHC.Types.I# ww
                 } in
                 let {
                   lvl1012 :: Data.Attoparsec.Internal.Types.State
                                Data.ByteString.Internal.ByteString
                              -> Data.Attoparsec.Internal.Types.Pos
                              -> Data.Attoparsec.Internal.Types.More
                              -> Data.ByteString.Internal.ByteString
                              -> Data.Attoparsec.Internal.Types.IResult
                                   Data.ByteString.Internal.ByteString r
                     {- Arity: 4 -}
                   = \ (t' :: Data.Attoparsec.Internal.Types.State
                                Data.ByteString.Internal.ByteString)
                       (pos' :: Data.Attoparsec.Internal.Types.Pos)
                       (more' :: Data.Attoparsec.Internal.Types.More)
                       (a1 :: Data.ByteString.Internal.ByteString) ->
                     case pos'
                            `cast`
                          (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                     w3
                       t'
                       nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                       more'
                       Lib.optidp10 }
                 } in
                 let {
                   lose :: Data.Attoparsec.Internal.Types.Failure
                             Data.ByteString.Internal.ByteString
                             (Data.Attoparsec.Internal.Types.State
                                Data.ByteString.Internal.ByteString)
                             r
                     {- Arity: 5, Strictness: <L,U><L,A><L,U><L,A><L,A>,
                        Inline: INLINE[0],
                        Unfolding: InlineRule (5, True, True)
                                   (\ (w4 :: Data.Attoparsec.Internal.Types.State
                                               Data.ByteString.Internal.ByteString)
                                      (w5 :: Data.Attoparsec.Internal.Types.Pos)
                                      (w6 :: Data.Attoparsec.Internal.Types.More)
                                      (w7 :: [GHC.Base.String])
                                      (w8 :: GHC.Base.String) ->
                                    Lib.optidp8
                                      `cast`
                                    (Data.Attoparsec.Internal.Types.N:Parser[0]
                                         <Data.ByteString.Internal.ByteString>_N
                                         <Data.ByteString.Internal.ByteString>_R)
                                      @ r
                                      w4
                                      lvl1011 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                                      w6
                                      w2
                                      lvl1012) -}
                   = \ (w4 :: Data.Attoparsec.Internal.Types.State
                                Data.ByteString.Internal.ByteString)
                       (w5 :: Data.Attoparsec.Internal.Types.Pos)
                       (w6 :: Data.Attoparsec.Internal.Types.More)
                       (w7 :: [GHC.Base.String])
                       (w8 :: GHC.Base.String) ->
                     Lib.optidp8
                       `cast`
                     (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)
                       @ r
                       w4
                       lvl1011 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                       w6
                       w2
                       lvl1012
                 } in
                 let {
                   lvl1013 :: Data.Attoparsec.Internal.Types.State
                                Data.ByteString.Internal.ByteString
                              -> Data.Attoparsec.Internal.Types.Pos
                              -> Data.Attoparsec.Internal.Types.More
                              -> Data.ByteString.Internal.ByteString
                              -> Data.Attoparsec.Internal.Types.IResult
                                   Data.ByteString.Internal.ByteString r
                     {- Arity: 4 -}
                   = \ (t' :: Data.Attoparsec.Internal.Types.State
                                Data.ByteString.Internal.ByteString)
                       (pos' :: Data.Attoparsec.Internal.Types.Pos)
                       (more' :: Data.Attoparsec.Internal.Types.More)
                       (a1 :: Data.ByteString.Internal.ByteString) ->
                     case pos'
                            `cast`
                          (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                     w3
                       t'
                       nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                       more'
                       Lib.optidp7 }
                 } in
                 Lib.optidp5
                   `cast`
                 (Data.Attoparsec.Internal.Types.N:Parser[0]
                      <Data.ByteString.Internal.ByteString>_N
                      <Data.ByteString.Internal.ByteString>_R)
                   @ r
                   w
                   lvl1011 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                   w1
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                      (_pos' :: Data.Attoparsec.Internal.Types.Pos)
                      (more' :: Data.Attoparsec.Internal.Types.More)
                      (_ctx :: [GHC.Base.String])
                      (_msg :: GHC.Base.String) ->
                    Lib.optidp3
                      `cast`
                    (Data.Attoparsec.Internal.Types.N:Parser[0]
                         <Data.ByteString.Internal.ByteString>_N
                         <Data.ByteString.Internal.ByteString>_R)
                      @ r
                      t'
                      lvl1011 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                      more'
                      lose
                      lvl1013)
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)
                      (more' :: Data.Attoparsec.Internal.Types.More)
                      (a1 :: Data.ByteString.Internal.ByteString) ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                    w3
                      t'
                      nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                      more'
                      Lib.optidp2 })) -}
301d316ca878fe1644c8d83c47186a28
  $woptnmp ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
0f429b1b1a1163aa18e703bc7ee42740
  $woptxsp ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
e029146d2d6d6fae8cb8ff92519fddf3
  $wparseAln ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Either.Either GHC.Base.String Lib.AlignedRead
  {- Arity: 4, Strictness: <S,U><L,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.$walnparser
                        @ Lib.AlignedRead
                        ww
                        ww1
                        ww2
                        ww3
                        ww3
                        0#
                        0#
                        Data.Attoparsec.Internal.Types.Complete
                        (Data.Attoparsec.ByteString.Internal.failK @ Lib.AlignedRead)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [GHC.Base.String]
                               -> GHC.Base.String
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString Lib.AlignedRead>_R)
                        (Data.Attoparsec.ByteString.Internal.successK @ Lib.AlignedRead)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> Lib.AlignedRead
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString
                                    Lib.AlignedRead>_R) of wild {
                   Data.Attoparsec.Internal.Types.Fail ds6 ds7 err
                   -> case ds7 of wild1 {
                        [] -> Data.Either.Left @ GHC.Base.String @ Lib.AlignedRead err
                        : ipv ipv1
                        -> Data.Either.Left
                             @ [GHC.Types.Char]
                             @ Lib.AlignedRead
                             (GHC.Base.++
                                @ GHC.Types.Char
                                (Data.OldList.intercalate_$spoly_go
                                   @ GHC.Types.Char
                                   ipv
                                   (Data.OldList.prependToAll @ [GHC.Types.Char] Lib.mapcig2 ipv1))
                                (GHC.CString.unpackAppendCString# ": "# err)) }
                   Data.Attoparsec.Internal.Types.Partial ipv -> Lib.parseAln1
                   Data.Attoparsec.Internal.Types.Done ds6 a1
                   -> Data.Either.Right @ GHC.Base.String @ Lib.AlignedRead a1 }) -}
8d3282d1df32a0385dc944c2c2b41d73
  $wparseBED ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Either.Either GHC.Base.String Lib.BedRecord
  {- Arity: 4, Strictness: <S,U><L,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.$wbedrecparser
                        @ Lib.BedRecord
                        ww
                        ww1
                        ww2
                        ww3
                        ww3
                        0#
                        0#
                        Data.Attoparsec.Internal.Types.Complete
                        (Data.Attoparsec.ByteString.Internal.failK @ Lib.BedRecord)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [GHC.Base.String]
                               -> GHC.Base.String
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString Lib.BedRecord>_R)
                        (Data.Attoparsec.ByteString.Internal.successK @ Lib.BedRecord)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> Lib.BedRecord
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString Lib.BedRecord>_R) of wild {
                   Data.Attoparsec.Internal.Types.Fail ds6 ds7 err
                   -> case ds7 of wild1 {
                        [] -> Data.Either.Left @ GHC.Base.String @ Lib.BedRecord err
                        : ipv ipv1
                        -> Data.Either.Left
                             @ [GHC.Types.Char]
                             @ Lib.BedRecord
                             (GHC.Base.++
                                @ GHC.Types.Char
                                (Data.OldList.intercalate_$spoly_go
                                   @ GHC.Types.Char
                                   ipv
                                   (Data.OldList.prependToAll @ [GHC.Types.Char] Lib.mapcig2 ipv1))
                                (GHC.CString.unpackAppendCString# ": "# err)) }
                   Data.Attoparsec.Internal.Types.Partial ipv -> Lib.parseBED1
                   Data.Attoparsec.Internal.Types.Done ds6 a1
                   -> Data.Either.Right @ GHC.Base.String @ Lib.BedRecord a1 }) -}
044e91032e4ab3e13d36dbeb87d7e742
  $wparseCigar ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                            r) ->
                 Lib.$wcigarP
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                      (_pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (_ctx :: [GHC.Base.String])[OneShot]
                      (_msg :: GHC.Base.String)[OneShot] ->
                    case t'
                           `cast`
                         (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww7 { Data.Attoparsec.ByteString.Buffer.Buf ww8 ww9 ww10 ww11 ww12 ww13 ->
                    Lib.$wstarcigarP @ r ww8 ww9 ww10 ww11 ww12 ww13 ww6 more' w1 w2 })
                   w2) -}
abbde51435da9a0efac5593b5c89ae99
  $wparsechkBED ::
    GHC.Prim.Int#
    -> GHC.Prim.Int# -> [GHC.Types.Int] -> [GHC.Types.Char]
  {- Arity: 3, Strictness: <S,U><S,U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.Int#)
                   (w :: [GHC.Types.Int]) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==# ww ww1) of wild {
                   GHC.Types.False
                   -> GHC.CString.unpackAppendCString#
                        "WARNING: "#
                        (case GHC.List.$wlenAcc @ GHC.Types.Int w 0# of ww2 { DEFAULT ->
                         case GHC.Show.$wshowSignedInt
                                0#
                                ww2
                                (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                         GHC.Base.++
                           @ GHC.Types.Char
                           (GHC.Types.: @ GHC.Types.Char ww5 ww6)
                           (GHC.CString.unpackAppendCString#
                              " of "#
                              (case GHC.Show.$wshowSignedInt
                                      0#
                                      ww
                                      (GHC.Types.[] @ GHC.Types.Char) of ww3 { (#,#) ww7 ww8 ->
                               GHC.Base.++
                                 @ GHC.Types.Char
                                 (GHC.Types.: @ GHC.Types.Char ww7 ww8)
                                 Lib.parsechkBED2 })) } })
                   GHC.Types.True
                   -> GHC.CString.unpackAppendCString#
                        "all "#
                        (case GHC.Show.$wshowSignedInt
                                0#
                                ww
                                (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                         GHC.Base.++
                           @ GHC.Types.Char
                           (GHC.Types.: @ GHC.Types.Char ww5 ww6)
                           Lib.parsechkBED1 }) }) -}
019072bbd3d87c29eb059167b6c8ca9d
  $wparsechkMaster ::
    GHC.Prim.Int#
    -> GHC.Prim.Int# -> [GHC.Types.Int] -> [GHC.Types.Char]
  {- Arity: 3, Strictness: <S,U><S,U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.Int#)
                   (w :: [GHC.Types.Int]) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==# ww ww1) of wild {
                   GHC.Types.False
                   -> GHC.CString.unpackAppendCString#
                        "WARNING: "#
                        (case GHC.List.$wlenAcc @ GHC.Types.Int w 0# of ww2 { DEFAULT ->
                         case GHC.Show.$wshowSignedInt
                                0#
                                ww2
                                (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                         GHC.Base.++
                           @ GHC.Types.Char
                           (GHC.Types.: @ GHC.Types.Char ww5 ww6)
                           (GHC.CString.unpackAppendCString#
                              " of "#
                              (case GHC.Show.$wshowSignedInt
                                      0#
                                      ww
                                      (GHC.Types.[] @ GHC.Types.Char) of ww3 { (#,#) ww7 ww8 ->
                               GHC.Base.++
                                 @ GHC.Types.Char
                                 (GHC.Types.: @ GHC.Types.Char ww7 ww8)
                                 Lib.getMasterFile4 })) } })
                   GHC.Types.True
                   -> GHC.CString.unpackAppendCString#
                        "all "#
                        (case GHC.Show.$wshowSignedInt
                                0#
                                ww
                                (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                         GHC.Base.++
                           @ GHC.Types.Char
                           (GHC.Types.: @ GHC.Types.Char ww5 ww6)
                           Lib.getMasterFile3 }) }) -}
a9e5f768460c83b2c8a7bd86af7fb04f
  $wparsechkSAM ::
    GHC.Prim.Int#
    -> GHC.Prim.Int# -> [GHC.Types.Int] -> [GHC.Types.Char]
  {- Arity: 3, Strictness: <S,U><S,U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.Int#)
                   (w :: [GHC.Types.Int]) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==# ww ww1) of wild {
                   GHC.Types.False
                   -> GHC.CString.unpackAppendCString#
                        "WARNING: "#
                        (case GHC.List.$wlenAcc @ GHC.Types.Int w 0# of ww2 { DEFAULT ->
                         case GHC.Show.$wshowSignedInt
                                0#
                                ww2
                                (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                         GHC.Base.++
                           @ GHC.Types.Char
                           (GHC.Types.: @ GHC.Types.Char ww5 ww6)
                           (GHC.CString.unpackAppendCString#
                              " of "#
                              (case GHC.Show.$wshowSignedInt
                                      0#
                                      ww
                                      (GHC.Types.[] @ GHC.Types.Char) of ww3 { (#,#) ww7 ww8 ->
                               GHC.Base.++
                                 @ GHC.Types.Char
                                 (GHC.Types.: @ GHC.Types.Char ww7 ww8)
                                 Lib.getSAM5 })) } })
                   GHC.Types.True
                   -> GHC.CString.unpackAppendCString#
                        "all "#
                        (case GHC.Show.$wshowSignedInt
                                0#
                                ww
                                (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                         GHC.Base.++
                           @ GHC.Types.Char
                           (GHC.Types.: @ GHC.Types.Char ww5 ww6)
                           Lib.getSAM4 }) }) -}
5b5f305ade0f34ead4cd62809921ade1
  $wparsemIDstring ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.ByteString.Internal.ByteString
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 let {
                   midvals :: [Data.ByteString.Internal.ByteString]
                   = case ww3 of ds6 {
                       DEFAULT
                       -> let {
                            lvl1011 :: GHC.Ptr.Ptr GHC.Word.Word8
                            = GHC.Ptr.Ptr @ GHC.Word.Word8 ww
                          } in
                          letrec {
                            $wsplitLoop :: (GHC.Prim.Word# -> GHC.Types.Bool)
                                           -> GHC.Ptr.Ptr GHC.Word.Word8
                                           -> GHC.Prim.Int#
                                           -> GHC.Types.Int
                                           -> GHC.Prim.Int#
                                           -> GHC.ForeignPtr.ForeignPtr GHC.Word.Word8
                                           -> GHC.Prim.State# GHC.Prim.RealWorld
                                           -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                 [Data.ByteString.Internal.ByteString] #)
                              {- Arity: 7,
                                 Strictness: <L,U><L,1*U(U)><S,U><L,1*U(U)><S,U><L,U(U,U)><S,U>,
                                 Inline: [0] -}
                            = \ (w :: GHC.Prim.Word# -> GHC.Types.Bool)
                                (w1 :: GHC.Ptr.Ptr GHC.Word.Word8)
                                (ww4 :: GHC.Prim.Int#)
                                (w2 :: GHC.Types.Int)
                                (ww5 :: GHC.Prim.Int#)
                                (w3 :: GHC.ForeignPtr.ForeignPtr GHC.Word.Word8)
                                (w4 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# ww4 ww5) of wild1 {
                                GHC.Types.False
                                -> case w1 of wild { GHC.Ptr.Ptr a ->
                                   case w2 of wild2 { GHC.Types.I# x ->
                                   case GHC.Prim.readWord8OffAddr#
                                          @ GHC.Prim.RealWorld
                                          a
                                          (GHC.Prim.+# x ww4)
                                          w4 of ds7 { (#,#) ipv ipv1 ->
                                   case w ipv1 of wild3 {
                                     GHC.Types.False
                                     -> $wsplitLoop w wild (GHC.Prim.+# ww4 1#) wild2 ww5 w3 ipv
                                     GHC.Types.True
                                     -> (# ipv,
                                           GHC.Types.:
                                             @ Data.ByteString.Internal.ByteString
                                             (case w3 of dt4 { GHC.ForeignPtr.ForeignPtr dt5 dt6 ->
                                              Data.ByteString.Internal.PS dt5 dt6 x ww4 })
                                             (case w of pred'1 { DEFAULT ->
                                              case w3 of fp'1 { GHC.ForeignPtr.ForeignPtr ipv2 ipv3 ->
                                              case $wsplitLoop
                                                     pred'1
                                                     lvl1011
                                                     0#
                                                     (GHC.Types.I#
                                                        (GHC.Prim.+# (GHC.Prim.+# x ww4) 1#))
                                                     (GHC.Prim.-# (GHC.Prim.-# ww5 ww4) 1#)
                                                     fp'1
                                                     GHC.Prim.realWorld# of ds8 { (#,#) ipv4 ipv5 ->
                                              case GHC.Prim.touch#
                                                     @ 'GHC.Types.PtrRepLifted
                                                     @ GHC.ForeignPtr.ForeignPtrContents
                                                     ww1
                                                     ipv4 of s' { DEFAULT ->
                                              ipv5 } } } }) #) } } } }
                                GHC.Types.True
                                -> (# w4,
                                      GHC.Types.:
                                        @ Data.ByteString.Internal.ByteString
                                        (case w3 of dt { GHC.ForeignPtr.ForeignPtr dt1 dt2 ->
                                         case w2 of dt3 { GHC.Types.I# dt4 ->
                                         Data.ByteString.Internal.PS dt1 dt2 dt4 ww4 } })
                                        (GHC.Types.[] @ Data.ByteString.Internal.ByteString) #) }
                          } in
                          case $wsplitLoop
                                 Lib.parsemIDstring3
                                 lvl1011
                                 0#
                                 (GHC.Types.I# ww2)
                                 ds6
                                 (GHC.ForeignPtr.ForeignPtr @ GHC.Word.Word8 ww ww1)
                                 GHC.Prim.realWorld# of ds7 { (#,#) ipv ipv1 ->
                          case GHC.Prim.touch#
                                 @ 'GHC.Types.PtrRepLifted
                                 @ GHC.ForeignPtr.ForeignPtrContents
                                 ww1
                                 ipv of s' { DEFAULT ->
                          Data.Either.rights1
                            @ GHC.Base.String
                            @ Data.ByteString.Internal.ByteString
                            (Lib.parsemIDstring_go ipv1) } }
                       0# -> Lib.parsemIDstring2 }
                 } in
                 case GHC.List.$wlenAcc
                        @ Data.ByteString.Internal.ByteString
                        midvals
                        0# of ww4 { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<=# ww4 0#) of wild {
                   GHC.Types.False
                   -> GHC.List.head @ Data.ByteString.Internal.ByteString midvals
                   GHC.Types.True -> Lib.parsemIDstring1 } }) -}
1c33fba1dfb000d0063e67f7e1d49ec6
  $wpoly_go1 ::
    GHC.Prim.Int#
    -> Data.Map.Base.Map GHC.Types.Int a
    -> [(GHC.Types.Int, a)]
    -> Data.Map.Base.Map GHC.Types.Int a
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
2fcea637b8566c14a20859d424876847
  $wpoly_go4 ::
    GHC.Prim.Int#
    -> Data.Map.Base.Map Lib.UChr a
    -> [(Lib.UChr, a)]
    -> Data.Map.Base.Map Lib.UChr a
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
b2b1a0186a06c55fffbac9a47a257bb9
  $wprintAlignmentOrHdr ::
    Data.ByteString.Internal.ByteString
    -> GHC.Types.Int
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> GHC.Integer.Type.Integer
    -> Lib.Header
    -> GHC.Types.Bool
    -> Data.ByteString.Internal.ByteString
  {- Arity: 14,
     Strictness: <L,U><L,1*U(U)><L,1*U><L,U><L,U><L,U><L,1*U><L,U><L,U><L,U><L,U><L,1*U><L,1*U><S,1*U>,
     Inline: [0] -}
589756d0fedf0ea612cc32a2e1835020
  $wsamhdrparser ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <L,U><L,U><L,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
17a8cb31e3d86d242d6ef878ffa98846
  $wsamhdrparserEOL ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <L,U><L,U><L,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
a9f9ee881b1eef413eb7923980f00277
  $wseqp ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
f220561b77ba9b26490d860ce8201098
  $wshiftcrds ::
    (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
    -> GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> (# GHC.Integer.Type.Integer,
          Data.ByteString.Internal.ByteString #)
  {- Arity: 5, Strictness: <L,1*U(1*U,A)><L,U><L,U><L,U><S,U>,
     Inline: [0] -}
f2ffd4d5df487b5c634fe22195447fe7
  $wshowcigar ::
    GHC.Integer.Type.Integer
    -> GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.ByteString.Internal.ByteString
  {- Arity: 5, Strictness: <S,U><S,U><L,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Integer.Type.Integer)
                   (ww1 :: GHC.Prim.Addr#)
                   (ww2 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#) ->
                 case GHC.Show.$w$cshowsPrec1
                        0#
                        ww
                        (GHC.Types.[] @ GHC.Types.Char) of ww5 { (#,#) ww6 ww7 ->
                 let {
                   cs :: [GHC.Types.Char] = GHC.Types.: @ GHC.Types.Char ww6 ww7
                 } in
                 case GHC.List.$wlenAcc @ GHC.Types.Char cs 0# of ww8 { DEFAULT ->
                 case Data.ByteString.Internal.$wunsafePackLenChars
                        ww8
                        cs of ww9 { Data.ByteString.Internal.PS ww10 ww11 ww12 ww13 ->
                 Data.ByteString.Internal.$w$c<>
                   ww10
                   ww11
                   ww12
                   ww13
                   ww1
                   ww2
                   ww3
                   ww4 } } }) -}
78c6a45e12226a5e7350b6d1671d4dc3
  $wspaces ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 8, Strictness: <S,U><L,U><S,U><S,U><L,U><L,U><S,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More) ->
                 Lib.$wgo4 @ r ww ww1 ww2 ww3 ww4 ww5 ww6 w (Lib.spaces2 @ r)) -}
7893bd5544f6d2a067150657d7a8ce07
  $wstarcigarP ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <L,U><L,U><L,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
9e10479e41d94894705f0345371109ba
  $wtrimalignment ::
    Data.ByteString.Internal.ByteString
    -> GHC.Types.Int
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> Lib.CigarMap
    -> Lib.CigarMap
    -> Data.ByteString.Internal.ByteString
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> [Lib.BedRecord]
    -> [Lib.BedRecord]
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Lib.Header
    -> GHC.Types.Bool
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> Lib.BedRecord
    -> Lib.AlignedRead
  {- Arity: 29,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U><L,U(U,U,U,U)><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><S,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0] -}
415f89f8d71ea43e4fb8113dd55d483b
  $wtrimboth ::
    Data.ByteString.Internal.ByteString
    -> GHC.Types.Int
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> Lib.CigarMap
    -> Data.ByteString.Internal.ByteString
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> [Lib.BedRecord]
    -> [Lib.BedRecord]
    -> GHC.Types.Bool
    -> Lib.Header
    -> GHC.Types.Bool
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> Lib.BedRecord
    -> Lib.AlignedRead
  {- Arity: 25,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U><L,U(U,U,U,U)><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ (ww :: Data.ByteString.Internal.ByteString)
                   (ww1 :: GHC.Types.Int)
                   (ww2 :: Lib.UChr)
                   (ww3 :: GHC.Integer.Type.Integer)
                   (ww4 :: GHC.Integer.Type.Integer)
                   (ww5 :: GHC.Integer.Type.Integer)
                   (ww6 :: Data.ByteString.Internal.ByteString)
                   (ww7 :: Lib.CigarMap)
                   (ww8 :: Data.ByteString.Internal.ByteString)
                   (ww9 :: GHC.Integer.Type.Integer)
                   (ww10 :: GHC.Integer.Type.Integer)
                   (ww11 :: Data.ByteString.Internal.ByteString)
                   (ww12 :: Data.ByteString.Internal.ByteString)
                   (ww13 :: Data.ByteString.Internal.ByteString)
                   (ww14 :: Data.ByteString.Internal.ByteString)
                   (ww15 :: GHC.Types.Bool)
                   (ww16 :: GHC.Types.Bool)
                   (ww17 :: [Lib.BedRecord])
                   (ww18 :: [Lib.BedRecord])
                   (ww19 :: GHC.Types.Bool)
                   (ww20 :: Lib.Header)
                   (ww21 :: GHC.Types.Bool)
                   (ww22 :: Data.ByteString.Internal.ByteString)
                   (ww23 :: Data.ByteString.Internal.ByteString)
                   (ww24 :: Lib.BedRecord) ->
                 let {
                   newendpos :: GHC.Integer.Type.Integer
                   = case ww18 of wild {
                       [] -> case GHC.List.badHead ret_ty GHC.Integer.Type.Integer of {}
                       : x ds6
                       -> case x of wild1 { Lib.BedRecord ds7 ds8 ds9 ds10 -> ds8 } }
                 } in
                 let {
                   rdiff :: GHC.Integer.Type.Integer
                   = GHC.Integer.Type.minusInteger ww4 newendpos
                 } in
                 let {
                   tendpos :: GHC.Integer.Type.Integer
                   = case GHC.Integer.Type.ltInteger#
                            rdiff
                            Lib.checkCigarSeqlen1 of wild { DEFAULT ->
                     case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild of wild1 {
                       GHC.Types.False -> newendpos GHC.Types.True -> ww4 } }
                 } in
                 let {
                   newpos :: GHC.Integer.Type.Integer
                   = case ww17 of wild {
                       [] -> case GHC.List.badHead ret_ty GHC.Integer.Type.Integer of {}
                       : x ds6
                       -> case x of wild1 { Lib.BedRecord ds7 ds8 ds9 ds10 -> ds9 } }
                 } in
                 let {
                   fdiff :: GHC.Integer.Type.Integer
                   = GHC.Integer.Type.minusInteger newpos ww3
                 } in
                 let {
                   newcig :: Data.ByteString.Internal.ByteString
                   = Lib.updateCigB fdiff rdiff ww6
                 } in
                 let {
                   tpos :: GHC.Integer.Type.Integer
                   = case GHC.Integer.Type.ltInteger#
                            fdiff
                            Lib.checkCigarSeqlen1 of wild { DEFAULT ->
                     case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild of wild1 {
                       GHC.Types.False -> newpos GHC.Types.True -> ww3 } }
                 } in
                 Lib.AlignedRead
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   newcig
                   ww7
                   (case Data.Either.rights1
                           @ GHC.Base.String
                           @ [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                           (GHC.Types.:
                              @ (Data.Either.Either
                                   GHC.Base.String
                                   [(GHC.Integer.Type.Integer,
                                     Data.ByteString.Internal.ByteString)])
                              (case newcig of wild { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                               case Lib.$wparseCigar
                                      @ [(GHC.Integer.Type.Integer,
                                          Data.ByteString.Internal.ByteString)]
                                      dt
                                      dt1
                                      dt2
                                      dt3
                                      dt3
                                      0#
                                      0#
                                      Data.Attoparsec.Internal.Types.Complete
                                      (Data.Attoparsec.ByteString.Internal.failK
                                         @ [(GHC.Integer.Type.Integer,
                                             Data.ByteString.Internal.ByteString)])
                                        `cast`
                                      (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                                       ->_R <Data.Attoparsec.Internal.Types.Pos
                                             -> Data.Attoparsec.Internal.Types.More
                                             -> [GHC.Base.String]
                                             -> GHC.Base.String
                                             -> Data.Attoparsec.Internal.Types.IResult
                                                  Data.ByteString.Internal.ByteString
                                                  [(GHC.Integer.Type.Integer,
                                                    Data.ByteString.Internal.ByteString)]>_R)
                                      (Data.Attoparsec.ByteString.Internal.successK
                                         @ [(GHC.Integer.Type.Integer,
                                             Data.ByteString.Internal.ByteString)])
                                        `cast`
                                      (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                                       ->_R <Data.Attoparsec.Internal.Types.Pos
                                             -> Data.Attoparsec.Internal.Types.More
                                             -> [(GHC.Integer.Type.Integer,
                                                  Data.ByteString.Internal.ByteString)]
                                             -> Data.Attoparsec.Internal.Types.IResult
                                                  Data.ByteString.Internal.ByteString
                                                  [(GHC.Integer.Type.Integer,
                                                    Data.ByteString.Internal.ByteString)]>_R) of wild1 {
                                 Data.Attoparsec.Internal.Types.Fail ds6 ds7 err
                                 -> case ds7 of wild2 {
                                      []
                                      -> Data.Either.Left
                                           @ GHC.Base.String
                                           @ [(GHC.Integer.Type.Integer,
                                               Data.ByteString.Internal.ByteString)]
                                           err
                                      : ipv ipv1
                                      -> Data.Either.Left
                                           @ [GHC.Types.Char]
                                           @ [(GHC.Integer.Type.Integer,
                                               Data.ByteString.Internal.ByteString)]
                                           (GHC.Base.++
                                              @ GHC.Types.Char
                                              (Data.OldList.intercalate_$spoly_go
                                                 @ GHC.Types.Char
                                                 ipv
                                                 (Data.OldList.prependToAll
                                                    @ [GHC.Types.Char]
                                                    Lib.mapcig2
                                                    ipv1))
                                              (GHC.CString.unpackAppendCString# ": "# err)) }
                                 Data.Attoparsec.Internal.Types.Partial ipv -> Lib.mapcig1
                                 Data.Attoparsec.Internal.Types.Done ds6 a1
                                 -> Data.Either.Right
                                      @ GHC.Base.String
                                      @ [(GHC.Integer.Type.Integer,
                                          Data.ByteString.Internal.ByteString)]
                                      a1 } })
                              (GHC.Types.[]
                                 @ (Data.Either.Either
                                      GHC.Base.String
                                      [(GHC.Integer.Type.Integer,
                                        Data.ByteString.Internal.ByteString)]))) of wild {
                      []
                      -> GHC.List.badHead
                           @ [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                      : x ds6 -> x })
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   (case GHC.Integer.Type.neqInteger# ww3 tpos of wild { DEFAULT ->
                    case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild of wild1 {
                      GHC.Types.False -> GHC.Integer.Type.neqInteger ww4 tendpos
                      GHC.Types.True -> GHC.Types.True } })
                   tpos
                   tendpos
                   ww20
                   ww21
                   ww22
                   ww23
                   ww24) -}
ba665ddd13651b573d6ff59d5e5c5b36
  $wtrimfwd ::
    Data.ByteString.Internal.ByteString
    -> GHC.Types.Int
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> Lib.CigarMap
    -> Data.ByteString.Internal.ByteString
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> [Lib.BedRecord]
    -> [Lib.BedRecord]
    -> GHC.Types.Bool
    -> GHC.Integer.Type.Integer
    -> Lib.Header
    -> GHC.Types.Bool
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> Lib.BedRecord
    -> Lib.AlignedRead
  {- Arity: 26,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U><L,U(U,U,U,U)><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ (ww :: Data.ByteString.Internal.ByteString)
                   (ww1 :: GHC.Types.Int)
                   (ww2 :: Lib.UChr)
                   (ww3 :: GHC.Integer.Type.Integer)
                   (ww4 :: GHC.Integer.Type.Integer)
                   (ww5 :: GHC.Integer.Type.Integer)
                   (ww6 :: Data.ByteString.Internal.ByteString)
                   (ww7 :: Lib.CigarMap)
                   (ww8 :: Data.ByteString.Internal.ByteString)
                   (ww9 :: GHC.Integer.Type.Integer)
                   (ww10 :: GHC.Integer.Type.Integer)
                   (ww11 :: Data.ByteString.Internal.ByteString)
                   (ww12 :: Data.ByteString.Internal.ByteString)
                   (ww13 :: Data.ByteString.Internal.ByteString)
                   (ww14 :: Data.ByteString.Internal.ByteString)
                   (ww15 :: GHC.Types.Bool)
                   (ww16 :: GHC.Types.Bool)
                   (ww17 :: [Lib.BedRecord])
                   (ww18 :: [Lib.BedRecord])
                   (ww19 :: GHC.Types.Bool)
                   (ww20 :: GHC.Integer.Type.Integer)
                   (ww21 :: Lib.Header)
                   (ww22 :: GHC.Types.Bool)
                   (ww23 :: Data.ByteString.Internal.ByteString)
                   (ww24 :: Data.ByteString.Internal.ByteString)
                   (ww25 :: Lib.BedRecord) ->
                 let {
                   newpos :: GHC.Integer.Type.Integer
                   = case ww17 of wild {
                       [] -> case GHC.List.badHead ret_ty GHC.Integer.Type.Integer of {}
                       : x ds6
                       -> case x of wild1 { Lib.BedRecord ds7 ds8 ds9 ds10 -> ds9 } }
                 } in
                 let {
                   fdiff :: GHC.Integer.Type.Integer
                   = GHC.Integer.Type.minusInteger newpos ww3
                 } in
                 let {
                   newcig :: Data.ByteString.Internal.ByteString
                   = Lib.updateCigF fdiff ww6
                 } in
                 let {
                   tpos :: GHC.Integer.Type.Integer
                   = case GHC.Integer.Type.ltInteger#
                            fdiff
                            Lib.checkCigarSeqlen1 of wild { DEFAULT ->
                     case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild of wild1 {
                       GHC.Types.False -> newpos GHC.Types.True -> ww3 } }
                 } in
                 Lib.AlignedRead
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   newcig
                   ww7
                   (case Data.Either.rights1
                           @ GHC.Base.String
                           @ [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                           (GHC.Types.:
                              @ (Data.Either.Either
                                   GHC.Base.String
                                   [(GHC.Integer.Type.Integer,
                                     Data.ByteString.Internal.ByteString)])
                              (case newcig of wild { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                               case Lib.$wparseCigar
                                      @ [(GHC.Integer.Type.Integer,
                                          Data.ByteString.Internal.ByteString)]
                                      dt
                                      dt1
                                      dt2
                                      dt3
                                      dt3
                                      0#
                                      0#
                                      Data.Attoparsec.Internal.Types.Complete
                                      (Data.Attoparsec.ByteString.Internal.failK
                                         @ [(GHC.Integer.Type.Integer,
                                             Data.ByteString.Internal.ByteString)])
                                        `cast`
                                      (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                                       ->_R <Data.Attoparsec.Internal.Types.Pos
                                             -> Data.Attoparsec.Internal.Types.More
                                             -> [GHC.Base.String]
                                             -> GHC.Base.String
                                             -> Data.Attoparsec.Internal.Types.IResult
                                                  Data.ByteString.Internal.ByteString
                                                  [(GHC.Integer.Type.Integer,
                                                    Data.ByteString.Internal.ByteString)]>_R)
                                      (Data.Attoparsec.ByteString.Internal.successK
                                         @ [(GHC.Integer.Type.Integer,
                                             Data.ByteString.Internal.ByteString)])
                                        `cast`
                                      (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                                       ->_R <Data.Attoparsec.Internal.Types.Pos
                                             -> Data.Attoparsec.Internal.Types.More
                                             -> [(GHC.Integer.Type.Integer,
                                                  Data.ByteString.Internal.ByteString)]
                                             -> Data.Attoparsec.Internal.Types.IResult
                                                  Data.ByteString.Internal.ByteString
                                                  [(GHC.Integer.Type.Integer,
                                                    Data.ByteString.Internal.ByteString)]>_R) of wild1 {
                                 Data.Attoparsec.Internal.Types.Fail ds6 ds7 err
                                 -> case ds7 of wild2 {
                                      []
                                      -> Data.Either.Left
                                           @ GHC.Base.String
                                           @ [(GHC.Integer.Type.Integer,
                                               Data.ByteString.Internal.ByteString)]
                                           err
                                      : ipv ipv1
                                      -> Data.Either.Left
                                           @ [GHC.Types.Char]
                                           @ [(GHC.Integer.Type.Integer,
                                               Data.ByteString.Internal.ByteString)]
                                           (GHC.Base.++
                                              @ GHC.Types.Char
                                              (Data.OldList.intercalate_$spoly_go
                                                 @ GHC.Types.Char
                                                 ipv
                                                 (Data.OldList.prependToAll
                                                    @ [GHC.Types.Char]
                                                    Lib.mapcig2
                                                    ipv1))
                                              (GHC.CString.unpackAppendCString# ": "# err)) }
                                 Data.Attoparsec.Internal.Types.Partial ipv -> Lib.mapcig1
                                 Data.Attoparsec.Internal.Types.Done ds6 a1
                                 -> Data.Either.Right
                                      @ GHC.Base.String
                                      @ [(GHC.Integer.Type.Integer,
                                          Data.ByteString.Internal.ByteString)]
                                      a1 } })
                              (GHC.Types.[]
                                 @ (Data.Either.Either
                                      GHC.Base.String
                                      [(GHC.Integer.Type.Integer,
                                        Data.ByteString.Internal.ByteString)]))) of wild {
                      []
                      -> GHC.List.badHead
                           @ [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                      : x ds6 -> x })
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   (GHC.Integer.Type.neqInteger ww3 tpos)
                   tpos
                   ww20
                   ww21
                   ww22
                   ww23
                   ww24
                   ww25) -}
e4d131a73a8901eb141880043f3eb239
  $wtrimrev ::
    Data.ByteString.Internal.ByteString
    -> GHC.Types.Int
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> Lib.CigarMap
    -> Data.ByteString.Internal.ByteString
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> [Lib.BedRecord]
    -> [Lib.BedRecord]
    -> GHC.Types.Bool
    -> GHC.Integer.Type.Integer
    -> Lib.Header
    -> GHC.Types.Bool
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> Lib.BedRecord
    -> Lib.AlignedRead
  {- Arity: 26,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U><L,U(U,U,U,U)><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ (ww :: Data.ByteString.Internal.ByteString)
                   (ww1 :: GHC.Types.Int)
                   (ww2 :: Lib.UChr)
                   (ww3 :: GHC.Integer.Type.Integer)
                   (ww4 :: GHC.Integer.Type.Integer)
                   (ww5 :: GHC.Integer.Type.Integer)
                   (ww6 :: Data.ByteString.Internal.ByteString)
                   (ww7 :: Lib.CigarMap)
                   (ww8 :: Data.ByteString.Internal.ByteString)
                   (ww9 :: GHC.Integer.Type.Integer)
                   (ww10 :: GHC.Integer.Type.Integer)
                   (ww11 :: Data.ByteString.Internal.ByteString)
                   (ww12 :: Data.ByteString.Internal.ByteString)
                   (ww13 :: Data.ByteString.Internal.ByteString)
                   (ww14 :: Data.ByteString.Internal.ByteString)
                   (ww15 :: GHC.Types.Bool)
                   (ww16 :: GHC.Types.Bool)
                   (ww17 :: [Lib.BedRecord])
                   (ww18 :: [Lib.BedRecord])
                   (ww19 :: GHC.Types.Bool)
                   (ww20 :: GHC.Integer.Type.Integer)
                   (ww21 :: Lib.Header)
                   (ww22 :: GHC.Types.Bool)
                   (ww23 :: Data.ByteString.Internal.ByteString)
                   (ww24 :: Data.ByteString.Internal.ByteString)
                   (ww25 :: Lib.BedRecord) ->
                 let {
                   newendpos :: GHC.Integer.Type.Integer
                   = case ww18 of wild {
                       [] -> case GHC.List.badHead ret_ty GHC.Integer.Type.Integer of {}
                       : x ds6
                       -> case x of wild1 { Lib.BedRecord ds7 ds8 ds9 ds10 -> ds8 } }
                 } in
                 let {
                   rdiff :: GHC.Integer.Type.Integer
                   = GHC.Integer.Type.minusInteger ww4 newendpos
                 } in
                 let {
                   newcig :: Data.ByteString.Internal.ByteString
                   = Lib.updateCigR rdiff ww6
                 } in
                 let {
                   tendpos :: GHC.Integer.Type.Integer
                   = case GHC.Integer.Type.ltInteger#
                            rdiff
                            Lib.checkCigarSeqlen1 of wild { DEFAULT ->
                     case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild of wild1 {
                       GHC.Types.False -> newendpos GHC.Types.True -> ww4 } }
                 } in
                 Lib.AlignedRead
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   newcig
                   ww7
                   (case Data.Either.rights1
                           @ GHC.Base.String
                           @ [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                           (GHC.Types.:
                              @ (Data.Either.Either
                                   GHC.Base.String
                                   [(GHC.Integer.Type.Integer,
                                     Data.ByteString.Internal.ByteString)])
                              (case newcig of wild { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                               case Lib.$wparseCigar
                                      @ [(GHC.Integer.Type.Integer,
                                          Data.ByteString.Internal.ByteString)]
                                      dt
                                      dt1
                                      dt2
                                      dt3
                                      dt3
                                      0#
                                      0#
                                      Data.Attoparsec.Internal.Types.Complete
                                      (Data.Attoparsec.ByteString.Internal.failK
                                         @ [(GHC.Integer.Type.Integer,
                                             Data.ByteString.Internal.ByteString)])
                                        `cast`
                                      (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                                       ->_R <Data.Attoparsec.Internal.Types.Pos
                                             -> Data.Attoparsec.Internal.Types.More
                                             -> [GHC.Base.String]
                                             -> GHC.Base.String
                                             -> Data.Attoparsec.Internal.Types.IResult
                                                  Data.ByteString.Internal.ByteString
                                                  [(GHC.Integer.Type.Integer,
                                                    Data.ByteString.Internal.ByteString)]>_R)
                                      (Data.Attoparsec.ByteString.Internal.successK
                                         @ [(GHC.Integer.Type.Integer,
                                             Data.ByteString.Internal.ByteString)])
                                        `cast`
                                      (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                                       ->_R <Data.Attoparsec.Internal.Types.Pos
                                             -> Data.Attoparsec.Internal.Types.More
                                             -> [(GHC.Integer.Type.Integer,
                                                  Data.ByteString.Internal.ByteString)]
                                             -> Data.Attoparsec.Internal.Types.IResult
                                                  Data.ByteString.Internal.ByteString
                                                  [(GHC.Integer.Type.Integer,
                                                    Data.ByteString.Internal.ByteString)]>_R) of wild1 {
                                 Data.Attoparsec.Internal.Types.Fail ds6 ds7 err
                                 -> case ds7 of wild2 {
                                      []
                                      -> Data.Either.Left
                                           @ GHC.Base.String
                                           @ [(GHC.Integer.Type.Integer,
                                               Data.ByteString.Internal.ByteString)]
                                           err
                                      : ipv ipv1
                                      -> Data.Either.Left
                                           @ [GHC.Types.Char]
                                           @ [(GHC.Integer.Type.Integer,
                                               Data.ByteString.Internal.ByteString)]
                                           (GHC.Base.++
                                              @ GHC.Types.Char
                                              (Data.OldList.intercalate_$spoly_go
                                                 @ GHC.Types.Char
                                                 ipv
                                                 (Data.OldList.prependToAll
                                                    @ [GHC.Types.Char]
                                                    Lib.mapcig2
                                                    ipv1))
                                              (GHC.CString.unpackAppendCString# ": "# err)) }
                                 Data.Attoparsec.Internal.Types.Partial ipv -> Lib.mapcig1
                                 Data.Attoparsec.Internal.Types.Done ds6 a1
                                 -> Data.Either.Right
                                      @ GHC.Base.String
                                      @ [(GHC.Integer.Type.Integer,
                                          Data.ByteString.Internal.ByteString)]
                                      a1 } })
                              (GHC.Types.[]
                                 @ (Data.Either.Either
                                      GHC.Base.String
                                      [(GHC.Integer.Type.Integer,
                                        Data.ByteString.Internal.ByteString)]))) of wild {
                      []
                      -> GHC.List.badHead
                           @ [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                      : x ds6 -> x })
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   (GHC.Integer.Type.neqInteger ww4 tendpos)
                   ww20
                   tendpos
                   ww21
                   ww22
                   ww23
                   ww24
                   ww25) -}
1e9e26e5296ac23369e181493c68a810
  $wtxtfieldp ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
279b1eb3752dfaf3a04de753fb1462d5
  $wuchrparser ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.UChr
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <L,U><L,U><L,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
f671dfe83494b300f9d572c68e554e5e
  data AlignedRead
    = AlignedRead {qname :: Data.ByteString.Internal.ByteString,
                   flag :: GHC.Types.Int,
                   rname :: Lib.UChr,
                   pos :: GHC.Integer.Type.Integer,
                   endpos :: GHC.Integer.Type.Integer,
                   mapqual :: GHC.Integer.Type.Integer,
                   cigar :: Data.ByteString.Internal.ByteString,
                   trimdcigar :: Data.ByteString.Internal.ByteString,
                   cigmap :: Lib.CigarMap,
                   trimdcigmap :: Lib.CigarMap,
                   rnext :: Data.ByteString.Internal.ByteString,
                   pnext :: GHC.Integer.Type.Integer,
                   tlen :: GHC.Integer.Type.Integer,
                   refseq :: Data.ByteString.Internal.ByteString,
                   basequal :: Data.ByteString.Internal.ByteString,
                   optfields :: Data.ByteString.Internal.ByteString,
                   strand :: Data.ByteString.Internal.ByteString,
                   paired :: GHC.Types.Bool,
                   mapped :: GHC.Types.Bool,
                   fint :: [Lib.BedRecord],
                   rint :: [Lib.BedRecord],
                   pintflag :: GHC.Types.Bool,
                   trimdflag :: GHC.Types.Bool,
                   trimdpos :: GHC.Integer.Type.Integer,
                   trimdendpos :: GHC.Integer.Type.Integer,
                   headerstrings :: Lib.Header,
                   isheader :: GHC.Types.Bool,
                   mid :: Data.ByteString.Internal.ByteString,
                   xmid :: Data.ByteString.Internal.ByteString,
                   tbed :: Lib.BedRecord}
cf5dfca4bc127fcc237aa0d847fcdef0
  type Alignments = [Lib.AlignedRead]
639160d007fc88a912558d2ec1e4b706
  type BED = Data.Vector.Vector Lib.BedRecord
be5c6de6e7b4e000b2c546a4da4f55b0
  type BedMap = Data.IntMap.Base.IntMap Lib.BedRecord
fccf42ae6afd19ae2c265e24a08011ff
  data BedRecord
    = BedRecord {bedchr :: Lib.UChr,
                 bedstart :: GHC.Integer.Type.Integer,
                 bedend :: GHC.Integer.Type.Integer,
                 bedname :: Data.ByteString.Internal.ByteString}
10db7abfdb66c7d119f919f237eb0274
  type CMap = Data.Map.Base.Map Lib.UChr Lib.BedMap
729a34be9738ea3507254144802cc56b
  data ChromNameFormat = GRC | UCSC
d1d9570ae6509b8e83c7a5441c222a02
  type CigarMap =
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
49754e851ba80a36fe494fe2de6d77bd
  type Header = [Data.ByteString.Internal.ByteString]
d774c24178fe50c0a3a4a367dd390465
  data MasterRecord
    = MasterRecord {mchrom :: Lib.UChr,
                    mtargetstart :: GHC.Integer.Type.Integer,
                    mtargetend :: GHC.Integer.Type.Integer,
                    mampname :: Data.ByteString.Internal.ByteString,
                    mforstart :: GHC.Integer.Type.Integer,
                    mforend :: GHC.Integer.Type.Integer,
                    mrevstart :: GHC.Integer.Type.Integer,
                    mrevend :: GHC.Integer.Type.Integer,
                    mforname :: Data.ByteString.Internal.ByteString,
                    mrevname :: Data.ByteString.Internal.ByteString,
                    mforseq :: Data.ByteString.Internal.ByteString,
                    mrevseq :: Data.ByteString.Internal.ByteString}
b40c42e0053503f3e12b12c8853d8620
  data MidFamily
    = MidFamily {chrom :: Lib.UChr,
                 alnstart :: GHC.Integer.Type.Integer,
                 alnend :: GHC.Integer.Type.Integer,
                 midseq :: Data.ByteString.Internal.ByteString,
                 alns :: [Lib.AlignedRead],
                 alncount :: GHC.Integer.Type.Integer,
                 txposedcount :: GHC.Integer.Type.Integer,
                 postxposdcnt :: GHC.Integer.Type.Integer,
                 negtxposdcnt :: GHC.Integer.Type.Integer,
                 targetbed :: Lib.BedRecord}
f671dfe83494b300f9d572c68e554e5e
  axiom Rep_AlignedRead::
      GHC.Generics.Rep Lib.AlignedRead
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "AlignedRead"
               "Lib"
               "primerclip-0.1.0.0-KtmdnGpJra4GypcvVGF2ng"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "AlignedRead" 'GHC.Generics.PrefixI 'GHC.Types.True)
               ((((GHC.Generics.S1
                     ('GHC.Generics.MetaSel
                        ('GHC.Base.Just "qname")
                        'GHC.Generics.NoSourceUnpackedness
                        'GHC.Generics.NoSourceStrictness
                        'GHC.Generics.DecidedLazy)
                     (GHC.Generics.Rec0 Data.ByteString.Internal.ByteString)
                   GHC.Generics.:*: (GHC.Generics.S1
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "flag")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 GHC.Types.Int)
                                     GHC.Generics.:*: GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "rname")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0 Lib.UChr)))
                  GHC.Generics.:*: ((GHC.Generics.S1
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "pos")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                                     GHC.Generics.:*: GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "endpos")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0
                                                           GHC.Integer.Type.Integer))
                                    GHC.Generics.:*: (GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "mapqual")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                                                      GHC.Generics.:*: GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just "cigar")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            Data.ByteString.Internal.ByteString))))
                 GHC.Generics.:*: (((GHC.Generics.S1
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "trimdcigar")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 Data.ByteString.Internal.ByteString)
                                     GHC.Generics.:*: GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "cigmap")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0 Lib.CigarMap))
                                    GHC.Generics.:*: (GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "trimdcigmap")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0 Lib.CigarMap)
                                                      GHC.Generics.:*: GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just "rnext")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            Data.ByteString.Internal.ByteString)))
                                   GHC.Generics.:*: ((GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "pnext")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                                                      GHC.Generics.:*: GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just "tlen")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            GHC.Integer.Type.Integer))
                                                     GHC.Generics.:*: (GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just
                                                                               "refseq")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            Data.ByteString.Internal.ByteString)
                                                                       GHC.Generics.:*: GHC.Generics.S1
                                                                                          ('GHC.Generics.MetaSel
                                                                                             ('GHC.Base.Just
                                                                                                "basequal")
                                                                                             'GHC.Generics.NoSourceUnpackedness
                                                                                             'GHC.Generics.NoSourceStrictness
                                                                                             'GHC.Generics.DecidedLazy)
                                                                                          (GHC.Generics.Rec0
                                                                                             Data.ByteString.Internal.ByteString)))))
                GHC.Generics.:*: (((GHC.Generics.S1
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "optfields")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 Data.ByteString.Internal.ByteString)
                                    GHC.Generics.:*: (GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "strand")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0
                                                           Data.ByteString.Internal.ByteString)
                                                      GHC.Generics.:*: GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just
                                                                               "paired")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            GHC.Types.Bool)))
                                   GHC.Generics.:*: ((GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "mapped")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0 GHC.Types.Bool)
                                                      GHC.Generics.:*: GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just "fint")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            [Lib.BedRecord]))
                                                     GHC.Generics.:*: (GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just "rint")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            [Lib.BedRecord])
                                                                       GHC.Generics.:*: GHC.Generics.S1
                                                                                          ('GHC.Generics.MetaSel
                                                                                             ('GHC.Base.Just
                                                                                                "pintflag")
                                                                                             'GHC.Generics.NoSourceUnpackedness
                                                                                             'GHC.Generics.NoSourceStrictness
                                                                                             'GHC.Generics.DecidedLazy)
                                                                                          (GHC.Generics.Rec0
                                                                                             GHC.Types.Bool))))
                                  GHC.Generics.:*: (((GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "trimdflag")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0 GHC.Types.Bool)
                                                      GHC.Generics.:*: GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just
                                                                               "trimdpos")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            GHC.Integer.Type.Integer))
                                                     GHC.Generics.:*: (GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just
                                                                               "trimdendpos")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            GHC.Integer.Type.Integer)
                                                                       GHC.Generics.:*: GHC.Generics.S1
                                                                                          ('GHC.Generics.MetaSel
                                                                                             ('GHC.Base.Just
                                                                                                "headerstrings")
                                                                                             'GHC.Generics.NoSourceUnpackedness
                                                                                             'GHC.Generics.NoSourceStrictness
                                                                                             'GHC.Generics.DecidedLazy)
                                                                                          (GHC.Generics.Rec0
                                                                                             Lib.Header)))
                                                    GHC.Generics.:*: ((GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just
                                                                               "isheader")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            GHC.Types.Bool)
                                                                       GHC.Generics.:*: GHC.Generics.S1
                                                                                          ('GHC.Generics.MetaSel
                                                                                             ('GHC.Base.Just
                                                                                                "mid")
                                                                                             'GHC.Generics.NoSourceUnpackedness
                                                                                             'GHC.Generics.NoSourceStrictness
                                                                                             'GHC.Generics.DecidedLazy)
                                                                                          (GHC.Generics.Rec0
                                                                                             Data.ByteString.Internal.ByteString))
                                                                      GHC.Generics.:*: (GHC.Generics.S1
                                                                                          ('GHC.Generics.MetaSel
                                                                                             ('GHC.Base.Just
                                                                                                "xmid")
                                                                                             'GHC.Generics.NoSourceUnpackedness
                                                                                             'GHC.Generics.NoSourceStrictness
                                                                                             'GHC.Generics.DecidedLazy)
                                                                                          (GHC.Generics.Rec0
                                                                                             Data.ByteString.Internal.ByteString)
                                                                                        GHC.Generics.:*: GHC.Generics.S1
                                                                                                           ('GHC.Generics.MetaSel
                                                                                                              ('GHC.Base.Just
                                                                                                                 "tbed")
                                                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                                                              'GHC.Generics.NoSourceStrictness
                                                                                                              'GHC.Generics.DecidedLazy)
                                                                                                           (GHC.Generics.Rec0
                                                                                                              Lib.BedRecord)))))))
fccf42ae6afd19ae2c265e24a08011ff
  axiom Rep_BedRecord::
      GHC.Generics.Rep Lib.BedRecord
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "BedRecord"
               "Lib"
               "primerclip-0.1.0.0-KtmdnGpJra4GypcvVGF2ng"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "BedRecord" 'GHC.Generics.PrefixI 'GHC.Types.True)
               ((GHC.Generics.S1
                   ('GHC.Generics.MetaSel
                      ('GHC.Base.Just "bedchr")
                      'GHC.Generics.NoSourceUnpackedness
                      'GHC.Generics.NoSourceStrictness
                      'GHC.Generics.DecidedLazy)
                   (GHC.Generics.Rec0 Lib.UChr)
                 GHC.Generics.:*: GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "bedstart")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Integer.Type.Integer))
                GHC.Generics.:*: (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "bedend")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "bedname")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0
                                                        Data.ByteString.Internal.ByteString))))
3b7e185ad71459af8d347e25da054651
  axiom Rep_UChr::
      GHC.Generics.Rep Lib.UChr
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "UChr"
               "Lib"
               "primerclip-0.1.0.0-KtmdnGpJra4GypcvVGF2ng"
               'GHC.Types.False)
            ((((((GHC.Generics.C1
                    ('GHC.Generics.MetaCons
                       "C1" 'GHC.Generics.PrefixI 'GHC.Types.False)
                    GHC.Generics.U1
                  GHC.Generics.:+: (GHC.Generics.C1
                                      ('GHC.Generics.MetaCons
                                         "C2" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                      GHC.Generics.U1
                                    GHC.Generics.:+: GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "C3"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1))
                 GHC.Generics.:+: (GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "C4" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: (GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "C5"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1
                                                     GHC.Generics.:+: GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "C6"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1)))
                GHC.Generics.:+: ((GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "C7" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: (GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "C8"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1
                                                     GHC.Generics.:+: GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "C9"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1))
                                  GHC.Generics.:+: ((GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "C10"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1
                                                     GHC.Generics.:+: GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "C11"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1)
                                                    GHC.Generics.:+: (GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "C12"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "C13"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1))))
               GHC.Generics.:+: (((GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "C14" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: (GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "C15"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1
                                                     GHC.Generics.:+: GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "C16"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1))
                                  GHC.Generics.:+: ((GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "C17"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1
                                                     GHC.Generics.:+: GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "C18"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1)
                                                    GHC.Generics.:+: (GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "C19"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "C20"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1)))
                                 GHC.Generics.:+: ((GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "C21"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1
                                                    GHC.Generics.:+: (GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "C22"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "CX"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1))
                                                   GHC.Generics.:+: ((GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "CY"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "CMT"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1)
                                                                     GHC.Generics.:+: (GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "Chr1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "Chr2"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1)))))
              GHC.Generics.:+: ((((GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "Chr3" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: (GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "Chr4"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1
                                                     GHC.Generics.:+: GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "Chr5"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1))
                                  GHC.Generics.:+: ((GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "Chr6"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1
                                                     GHC.Generics.:+: GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "Chr7"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1)
                                                    GHC.Generics.:+: (GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "Chr8"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "Chr9"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1)))
                                 GHC.Generics.:+: ((GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "Chr10"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1
                                                    GHC.Generics.:+: (GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "Chr11"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "Chr12"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1))
                                                   GHC.Generics.:+: ((GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "Chr13"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "Chr14"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1)
                                                                     GHC.Generics.:+: (GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "Chr15"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "Chr16"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1))))
                                GHC.Generics.:+: (((GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "Chr17"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1
                                                    GHC.Generics.:+: (GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "Chr18"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "Chr19"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1))
                                                   GHC.Generics.:+: ((GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "Chr20"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "Chr21"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1)
                                                                     GHC.Generics.:+: (GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "Chr22"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "ChrX"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1)))
                                                  GHC.Generics.:+: ((GHC.Generics.C1
                                                                       ('GHC.Generics.MetaCons
                                                                          "ChrY"
                                                                          'GHC.Generics.PrefixI
                                                                          'GHC.Types.False)
                                                                       GHC.Generics.U1
                                                                     GHC.Generics.:+: (GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "ChrM"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000207P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1))
                                                                    GHC.Generics.:+: ((GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000226P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000229P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1)
                                                                                      GHC.Generics.:+: (GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000231P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1
                                                                                                        GHC.Generics.:+: GHC.Generics.C1
                                                                                                                           ('GHC.Generics.MetaCons
                                                                                                                              "GL000210P1"
                                                                                                                              'GHC.Generics.PrefixI
                                                                                                                              'GHC.Types.False)
                                                                                                                           GHC.Generics.U1))))))
             GHC.Generics.:+: (((((GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "GL000239P1" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: (GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "GL000235P1"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1
                                                     GHC.Generics.:+: GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "GL000201P1"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1))
                                  GHC.Generics.:+: ((GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "GL000247P1"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1
                                                     GHC.Generics.:+: GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "GL000245P1"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1)
                                                    GHC.Generics.:+: (GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "GL000197P1"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000203P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1)))
                                 GHC.Generics.:+: ((GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "GL000246P1"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1
                                                    GHC.Generics.:+: (GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "GL000249P1"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000196P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1))
                                                   GHC.Generics.:+: ((GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "GL000248P1"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000244P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1)
                                                                     GHC.Generics.:+: (GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000238P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000202P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1))))
                                GHC.Generics.:+: (((GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "GL000234P1"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1
                                                    GHC.Generics.:+: (GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "GL000232P1"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000206P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1))
                                                   GHC.Generics.:+: ((GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "GL000240P1"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000236P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1)
                                                                     GHC.Generics.:+: (GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000241P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000243P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1)))
                                                  GHC.Generics.:+: ((GHC.Generics.C1
                                                                       ('GHC.Generics.MetaCons
                                                                          "GL000242P1"
                                                                          'GHC.Generics.PrefixI
                                                                          'GHC.Types.False)
                                                                       GHC.Generics.U1
                                                                     GHC.Generics.:+: (GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000230P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000237P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1))
                                                                    GHC.Generics.:+: ((GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000233P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000204P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1)
                                                                                      GHC.Generics.:+: (GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000198P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1
                                                                                                        GHC.Generics.:+: GHC.Generics.C1
                                                                                                                           ('GHC.Generics.MetaCons
                                                                                                                              "GL000208P1"
                                                                                                                              'GHC.Generics.PrefixI
                                                                                                                              'GHC.Types.False)
                                                                                                                           GHC.Generics.U1)))))
                               GHC.Generics.:+: ((((GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "GL000191P1"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1
                                                    GHC.Generics.:+: (GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "GL000227P1"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000228P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1))
                                                   GHC.Generics.:+: ((GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "GL000214P1"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000221P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1)
                                                                     GHC.Generics.:+: (GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000209P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000218P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1)))
                                                  GHC.Generics.:+: ((GHC.Generics.C1
                                                                       ('GHC.Generics.MetaCons
                                                                          "GL000220P1"
                                                                          'GHC.Generics.PrefixI
                                                                          'GHC.Types.False)
                                                                       GHC.Generics.U1
                                                                     GHC.Generics.:+: (GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000213P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000211P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1))
                                                                    GHC.Generics.:+: ((GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000199P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000217P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1)
                                                                                      GHC.Generics.:+: (GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000216P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1
                                                                                                        GHC.Generics.:+: GHC.Generics.C1
                                                                                                                           ('GHC.Generics.MetaCons
                                                                                                                              "GL000215P1"
                                                                                                                              'GHC.Generics.PrefixI
                                                                                                                              'GHC.Types.False)
                                                                                                                           GHC.Generics.U1))))
                                                 GHC.Generics.:+: (((GHC.Generics.C1
                                                                       ('GHC.Generics.MetaCons
                                                                          "GL000205P1"
                                                                          'GHC.Generics.PrefixI
                                                                          'GHC.Types.False)
                                                                       GHC.Generics.U1
                                                                     GHC.Generics.:+: (GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000219P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000224P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1))
                                                                    GHC.Generics.:+: ((GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000223P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000195P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1)
                                                                                      GHC.Generics.:+: (GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000212P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1
                                                                                                        GHC.Generics.:+: GHC.Generics.C1
                                                                                                                           ('GHC.Generics.MetaCons
                                                                                                                              "GL000222P1"
                                                                                                                              'GHC.Generics.PrefixI
                                                                                                                              'GHC.Types.False)
                                                                                                                           GHC.Generics.U1)))
                                                                   GHC.Generics.:+: ((GHC.Generics.C1
                                                                                        ('GHC.Generics.MetaCons
                                                                                           "GL000200P1"
                                                                                           'GHC.Generics.PrefixI
                                                                                           'GHC.Types.False)
                                                                                        GHC.Generics.U1
                                                                                      GHC.Generics.:+: (GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000193P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1
                                                                                                        GHC.Generics.:+: GHC.Generics.C1
                                                                                                                           ('GHC.Generics.MetaCons
                                                                                                                              "GL000194P1"
                                                                                                                              'GHC.Generics.PrefixI
                                                                                                                              'GHC.Types.False)
                                                                                                                           GHC.Generics.U1))
                                                                                     GHC.Generics.:+: ((GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000225P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1
                                                                                                        GHC.Generics.:+: GHC.Generics.C1
                                                                                                                           ('GHC.Generics.MetaCons
                                                                                                                              "GL000192P1"
                                                                                                                              'GHC.Generics.PrefixI
                                                                                                                              'GHC.Types.False)
                                                                                                                           GHC.Generics.U1)
                                                                                                       GHC.Generics.:+: (GHC.Generics.C1
                                                                                                                           ('GHC.Generics.MetaCons
                                                                                                                              "NC_007605"
                                                                                                                              'GHC.Generics.PrefixI
                                                                                                                              'GHC.Types.False)
                                                                                                                           GHC.Generics.U1
                                                                                                                         GHC.Generics.:+: GHC.Generics.C1
                                                                                                                                            ('GHC.Generics.MetaCons
                                                                                                                                               "NONE"
                                                                                                                                               'GHC.Generics.PrefixI
                                                                                                                                               'GHC.Types.False)
                                                                                                                                            GHC.Generics.U1)))))))
89d5e6903dd692204758cf1a8c1018da
  type SAM = (Lib.Header, Lib.Alignments)
4d89c2d39576093eca054c05b0242d08
  data SAMFlag
    = SAMFlag {pairedRead :: GHC.Types.Bool,
               mateMapped :: GHC.Types.Bool,
               notMapped :: GHC.Types.Bool,
               pairNotMapped :: GHC.Types.Bool,
               queryPlus :: GHC.Types.Bool,
               mateNeg :: GHC.Types.Bool,
               fstInPair :: GHC.Types.Bool,
               sndInPair :: GHC.Types.Bool,
               notPrimary :: GHC.Types.Bool,
               failedQC :: GHC.Types.Bool,
               dupRead :: GHC.Types.Bool,
               intflag :: GHC.Types.Int}
3b7e185ad71459af8d347e25da054651
  data UChr
    = C1
    | C2
    | C3
    | C4
    | C5
    | C6
    | C7
    | C8
    | C9
    | C10
    | C11
    | C12
    | C13
    | C14
    | C15
    | C16
    | C17
    | C18
    | C19
    | C20
    | C21
    | C22
    | CX
    | CY
    | CMT
    | Chr1
    | Chr2
    | Chr3
    | Chr4
    | Chr5
    | Chr6
    | Chr7
    | Chr8
    | Chr9
    | Chr10
    | Chr11
    | Chr12
    | Chr13
    | Chr14
    | Chr15
    | Chr16
    | Chr17
    | Chr18
    | Chr19
    | Chr20
    | Chr21
    | Chr22
    | ChrX
    | ChrY
    | ChrM
    | GL000207P1
    | GL000226P1
    | GL000229P1
    | GL000231P1
    | GL000210P1
    | GL000239P1
    | GL000235P1
    | GL000201P1
    | GL000247P1
    | GL000245P1
    | GL000197P1
    | GL000203P1
    | GL000246P1
    | GL000249P1
    | GL000196P1
    | GL000248P1
    | GL000244P1
    | GL000238P1
    | GL000202P1
    | GL000234P1
    | GL000232P1
    | GL000206P1
    | GL000240P1
    | GL000236P1
    | GL000241P1
    | GL000243P1
    | GL000242P1
    | GL000230P1
    | GL000237P1
    | GL000233P1
    | GL000204P1
    | GL000198P1
    | GL000208P1
    | GL000191P1
    | GL000227P1
    | GL000228P1
    | GL000214P1
    | GL000221P1
    | GL000209P1
    | GL000218P1
    | GL000220P1
    | GL000213P1
    | GL000211P1
    | GL000199P1
    | GL000217P1
    | GL000216P1
    | GL000215P1
    | GL000205P1
    | GL000219P1
    | GL000224P1
    | GL000223P1
    | GL000195P1
    | GL000212P1
    | GL000222P1
    | GL000200P1
    | GL000193P1
    | GL000194P1
    | GL000225P1
    | GL000192P1
    | NC_007605
    | NONE
a7f851373730ec4a7c0da944d6f9e8e7
  addprimerints ::
    Lib.CMap -> Lib.CMap -> Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,1*U><L,1*U><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,A,A,A,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Lib.CMap) (w1 :: Lib.CMap) (w2 :: Lib.AlignedRead) ->
                 case w2 of ww { Lib.AlignedRead ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ->
                 Lib.$waddprimerints
                   w
                   w1
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   ww23
                   ww24
                   ww25
                   ww26
                   ww27
                   ww28
                   ww29
                   ww30 }) -}
95537d19fab69e5d491e69cd03f2e087
  adjustcrds ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> [(GHC.Integer.Type.Integer,
         Data.ByteString.Internal.ByteString)]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (cigs :: [(GHC.Integer.Type.Integer,
                              Data.ByteString.Internal.ByteString)]) ->
                 case cigs of wild {
                   []
                   -> GHC.Types.[]
                        @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                   : x xs
                   -> GHC.Types.:
                        @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                        x
                        (case GHC.List.$wscanlGo
                                @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                                @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                                @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                                @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                                Lib.shiftcrds
                                x
                                xs of ww { (#,#) ww1 ww2 ->
                         ww2 }) }) -}
0dab9d2f5c76ec3a4035375dcf36bbd7
  alncount :: Lib.MidFamily -> GHC.Integer.Type.Integer
  RecSel Left Lib.MidFamily
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSLLLL),1*U(A,A,A,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MidFamily) ->
                 case ds6 of wild { Lib.MidFamily ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds12 }) -}
08ce56e6d221140049012e4b7ea1b555
  alnend :: Lib.MidFamily -> GHC.Integer.Type.Integer
  RecSel Left Lib.MidFamily
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLL),1*U(A,A,1*U,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MidFamily) ->
                 case ds6 of wild { Lib.MidFamily ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds9 }) -}
4215886d8747f80f00ef6178c6b638c2
  alnparser ::
    Data.Attoparsec.ByteString.Internal.Parser Lib.AlignedRead
  {- Arity: 5,
     Strictness: <S(SLSSLL),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.alnparser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <Lib.AlignedRead>_R)) -}
66b1ddf9358280b7cf96881510ef7560
  alnparser1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.AlignedRead
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSLL),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.AlignedRead
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$walnparser @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
078cd4f8c1807fc22fe11b9e8679b672
  alns :: Lib.MidFamily -> [Lib.AlignedRead]
  RecSel Left Lib.MidFamily
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLLLLL),1*U(A,A,A,A,1*U,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MidFamily) ->
                 case ds6 of wild { Lib.MidFamily ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds11 }) -}
7e58c10b800c87c95bca53a7e6b8a14c
  alnstart :: Lib.MidFamily -> GHC.Integer.Type.Integer
  RecSel Left Lib.MidFamily
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLLLLL),1*U(A,1*U,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MidFamily) ->
                 case ds6 of wild { Lib.MidFamily ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds8 }) -}
f3f0e5c7d44dd904d90567f3e5f032b4
  basequal :: Lib.AlignedRead -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLSLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 ds21 }) -}
1708257ce2bf6f7dd3982e0dfe94ec48
  bedchr :: Lib.BedRecord -> Lib.UChr
  RecSel Left Lib.BedRecord
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLLL),1*U(1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.BedRecord) ->
                 case ds6 of wild { Lib.BedRecord ds7 ds8 ds9 ds10 -> ds7 }) -}
b5c16aef03eadecbe0f776c7e9ca8c8c
  bedend :: Lib.BedRecord -> GHC.Integer.Type.Integer
  RecSel Left Lib.BedRecord
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLSL),1*U(A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.BedRecord) ->
                 case ds6 of wild { Lib.BedRecord ds7 ds8 ds9 ds10 -> ds9 }) -}
92e4aee3156716e6533c78fc28fa904f
  bedmaplookup ::
    GHC.Integer.Type.Integer
    -> Data.IntMap.Base.IntMap Lib.BedRecord
    -> GHC.Base.Maybe Lib.BedRecord
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (pos1 :: GHC.Integer.Type.Integer)
                   (bmap :: Data.IntMap.Base.IntMap Lib.BedRecord) ->
                 case GHC.Integer.Type.integerToInt pos1 of wild { DEFAULT ->
                 Data.IntMap.Base.$wlookup @ Lib.BedRecord wild bmap }) -}
201efbe8aeed7160719b406910191b62
  bedname :: Lib.BedRecord -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.BedRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLS),1*U(A,A,A,1*U(U,U,U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.BedRecord) ->
                 case ds6 of wild { Lib.BedRecord ds7 ds8 ds9 ds10 -> ds10 }) -}
e53d3030b03a82d2ec476d01f4300a55
  bedrecparser ::
    Data.Attoparsec.ByteString.Internal.Parser Lib.BedRecord
  {- Arity: 5,
     Strictness: <S(LLLSLL),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.bedrecparser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <Lib.BedRecord>_R)) -}
4fcae6ffc385d28144fb7a43b26b3b65
  bedrecparser1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.BedRecord
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(LLLSLL),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.BedRecord
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wbedrecparser @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
fa54ed823cfe5800916f72fb5e6aabc3
  bedstart :: Lib.BedRecord -> GHC.Integer.Type.Integer
  RecSel Left Lib.BedRecord
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSLL),1*U(A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.BedRecord) ->
                 case ds6 of wild { Lib.BedRecord ds7 ds8 ds9 ds10 -> ds8 }) -}
2df91e0cfbc885b482b70bb99c37a84a
  calculateTrimStats ::
    Data.Conduit.Internal.Conduit.ConduitM
      Lib.AlignedRead
      c
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      GHC.Integer.Type.Integer
  {- Arity: 1, Strictness: <L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Lib.calculateTrimStats1
                  `cast`
                (forall (c1 :: <*>_N).
                 Sym (Data.Conduit.Internal.Conduit.N:ConduitM[0]
                          <Lib.AlignedRead>_N
                          <c1>_N
                          <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                          <GHC.Integer.Type.Integer>_R)) -}
5ddc4bc2efcc8cced7cb028b8d3b6da7
  calculateTrimStats1 ::
    (GHC.Integer.Type.Integer
     -> Data.Conduit.Internal.Pipe.Pipe
          Lib.AlignedRead
          Lib.AlignedRead
          c
          ()
          (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
          b1)
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         c
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         b1
  {- Arity: 1, Strictness: <L,C(U)> -}
fe6ec7c601cabd2d00b37f27719ee01a
  checkChromNameMatchStatus ::
    Lib.Header -> Lib.BED -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,U><S(LSL),1*U(U,U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.checkChromNameMatchStatus1
                  `cast`
                (<Lib.Header>_R
                 ->_R <Lib.BED>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
2d5505a10b3d6977cee13296d5b5fbc7
  checkChromNameMatchStatus1 ::
    Lib.Header
    -> Lib.BED
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U><S(LSL),1*U(U,U,U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Lib.Header)
                   (w1 :: Lib.BED)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w1 of ww { Data.Vector.Vector ww1 ww2 ww3 ->
                 Lib.$wcheckChromNameMatchStatus w ww1 ww2 ww3 w2 }) -}
ad013da5e146409c45b007ef878b59f4
  checkCigarSeqlen :: Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 1,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLSLLL),1*U(U,U,U,U,U,U,U(U,U,U,U),U(U,U,U,U),U,U,U,U,U,U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.AlignedRead) ->
                 case w of ww { Lib.AlignedRead ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ->
                 case ww27 of wild {
                   GHC.Types.False
                   -> case Lib.safemapcig ww8 of wild1 {
                        GHC.Base.Nothing -> Lib.defaultAlignment
                        GHC.Base.Just a1
                        -> case ww7 of ww31 { Data.ByteString.Internal.PS ww32 ww33 ww34 ww35 ->
                           case Lib.$wcigseqlenHdrPassTest
                                  ww32
                                  ww33
                                  ww34
                                  ww35
                                  ww8
                                  ww14 of wild2 {
                             GHC.Types.False -> Lib.defaultAlignment
                             GHC.Types.True
                             -> Lib.AlignedRead
                                  ww1
                                  ww2
                                  ww3
                                  ww4
                                  ww5
                                  ww6
                                  ww31
                                  ww8
                                  ww9
                                  ww10
                                  ww11
                                  ww12
                                  ww13
                                  ww14
                                  ww15
                                  ww16
                                  ww17
                                  ww18
                                  ww19
                                  ww20
                                  ww21
                                  ww22
                                  ww23
                                  ww24
                                  ww25
                                  ww26
                                  GHC.Types.False
                                  ww28
                                  ww29
                                  ww30 } } }
                   GHC.Types.True
                   -> Lib.AlignedRead
                        ww1
                        ww2
                        ww3
                        ww4
                        ww5
                        ww6
                        ww7
                        ww8
                        ww9
                        ww10
                        ww11
                        ww12
                        ww13
                        ww14
                        ww15
                        ww16
                        ww17
                        ww18
                        ww19
                        ww20
                        ww21
                        ww22
                        ww23
                        ww24
                        ww25
                        ww26
                        GHC.Types.True
                        ww28
                        ww29
                        ww30 } }) -}
de10953e3c83189ef0865134303b0e70
  checkCigarSeqlen1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
eaabe5557c04a885072aee230ef5dad5
  checkCigarSeqlen2 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "*"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
6f940046d42276b1a99a5e35a66a4e33
  checkCigarSeqlen_gl ::
    [GHC.Types.Char]
    -> GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
b4f3d91b55af54f86dd46a5edc849a2d
  checkCigarSeqlen_go ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer
  {- Arity: 1, Strictness: <S,1*U> -}
b01c4d06e645a6de463b83312317b905
  checkCigarSeqlen_go1 ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer
  {- Arity: 1, Strictness: <S,1*U> -}
4017043ed26b6f83897a255f767f2add
  checkcigseqlen :: Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 1,
     Strictness: <S(LLLLLLLLLLLLLS(SLSS)LLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.AlignedRead) ->
                 case w of ww { Lib.AlignedRead ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ->
                 case ww14 of ww31 { Data.ByteString.Internal.PS ww32 ww33 ww34 ww35 ->
                 Lib.$wcheckcigseqlen ww8 ww32 ww33 ww34 ww35 } }) -}
5906f12cd45cae464148b54822d5db64
  checkcigseqlen1 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "*"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
580db370d8efdf0bf4dd32713583ea0e
  checkcigseqlen2 :: Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 1,
     Strictness: <S(LLLLLLS(LLLS)LLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,1*U(U,U,U,U),1*U(U,U,U,U),A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.AlignedRead) ->
                 case w of ww { Lib.AlignedRead ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ->
                 case ww7 of ww31 { Data.ByteString.Internal.PS ww32 ww33 ww34 ww35 ->
                 Lib.$wcheckcigseqlen2 ww32 ww33 ww34 ww35 ww8 ww14 } }) -}
24f0b6e16804a2aef18dd9b3fee40778
  checkcigseqlen2_gl ::
    [GHC.Types.Char]
    -> GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
a56034ea9b04886f7f046a7105cdd829
  checkcigseqlen2_go ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer
  {- Arity: 1, Strictness: <S,1*U> -}
fed21737364398ef43273183cea14de0
  checkcigseqlen_gl ::
    [GHC.Types.Char]
    -> GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
db6f3ac591ace6cfa8e37076695e8220
  checkcigseqlen_go ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer
  {- Arity: 1, Strictness: <S,1*U> -}
7d19afb708821614e327b3f53226e314
  checknonzeroCigMatch :: Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLSLLL),1*U(A,A,A,A,A,A,A,1*U(U,U,U,1*U),A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,1*U,A,A,A)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.AlignedRead) ->
                 case w of ww { Lib.AlignedRead ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ->
                 Lib.$wchecknonzeroCigMatch ww8 ww19 ww27 }) -}
6a86d63feb05bfb3ecb7db8c0d9cccea
  checkpos :: GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer
  {- Arity: 1, HasNoCafRefs, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (i :: GHC.Integer.Type.Integer) ->
                 case GHC.Integer.Type.ltInteger#
                        i
                        Lib.checkCigarSeqlen1 of wild { DEFAULT ->
                 case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild of wild1 {
                   GHC.Types.False -> i
                   GHC.Types.True -> Lib.checkCigarSeqlen1 } }) -}
1602214acbb0020a46c9d4a5d1ce939d
  chrom :: Lib.MidFamily -> Lib.UChr
  RecSel Left Lib.MidFamily
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLL),1*U(1*U,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MidFamily) ->
                 case ds6 of wild { Lib.MidFamily ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds7 }) -}
f8fdddc008d320453d202c35cc73c748
  cigar :: Lib.AlignedRead -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLSLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 ds13 }) -}
a96c6a6ed4a4eab8babf6c5a161e5a3b
  cigarP ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString
      [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.cigarP1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <[(GHC.Integer.Type.Integer,
                             Data.ByteString.Internal.ByteString)]>_R)) -}
20c7ed0ae11c32500c6c1625a0ed58f9
  cigarP1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wcigarP @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
19ff8a33961e14124f442944ee3f3607
  cigmap :: Lib.AlignedRead -> Lib.CigarMap
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLSLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 ds15 }) -}
7d31148b9fe11637dc786a0c8d6bbbaf
  cigseqlenHdrPassTest :: Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 1,
     Strictness: <S(LLLLLLS(LLLS)LLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,1*U(U,U,U,U),1*U(U,U,U,U),A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.AlignedRead) ->
                 case w of ww { Lib.AlignedRead ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ->
                 case ww7 of ww31 { Data.ByteString.Internal.PS ww32 ww33 ww34 ww35 ->
                 Lib.$wcigseqlenHdrPassTest ww32 ww33 ww34 ww35 ww8 ww14 } }) -}
b8d1876981a18fd7c8de5b852db5359f
  contractcigar ::
    Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
  {- Arity: 1, Strictness: <S(SLSS),1*U(U,U,U,U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.ByteString.Internal.ByteString) ->
                 case w of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wcontractcigar ww1 ww2 ww3 ww4 }) -}
3a0e8f75f073bdade0715f31a138d63c
  contractcigar1 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "*"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
0be20ed6ce2dc56dc57e460501bd8ad1
  contractcigar2 ::
    Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
  {- Arity: 1, Strictness: <S(SLSS),1*U(U,U,U,U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.ByteString.Internal.ByteString) ->
                 case w of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wlvl ww1 ww2 ww3 ww4 }) -}
3cf9ff8fea337418e4d63a0166872817
  contractcigar3 :: GHC.Word.Word8
  {- Strictness: x -}
785a948b9f7af6bfa434d79e2a6d1b5e
  contractcigar4 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "*"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
e838e334c14d69c8357cebf683c0b1d9
  countDs ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> GHC.Integer.Type.Integer
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (cs :: [(GHC.Integer.Type.Integer,
                            Data.ByteString.Internal.ByteString)]) ->
                 Lib.countDs_gl
                   (GHC.List.filter
                      @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                      Lib.countDs1
                      cs)
                   Data.OldList.genericLength1) -}
a8c79a44cf65d7375f9bf2ac197ac736
  countDs1 ::
    (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
    -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S(LS(LLLS)),1*U(A,1*U(U,U,U,U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: (GHC.Integer.Type.Integer,
                          Data.ByteString.Internal.ByteString)) ->
                 case w of ww { (,) ww1 ww2 ->
                 case ww2 of ww3 { Data.ByteString.Internal.PS ww4 ww5 ww6 ww7 ->
                 Lib.$wlvl1 ww4 ww5 ww6 ww7 } }) -}
5a92bc5f4413bdb37968b180a7c3a1db
  countDs2 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "D"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
a62259e98609fbe58face33f9f05049f
  countDs_gl ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
917092b29097c9b9b963128cb0fb7549
  defaultAlignment :: Lib.AlignedRead
  {- Unfolding: (Lib.AlignedRead
                   Lib.defaultAlignment11
                   Lib.defaultAlignment10
                   Lib.NONE
                   Lib.checkCigarSeqlen1
                   Lib.checkCigarSeqlen1
                   Lib.checkCigarSeqlen1
                   Lib.defaultAlignment9
                   Lib.defaultAlignment8
                   Lib.defaultAlignment5
                   Lib.defaultAlignment2
                   Lib.defaultAlignment1
                   Lib.checkCigarSeqlen1
                   Lib.checkCigarSeqlen1
                   Lib.defaultAlignment9
                   Lib.defaultAlignment9
                   Lib.defaultAlignment9
                   Lib.defaultAlignment9
                   GHC.Types.False
                   GHC.Types.False
                   (GHC.Types.[] @ Lib.BedRecord)
                   (GHC.Types.[] @ Lib.BedRecord)
                   GHC.Types.False
                   GHC.Types.False
                   Lib.checkCigarSeqlen1
                   Lib.checkCigarSeqlen1
                   (GHC.Types.[] @ Data.ByteString.Internal.ByteString)
                   GHC.Types.False
                   Lib.defaultAlignment9
                   Lib.defaultAlignment9
                   Lib.defaultBed) -}
a63de0c5f2a7efaba045e670a46e5a6e
  defaultAlignment1 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "*"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
88a00e75f8558a1681814707c87eeccf
  defaultAlignment10 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
cf02f24d43a18565c8d158aafe0613ab
  defaultAlignment11 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "NONE"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
5e45cc2c30e207de8c374413eda527a0
  defaultAlignment2 ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                   Lib.defaultAlignment3
                   (GHC.Types.[]
                      @ (GHC.Integer.Type.Integer,
                         Data.ByteString.Internal.ByteString))) -}
8c19ffde9dd2eceed9bc3a7164538e22
  defaultAlignment3 ::
    (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
  {- Strictness: m,
     Unfolding: ((Lib.checkCigarSeqlen1, Lib.defaultAlignment4)) -}
35332cbb35e4e86337d2e8f116d1f818
  defaultAlignment4 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "*"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
4de46ef553e5bd3c54be10cdf26a1cb2
  defaultAlignment5 ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                   Lib.defaultAlignment6
                   (GHC.Types.[]
                      @ (GHC.Integer.Type.Integer,
                         Data.ByteString.Internal.ByteString))) -}
8998650c6adf404bdeb2e42b161ca3d1
  defaultAlignment6 ::
    (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
  {- Strictness: m,
     Unfolding: ((Lib.checkCigarSeqlen1, Lib.defaultAlignment7)) -}
631cc4e1a0e53c3aedaf77670089bcab
  defaultAlignment7 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "*"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
2995109188e72e79a187887686cd5b6e
  defaultAlignment8 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "*"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
f2a82015b56bf9073b5c9c5092c21b55
  defaultAlignment9 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.List.$wlenAcc
                        @ GHC.Types.Char
                        (GHC.Types.[] @ GHC.Types.Char)
                        0# of ww2 { DEFAULT ->
                 Data.ByteString.Internal.$wunsafePackLenChars
                   ww2
                   (GHC.Types.[] @ GHC.Types.Char) }) -}
670df02d74e622563507c22052bb46ae
  defaultBed :: Lib.BedRecord
  {- Strictness: m,
     Unfolding: (Lib.BedRecord
                   Lib.NONE
                   Lib.checkCigarSeqlen1
                   Lib.checkCigarSeqlen1
                   Lib.defaultBed1) -}
bfd444f5ccba84f2f69b7bf543f0cfdc
  defaultBed1 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "DEFAULT"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
b789a5eaa82e1ac33304ef9331e2ba8a
  defaultMasterRec :: Lib.MasterRecord
  {- Unfolding: (Lib.MasterRecord
                   Lib.NONE
                   Lib.checkCigarSeqlen1
                   Lib.checkCigarSeqlen1
                   Lib.defaultMasterRec5
                   Lib.checkCigarSeqlen1
                   Lib.checkCigarSeqlen1
                   Lib.checkCigarSeqlen1
                   Lib.checkCigarSeqlen1
                   Lib.defaultMasterRec4
                   Lib.defaultMasterRec3
                   Lib.defaultMasterRec2
                   Lib.defaultMasterRec1) -}
e917997b7e8ae8c31432b57de156120a
  defaultMasterRec1 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "EMPTY"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
f70bd53de4635b59c84558889e3f5d7d
  defaultMasterRec2 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "EMPTY"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
e5f6a1ba6ff27e080ebedc9c51f02bd0
  defaultMasterRec3 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "EMPTY"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
17a7e750a444b262e716e611e886f64d
  defaultMasterRec4 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "EMPTY"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
a526ca0d527761dcc03ecb416f3a19b4
  defaultMasterRec5 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "EMPTY"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
80e208a6db682c5f0207a1f54ea5fb74
  defaultMidFam :: Lib.MidFamily
  {- Strictness: m,
     Unfolding: (Lib.MidFamily
                   Lib.NONE
                   Lib.checkCigarSeqlen1
                   Lib.checkCigarSeqlen1
                   Lib.defaultMidFam1
                   (GHC.Types.[] @ Lib.AlignedRead)
                   Lib.checkCigarSeqlen1
                   Lib.checkCigarSeqlen1
                   Lib.checkCigarSeqlen1
                   Lib.checkCigarSeqlen1
                   Lib.defaultBed) -}
c3c9f69d443d3fd98b1a73ac7288fc3a
  defaultMidFam1 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "EMPTY"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
16fe8344dc381202aab71ee33a260896
  dupRead :: Lib.SAMFlag -> GHC.Types.Bool
  RecSel Left Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLSL),1*U(A,A,A,A,A,A,A,A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.SAMFlag) ->
                 case ds6 of wild { Lib.SAMFlag ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds17 }) -}
bf356493d0f5309d7d6c8ae7c045399b
  endpos :: Lib.AlignedRead -> GHC.Integer.Type.Integer
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 ds11 }) -}
1cb455c61767a589fc62f5bf936e98a8
  expandcigar :: Lib.CigarMap -> Data.ByteString.Internal.ByteString
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (cmap :: Lib.CigarMap) ->
                 Data.ByteString.Internal.$fMonoidByteString_$cmconcat
                   (Lib.expandcigar_go cmap)) -}
bfbe48cfc133ce753bee6f7c1044c4b7
  expandcigar1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
577a32fdeab28a5052c69781cc1a04cd
  expandcigar2 ::
    Lib.CigarMap
    -> [(GHC.Integer.Type.Integer,
         Data.ByteString.Internal.ByteString)]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (cmap :: Lib.CigarMap) ->
                 case Data.ByteString.Internal.$fMonoidByteString_$cmconcat
                        (Lib.expandcigar_go
                           cmap) of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 let {
                   ops :: [Data.ByteString.Internal.ByteString]
                   = GHC.Base.map
                       @ GHC.Types.Char
                       @ Data.ByteString.Internal.ByteString
                       Data.ByteString.Char8.singleton
                       (Data.ByteString.Internal.$wunpackAppendCharsLazy
                          ww1
                          ww2
                          ww3
                          ww4
                          (GHC.Types.[] @ GHC.Types.Char))
                 } in
                 let {
                   lim :: GHC.Integer.Type.Integer
                   = Data.OldList.strictGenericLength
                       @ GHC.Integer.Type.Integer
                       @ Data.ByteString.Internal.ByteString
                       GHC.Num.$fNumInteger
                       ops
                 } in
                 letrec {
                   go11 :: GHC.Integer.Type.Integer
                           -> [Data.ByteString.Internal.ByteString]
                           -> [(GHC.Integer.Type.Integer,
                                Data.ByteString.Internal.ByteString)]
                     {- Arity: 2, Strictness: <S,U><L,1*U> -}
                   = \ (x :: GHC.Integer.Type.Integer)
                       (eta :: [Data.ByteString.Internal.ByteString]) ->
                     case GHC.Integer.Type.gtInteger# x lim of wild { DEFAULT ->
                     case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild of wild1 {
                       GHC.Types.False
                       -> case eta of wild2 {
                            []
                            -> GHC.Types.[]
                                 @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                            : y ys
                            -> GHC.Types.:
                                 @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                                 (x, y)
                                 (go11
                                    (GHC.Integer.Type.plusInteger x GHC.Enum.$fEnumInteger1)
                                    ys) }
                       GHC.Types.True
                       -> GHC.Types.[]
                            @ (GHC.Integer.Type.Integer,
                               Data.ByteString.Internal.ByteString) } }
                 } in
                 go11 Lib.expandcigar1 ops }) -}
fbfa61014fcccd2463e75fd1143ffc0e
  expandcigar_go ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> [Data.ByteString.Internal.ByteString]
  {- Arity: 1, Strictness: <S,1*U> -}
d510b86d5842ac5ea196016ac2912ff3
  exrights :: Data.Either.Either a a1 -> a1
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a @ a1 (x :: Data.Either.Either a a1) ->
                 case Data.Either.rights1
                        @ a
                        @ a1
                        (GHC.Types.:
                           @ (Data.Either.Either a a1)
                           x
                           (GHC.Types.[] @ (Data.Either.Either a a1))) of wild {
                   [] -> GHC.List.badHead @ a1 : x1 ds6 -> x1 }) -}
4775cfac671dc54eda2e14aa3bc1a55f
  exrights2 :: [a] -> GHC.Base.Maybe a
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (xs :: [a]) ->
                 case GHC.List.$wlenAcc @ a xs 0# of ww2 {
                   DEFAULT -> GHC.Base.Just @ a (GHC.List.head @ a xs)
                   0# -> GHC.Base.Nothing @ a }) -}
f13bdaa3dec872b8526042eeb41ed84d
  failedQC :: Lib.SAMFlag -> GHC.Types.Bool
  RecSel Left Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLSLL),1*U(A,A,A,A,A,A,A,A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.SAMFlag) ->
                 case ds6 of wild { Lib.SAMFlag ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds16 }) -}
5bc99d74cef454fc1e76bd5fae4f07f4
  filtpadassoc ::
    [(GHC.Types.Int, Data.ByteString.Internal.ByteString)]
    -> [(GHC.Types.Int, Data.ByteString.Internal.ByteString)]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (asclist :: [(GHC.Types.Int,
                                 Data.ByteString.Internal.ByteString)]) ->
                 GHC.Base.build
                   @ (GHC.Types.Int, Data.ByteString.Internal.ByteString)
                   (\ @ b
                      (c1 :: (GHC.Types.Int, Data.ByteString.Internal.ByteString)
                             -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ (GHC.Types.Int, Data.ByteString.Internal.ByteString)
                      @ b
                      (GHC.List.filterFB
                         @ (GHC.Types.Int, Data.ByteString.Internal.ByteString)
                         @ b
                         c1
                         Lib.filtpadassoc1)
                      n
                      asclist)) -}
137e2a4d69f0ff38f1cc25f3d3c54ede
  filtpadassoc1 ::
    (GHC.Types.Int, Data.ByteString.Internal.ByteString)
    -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S(LS(LLLS)),1*U(A,1*U(U,U,U,U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: (GHC.Types.Int, Data.ByteString.Internal.ByteString)) ->
                 case w of ww { (,) ww1 ww2 ->
                 case ww2 of ww3 { Data.ByteString.Internal.PS ww4 ww5 ww6 ww7 ->
                 Lib.$wlvl2 ww4 ww5 ww6 ww7 } }) -}
00246ef40c05ad8446419b2ce281b9ba
  filtpadassoc2 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "D"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
6c6edc4a6339a8a14bb425fbcbde3865
  filtpadcmap :: Lib.CigarMap -> Lib.CigarMap
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (cmap :: Lib.CigarMap) ->
                 GHC.Base.build
                   @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                   (\ @ b
                      (c1 :: (GHC.Integer.Type.Integer,
                              Data.ByteString.Internal.ByteString)
                             -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                      @ b
                      (GHC.List.filterFB
                         @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                         @ b
                         c1
                         Lib.filtpadcmap1)
                      n
                      cmap)) -}
453af70475e1a107c789a32bfde30a02
  filtpadcmap1 ::
    (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
    -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S(LS(LLLS)),1*U(A,1*U(U,U,U,U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: (GHC.Integer.Type.Integer,
                          Data.ByteString.Internal.ByteString)) ->
                 case w of ww { (,) ww1 ww2 ->
                 case ww2 of ww3 { Data.ByteString.Internal.PS ww4 ww5 ww6 ww7 ->
                 Lib.$wlvl3 ww4 ww5 ww6 ww7 } }) -}
a3ffb08c5096fab5d843dd5e1fa20c7e
  filtpadcmap2 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "D"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
ac314cf429ae39fda555acc4e9cd1b04
  fint :: Lib.AlignedRead -> [Lib.BedRecord]
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLSLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 ds26 }) -}
68144c8ff0f2e40f0cde78571262cfaf
  flag :: Lib.AlignedRead -> GHC.Types.Int
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 ds8 }) -}
c7e776107cb9fdf85b87e02f8dee5028
  fstInPair :: Lib.SAMFlag -> GHC.Types.Bool
  RecSel Left Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLSLLLLL),1*U(A,A,A,A,A,A,1*U,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.SAMFlag) ->
                 case ds6 of wild { Lib.SAMFlag ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds13 }) -}
723b8c2e482ad849b11233b7227aa4d7
  getAlignedLength ::
    Data.ByteString.Internal.ByteString -> GHC.Integer.Type.Integer
  {- Arity: 1, Strictness: <L,1*U(U,U,U,U)>,
     Unfolding: (\ (cigcol :: Data.ByteString.Internal.ByteString) ->
                 case Data.Either.rights1
                        @ GHC.Base.String
                        @ [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                        (GHC.Types.:
                           @ (Data.Either.Either
                                GHC.Base.String
                                [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)])
                           (case cigcol of wild { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                            case Lib.$wparseCigar
                                   @ [(GHC.Integer.Type.Integer,
                                       Data.ByteString.Internal.ByteString)]
                                   dt
                                   dt1
                                   dt2
                                   dt3
                                   dt3
                                   0#
                                   0#
                                   Data.Attoparsec.Internal.Types.Complete
                                   (Data.Attoparsec.ByteString.Internal.failK
                                      @ [(GHC.Integer.Type.Integer,
                                          Data.ByteString.Internal.ByteString)])
                                     `cast`
                                   (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                                    ->_R <Data.Attoparsec.Internal.Types.Pos
                                          -> Data.Attoparsec.Internal.Types.More
                                          -> [GHC.Base.String]
                                          -> GHC.Base.String
                                          -> Data.Attoparsec.Internal.Types.IResult
                                               Data.ByteString.Internal.ByteString
                                               [(GHC.Integer.Type.Integer,
                                                 Data.ByteString.Internal.ByteString)]>_R)
                                   (Data.Attoparsec.ByteString.Internal.successK
                                      @ [(GHC.Integer.Type.Integer,
                                          Data.ByteString.Internal.ByteString)])
                                     `cast`
                                   (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                                    ->_R <Data.Attoparsec.Internal.Types.Pos
                                          -> Data.Attoparsec.Internal.Types.More
                                          -> [(GHC.Integer.Type.Integer,
                                               Data.ByteString.Internal.ByteString)]
                                          -> Data.Attoparsec.Internal.Types.IResult
                                               Data.ByteString.Internal.ByteString
                                               [(GHC.Integer.Type.Integer,
                                                 Data.ByteString.Internal.ByteString)]>_R) of wild1 {
                              Data.Attoparsec.Internal.Types.Fail ds6 ds7 err
                              -> case ds7 of wild2 {
                                   []
                                   -> Data.Either.Left
                                        @ GHC.Base.String
                                        @ [(GHC.Integer.Type.Integer,
                                            Data.ByteString.Internal.ByteString)]
                                        err
                                   : ipv ipv1
                                   -> Data.Either.Left
                                        @ [GHC.Types.Char]
                                        @ [(GHC.Integer.Type.Integer,
                                            Data.ByteString.Internal.ByteString)]
                                        (GHC.Base.++
                                           @ GHC.Types.Char
                                           (Data.OldList.intercalate_$spoly_go
                                              @ GHC.Types.Char
                                              ipv
                                              (Data.OldList.prependToAll
                                                 @ [GHC.Types.Char]
                                                 Lib.mapcig2
                                                 ipv1))
                                           (GHC.CString.unpackAppendCString# ": "# err)) }
                              Data.Attoparsec.Internal.Types.Partial ipv -> Lib.mapcig1
                              Data.Attoparsec.Internal.Types.Done ds6 a1
                              -> Data.Either.Right
                                   @ GHC.Base.String
                                   @ [(GHC.Integer.Type.Integer,
                                       Data.ByteString.Internal.ByteString)]
                                   a1 } })
                           (GHC.Types.[]
                              @ (Data.Either.Either
                                   GHC.Base.String
                                   [(GHC.Integer.Type.Integer,
                                     Data.ByteString.Internal.ByteString)]))) of wild {
                   [] -> case GHC.List.badHead ret_ty GHC.Integer.Type.Integer of {}
                   : x ds6 -> Lib.sumMatches x }) -}
e7722e76ffb07e19b54671f24a5f18bf
  getBED ::
    GHC.IO.FilePath -> GHC.Types.IO (Data.Vector.Vector Lib.BedRecord)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.getBED1
                  `cast`
                (<GHC.IO.FilePath>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Data.Vector.Vector Lib.BedRecord>_R)) -}
36533d72b7aa32890034336167774d85
  getBED1 ::
    GHC.IO.FilePath
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Vector.Vector Lib.BedRecord #)
  {- Arity: 2, Strictness: <L,U><S,U> -}
b4c391ec48ed6cadc194b4768d9e9470
  getFPrimerBEDfromMaster :: Lib.MasterRecord -> Lib.BedRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <L,U(1*U,A,A,A,1*U,1*U,A,A,1*U,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (mr :: Lib.MasterRecord) ->
                 Lib.BedRecord
                   (case mr of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds6 })
                   (case mr of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds10 })
                   (case mr of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds11 })
                   (case mr of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds14 })) -}
712be35fc1ff623a31bb4cb58a342ec4
  getMasterFile :: GHC.IO.FilePath -> GHC.Types.IO [Lib.MasterRecord]
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.getMasterFile1
                  `cast`
                (<GHC.IO.FilePath>_R
                 ->_R Sym (GHC.Types.N:IO[0] <[Lib.MasterRecord]>_R)) -}
e5a571e4cfd1aff5756ad71017ecae66
  getMasterFile1 ::
    GHC.IO.FilePath
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [Lib.MasterRecord] #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (fp :: GHC.IO.FilePath)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Data.ByteString.Char8.readFile1
                        fp
                        s of ds6 { (#,#) ipv ipv1 ->
                 let {
                   mlines :: [Data.ByteString.Internal.ByteString]
                   = case ipv1 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                     Data.ByteString.Char8.$wlines ww1 ww2 ww3 ww4 }
                 } in
                 let {
                   ds7 :: (Data.Map.Base.Map
                             GHC.Types.Int
                             (Data.Either.Either GHC.Base.String Lib.MasterRecord),
                           Data.Map.Base.Map
                             GHC.Types.Int
                             (Data.Either.Either GHC.Base.String Lib.MasterRecord))
                   = case Data.Map.Base.$wpoly_go2
                            @ (Data.Either.Either GHC.Base.String Lib.MasterRecord)
                            @ GHC.Types.Int
                            Lib.getMasterFile8
                            (Lib.$sfromList3
                               @ (Data.Either.Either GHC.Base.String Lib.MasterRecord)
                               (GHC.List.zip
                                  @ GHC.Types.Int
                                  @ (Data.Either.Either GHC.Base.String Lib.MasterRecord)
                                  Lib.getMasterFile7
                                  (GHC.Base.map
                                     @ Data.ByteString.Internal.ByteString
                                     @ (Data.Either.Either GHC.Base.String Lib.MasterRecord)
                                     Lib.getMasterFile5
                                     mlines))) of ww { (#,#) ww1 ww2 ->
                     (ww1, ww2) }
                 } in
                 let {
                   succs :: [Lib.MasterRecord]
                   = case ds7 of wild { (,) succm failm ->
                     Data.Either.rights1
                       @ GHC.Base.String
                       @ Lib.MasterRecord
                       (Lib.getMasterFile_go10
                          (GHC.Types.[]
                             @ (Data.Either.Either GHC.Base.String Lib.MasterRecord))
                          succm) }
                 } in
                 let {
                   failedlinenums :: [GHC.Types.Int]
                   = case ds7 of wild { (,) succm failm ->
                     Data.Map.Base.keys1
                       @ (Data.Either.Either GHC.Base.String Lib.MasterRecord)
                       @ GHC.Types.Int
                       (GHC.Types.[] @ GHC.Types.Int)
                       failm }
                 } in
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        (case GHC.List.$wlenAcc
                                @ Data.ByteString.Internal.ByteString
                                mlines
                                0# of ww2 { DEFAULT ->
                         case GHC.List.$wlenAcc
                                @ Lib.MasterRecord
                                succs
                                0# of ww1 { DEFAULT ->
                         Lib.$wparsechkMaster ww2 ww1 failedlinenums } })
                        GHC.Types.True
                        ipv of ds8 { (#,#) ipv2 ipv3 ->
                 case Data.ByteString.Char8.writeFile1
                        Lib.getMasterFile2
                        (Data.ByteString.Char8.unlines
                           (GHC.Base.map
                              @ GHC.Types.Int
                              @ Data.ByteString.Internal.ByteString
                              (GHC.List.!! @ Data.ByteString.Internal.ByteString mlines)
                              failedlinenums))
                        ipv2 of ds9 { (#,#) ipv4 ipv5 ->
                 (# ipv4, succs #) } } }) -}
64937eb683d9a05fc06629003bc5df22
  getMasterFile2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "masterparsefails.log"#) -}
80894f8a0088abd325e91acf50156529
  getMasterFile3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   " master records parsed successfully.\n"#) -}
fb078d5c6f251c92cd1fae7262480d01
  getMasterFile4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   " master records failed to parse (see masterparsefails.log)\n"#) -}
67a3be90ebd1b631d8f6226251ffc22a
  getMasterFile5 ::
    Data.ByteString.Internal.ByteString
    -> Data.Either.Either GHC.Base.String Lib.MasterRecord
  {- Arity: 1,
     Unfolding: (Data.Attoparsec.ByteString.Internal.parseOnly
                   @ Lib.MasterRecord
                   Lib.getMasterFile6
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                             <Data.ByteString.Internal.ByteString>_N <Lib.MasterRecord>_R))) -}
8d2f7bb5ec3b6b205934c8505d85f8e8
  getMasterFile6 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.MasterRecord
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(LLLSLL),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.MasterRecord
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wmasterparser @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
c618867baa7483228edbc6f64da63e1a
  getMasterFile7 :: [GHC.Types.Int]
  {- Unfolding: (GHC.Enum.eftInt 0# 9223372036854775807#) -}
96b6af27dea481cf6e5449ef10ace198
  getMasterFile8 ::
    GHC.Types.Int
    -> Data.Either.Either GHC.Base.String Lib.MasterRecord
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (\ (ds6 :: GHC.Types.Int)
                   (x :: Data.Either.Either
                           GHC.Base.String Lib.MasterRecord)[OneShot] ->
                 Data.Either.isRight @ GHC.Base.String @ Lib.MasterRecord x) -}
8dae61dd8d9fd77bb678c511788eb0f3
  getMasterFile_go10 ::
    [Data.Either.Either GHC.Base.String Lib.MasterRecord]
    -> Data.Map.Base.Map
         GHC.Types.Int (Data.Either.Either GHC.Base.String Lib.MasterRecord)
    -> [Data.Either.Either GHC.Base.String Lib.MasterRecord]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U><S,1*U> -}
81417cfd548e44fbca62f802c07ee441
  getNclips ::
    [Data.ByteString.Internal.ByteString]
    -> GHC.Types.Char -> [Data.ByteString.Internal.ByteString]
  {- Arity: 2, Strictness: <S,1*U><L,U(U)>,
     Unfolding: (\ (ciggrps :: [Data.ByteString.Internal.ByteString])
                   (cigchar :: GHC.Types.Char) ->
                 letrec {
                   $wgo39 :: GHC.Prim.Addr#
                             -> GHC.Prim.Addr#
                             -> GHC.Prim.Addr#
                             -> GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                   GHC.Ptr.Ptr GHC.Word.Word8 #)
                     {- Arity: 4, Strictness: <S,U><L,U><S,U><S,U>, Inline: [0] -}
                   = \ (ww :: GHC.Prim.Addr#)
                       (ww1 :: GHC.Prim.Addr#)
                       (ww2 :: GHC.Prim.Addr#)
                       (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.eqAddr# ww ww2) of wild1 {
                       GHC.Types.False
                       -> case GHC.Prim.readWord8OffAddr#
                                 @ GHC.Prim.RealWorld
                                 ww
                                 0#
                                 w of ds6 { (#,#) ipv ipv1 ->
                          case cigchar of wild2 { GHC.Types.C# y ->
                          case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.eqChar#
                                    (GHC.Prim.chr# (GHC.Prim.word2Int# ipv1))
                                    y) of wild3 {
                            GHC.Types.False -> $wgo39 (GHC.Prim.plusAddr# ww 1#) ww1 ww2 ipv
                            GHC.Types.True
                            -> case GHC.Prim.writeWord8OffAddr#
                                      @ GHC.Prim.RealWorld
                                      ww1
                                      0#
                                      ipv1
                                      ipv of s2 { DEFAULT ->
                               $wgo39
                                 (GHC.Prim.plusAddr# ww 1#)
                                 (GHC.Prim.plusAddr# ww1 1#)
                                 ww2
                                 s2 } } } }
                       GHC.Types.True -> (# w, GHC.Ptr.Ptr @ GHC.Word.Word8 ww1 #) }
                 } in
                 letrec {
                   go11 :: [Data.ByteString.Internal.ByteString]
                           -> [Data.ByteString.Internal.ByteString]
                     {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds6 :: [Data.ByteString.Internal.ByteString]) ->
                     case ds6 of wild {
                       [] -> GHC.Types.[] @ Data.ByteString.Internal.ByteString
                       : y ys
                       -> case y of wild1 { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                          case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.<=# dt3 0#) of wild2 {
                            GHC.Types.False
                            -> case GHC.Magic.runRW#
                                      @ 'GHC.Types.PtrRepLifted
                                      @ Data.ByteString.Internal.ByteString
                                      (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                       case GHC.Prim.noDuplicate# s of s' { DEFAULT ->
                                       case GHC.Prim.tagToEnum#
                                              @ GHC.Types.Bool
                                              (GHC.Prim.<# dt3 0#) of wild3 {
                                         GHC.Types.False
                                         -> case GHC.Prim.newPinnedByteArray#
                                                   @ GHC.Prim.RealWorld
                                                   dt3
                                                   s' of ds7 { (#,#) ipv ipv1 ->
                                            let {
                                              ipv2 :: GHC.Prim.Addr#
                                              = GHC.Prim.byteArrayContents#
                                                  ipv1
                                                    `cast`
                                                  (UnsafeCo representational (GHC.Prim.MutableByteArray#
                                                                                GHC.Prim.RealWorld) GHC.Prim.ByteArray#)
                                            } in
                                            case $wgo39
                                                   (GHC.Prim.plusAddr# dt dt2)
                                                   ipv2
                                                   (GHC.Prim.plusAddr# dt (GHC.Prim.+# dt2 dt3))
                                                   ipv of ds8 { (#,#) ipv3 ipv4 ->
                                            case ipv4 of wild4 { GHC.Ptr.Ptr a1 ->
                                            case GHC.Prim.touch#
                                                   @ 'GHC.Types.PtrRepLifted
                                                   @ GHC.ForeignPtr.ForeignPtrContents
                                                   dt1
                                                   ipv3 of s'1 { DEFAULT ->
                                            let {
                                              ipv5 :: GHC.Prim.Int# = GHC.Prim.minusAddr# a1 ipv2
                                            } in
                                            let {
                                              ipv6 :: GHC.ForeignPtr.ForeignPtrContents
                                              = GHC.ForeignPtr.PlainPtr ipv1
                                            } in
                                            case GHC.Prim.tagToEnum#
                                                   @ GHC.Types.Bool
                                                   (GHC.Prim.>=# ipv5 dt3) of wild5 {
                                              GHC.Types.False
                                              -> case GHC.Prim.tagToEnum#
                                                        @ GHC.Types.Bool
                                                        (GHC.Prim.<# ipv5 0#) of wild6 {
                                                   GHC.Types.False
                                                   -> case GHC.Prim.newPinnedByteArray#
                                                             @ GHC.Prim.RealWorld
                                                             ipv5
                                                             s'1 of ds9 { (#,#) ipv7 ipv8 ->
                                                      let {
                                                        ipv9 :: GHC.Prim.Addr#
                                                        = GHC.Prim.byteArrayContents#
                                                            ipv8
                                                              `cast`
                                                            (UnsafeCo representational (GHC.Prim.MutableByteArray#
                                                                                          GHC.Prim.RealWorld) GHC.Prim.ByteArray#)
                                                      } in
                                                      case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 memcpy GHC.Prim.Addr#
                                                                                                                       -> GHC.Prim.Addr#
                                                                                                                       -> GHC.Prim.Word#
                                                                                                                       -> GHC.Prim.State#
                                                                                                                            GHC.Prim.RealWorld
                                                                                                                       -> (# GHC.Prim.State#
                                                                                                                               GHC.Prim.RealWorld,
                                                                                                                             GHC.Prim.Addr# #)}
                                                             ipv9
                                                             ipv2
                                                             (GHC.Prim.int2Word# ipv5)
                                                             ipv7 of wild7 { (#,#) ds10 ds11 ->
                                                      let {
                                                        ipv10 :: GHC.ForeignPtr.ForeignPtrContents
                                                        = GHC.ForeignPtr.PlainPtr ipv8
                                                      } in
                                                      case GHC.Prim.touch#
                                                             @ 'GHC.Types.PtrRepLifted
                                                             @ GHC.ForeignPtr.ForeignPtrContents
                                                             ipv10
                                                             ds10 of s'2 { DEFAULT ->
                                                      case GHC.Prim.touch#
                                                             @ 'GHC.Types.PtrRepLifted
                                                             @ GHC.ForeignPtr.ForeignPtrContents
                                                             ipv6
                                                             s'2 of s'3 { DEFAULT ->
                                                      (# s'3,
                                                         Data.ByteString.Internal.PS
                                                           ipv9
                                                           ipv10
                                                           0#
                                                           ipv5 #) } } } }
                                                   GHC.Types.True
                                                   -> case GHC.ForeignPtr.mallocPlainForeignPtrBytes2
                                                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                                Data.ByteString.Internal.ByteString #)
                                                      of {} }
                                              GHC.Types.True
                                              -> case GHC.Prim.touch#
                                                        @ 'GHC.Types.PtrRepLifted
                                                        @ GHC.ForeignPtr.ForeignPtrContents
                                                        ipv6
                                                        s'1 of s'2 { DEFAULT ->
                                                 (# s'2,
                                                    Data.ByteString.Internal.PS
                                                      ipv2
                                                      ipv6
                                                      0#
                                                      dt3 #) } } } } } }
                                         GHC.Types.True
                                         -> case GHC.ForeignPtr.mallocPlainForeignPtrBytes2
                                            ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                      Data.ByteString.Internal.ByteString #)
                                            of {} } }) of ds7 { (#,#) ipv ipv1 ->
                               case ipv1 of wild3 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                               case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.># dt7 0#) of wild4 {
                                 GHC.Types.False -> go11 ys
                                 GHC.Types.True
                                 -> GHC.Types.:
                                      @ Data.ByteString.Internal.ByteString
                                      wild3
                                      (go11 ys) } } }
                            GHC.Types.True
                            -> case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.># dt3 0#) of wild3 {
                                 GHC.Types.False -> go11 ys
                                 GHC.Types.True
                                 -> GHC.Types.:
                                      @ Data.ByteString.Internal.ByteString
                                      wild1
                                      (go11 ys) } } } }
                 } in
                 go11 ciggrps) -}
cb532f89f3a2fe9a75be7d4a9627a94c
  getRPrimerBEDfromMaster :: Lib.MasterRecord -> Lib.BedRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <L,U(1*U,A,A,A,A,A,1*U,1*U,A,1*U,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (mr :: Lib.MasterRecord) ->
                 Lib.BedRecord
                   (case mr of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds6 })
                   (case mr of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds12 })
                   (case mr of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds13 })
                   (case mr of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds15 })) -}
f651f2821ff5cebe5a91dddb7fa9cb73
  getRight ::
    Data.Either.Either t (a, Lib.AlignedRead) -> Lib.AlignedRead
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ t @ a (e :: Data.Either.Either t (a, Lib.AlignedRead)) ->
                 case e of wild {
                   Data.Either.Left ds6 -> Lib.defaultAlignment
                   Data.Either.Right x -> Data.Tuple.snd @ a @ Lib.AlignedRead x }) -}
5961d71e2dbf1ec2e6f98ecd89859063
  getRightM ::
    (GHC.Show.Show a1, Control.Monad.IO.Class.MonadIO m) =>
    Data.Either.Either a1 (a, Lib.AlignedRead) -> m Lib.AlignedRead
  {- Arity: 3,
     Strictness: <L,1*U(A,1*C1(U),A)><S(SL),U(1*U,1*C1(U))><S,1*U>,
     Unfolding: (\ @ a
                   @ a1
                   @ (m :: * -> *)
                   ($dShow :: GHC.Show.Show a1)
                   ($dMonadIO :: Control.Monad.IO.Class.MonadIO m)
                   (eta :: Data.Either.Either a1 (a, Lib.AlignedRead)) ->
                 let {
                   $dMonad :: GHC.Base.Monad m
                   = Control.Monad.IO.Class.$p1MonadIO @ m $dMonadIO
                 } in
                 case eta of wild {
                   Data.Either.Left e
                   -> GHC.Base.>>
                        @ m
                        $dMonad
                        @ ()
                        @ Lib.AlignedRead
                        (Control.Monad.IO.Class.liftIO
                           @ m
                           $dMonadIO
                           @ ()
                           (System.IO.writeFile1 Lib.getRightM1 (GHC.Show.show @ a1 $dShow e))
                             `cast`
                           (Sym (GHC.Types.N:IO[0] <()>_R)))
                        (GHC.Base.return
                           @ m
                           $dMonad
                           @ Lib.AlignedRead
                           Lib.defaultAlignment)
                   Data.Either.Right a2
                   -> GHC.Base.return
                        @ m
                        $dMonad
                        @ Lib.AlignedRead
                        (case a2 of wild1 { (,) ds6 y -> y }) }) -}
ac843986932369da9a7a490176270f8e
  getRightM1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "samparsefails.log"#) -}
e7d80dede1cdd979a32d6b273fa60464
  getSAM :: GHC.IO.FilePath -> GHC.Types.IO Lib.SAM
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.getSAM1
                  `cast`
                (<GHC.IO.FilePath>_R ->_R Sym (GHC.Types.N:IO[0] <Lib.SAM>_R)) -}
65bd913aa50bdde8a634991088a2319e
  getSAM1 ::
    GHC.IO.FilePath
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Lib.SAM #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (fp :: GHC.IO.FilePath)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Data.ByteString.Char8.readFile1
                        fp
                        s of ds6 { (#,#) ipv ipv1 ->
                 let {
                   ds7 :: ([Data.ByteString.Internal.ByteString],
                           [Data.ByteString.Internal.ByteString])
                   = case Lib.$wgo1
                            (Data.ByteString.Char8.lines ipv1) of ww { (#,#) ww1 ww2 ->
                     (ww1, ww2) }
                 } in
                 let {
                   bdy :: [Data.ByteString.Internal.ByteString]
                   = case ds7 of wild { (,) hdr bdy1 -> bdy1 }
                 } in
                 let {
                   ds8 :: (Data.Map.Base.Map
                             GHC.Types.Int (Data.Either.Either GHC.Base.String Lib.AlignedRead),
                           Data.Map.Base.Map
                             GHC.Types.Int (Data.Either.Either GHC.Base.String Lib.AlignedRead))
                   = case Data.Map.Base.$wpoly_go2
                            @ (Data.Either.Either GHC.Base.String Lib.AlignedRead)
                            @ GHC.Types.Int
                            Lib.getSAM6
                            (Lib.$sfromList3
                               @ (Data.Either.Either GHC.Base.String Lib.AlignedRead)
                               (GHC.List.zip
                                  @ GHC.Types.Int
                                  @ (Data.Either.Either GHC.Base.String Lib.AlignedRead)
                                  Lib.getMasterFile7
                                  (GHC.Base.map
                                     @ Data.ByteString.Internal.ByteString
                                     @ (Data.Either.Either GHC.Base.String Lib.AlignedRead)
                                     Lib.parseAln
                                     bdy))) of ww { (#,#) ww1 ww2 ->
                     (ww1, ww2) }
                 } in
                 let {
                   succs :: [Lib.AlignedRead]
                   = case ds8 of wild { (,) succm failm ->
                     Data.Either.rights1
                       @ GHC.Base.String
                       @ Lib.AlignedRead
                       (Lib.getSAM_go10
                          (GHC.Types.[]
                             @ (Data.Either.Either GHC.Base.String Lib.AlignedRead))
                          succm) }
                 } in
                 let {
                   faildlineixs :: [GHC.Types.Int]
                   = case ds8 of wild { (,) succm failm ->
                     Data.Map.Base.keys1
                       @ (Data.Either.Either GHC.Base.String Lib.AlignedRead)
                       @ GHC.Types.Int
                       (GHC.Types.[] @ GHC.Types.Int)
                       failm }
                 } in
                 let {
                   parsestatus :: GHC.Base.String
                   = case GHC.List.$wlenAcc
                            @ Data.ByteString.Internal.ByteString
                            bdy
                            0# of ww2 { DEFAULT ->
                     case GHC.List.$wlenAcc
                            @ Lib.AlignedRead
                            succs
                            0# of ww1 { DEFAULT ->
                     Lib.$wparsechkSAM ww2 ww1 faildlineixs } }
                 } in
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        parsestatus
                        GHC.Types.True
                        ipv of ds9 { (#,#) ipv2 ipv3 ->
                 case Data.ByteString.Char8.writeFile1
                        Lib.getRightM1
                        (Data.ByteString.Char8.unlines
                           (GHC.Base.map
                              @ GHC.Types.Int
                              @ Data.ByteString.Internal.ByteString
                              (GHC.List.!! @ Data.ByteString.Internal.ByteString bdy)
                              faildlineixs))
                        ipv2 of ds10 { (#,#) ipv4 ipv5 ->
                 case System.IO.writeFile1
                        Lib.getSAM3
                        parsestatus
                        ipv4 of ds11 { (#,#) ipv6 ipv7 ->
                 (# ipv6,
                    (case ds7 of wild { (,) hdr bdy1 -> hdr }, succs) #) } } } }) -}
20e1ca215c0d14686966a92cef9092e8
  getSAM2 :: GHC.IO.FilePath -> GHC.Types.IO Lib.SAM
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.getSAM7
                  `cast`
                (<GHC.IO.FilePath>_R ->_R Sym (GHC.Types.N:IO[0] <Lib.SAM>_R)) -}
4e164c0b47bf7ed99e8a3fc04f8be0f1
  getSAM3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "sam_parsing.log"#) -}
2a3410ff179ef082f35eb150829f7c33
  getSAM4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   " SAM alignments parsed successfully.\n"#) -}
e98eb345c5fdc8c492a543324a9556f4
  getSAM5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   " SAM alignments failed to parse (see samparsefails.log)\n"#) -}
b0d498a41eb05c83f956603aae2ab828
  getSAM6 ::
    GHC.Types.Int
    -> Data.Either.Either GHC.Base.String Lib.AlignedRead
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (\ (ds6 :: GHC.Types.Int)
                   (x :: Data.Either.Either
                           GHC.Base.String Lib.AlignedRead)[OneShot] ->
                 Data.Either.isRight @ GHC.Base.String @ Lib.AlignedRead x) -}
675dfe2bce5a7c4c1b82efb07c976285
  getSAM7 ::
    GHC.IO.FilePath
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Lib.SAM #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (fp :: GHC.IO.FilePath)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Data.ByteString.Char8.readFile1
                        fp
                        eta of ds6 { (#,#) ipv ipv1 ->
                 (# ipv, Lib.parseSAM (Data.ByteString.Char8.lines ipv1) #) }) -}
97b31c80ae7a78dc066e6b867999b687
  getSAM_go10 ::
    [Data.Either.Either GHC.Base.String Lib.AlignedRead]
    -> Data.Map.Base.Map
         GHC.Types.Int (Data.Either.Either GHC.Base.String Lib.AlignedRead)
    -> [Data.Either.Either GHC.Base.String Lib.AlignedRead]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U><S,1*U> -}
ff40d7c4824ef72be9ee331ae069975b
  getTargetBEDfromMaster :: Lib.MasterRecord -> Lib.BedRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <L,U(1*U,1*U,1*U,1*U,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (mr :: Lib.MasterRecord) ->
                 Lib.BedRecord
                   (case mr of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds6 })
                   (case mr of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds7 })
                   (case mr of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds8 })
                   (case mr of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds9 })) -}
fae1e39abf826e7e89c036f3c5ffe8a8
  getcol ::
    GHC.Types.Int
    -> Data.Vector.Vector (Data.Vector.Vector a)
    -> Data.Vector.Vector a
  {- Arity: 2, Strictness: <L,U(U)><S(LSL),1*U(U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   (w :: GHC.Types.Int)
                   (w1 :: Data.Vector.Vector (Data.Vector.Vector a)) ->
                 case w1 of ww { Data.Vector.Vector ww1 ww2 ww3 ->
                 Lib.$wgetcol @ a w ww1 ww2 ww3 }) -}
89fccd089c00dffda0570f7c14ab40bf
  getcol1 :: GHC.Prim.Int# -> GHC.Prim.Int# -> a
  {- Arity: 2, Strictness: <L,U><L,U>x -}
7197128a9a396f5832284cde412e76bc
  getlengths ::
    GHC.Base.Functor f =>
    f Data.ByteString.Internal.ByteString -> f GHC.Types.Int
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (seqs :: f Data.ByteString.Internal.ByteString) ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ Data.ByteString.Internal.ByteString
                   @ GHC.Types.Int
                   Data.ByteString.length
                   seqs) -}
2a85eff6a5420f8c9ad8dc851af397b7
  hdralnparser ::
    Data.Attoparsec.ByteString.Internal.Parser Lib.AlignedRead
  {- Arity: 5,
     Strictness: <S(LLLSLL),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.hdralnparser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <Lib.AlignedRead>_R)) -}
df6d1e9c5eb8a80ab1b89303e1ef76d3
  hdralnparser1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.AlignedRead
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(LLLSLL),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.AlignedRead
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$whdralnparser @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
07571fa716c0e2cd3f33b05c7dee697b
  hdralnparser2 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "HEADERLINE"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
4f4510d85e2d1783c61586b3cb8f329b
  hdrchromp :: Data.Attoparsec.ByteString.Internal.Parser Lib.UChr
  {- Arity: 5,
     Strictness: <S(LLLSLL),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.hdrchromp1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <Lib.UChr>_R)) -}
8c899f961e4fb0bee7bc969f10800b51
  hdrchromp1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.UChr
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(LLLSLL),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.UChr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$whdrchromp @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
bea21472ea4798b169acb11690e930dc
  headerstrings :: Lib.AlignedRead -> Lib.Header
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLSLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 ds32 }) -}
09fa6fd86108decd4391e349cd7a6a5f
  intflag :: Lib.SAMFlag -> GHC.Types.Int
  RecSel Left Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLS),1*U(A,A,A,A,A,A,A,A,A,A,A,1*U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.SAMFlag) ->
                 case ds6 of wild { Lib.SAMFlag ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds18 }) -}
6c0b6e1cb3be7b4b57227a058b16ac2a
  intgr2int :: GHC.Integer.Type.Integer -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m,
     Unfolding: InlineRule (0, True, True)
                GHC.Num.$fNumInt_$cfromInteger -}
df5fd98ee5a2364f6a3d207cf773465f
  isheader :: Lib.AlignedRead -> GHC.Types.Bool
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLSLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 ds33 }) -}
77b80d469a2a0dcdf5742f565ea0a5a6
  itypep ::
    Data.Attoparsec.ByteString.Internal.Parser
      Data.ByteString.Internal.ByteString
  {- Arity: 5,
     Strictness: <L,U><S,1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.itypep1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)) -}
650f41671d68506c12f5527f8ca892bd
  itypep1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <L,U><S,1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww { GHC.Types.I# ww1 ->
                 Lib.$witypep @ r w ww1 w2 w3 w4 }) -}
8658275188085b021e4619ee33870183
  itypep2 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "i"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
b737992c962c0d05340e566b706ac762
  itypep3 ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString
      Data.ByteString.Internal.ByteString
  {- Unfolding: (Data.Attoparsec.ByteString.Char8.$fIsStringParser_$cfromString
                   @ Data.ByteString.Internal.ByteString
                   (GHC.Types.Eq#
                      @ *
                      @ *
                      @ Data.ByteString.Internal.ByteString
                      @ Data.ByteString.Internal.ByteString
                      @~ <Data.ByteString.Internal.ByteString>_N)
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Data.ByteString.Internal.ByteString>_N <Data.ByteString.Internal.ByteString>_N)
                   Lib.itypep4) -}
a123d64aa411b266cdb1cf63b5e85ab5
  itypep4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "i"#) -}
5816d9fbb85834a3bccb029fcb1fbdd1
  ix :: GHC.Types.Int -> Data.Vector.Vector a -> a
  {- Arity: 2, Strictness: <S(S),1*U(U)><S(SLS),U(U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a (w :: GHC.Types.Int) (w1 :: Data.Vector.Vector a) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Data.Vector.Vector ww3 ww4 ww5 ->
                 Lib.$wix @ a ww1 ww3 ww4 ww5 } }) -}
61956df174e8c676e3b213c0a919ffe4
  justbedmaps :: [GHC.Base.Maybe Lib.BedRecord] -> [Lib.BedRecord]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, True)
                (Data.Maybe.catMaybes @ Lib.BedRecord) -}
98f14203ed5e8f70280f46d895b319e5
  justchrmaps ::
    [GHC.Base.Maybe (Data.IntMap.Base.IntMap Lib.BedRecord)]
    -> [Data.IntMap.Base.IntMap Lib.BedRecord]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, True)
                (Data.Maybe.catMaybes @ (Data.IntMap.Base.IntMap Lib.BedRecord)) -}
a3262d581ce253adfd054ba6548f5fee
  mIDp ::
    Data.Attoparsec.ByteString.Internal.Parser
      Data.ByteString.Internal.ByteString
  {- Arity: 5,
     Strictness: <S(LLLSLL),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.mIDp1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)) -}
cb8e177aa13f1700b045373fefb10e05
  mIDp1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(LLLSLL),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wmIDp @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
7d608972b7e86068e8a47bf3eb789d18
  makebedmap ::
    [Lib.BedRecord] -> Data.IntMap.Base.IntMap Lib.BedRecord
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (bs :: [Lib.BedRecord]) ->
                 Data.IntMap.Strict.fromList1
                   @ Lib.BedRecord
                   (Data.IntMap.Base.Nil @ Lib.BedRecord)
                   (Lib.makebedmap_go bs)) -}
ce1dc3a222df184b1ec85c3aeba6c467
  makebedmap_go ::
    [Lib.BedRecord] -> [(GHC.Types.Int, Lib.BedRecord)]
  {- Arity: 1, Strictness: <S,1*U> -}
df85a34773081efa2214f50dc0ecf57d
  makechrbedmap ::
    Lib.BED
    -> Data.Map.Base.Map
         Lib.UChr (Data.IntMap.Base.IntMap Lib.BedRecord)
  {- Arity: 1, Strictness: <S(LSL),1*U(U,U,U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.BED) ->
                 case w of ww { Data.Vector.Vector ww1 ww2 ww3 ->
                 Lib.$wmakechrbedmap ww1 ww2 ww3 }) -}
3cc9dd9bcf49ffc9044c994d4cbe97dc
  makechrbedmap1 :: Lib.BedRecord -> Lib.BedRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(1*U,A,A,A)><S(SLLL),1*U(1*U,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.BedRecord) (y :: Lib.BedRecord) ->
                 case x of wild { Lib.BedRecord ds6 ds7 ds8 ds9 ->
                 case ds6 of x1 { DEFAULT ->
                 case y of wild1 { Lib.BedRecord ds10 ds11 ds12 ds13 ->
                 case ds10 of x2 { DEFAULT ->
                 GHC.Prim.tagToEnum#
                   @ GHC.Types.Bool
                   (GHC.Prim.==#
                      (GHC.Prim.dataToTag# @ Lib.UChr x1)
                      (GHC.Prim.dataToTag# @ Lib.UChr x2)) } } } }) -}
4d7e6f2d7132466723e9629921b0b942
  makechrbedmap_go ::
    [[Lib.BedRecord]]
    -> [Data.IntMap.Base.IntMap Lib.BedRecord]
    -> [(Lib.UChr, Data.IntMap.Base.IntMap Lib.BedRecord)]
  {- Arity: 2, Strictness: <S,1*U><L,1*U> -}
9e6b501c71943346a9fbeb2996c6033c
  makeprimertups :: Lib.BedRecord -> [(GHC.Types.Int, Lib.BedRecord)]
  {- Arity: 1, Strictness: <S(LSSL),U(U,U,U,U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.BedRecord) ->
                 case w of ww { Lib.BedRecord ww1 ww2 ww3 ww4 ->
                 Lib.$wmakeprimertups ww1 ww2 ww3 ww4 }) -}
73fb4337cf2379df3baa54563a89f7a3
  makeprimertups1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (2) -}
956e0391ddaa10d0801cc56426b52075
  mampname :: Lib.MasterRecord -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.MasterRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLLLLLLL),1*U(A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MasterRecord) ->
                 case ds6 of wild { Lib.MasterRecord ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds10 }) -}
f9dfb9547b9aa698347a66795db743ef
  mapcig :: Data.ByteString.Internal.ByteString -> Lib.CigarMap
  {- Arity: 1, Strictness: <L,1*U(U,U,U,U)>,
     Unfolding: (\ (cigstr :: Data.ByteString.Internal.ByteString) ->
                 case Data.Either.rights1
                        @ GHC.Base.String
                        @ [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                        (GHC.Types.:
                           @ (Data.Either.Either
                                GHC.Base.String
                                [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)])
                           (case cigstr of wild { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                            case Lib.$wparseCigar
                                   @ [(GHC.Integer.Type.Integer,
                                       Data.ByteString.Internal.ByteString)]
                                   dt
                                   dt1
                                   dt2
                                   dt3
                                   dt3
                                   0#
                                   0#
                                   Data.Attoparsec.Internal.Types.Complete
                                   (Data.Attoparsec.ByteString.Internal.failK
                                      @ [(GHC.Integer.Type.Integer,
                                          Data.ByteString.Internal.ByteString)])
                                     `cast`
                                   (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                                    ->_R <Data.Attoparsec.Internal.Types.Pos
                                          -> Data.Attoparsec.Internal.Types.More
                                          -> [GHC.Base.String]
                                          -> GHC.Base.String
                                          -> Data.Attoparsec.Internal.Types.IResult
                                               Data.ByteString.Internal.ByteString
                                               [(GHC.Integer.Type.Integer,
                                                 Data.ByteString.Internal.ByteString)]>_R)
                                   (Data.Attoparsec.ByteString.Internal.successK
                                      @ [(GHC.Integer.Type.Integer,
                                          Data.ByteString.Internal.ByteString)])
                                     `cast`
                                   (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                                    ->_R <Data.Attoparsec.Internal.Types.Pos
                                          -> Data.Attoparsec.Internal.Types.More
                                          -> [(GHC.Integer.Type.Integer,
                                               Data.ByteString.Internal.ByteString)]
                                          -> Data.Attoparsec.Internal.Types.IResult
                                               Data.ByteString.Internal.ByteString
                                               [(GHC.Integer.Type.Integer,
                                                 Data.ByteString.Internal.ByteString)]>_R) of wild1 {
                              Data.Attoparsec.Internal.Types.Fail ds6 ds7 err
                              -> case ds7 of wild2 {
                                   []
                                   -> Data.Either.Left
                                        @ GHC.Base.String
                                        @ [(GHC.Integer.Type.Integer,
                                            Data.ByteString.Internal.ByteString)]
                                        err
                                   : ipv ipv1
                                   -> Data.Either.Left
                                        @ [GHC.Types.Char]
                                        @ [(GHC.Integer.Type.Integer,
                                            Data.ByteString.Internal.ByteString)]
                                        (GHC.Base.++
                                           @ GHC.Types.Char
                                           (Data.OldList.intercalate_$spoly_go
                                              @ GHC.Types.Char
                                              ipv
                                              (Data.OldList.prependToAll
                                                 @ [GHC.Types.Char]
                                                 Lib.mapcig2
                                                 ipv1))
                                           (GHC.CString.unpackAppendCString# ": "# err)) }
                              Data.Attoparsec.Internal.Types.Partial ipv -> Lib.mapcig1
                              Data.Attoparsec.Internal.Types.Done ds6 a1
                              -> Data.Either.Right
                                   @ GHC.Base.String
                                   @ [(GHC.Integer.Type.Integer,
                                       Data.ByteString.Internal.ByteString)]
                                   a1 } })
                           (GHC.Types.[]
                              @ (Data.Either.Either
                                   GHC.Base.String
                                   [(GHC.Integer.Type.Integer,
                                     Data.ByteString.Internal.ByteString)]))) of wild {
                   []
                   -> GHC.List.badHead
                        @ [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                   : x ds6 -> x }) -}
b1cc660340bf27fb69599e485ffa076f
  mapcig1 ::
    Data.Either.Either
      GHC.Base.String
      [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
  {- Strictness: x -}
f315277197d547daacd9fcd78d9b4346
  mapcig2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# " > "#) -}
35a0bc1bde9e37b08bf39e69af2c9905
  mapfst :: GHC.Num.Num a => (a -> c) -> (a, b) -> (c, b)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,A><L,1*C1(U)><S,1*U(U,U)>m,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   @ c1
                   @ b
                   ($dNum :: GHC.Num.Num a)
                   (f :: a -> c1)
                   (ds6 :: (a, b)) ->
                 case ds6 of wild { (,) x y -> (f x, y) }) -}
7167464a8a4b64146b42dcd85da54c44
  mapped :: Lib.AlignedRead -> GHC.Types.Bool
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLSLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 ds25 }) -}
f958afa48cbb61763581fcee1981a6b7
  mapqual :: Lib.AlignedRead -> GHC.Integer.Type.Integer
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 ds12 }) -}
4afe0c73904a0dcf23a79dc913e34976
  masterRecToTargetBED :: Lib.MasterRecord -> Lib.BedRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <L,U(1*U,1*U,1*U,1*U,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (m :: Lib.MasterRecord) ->
                 Lib.BedRecord
                   (case m of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds6 })
                   (case m of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds7 })
                   (case m of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds8 })
                   (case m of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds9 })) -}
7ffcd4a2e2b26ecbbd31dbcdc1c40aa8
  masterToFPrimerBED :: [Lib.MasterRecord] -> Lib.BED
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (mrecs :: [Lib.MasterRecord]) ->
                 case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ (Data.Vector.Vector Lib.BedRecord)
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newArray#
                                @ Lib.BedRecord
                                @ (Control.Monad.Primitive.PrimState
                                     (GHC.ST.ST GHC.Prim.RealWorld))
                                0#
                                (Data.Vector.Mutable.uninitialised @ Lib.BedRecord)
                                s1
                                  `cast`
                                (GHC.Prim.State#
                                   (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                             <GHC.Prim.RealWorld>_N)))_R of ds6 { (#,#) ipv ipv1 ->
                         case Lib.masterToFPrimerBED1
                                GHC.Types.SPEC
                                ((Data.Vector.Mutable.MVector
                                    @ (Control.Monad.Primitive.PrimState
                                         (GHC.ST.ST GHC.Prim.RealWorld))
                                    @ Lib.BedRecord
                                    0#
                                    0#
                                    ipv1)
                                   `cast`
                                 (Sub (Sym (Data.Vector.D:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                                  (GHC.ST.ST
                                                                                     GHC.Prim.RealWorld)>_N <Lib.BedRecord>_N),
                                 Lib.defaultAlignment10)
                                (GHC.Base.map
                                   @ Lib.MasterRecord
                                   @ Lib.BedRecord
                                   Lib.getFPrimerBEDfromMaster
                                   (Data.OldList.sortBy
                                      @ Lib.MasterRecord
                                      Lib.$fOrdMasterRecord_$ccompare
                                      mrecs))
                                ipv
                                  `cast`
                                (GHC.Prim.State#
                                   (Control.Monad.Primitive.D:R:PrimStateST[0]
                                        <GHC.Prim.RealWorld>_N))_R of ds7 { (#,#) ipv6 ipv7 ->
                         case ipv7 of wild5 { (,) v' n ->
                         case v'
                                `cast`
                              (Sub (Data.Vector.D:R:MutableVector[0]) <Control.Monad.Primitive.PrimState
                                                                         (GHC.ST.ST
                                                                            GHC.Prim.RealWorld)>_N <Lib.BedRecord>_N) of wild { Data.Vector.Mutable.MVector dt dt1 dt2 ->
                         case n of dt5 { GHC.Types.I# dt6 ->
                         case GHC.Prim.unsafeFreezeArray#
                                @ (Control.Monad.Primitive.PrimState
                                     (GHC.ST.ST GHC.Prim.RealWorld))
                                @ Lib.BedRecord
                                dt2
                                ipv6
                                  `cast`
                                (GHC.Prim.State#
                                   (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                             <GHC.Prim.RealWorld>_N)))_R of ds8 { (#,#) ipv2 ipv3 ->
                         (# ipv2
                              `cast`
                            (GHC.Prim.State#
                               (Control.Monad.Primitive.D:R:PrimStateST[0]
                                    <GHC.Prim.RealWorld>_N))_R,
                            Data.Vector.Vector
                              @ Lib.BedRecord
                              dt
                              dt6
                              ipv3 #) } } } } } }) of ds6 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
2d9e072631a647bf20d38babae85fb8a
  masterToFPrimerBED1 ::
    GHC.Types.SPEC
    -> (Data.Vector.Generic.Base.Mutable
          Data.Vector.Vector
          (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
          Lib.BedRecord,
        GHC.Types.Int)
    -> [Lib.BedRecord]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Data.Vector.Generic.Base.Mutable
             Data.Vector.Vector
             (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
             Lib.BedRecord,
           GHC.Types.Int) #)
  {- Arity: 4, Strictness: <S,1*U><L,U(U(U,U,U),U(U))><S,1*U><S,U> -}
3fef70b65f72ed3f25a7e16f69dc2ec8
  masterToRPrimerBED :: [Lib.MasterRecord] -> Lib.BED
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (mrecs :: [Lib.MasterRecord]) ->
                 case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ (Data.Vector.Vector Lib.BedRecord)
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newArray#
                                @ Lib.BedRecord
                                @ (Control.Monad.Primitive.PrimState
                                     (GHC.ST.ST GHC.Prim.RealWorld))
                                0#
                                (Data.Vector.Mutable.uninitialised @ Lib.BedRecord)
                                s1
                                  `cast`
                                (GHC.Prim.State#
                                   (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                             <GHC.Prim.RealWorld>_N)))_R of ds6 { (#,#) ipv ipv1 ->
                         case Lib.masterToRPrimerBED1
                                GHC.Types.SPEC
                                ((Data.Vector.Mutable.MVector
                                    @ (Control.Monad.Primitive.PrimState
                                         (GHC.ST.ST GHC.Prim.RealWorld))
                                    @ Lib.BedRecord
                                    0#
                                    0#
                                    ipv1)
                                   `cast`
                                 (Sub (Sym (Data.Vector.D:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                                  (GHC.ST.ST
                                                                                     GHC.Prim.RealWorld)>_N <Lib.BedRecord>_N),
                                 Lib.defaultAlignment10)
                                (GHC.Base.map
                                   @ Lib.MasterRecord
                                   @ Lib.BedRecord
                                   Lib.getRPrimerBEDfromMaster
                                   (Data.OldList.sortBy
                                      @ Lib.MasterRecord
                                      Lib.$fOrdMasterRecord_$ccompare
                                      mrecs))
                                ipv
                                  `cast`
                                (GHC.Prim.State#
                                   (Control.Monad.Primitive.D:R:PrimStateST[0]
                                        <GHC.Prim.RealWorld>_N))_R of ds7 { (#,#) ipv6 ipv7 ->
                         case ipv7 of wild5 { (,) v' n ->
                         case v'
                                `cast`
                              (Sub (Data.Vector.D:R:MutableVector[0]) <Control.Monad.Primitive.PrimState
                                                                         (GHC.ST.ST
                                                                            GHC.Prim.RealWorld)>_N <Lib.BedRecord>_N) of wild { Data.Vector.Mutable.MVector dt dt1 dt2 ->
                         case n of dt5 { GHC.Types.I# dt6 ->
                         case GHC.Prim.unsafeFreezeArray#
                                @ (Control.Monad.Primitive.PrimState
                                     (GHC.ST.ST GHC.Prim.RealWorld))
                                @ Lib.BedRecord
                                dt2
                                ipv6
                                  `cast`
                                (GHC.Prim.State#
                                   (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                             <GHC.Prim.RealWorld>_N)))_R of ds8 { (#,#) ipv2 ipv3 ->
                         (# ipv2
                              `cast`
                            (GHC.Prim.State#
                               (Control.Monad.Primitive.D:R:PrimStateST[0]
                                    <GHC.Prim.RealWorld>_N))_R,
                            Data.Vector.Vector
                              @ Lib.BedRecord
                              dt
                              dt6
                              ipv3 #) } } } } } }) of ds6 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
2eb26865a56cc17964139ad18763fa94
  masterToRPrimerBED1 ::
    GHC.Types.SPEC
    -> (Data.Vector.Generic.Base.Mutable
          Data.Vector.Vector
          (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
          Lib.BedRecord,
        GHC.Types.Int)
    -> [Lib.BedRecord]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Data.Vector.Generic.Base.Mutable
             Data.Vector.Vector
             (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
             Lib.BedRecord,
           GHC.Types.Int) #)
  {- Arity: 4, Strictness: <S,1*U><L,U(U(U,U,U),U(U))><S,1*U><S,U> -}
6d7cd012b075275458ce2fabe541cb48
  masterToTargetBED :: [Lib.MasterRecord] -> Lib.BED
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (mrecs :: [Lib.MasterRecord]) ->
                 case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ (Data.Vector.Vector Lib.BedRecord)
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newArray#
                                @ Lib.BedRecord
                                @ (Control.Monad.Primitive.PrimState
                                     (GHC.ST.ST GHC.Prim.RealWorld))
                                0#
                                (Data.Vector.Mutable.uninitialised @ Lib.BedRecord)
                                s1
                                  `cast`
                                (GHC.Prim.State#
                                   (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                             <GHC.Prim.RealWorld>_N)))_R of ds6 { (#,#) ipv ipv1 ->
                         case Lib.masterToTargetBED1
                                GHC.Types.SPEC
                                ((Data.Vector.Mutable.MVector
                                    @ (Control.Monad.Primitive.PrimState
                                         (GHC.ST.ST GHC.Prim.RealWorld))
                                    @ Lib.BedRecord
                                    0#
                                    0#
                                    ipv1)
                                   `cast`
                                 (Sub (Sym (Data.Vector.D:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                                  (GHC.ST.ST
                                                                                     GHC.Prim.RealWorld)>_N <Lib.BedRecord>_N),
                                 Lib.defaultAlignment10)
                                (GHC.Base.map
                                   @ Lib.MasterRecord
                                   @ Lib.BedRecord
                                   Lib.getTargetBEDfromMaster
                                   (Data.OldList.sortBy
                                      @ Lib.MasterRecord
                                      Lib.$fOrdMasterRecord_$ccompare
                                      mrecs))
                                ipv
                                  `cast`
                                (GHC.Prim.State#
                                   (Control.Monad.Primitive.D:R:PrimStateST[0]
                                        <GHC.Prim.RealWorld>_N))_R of ds7 { (#,#) ipv6 ipv7 ->
                         case ipv7 of wild5 { (,) v' n ->
                         case v'
                                `cast`
                              (Sub (Data.Vector.D:R:MutableVector[0]) <Control.Monad.Primitive.PrimState
                                                                         (GHC.ST.ST
                                                                            GHC.Prim.RealWorld)>_N <Lib.BedRecord>_N) of wild { Data.Vector.Mutable.MVector dt dt1 dt2 ->
                         case n of dt5 { GHC.Types.I# dt6 ->
                         case GHC.Prim.unsafeFreezeArray#
                                @ (Control.Monad.Primitive.PrimState
                                     (GHC.ST.ST GHC.Prim.RealWorld))
                                @ Lib.BedRecord
                                dt2
                                ipv6
                                  `cast`
                                (GHC.Prim.State#
                                   (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                             <GHC.Prim.RealWorld>_N)))_R of ds8 { (#,#) ipv2 ipv3 ->
                         (# ipv2
                              `cast`
                            (GHC.Prim.State#
                               (Control.Monad.Primitive.D:R:PrimStateST[0]
                                    <GHC.Prim.RealWorld>_N))_R,
                            Data.Vector.Vector
                              @ Lib.BedRecord
                              dt
                              dt6
                              ipv3 #) } } } } } }) of ds6 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
9ce79be9095a335dbc76cfd0a3fcaf78
  masterToTargetBED1 ::
    GHC.Types.SPEC
    -> (Data.Vector.Generic.Base.Mutable
          Data.Vector.Vector
          (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
          Lib.BedRecord,
        GHC.Types.Int)
    -> [Lib.BedRecord]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Data.Vector.Generic.Base.Mutable
             Data.Vector.Vector
             (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
             Lib.BedRecord,
           GHC.Types.Int) #)
  {- Arity: 4, Strictness: <S,1*U><L,U(U(U,U,U),U(U))><S,1*U><S,U> -}
2a85f35d5fb7cc12953f8119a0c95434
  masterparser ::
    Data.Attoparsec.ByteString.Internal.Parser Lib.MasterRecord
  {- Arity: 5,
     Strictness: <S(LLLSLL),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.getMasterFile6
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <Lib.MasterRecord>_R)) -}
80802cbbaa27f47b1071e289c2ccc7fc
  mateMapped :: Lib.SAMFlag -> GHC.Types.Bool
  RecSel Left Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLLLLLLL),1*U(A,1*U,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.SAMFlag) ->
                 case ds6 of wild { Lib.SAMFlag ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds8 }) -}
c8a5b7a140ced09abf1ab3695ad590d2
  mateNeg :: Lib.SAMFlag -> GHC.Types.Bool
  RecSel Left Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSLLLLLL),1*U(A,A,A,A,A,1*U,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.SAMFlag) ->
                 case ds6 of wild { Lib.SAMFlag ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds12 }) -}
db3a647149085affd7d0991bb0f90480
  mchrom :: Lib.MasterRecord -> Lib.UChr
  RecSel Left Lib.MasterRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(1*U,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MasterRecord) ->
                 case ds6 of wild { Lib.MasterRecord ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds7 }) -}
aae302a177d15c0c6f6deb88cf38f571
  mforend :: Lib.MasterRecord -> GHC.Integer.Type.Integer
  RecSel Left Lib.MasterRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSLLLLLL),1*U(A,A,A,A,A,1*U,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MasterRecord) ->
                 case ds6 of wild { Lib.MasterRecord ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds12 }) -}
5b0093da6d1d8f24c0cbe7834689a97f
  mforname :: Lib.MasterRecord -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.MasterRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLSLLL),1*U(A,A,A,A,A,A,A,A,1*U(U,U,U,U),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MasterRecord) ->
                 case ds6 of wild { Lib.MasterRecord ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds15 }) -}
12299b1dcd9cc83888968e803512e6ef
  mforseq :: Lib.MasterRecord -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.MasterRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLSL),1*U(A,A,A,A,A,A,A,A,A,A,1*U(U,U,U,U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MasterRecord) ->
                 case ds6 of wild { Lib.MasterRecord ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds17 }) -}
23e9b4072b36778c51e4420ca59250f5
  mforstart :: Lib.MasterRecord -> GHC.Integer.Type.Integer
  RecSel Left Lib.MasterRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLLLLLLL),1*U(A,A,A,A,1*U,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MasterRecord) ->
                 case ds6 of wild { Lib.MasterRecord ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds11 }) -}
dd01bedc78810ad4cae30dd4d12bdcde
  mid :: Lib.AlignedRead -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLSLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U,U,U,U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 ds34 }) -}
042a4ad65bb1b365dca2addda879530d
  midseq :: Lib.MidFamily -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.MidFamily
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLLLLL),1*U(A,A,A,1*U(U,U,U,U),A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MidFamily) ->
                 case ds6 of wild { Lib.MidFamily ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds10 }) -}
ac405643d573651732cdf2957df671a1
  mrevend :: Lib.MasterRecord -> GHC.Integer.Type.Integer
  RecSel Left Lib.MasterRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLSLLLL),1*U(A,A,A,A,A,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MasterRecord) ->
                 case ds6 of wild { Lib.MasterRecord ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds14 }) -}
af47bb1c984b1b66f8ba68f8accf5aa4
  mrevname :: Lib.MasterRecord -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.MasterRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLSLL),1*U(A,A,A,A,A,A,A,A,A,1*U(U,U,U,U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MasterRecord) ->
                 case ds6 of wild { Lib.MasterRecord ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds16 }) -}
98cb1482086a6e059debfa049b358a28
  mrevseq :: Lib.MasterRecord -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.MasterRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLS),1*U(A,A,A,A,A,A,A,A,A,A,A,1*U(U,U,U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MasterRecord) ->
                 case ds6 of wild { Lib.MasterRecord ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds18 }) -}
da9b10a986cc10de5c99858da88a0897
  mrevstart :: Lib.MasterRecord -> GHC.Integer.Type.Integer
  RecSel Left Lib.MasterRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLSLLLLL),1*U(A,A,A,A,A,A,1*U,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MasterRecord) ->
                 case ds6 of wild { Lib.MasterRecord ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds13 }) -}
738f6e290ec194d92b2f4968c2cda7c7
  mtargetend :: Lib.MasterRecord -> GHC.Integer.Type.Integer
  RecSel Left Lib.MasterRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLL),1*U(A,A,1*U,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MasterRecord) ->
                 case ds6 of wild { Lib.MasterRecord ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds9 }) -}
c77cbd82495c281dc5bf33d790ce9842
  mtargetstart :: Lib.MasterRecord -> GHC.Integer.Type.Integer
  RecSel Left Lib.MasterRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLLLLLLL),1*U(A,1*U,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MasterRecord) ->
                 case ds6 of wild { Lib.MasterRecord ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds8 }) -}
ed820e3e6515be34edc1f0eca1deaf55
  negtxposdcnt :: Lib.MidFamily -> GHC.Integer.Type.Integer
  RecSel Left Lib.MidFamily
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLSL),1*U(A,A,A,A,A,A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MidFamily) ->
                 case ds6 of wild { Lib.MidFamily ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds15 }) -}
8d8db1abfab21d9c7f69ade33d2086e0
  noclip ::
    (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
    -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S(LS(LLLS)),1*U(A,1*U(U,U,U,U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: (GHC.Integer.Type.Integer,
                          Data.ByteString.Internal.ByteString)) ->
                 case w of ww { (,) ww1 ww2 ->
                 case ww2 of ww3 { Data.ByteString.Internal.PS ww4 ww5 ww6 ww7 ->
                 Lib.$wnoclip ww4 ww5 ww6 ww7 } }) -}
2183b0498681f6e8f9f72d08efae9fc0
  noclip1 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "S"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
6f969004f92ea1e7cdf5cecf06ba0fd4
  noclip2 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "H"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
36fdf9889594081a76eee5bc679f3fa4
  nohardclip ::
    (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
    -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S(LS(LLLS)),1*U(A,1*U(U,U,U,U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: (GHC.Integer.Type.Integer,
                          Data.ByteString.Internal.ByteString)) ->
                 case w of ww { (,) ww1 ww2 ->
                 case ww2 of ww3 { Data.ByteString.Internal.PS ww4 ww5 ww6 ww7 ->
                 Lib.$wnohardclip ww4 ww5 ww6 ww7 } }) -}
8cae29e42acd7075de2f16127c016213
  nohardclip1 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "H"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
2751ef395059ca6d507b7f859671bd36
  nopadding ::
    (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
    -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S(LS(LLLS)),1*U(A,1*U(U,U,U,U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: (GHC.Integer.Type.Integer,
                          Data.ByteString.Internal.ByteString)) ->
                 case w of ww { (,) ww1 ww2 ->
                 case ww2 of ww3 { Data.ByteString.Internal.PS ww4 ww5 ww6 ww7 ->
                 Lib.$wnopadding ww4 ww5 ww6 ww7 } }) -}
aee84740ce37828c61c004d401e4d578
  nopadding1 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "D"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
1d7fcd81eb61085e0a059a84467cf7a8
  nopadding2 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "H"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
9f1beab2cd9603da7d0c5ce2b47f301e
  notMapped :: Lib.SAMFlag -> GHC.Types.Bool
  RecSel Left Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLL),1*U(A,A,1*U,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.SAMFlag) ->
                 case ds6 of wild { Lib.SAMFlag ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds9 }) -}
c89047d75b5016b1ba029ff3372877a1
  notPrimary :: Lib.SAMFlag -> GHC.Types.Bool
  RecSel Left Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLSLLL),1*U(A,A,A,A,A,A,A,A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.SAMFlag) ->
                 case ds6 of wild { Lib.SAMFlag ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds15 }) -}
ac53bb089bd5ed60e9a06d9d65b6b597
  optasp ::
    Data.Attoparsec.ByteString.Internal.Parser
      Data.ByteString.Internal.ByteString
  {- Arity: 5,
     Strictness: <L,U><S,1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.optasp1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)) -}
23ef0e2acfd4219011314ae89a5fe90d
  optasp1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <L,U><S,1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww { GHC.Types.I# ww1 ->
                 Lib.$woptasp @ r w ww1 w2 w3 w4 }) -}
a67d0a2589e3fba37b246dde3f2845b8
  optfieldp ::
    Data.Attoparsec.ByteString.Internal.Parser
      Data.ByteString.Internal.ByteString
  {- Arity: 5,
     Strictness: <L,U><S,U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.optfieldp1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)) -}
ff650547415e2a047e23e6661a89adcc
  optfieldp1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <L,U><S,U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww { GHC.Types.I# ww1 ->
                 Lib.$woptfieldp @ r w ww1 w2 w3 w4 }) -}
8de3f522699b9e3baebdd76feb765493
  optfieldp2 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <L,U><S,1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww { GHC.Types.I# ww1 ->
                 Lib.$woptxsp @ r w ww1 w2 w3 w4 }) -}
a01d8b6c56cf8ef5cba660d21d0fedae
  optfieldpEOL ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString [GHC.Types.Char]
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.optfieldpEOL1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <[GHC.Types.Char]>_R)) -}
af37e48a9fd0f02131c082eaebbd0e90
  optfieldpEOL1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [GHC.Types.Char]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w2 :: Data.Attoparsec.Internal.Types.State
                            Data.ByteString.Internal.ByteString)
                   (w3 :: Data.Attoparsec.Internal.Types.Pos)
                   (w4 :: Data.Attoparsec.Internal.Types.More)
                   (w5 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w6 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [GHC.Types.Char]
                            r) ->
                 case w3
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww { GHC.Types.I# ww1 ->
                 Data.Attoparsec.Combinator.$w$smanyTill1
                   @ GHC.Types.Char
                   @ ()
                   Lib.optfieldpEOL2
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                             <Data.ByteString.Internal.ByteString>_N <GHC.Types.Char>_R))
                   Data.Attoparsec.ByteString.Internal.endOfLine1
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                             <Data.ByteString.Internal.ByteString>_N <()>_R))
                   @ r
                   w2
                   ww1
                   w4
                   w5
                   w6 }) -}
87fe5ea670e003e4b965ffd450b59554
  optfieldpEOL2 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         GHC.Types.Char
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(LLLSLL),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            GHC.Types.Char
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$woptfieldpEOL @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
9715296b627fe56d4b842bade3b8a012
  optfieldpEOL3 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 1#) -}
5c08ce53b888e4670c4e0b7f1e1b3723
  optfieldpEOL4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Failed reading: satisfyWith"#) -}
1c5d1ab75e5ced7665f0e6ec595949c8
  optfieldpEOL5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "\r\n"#) -}
9a2578339fdfc09a21bdee0b0aad0ff7
  optfieldpEOL_ds1 :: Data.Attoparsec.ByteString.FastSet.FastSet
  {- Unfolding: (Data.Attoparsec.ByteString.FastSet.charClass
                   Lib.optfieldpEOL5) -}
de3f682d5566617b4d7a9d5b2199a165
  optfields :: Lib.AlignedRead -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLSLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 ds22 }) -}
19406f2da13166ea8163b66e95f9578b
  optfieldsp ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString
      [Data.ByteString.Internal.ByteString]
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.optfieldsp1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <[Data.ByteString.Internal.ByteString]>_R)) -}
c71ca91325f9abfc8c34fd98057f0368
  optfieldsp1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [Data.ByteString.Internal.ByteString]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w2 :: Data.Attoparsec.Internal.Types.State
                            Data.ByteString.Internal.ByteString)
                   (w3 :: Data.Attoparsec.Internal.Types.Pos)
                   (w4 :: Data.Attoparsec.Internal.Types.More)
                   (w5 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w6 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [Data.ByteString.Internal.ByteString]
                            r) ->
                 case w3
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww { GHC.Types.I# ww1 ->
                 Data.Attoparsec.Combinator.$w$ssepBy'1
                   @ Data.ByteString.Internal.ByteString
                   @ GHC.Types.Char
                   Lib.optfieldsp5
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                             <Data.ByteString.Internal.ByteString>_N
                             <Data.ByteString.Internal.ByteString>_R))
                   Data.Attoparsec.ByteString.Char8.space
                   @ r
                   w2
                   ww1
                   w4
                   w6 }) -}
b03acb86b2ea8d7390c3a634c11d85a7
  optfieldsp2 ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString [[GHC.Types.Char]]
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.optfieldsp6
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <[[GHC.Types.Char]]>_R)) -}
9a177c813e9ab2414298714c0dd00494
  optfieldsp3 ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString
      [Data.ByteString.Internal.ByteString]
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.optfieldsp1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <[Data.ByteString.Internal.ByteString]>_R)) -}
1610d1ce7a574bfab43c1bb75b395979
  optfieldsp5 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSLL),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wtxtfieldp @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w4 } }) -}
eebc0790287ee2e0b0f8d633839b80ee
  optfieldsp6 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [[GHC.Types.Char]]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w2 :: Data.Attoparsec.Internal.Types.State
                            Data.ByteString.Internal.ByteString)
                   (w3 :: Data.Attoparsec.Internal.Types.Pos)
                   (w4 :: Data.Attoparsec.Internal.Types.More)
                   (w5 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w6 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [[GHC.Types.Char]]
                            r) ->
                 case w3
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww { GHC.Types.I# ww1 ->
                 Data.Attoparsec.Combinator.$w$ssepBy'1
                   @ [GHC.Types.Char]
                   @ GHC.Types.Char
                   Lib.optfieldpEOL1
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                             <Data.ByteString.Internal.ByteString>_N <[GHC.Types.Char]>_R))
                   Data.Attoparsec.ByteString.Char8.space
                   @ r
                   w2
                   ww1
                   w4
                   w6 }) -}
e295fbab9cd145a2394ff891efd58192
  optidp ::
    Data.Attoparsec.ByteString.Internal.Parser
      Data.ByteString.Internal.ByteString
  {- Arity: 5,
     Strictness: <L,U><S,1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.optidp1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)) -}
1c1c44730613a1b08c0299f60ee9fb01
  optidp1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <L,U><S,1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww { GHC.Types.I# ww1 ->
                 Lib.$woptidp @ r w ww1 w2 w3 w4 }) -}
8fd3e7c403ff6a7492f5e29b5ffed2a1
  optidp10 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "XS"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
63c5b64c1760e5bab66fbaa335e2358a
  optidp2 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "NM"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
22d59c0c600819315665bcb58eef1ac5
  optidp3 ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString
      Data.ByteString.Internal.ByteString
  {- Unfolding: (Data.Attoparsec.ByteString.Char8.$fIsStringParser_$cfromString
                   @ Data.ByteString.Internal.ByteString
                   (GHC.Types.Eq#
                      @ *
                      @ *
                      @ Data.ByteString.Internal.ByteString
                      @ Data.ByteString.Internal.ByteString
                      @~ <Data.ByteString.Internal.ByteString>_N)
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Data.ByteString.Internal.ByteString>_N <Data.ByteString.Internal.ByteString>_N)
                   Lib.optidp4) -}
d4c1e7e67ee621aa8099c784344563bb
  optidp4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "AS"#) -}
85150c12398c3587986d112aa2e560f4
  optidp5 ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString
      Data.ByteString.Internal.ByteString
  {- Unfolding: (Data.Attoparsec.ByteString.Char8.$fIsStringParser_$cfromString
                   @ Data.ByteString.Internal.ByteString
                   (GHC.Types.Eq#
                      @ *
                      @ *
                      @ Data.ByteString.Internal.ByteString
                      @ Data.ByteString.Internal.ByteString
                      @~ <Data.ByteString.Internal.ByteString>_N)
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Data.ByteString.Internal.ByteString>_N <Data.ByteString.Internal.ByteString>_N)
                   Lib.optidp6) -}
acd842deeaf38029e70882672c7b8ed8
  optidp6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "NM"#) -}
e4332ad63ff6d525d4a26e8d527e15da
  optidp7 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "AS"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
af84f4167107308af9bf11727d992c3a
  optidp8 ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString
      Data.ByteString.Internal.ByteString
  {- Unfolding: (Data.Attoparsec.ByteString.Char8.$fIsStringParser_$cfromString
                   @ Data.ByteString.Internal.ByteString
                   (GHC.Types.Eq#
                      @ *
                      @ *
                      @ Data.ByteString.Internal.ByteString
                      @ Data.ByteString.Internal.ByteString
                      @~ <Data.ByteString.Internal.ByteString>_N)
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Data.ByteString.Internal.ByteString>_N <Data.ByteString.Internal.ByteString>_N)
                   Lib.optidp9) -}
b0618cf877342f9c896c181740bd3793
  optidp9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "XS"#) -}
74d1b64d7adc451b28e48402dca50126
  optnmp ::
    Data.Attoparsec.ByteString.Internal.Parser
      Data.ByteString.Internal.ByteString
  {- Arity: 5,
     Strictness: <L,U><S,1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.optnmp1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)) -}
4b68339562dd056da800fef56df95759
  optnmp1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <L,U><S,1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww { GHC.Types.I# ww1 ->
                 Lib.$woptnmp @ r w ww1 w2 w3 w4 }) -}
53085c9cef6f21b62e2b70b15d131aa2
  optxsp ::
    Data.Attoparsec.ByteString.Internal.Parser
      Data.ByteString.Internal.ByteString
  {- Arity: 5,
     Strictness: <L,U><S,1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.optfieldp2
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)) -}
25b2ba337abfe09220e20fa6122d93eb
  pairNotMapped :: Lib.SAMFlag -> GHC.Types.Bool
  RecSel Left Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLLLLLLL),1*U(A,A,A,1*U,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.SAMFlag) ->
                 case ds6 of wild { Lib.SAMFlag ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds10 }) -}
406cab9e63c4e11792238bcc4d826ce1
  paired :: Lib.AlignedRead -> GHC.Types.Bool
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLSLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 ds24 }) -}
bd728e7660ad7d225f825700141bf54c
  pairedRead :: Lib.SAMFlag -> GHC.Types.Bool
  RecSel Left Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(1*U,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.SAMFlag) ->
                 case ds6 of wild { Lib.SAMFlag ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds7 }) -}
c6bc5d17e836abc6dc1e9cb3073ece09
  parseAln ::
    Data.ByteString.Internal.ByteString
    -> Data.Either.Either GHC.Base.String Lib.AlignedRead
  {- Arity: 1, Strictness: <S(SLSS),1*U(U,U,U,U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.ByteString.Internal.ByteString) ->
                 case w of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wparseAln ww1 ww2 ww3 ww4 }) -}
17647573648c6b9658d1b0ac90e8e634
  parseAln1 :: Data.Either.Either GHC.Base.String Lib.AlignedRead
  {- Strictness: x -}
cdf3b07d2085539054ca6f58ecd58232
  parseAlns ::
    [Data.ByteString.Internal.ByteString] -> Lib.Alignments
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (as :: [Data.ByteString.Internal.ByteString]) ->
                 Data.Either.rights1
                   @ GHC.Base.String
                   @ Lib.AlignedRead
                   (GHC.Base.build
                      @ (Data.Either.Either GHC.Base.String Lib.AlignedRead)
                      (\ @ b1
                         (c1 :: Data.Either.Either GHC.Base.String Lib.AlignedRead
                                -> b1 -> b1)[OneShot]
                         (n :: b1)[OneShot] ->
                       GHC.Base.foldr
                         @ Data.ByteString.Internal.ByteString
                         @ b1
                         (GHC.Base.mapFB
                            @ (Data.Either.Either GHC.Base.String Lib.AlignedRead)
                            @ b1
                            @ Data.ByteString.Internal.ByteString
                            c1
                            Lib.parseSAM1)
                         n
                         as))) -}
db7bef82aa554c2abf88149757fa7ff0
  parseBED ::
    Data.ByteString.Internal.ByteString
    -> Data.Either.Either GHC.Base.String Lib.BedRecord
  {- Arity: 1, Strictness: <S(SLSS),1*U(U,U,U,U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.ByteString.Internal.ByteString) ->
                 case w of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wparseBED ww1 ww2 ww3 ww4 }) -}
aa7addce3b76aa15e3b8d5f7ff0a8364
  parseBED1 :: Data.Either.Either GHC.Base.String Lib.BedRecord
  {- Strictness: x -}
ef6aa28cea05720014257c66f272a2b1
  parseCigar ::
    Data.ByteString.Internal.ByteString
    -> Data.Either.Either
         GHC.Base.String
         [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
  {- Arity: 1,
     Unfolding: (Data.Attoparsec.ByteString.Internal.parseOnly
                   @ [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                   Lib.parseCigar1
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                             <Data.ByteString.Internal.ByteString>_N
                             <[(GHC.Integer.Type.Integer,
                                Data.ByteString.Internal.ByteString)]>_R))) -}
ac732808c154ec14381733859d1016b5
  parseCigar1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wparseCigar @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
7680e5a8960e180c89f3848dd7c5e964
  parseSAM :: [Data.ByteString.Internal.ByteString] -> Lib.SAM
  {- Arity: 1, Strictness: <L,1*U>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: [Data.ByteString.Internal.ByteString]) ->
                 let {
                   ds6 :: ([Data.ByteString.Internal.ByteString],
                           [Data.ByteString.Internal.ByteString])
                   = case Lib.$wgo2 w of ww { (#,#) ww1 ww2 -> (ww1, ww2) }
                 } in
                 (case ds6 of wild { (,) hdr bdytxt -> hdr },
                  case ds6 of wild { (,) hdr bdytxt ->
                  Data.Either.rights1
                    @ GHC.Base.String
                    @ Lib.AlignedRead
                    (GHC.Base.map
                       @ Data.ByteString.Internal.ByteString
                       @ (Data.Either.Either GHC.Base.String Lib.AlignedRead)
                       Lib.parseSAM1
                       bdytxt) })) -}
609dc4097c1b808c97fd34c875edfd12
  parseSAM1 ::
    Data.ByteString.Internal.ByteString
    -> Data.Either.Either GHC.Base.String Lib.AlignedRead
  {- Arity: 1,
     Unfolding: (Data.Attoparsec.ByteString.Internal.parseOnly
                   @ Lib.AlignedRead
                   Lib.alnparser1
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                             <Data.ByteString.Internal.ByteString>_N <Lib.AlignedRead>_R))) -}
c4c32a8126c794591240ac8521682041
  parsechkBED ::
    GHC.Types.Int
    -> GHC.Types.Int -> [GHC.Types.Int] -> GHC.Base.String
  {- Arity: 3, Strictness: <S(S),1*U(U)><S(S),1*U(U)><L,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: GHC.Types.Int)
                   (w2 :: [GHC.Types.Int]) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { GHC.Types.I# ww3 ->
                 Lib.$wparsechkBED ww1 ww3 w2 } }) -}
154594de4d6572ca6837c121bf81d416
  parsechkBED1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   " primer BED records parsed successfully.\n"#) -}
e056f8032f5c8e531eccef5c8cf8882e
  parsechkBED2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   " primer BED records failed to parse (see bedparsefails.log)\n"#) -}
e66a10f6d8c18012f092f5ce6c6e4da8
  parsechkMaster ::
    GHC.Types.Int
    -> GHC.Types.Int -> [GHC.Types.Int] -> GHC.Base.String
  {- Arity: 3, Strictness: <S(S),1*U(U)><S(S),1*U(U)><L,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: GHC.Types.Int)
                   (w2 :: [GHC.Types.Int]) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { GHC.Types.I# ww3 ->
                 Lib.$wparsechkMaster ww1 ww3 w2 } }) -}
73ea62b9757b7851d04823befbf7c040
  parsechkSAM ::
    GHC.Types.Int
    -> GHC.Types.Int -> [GHC.Types.Int] -> GHC.Base.String
  {- Arity: 3, Strictness: <S(S),1*U(U)><S(S),1*U(U)><L,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: GHC.Types.Int)
                   (w2 :: [GHC.Types.Int]) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { GHC.Types.I# ww3 ->
                 Lib.$wparsechkSAM ww1 ww3 w2 } }) -}
ecfb4755bd6fd033c648f81893d4a525
  parsedbl ::
    Data.ByteString.Internal.ByteString
    -> Data.Either.Either GHC.Base.String GHC.Types.Double
  {- Arity: 1,
     Unfolding: (Data.Attoparsec.ByteString.Internal.parseOnly
                   @ GHC.Types.Double
                   Data.Attoparsec.ByteString.Char8.double1
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                             <Data.ByteString.Internal.ByteString>_N <GHC.Types.Double>_R))) -}
6283f05b172de2ad7870c6ff3a7a1b22
  parseint ::
    Data.ByteString.Internal.ByteString
    -> Data.Either.Either GHC.Base.String GHC.Integer.Type.Integer
  {- Arity: 1,
     Unfolding: (Data.Attoparsec.ByteString.Internal.parseOnly
                   @ GHC.Integer.Type.Integer
                   Data.Attoparsec.ByteString.Char8.decimal6
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                             <Data.ByteString.Internal.ByteString>_N
                             <GHC.Integer.Type.Integer>_R))) -}
dd045f6e0b709b77753abe7077e97069
  parsemIDstring ::
    Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
  {- Arity: 1, Strictness: <S(LLLS),1*U(U,U,U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.ByteString.Internal.ByteString) ->
                 case w of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wparsemIDstring ww1 ww2 ww3 ww4 }) -}
ff71059529fca35d64d929ebb04b411f
  parsemIDstring1 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "NOMIDSTRING"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
a504d643a963d58fee3bafb52aac321d
  parsemIDstring2 :: [Data.ByteString.Internal.ByteString]
  {- Unfolding: (Data.Either.rights1
                   @ GHC.Base.String
                   @ Data.ByteString.Internal.ByteString
                   (GHC.Types.[]
                      @ (Data.Either.Either
                           GHC.Base.String Data.ByteString.Internal.ByteString))) -}
86ee3d3c67b84b75ecaba9f00e1d8461
  parsemIDstring3 :: GHC.Prim.Word# -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (c# :: GHC.Prim.Word#) ->
                 case c# of wild {
                   DEFAULT -> GHC.Types.False
                   9## -> GHC.Types.True
                   10## -> GHC.Types.True
                   11## -> GHC.Types.True
                   12## -> GHC.Types.True
                   13## -> GHC.Types.True
                   32## -> GHC.Types.True
                   160## -> GHC.Types.True }) -}
a628874184a1a2476647a294ccf7c0f4
  parsemIDstring_go ::
    [Data.ByteString.Internal.ByteString]
    -> [Data.Either.Either
          GHC.Base.String Data.ByteString.Internal.ByteString]
  {- Arity: 1, Strictness: <S,1*U> -}
b53d96da8877e6d2ff141e04fb88de85
  parsesignedint ::
    Data.ByteString.Internal.ByteString -> GHC.Integer.Type.Integer
  {- Arity: 1, Strictness: <L,1*U(U,U,U,U)>,
     Unfolding: (\ (i :: Data.ByteString.Internal.ByteString) ->
                 case Data.Either.rights1
                        @ GHC.Base.String
                        @ GHC.Types.Double
                        (GHC.Types.:
                           @ (Data.Either.Either GHC.Base.String GHC.Types.Double)
                           (case i of wild { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                            case Data.Attoparsec.ByteString.Char8.$wdouble
                                   @ GHC.Types.Double
                                   dt
                                   dt1
                                   dt2
                                   dt3
                                   dt3
                                   0#
                                   0#
                                   Data.Attoparsec.Internal.Types.Complete
                                   (Data.Attoparsec.ByteString.Internal.failK @ GHC.Types.Double)
                                     `cast`
                                   (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                                    ->_R <Data.Attoparsec.Internal.Types.Pos
                                          -> Data.Attoparsec.Internal.Types.More
                                          -> [GHC.Base.String]
                                          -> GHC.Base.String
                                          -> Data.Attoparsec.Internal.Types.IResult
                                               Data.ByteString.Internal.ByteString
                                               GHC.Types.Double>_R)
                                   (Data.Attoparsec.ByteString.Internal.successK @ GHC.Types.Double)
                                     `cast`
                                   (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                                    ->_R <Data.Attoparsec.Internal.Types.Pos
                                          -> Data.Attoparsec.Internal.Types.More
                                          -> GHC.Types.Double
                                          -> Data.Attoparsec.Internal.Types.IResult
                                               Data.ByteString.Internal.ByteString
                                               GHC.Types.Double>_R) of wild1 {
                              Data.Attoparsec.Internal.Types.Fail ds6 ds7 err
                              -> case ds7 of wild2 {
                                   [] -> Data.Either.Left @ GHC.Base.String @ GHC.Types.Double err
                                   : ipv ipv1
                                   -> Data.Either.Left
                                        @ [GHC.Types.Char]
                                        @ GHC.Types.Double
                                        (GHC.Base.++
                                           @ GHC.Types.Char
                                           (Data.OldList.intercalate_$spoly_go
                                              @ GHC.Types.Char
                                              ipv
                                              (Data.OldList.prependToAll
                                                 @ [GHC.Types.Char]
                                                 Lib.mapcig2
                                                 ipv1))
                                           (GHC.CString.unpackAppendCString# ": "# err)) }
                              Data.Attoparsec.Internal.Types.Partial ipv -> Lib.parsesignedint2
                              Data.Attoparsec.Internal.Types.Done ds6 a1
                              -> Data.Either.Right @ GHC.Base.String @ GHC.Types.Double a1 } })
                           (GHC.Types.[]
                              @ (Data.Either.Either GHC.Base.String GHC.Types.Double))) of wild {
                   [] -> case GHC.List.badHead ret_ty GHC.Integer.Type.Integer of {}
                   : x ds6
                   -> case x of wild1 { GHC.Types.D# x1 ->
                      case GHC.Integer.Type.decodeDoubleInteger
                             x1 of ds7 { (#,#) ipv ipv1 ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<# ipv1 0#) of wild2 {
                        GHC.Types.False -> GHC.Integer.Type.shiftLInteger ipv ipv1
                        GHC.Types.True
                        -> let {
                             s :: GHC.Prim.Int# = GHC.Prim.negateInt# ipv1
                           } in
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.># s 52#) of wild3 {
                             GHC.Types.False
                             -> case GHC.Integer.Type.integerToInt ipv of n { DEFAULT ->
                                GHC.Integer.Type.smallInteger (GHC.Prim.uncheckedIShiftRA# n s) }
                             GHC.Types.True
                             -> case GHC.Integer.Type.ltInteger#
                                       ipv
                                       Lib.checkCigarSeqlen1 of wild4 { DEFAULT ->
                                case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild4 of wild5 {
                                  GHC.Types.False -> Lib.checkCigarSeqlen1
                                  GHC.Types.True -> Lib.parsesignedint1 } } } } } } }) -}
e616a78d41e7892f82bfb6be2131ceef
  parsesignedint1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (-1) -}
2e1d1e40661d7bd8d6ef2d8e82f89040
  parsesignedint2 ::
    Data.Either.Either GHC.Base.String GHC.Types.Double
  {- Strictness: x -}
31db3891a4585909163ad180e189c915
  pintflag :: Lib.AlignedRead -> GHC.Types.Bool
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLSLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 ds28 }) -}
5df8974b9bd1b3bf93fe19fe638e8fe6
  pnext :: Lib.AlignedRead -> GHC.Integer.Type.Integer
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLSLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 ds18 }) -}
8415a405ee45798314dd023afc9763f4
  pos :: Lib.AlignedRead -> GHC.Integer.Type.Integer
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 ds10 }) -}
a440e844b18b0699bde92a6d465bbc1c
  postxposdcnt :: Lib.MidFamily -> GHC.Integer.Type.Integer
  RecSel Left Lib.MidFamily
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLSLL),1*U(A,A,A,A,A,A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MidFamily) ->
                 case ds6 of wild { Lib.MidFamily ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds14 }) -}
c90037ef29b73974e6aac5250f95abe2
  printAlignment ::
    Lib.AlignedRead -> Data.ByteString.Internal.ByteString
  {- Arity: 1,
     Strictness: <L,U(1*U,1*U(U),1*U,A,A,U,A,1*U,A,A,1*U,1*U,U,1*U,1*U,1*U,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A)> -}
131558d8bb0eb119e72aaf8d2a60f696
  printAlignmentOrHdr ::
    Lib.AlignedRead -> Data.ByteString.Internal.ByteString
  {- Arity: 1,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLSLLL),1*U(U,1*U(U),1*U,A,A,U,A,U,A,A,U,1*U,U,U,U,U,A,A,A,A,A,A,A,1*U,A,1*U,1*U,A,A,A)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.AlignedRead) ->
                 case w of ww { Lib.AlignedRead ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ->
                 Lib.$wprintAlignmentOrHdr
                   ww1
                   ww2
                   ww3
                   ww6
                   ww8
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww24
                   ww26
                   ww27 }) -}
6b98d495f5fb2f4b982c3b7c35a7dcfb
  printAlnStreamToFile ::
    Control.Monad.Trans.Resource.Internal.MonadResource m =>
    GHC.IO.FilePath
    -> Data.Conduit.Internal.Conduit.ConduitM Lib.AlignedRead c m ()
  {- Arity: 1, Strictness: <L,U(U,U,A,A,C(U))> -}
a2c0c7b40d2d2b7813fdb2e8b7d91bf3
  qname :: Lib.AlignedRead -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(1*U(U,U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 ds7 }) -}
23aa99d864a0c20e73a593830b36a981
  queryPlus :: Lib.SAMFlag -> GHC.Types.Bool
  RecSel Left Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLLLLLLL),1*U(A,A,A,A,1*U,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.SAMFlag) ->
                 case ds6 of wild { Lib.SAMFlag ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds11 }) -}
48804aeb728d2791bc2f2606ed2b3950
  rdint :: GHC.Base.String -> GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>, Unfolding: (Lib.toBinInt) -}
4304ea7b8bc007d91d61a949dd2b960b
  readSAMFlag :: GHC.Types.Int -> Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(U)>,
     Unfolding: (\ (flag1 :: GHC.Types.Int) ->
                 Lib.SAMFlag
                   (case flag1 of wild { GHC.Types.I# x# ->
                    case GHC.Prim.andI# x# 1# of wild1 {
                      DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } })
                   (case flag1 of wild { GHC.Types.I# x# ->
                    case GHC.Prim.andI# x# 2# of wild1 {
                      DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } })
                   (case flag1 of wild { GHC.Types.I# x# ->
                    case GHC.Prim.andI# x# 4# of wild1 {
                      DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } })
                   (case flag1 of wild { GHC.Types.I# x# ->
                    case GHC.Prim.andI# x# 8# of wild1 {
                      DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } })
                   (case flag1 of wild { GHC.Types.I# x# ->
                    case GHC.Prim.andI# x# 16# of wild1 {
                      DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } })
                   (case flag1 of wild { GHC.Types.I# x# ->
                    case GHC.Prim.andI# x# 32# of wild1 {
                      DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } })
                   (case flag1 of wild { GHC.Types.I# x# ->
                    case GHC.Prim.andI# x# 64# of wild1 {
                      DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } })
                   (case flag1 of wild { GHC.Types.I# x# ->
                    case GHC.Prim.andI# x# 128# of wild1 {
                      DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } })
                   (case flag1 of wild { GHC.Types.I# x# ->
                    case GHC.Prim.andI# x# 256# of wild1 {
                      DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } })
                   (case flag1 of wild { GHC.Types.I# x# ->
                    case GHC.Prim.andI# x# 512# of wild1 {
                      DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } })
                   (case flag1 of wild { GHC.Types.I# x# ->
                    case GHC.Prim.andI# x# 1024# of wild1 {
                      DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } })
                   flag1) -}
e558d3e623a84aba6c526bc750df67c6
  readint :: GHC.Base.String -> GHC.Integer.Type.Integer
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (s :: GHC.Base.String) ->
                 case Text.Read.readEither6
                        @ GHC.Integer.Type.Integer
                        (Text.ParserCombinators.ReadP.run
                           @ GHC.Integer.Type.Integer
                           Lib.readint3
                           s) of wild {
                   [] -> Lib.readint2
                   : x ds6
                   -> case ds6 of wild1 { [] -> x : ipv ipv1 -> Lib.readint1 } }) -}
387e9aa2c1db191c6670fa553e2c4e4d
  readint1 :: GHC.Integer.Type.Integer
  {- Strictness: x -}
f5ea3d36be8383fd8748f6f2a64c343d
  readint2 :: GHC.Integer.Type.Integer
  {- Strictness: x -}
801ce5ea1f16ceaa8b47b6a280eb8bed
  readint3 :: Text.ParserCombinators.ReadP.P GHC.Integer.Type.Integer
  {- Unfolding: (GHC.Read.$fReadInteger3
                   GHC.Read.$fReadInteger_$sconvertInt
                   Text.ParserCombinators.ReadPrec.minPrec
                   @ GHC.Integer.Type.Integer
                   (Text.Read.readEither5 @ GHC.Integer.Type.Integer)) -}
64917c1e5d0168b509563e9d2ebb6500
  refseq :: Lib.AlignedRead -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLSLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 ds20 }) -}
21d49c067cb5d62dc4d9d872558494de
  removeDs ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> [(GHC.Integer.Type.Integer,
         Data.ByteString.Internal.ByteString)]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (cs :: [(GHC.Integer.Type.Integer,
                            Data.ByteString.Internal.ByteString)]) ->
                 GHC.Base.build
                   @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                   (\ @ b
                      (c1 :: (GHC.Integer.Type.Integer,
                              Data.ByteString.Internal.ByteString)
                             -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                      @ b
                      (GHC.List.filterFB
                         @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                         @ b
                         c1
                         Lib.removeDs1)
                      n
                      cs)) -}
ef94da3a578a83aca52847a80b549699
  removeDs1 ::
    (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
    -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S(LS(LLLS)),1*U(A,1*U(U,U,U,U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: (GHC.Integer.Type.Integer,
                          Data.ByteString.Internal.ByteString)) ->
                 case w of ww { (,) ww1 ww2 ->
                 case ww2 of ww3 { Data.ByteString.Internal.PS ww4 ww5 ww6 ww7 ->
                 Lib.$wlvl4 ww4 ww5 ww6 ww7 } }) -}
d518bc9aaea931348d4dd380bb747476
  removeDs2 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "D"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
97dc9c4bff88d31b9b8476d92f5e3592
  rightOrDefault ::
    Data.Either.Either GHC.Base.String Lib.AlignedRead
    -> Lib.AlignedRead
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (e :: Data.Either.Either GHC.Base.String Lib.AlignedRead) ->
                 case e of wild {
                   Data.Either.Left ds6 -> Lib.defaultAlignment
                   Data.Either.Right a -> a }) -}
68b283f86f31d3d83949c35936d4f47d
  rint :: Lib.AlignedRead -> [Lib.BedRecord]
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLSLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 ds27 }) -}
9ede1dac5db742164144e50b30bc0d94
  rname :: Lib.AlignedRead -> Lib.UChr
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 ds9 }) -}
8d506d191465f54b6b1ec55737da114a
  rnext :: Lib.AlignedRead -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLSLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 ds17 }) -}
d787e3074c3bb4116baa9f5e910c1af9
  safemapcig ::
    Data.ByteString.Internal.ByteString -> GHC.Base.Maybe Lib.CigarMap
  {- Arity: 1, Strictness: <L,1*U(U,U,U,U)>,
     Unfolding: (\ (cigstr :: Data.ByteString.Internal.ByteString) ->
                 let {
                   cigtups :: [[(GHC.Integer.Type.Integer,
                                 Data.ByteString.Internal.ByteString)]]
                   = Data.Either.rights1
                       @ GHC.Base.String
                       @ [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                       (GHC.Types.:
                          @ (Data.Either.Either
                               GHC.Base.String
                               [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)])
                          (case cigstr of wild { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                           case Lib.$wparseCigar
                                  @ [(GHC.Integer.Type.Integer,
                                      Data.ByteString.Internal.ByteString)]
                                  dt
                                  dt1
                                  dt2
                                  dt3
                                  dt3
                                  0#
                                  0#
                                  Data.Attoparsec.Internal.Types.Complete
                                  (Data.Attoparsec.ByteString.Internal.failK
                                     @ [(GHC.Integer.Type.Integer,
                                         Data.ByteString.Internal.ByteString)])
                                    `cast`
                                  (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                                   ->_R <Data.Attoparsec.Internal.Types.Pos
                                         -> Data.Attoparsec.Internal.Types.More
                                         -> [GHC.Base.String]
                                         -> GHC.Base.String
                                         -> Data.Attoparsec.Internal.Types.IResult
                                              Data.ByteString.Internal.ByteString
                                              [(GHC.Integer.Type.Integer,
                                                Data.ByteString.Internal.ByteString)]>_R)
                                  (Data.Attoparsec.ByteString.Internal.successK
                                     @ [(GHC.Integer.Type.Integer,
                                         Data.ByteString.Internal.ByteString)])
                                    `cast`
                                  (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                                   ->_R <Data.Attoparsec.Internal.Types.Pos
                                         -> Data.Attoparsec.Internal.Types.More
                                         -> [(GHC.Integer.Type.Integer,
                                              Data.ByteString.Internal.ByteString)]
                                         -> Data.Attoparsec.Internal.Types.IResult
                                              Data.ByteString.Internal.ByteString
                                              [(GHC.Integer.Type.Integer,
                                                Data.ByteString.Internal.ByteString)]>_R) of wild1 {
                             Data.Attoparsec.Internal.Types.Fail ds6 ds7 err
                             -> case ds7 of wild2 {
                                  []
                                  -> Data.Either.Left
                                       @ GHC.Base.String
                                       @ [(GHC.Integer.Type.Integer,
                                           Data.ByteString.Internal.ByteString)]
                                       err
                                  : ipv ipv1
                                  -> Data.Either.Left
                                       @ [GHC.Types.Char]
                                       @ [(GHC.Integer.Type.Integer,
                                           Data.ByteString.Internal.ByteString)]
                                       (GHC.Base.++
                                          @ GHC.Types.Char
                                          (Data.OldList.intercalate_$spoly_go
                                             @ GHC.Types.Char
                                             ipv
                                             (Data.OldList.prependToAll
                                                @ [GHC.Types.Char]
                                                Lib.mapcig2
                                                ipv1))
                                          (GHC.CString.unpackAppendCString# ": "# err)) }
                             Data.Attoparsec.Internal.Types.Partial ipv -> Lib.mapcig1
                             Data.Attoparsec.Internal.Types.Done ds6 a1
                             -> Data.Either.Right
                                  @ GHC.Base.String
                                  @ [(GHC.Integer.Type.Integer,
                                      Data.ByteString.Internal.ByteString)]
                                  a1 } })
                          (GHC.Types.[]
                             @ (Data.Either.Either
                                  GHC.Base.String
                                  [(GHC.Integer.Type.Integer,
                                    Data.ByteString.Internal.ByteString)])))
                 } in
                 case GHC.List.$wlenAcc
                        @ [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                        cigtups
                        0# of ww2 { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.># ww2 0#) of wild {
                   GHC.Types.False -> GHC.Base.Nothing @ Lib.CigarMap
                   GHC.Types.True
                   -> GHC.Base.Just
                        @ [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                        (GHC.List.head
                           @ [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                           cigtups) } }) -}
6f7034464b38a1376b11b5b840f8662e
  samhdrparser ::
    Data.Attoparsec.ByteString.Internal.Parser
      Data.ByteString.Internal.ByteString
  {- Arity: 5,
     Strictness: <S(LLLSLL),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.samhdrparser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)) -}
0b16ad0ea9fb6e7e7281e08bf39eb512
  samhdrparser1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(LLLSLL),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wsamhdrparser @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
2ee9bf952a4b4f1b3b5e266d321af894
  samhdrparserEOL ::
    Data.Attoparsec.ByteString.Internal.Parser
      Data.ByteString.Internal.ByteString
  {- Arity: 5,
     Strictness: <S(LLLSLL),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.samhdrparserEOL1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)) -}
e92f0838453b486966d5c59367de23ea
  samhdrparserEOL1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(LLLSLL),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wsamhdrparserEOL
                   @ r
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww8
                   w2
                   w3
                   w4 } }) -}
fb51945cd41f1912cda7c5fb5b7b822f
  seqp ::
    Data.Attoparsec.ByteString.Internal.Parser
      Data.ByteString.Internal.ByteString
  {- Arity: 5,
     Strictness: <S(SLSSLL),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.seqp1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)) -}
a214ce813a6fcc140b460745037a9c57
  seqp1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSLL),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wseqp @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w4 } }) -}
923c727faf8cbb8a7405d7a16eef3629
  setpintflag :: Data.Foldable.Foldable t => t a -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLC(S(S))LLLLL),1*U(A,A,A,A,A,A,A,A,A,A,1*C1(U(U)),A,A,A,A,A)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   @ (t :: * -> *)
                   ($dFoldable :: Data.Foldable.Foldable t)
                   (hits :: t a) ->
                 case Data.Foldable.length
                        @ t
                        $dFoldable
                        @ a
                        hits of wild { GHC.Types.I# x ->
                 GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.># x 0#) }) -}
44918bc4489e330bc0f3f473692b12e7
  shiftcrds ::
    (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
    -> (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
    -> (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
  {- Arity: 2,
     Strictness: <L,1*U(1*U,A)><S(LS(LLLS)),1*U(A,1*U(U,U,U,U))>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: (GHC.Integer.Type.Integer,
                          Data.ByteString.Internal.ByteString))
                   (w1 :: (GHC.Integer.Type.Integer,
                           Data.ByteString.Internal.ByteString)) ->
                 case w1 of ww { (,) ww1 ww2 ->
                 case ww2 of ww3 { Data.ByteString.Internal.PS ww4 ww5 ww6 ww7 ->
                 case Lib.$wshiftcrds w ww4 ww5 ww6 ww7 of ww8 { (#,#) ww9 ww10 ->
                 (ww9, ww10) } } }) -}
49e04b1fe6de761811dc6c2d3520ddea
  showChrom :: Lib.ChromNameFormat -> Lib.UChr -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (fmt :: Lib.ChromNameFormat) (chr :: Lib.UChr) ->
                 case fmt of wild {
                   Lib.GRC
                   -> case chr of wild1 {
                        DEFAULT -> Lib.showChrom51
                        Lib.Chr1 -> Lib.showChrom50
                        Lib.Chr2 -> Lib.showChrom49
                        Lib.Chr3 -> Lib.showChrom48
                        Lib.Chr4 -> Lib.showChrom47
                        Lib.Chr5 -> Lib.showChrom46
                        Lib.Chr6 -> Lib.showChrom45
                        Lib.Chr7 -> Lib.showChrom44
                        Lib.Chr8 -> Lib.showChrom43
                        Lib.Chr9 -> Lib.showChrom42
                        Lib.Chr10 -> Lib.showChrom41
                        Lib.Chr11 -> Lib.showChrom40
                        Lib.Chr12 -> Lib.showChrom39
                        Lib.Chr13 -> Lib.showChrom38
                        Lib.Chr14 -> Lib.showChrom37
                        Lib.Chr15 -> Lib.showChrom36
                        Lib.Chr16 -> Lib.showChrom35
                        Lib.Chr17 -> Lib.showChrom34
                        Lib.Chr18 -> Lib.showChrom33
                        Lib.Chr19 -> Lib.showChrom32
                        Lib.Chr20 -> Lib.showChrom31
                        Lib.Chr21 -> Lib.showChrom30
                        Lib.Chr22 -> Lib.showChrom29
                        Lib.ChrX -> Lib.showChrom28
                        Lib.ChrY -> Lib.showChrom27
                        Lib.ChrM -> Lib.showChrom26 }
                   Lib.UCSC
                   -> case chr of wild1 {
                        DEFAULT -> Lib.showChrom51
                        Lib.Chr1 -> Lib.showChrom25
                        Lib.Chr2 -> Lib.showChrom24
                        Lib.Chr3 -> Lib.showChrom23
                        Lib.Chr4 -> Lib.showChrom22
                        Lib.Chr5 -> Lib.showChrom21
                        Lib.Chr6 -> Lib.showChrom20
                        Lib.Chr7 -> Lib.showChrom19
                        Lib.Chr8 -> Lib.showChrom18
                        Lib.Chr9 -> Lib.showChrom17
                        Lib.Chr10 -> Lib.showChrom16
                        Lib.Chr11 -> Lib.showChrom15
                        Lib.Chr12 -> Lib.showChrom14
                        Lib.Chr13 -> Lib.showChrom13
                        Lib.Chr14 -> Lib.showChrom12
                        Lib.Chr15 -> Lib.showChrom11
                        Lib.Chr16 -> Lib.showChrom10
                        Lib.Chr17 -> Lib.showChrom9
                        Lib.Chr18 -> Lib.showChrom8
                        Lib.Chr19 -> Lib.showChrom7
                        Lib.Chr20 -> Lib.showChrom6
                        Lib.Chr21 -> Lib.showChrom5
                        Lib.Chr22 -> Lib.showChrom4
                        Lib.ChrX -> Lib.showChrom3
                        Lib.ChrY -> Lib.showChrom2
                        Lib.ChrM -> Lib.showChrom1 } }) -}
8b48c69de88e8c066ca2127a21508d00
  showChrom1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "chrM"#) -}
b4aa8aed57baabf5bc2dacaf7f9cbdc4
  showChrom10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "chr16"#) -}
0e53e685b1071cfe969b9adc5433ab72
  showChrom11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "chr15"#) -}
2246016b75548f439af05b6b9e81271f
  showChrom12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "chr14"#) -}
ddbc5ebb2693a2613f93d7df9f219dc7
  showChrom13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "chr13"#) -}
ae45266bb2277ea3012f14754c17b6a8
  showChrom14 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "chr12"#) -}
fe38234b1011bf9c24f102d0bc0a6dba
  showChrom15 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "chr11"#) -}
546f0cd36a7c072456a6c342eb8f782e
  showChrom16 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "chr10"#) -}
79510ddfd8a931a42b6fa7e340b56455
  showChrom17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "chr9"#) -}
164a5cea72467d8406cdf371c644b8e1
  showChrom18 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "chr8"#) -}
6ce5e1eb4e7379c15bc8b1a32f037505
  showChrom19 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "chr7"#) -}
55535e43a2d2088250f5fa21b6a5d37d
  showChrom2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "chrY"#) -}
3f32b73d262d25bf40a019228027b1e3
  showChrom20 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "chr6"#) -}
f1b79d574de99e8f0593d76f26b9435c
  showChrom21 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "chr5"#) -}
35f4a95a8a2242db90376fcc049da8d4
  showChrom22 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "chr4"#) -}
4dff25de84b25fb0319cad460e104bde
  showChrom23 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "chr3"#) -}
382f539fe9eea761f3513294ba544ed9
  showChrom24 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "chr2"#) -}
5a57ef2381164a5c03068a7e3ec5da58
  showChrom25 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "chr1"#) -}
78679b6285bcd8fe1f80d70e673537e2
  showChrom26 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "MT"#) -}
21b42d968c10771e124828756b881259
  showChrom27 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Y"#) -}
9ca6e47a01e0b59d3bc27bfccd28dc04
  showChrom28 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "X"#) -}
8644afd4e282f60ee4900650faf8afd3
  showChrom29 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "22"#) -}
1f0dc24d9d43c04dda009539c6447c78
  showChrom3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "chrX"#) -}
cd7bb2a18a0daca2ca80887b0f7d863a
  showChrom30 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "21"#) -}
0c818b29e90542c48140bb867768edf1
  showChrom31 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "20"#) -}
90b2b5559668e5a275aa7f35b23a42aa
  showChrom32 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "19"#) -}
b4668721c91c346c04117fd4296b1c82
  showChrom33 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "18"#) -}
d4f54e0a8eeeaf4b3d144dab319b32bd
  showChrom34 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "17"#) -}
7a38599e4de37ad4fcc0034c5d81f4da
  showChrom35 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "16"#) -}
735e769ffbc2675f86c46a5576140699
  showChrom36 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "15"#) -}
31bb14c4d7ecbbac8dfd159b66e80eb6
  showChrom37 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "14"#) -}
6240a78acb4243272881b835a0ddf151
  showChrom38 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "13"#) -}
33a5a4a9b5693f0528f0be8debc326b7
  showChrom39 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "12"#) -}
4340429ca202fb84908bded6f0fd472b
  showChrom4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "chr22"#) -}
024b1da35cd20099bcef73c3e89b5c83
  showChrom40 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "11"#) -}
d2c50404db902b46ad6af2ec7c7ffe83
  showChrom41 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "10"#) -}
b05c4cd31c7983f7a960a73106561e9f
  showChrom42 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "9"#) -}
7c46569d65a3a3491205892ea85feb68
  showChrom43 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "8"#) -}
4b98d7cf856fd3e7ee8b61e0d5c4eff9
  showChrom44 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "7"#) -}
96f0482fe18ef5dfe6d8835420fba032
  showChrom45 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "6"#) -}
4f10900780dd7e9e13395c7caea32f39
  showChrom46 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "5"#) -}
3d41e356c0a80dc7bc3a540d9e281397
  showChrom47 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "4"#) -}
91e8ba34388ce0b35725acc9d042f228
  showChrom48 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "3"#) -}
e78b456e5c8c917a68ab4e97ea27c1a1
  showChrom49 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "2"#) -}
a9c306d6246a2a9cad4c5b429f3f50db
  showChrom5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "chr21"#) -}
f1844d7a847a1aca4a5cea91bf5a06cb
  showChrom50 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "1"#) -}
623f8bf5159b4d7e459f2e838e3fa825
  showChrom51 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "*"#) -}
e5679b6df5eea414c0ebf3c4f9a4b75b
  showChrom6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "chr20"#) -}
c4e20fa99408f571742229e0ef390dfd
  showChrom7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "chr19"#) -}
ee350292a3f1b2cda5e279ddb0405497
  showChrom8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "chr18"#) -}
206ec3ca9f9f82d44f63ab9c5b482c48
  showChrom9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "chr17"#) -}
7c483c484c05760085b01e41ff7fcd7c
  showcigar ::
    (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
    -> Data.ByteString.Internal.ByteString
  {- Arity: 1, Strictness: <S(SS(SLSS)),1*U(U,1*U(U,U,U,U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: (GHC.Integer.Type.Integer,
                          Data.ByteString.Internal.ByteString)) ->
                 case w of ww { (,) ww1 ww2 ->
                 case ww2 of ww3 { Data.ByteString.Internal.PS ww4 ww5 ww6 ww7 ->
                 Lib.$wshowcigar ww1 ww4 ww5 ww6 ww7 } }) -}
da2eb188952ade5bc0ffbbb23035cbc2
  skipcolon :: Data.Attoparsec.ByteString.Internal.Parser ()
  {- Arity: 5,
     Strictness: <S(SLSSLL),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.skipcolon1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <()>_R)) -}
d59826d60fd883f5870490a3bf23f417
  skipcolon1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         ()
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSLL),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            ()
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wgo3 @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w4 } }) -}
9313b62b573cb5abea3e66dd18454a76
  sndInPair :: Lib.SAMFlag -> GHC.Types.Bool
  RecSel Left Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLSLLLL),1*U(A,A,A,A,A,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.SAMFlag) ->
                 case ds6 of wild { Lib.SAMFlag ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds14 }) -}
b5fd969afbfe8498f7257ed7bca75b16
  spaces ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString [()]
  {- Arity: 5,
     Strictness: <S(SLSSLL),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,A><L,A>,
     Unfolding: InlineRule (0, True, True)
                Lib.spaces1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <[()]>_R)) -}
620e2b5debc3b0d1d6e5a736e295a74c
  spaces1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [()]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSLL),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,A><L,A>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [()]
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wspaces @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 } }) -}
075c654b0395cbbd32ffee85bd6863c4
  spaces2 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> ()
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 4 -}
c954aeb8914c95c75111ab1b1d35ad4f
  starcigarP ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString
      [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
  {- Arity: 5,
     Strictness: <S(LLLSLL),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.starcigarP1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <[(GHC.Integer.Type.Integer,
                             Data.ByteString.Internal.ByteString)]>_R)) -}
6387a715c60a01085b5cc92544c5bbc9
  starcigarP1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(LLLSLL),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wstarcigarP @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
949c3a2a5187f256be2fde93ca5a5ce9
  strand :: Lib.AlignedRead -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLSLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 ds23 }) -}
8c98a06111e41ef995b035fd3ecc15ac
  sumMatches ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> GHC.Integer.Type.Integer
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (cigs :: [(GHC.Integer.Type.Integer,
                              Data.ByteString.Internal.ByteString)]) ->
                 Lib.checkCigarSeqlen_go cigs Lib.checkCigarSeqlen1) -}
96ec57d903c574a64417bdd0a0a2bc07
  taketrim ::
    GHC.Integer.Type.Integer
    -> [(GHC.Integer.Type.Integer,
         Data.ByteString.Internal.ByteString)]
    -> [(GHC.Integer.Type.Integer,
         Data.ByteString.Internal.ByteString)]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U>,
     Unfolding: (\ (cnt :: GHC.Integer.Type.Integer)
                   (cs :: [(GHC.Integer.Type.Integer,
                            Data.ByteString.Internal.ByteString)]) ->
                 GHC.List.takeWhile
                   @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                   (\ (x :: (GHC.Integer.Type.Integer,
                             Data.ByteString.Internal.ByteString)) ->
                    case x of wild { (,) x1 ds6 ->
                    case GHC.Integer.Type.leInteger# x1 cnt of wild1 { DEFAULT ->
                    GHC.Prim.tagToEnum# @ GHC.Types.Bool wild1 } })
                   cs) -}
049d9c9fb6f79e1f6f11b39c57f05ed3
  targetbed :: Lib.MidFamily -> Lib.BedRecord
  RecSel Left Lib.MidFamily
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLS),1*U(A,A,A,A,A,A,A,A,A,1*U(U,U,U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MidFamily) ->
                 case ds6 of wild { Lib.MidFamily ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds16 }) -}
3785b08c1662c0e9743369aedba8dd6b
  tbed :: Lib.AlignedRead -> Lib.BedRecord
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLS),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U,U,U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 ds36 }) -}
0707a12da1ce33351e5dbf7ec5450d8a
  tlen :: Lib.AlignedRead -> GHC.Integer.Type.Integer
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLSLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 ds19 }) -}
5f31c7003694726e41fbb77d7c2f6ac2
  toBin :: GHC.Types.Int -> GHC.Base.String
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (n :: GHC.Types.Int) ->
                 case Data.Digits.mDigitsRev
                        @ GHC.Types.Int
                        GHC.Real.$fIntegralInt
                        Lib.toBin1
                        n of wild {
                   GHC.Base.Nothing
                   -> case Data.Maybe.fromJust1 ret_ty [GHC.Types.Char] of {}
                   GHC.Base.Just x
                   -> Lib.toBin_go
                        (GHC.List.reverse1
                           @ GHC.Types.Int
                           x
                           (GHC.Types.[] @ GHC.Types.Int)) }) -}
6f553252f7b79cdd3c92ceaba363b34f
  toBin1 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 2#) -}
f39801255a3c081008f725d502e8d280
  toBinInt :: GHC.Base.String -> GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (n :: GHC.Base.String) ->
                 case Text.Read.readEither6
                        @ GHC.Types.Int
                        (Text.ParserCombinators.ReadP.run
                           @ GHC.Types.Int
                           Lib.toBinInt3
                           n) of wild {
                   [] -> Lib.toBinInt2
                   : x ds6
                   -> case ds6 of wild1 { [] -> x : ipv ipv1 -> Lib.toBinInt1 } }) -}
4d6a4aba6941bae16e54f1d2af418f02
  toBinInt1 :: GHC.Types.Int
  {- Strictness: x -}
50aecc956ed04f65cad11a117a5f912c
  toBinInt2 :: GHC.Types.Int
  {- Strictness: x -}
1b711e08ab30bc50059d7fc21b6c8a78
  toBinInt3 :: Text.ParserCombinators.ReadP.P GHC.Types.Int
  {- Unfolding: (GHC.Read.$fReadInt3
                   GHC.Read.$fReadInt_$sconvertInt
                   Text.ParserCombinators.ReadPrec.minPrec
                   @ GHC.Types.Int
                   (Text.Read.readEither5 @ GHC.Types.Int)) -}
9e6c1088c228a0244d1869dd10defd69
  toBin_go :: [GHC.Types.Int] -> [GHC.Types.Char]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
f04adf42b3baa930059266ac3d0bbc19
  trimalignment :: Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 1,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLSLLLLLLLLLL),1*U(U,U,U,U,U,U,U(U,U,U,U),A,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.AlignedRead) ->
                 case w of ww { Lib.AlignedRead ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ->
                 Lib.$wtrimalignment
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   ww20
                   ww21
                   ww22
                   ww23
                   ww24
                   ww25
                   ww26
                   ww27
                   ww28
                   ww29
                   ww30 }) -}
4e3617a8e4a8559cce1e214a5b412685
  trimboth :: Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 1,
     Strictness: <S,1*U(U,U,U,U,U,U,U(U,U,U,U),A,U,A,U,U,U,U,U,U,U,U,U,U,U,U,A,A,A,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.AlignedRead) ->
                 case w of ww { Lib.AlignedRead ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ->
                 Lib.$wtrimboth
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww9
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   ww20
                   ww21
                   ww22
                   ww26
                   ww27
                   ww28
                   ww29
                   ww30 }) -}
e216d65315c8dc38be0c4a791599ad88
  trimdcigar ::
    Lib.AlignedRead -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLSLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 ds14 }) -}
302383d5ba49a22af98c9087f4cf11d3
  trimdcigmap :: Lib.AlignedRead -> Lib.CigarMap
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLSLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 ds16 }) -}
5ce5e0c75d483000aa1f59912b75afd7
  trimdendpos :: Lib.AlignedRead -> GHC.Integer.Type.Integer
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLSLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 ds31 }) -}
6abf44c65891b6bda74d504c18dc51f2
  trimdflag :: Lib.AlignedRead -> GHC.Types.Bool
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLSLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 ds29 }) -}
f09329da65a13f5c6c8625c73cc9264b
  trimdpos :: Lib.AlignedRead -> GHC.Integer.Type.Integer
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLSLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 ds30 }) -}
c0065c4b7f56c864ec17ea7e22cfc13a
  trimfwd :: Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 1,
     Strictness: <S,1*U(U,U,U,U,U,U,U(U,U,U,U),A,U,A,U,U,U,U,U,U,U,U,U,U,U,U,A,A,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.AlignedRead) ->
                 case w of ww { Lib.AlignedRead ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ->
                 Lib.$wtrimfwd
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww9
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   ww20
                   ww21
                   ww22
                   ww25
                   ww26
                   ww27
                   ww28
                   ww29
                   ww30 }) -}
ead2fab4841ac9c3dd69c7b72a8d7f05
  trimprimersE ::
    Lib.CMap -> Lib.CMap -> Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 3,
     Strictness: <L,1*U><L,1*U><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,A,A,A,U,U,U,U,U,U,U,U)>,
     Unfolding: InlineRule (3, True, False)
                (\ (fmap :: Lib.CMap) (rmap :: Lib.CMap) (a :: Lib.AlignedRead) ->
                 Lib.trimalignment (Lib.addprimerints fmap rmap a)) -}
866f340c0d8ecdc0913c00f5660e547f
  trimrem ::
    GHC.Integer.Type.Integer
    -> [(GHC.Integer.Type.Integer,
         Data.ByteString.Internal.ByteString)]
    -> [(GHC.Integer.Type.Integer,
         Data.ByteString.Internal.ByteString)]
  {- Arity: 2, Strictness: <L,U><S,1*U>,
     Unfolding: (\ (cnt :: GHC.Integer.Type.Integer)
                   (cs :: [(GHC.Integer.Type.Integer,
                            Data.ByteString.Internal.ByteString)]) ->
                 let {
                   rem :: [(GHC.Integer.Type.Integer,
                            Data.ByteString.Internal.ByteString)]
                   = GHC.List.dropWhile
                       @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                       (\ (x :: (GHC.Integer.Type.Integer,
                                 Data.ByteString.Internal.ByteString)) ->
                        case x of wild { (,) x1 ds6 ->
                        case GHC.Integer.Type.leInteger# x1 cnt of wild1 { DEFAULT ->
                        GHC.Prim.tagToEnum# @ GHC.Types.Bool wild1 } })
                       cs
                 } in
                 case GHC.List.$wlenAcc
                        @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                        rem
                        0# of ww2 {
                   DEFAULT
                   -> case rem of wild {
                        []
                        -> case GHC.List.badHead
                           ret_ty [(GHC.Integer.Type.Integer,
                                    Data.ByteString.Internal.ByteString)]
                           of {}
                        : x ds6
                        -> case x of wild1 { (,) ds7 y ->
                           case y of wild2 { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                           case Lib.trimrem1 of wild3 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim./=# dt3 dt7) of wild4 {
                             GHC.Types.False
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.eqAddr# dt dt4) of wild5 {
                                  GHC.Types.False
                                  -> case Data.ByteString.Internal.$wcompareBytes
                                            dt
                                            dt1
                                            dt2
                                            dt3
                                            dt4
                                            dt5
                                            dt6
                                            dt7 of wild6 {
                                       DEFAULT -> wild GHC.Types.EQ -> ds6 }
                                  GHC.Types.True
                                  -> case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.==# dt2 dt6) of wild6 {
                                       GHC.Types.False
                                       -> case Data.ByteString.Internal.$wcompareBytes
                                                 dt
                                                 dt1
                                                 dt2
                                                 dt3
                                                 dt4
                                                 dt5
                                                 dt6
                                                 dt7 of wild7 {
                                            DEFAULT -> wild GHC.Types.EQ -> ds6 }
                                       GHC.Types.True -> ds6 } }
                             GHC.Types.True -> wild } } } } }
                   0#
                   -> GHC.Types.[]
                        @ (GHC.Integer.Type.Integer,
                           Data.ByteString.Internal.ByteString) }) -}
6bbd2067383c1291330c5bc8fbd3a784
  trimrem1 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "D"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
1bb09bede3470be3fdace32c9fb3d5b2
  trimrev :: Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 1,
     Strictness: <S,1*U(U,U,U,U,U,U,U(U,U,U,U),A,U,A,U,U,U,U,U,U,U,U,U,U,U,U,A,U,A,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.AlignedRead) ->
                 case w of ww { Lib.AlignedRead ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ->
                 Lib.$wtrimrev
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww9
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   ww20
                   ww21
                   ww22
                   ww24
                   ww26
                   ww27
                   ww28
                   ww29
                   ww30 }) -}
8932fab3170f676c8e7a1a34e4c23521
  txposedcount :: Lib.MidFamily -> GHC.Integer.Type.Integer
  RecSel Left Lib.MidFamily
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLSLLL),1*U(A,A,A,A,A,A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MidFamily) ->
                 case ds6 of wild { Lib.MidFamily ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds13 }) -}
24c5cc036648cf70f452cc13d8456624
  txtfieldp ::
    Data.Attoparsec.ByteString.Internal.Parser
      Data.ByteString.Internal.ByteString
  {- Arity: 5,
     Strictness: <S(SLSSLL),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.optfieldsp5
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)) -}
e93e481c63a10299e18ad1cdccbec124
  uchrparser :: Data.Attoparsec.ByteString.Internal.Parser Lib.UChr
  {- Arity: 5,
     Strictness: <S(LLLSLL),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.uchrparser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <Lib.UChr>_R)) -}
7ee6b01c0f165a682bf9f645a3d070bd
  uchrparser1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.UChr
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(LLLSLL),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.UChr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wuchrparser @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
4958853aa74fb0fc43c0dc32746ddf8a
  updateCigB ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
  {- Arity: 3, Strictness: <L,U><L,U><L,U(U,U,U,U)> -}
a71ed4708cc1893a93548d8d08f38007
  updateCigF ::
    GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
  {- Arity: 2, Strictness: <L,U><L,U(U,U,U,U)> -}
5aa138b54183a6b104b613ba4c1019b1
  updateCigR ::
    GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
  {- Arity: 2, Strictness: <L,U><L,U(U,U,U,U)> -}
7d856b6b8f10685dc63ec9c0ccfae271
  xmid :: Lib.AlignedRead -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLSL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U,U,U,U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 ds35 }) -}
instance GHC.Enum.Bounded [Lib.ChromNameFormat]
  = Lib.$fBoundedChromNameFormat
instance GHC.Enum.Bounded [Lib.UChr] = Lib.$fBoundedUChr
instance GHC.Enum.Enum [Lib.ChromNameFormat]
  = Lib.$fEnumChromNameFormat
instance GHC.Enum.Enum [Lib.UChr] = Lib.$fEnumUChr
instance GHC.Classes.Eq [Lib.AlignedRead] = Lib.$fEqAlignedRead
instance GHC.Classes.Eq [Lib.BedRecord] = Lib.$fEqBedRecord
instance GHC.Classes.Eq [Lib.ChromNameFormat]
  = Lib.$fEqChromNameFormat
instance GHC.Classes.Eq [Lib.MasterRecord] = Lib.$fEqMasterRecord
instance GHC.Classes.Eq [Lib.MidFamily] = Lib.$fEqMidFamily
instance GHC.Classes.Eq [Lib.SAMFlag] = Lib.$fEqSAMFlag
instance GHC.Classes.Eq [Lib.UChr] = Lib.$fEqUChr
instance GHC.Generics.Generic [Lib.AlignedRead]
  = Lib.$fGenericAlignedRead
instance GHC.Generics.Generic [Lib.BedRecord]
  = Lib.$fGenericBedRecord
instance GHC.Generics.Generic [Lib.UChr] = Lib.$fGenericUChr
instance GHC.Classes.Ord [Lib.AlignedRead] = Lib.$fOrdAlignedRead
instance GHC.Classes.Ord [Lib.BedRecord] = Lib.$fOrdBedRecord
instance GHC.Classes.Ord [Lib.ChromNameFormat]
  = Lib.$fOrdChromNameFormat
instance GHC.Classes.Ord [Lib.MasterRecord] = Lib.$fOrdMasterRecord
instance GHC.Classes.Ord [Lib.MidFamily] = Lib.$fOrdMidFamily
instance GHC.Classes.Ord [Lib.UChr] = Lib.$fOrdUChr
instance GHC.Read.Read [Lib.ChromNameFormat]
  = Lib.$fReadChromNameFormat
instance GHC.Show.Show [Lib.AlignedRead] = Lib.$fShowAlignedRead
instance GHC.Show.Show [Lib.BedRecord] = Lib.$fShowBedRecord
instance GHC.Show.Show [Lib.ChromNameFormat]
  = Lib.$fShowChromNameFormat
instance GHC.Show.Show [Lib.MasterRecord] = Lib.$fShowMasterRecord
instance GHC.Show.Show [Lib.MidFamily] = Lib.$fShowMidFamily
instance GHC.Show.Show [Lib.SAMFlag] = Lib.$fShowSAMFlag
instance GHC.Show.Show [Lib.UChr] = Lib.$fShowUChr
family instance GHC.Generics.Rep [Lib.AlignedRead]
  = Lib.Rep_AlignedRead
family instance GHC.Generics.Rep [Lib.BedRecord]
  = Lib.Rep_BedRecord
family instance GHC.Generics.Rep [Lib.UChr] = Lib.Rep_UChr
"SPEC/Lib $fEq(,) @ Integer @ ByteString" [ALWAYS] forall ($dEq1 :: GHC.Classes.Eq
                                                                      Data.ByteString.Internal.ByteString)
                                                          ($dEq :: GHC.Classes.Eq
                                                                     GHC.Integer.Type.Integer)
  GHC.Classes.$fEq(,) @ GHC.Integer.Type.Integer
                      @ Data.ByteString.Internal.ByteString
                      $dEq
                      $dEq1
  = Lib.$s$fEq(,)
"SPEC/Lib fromList @ Int _" [ALWAYS] forall @ a
                                            ($dOrd :: GHC.Classes.Ord GHC.Types.Int)
  Data.Map.Strict.fromList @ GHC.Types.Int @ a $dOrd
  = Lib.$sfromList3 @ a
"SPEC/Lib fromList @ UChr" [ALWAYS] forall ($dOrd :: GHC.Classes.Ord
                                                       Lib.UChr)
  Data.Set.Base.fromList @ Lib.UChr $dOrd = Lib.$sfromList
"SPEC/Lib fromList @ UChr _" [ALWAYS] forall @ a
                                             ($dOrd :: GHC.Classes.Ord Lib.UChr)
  Data.Map.Strict.fromList @ Lib.UChr @ a $dOrd = Lib.$sfromList1 @ a
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False


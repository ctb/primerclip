
==================== FINAL INTERFACE ====================
2018-11-26 04:22:33.113897 UTC

interface primerclip-0.3.4.0-1b5t2mlHPcvBmtAJ86MXDg:Lib [family instance module] 8022
  interface hash: fdb40e0dc3d3b684efe0538832ac1509
  ABI hash: a7c4ac5533ba1aa75eeeac00d830d668
  export-list hash: 051367068f0de4ba9b36750dfd994bdb
  orphan hash: 3cd0cf76c867400f9411406db5d977dc
  flag hash: ec690ec25aa83b76b88f0ff85134ee97
  sig of: Nothing
  used TH splices: False
  where
exports:
  Lib.addprimerints
  Lib.addprimerintsPairedAln
  Lib.addtrimtag
  Lib.adjustcrds
  Lib.alignmentsetparser
  Lib.allPairedAln
  Lib.alnparser
  Lib.alnparserEOL
  Lib.alnsToPairedAln
  Lib.anyPairedAln
  Lib.anyPrimerIntAln
  Lib.bedPEparser
  Lib.bedmaplookup
  Lib.bedpeToFbed
  Lib.bedpeToRbed
  Lib.bedrecparser
  Lib.boolZeroLengthCigar
  Lib.calcMappedCount
  Lib.calcNotMappedPct
  Lib.calcRunStats
  Lib.calcTrimdToZero
  Lib.calcTrimmedPct
  Lib.calculateTrimStats
  Lib.checkChromNameMatchStatus
  Lib.checkCigarSeqlen
  Lib.checkInsertSize
  Lib.checkcigseqlen
  Lib.checkcigseqlen2
  Lib.checknonzeroCigMatch
  Lib.checkpos
  Lib.cigarP
  Lib.cigseqlenHdrPassTest
  Lib.clearNamesAndPositions
  Lib.clearNonRealCigar
  Lib.clearR1primNextFields
  Lib.clearR2primNextFields
  Lib.clip
  Lib.collectPrimIntAlns
  Lib.contractcigar
  Lib.countDs
  Lib.createprimerbedmaps
  Lib.defaultAlignment
  Lib.defaultBEDPE
  Lib.defaultBed
  Lib.defaultMasterRec
  Lib.defaultMidFam
  Lib.defaultPairedAln
  Lib.expandRefmatchedCigar
  Lib.expandcigar
  Lib.expandcigar2
  Lib.exrights
  Lib.exrights2
  Lib.filtpadassoc
  Lib.filtpadcmap
  Lib.findByQname
  Lib.flattenPairedAln
  Lib.flipClrBit
  Lib.flipSetBit
  Lib.flipTstBit
  Lib.genLogFilePath
  Lib.getAlignedLength
  Lib.getFPrimerBEDfromMaster
  Lib.getMasterFile
  Lib.getNclips
  Lib.getNonHeaderAlns
  Lib.getRPrimerBEDfromMaster
  Lib.getRight
  Lib.getRightM
  Lib.getTargetBEDfromMaster
  Lib.getTrimdcigCoordDiff
  Lib.getcigseqdiff
  Lib.getcol
  Lib.getlengths
  Lib.hdrSEalnparserEOL
  Lib.hdralnparser
  Lib.hdralnparserEOL
  Lib.hdrchromp
  Lib.headsafeAln
  Lib.intgr2int
  Lib.itypep
  Lib.ix
  Lib.justbedmaps
  Lib.justchrmaps
  Lib.mIDp
  Lib.makeMRNMexplicit
  Lib.makeTrimmedUpdates
  Lib.makebedmap
  Lib.makechrbedmap
  Lib.makeprimertups
  Lib.mapcig
  Lib.mapfst
  Lib.masterRecToTargetBED
  Lib.masterToFPrimerBED
  Lib.masterToRPrimerBED
  Lib.masterToTargetBED
  Lib.masterparser
  Lib.noclip
  Lib.nohardclip
  Lib.nomapCigToNomapRname
  Lib.nopadding
  Lib.optargs
  Lib.optasp
  Lib.optfieldp
  Lib.optfieldpEOL
  Lib.optfieldsp
  Lib.optfieldsp2
  Lib.optfieldsp3
  Lib.optfieldstotalp
  Lib.optidp
  Lib.optnmp
  Lib.optxsp
  Lib.pairedAlnToTuple
  Lib.pairedalnparser
  Lib.parseAln
  Lib.parseAlns
  Lib.parseBED
  Lib.parseBEDPE
  Lib.parseCigar
  Lib.parsePairedAlns
  Lib.parsePairedAlns'
  Lib.parsePairedAlnsFromSAM
  Lib.parsePairedAlnsOrHdr
  Lib.parseReadsetsFromSAM
  Lib.parseSingleAlnsOrHdr
  Lib.parsechkBED
  Lib.parsechkMaster
  Lib.parsechkSAM
  Lib.parsedbl
  Lib.parseint
  Lib.parsemIDstring
  Lib.parsesignedint
  Lib.primaryR1filter
  Lib.primaryR2filter
  Lib.printAlignment
  Lib.printAlignmentOrHdr
  Lib.printAlnStreamToFile
  Lib.rdint
  Lib.read1filter
  Lib.readBEDPE
  Lib.readSAM
  Lib.readSAMFlag
  Lib.readSAMnameset
  Lib.readSAMtoPairedAlns
  Lib.readint
  Lib.removeDs
  Lib.removeNonPrimaryZeroLengthAlignments
  Lib.rightOrDefaultPaird
  Lib.rightOrDefaultSingle
  Lib.safegetheader
  Lib.safemapcig
  Lib.samhdrparser
  Lib.samhdrparserEOL
  Lib.secalnp
  Lib.seqp
  Lib.setMapdProperPairBit
  Lib.setMateRname
  Lib.setProperInsertSizeRange
  Lib.setProperPairMapFlagBit
  Lib.setZeroLengthAlnFlag
  Lib.setZeroLengthPairFlag
  Lib.setpintflag
  Lib.shiftcrds
  Lib.showChrom
  Lib.showcigar
  Lib.skipcolon
  Lib.softclipbase
  Lib.softclipinterval
  Lib.spaces
  Lib.starcigarP
  Lib.sumMatches
  Lib.sumRefMatches
  Lib.sumSeqMatches
  Lib.sumSoftClipCigOps
  Lib.sumSoftClipCigOpsDepr
  Lib.taketrim
  Lib.toBin
  Lib.toBinInt
  Lib.trimPairedAlns
  Lib.trimalignment
  Lib.trimboth
  Lib.trimfwd
  Lib.trimprimerPairsE
  Lib.trimprimersE
  Lib.trimrem
  Lib.trimrev
  Lib.txtfieldp
  Lib.uchrparser
  Lib.updateCigB
  Lib.updateCigF
  Lib.updateCigR
  Lib.updatePairedAlnTrimdFields
  Lib.updateR1nextfields
  Lib.updateR2nextfields
  Lib.updateTrimdAlnFields
  Lib.updateTrimdPairFields
  Lib.updateZeroTrimdPairFields
  Lib.updateZeroTrimdPairFlags
  Lib.validateTrimdPairAlnStart
  Lib.writeRunStats
  Lib.AlignedRead{Lib.AlignedRead basequal cigar cigmap endpos fint flag headerstrings isheader mapped mapqual mid optfields paired pintflag pnext pos qname refseq rint rname rnext strand tbed tlen trimdToZeroLength trimdcigar trimdcigmap trimdendpos trimdflag trimdpos xmid}
  Lib.Alignments
  Lib.BED
  Lib.BEDPE{Lib.BEDPE bedpename chr1 chr2 end1 end2 start1 start2}
  Lib.BedMap
  Lib.BedRecord{Lib.BedRecord bedchr bedend bedname bedstart}
  Lib.CMap
  Lib.ChromNameFormat{Lib.GRC Lib.UCSC}
  Lib.CigarMap
  Lib.CigarMod{Lib.CigarMod currpos remCigOps softclipOps targetpos trimcomplete}
  Lib.Header
  Lib.MasterRecord{Lib.MasterRecord mampname mchrom mforend mforname mforseq mforstart mrevend mrevname mrevseq mrevstart mtargetend mtargetstart}
  Lib.MidFamily{Lib.MidFamily alncount alnend alns alnstart chrom midseq negtxposdcnt postxposdcnt targetbed txposedcount}
  Lib.Opts{Lib.Opts bedpeformat incoordsfile insamfile outfilename}
  Lib.PairedAln{Lib.PairedAln r1prim r1secs r2prim r2secs}
  Lib.RunStats{Lib.RunStats alnsMapped alnsTotal alnsTrimd alnsTrimdToZero mappedPct trimmedPct}
  Lib.SAM
  Lib.SAMFlag{Lib.SAMFlag dupRead failedQC fstInPair intflag mateMapped mateNeg notMapped notPrimary pairNotMapped pairedRead queryPlus sndInPair}
  Lib.UChr{Lib.C1 Lib.C10 Lib.C11 Lib.C12 Lib.C13 Lib.C14 Lib.C15 Lib.C16 Lib.C17 Lib.C18 Lib.C19 Lib.C2 Lib.C20 Lib.C21 Lib.C22 Lib.C3 Lib.C4 Lib.C5 Lib.C6 Lib.C7 Lib.C8 Lib.C9 Lib.CMT Lib.CX Lib.CY Lib.Chr1 Lib.Chr10 Lib.Chr11 Lib.Chr12 Lib.Chr13 Lib.Chr14 Lib.Chr15 Lib.Chr16 Lib.Chr17 Lib.Chr18 Lib.Chr19 Lib.Chr2 Lib.Chr20 Lib.Chr21 Lib.Chr22 Lib.Chr3 Lib.Chr4 Lib.Chr5 Lib.Chr6 Lib.Chr7 Lib.Chr8 Lib.Chr9 Lib.ChrM Lib.ChrX Lib.ChrY Lib.GL000191P1 Lib.GL000192P1 Lib.GL000193P1 Lib.GL000194P1 Lib.GL000195P1 Lib.GL000196P1 Lib.GL000197P1 Lib.GL000198P1 Lib.GL000199P1 Lib.GL000200P1 Lib.GL000201P1 Lib.GL000202P1 Lib.GL000203P1 Lib.GL000204P1 Lib.GL000205P1 Lib.GL000206P1 Lib.GL000207P1 Lib.GL000208P1 Lib.GL000209P1 Lib.GL000210P1 Lib.GL000211P1 Lib.GL000212P1 Lib.GL000213P1 Lib.GL000214P1 Lib.GL000215P1 Lib.GL000216P1 Lib.GL000217P1 Lib.GL000218P1 Lib.GL000219P1 Lib.GL000220P1 Lib.GL000221P1 Lib.GL000222P1 Lib.GL000223P1 Lib.GL000224P1 Lib.GL000225P1 Lib.GL000226P1 Lib.GL000227P1 Lib.GL000228P1 Lib.GL000229P1 Lib.GL000230P1 Lib.GL000231P1 Lib.GL000232P1 Lib.GL000233P1 Lib.GL000234P1 Lib.GL000235P1 Lib.GL000236P1 Lib.GL000237P1 Lib.GL000238P1 Lib.GL000239P1 Lib.GL000240P1 Lib.GL000241P1 Lib.GL000242P1 Lib.GL000243P1 Lib.GL000244P1 Lib.GL000245P1 Lib.GL000246P1 Lib.GL000247P1 Lib.GL000248P1 Lib.GL000249P1 Lib.NC_007605 Lib.NONE}
module dependencies:
package dependencies: QuickCheck-2.10.1 ansi-terminal-0.8.0.2
                      ansi-wl-pprint-0.6.8.2 array-0.5.2.0 attoparsec-0.13.2.2
                      base-4.10.1.0 binary-0.8.5.1 bytestring-0.10.8.2 colour-2.3.4
                      conduit-1.3.0 conduit-extra-1.3.0 containers-0.5.10.2
                      deepseq-1.4.3.0 digits-0.3.1 directory-1.3.0.2 exceptions-0.8.3
                      filepath-1.4.1.2 ghc-boot-th-8.2.2 ghc-prim-0.5.1.1
                      hashable-1.2.7.0 integer-gmp-1.0.1.0 integer-logarithms-1.0.2.1
                      mono-traversable-1.0.8.1 mtl-2.2.2 optparse-applicative-0.14.2.0
                      pretty-1.1.3.3 primitive-0.6.3.0 process-1.6.1.0 random-1.1
                      resourcet-1.2.0 scientific-0.3.5.2 split-0.2.3.3 stm-2.4.5.0
                      template-haskell-2.12.0.0 text-1.2.3.0 tf-random-0.5 time-1.8.0.2
                      transformers-0.5.2.0 unix-2.7.2.2 unliftio-core-0.1.1.0
                      unordered-containers-0.2.9.0 vector-0.12.0.1
                      vector-algorithms-0.7.0.1
orphans: colour-2.3.4:Data.Colour
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         vector-0.12.0.1:Data.Vector.Unboxed
         hashable-1.2.7.0:Data.Hashable.Generic
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         text-1.2.3.0:Data.Text.Lazy text-1.2.3.0:Data.Text
         binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.0:Data.Text.Show stm-2.4.5.0:Control.Monad.STM
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         transformers-0.5.2.0:Control.Monad.Trans.Error
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian base-4.10.1.0:GHC.Float
         base-4.10.1.0:GHC.Base
family instance modules: attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.10.1.0:Control.Applicative base-4.10.1.0:Data.Complex
                         base-4.10.1.0:Data.Either base-4.10.1.0:Data.Functor.Compose
                         base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity
                         base-4.10.1.0:Data.Functor.Product base-4.10.1.0:Data.Functor.Sum
                         base-4.10.1.0:Data.List.NonEmpty base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Semigroup base-4.10.1.0:Data.Type.Equality
                         base-4.10.1.0:Data.Version base-4.10.1.0:Data.Void
                         base-4.10.1.0:GHC.Exts base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats
                         conduit-1.3.0:Data.Conduit.Internal.Conduit
                         conduit-1.3.0:Data.Conduit.Internal.Pipe
                         containers-0.5.10.2:Data.IntMap.Internal
                         containers-0.5.10.2:Data.IntSet.Internal
                         containers-0.5.10.2:Data.Map.Internal
                         containers-0.5.10.2:Data.Sequence.Internal
                         containers-0.5.10.2:Data.Set.Internal containers-0.5.10.2:Data.Tree
                         ghc-boot-th-8.2.2:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.2.2:GHC.LanguageExtensions.Type
                         mono-traversable-1.0.8.1:Data.MonoTraversable
                         mono-traversable-1.0.8.1:Data.NonNull
                         mono-traversable-1.0.8.1:Data.Sequences
                         pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         resourcet-1.2.0:Control.Monad.Trans.Resource.Internal
                         template-haskell-2.12.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.0:Data.Text text-1.2.3.0:Data.Text.Lazy
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
import  -/  attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8 75eb155dd50974f74df242dc5b5f3c20
import  -/  attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Internal b41e9045dc19fd5d4a09f150cf85448c
import  -/  attoparsec-0.13.2.2:Data.Attoparsec.Combinator a2926f2a8e89c11f606f9f2788d9a9cb
import  -/  base-4.10.1.0:Control.Applicative 99577a9c463ffe4790a1d37547a345bd
import  -/  base-4.10.1.0:Control.Exception c134ea327d158f2eebf26e12a1d4ad47
import  -/  base-4.10.1.0:Control.Monad ebed2e8e7444944e0c1d827c6faf40a4
import  -/  base-4.10.1.0:Control.Monad.IO.Class 9d78cd0f73a837f3c00753bd212b9f2c
import  -/  base-4.10.1.0:Data.Bits e0790a03e1e51e2d053ee3f563937f85
import  -/  base-4.10.1.0:Data.Char fe4e3458190deeac19969ce15e33bed9
import  -/  base-4.10.1.0:Data.Either d7dae5d9bf298dee616e465c14b5d60e
import  -/  base-4.10.1.0:Data.Foldable 9ed87455d68e87ff2b5b8725eae9897e
import  -/  base-4.10.1.0:Data.Functor 2ffda4f936b8f474394d93205750aff3
import  -/  base-4.10.1.0:Data.List 4ab7fa2a1b87502b23af891a384f0506
import  -/  base-4.10.1.0:Data.Maybe 07738c5485acb328136bb15596f8b845
import  -/  base-4.10.1.0:Data.Monoid c0108b166e27f747671c7fe4ffb11019
import  -/  base-4.10.1.0:Data.OldList 555420b092ca8cf0a8f9666bc0e07dcf
import  -/  base-4.10.1.0:Data.Ord a6789a2a9217f3ca764324b27739797e
import  -/  base-4.10.1.0:Data.Semigroup 92914a5d9e5176805d2364209875f6ed
import  -/  base-4.10.1.0:Data.Tuple 8fa1305aa5032ea35e2a54fa5f1e78f9
import  -/  base-4.10.1.0:GHC.Base 782fd99b5e36f3698a26179a49afca64
import  -/  base-4.10.1.0:GHC.Enum 5a1ba50c23f92f669e01f8955f202337
import  -/  base-4.10.1.0:GHC.Err 514b3a24b22e9d7d731c2d0d02d10842
import  -/  base-4.10.1.0:GHC.Generics c2a8006cab1f0055555a6c72607a574b
import  -/  base-4.10.1.0:GHC.IO e261d8b68ccf81a359626fa520b57d1d
import  -/  base-4.10.1.0:GHC.List e3060fbeb44ce0038e6b4dedf2dd9cf1
import  -/  base-4.10.1.0:GHC.Num 6e1dc5d36d99a802edb39b92bb1923b8
import  -/  base-4.10.1.0:GHC.Read 0abfbe8a9b13202e313efc3bc2f2a3e6
import  -/  base-4.10.1.0:GHC.Real 3c62834bc25e762eabc44149c4cc142d
import  -/  base-4.10.1.0:GHC.Show 0a8ce2b5e533d1c2cfb7954e6736be45
import  -/  base-4.10.1.0:Prelude 31945b7d0084063347fc52506d3a4020
import  -/  base-4.10.1.0:System.IO 6e5bb580370d8d71dc5888f723cea4b4
import  -/  base-4.10.1.0:Text.ParserCombinators.ReadPrec 043a8dc96e82690dac5a09fb8e44e9bc
import  -/  base-4.10.1.0:Text.Read 9e862e012b3c71e83cb56fb456188f44
import  -/  base-4.10.1.0:Text.Read.Lex aff0420c14a3e1f3bb0ee26cd0646682
import  -/  bytestring-0.10.8.2:Data.ByteString 85ba2d590aae1a6d189ceb9a0f58e145
import  -/  bytestring-0.10.8.2:Data.ByteString.Char8 ad3bf7657730adeac35cbb427299ea44
import  -/  bytestring-0.10.8.2:Data.ByteString.Internal e154f5ecf6a3cd0a27df93e86ed481d7
import  -/  conduit-1.3.0:Conduit 9ca771118110a6d629536df1c70cfb0c
import  -/  conduit-1.3.0:Data.Conduit.Combinators 879a6b83242087f07896e92d4cc7d0e9
import  -/  conduit-1.3.0:Data.Conduit.Combinators.Unqualified bb15af616225f302b124833678fb569b
import  -/  conduit-1.3.0:Data.Conduit.Internal.Conduit 2e849a9a0bf7ebe9e17389aa7226446c
import  -/  conduit-extra-1.3.0:Data.Conduit.Attoparsec b4907557e083a7d91d1ea01e01aba9c2
import  -/  containers-0.5.10.2:Data.IntMap.Internal 924624ced78a2cd70ed8353c7a6b8af9
import  -/  containers-0.5.10.2:Data.IntMap.Strict 7892d40daae1f0118150f998d9c28567
import  -/  containers-0.5.10.2:Data.Map.Internal 33ddbf5aa8c0f2ab26fb6dc5be1b1f4c
import  -/  containers-0.5.10.2:Data.Map.Strict 194f5b0a9785a91a43562790aa6787fc
import  -/  containers-0.5.10.2:Data.Map.Strict.Internal 63726a19357ba6ce3637c9bcf7d38b1e
import  -/  containers-0.5.10.2:Data.Set e0f44b836a00cf82340abfec45686444
import  -/  containers-0.5.10.2:Data.Set.Internal b207250e4d0053f17172bfafbcd5c82f
import  -/  digits-0.3.1:Data.Digits 8f964f24c076b1099e4c6ff0295f6910
import  -/  ghc-prim-0.5.1.1:GHC.Classes 93e2660065dce9329577e83d76d8f0d4
import  -/  ghc-prim-0.5.1.1:GHC.Types b1fd0716441595db508c1a74387bf394
import  -/  integer-gmp-1.0.1.0:GHC.Integer.Type 5fa81108482c33b62ec3ac7464eece96
import  -/  optparse-applicative-0.14.2.0:Options.Applicative 93a6ca444e605eb4e5fada3ed41aa455
import  -/  optparse-applicative-0.14.2.0:Options.Applicative.Builder 9b4b35d95a3739ae48e6b42cbe90c8ed
import  -/  optparse-applicative-0.14.2.0:Options.Applicative.Types a7931747d5b2cb3c7d4ffdf50f620d39
import  -/  process-1.6.1.0:System.Process a8c75295bfaf5f54dccd3871224e84a9
import  -/  resourcet-1.2.0:Control.Monad.Trans.Resource.Internal e6300240cc2a919676aa0b3ac9042d06
import  -/  vector-0.12.0.1:Data.Vector 85d00fd11fb6ff56955506f14ad48bd6
abb052827d9625d097890f754ea8e0e8
  $fBoundedChromNameFormat :: GHC.Enum.Bounded Lib.ChromNameFormat
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:. @ Lib.ChromNameFormat Lib.GRC Lib.UCSC -}
738096376958aedf685c1b59f577962f
  $fBoundedUChr :: GHC.Enum.Bounded Lib.UChr
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:. @ Lib.UChr Lib.C1 Lib.NONE -}
abb052827d9625d097890f754ea8e0e8
  $fEnumChromNameFormat :: GHC.Enum.Enum Lib.ChromNameFormat
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.ChromNameFormat
                  Lib.$fEnumChromNameFormat_$csucc
                  Lib.$fEnumChromNameFormat_$cpred
                  Lib.$fEnumChromNameFormat_$ctoEnum
                  Lib.$fEnumChromNameFormat_$cfromEnum
                  Lib.$fEnumChromNameFormat_$cenumFrom
                  Lib.$fEnumChromNameFormat_$cenumFromThen
                  Lib.$fEnumChromNameFormat_$cenumFromTo
                  Lib.$fEnumChromNameFormat_$cenumFromThenTo -}
abb052827d9625d097890f754ea8e0e8
  $fEnumChromNameFormat1 :: [Lib.ChromNameFormat]
  {- Unfolding: (Lib.$fEnumChromNameFormat_go2 1#) -}
abb052827d9625d097890f754ea8e0e8
  $fEnumChromNameFormat2 :: [Lib.ChromNameFormat]
  {- Unfolding: (Lib.$fEnumChromNameFormat_go2 0#) -}
abb052827d9625d097890f754ea8e0e8
  $fEnumChromNameFormat3 :: Lib.ChromNameFormat
  {- Strictness: x -}
abb052827d9625d097890f754ea8e0e8
  $fEnumChromNameFormat4 :: Lib.ChromNameFormat
  {- Strictness: x -}
abb052827d9625d097890f754ea8e0e8
  $fEnumChromNameFormat_$cenumFrom ::
    Lib.ChromNameFormat -> [Lib.ChromNameFormat]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (a :: Lib.ChromNameFormat) ->
                 case a of wild {
                   Lib.GRC -> Lib.$fEnumChromNameFormat2
                   Lib.UCSC -> Lib.$fEnumChromNameFormat1 }) -}
abb052827d9625d097890f754ea8e0e8
  $fEnumChromNameFormat_$cenumFromThen ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat -> [Lib.ChromNameFormat]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
abb052827d9625d097890f754ea8e0e8
  $fEnumChromNameFormat_$cenumFromThenTo ::
    Lib.ChromNameFormat
    -> Lib.ChromNameFormat
    -> Lib.ChromNameFormat
    -> [Lib.ChromNameFormat]
  {- Arity: 3, Strictness: <S,1*U><S,1*U><S,1*U> -}
abb052827d9625d097890f754ea8e0e8
  $fEnumChromNameFormat_$cenumFromTo ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat -> [Lib.ChromNameFormat]
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (x :: Lib.ChromNameFormat)
                   (y :: Lib.ChromNameFormat) ->
                 let {
                   $j :: GHC.Prim.Int# -> [Lib.ChromNameFormat]
                     <join 1> {- Arity: 1, Strictness: <S,U> -}
                   = \ (a# :: GHC.Prim.Int#)[OneShot] ->
                     case y of wild {
                       Lib.GRC
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># a# 0#) of wild1 {
                            GHC.Types.False -> Lib.$fEnumChromNameFormat_go1 a#
                            GHC.Types.True -> GHC.Types.[] @ Lib.ChromNameFormat }
                       Lib.UCSC
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># a# 1#) of wild1 {
                            GHC.Types.False -> Lib.$fEnumChromNameFormat_go a#
                            GHC.Types.True -> GHC.Types.[] @ Lib.ChromNameFormat } }
                 } in
                 case x of wild { Lib.GRC -> $j 0# Lib.UCSC -> $j 1# }) -}
abb052827d9625d097890f754ea8e0e8
  $fEnumChromNameFormat_$cfromEnum ::
    Lib.ChromNameFormat -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: Lib.ChromNameFormat) ->
                 case a of wild {
                   Lib.GRC -> GHC.Types.I# 0# Lib.UCSC -> GHC.Types.I# 1# }) -}
abb052827d9625d097890f754ea8e0e8
  $fEnumChromNameFormat_$cpred ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: Lib.ChromNameFormat) ->
                 case a of wild {
                   Lib.GRC -> Lib.$fEnumChromNameFormat3 Lib.UCSC -> Lib.GRC }) -}
abb052827d9625d097890f754ea8e0e8
  $fEnumChromNameFormat_$csucc ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: Lib.ChromNameFormat) ->
                 case a of wild {
                   Lib.GRC -> Lib.UCSC Lib.UCSC -> Lib.$fEnumChromNameFormat4 }) -}
abb052827d9625d097890f754ea8e0e8
  $fEnumChromNameFormat_$ctoEnum ::
    GHC.Types.Int -> Lib.ChromNameFormat
  {- Arity: 1, Strictness: <S(S),1*U(U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Types.Int) ->
                 case w of ww { GHC.Types.I# ww1 -> Lib.$w$ctoEnum ww1 }) -}
abb052827d9625d097890f754ea8e0e8
  $fEnumChromNameFormat_go :: GHC.Prim.Int# -> [Lib.ChromNameFormat]
  {- Arity: 1, Strictness: <L,U>m2 -}
abb052827d9625d097890f754ea8e0e8
  $fEnumChromNameFormat_go1 :: GHC.Prim.Int# -> [Lib.ChromNameFormat]
  {- Arity: 1, Strictness: <L,U>m2 -}
abb052827d9625d097890f754ea8e0e8
  $fEnumChromNameFormat_go2 :: GHC.Prim.Int# -> [Lib.ChromNameFormat]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m2 -}
738096376958aedf685c1b59f577962f
  $fEnumUChr :: GHC.Enum.Enum Lib.UChr
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.UChr
                  Lib.$fEnumUChr_$csucc
                  Lib.$fEnumUChr_$cpred
                  Lib.$fEnumUChr_$ctoEnum
                  Lib.$fEnumUChr_$cfromEnum
                  Lib.$fEnumUChr_$cenumFrom
                  Lib.$fEnumUChr_$cenumFromThen
                  Lib.$fEnumUChr_$cenumFromTo
                  Lib.$fEnumUChr_$cenumFromThenTo -}
738096376958aedf685c1b59f577962f
  $fEnumUChr1 :: Lib.UChr
  {- Strictness: x -}
738096376958aedf685c1b59f577962f
  $fEnumUChr2 :: Lib.UChr
  {- Strictness: x -}
738096376958aedf685c1b59f577962f
  $fEnumUChr_$cenumFrom :: Lib.UChr -> [Lib.UChr]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,U>,
     Unfolding: (\ (a :: Lib.UChr) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr a of a# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.># a# 110#) of wild {
                   GHC.Types.False -> Lib.$fEnumUChr_go a#
                   GHC.Types.True -> GHC.Types.[] @ Lib.UChr } }) -}
738096376958aedf685c1b59f577962f
  $fEnumUChr_$cenumFromThen :: Lib.UChr -> Lib.UChr -> [Lib.UChr]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: (\ (a :: Lib.UChr) (b :: Lib.UChr) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr a of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr b of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.># a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# b# a#) of wild1 {
                        GHC.Types.False
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.># 110# b#) of wild2 {
                             GHC.Types.False
                             -> GHC.Types.:
                                  @ Lib.UChr
                                  (GHC.Prim.tagToEnum# @ Lib.UChr a#)
                                  (let {
                                     delta :: GHC.Prim.Int# = GHC.Prim.-# b# a#
                                   } in
                                   let {
                                     y' :: GHC.Prim.Int# = GHC.Prim.-# 110# delta
                                   } in
                                   letrec {
                                     go_dn :: GHC.Prim.Int# -> [Lib.UChr]
                                       {- Arity: 1, Strictness: <S,U> -}
                                     = \ (x :: GHC.Prim.Int#) ->
                                       case GHC.Prim.tagToEnum#
                                              @ GHC.Types.Bool
                                              (GHC.Prim.<# x y') of wild3 {
                                         GHC.Types.False
                                         -> GHC.Types.:
                                              @ Lib.UChr
                                              (GHC.Prim.tagToEnum# @ Lib.UChr x)
                                              (go_dn (GHC.Prim.+# x delta))
                                         GHC.Types.True
                                         -> GHC.Types.:
                                              @ Lib.UChr
                                              (GHC.Prim.tagToEnum# @ Lib.UChr x)
                                              (GHC.Types.[] @ Lib.UChr) }
                                   } in
                                   go_dn b#)
                             GHC.Types.True
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.># 110# a#) of wild3 {
                                  GHC.Types.False
                                  -> GHC.Types.:
                                       @ Lib.UChr
                                       (GHC.Prim.tagToEnum# @ Lib.UChr a#)
                                       (GHC.Types.[] @ Lib.UChr)
                                  GHC.Types.True -> GHC.Types.[] @ Lib.UChr } }
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<# 110# b#) of wild2 {
                             GHC.Types.False
                             -> GHC.Types.:
                                  @ Lib.UChr
                                  (GHC.Prim.tagToEnum# @ Lib.UChr a#)
                                  (let {
                                     delta :: GHC.Prim.Int# = GHC.Prim.-# b# a#
                                   } in
                                   let {
                                     y' :: GHC.Prim.Int# = GHC.Prim.-# 110# delta
                                   } in
                                   letrec {
                                     go_up :: GHC.Prim.Int# -> [Lib.UChr]
                                       {- Arity: 1, Strictness: <S,U> -}
                                     = \ (x :: GHC.Prim.Int#) ->
                                       case GHC.Prim.tagToEnum#
                                              @ GHC.Types.Bool
                                              (GHC.Prim.># x y') of wild3 {
                                         GHC.Types.False
                                         -> GHC.Types.:
                                              @ Lib.UChr
                                              (GHC.Prim.tagToEnum# @ Lib.UChr x)
                                              (go_up (GHC.Prim.+# x delta))
                                         GHC.Types.True
                                         -> GHC.Types.:
                                              @ Lib.UChr
                                              (GHC.Prim.tagToEnum# @ Lib.UChr x)
                                              (GHC.Types.[] @ Lib.UChr) }
                                   } in
                                   go_up b#)
                             GHC.Types.True
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.<# 110# a#) of wild3 {
                                  GHC.Types.False
                                  -> GHC.Types.:
                                       @ Lib.UChr
                                       (GHC.Prim.tagToEnum# @ Lib.UChr a#)
                                       (GHC.Types.[] @ Lib.UChr)
                                  GHC.Types.True -> GHC.Types.[] @ Lib.UChr } } }
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# b# a#) of wild1 {
                        GHC.Types.False
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.># 0# b#) of wild2 {
                             GHC.Types.False
                             -> GHC.Types.:
                                  @ Lib.UChr
                                  (GHC.Prim.tagToEnum# @ Lib.UChr a#)
                                  (let {
                                     delta :: GHC.Prim.Int# = GHC.Prim.-# b# a#
                                   } in
                                   let {
                                     y' :: GHC.Prim.Int# = GHC.Prim.-# 0# delta
                                   } in
                                   letrec {
                                     go_dn :: GHC.Prim.Int# -> [Lib.UChr]
                                       {- Arity: 1, Strictness: <S,U> -}
                                     = \ (x :: GHC.Prim.Int#) ->
                                       case GHC.Prim.tagToEnum#
                                              @ GHC.Types.Bool
                                              (GHC.Prim.<# x y') of wild3 {
                                         GHC.Types.False
                                         -> GHC.Types.:
                                              @ Lib.UChr
                                              (GHC.Prim.tagToEnum# @ Lib.UChr x)
                                              (go_dn (GHC.Prim.+# x delta))
                                         GHC.Types.True
                                         -> GHC.Types.:
                                              @ Lib.UChr
                                              (GHC.Prim.tagToEnum# @ Lib.UChr x)
                                              (GHC.Types.[] @ Lib.UChr) }
                                   } in
                                   go_dn b#)
                             GHC.Types.True
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.># 0# a#) of wild3 {
                                  GHC.Types.False
                                  -> GHC.Types.:
                                       @ Lib.UChr
                                       (GHC.Prim.tagToEnum# @ Lib.UChr a#)
                                       (GHC.Types.[] @ Lib.UChr)
                                  GHC.Types.True -> GHC.Types.[] @ Lib.UChr } }
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<# 0# b#) of wild2 {
                             GHC.Types.False
                             -> GHC.Types.:
                                  @ Lib.UChr
                                  (GHC.Prim.tagToEnum# @ Lib.UChr a#)
                                  (let {
                                     delta :: GHC.Prim.Int# = GHC.Prim.-# b# a#
                                   } in
                                   let {
                                     y' :: GHC.Prim.Int# = GHC.Prim.-# 0# delta
                                   } in
                                   letrec {
                                     go_up :: GHC.Prim.Int# -> [Lib.UChr]
                                       {- Arity: 1, Strictness: <S,U> -}
                                     = \ (x :: GHC.Prim.Int#) ->
                                       case GHC.Prim.tagToEnum#
                                              @ GHC.Types.Bool
                                              (GHC.Prim.># x y') of wild3 {
                                         GHC.Types.False
                                         -> GHC.Types.:
                                              @ Lib.UChr
                                              (GHC.Prim.tagToEnum# @ Lib.UChr x)
                                              (go_up (GHC.Prim.+# x delta))
                                         GHC.Types.True
                                         -> GHC.Types.:
                                              @ Lib.UChr
                                              (GHC.Prim.tagToEnum# @ Lib.UChr x)
                                              (GHC.Types.[] @ Lib.UChr) }
                                   } in
                                   go_up b#)
                             GHC.Types.True
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.<# 0# a#) of wild3 {
                                  GHC.Types.False
                                  -> GHC.Types.:
                                       @ Lib.UChr
                                       (GHC.Prim.tagToEnum# @ Lib.UChr a#)
                                       (GHC.Types.[] @ Lib.UChr)
                                  GHC.Types.True -> GHC.Types.[] @ Lib.UChr } } } } } }) -}
738096376958aedf685c1b59f577962f
  $fEnumUChr_$cenumFromThenTo ::
    Lib.UChr -> Lib.UChr -> Lib.UChr -> [Lib.UChr]
  {- Arity: 3, Strictness: <S,U><S,U><S,U> -}
738096376958aedf685c1b59f577962f
  $fEnumUChr_$cenumFromTo :: Lib.UChr -> Lib.UChr -> [Lib.UChr]
  {- Arity: 2, Strictness: <S,U><S,U>,
     Unfolding: (\ (x :: Lib.UChr) (y :: Lib.UChr) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr y of a#1 { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.># a# a#1) of wild {
                   GHC.Types.False
                   -> letrec {
                        go16 :: GHC.Prim.Int# -> [Lib.UChr]
                          {- Arity: 1, Strictness: <L,U> -}
                        = \ (x1 :: GHC.Prim.Int#) ->
                          GHC.Types.:
                            @ Lib.UChr
                            (case GHC.Prim.tagToEnum#
                                    @ GHC.Types.Bool
                                    (GHC.Prim.>=# x1 0#) of wild1 {
                               GHC.Types.False -> Lib.$wlvl1 x1
                               GHC.Types.True
                               -> case GHC.Prim.tagToEnum#
                                         @ GHC.Types.Bool
                                         (GHC.Prim.<=# x1 110#) of wild2 {
                                    GHC.Types.False -> Lib.$wlvl1 x1
                                    GHC.Types.True -> GHC.Prim.tagToEnum# @ Lib.UChr x1 } })
                            (case GHC.Prim.tagToEnum#
                                    @ GHC.Types.Bool
                                    (GHC.Prim.==# x1 a#1) of wild1 {
                               GHC.Types.False -> go16 (GHC.Prim.+# x1 1#)
                               GHC.Types.True -> GHC.Types.[] @ Lib.UChr })
                      } in
                      go16 a#
                   GHC.Types.True -> GHC.Types.[] @ Lib.UChr } } }) -}
738096376958aedf685c1b59f577962f
  $fEnumUChr_$cfromEnum :: Lib.UChr -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,U>m,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: Lib.UChr) ->
                 case a of x1 { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x1 of a# { DEFAULT ->
                 GHC.Types.I# a# } }) -}
738096376958aedf685c1b59f577962f
  $fEnumUChr_$cpred :: Lib.UChr -> Lib.UChr
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: Lib.UChr) ->
                 case a of x1 { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x1 of a# {
                   DEFAULT -> GHC.Prim.tagToEnum# @ Lib.UChr (GHC.Prim.+# a# -1#)
                   0# -> Lib.$fEnumUChr1 } }) -}
738096376958aedf685c1b59f577962f
  $fEnumUChr_$csucc :: Lib.UChr -> Lib.UChr
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: Lib.UChr) ->
                 case a of x1 { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x1 of a# {
                   DEFAULT -> GHC.Prim.tagToEnum# @ Lib.UChr (GHC.Prim.+# a# 1#)
                   110# -> Lib.$fEnumUChr2 } }) -}
738096376958aedf685c1b59f577962f
  $fEnumUChr_$ctoEnum :: GHC.Types.Int -> Lib.UChr
  {- Arity: 1, Strictness: <S(S),1*U(U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Types.Int) ->
                 case w of ww { GHC.Types.I# ww1 -> Lib.$w$ctoEnum1 ww1 }) -}
738096376958aedf685c1b59f577962f
  $fEnumUChr_go :: GHC.Prim.Int# -> [Lib.UChr]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m2 -}
64e0a7b5a8db25e9b81a102c9fe8422f
  $fEqAlignedRead :: GHC.Classes.Eq Lib.AlignedRead
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.AlignedRead
                  Lib.$fEqAlignedRead_$c==
                  Lib.$fEqAlignedRead_$c/= -}
64e0a7b5a8db25e9b81a102c9fe8422f
  $fEqAlignedRead_$c/= ::
    Lib.AlignedRead -> Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LLLS)LLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(1*U(U,U,U,U),1*U(U),U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,1*U,1*U,1*U(U,U,U,U)),1*U)><S(S(LLLS)LLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(1*U(U,U,U,U),1*U(U),U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,1*U,1*U,1*U(U,U,U,U)),1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.AlignedRead) (b :: Lib.AlignedRead) ->
                 case Lib.$fEqAlignedRead_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  $fEqAlignedRead_$c== ::
    Lib.AlignedRead -> Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LLLS)LLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(1*U(U,U,U,U),1*U(U),U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,1*U,1*U,1*U(U,U,U,U)),1*U)><S(S(LLLS)LLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(1*U(U,U,U,U),1*U(U),U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,1*U,1*U,1*U(U,U,U,U)),1*U)> -}
fdfc37bd80569587de4159264d092980
  $fEqBEDPE :: GHC.Classes.Eq Lib.BEDPE
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.BEDPE Lib.$fEqBEDPE_$c== Lib.$fEqBEDPE_$c/= -}
fdfc37bd80569587de4159264d092980
  $fEqBEDPE_$c/= :: Lib.BEDPE -> Lib.BEDPE -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLL),1*U(U,1*U,1*U,U,1*U,1*U,1*U(U,U,U,U))><S(SLLLLLL),1*U(U,1*U,1*U,U,1*U,1*U,1*U(U,U,U,U))>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.BEDPE) (b :: Lib.BEDPE) ->
                 case Lib.$fEqBEDPE_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
fdfc37bd80569587de4159264d092980
  $fEqBEDPE_$c== :: Lib.BEDPE -> Lib.BEDPE -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLL),1*U(U,1*U,1*U,U,1*U,1*U,1*U(U,U,U,U))><S(SLLLLLL),1*U(U,1*U,1*U,U,1*U,1*U,1*U(U,U,U,U))>,
     Unfolding: (\ (ds6 :: Lib.BEDPE) (ds7 :: Lib.BEDPE) ->
                 case ds6 of wild { Lib.BEDPE a1 a2 a3 a4 a5 a6 a7 ->
                 case ds7 of wild1 { Lib.BEDPE b1 b2 b3 b4 b5 b6 b7 ->
                 case GHC.Prim.dataToTag# @ Lib.UChr a1 of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr b1 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==# a# b#) of wild2 {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case GHC.Integer.Type.eqInteger# a2 b2 of wild3 { DEFAULT ->
                      case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild3 of wild4 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case GHC.Integer.Type.eqInteger# a3 b3 of wild5 { DEFAULT ->
                           case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild5 of wild6 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> case GHC.Prim.dataToTag# @ Lib.UChr a4 of a#1 { DEFAULT ->
                                case GHC.Prim.dataToTag# @ Lib.UChr b4 of b#1 { DEFAULT ->
                                case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.==# a#1 b#1) of wild7 {
                                  GHC.Types.False -> GHC.Types.False
                                  GHC.Types.True
                                  -> case GHC.Integer.Type.eqInteger# a5 b5 of wild8 { DEFAULT ->
                                     case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild8 of wild9 {
                                       GHC.Types.False -> GHC.Types.False
                                       GHC.Types.True
                                       -> case GHC.Integer.Type.eqInteger#
                                                 a6
                                                 b6 of wild10 { DEFAULT ->
                                          case GHC.Prim.tagToEnum#
                                                 @ GHC.Types.Bool
                                                 wild10 of wild11 {
                                            GHC.Types.False -> GHC.Types.False
                                            GHC.Types.True
                                            -> Data.ByteString.Internal.eq
                                                 a7
                                                 b7 } } } } } } } } } } } } } } } }) -}
78740db68f2462e9356716573fd65631
  $fEqBedRecord :: GHC.Classes.Eq Lib.BedRecord
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.BedRecord Lib.$fEqBedRecord_$c== Lib.$fEqBedRecord_$c/= -}
78740db68f2462e9356716573fd65631
  $fEqBedRecord_$c/= ::
    Lib.BedRecord -> Lib.BedRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(U,1*U,1*U,1*U(U,U,U,U))><S(SLLL),1*U(U,1*U,1*U,1*U(U,U,U,U))>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.BedRecord) (b :: Lib.BedRecord) ->
                 case Lib.$fEqBedRecord_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
78740db68f2462e9356716573fd65631
  $fEqBedRecord_$c== ::
    Lib.BedRecord -> Lib.BedRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(U,1*U,1*U,1*U(U,U,U,U))><S(SLLL),1*U(U,1*U,1*U,1*U(U,U,U,U))>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.BedRecord) (w1 :: Lib.BedRecord) ->
                 case w of ww { Lib.BedRecord ww1 ww2 ww3 ww4 ->
                 case w1 of ww5 { Lib.BedRecord ww6 ww7 ww8 ww9 ->
                 Lib.$w$c== ww1 ww2 ww3 ww4 ww6 ww7 ww8 ww9 } }) -}
abb052827d9625d097890f754ea8e0e8
  $fEqChromNameFormat :: GHC.Classes.Eq Lib.ChromNameFormat
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.ChromNameFormat
                  Lib.$fEqChromNameFormat_$c==
                  Lib.$fEqChromNameFormat_$c/= -}
abb052827d9625d097890f754ea8e0e8
  $fEqChromNameFormat_$c/= ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.ChromNameFormat) (b :: Lib.ChromNameFormat) ->
                 case a of wild {
                   Lib.GRC
                   -> case b of wild1 {
                        Lib.GRC -> GHC.Types.False Lib.UCSC -> GHC.Types.True }
                   Lib.UCSC
                   -> case b of wild1 {
                        Lib.GRC -> GHC.Types.True Lib.UCSC -> GHC.Types.False } }) -}
abb052827d9625d097890f754ea8e0e8
  $fEqChromNameFormat_$c== ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds6 :: Lib.ChromNameFormat) (ds7 :: Lib.ChromNameFormat) ->
                 case ds6 of wild {
                   Lib.GRC
                   -> case ds7 of wild1 {
                        Lib.GRC -> GHC.Types.True Lib.UCSC -> GHC.Types.False }
                   Lib.UCSC
                   -> case ds7 of wild1 {
                        Lib.GRC -> GHC.Types.False Lib.UCSC -> GHC.Types.True } }) -}
7bbd4d124ab9a728e08072313eaaa4c5
  $fEqCigarMod :: GHC.Classes.Eq Lib.CigarMod
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.CigarMod Lib.$fEqCigarMod_$c== Lib.$fEqCigarMod_$c/= -}
7bbd4d124ab9a728e08072313eaaa4c5
  $fEqCigarMod_$c/= :: Lib.CigarMod -> Lib.CigarMod -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLL),1*U(1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U)><S(SLLLL),1*U(1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.CigarMod) (b :: Lib.CigarMod) ->
                 case Lib.$fEqCigarMod_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
7bbd4d124ab9a728e08072313eaaa4c5
  $fEqCigarMod_$c== :: Lib.CigarMod -> Lib.CigarMod -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLL),1*U(1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U)><S(SLLLL),1*U(1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.CigarMod) (w1 :: Lib.CigarMod) ->
                 case w of ww { Lib.CigarMod ww1 ww2 ww3 ww4 ww5 ->
                 case w1 of ww6 { Lib.CigarMod ww7 ww8 ww9 ww10 ww11 ->
                 Lib.$w$c==1 ww1 ww2 ww3 ww4 ww5 ww7 ww8 ww9 ww10 ww11 } }) -}
4a9f534e7bc67e4a259fbd60df039054
  $fEqMasterRecord :: GHC.Classes.Eq Lib.MasterRecord
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.MasterRecord
                  Lib.$fEqMasterRecord_$c==
                  Lib.$fEqMasterRecord_$c/= -}
4a9f534e7bc67e4a259fbd60df039054
  $fEqMasterRecord_$c/= ::
    Lib.MasterRecord -> Lib.MasterRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(U,1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U))><S(SLLLLLLLLLLL),1*U(U,1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U))>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.MasterRecord) (b :: Lib.MasterRecord) ->
                 case Lib.$fEqMasterRecord_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
4a9f534e7bc67e4a259fbd60df039054
  $fEqMasterRecord_$c== ::
    Lib.MasterRecord -> Lib.MasterRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(U,1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U))><S(SLLLLLLLLLLL),1*U(U,1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U))> -}
6f760c933e008b36f1c2ad656d809c5f
  $fEqMidFamily :: GHC.Classes.Eq Lib.MidFamily
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.MidFamily Lib.$fEqMidFamily_$c== Lib.$fEqMidFamily_$c/= -}
6f760c933e008b36f1c2ad656d809c5f
  $fEqMidFamily_$c/= ::
    Lib.MidFamily -> Lib.MidFamily -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLL),1*U(U,1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U(U,1*U,1*U,1*U(U,U,U,U)))><S(SLLLLLLLLL),1*U(U,1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U(U,1*U,1*U,1*U(U,U,U,U)))>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.MidFamily) (b :: Lib.MidFamily) ->
                 case Lib.$fEqMidFamily_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
6f760c933e008b36f1c2ad656d809c5f
  $fEqMidFamily_$c== ::
    Lib.MidFamily -> Lib.MidFamily -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLL),1*U(U,1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U(U,1*U,1*U,1*U(U,U,U,U)))><S(SLLLLLLLLL),1*U(U,1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U(U,1*U,1*U,1*U(U,U,U,U)))> -}
9d444cb42900aebbeb90455ac8193fe9
  $fEqOpts :: GHC.Classes.Eq Lib.Opts
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:. @ Lib.Opts Lib.$fEqOpts_$c== Lib.$fEqOpts_$c/= -}
9d444cb42900aebbeb90455ac8193fe9
  $fEqOpts_$c/= :: Lib.Opts -> Lib.Opts -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(1*U,1*U,1*U,1*U)><S(SLLL),1*U(1*U,1*U,1*U,1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.Opts) (b :: Lib.Opts) ->
                 case Lib.$fEqOpts_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
9d444cb42900aebbeb90455ac8193fe9
  $fEqOpts_$c== :: Lib.Opts -> Lib.Opts -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(1*U,1*U,1*U,1*U)><S(SLLL),1*U(1*U,1*U,1*U,1*U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.Opts) (w1 :: Lib.Opts) ->
                 case w of ww { Lib.Opts ww1 ww2 ww3 ww4 ->
                 case w1 of ww5 { Lib.Opts ww6 ww7 ww8 ww9 ->
                 Lib.$w$c==2 ww1 ww2 ww3 ww4 ww6 ww7 ww8 ww9 } }) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  $fEqPairedAln :: GHC.Classes.Eq Lib.PairedAln
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.PairedAln Lib.$fEqPairedAln_$c== Lib.$fEqPairedAln_$c/= -}
64e0a7b5a8db25e9b81a102c9fe8422f
  $fEqPairedAln_$c/= ::
    Lib.PairedAln -> Lib.PairedAln -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S(LLLS)LLLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(1*U(1*U(U,U,U,U),1*U(U),U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,1*U,1*U,1*U(U,U,U,U)),1*U),1*U(1*U(U,U,U,U),1*U(U),U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,1*U,1*U,1*U(U,U,U,U)),1*U),1*U,1*U)><S(S(S(LLLS)LLLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(1*U(1*U(U,U,U,U),1*U(U),U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,1*U,1*U,1*U(U,U,U,U)),1*U),1*U(1*U(U,U,U,U),1*U(U),U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,1*U,1*U,1*U(U,U,U,U)),1*U),1*U,1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.PairedAln) (b :: Lib.PairedAln) ->
                 case Lib.$fEqPairedAln_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  $fEqPairedAln_$c== ::
    Lib.PairedAln -> Lib.PairedAln -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S(LLLS)LLLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(1*U(1*U(U,U,U,U),1*U(U),U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,1*U,1*U,1*U(U,U,U,U)),1*U),1*U(1*U(U,U,U,U),1*U(U),U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,1*U,1*U,1*U(U,U,U,U)),1*U),1*U,1*U)><S(S(S(LLLS)LLLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(1*U(1*U(U,U,U,U),1*U(U),U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,1*U,1*U,1*U(U,U,U,U)),1*U),1*U(1*U(U,U,U,U),1*U(U),U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,1*U,1*U,1*U(U,U,U,U)),1*U),1*U,1*U)>,
     Unfolding: (\ (ds6 :: Lib.PairedAln) (ds7 :: Lib.PairedAln) ->
                 case ds6 of wild { Lib.PairedAln a1 a2 a3 a4 ->
                 case ds7 of wild1 { Lib.PairedAln b1 b2 b3 b4 ->
                 case Lib.$fEqAlignedRead_$c== a1 b1 of wild2 {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case Lib.$fEqAlignedRead_$c== a2 b2 of wild3 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case GHC.Classes.$fEq[]_$c==
                                  @ Lib.AlignedRead
                                  Lib.$fEqAlignedRead
                                  a3
                                  b3 of wild4 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> GHC.Classes.$fEq[]_$c==
                                  @ Lib.AlignedRead
                                  Lib.$fEqAlignedRead
                                  a4
                                  b4 } } } } }) -}
2e345d36c55fb13cffd420fc95f5bf30
  $fEqRunStats :: GHC.Classes.Eq Lib.RunStats
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.RunStats Lib.$fEqRunStats_$c== Lib.$fEqRunStats_$c/= -}
2e345d36c55fb13cffd420fc95f5bf30
  $fEqRunStats_$c/= :: Lib.RunStats -> Lib.RunStats -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLL),1*U(1*U,1*U,1*U,1*U,1*U(U),1*U(U))><S(SLLLLL),1*U(1*U,1*U,1*U,1*U,1*U(U),1*U(U))>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.RunStats) (b :: Lib.RunStats) ->
                 case Lib.$fEqRunStats_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
2e345d36c55fb13cffd420fc95f5bf30
  $fEqRunStats_$c== :: Lib.RunStats -> Lib.RunStats -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLL),1*U(1*U,1*U,1*U,1*U,1*U(U),1*U(U))><S(SLLLLL),1*U(1*U,1*U,1*U,1*U,1*U(U),1*U(U))>,
     Unfolding: (\ (ds6 :: Lib.RunStats) (ds7 :: Lib.RunStats) ->
                 case ds6 of wild { Lib.RunStats a1 a2 a3 a4 a5 a6 ->
                 case ds7 of wild1 { Lib.RunStats b1 b2 b3 b4 b5 b6 ->
                 case GHC.Integer.Type.eqInteger# a1 b1 of wild2 { DEFAULT ->
                 case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild2 of wild3 {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case GHC.Integer.Type.eqInteger# a2 b2 of wild4 { DEFAULT ->
                      case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild4 of wild5 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case GHC.Integer.Type.eqInteger# a3 b3 of wild6 { DEFAULT ->
                           case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild6 of wild7 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> case GHC.Integer.Type.eqInteger# a4 b4 of wild8 { DEFAULT ->
                                case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild8 of wild9 {
                                  GHC.Types.False -> GHC.Types.False
                                  GHC.Types.True
                                  -> case a5 of wild10 { GHC.Types.D# x ->
                                     case b5 of wild11 { GHC.Types.D# y ->
                                     case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.==## x y) of wild12 {
                                       GHC.Types.False -> GHC.Types.False
                                       GHC.Types.True
                                       -> GHC.Classes.eqDouble a6 b6 } } } } } } } } } } } } }) -}
e2c0c85c514784c2ed19970c7fc99cc7
  $fEqSAMFlag :: GHC.Classes.Eq Lib.SAMFlag
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.SAMFlag Lib.$fEqSAMFlag_$c== Lib.$fEqSAMFlag_$c/= -}
e2c0c85c514784c2ed19970c7fc99cc7
  $fEqSAMFlag_$c/= :: Lib.SAMFlag -> Lib.SAMFlag -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U))><S(SLLLLLLLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U))>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.SAMFlag) (b :: Lib.SAMFlag) ->
                 case Lib.$fEqSAMFlag_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
e2c0c85c514784c2ed19970c7fc99cc7
  $fEqSAMFlag_$c== :: Lib.SAMFlag -> Lib.SAMFlag -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U))><S(SLLLLLLLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U))> -}
738096376958aedf685c1b59f577962f
  $fEqUChr :: GHC.Classes.Eq Lib.UChr
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:. @ Lib.UChr Lib.$fEqUChr_$c== Lib.$fEqUChr_$c/= -}
738096376958aedf685c1b59f577962f
  $fEqUChr_$c/= :: Lib.UChr -> Lib.UChr -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.UChr) (b :: Lib.UChr) ->
                 case a of x1 { DEFAULT ->
                 case b of x2 { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x1 of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==# a# b#) of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False } } } } }) -}
738096376958aedf685c1b59f577962f
  $fEqUChr_$c== :: Lib.UChr -> Lib.UChr -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.UChr) (b :: Lib.UChr) ->
                 case a of x1 { DEFAULT ->
                 case b of x2 { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x1 of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x2 of b# { DEFAULT ->
                 GHC.Prim.tagToEnum#
                   @ GHC.Types.Bool
                   (GHC.Prim.==# a# b#) } } } }) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  $fGenericAlignedRead :: GHC.Generics.Generic Lib.AlignedRead
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.AlignedRead
                  Lib.$fGenericAlignedRead1
                    `cast`
                  (forall (x :: <*>_N).
                   <Lib.AlignedRead>_R
                   ->_R Trans
                            (Sym (GHC.Generics.N:M1[0]
                                      <*>_N
                                      <GHC.Generics.D>_P
                                      <'GHC.Generics.MetaData
                                         "AlignedRead"
                                         "Lib"
                                         "primerclip-0.3.4.0-1b5t2mlHPcvBmtAJ86MXDg"
                                         'GHC.Types.False>_P
                                      <GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "AlignedRead" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                         ((((GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "qname")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString)
                                             GHC.Generics.:*: (GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Base.Just "flag")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R GHC.Types.Int)
                                                               GHC.Generics.:*: GHC.Generics.M1
                                                                                  GHC.Generics.S
                                                                                  ('GHC.Generics.MetaSel
                                                                                     ('GHC.Base.Just
                                                                                        "rname")
                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                     'GHC.Generics.DecidedLazy)
                                                                                  (GHC.Generics.K1
                                                                                     GHC.Generics.R
                                                                                     Lib.UChr)))
                                            GHC.Generics.:*: ((GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Base.Just "pos")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    GHC.Integer.Type.Integer)
                                                               GHC.Generics.:*: GHC.Generics.M1
                                                                                  GHC.Generics.S
                                                                                  ('GHC.Generics.MetaSel
                                                                                     ('GHC.Base.Just
                                                                                        "endpos")
                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                     'GHC.Generics.DecidedLazy)
                                                                                  (GHC.Generics.K1
                                                                                     GHC.Generics.R
                                                                                     GHC.Integer.Type.Integer))
                                                              GHC.Generics.:*: (GHC.Generics.M1
                                                                                  GHC.Generics.S
                                                                                  ('GHC.Generics.MetaSel
                                                                                     ('GHC.Base.Just
                                                                                        "mapqual")
                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                     'GHC.Generics.DecidedLazy)
                                                                                  (GHC.Generics.K1
                                                                                     GHC.Generics.R
                                                                                     GHC.Integer.Type.Integer)
                                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                                   GHC.Generics.S
                                                                                                   ('GHC.Generics.MetaSel
                                                                                                      ('GHC.Base.Just
                                                                                                         "cigar")
                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                   (GHC.Generics.K1
                                                                                                      GHC.Generics.R
                                                                                                      Data.ByteString.Internal.ByteString))))
                                           GHC.Generics.:*: (((GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Base.Just "trimdcigar")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    Data.ByteString.Internal.ByteString)
                                                               GHC.Generics.:*: GHC.Generics.M1
                                                                                  GHC.Generics.S
                                                                                  ('GHC.Generics.MetaSel
                                                                                     ('GHC.Base.Just
                                                                                        "cigmap")
                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                     'GHC.Generics.DecidedLazy)
                                                                                  (GHC.Generics.K1
                                                                                     GHC.Generics.R
                                                                                     Lib.CigarMap))
                                                              GHC.Generics.:*: (GHC.Generics.M1
                                                                                  GHC.Generics.S
                                                                                  ('GHC.Generics.MetaSel
                                                                                     ('GHC.Base.Just
                                                                                        "trimdcigmap")
                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                     'GHC.Generics.DecidedLazy)
                                                                                  (GHC.Generics.K1
                                                                                     GHC.Generics.R
                                                                                     Lib.CigarMap)
                                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                                   GHC.Generics.S
                                                                                                   ('GHC.Generics.MetaSel
                                                                                                      ('GHC.Base.Just
                                                                                                         "rnext")
                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                   (GHC.Generics.K1
                                                                                                      GHC.Generics.R
                                                                                                      Data.ByteString.Internal.ByteString)))
                                                             GHC.Generics.:*: ((GHC.Generics.M1
                                                                                  GHC.Generics.S
                                                                                  ('GHC.Generics.MetaSel
                                                                                     ('GHC.Base.Just
                                                                                        "pnext")
                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                     'GHC.Generics.DecidedLazy)
                                                                                  (GHC.Generics.K1
                                                                                     GHC.Generics.R
                                                                                     GHC.Integer.Type.Integer)
                                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                                   GHC.Generics.S
                                                                                                   ('GHC.Generics.MetaSel
                                                                                                      ('GHC.Base.Just
                                                                                                         "tlen")
                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                   (GHC.Generics.K1
                                                                                                      GHC.Generics.R
                                                                                                      GHC.Integer.Type.Integer))
                                                                               GHC.Generics.:*: (GHC.Generics.M1
                                                                                                   GHC.Generics.S
                                                                                                   ('GHC.Generics.MetaSel
                                                                                                      ('GHC.Base.Just
                                                                                                         "refseq")
                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                   (GHC.Generics.K1
                                                                                                      GHC.Generics.R
                                                                                                      Data.ByteString.Internal.ByteString)
                                                                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                                                                    GHC.Generics.S
                                                                                                                    ('GHC.Generics.MetaSel
                                                                                                                       ('GHC.Base.Just
                                                                                                                          "basequal")
                                                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                                                       'GHC.Generics.DecidedLazy)
                                                                                                                    (GHC.Generics.K1
                                                                                                                       GHC.Generics.R
                                                                                                                       Data.ByteString.Internal.ByteString)))))
                                          GHC.Generics.:*: ((((GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Base.Just "optfields")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    Data.ByteString.Internal.ByteString)
                                                               GHC.Generics.:*: GHC.Generics.M1
                                                                                  GHC.Generics.S
                                                                                  ('GHC.Generics.MetaSel
                                                                                     ('GHC.Base.Just
                                                                                        "strand")
                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                     'GHC.Generics.DecidedLazy)
                                                                                  (GHC.Generics.K1
                                                                                     GHC.Generics.R
                                                                                     Data.ByteString.Internal.ByteString))
                                                              GHC.Generics.:*: (GHC.Generics.M1
                                                                                  GHC.Generics.S
                                                                                  ('GHC.Generics.MetaSel
                                                                                     ('GHC.Base.Just
                                                                                        "paired")
                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                     'GHC.Generics.DecidedLazy)
                                                                                  (GHC.Generics.K1
                                                                                     GHC.Generics.R
                                                                                     GHC.Types.Bool)
                                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                                   GHC.Generics.S
                                                                                                   ('GHC.Generics.MetaSel
                                                                                                      ('GHC.Base.Just
                                                                                                         "mapped")
                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                   (GHC.Generics.K1
                                                                                                      GHC.Generics.R
                                                                                                      GHC.Types.Bool)))
                                                             GHC.Generics.:*: ((GHC.Generics.M1
                                                                                  GHC.Generics.S
                                                                                  ('GHC.Generics.MetaSel
                                                                                     ('GHC.Base.Just
                                                                                        "fint")
                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                     'GHC.Generics.DecidedLazy)
                                                                                  (GHC.Generics.K1
                                                                                     GHC.Generics.R
                                                                                     [Lib.BedRecord])
                                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                                   GHC.Generics.S
                                                                                                   ('GHC.Generics.MetaSel
                                                                                                      ('GHC.Base.Just
                                                                                                         "rint")
                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                   (GHC.Generics.K1
                                                                                                      GHC.Generics.R
                                                                                                      [Lib.BedRecord]))
                                                                               GHC.Generics.:*: (GHC.Generics.M1
                                                                                                   GHC.Generics.S
                                                                                                   ('GHC.Generics.MetaSel
                                                                                                      ('GHC.Base.Just
                                                                                                         "pintflag")
                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                   (GHC.Generics.K1
                                                                                                      GHC.Generics.R
                                                                                                      GHC.Types.Bool)
                                                                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                                                                    GHC.Generics.S
                                                                                                                    ('GHC.Generics.MetaSel
                                                                                                                       ('GHC.Base.Just
                                                                                                                          "trimdflag")
                                                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                                                       'GHC.Generics.DecidedLazy)
                                                                                                                    (GHC.Generics.K1
                                                                                                                       GHC.Generics.R
                                                                                                                       GHC.Types.Bool))))
                                                            GHC.Generics.:*: (((GHC.Generics.M1
                                                                                  GHC.Generics.S
                                                                                  ('GHC.Generics.MetaSel
                                                                                     ('GHC.Base.Just
                                                                                        "trimdpos")
                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                     'GHC.Generics.DecidedLazy)
                                                                                  (GHC.Generics.K1
                                                                                     GHC.Generics.R
                                                                                     GHC.Integer.Type.Integer)
                                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                                   GHC.Generics.S
                                                                                                   ('GHC.Generics.MetaSel
                                                                                                      ('GHC.Base.Just
                                                                                                         "trimdendpos")
                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                   (GHC.Generics.K1
                                                                                                      GHC.Generics.R
                                                                                                      GHC.Integer.Type.Integer))
                                                                               GHC.Generics.:*: (GHC.Generics.M1
                                                                                                   GHC.Generics.S
                                                                                                   ('GHC.Generics.MetaSel
                                                                                                      ('GHC.Base.Just
                                                                                                         "headerstrings")
                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                   (GHC.Generics.K1
                                                                                                      GHC.Generics.R
                                                                                                      Lib.Header)
                                                                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                                                                    GHC.Generics.S
                                                                                                                    ('GHC.Generics.MetaSel
                                                                                                                       ('GHC.Base.Just
                                                                                                                          "isheader")
                                                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                                                       'GHC.Generics.DecidedLazy)
                                                                                                                    (GHC.Generics.K1
                                                                                                                       GHC.Generics.R
                                                                                                                       GHC.Types.Bool)))
                                                                              GHC.Generics.:*: ((GHC.Generics.M1
                                                                                                   GHC.Generics.S
                                                                                                   ('GHC.Generics.MetaSel
                                                                                                      ('GHC.Base.Just
                                                                                                         "mid")
                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                   (GHC.Generics.K1
                                                                                                      GHC.Generics.R
                                                                                                      Data.ByteString.Internal.ByteString)
                                                                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                                                                    GHC.Generics.S
                                                                                                                    ('GHC.Generics.MetaSel
                                                                                                                       ('GHC.Base.Just
                                                                                                                          "xmid")
                                                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                                                       'GHC.Generics.DecidedLazy)
                                                                                                                    (GHC.Generics.K1
                                                                                                                       GHC.Generics.R
                                                                                                                       Data.ByteString.Internal.ByteString))
                                                                                                GHC.Generics.:*: (GHC.Generics.M1
                                                                                                                    GHC.Generics.S
                                                                                                                    ('GHC.Generics.MetaSel
                                                                                                                       ('GHC.Base.Just
                                                                                                                          "tbed")
                                                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                                                       'GHC.Generics.DecidedLazy)
                                                                                                                    (GHC.Generics.K1
                                                                                                                       GHC.Generics.R
                                                                                                                       Lib.BedRecord)
                                                                                                                  GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                     GHC.Generics.S
                                                                                                                                     ('GHC.Generics.MetaSel
                                                                                                                                        ('GHC.Base.Just
                                                                                                                                           "trimdToZeroLength")
                                                                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                                                                        'GHC.Generics.DecidedLazy)
                                                                                                                                     (GHC.Generics.K1
                                                                                                                                        GHC.Generics.R
                                                                                                                                        GHC.Types.Bool))))))>_R))
                            (Sub (Sym (Lib.Rep_AlignedRead[0]))) <x>_N)
                  Lib.$fGenericAlignedRead_$cto -}
64e0a7b5a8db25e9b81a102c9fe8422f
  $fGenericAlignedRead1 ::
    Lib.AlignedRead
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "AlignedRead" 'GHC.Generics.PrefixI 'GHC.Types.True)
         ((((GHC.Generics.M1
               GHC.Generics.S
               ('GHC.Generics.MetaSel
                  ('GHC.Base.Just "qname")
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.NoSourceStrictness
                  'GHC.Generics.DecidedLazy)
               (GHC.Generics.K1
                  GHC.Generics.R Data.ByteString.Internal.ByteString)
             GHC.Generics.:*: (GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Base.Just "flag")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                               GHC.Generics.:*: GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "rname")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1 GHC.Generics.R Lib.UChr)))
            GHC.Generics.:*: ((GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Base.Just "pos")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                               GHC.Generics.:*: GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "endpos")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R GHC.Integer.Type.Integer))
                              GHC.Generics.:*: (GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "mapqual")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R GHC.Integer.Type.Integer)
                                                GHC.Generics.:*: GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Base.Just "cigar")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      Data.ByteString.Internal.ByteString))))
           GHC.Generics.:*: (((GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Base.Just "trimdcigar")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1
                                    GHC.Generics.R Data.ByteString.Internal.ByteString)
                               GHC.Generics.:*: GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "cigmap")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1 GHC.Generics.R Lib.CigarMap))
                              GHC.Generics.:*: (GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "trimdcigmap")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1 GHC.Generics.R Lib.CigarMap)
                                                GHC.Generics.:*: GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Base.Just "rnext")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      Data.ByteString.Internal.ByteString)))
                             GHC.Generics.:*: ((GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "pnext")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R GHC.Integer.Type.Integer)
                                                GHC.Generics.:*: GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Base.Just "tlen")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      GHC.Integer.Type.Integer))
                                               GHC.Generics.:*: (GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Base.Just "refseq")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      Data.ByteString.Internal.ByteString)
                                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                                    GHC.Generics.S
                                                                                    ('GHC.Generics.MetaSel
                                                                                       ('GHC.Base.Just
                                                                                          "basequal")
                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                       'GHC.Generics.DecidedLazy)
                                                                                    (GHC.Generics.K1
                                                                                       GHC.Generics.R
                                                                                       Data.ByteString.Internal.ByteString)))))
          GHC.Generics.:*: ((((GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Base.Just "optfields")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1
                                    GHC.Generics.R Data.ByteString.Internal.ByteString)
                               GHC.Generics.:*: GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "strand")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R
                                                     Data.ByteString.Internal.ByteString))
                              GHC.Generics.:*: (GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "paired")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool)
                                                GHC.Generics.:*: GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Base.Just "mapped")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      GHC.Types.Bool)))
                             GHC.Generics.:*: ((GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "fint")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1 GHC.Generics.R [Lib.BedRecord])
                                                GHC.Generics.:*: GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Base.Just "rint")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      [Lib.BedRecord]))
                                               GHC.Generics.:*: (GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Base.Just "pintflag")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R GHC.Types.Bool)
                                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                                    GHC.Generics.S
                                                                                    ('GHC.Generics.MetaSel
                                                                                       ('GHC.Base.Just
                                                                                          "trimdflag")
                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                       'GHC.Generics.DecidedLazy)
                                                                                    (GHC.Generics.K1
                                                                                       GHC.Generics.R
                                                                                       GHC.Types.Bool))))
                            GHC.Generics.:*: (((GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "trimdpos")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R GHC.Integer.Type.Integer)
                                                GHC.Generics.:*: GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Base.Just "trimdendpos")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      GHC.Integer.Type.Integer))
                                               GHC.Generics.:*: (GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Base.Just
                                                                         "headerstrings")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R Lib.Header)
                                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                                    GHC.Generics.S
                                                                                    ('GHC.Generics.MetaSel
                                                                                       ('GHC.Base.Just
                                                                                          "isheader")
                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                       'GHC.Generics.DecidedLazy)
                                                                                    (GHC.Generics.K1
                                                                                       GHC.Generics.R
                                                                                       GHC.Types.Bool)))
                                              GHC.Generics.:*: ((GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Base.Just "mid")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      Data.ByteString.Internal.ByteString)
                                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                                    GHC.Generics.S
                                                                                    ('GHC.Generics.MetaSel
                                                                                       ('GHC.Base.Just
                                                                                          "xmid")
                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                       'GHC.Generics.DecidedLazy)
                                                                                    (GHC.Generics.K1
                                                                                       GHC.Generics.R
                                                                                       Data.ByteString.Internal.ByteString))
                                                                GHC.Generics.:*: (GHC.Generics.M1
                                                                                    GHC.Generics.S
                                                                                    ('GHC.Generics.MetaSel
                                                                                       ('GHC.Base.Just
                                                                                          "tbed")
                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                       'GHC.Generics.DecidedLazy)
                                                                                    (GHC.Generics.K1
                                                                                       GHC.Generics.R
                                                                                       Lib.BedRecord)
                                                                                  GHC.Generics.:*: GHC.Generics.M1
                                                                                                     GHC.Generics.S
                                                                                                     ('GHC.Generics.MetaSel
                                                                                                        ('GHC.Base.Just
                                                                                                           "trimdToZeroLength")
                                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                                        'GHC.Generics.DecidedLazy)
                                                                                                     (GHC.Generics.K1
                                                                                                        GHC.Generics.R
                                                                                                        GHC.Types.Bool))))))
         x
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>m,
     Unfolding: (\ @ x (x1 :: Lib.AlignedRead) ->
                 case x1 of wild { Lib.AlignedRead g1 g2 g3 g4 g5 g6 g7 g8 g9 g10 g11 g12 g13 g14 g15 g16 g17 g18 g19 g20 g21 g22 g23 g24 g25 g26 g27 g28 g29 g30 g31 ->
                 (GHC.Generics.:*:
                    @ *
                    @ (((GHC.Generics.M1
                           GHC.Generics.S
                           ('GHC.Generics.MetaSel
                              ('GHC.Base.Just "qname")
                              'GHC.Generics.NoSourceUnpackedness
                              'GHC.Generics.NoSourceStrictness
                              'GHC.Generics.DecidedLazy)
                           (GHC.Generics.K1
                              GHC.Generics.R Data.ByteString.Internal.ByteString)
                         GHC.Generics.:*: (GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "flag")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                           GHC.Generics.:*: GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "rname")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R Lib.UChr)))
                        GHC.Generics.:*: ((GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "pos")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R GHC.Integer.Type.Integer)
                                           GHC.Generics.:*: GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "endpos")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 GHC.Integer.Type.Integer))
                                          GHC.Generics.:*: (GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "mapqual")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 GHC.Integer.Type.Integer)
                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "cigar")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  Data.ByteString.Internal.ByteString))))
                       GHC.Generics.:*: (((GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "trimdcigar")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R Data.ByteString.Internal.ByteString)
                                           GHC.Generics.:*: GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "cigmap")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R Lib.CigarMap))
                                          GHC.Generics.:*: (GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "trimdcigmap")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R Lib.CigarMap)
                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "rnext")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  Data.ByteString.Internal.ByteString)))
                                         GHC.Generics.:*: ((GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "pnext")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 GHC.Integer.Type.Integer)
                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "tlen")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  GHC.Integer.Type.Integer))
                                                           GHC.Generics.:*: (GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "refseq")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  Data.ByteString.Internal.ByteString)
                                                                             GHC.Generics.:*: GHC.Generics.M1
                                                                                                GHC.Generics.S
                                                                                                ('GHC.Generics.MetaSel
                                                                                                   ('GHC.Base.Just
                                                                                                      "basequal")
                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                (GHC.Generics.K1
                                                                                                   GHC.Generics.R
                                                                                                   Data.ByteString.Internal.ByteString)))))
                    @ ((((GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "optfields")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1
                               GHC.Generics.R Data.ByteString.Internal.ByteString)
                          GHC.Generics.:*: GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "strand")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R Data.ByteString.Internal.ByteString))
                         GHC.Generics.:*: (GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "paired")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool)
                                           GHC.Generics.:*: GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "mapped")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R GHC.Types.Bool)))
                        GHC.Generics.:*: ((GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "fint")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1 GHC.Generics.R [Lib.BedRecord])
                                           GHC.Generics.:*: GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "rint")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R [Lib.BedRecord]))
                                          GHC.Generics.:*: (GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "pintflag")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R GHC.Types.Bool)
                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "trimdflag")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  GHC.Types.Bool))))
                       GHC.Generics.:*: (((GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "trimdpos")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R GHC.Integer.Type.Integer)
                                           GHC.Generics.:*: GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "trimdendpos")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 GHC.Integer.Type.Integer))
                                          GHC.Generics.:*: (GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "headerstrings")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R Lib.Header)
                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "isheader")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  GHC.Types.Bool)))
                                         GHC.Generics.:*: ((GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "mid")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 Data.ByteString.Internal.ByteString)
                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "xmid")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  Data.ByteString.Internal.ByteString))
                                                           GHC.Generics.:*: (GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "tbed")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  Lib.BedRecord)
                                                                             GHC.Generics.:*: GHC.Generics.M1
                                                                                                GHC.Generics.S
                                                                                                ('GHC.Generics.MetaSel
                                                                                                   ('GHC.Base.Just
                                                                                                      "trimdToZeroLength")
                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                (GHC.Generics.K1
                                                                                                   GHC.Generics.R
                                                                                                   GHC.Types.Bool)))))
                    @ x
                    (GHC.Generics.:*:
                       @ *
                       @ ((GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "qname")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString)
                           GHC.Generics.:*: (GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "flag")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                             GHC.Generics.:*: GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "rname")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R Lib.UChr)))
                          GHC.Generics.:*: ((GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "pos")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R GHC.Integer.Type.Integer)
                                             GHC.Generics.:*: GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "endpos")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R
                                                                   GHC.Integer.Type.Integer))
                                            GHC.Generics.:*: (GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "mapqual")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R
                                                                   GHC.Integer.Type.Integer)
                                                              GHC.Generics.:*: GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "cigar")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    Data.ByteString.Internal.ByteString))))
                       @ (((GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "trimdcigar")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1
                                 GHC.Generics.R Data.ByteString.Internal.ByteString)
                            GHC.Generics.:*: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "cigmap")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1 GHC.Generics.R Lib.CigarMap))
                           GHC.Generics.:*: (GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "trimdcigmap")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1 GHC.Generics.R Lib.CigarMap)
                                             GHC.Generics.:*: GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "rnext")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R
                                                                   Data.ByteString.Internal.ByteString)))
                          GHC.Generics.:*: ((GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "pnext")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R GHC.Integer.Type.Integer)
                                             GHC.Generics.:*: GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "tlen")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R
                                                                   GHC.Integer.Type.Integer))
                                            GHC.Generics.:*: (GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "refseq")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R
                                                                   Data.ByteString.Internal.ByteString)
                                                              GHC.Generics.:*: GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "basequal")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    Data.ByteString.Internal.ByteString))))
                       @ x
                       (GHC.Generics.:*:
                          @ *
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "qname")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1
                                  GHC.Generics.R Data.ByteString.Internal.ByteString)
                             GHC.Generics.:*: (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "flag")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "rname")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R Lib.UChr)))
                          @ ((GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "pos")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "endpos")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R GHC.Integer.Type.Integer))
                             GHC.Generics.:*: (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "mapqual")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R GHC.Integer.Type.Integer)
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "cigar")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     Data.ByteString.Internal.ByteString)))
                          @ x
                          (GHC.Generics.:*:
                             @ *
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "qname")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1
                                     GHC.Generics.R Data.ByteString.Internal.ByteString))
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "flag")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "rname")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1 GHC.Generics.R Lib.UChr))
                             @ x
                             g1
                               `cast`
                             (Trans
                                  (Sym (GHC.Generics.N:K1[0]
                                            <*>_N
                                            <GHC.Generics.R>_P
                                            <Data.ByteString.Internal.ByteString>_R
                                            <x>_P))
                                  (Sym (GHC.Generics.N:M1[0]
                                            <*>_N
                                            <GHC.Generics.S>_P
                                            <'GHC.Generics.MetaSel
                                               ('GHC.Base.Just "qname")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy>_P
                                            <GHC.Generics.K1
                                               GHC.Generics.R
                                               Data.ByteString.Internal.ByteString>_R) <x>_N))
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "flag")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "rname")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R Lib.UChr))
                                @ x
                                g2
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N <GHC.Generics.R>_P <GHC.Types.Int>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "flag")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R GHC.Types.Int>_R) <x>_N))
                                g3
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N <GHC.Generics.R>_P <Lib.UChr>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "rname")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R Lib.UChr>_R) <x>_N))))
                          (GHC.Generics.:*:
                             @ *
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "pos")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "endpos")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1
                                                      GHC.Generics.R GHC.Integer.Type.Integer))
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "mapqual")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "cigar")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1
                                                      GHC.Generics.R
                                                      Data.ByteString.Internal.ByteString))
                             @ x
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "pos")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "endpos")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                                @ x
                                g4
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <GHC.Integer.Type.Integer>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "pos")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  GHC.Integer.Type.Integer>_R) <x>_N))
                                g5
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <GHC.Integer.Type.Integer>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "endpos")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  GHC.Integer.Type.Integer>_R) <x>_N)))
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "mapqual")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "cigar")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1
                                        GHC.Generics.R Data.ByteString.Internal.ByteString))
                                @ x
                                g6
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <GHC.Integer.Type.Integer>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "mapqual")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  GHC.Integer.Type.Integer>_R) <x>_N))
                                g7
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <Data.ByteString.Internal.ByteString>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "cigar")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString>_R) <x>_N)))))
                       (GHC.Generics.:*:
                          @ *
                          @ ((GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "trimdcigar")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1
                                   GHC.Generics.R Data.ByteString.Internal.ByteString)
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "cigmap")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R Lib.CigarMap))
                             GHC.Generics.:*: (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "trimdcigmap")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R Lib.CigarMap)
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "rnext")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     Data.ByteString.Internal.ByteString)))
                          @ ((GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "pnext")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "tlen")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R GHC.Integer.Type.Integer))
                             GHC.Generics.:*: (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "refseq")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R
                                                    Data.ByteString.Internal.ByteString)
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "basequal")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     Data.ByteString.Internal.ByteString)))
                          @ x
                          (GHC.Generics.:*:
                             @ *
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "trimdcigar")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1
                                     GHC.Generics.R Data.ByteString.Internal.ByteString)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "cigmap")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1 GHC.Generics.R Lib.CigarMap))
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "trimdcigmap")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1 GHC.Generics.R Lib.CigarMap)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "rnext")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1
                                                      GHC.Generics.R
                                                      Data.ByteString.Internal.ByteString))
                             @ x
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "trimdcigar")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1
                                        GHC.Generics.R Data.ByteString.Internal.ByteString))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "cigmap")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R Lib.CigarMap))
                                @ x
                                g8
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <Data.ByteString.Internal.ByteString>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "trimdcigar")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString>_R) <x>_N))
                                g9
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N <GHC.Generics.R>_P <Lib.CigarMap>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "cigmap")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R Lib.CigarMap>_R) <x>_N)))
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "trimdcigmap")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R Lib.CigarMap))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "rnext")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1
                                        GHC.Generics.R Data.ByteString.Internal.ByteString))
                                @ x
                                g10
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N <GHC.Generics.R>_P <Lib.CigarMap>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "trimdcigmap")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R Lib.CigarMap>_R) <x>_N))
                                g11
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <Data.ByteString.Internal.ByteString>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "rnext")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString>_R) <x>_N))))
                          (GHC.Generics.:*:
                             @ *
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "pnext")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "tlen")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1
                                                      GHC.Generics.R GHC.Integer.Type.Integer))
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "refseq")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1
                                     GHC.Generics.R Data.ByteString.Internal.ByteString)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "basequal")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1
                                                      GHC.Generics.R
                                                      Data.ByteString.Internal.ByteString))
                             @ x
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "pnext")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "tlen")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                                @ x
                                g12
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <GHC.Integer.Type.Integer>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "pnext")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  GHC.Integer.Type.Integer>_R) <x>_N))
                                g13
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <GHC.Integer.Type.Integer>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "tlen")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  GHC.Integer.Type.Integer>_R) <x>_N)))
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "refseq")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1
                                        GHC.Generics.R Data.ByteString.Internal.ByteString))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "basequal")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1
                                        GHC.Generics.R Data.ByteString.Internal.ByteString))
                                @ x
                                g14
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <Data.ByteString.Internal.ByteString>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "refseq")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString>_R) <x>_N))
                                g15
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <Data.ByteString.Internal.ByteString>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "basequal")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString>_R) <x>_N))))))
                    (GHC.Generics.:*:
                       @ *
                       @ (((GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "optfields")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1
                                 GHC.Generics.R Data.ByteString.Internal.ByteString)
                            GHC.Generics.:*: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "strand")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString))
                           GHC.Generics.:*: (GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "paired")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool)
                                             GHC.Generics.:*: GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "mapped")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R GHC.Types.Bool)))
                          GHC.Generics.:*: ((GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "fint")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1 GHC.Generics.R [Lib.BedRecord])
                                             GHC.Generics.:*: GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "rint")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R [Lib.BedRecord]))
                                            GHC.Generics.:*: (GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "pintflag")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R GHC.Types.Bool)
                                                              GHC.Generics.:*: GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "trimdflag")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    GHC.Types.Bool))))
                       @ (((GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "trimdpos")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                            GHC.Generics.:*: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "trimdendpos")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R GHC.Integer.Type.Integer))
                           GHC.Generics.:*: (GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "headerstrings")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1 GHC.Generics.R Lib.Header)
                                             GHC.Generics.:*: GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "isheader")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R GHC.Types.Bool)))
                          GHC.Generics.:*: ((GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "mid")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString)
                                             GHC.Generics.:*: GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "xmid")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R
                                                                   Data.ByteString.Internal.ByteString))
                                            GHC.Generics.:*: (GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "tbed")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R Lib.BedRecord)
                                                              GHC.Generics.:*: GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "trimdToZeroLength")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    GHC.Types.Bool))))
                       @ x
                       (GHC.Generics.:*:
                          @ *
                          @ ((GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "optfields")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1
                                   GHC.Generics.R Data.ByteString.Internal.ByteString)
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "strand")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R
                                                    Data.ByteString.Internal.ByteString))
                             GHC.Generics.:*: (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "paired")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool)
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "mapped")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     GHC.Types.Bool)))
                          @ ((GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "fint")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R [Lib.BedRecord])
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "rint")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R [Lib.BedRecord]))
                             GHC.Generics.:*: (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "pintflag")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool)
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "trimdflag")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     GHC.Types.Bool)))
                          @ x
                          (GHC.Generics.:*:
                             @ *
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "optfields")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1
                                     GHC.Generics.R Data.ByteString.Internal.ByteString)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "strand")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1
                                                      GHC.Generics.R
                                                      Data.ByteString.Internal.ByteString))
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "paired")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "mapped")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool))
                             @ x
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "optfields")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1
                                        GHC.Generics.R Data.ByteString.Internal.ByteString))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "strand")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1
                                        GHC.Generics.R Data.ByteString.Internal.ByteString))
                                @ x
                                g16
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <Data.ByteString.Internal.ByteString>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "optfields")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString>_R) <x>_N))
                                g17
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <Data.ByteString.Internal.ByteString>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "strand")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString>_R) <x>_N)))
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "paired")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "mapped")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool))
                                @ x
                                g18
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N <GHC.Generics.R>_P <GHC.Types.Bool>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "paired")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R GHC.Types.Bool>_R) <x>_N))
                                g19
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N <GHC.Generics.R>_P <GHC.Types.Bool>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "mapped")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R GHC.Types.Bool>_R) <x>_N))))
                          (GHC.Generics.:*:
                             @ *
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "fint")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1 GHC.Generics.R [Lib.BedRecord])
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "rint")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1 GHC.Generics.R [Lib.BedRecord]))
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "pintflag")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "trimdflag")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool))
                             @ x
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "fint")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R [Lib.BedRecord]))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "rint")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R [Lib.BedRecord]))
                                @ x
                                g20
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N <GHC.Generics.R>_P <[Lib.BedRecord]>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "fint")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R [Lib.BedRecord]>_R) <x>_N))
                                g21
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N <GHC.Generics.R>_P <[Lib.BedRecord]>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "rint")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R [Lib.BedRecord]>_R) <x>_N)))
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "pintflag")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "trimdflag")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool))
                                @ x
                                g22
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N <GHC.Generics.R>_P <GHC.Types.Bool>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "pintflag")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R GHC.Types.Bool>_R) <x>_N))
                                g23
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N <GHC.Generics.R>_P <GHC.Types.Bool>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "trimdflag")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R GHC.Types.Bool>_R) <x>_N)))))
                       (GHC.Generics.:*:
                          @ *
                          @ ((GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "trimdpos")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "trimdendpos")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R GHC.Integer.Type.Integer))
                             GHC.Generics.:*: (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "headerstrings")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R Lib.Header)
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "isheader")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     GHC.Types.Bool)))
                          @ ((GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "mid")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1
                                   GHC.Generics.R Data.ByteString.Internal.ByteString)
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "xmid")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R
                                                    Data.ByteString.Internal.ByteString))
                             GHC.Generics.:*: (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "tbed")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R Lib.BedRecord)
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just
                                                                        "trimdToZeroLength")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     GHC.Types.Bool)))
                          @ x
                          (GHC.Generics.:*:
                             @ *
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "trimdpos")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "trimdendpos")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1
                                                      GHC.Generics.R GHC.Integer.Type.Integer))
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "headerstrings")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1 GHC.Generics.R Lib.Header)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "isheader")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool))
                             @ x
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "trimdpos")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "trimdendpos")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                                @ x
                                g24
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <GHC.Integer.Type.Integer>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "trimdpos")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  GHC.Integer.Type.Integer>_R) <x>_N))
                                g25
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <GHC.Integer.Type.Integer>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "trimdendpos")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  GHC.Integer.Type.Integer>_R) <x>_N)))
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "headerstrings")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R Lib.Header))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "isheader")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool))
                                @ x
                                g26
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N <GHC.Generics.R>_P <Lib.Header>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "headerstrings")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R Lib.Header>_R) <x>_N))
                                g27
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N <GHC.Generics.R>_P <GHC.Types.Bool>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "isheader")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R GHC.Types.Bool>_R) <x>_N))))
                          (GHC.Generics.:*:
                             @ *
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "mid")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1
                                     GHC.Generics.R Data.ByteString.Internal.ByteString)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "xmid")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1
                                                      GHC.Generics.R
                                                      Data.ByteString.Internal.ByteString))
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "tbed")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1 GHC.Generics.R Lib.BedRecord)
                                GHC.Generics.:*: GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "trimdToZeroLength")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool))
                             @ x
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "mid")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1
                                        GHC.Generics.R Data.ByteString.Internal.ByteString))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "xmid")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1
                                        GHC.Generics.R Data.ByteString.Internal.ByteString))
                                @ x
                                g28
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <Data.ByteString.Internal.ByteString>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "mid")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString>_R) <x>_N))
                                g29
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <Data.ByteString.Internal.ByteString>_R
                                               <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "xmid")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString>_R) <x>_N)))
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "tbed")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R Lib.BedRecord))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "trimdToZeroLength")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool))
                                @ x
                                g30
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N <GHC.Generics.R>_P <Lib.BedRecord>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "tbed")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R Lib.BedRecord>_R) <x>_N))
                                g31
                                  `cast`
                                (Trans
                                     (Sym (GHC.Generics.N:K1[0]
                                               <*>_N <GHC.Generics.R>_P <GHC.Types.Bool>_R <x>_P))
                                     (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "trimdToZeroLength")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R GHC.Types.Bool>_R) <x>_N)))))))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <*>_N
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "AlignedRead" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <(((GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Base.Just "qname")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1
                                    GHC.Generics.R Data.ByteString.Internal.ByteString)
                               GHC.Generics.:*: (GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "flag")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       ('GHC.Base.Just "rname")
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R Lib.UChr)))
                              GHC.Generics.:*: ((GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "pos")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1
                                                      GHC.Generics.R GHC.Integer.Type.Integer)
                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       ('GHC.Base.Just "endpos")
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R
                                                                       GHC.Integer.Type.Integer))
                                                GHC.Generics.:*: (GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       ('GHC.Base.Just "mapqual")
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R
                                                                       GHC.Integer.Type.Integer)
                                                                  GHC.Generics.:*: GHC.Generics.M1
                                                                                     GHC.Generics.S
                                                                                     ('GHC.Generics.MetaSel
                                                                                        ('GHC.Base.Just
                                                                                           "cigar")
                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                        'GHC.Generics.DecidedLazy)
                                                                                     (GHC.Generics.K1
                                                                                        GHC.Generics.R
                                                                                        Data.ByteString.Internal.ByteString))))
                             GHC.Generics.:*: (((GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "trimdcigar")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1
                                                      GHC.Generics.R
                                                      Data.ByteString.Internal.ByteString)
                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       ('GHC.Base.Just "cigmap")
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R Lib.CigarMap))
                                                GHC.Generics.:*: (GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       ('GHC.Base.Just
                                                                          "trimdcigmap")
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R Lib.CigarMap)
                                                                  GHC.Generics.:*: GHC.Generics.M1
                                                                                     GHC.Generics.S
                                                                                     ('GHC.Generics.MetaSel
                                                                                        ('GHC.Base.Just
                                                                                           "rnext")
                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                        'GHC.Generics.DecidedLazy)
                                                                                     (GHC.Generics.K1
                                                                                        GHC.Generics.R
                                                                                        Data.ByteString.Internal.ByteString)))
                                               GHC.Generics.:*: ((GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       ('GHC.Base.Just "pnext")
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R
                                                                       GHC.Integer.Type.Integer)
                                                                  GHC.Generics.:*: GHC.Generics.M1
                                                                                     GHC.Generics.S
                                                                                     ('GHC.Generics.MetaSel
                                                                                        ('GHC.Base.Just
                                                                                           "tlen")
                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                        'GHC.Generics.DecidedLazy)
                                                                                     (GHC.Generics.K1
                                                                                        GHC.Generics.R
                                                                                        GHC.Integer.Type.Integer))
                                                                 GHC.Generics.:*: (GHC.Generics.M1
                                                                                     GHC.Generics.S
                                                                                     ('GHC.Generics.MetaSel
                                                                                        ('GHC.Base.Just
                                                                                           "refseq")
                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                        'GHC.Generics.DecidedLazy)
                                                                                     (GHC.Generics.K1
                                                                                        GHC.Generics.R
                                                                                        Data.ByteString.Internal.ByteString)
                                                                                   GHC.Generics.:*: GHC.Generics.M1
                                                                                                      GHC.Generics.S
                                                                                                      ('GHC.Generics.MetaSel
                                                                                                         ('GHC.Base.Just
                                                                                                            "basequal")
                                                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                                                         'GHC.Generics.NoSourceStrictness
                                                                                                         'GHC.Generics.DecidedLazy)
                                                                                                      (GHC.Generics.K1
                                                                                                         GHC.Generics.R
                                                                                                         Data.ByteString.Internal.ByteString)))))
                            GHC.Generics.:*: ((((GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "optfields")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1
                                                      GHC.Generics.R
                                                      Data.ByteString.Internal.ByteString)
                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       ('GHC.Base.Just "strand")
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R
                                                                       Data.ByteString.Internal.ByteString))
                                                GHC.Generics.:*: (GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       ('GHC.Base.Just "paired")
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R
                                                                       GHC.Types.Bool)
                                                                  GHC.Generics.:*: GHC.Generics.M1
                                                                                     GHC.Generics.S
                                                                                     ('GHC.Generics.MetaSel
                                                                                        ('GHC.Base.Just
                                                                                           "mapped")
                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                        'GHC.Generics.DecidedLazy)
                                                                                     (GHC.Generics.K1
                                                                                        GHC.Generics.R
                                                                                        GHC.Types.Bool)))
                                               GHC.Generics.:*: ((GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       ('GHC.Base.Just "fint")
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R
                                                                       [Lib.BedRecord])
                                                                  GHC.Generics.:*: GHC.Generics.M1
                                                                                     GHC.Generics.S
                                                                                     ('GHC.Generics.MetaSel
                                                                                        ('GHC.Base.Just
                                                                                           "rint")
                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                        'GHC.Generics.DecidedLazy)
                                                                                     (GHC.Generics.K1
                                                                                        GHC.Generics.R
                                                                                        [Lib.BedRecord]))
                                                                 GHC.Generics.:*: (GHC.Generics.M1
                                                                                     GHC.Generics.S
                                                                                     ('GHC.Generics.MetaSel
                                                                                        ('GHC.Base.Just
                                                                                           "pintflag")
                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                        'GHC.Generics.DecidedLazy)
                                                                                     (GHC.Generics.K1
                                                                                        GHC.Generics.R
                                                                                        GHC.Types.Bool)
                                                                                   GHC.Generics.:*: GHC.Generics.M1
                                                                                                      GHC.Generics.S
                                                                                                      ('GHC.Generics.MetaSel
                                                                                                         ('GHC.Base.Just
                                                                                                            "trimdflag")
                                                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                                                         'GHC.Generics.NoSourceStrictness
                                                                                                         'GHC.Generics.DecidedLazy)
                                                                                                      (GHC.Generics.K1
                                                                                                         GHC.Generics.R
                                                                                                         GHC.Types.Bool))))
                                              GHC.Generics.:*: (((GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       ('GHC.Base.Just "trimdpos")
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R
                                                                       GHC.Integer.Type.Integer)
                                                                  GHC.Generics.:*: GHC.Generics.M1
                                                                                     GHC.Generics.S
                                                                                     ('GHC.Generics.MetaSel
                                                                                        ('GHC.Base.Just
                                                                                           "trimdendpos")
                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                        'GHC.Generics.DecidedLazy)
                                                                                     (GHC.Generics.K1
                                                                                        GHC.Generics.R
                                                                                        GHC.Integer.Type.Integer))
                                                                 GHC.Generics.:*: (GHC.Generics.M1
                                                                                     GHC.Generics.S
                                                                                     ('GHC.Generics.MetaSel
                                                                                        ('GHC.Base.Just
                                                                                           "headerstrings")
                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                        'GHC.Generics.DecidedLazy)
                                                                                     (GHC.Generics.K1
                                                                                        GHC.Generics.R
                                                                                        Lib.Header)
                                                                                   GHC.Generics.:*: GHC.Generics.M1
                                                                                                      GHC.Generics.S
                                                                                                      ('GHC.Generics.MetaSel
                                                                                                         ('GHC.Base.Just
                                                                                                            "isheader")
                                                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                                                         'GHC.Generics.NoSourceStrictness
                                                                                                         'GHC.Generics.DecidedLazy)
                                                                                                      (GHC.Generics.K1
                                                                                                         GHC.Generics.R
                                                                                                         GHC.Types.Bool)))
                                                                GHC.Generics.:*: ((GHC.Generics.M1
                                                                                     GHC.Generics.S
                                                                                     ('GHC.Generics.MetaSel
                                                                                        ('GHC.Base.Just
                                                                                           "mid")
                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                        'GHC.Generics.DecidedLazy)
                                                                                     (GHC.Generics.K1
                                                                                        GHC.Generics.R
                                                                                        Data.ByteString.Internal.ByteString)
                                                                                   GHC.Generics.:*: GHC.Generics.M1
                                                                                                      GHC.Generics.S
                                                                                                      ('GHC.Generics.MetaSel
                                                                                                         ('GHC.Base.Just
                                                                                                            "xmid")
                                                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                                                         'GHC.Generics.NoSourceStrictness
                                                                                                         'GHC.Generics.DecidedLazy)
                                                                                                      (GHC.Generics.K1
                                                                                                         GHC.Generics.R
                                                                                                         Data.ByteString.Internal.ByteString))
                                                                                  GHC.Generics.:*: (GHC.Generics.M1
                                                                                                      GHC.Generics.S
                                                                                                      ('GHC.Generics.MetaSel
                                                                                                         ('GHC.Base.Just
                                                                                                            "tbed")
                                                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                                                         'GHC.Generics.NoSourceStrictness
                                                                                                         'GHC.Generics.DecidedLazy)
                                                                                                      (GHC.Generics.K1
                                                                                                         GHC.Generics.R
                                                                                                         Lib.BedRecord)
                                                                                                    GHC.Generics.:*: GHC.Generics.M1
                                                                                                                       GHC.Generics.S
                                                                                                                       ('GHC.Generics.MetaSel
                                                                                                                          ('GHC.Base.Just
                                                                                                                             "trimdToZeroLength")
                                                                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                                                                          'GHC.Generics.NoSourceStrictness
                                                                                                                          'GHC.Generics.DecidedLazy)
                                                                                                                       (GHC.Generics.K1
                                                                                                                          GHC.Generics.R
                                                                                                                          GHC.Types.Bool)))))>_R) <x>_N) }) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  $fGenericAlignedRead_$cto ::
    GHC.Generics.Rep Lib.AlignedRead x -> Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(S(S(S(LS)S(SS))S(S(SS)S(SS)))S(S(S(SS)S(SS))S(S(SS)S(SS)))),1*U(1*U(1*U(1*U(U,1*U(U,U)),1*U(1*U(U,U),1*U(U,U))),1*U(1*U(1*U(U,U),1*U(U,U)),1*U(1*U(U,U),1*U(U,U)))),1*U(1*U(1*U(1*U(U,U),1*U(U,U)),1*U(1*U(U,U),1*U(U,U))),1*U(1*U(1*U(U,U),1*U(U,U)),1*U(1*U(U,U),1*U(U,U)))))>,
     Unfolding: (\ @ x (ds6 :: GHC.Generics.Rep Lib.AlignedRead x) ->
                 case ds6
                        `cast`
                      (Trans
                           (Sub (Lib.Rep_AlignedRead[0]))
                           (Trans
                                (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.D>_P
                                     <'GHC.Generics.MetaData
                                        "AlignedRead"
                                        "Lib"
                                        "primerclip-0.3.4.0-1b5t2mlHPcvBmtAJ86MXDg"
                                        'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "AlignedRead" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                        ((((GHC.Generics.M1
                                              GHC.Generics.S
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "qname")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.K1
                                                 GHC.Generics.R Data.ByteString.Internal.ByteString)
                                            GHC.Generics.:*: (GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "flag")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R GHC.Types.Int)
                                                              GHC.Generics.:*: GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "rname")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    Lib.UChr)))
                                           GHC.Generics.:*: ((GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "pos")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R
                                                                   GHC.Integer.Type.Integer)
                                                              GHC.Generics.:*: GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "endpos")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    GHC.Integer.Type.Integer))
                                                             GHC.Generics.:*: (GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "mapqual")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    GHC.Integer.Type.Integer)
                                                                               GHC.Generics.:*: GHC.Generics.M1
                                                                                                  GHC.Generics.S
                                                                                                  ('GHC.Generics.MetaSel
                                                                                                     ('GHC.Base.Just
                                                                                                        "cigar")
                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                  (GHC.Generics.K1
                                                                                                     GHC.Generics.R
                                                                                                     Data.ByteString.Internal.ByteString))))
                                          GHC.Generics.:*: (((GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "trimdcigar")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R
                                                                   Data.ByteString.Internal.ByteString)
                                                              GHC.Generics.:*: GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "cigmap")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    Lib.CigarMap))
                                                             GHC.Generics.:*: (GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "trimdcigmap")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    Lib.CigarMap)
                                                                               GHC.Generics.:*: GHC.Generics.M1
                                                                                                  GHC.Generics.S
                                                                                                  ('GHC.Generics.MetaSel
                                                                                                     ('GHC.Base.Just
                                                                                                        "rnext")
                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                  (GHC.Generics.K1
                                                                                                     GHC.Generics.R
                                                                                                     Data.ByteString.Internal.ByteString)))
                                                            GHC.Generics.:*: ((GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "pnext")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    GHC.Integer.Type.Integer)
                                                                               GHC.Generics.:*: GHC.Generics.M1
                                                                                                  GHC.Generics.S
                                                                                                  ('GHC.Generics.MetaSel
                                                                                                     ('GHC.Base.Just
                                                                                                        "tlen")
                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                  (GHC.Generics.K1
                                                                                                     GHC.Generics.R
                                                                                                     GHC.Integer.Type.Integer))
                                                                              GHC.Generics.:*: (GHC.Generics.M1
                                                                                                  GHC.Generics.S
                                                                                                  ('GHC.Generics.MetaSel
                                                                                                     ('GHC.Base.Just
                                                                                                        "refseq")
                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                  (GHC.Generics.K1
                                                                                                     GHC.Generics.R
                                                                                                     Data.ByteString.Internal.ByteString)
                                                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                                                   GHC.Generics.S
                                                                                                                   ('GHC.Generics.MetaSel
                                                                                                                      ('GHC.Base.Just
                                                                                                                         "basequal")
                                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                                   (GHC.Generics.K1
                                                                                                                      GHC.Generics.R
                                                                                                                      Data.ByteString.Internal.ByteString)))))
                                         GHC.Generics.:*: ((((GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "optfields")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R
                                                                   Data.ByteString.Internal.ByteString)
                                                              GHC.Generics.:*: GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "strand")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    Data.ByteString.Internal.ByteString))
                                                             GHC.Generics.:*: (GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "paired")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    GHC.Types.Bool)
                                                                               GHC.Generics.:*: GHC.Generics.M1
                                                                                                  GHC.Generics.S
                                                                                                  ('GHC.Generics.MetaSel
                                                                                                     ('GHC.Base.Just
                                                                                                        "mapped")
                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                  (GHC.Generics.K1
                                                                                                     GHC.Generics.R
                                                                                                     GHC.Types.Bool)))
                                                            GHC.Generics.:*: ((GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "fint")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    [Lib.BedRecord])
                                                                               GHC.Generics.:*: GHC.Generics.M1
                                                                                                  GHC.Generics.S
                                                                                                  ('GHC.Generics.MetaSel
                                                                                                     ('GHC.Base.Just
                                                                                                        "rint")
                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                  (GHC.Generics.K1
                                                                                                     GHC.Generics.R
                                                                                                     [Lib.BedRecord]))
                                                                              GHC.Generics.:*: (GHC.Generics.M1
                                                                                                  GHC.Generics.S
                                                                                                  ('GHC.Generics.MetaSel
                                                                                                     ('GHC.Base.Just
                                                                                                        "pintflag")
                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                  (GHC.Generics.K1
                                                                                                     GHC.Generics.R
                                                                                                     GHC.Types.Bool)
                                                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                                                   GHC.Generics.S
                                                                                                                   ('GHC.Generics.MetaSel
                                                                                                                      ('GHC.Base.Just
                                                                                                                         "trimdflag")
                                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                                   (GHC.Generics.K1
                                                                                                                      GHC.Generics.R
                                                                                                                      GHC.Types.Bool))))
                                                           GHC.Generics.:*: (((GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "trimdpos")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    GHC.Integer.Type.Integer)
                                                                               GHC.Generics.:*: GHC.Generics.M1
                                                                                                  GHC.Generics.S
                                                                                                  ('GHC.Generics.MetaSel
                                                                                                     ('GHC.Base.Just
                                                                                                        "trimdendpos")
                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                  (GHC.Generics.K1
                                                                                                     GHC.Generics.R
                                                                                                     GHC.Integer.Type.Integer))
                                                                              GHC.Generics.:*: (GHC.Generics.M1
                                                                                                  GHC.Generics.S
                                                                                                  ('GHC.Generics.MetaSel
                                                                                                     ('GHC.Base.Just
                                                                                                        "headerstrings")
                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                  (GHC.Generics.K1
                                                                                                     GHC.Generics.R
                                                                                                     Lib.Header)
                                                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                                                   GHC.Generics.S
                                                                                                                   ('GHC.Generics.MetaSel
                                                                                                                      ('GHC.Base.Just
                                                                                                                         "isheader")
                                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                                   (GHC.Generics.K1
                                                                                                                      GHC.Generics.R
                                                                                                                      GHC.Types.Bool)))
                                                                             GHC.Generics.:*: ((GHC.Generics.M1
                                                                                                  GHC.Generics.S
                                                                                                  ('GHC.Generics.MetaSel
                                                                                                     ('GHC.Base.Just
                                                                                                        "mid")
                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                  (GHC.Generics.K1
                                                                                                     GHC.Generics.R
                                                                                                     Data.ByteString.Internal.ByteString)
                                                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                                                   GHC.Generics.S
                                                                                                                   ('GHC.Generics.MetaSel
                                                                                                                      ('GHC.Base.Just
                                                                                                                         "xmid")
                                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                                   (GHC.Generics.K1
                                                                                                                      GHC.Generics.R
                                                                                                                      Data.ByteString.Internal.ByteString))
                                                                                               GHC.Generics.:*: (GHC.Generics.M1
                                                                                                                   GHC.Generics.S
                                                                                                                   ('GHC.Generics.MetaSel
                                                                                                                      ('GHC.Base.Just
                                                                                                                         "tbed")
                                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                                   (GHC.Generics.K1
                                                                                                                      GHC.Generics.R
                                                                                                                      Lib.BedRecord)
                                                                                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                    GHC.Generics.S
                                                                                                                                    ('GHC.Generics.MetaSel
                                                                                                                                       ('GHC.Base.Just
                                                                                                                                          "trimdToZeroLength")
                                                                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                                                                       'GHC.Generics.DecidedLazy)
                                                                                                                                    (GHC.Generics.K1
                                                                                                                                       GHC.Generics.R
                                                                                                                                       GHC.Types.Bool))))))>_R)
                                (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "AlignedRead" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <(((GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "qname")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1
                                              GHC.Generics.R Data.ByteString.Internal.ByteString)
                                         GHC.Generics.:*: (GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "flag")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R GHC.Types.Int)
                                                           GHC.Generics.:*: GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "rname")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 Lib.UChr)))
                                        GHC.Generics.:*: ((GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "pos")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R
                                                                GHC.Integer.Type.Integer)
                                                           GHC.Generics.:*: GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "endpos")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 GHC.Integer.Type.Integer))
                                                          GHC.Generics.:*: (GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "mapqual")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 GHC.Integer.Type.Integer)
                                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                                               GHC.Generics.S
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Base.Just
                                                                                                     "cigar")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.K1
                                                                                                  GHC.Generics.R
                                                                                                  Data.ByteString.Internal.ByteString))))
                                       GHC.Generics.:*: (((GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "trimdcigar")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R
                                                                Data.ByteString.Internal.ByteString)
                                                           GHC.Generics.:*: GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "cigmap")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 Lib.CigarMap))
                                                          GHC.Generics.:*: (GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "trimdcigmap")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 Lib.CigarMap)
                                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                                               GHC.Generics.S
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Base.Just
                                                                                                     "rnext")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.K1
                                                                                                  GHC.Generics.R
                                                                                                  Data.ByteString.Internal.ByteString)))
                                                         GHC.Generics.:*: ((GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "pnext")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 GHC.Integer.Type.Integer)
                                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                                               GHC.Generics.S
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Base.Just
                                                                                                     "tlen")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.K1
                                                                                                  GHC.Generics.R
                                                                                                  GHC.Integer.Type.Integer))
                                                                           GHC.Generics.:*: (GHC.Generics.M1
                                                                                               GHC.Generics.S
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Base.Just
                                                                                                     "refseq")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.K1
                                                                                                  GHC.Generics.R
                                                                                                  Data.ByteString.Internal.ByteString)
                                                                                             GHC.Generics.:*: GHC.Generics.M1
                                                                                                                GHC.Generics.S
                                                                                                                ('GHC.Generics.MetaSel
                                                                                                                   ('GHC.Base.Just
                                                                                                                      "basequal")
                                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                                (GHC.Generics.K1
                                                                                                                   GHC.Generics.R
                                                                                                                   Data.ByteString.Internal.ByteString)))))
                                      GHC.Generics.:*: ((((GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "optfields")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R
                                                                Data.ByteString.Internal.ByteString)
                                                           GHC.Generics.:*: GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "strand")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 Data.ByteString.Internal.ByteString))
                                                          GHC.Generics.:*: (GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "paired")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 GHC.Types.Bool)
                                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                                               GHC.Generics.S
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Base.Just
                                                                                                     "mapped")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.K1
                                                                                                  GHC.Generics.R
                                                                                                  GHC.Types.Bool)))
                                                         GHC.Generics.:*: ((GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "fint")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 [Lib.BedRecord])
                                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                                               GHC.Generics.S
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Base.Just
                                                                                                     "rint")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.K1
                                                                                                  GHC.Generics.R
                                                                                                  [Lib.BedRecord]))
                                                                           GHC.Generics.:*: (GHC.Generics.M1
                                                                                               GHC.Generics.S
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Base.Just
                                                                                                     "pintflag")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.K1
                                                                                                  GHC.Generics.R
                                                                                                  GHC.Types.Bool)
                                                                                             GHC.Generics.:*: GHC.Generics.M1
                                                                                                                GHC.Generics.S
                                                                                                                ('GHC.Generics.MetaSel
                                                                                                                   ('GHC.Base.Just
                                                                                                                      "trimdflag")
                                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                                (GHC.Generics.K1
                                                                                                                   GHC.Generics.R
                                                                                                                   GHC.Types.Bool))))
                                                        GHC.Generics.:*: (((GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "trimdpos")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 GHC.Integer.Type.Integer)
                                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                                               GHC.Generics.S
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Base.Just
                                                                                                     "trimdendpos")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.K1
                                                                                                  GHC.Generics.R
                                                                                                  GHC.Integer.Type.Integer))
                                                                           GHC.Generics.:*: (GHC.Generics.M1
                                                                                               GHC.Generics.S
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Base.Just
                                                                                                     "headerstrings")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.K1
                                                                                                  GHC.Generics.R
                                                                                                  Lib.Header)
                                                                                             GHC.Generics.:*: GHC.Generics.M1
                                                                                                                GHC.Generics.S
                                                                                                                ('GHC.Generics.MetaSel
                                                                                                                   ('GHC.Base.Just
                                                                                                                      "isheader")
                                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                                (GHC.Generics.K1
                                                                                                                   GHC.Generics.R
                                                                                                                   GHC.Types.Bool)))
                                                                          GHC.Generics.:*: ((GHC.Generics.M1
                                                                                               GHC.Generics.S
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Base.Just
                                                                                                     "mid")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.K1
                                                                                                  GHC.Generics.R
                                                                                                  Data.ByteString.Internal.ByteString)
                                                                                             GHC.Generics.:*: GHC.Generics.M1
                                                                                                                GHC.Generics.S
                                                                                                                ('GHC.Generics.MetaSel
                                                                                                                   ('GHC.Base.Just
                                                                                                                      "xmid")
                                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                                (GHC.Generics.K1
                                                                                                                   GHC.Generics.R
                                                                                                                   Data.ByteString.Internal.ByteString))
                                                                                            GHC.Generics.:*: (GHC.Generics.M1
                                                                                                                GHC.Generics.S
                                                                                                                ('GHC.Generics.MetaSel
                                                                                                                   ('GHC.Base.Just
                                                                                                                      "tbed")
                                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                                (GHC.Generics.K1
                                                                                                                   GHC.Generics.R
                                                                                                                   Lib.BedRecord)
                                                                                                              GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                 GHC.Generics.S
                                                                                                                                 ('GHC.Generics.MetaSel
                                                                                                                                    ('GHC.Base.Just
                                                                                                                                       "trimdToZeroLength")
                                                                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                                                                    'GHC.Generics.DecidedLazy)
                                                                                                                                 (GHC.Generics.K1
                                                                                                                                    GHC.Generics.R
                                                                                                                                    GHC.Types.Bool)))))>_R)) <x>_N) of wild { GHC.Generics.:*: ds7 ds8 ->
                 case ds7 of wild1 { GHC.Generics.:*: ds9 ds10 ->
                 case ds9 of wild2 { GHC.Generics.:*: ds11 ds12 ->
                 case ds11 of wild3 { GHC.Generics.:*: ds13 ds14 ->
                 case ds14 of wild4 { GHC.Generics.:*: ds15 ds16 ->
                 case ds12 of wild5 { GHC.Generics.:*: ds17 ds18 ->
                 case ds17 of wild6 { GHC.Generics.:*: ds19 ds20 ->
                 case ds18 of wild7 { GHC.Generics.:*: ds21 ds22 ->
                 case ds10 of wild8 { GHC.Generics.:*: ds23 ds24 ->
                 case ds23 of wild9 { GHC.Generics.:*: ds25 ds26 ->
                 case ds25 of wild10 { GHC.Generics.:*: ds27 ds28 ->
                 case ds26 of wild11 { GHC.Generics.:*: ds29 ds30 ->
                 case ds24 of wild12 { GHC.Generics.:*: ds31 ds32 ->
                 case ds31 of wild13 { GHC.Generics.:*: ds33 ds34 ->
                 case ds32 of wild14 { GHC.Generics.:*: ds35 ds36 ->
                 case ds8 of wild15 { GHC.Generics.:*: ds37 ds38 ->
                 case ds37 of wild16 { GHC.Generics.:*: ds39 ds40 ->
                 case ds39 of wild17 { GHC.Generics.:*: ds41 ds42 ->
                 case ds41 of wild18 { GHC.Generics.:*: ds43 ds44 ->
                 case ds42 of wild19 { GHC.Generics.:*: ds45 ds46 ->
                 case ds40 of wild20 { GHC.Generics.:*: ds47 ds48 ->
                 case ds47 of wild21 { GHC.Generics.:*: ds49 ds50 ->
                 case ds48 of wild22 { GHC.Generics.:*: ds51 ds52 ->
                 case ds38 of wild23 { GHC.Generics.:*: ds53 ds54 ->
                 case ds53 of wild24 { GHC.Generics.:*: ds55 ds56 ->
                 case ds55 of wild25 { GHC.Generics.:*: ds57 ds58 ->
                 case ds56 of wild26 { GHC.Generics.:*: ds59 ds60 ->
                 case ds54 of wild27 { GHC.Generics.:*: ds61 ds62 ->
                 case ds61 of wild28 { GHC.Generics.:*: ds63 ds64 ->
                 case ds62 of wild29 { GHC.Generics.:*: ds65 ds66 ->
                 Lib.AlignedRead
                   ds13
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "qname")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N
                             <GHC.Generics.R>_P
                             <Data.ByteString.Internal.ByteString>_R
                             <x>_P))
                   ds15
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "flag")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Types.Int>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Types.Int>_R <x>_P))
                   ds16
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "rname")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R Lib.UChr>_R <x>_N)
                        (GHC.Generics.N:K1[0] <*>_N <GHC.Generics.R>_P <Lib.UChr>_R <x>_P))
                   ds19
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "pos")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ds20
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "endpos")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ds21
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "mapqual")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ds22
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "cigar")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N
                             <GHC.Generics.R>_P
                             <Data.ByteString.Internal.ByteString>_R
                             <x>_P))
                   ds27
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "trimdcigar")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N
                             <GHC.Generics.R>_P
                             <Data.ByteString.Internal.ByteString>_R
                             <x>_P))
                   ds28
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "cigmap")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R Lib.CigarMap>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <Lib.CigarMap>_R <x>_P))
                   ds29
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "trimdcigmap")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R Lib.CigarMap>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <Lib.CigarMap>_R <x>_P))
                   ds30
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "rnext")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N
                             <GHC.Generics.R>_P
                             <Data.ByteString.Internal.ByteString>_R
                             <x>_P))
                   ds33
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "pnext")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ds34
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "tlen")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ds35
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "refseq")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N
                             <GHC.Generics.R>_P
                             <Data.ByteString.Internal.ByteString>_R
                             <x>_P))
                   ds36
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "basequal")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N
                             <GHC.Generics.R>_P
                             <Data.ByteString.Internal.ByteString>_R
                             <x>_P))
                   ds43
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "optfields")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N
                             <GHC.Generics.R>_P
                             <Data.ByteString.Internal.ByteString>_R
                             <x>_P))
                   ds44
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "strand")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N
                             <GHC.Generics.R>_P
                             <Data.ByteString.Internal.ByteString>_R
                             <x>_P))
                   ds45
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "paired")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Types.Bool>_R <x>_P))
                   ds46
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "mapped")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Types.Bool>_R <x>_P))
                   ds49
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "fint")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R [Lib.BedRecord]>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <[Lib.BedRecord]>_R <x>_P))
                   ds50
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "rint")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R [Lib.BedRecord]>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <[Lib.BedRecord]>_R <x>_P))
                   ds51
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "pintflag")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Types.Bool>_R <x>_P))
                   ds52
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "trimdflag")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Types.Bool>_R <x>_P))
                   ds57
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "trimdpos")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ds58
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "trimdendpos")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ds59
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "headerstrings")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R Lib.Header>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <Lib.Header>_R <x>_P))
                   ds60
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "isheader")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Types.Bool>_R <x>_P))
                   ds63
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "mid")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N
                             <GHC.Generics.R>_P
                             <Data.ByteString.Internal.ByteString>_R
                             <x>_P))
                   ds64
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "xmid")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N
                             <GHC.Generics.R>_P
                             <Data.ByteString.Internal.ByteString>_R
                             <x>_P))
                   ds65
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "tbed")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R Lib.BedRecord>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <Lib.BedRecord>_R <x>_P))
                   ds66
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "trimdToZeroLength")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N
                             <GHC.Generics.R>_P
                             <GHC.Types.Bool>_R
                             <x>_P)) } } } } } } } } } } } } } } } } } } } } } } } } } } } } } }) -}
fdfc37bd80569587de4159264d092980
  $fGenericBEDPE :: GHC.Generics.Generic Lib.BEDPE
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.BEDPE
                  Lib.$fGenericBEDPE1
                    `cast`
                  (forall (x :: <*>_N).
                   <Lib.BEDPE>_R
                   ->_R Trans
                            (Sym (GHC.Generics.N:M1[0]
                                      <*>_N
                                      <GHC.Generics.D>_P
                                      <'GHC.Generics.MetaData
                                         "BEDPE"
                                         "Lib"
                                         "primerclip-0.3.4.0-1b5t2mlHPcvBmtAJ86MXDg"
                                         'GHC.Types.False>_P
                                      <GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "BEDPE" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                         ((GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "chr1")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                                           GHC.Generics.:*: (GHC.Generics.M1
                                                               GHC.Generics.S
                                                               ('GHC.Generics.MetaSel
                                                                  ('GHC.Base.Just "start1")
                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                  'GHC.Generics.NoSourceStrictness
                                                                  'GHC.Generics.DecidedLazy)
                                                               (GHC.Generics.K1
                                                                  GHC.Generics.R
                                                                  GHC.Integer.Type.Integer)
                                                             GHC.Generics.:*: GHC.Generics.M1
                                                                                GHC.Generics.S
                                                                                ('GHC.Generics.MetaSel
                                                                                   ('GHC.Base.Just
                                                                                      "end1")
                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                   'GHC.Generics.DecidedLazy)
                                                                                (GHC.Generics.K1
                                                                                   GHC.Generics.R
                                                                                   GHC.Integer.Type.Integer)))
                                          GHC.Generics.:*: ((GHC.Generics.M1
                                                               GHC.Generics.S
                                                               ('GHC.Generics.MetaSel
                                                                  ('GHC.Base.Just "chr2")
                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                  'GHC.Generics.NoSourceStrictness
                                                                  'GHC.Generics.DecidedLazy)
                                                               (GHC.Generics.K1
                                                                  GHC.Generics.R Lib.UChr)
                                                             GHC.Generics.:*: GHC.Generics.M1
                                                                                GHC.Generics.S
                                                                                ('GHC.Generics.MetaSel
                                                                                   ('GHC.Base.Just
                                                                                      "start2")
                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                   'GHC.Generics.DecidedLazy)
                                                                                (GHC.Generics.K1
                                                                                   GHC.Generics.R
                                                                                   GHC.Integer.Type.Integer))
                                                            GHC.Generics.:*: (GHC.Generics.M1
                                                                                GHC.Generics.S
                                                                                ('GHC.Generics.MetaSel
                                                                                   ('GHC.Base.Just
                                                                                      "end2")
                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                   'GHC.Generics.DecidedLazy)
                                                                                (GHC.Generics.K1
                                                                                   GHC.Generics.R
                                                                                   GHC.Integer.Type.Integer)
                                                                              GHC.Generics.:*: GHC.Generics.M1
                                                                                                 GHC.Generics.S
                                                                                                 ('GHC.Generics.MetaSel
                                                                                                    ('GHC.Base.Just
                                                                                                       "bedpename")
                                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                                    'GHC.Generics.DecidedLazy)
                                                                                                 (GHC.Generics.K1
                                                                                                    GHC.Generics.R
                                                                                                    Data.ByteString.Internal.ByteString))))>_R))
                            (Sub (Sym (Lib.Rep_BEDPE[0]))) <x>_N)
                  Lib.$fGenericBEDPE_$cto -}
fdfc37bd80569587de4159264d092980
  $fGenericBEDPE1 ::
    Lib.BEDPE
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "BEDPE" 'GHC.Generics.PrefixI 'GHC.Types.True)
         ((GHC.Generics.M1
             GHC.Generics.S
             ('GHC.Generics.MetaSel
                ('GHC.Base.Just "chr1")
                'GHC.Generics.NoSourceUnpackedness
                'GHC.Generics.NoSourceStrictness
                'GHC.Generics.DecidedLazy)
             (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
           GHC.Generics.:*: (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "start1")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                             GHC.Generics.:*: GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "end1")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R GHC.Integer.Type.Integer)))
          GHC.Generics.:*: ((GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "chr2")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                             GHC.Generics.:*: GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "start2")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R GHC.Integer.Type.Integer))
                            GHC.Generics.:*: (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "end2")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R GHC.Integer.Type.Integer)
                                              GHC.Generics.:*: GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Base.Just "bedpename")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    Data.ByteString.Internal.ByteString))))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U,U,U,U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: Lib.BEDPE) ->
                 case x1 of wild { Lib.BEDPE g1 g2 g3 g4 g5 g6 g7 ->
                 (GHC.Generics.:*:
                    @ *
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "chr1")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                       GHC.Generics.:*: (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "start1")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "end1")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R
                                                               GHC.Integer.Type.Integer)))
                    @ ((GHC.Generics.M1
                          GHC.Generics.S
                          ('GHC.Generics.MetaSel
                             ('GHC.Base.Just "chr2")
                             'GHC.Generics.NoSourceUnpackedness
                             'GHC.Generics.NoSourceStrictness
                             'GHC.Generics.DecidedLazy)
                          (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                        GHC.Generics.:*: GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "start2")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1
                                              GHC.Generics.R GHC.Integer.Type.Integer))
                       GHC.Generics.:*: (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "end2")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "bedpename")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R
                                                               Data.ByteString.Internal.ByteString)))
                    @ x
                    (GHC.Generics.:*:
                       @ *
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "chr1")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R Lib.UChr))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "start1")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                          GHC.Generics.:*: GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "end1")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R GHC.Integer.Type.Integer))
                       @ x
                       g1
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <*>_N <GHC.Generics.R>_P <Lib.UChr>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <*>_N
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "chr1")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1 GHC.Generics.R Lib.UChr>_R) <x>_N))
                       (GHC.Generics.:*:
                          @ *
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "start1")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "end1")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                          @ x
                          g2
                            `cast`
                          (Trans
                               (Sym (GHC.Generics.N:K1[0]
                                         <*>_N
                                         <GHC.Generics.R>_P
                                         <GHC.Integer.Type.Integer>_R
                                         <x>_P))
                               (Sym (GHC.Generics.N:M1[0]
                                         <*>_N
                                         <GHC.Generics.S>_P
                                         <'GHC.Generics.MetaSel
                                            ('GHC.Base.Just "start1")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy>_P
                                         <GHC.Generics.K1
                                            GHC.Generics.R GHC.Integer.Type.Integer>_R) <x>_N))
                          g3
                            `cast`
                          (Trans
                               (Sym (GHC.Generics.N:K1[0]
                                         <*>_N
                                         <GHC.Generics.R>_P
                                         <GHC.Integer.Type.Integer>_R
                                         <x>_P))
                               (Sym (GHC.Generics.N:M1[0]
                                         <*>_N
                                         <GHC.Generics.S>_P
                                         <'GHC.Generics.MetaSel
                                            ('GHC.Base.Just "end1")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy>_P
                                         <GHC.Generics.K1
                                            GHC.Generics.R GHC.Integer.Type.Integer>_R) <x>_N))))
                    (GHC.Generics.:*:
                       @ *
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "chr2")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                          GHC.Generics.:*: GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "start2")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R GHC.Integer.Type.Integer))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "end2")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                          GHC.Generics.:*: GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "bedpename")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R Data.ByteString.Internal.ByteString))
                       @ x
                       (GHC.Generics.:*:
                          @ *
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "chr2")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R Lib.UChr))
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "start2")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                          @ x
                          g4
                            `cast`
                          (Trans
                               (Sym (GHC.Generics.N:K1[0]
                                         <*>_N <GHC.Generics.R>_P <Lib.UChr>_R <x>_P))
                               (Sym (GHC.Generics.N:M1[0]
                                         <*>_N
                                         <GHC.Generics.S>_P
                                         <'GHC.Generics.MetaSel
                                            ('GHC.Base.Just "chr2")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy>_P
                                         <GHC.Generics.K1 GHC.Generics.R Lib.UChr>_R) <x>_N))
                          g5
                            `cast`
                          (Trans
                               (Sym (GHC.Generics.N:K1[0]
                                         <*>_N
                                         <GHC.Generics.R>_P
                                         <GHC.Integer.Type.Integer>_R
                                         <x>_P))
                               (Sym (GHC.Generics.N:M1[0]
                                         <*>_N
                                         <GHC.Generics.S>_P
                                         <'GHC.Generics.MetaSel
                                            ('GHC.Base.Just "start2")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy>_P
                                         <GHC.Generics.K1
                                            GHC.Generics.R GHC.Integer.Type.Integer>_R) <x>_N)))
                       (GHC.Generics.:*:
                          @ *
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "end2")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "bedpename")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1
                                  GHC.Generics.R Data.ByteString.Internal.ByteString))
                          @ x
                          g6
                            `cast`
                          (Trans
                               (Sym (GHC.Generics.N:K1[0]
                                         <*>_N
                                         <GHC.Generics.R>_P
                                         <GHC.Integer.Type.Integer>_R
                                         <x>_P))
                               (Sym (GHC.Generics.N:M1[0]
                                         <*>_N
                                         <GHC.Generics.S>_P
                                         <'GHC.Generics.MetaSel
                                            ('GHC.Base.Just "end2")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy>_P
                                         <GHC.Generics.K1
                                            GHC.Generics.R GHC.Integer.Type.Integer>_R) <x>_N))
                          g7
                            `cast`
                          (Trans
                               (Sym (GHC.Generics.N:K1[0]
                                         <*>_N
                                         <GHC.Generics.R>_P
                                         <Data.ByteString.Internal.ByteString>_R
                                         <x>_P))
                               (Sym (GHC.Generics.N:M1[0]
                                         <*>_N
                                         <GHC.Generics.S>_P
                                         <'GHC.Generics.MetaSel
                                            ('GHC.Base.Just "bedpename")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy>_P
                                         <GHC.Generics.K1
                                            GHC.Generics.R
                                            Data.ByteString.Internal.ByteString>_R) <x>_N)))))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <*>_N
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "BEDPE" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <(GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "chr1")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                             GHC.Generics.:*: (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "start1")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R GHC.Integer.Type.Integer)
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "end1")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     GHC.Integer.Type.Integer)))
                            GHC.Generics.:*: ((GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "chr2")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "start2")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     GHC.Integer.Type.Integer))
                                              GHC.Generics.:*: (GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "end2")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     GHC.Integer.Type.Integer)
                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                   GHC.Generics.S
                                                                                   ('GHC.Generics.MetaSel
                                                                                      ('GHC.Base.Just
                                                                                         "bedpename")
                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                      'GHC.Generics.DecidedLazy)
                                                                                   (GHC.Generics.K1
                                                                                      GHC.Generics.R
                                                                                      Data.ByteString.Internal.ByteString)))>_R) <x>_N) }) -}
fdfc37bd80569587de4159264d092980
  $fGenericBEDPE_$cto :: GHC.Generics.Rep Lib.BEDPE x -> Lib.BEDPE
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(S(LS)S(SS)),1*U(1*U(U,1*U(U,U)),1*U(1*U(U,U),1*U(U,U)))>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (ds6 :: GHC.Generics.Rep Lib.BEDPE x) ->
                 case ds6
                        `cast`
                      (Trans
                           (Sub (Lib.Rep_BEDPE[0]))
                           (Trans
                                (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.D>_P
                                     <'GHC.Generics.MetaData
                                        "BEDPE"
                                        "Lib"
                                        "primerclip-0.3.4.0-1b5t2mlHPcvBmtAJ86MXDg"
                                        'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "BEDPE" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                        ((GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "chr1")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                                          GHC.Generics.:*: (GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "start1")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 GHC.Integer.Type.Integer)
                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "end1")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  GHC.Integer.Type.Integer)))
                                         GHC.Generics.:*: ((GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "chr2")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R Lib.UChr)
                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "start2")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  GHC.Integer.Type.Integer))
                                                           GHC.Generics.:*: (GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "end2")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  GHC.Integer.Type.Integer)
                                                                             GHC.Generics.:*: GHC.Generics.M1
                                                                                                GHC.Generics.S
                                                                                                ('GHC.Generics.MetaSel
                                                                                                   ('GHC.Base.Just
                                                                                                      "bedpename")
                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                (GHC.Generics.K1
                                                                                                   GHC.Generics.R
                                                                                                   Data.ByteString.Internal.ByteString))))>_R)
                                (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "BEDPE" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <(GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "chr1")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                                       GHC.Generics.:*: (GHC.Generics.M1
                                                           GHC.Generics.S
                                                           ('GHC.Generics.MetaSel
                                                              ('GHC.Base.Just "start1")
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.K1
                                                              GHC.Generics.R
                                                              GHC.Integer.Type.Integer)
                                                         GHC.Generics.:*: GHC.Generics.M1
                                                                            GHC.Generics.S
                                                                            ('GHC.Generics.MetaSel
                                                                               ('GHC.Base.Just
                                                                                  "end1")
                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                               'GHC.Generics.NoSourceStrictness
                                                                               'GHC.Generics.DecidedLazy)
                                                                            (GHC.Generics.K1
                                                                               GHC.Generics.R
                                                                               GHC.Integer.Type.Integer)))
                                      GHC.Generics.:*: ((GHC.Generics.M1
                                                           GHC.Generics.S
                                                           ('GHC.Generics.MetaSel
                                                              ('GHC.Base.Just "chr2")
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                                                         GHC.Generics.:*: GHC.Generics.M1
                                                                            GHC.Generics.S
                                                                            ('GHC.Generics.MetaSel
                                                                               ('GHC.Base.Just
                                                                                  "start2")
                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                               'GHC.Generics.NoSourceStrictness
                                                                               'GHC.Generics.DecidedLazy)
                                                                            (GHC.Generics.K1
                                                                               GHC.Generics.R
                                                                               GHC.Integer.Type.Integer))
                                                        GHC.Generics.:*: (GHC.Generics.M1
                                                                            GHC.Generics.S
                                                                            ('GHC.Generics.MetaSel
                                                                               ('GHC.Base.Just
                                                                                  "end2")
                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                               'GHC.Generics.NoSourceStrictness
                                                                               'GHC.Generics.DecidedLazy)
                                                                            (GHC.Generics.K1
                                                                               GHC.Generics.R
                                                                               GHC.Integer.Type.Integer)
                                                                          GHC.Generics.:*: GHC.Generics.M1
                                                                                             GHC.Generics.S
                                                                                             ('GHC.Generics.MetaSel
                                                                                                ('GHC.Base.Just
                                                                                                   "bedpename")
                                                                                                'GHC.Generics.NoSourceUnpackedness
                                                                                                'GHC.Generics.NoSourceStrictness
                                                                                                'GHC.Generics.DecidedLazy)
                                                                                             (GHC.Generics.K1
                                                                                                GHC.Generics.R
                                                                                                Data.ByteString.Internal.ByteString)))>_R)) <x>_N) of wild { GHC.Generics.:*: ds7 ds8 ->
                 case ds7 of wild1 { GHC.Generics.:*: ds9 ds10 ->
                 case ds10 of wild2 { GHC.Generics.:*: ds11 ds12 ->
                 case ds8 of wild3 { GHC.Generics.:*: ds13 ds14 ->
                 case ds13 of wild4 { GHC.Generics.:*: ds15 ds16 ->
                 case ds14 of wild5 { GHC.Generics.:*: ds17 ds18 ->
                 Lib.BEDPE
                   ds9
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "chr1")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R Lib.UChr>_R <x>_N)
                        (GHC.Generics.N:K1[0] <*>_N <GHC.Generics.R>_P <Lib.UChr>_R <x>_P))
                   ds11
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "start1")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ds12
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "end1")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ds15
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "chr2")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R Lib.UChr>_R <x>_N)
                        (GHC.Generics.N:K1[0] <*>_N <GHC.Generics.R>_P <Lib.UChr>_R <x>_P))
                   ds16
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "start2")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ds17
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "end2")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ds18
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "bedpename")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N
                             <GHC.Generics.R>_P
                             <Data.ByteString.Internal.ByteString>_R
                             <x>_P)) } } } } } }) -}
78740db68f2462e9356716573fd65631
  $fGenericBedRecord :: GHC.Generics.Generic Lib.BedRecord
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.BedRecord
                  Lib.$fGenericBedRecord1
                    `cast`
                  (forall (x :: <*>_N).
                   <Lib.BedRecord>_R
                   ->_R Trans
                            (Sym (GHC.Generics.N:M1[0]
                                      <*>_N
                                      <GHC.Generics.D>_P
                                      <'GHC.Generics.MetaData
                                         "BedRecord"
                                         "Lib"
                                         "primerclip-0.3.4.0-1b5t2mlHPcvBmtAJ86MXDg"
                                         'GHC.Types.False>_P
                                      <GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "BedRecord" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                         ((GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "bedchr")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                                           GHC.Generics.:*: GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "bedstart")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 GHC.Integer.Type.Integer))
                                          GHC.Generics.:*: (GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "bedend")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 GHC.Integer.Type.Integer)
                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "bedname")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  Data.ByteString.Internal.ByteString)))>_R))
                            (Sub (Sym (Lib.Rep_BedRecord[0]))) <x>_N)
                  Lib.$fGenericBedRecord_$cto -}
78740db68f2462e9356716573fd65631
  $fGenericBedRecord1 ::
    Lib.BedRecord
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "BedRecord" 'GHC.Generics.PrefixI 'GHC.Types.True)
         ((GHC.Generics.M1
             GHC.Generics.S
             ('GHC.Generics.MetaSel
                ('GHC.Base.Just "bedchr")
                'GHC.Generics.NoSourceUnpackedness
                'GHC.Generics.NoSourceStrictness
                'GHC.Generics.DecidedLazy)
             (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
           GHC.Generics.:*: GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "bedstart")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
          GHC.Generics.:*: (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "bedend")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                            GHC.Generics.:*: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "bedname")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.ByteString.Internal.ByteString)))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: Lib.BedRecord) ->
                 case x1 of wild { Lib.BedRecord g1 g2 g3 g4 ->
                 (GHC.Generics.:*:
                    @ *
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "bedchr")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                       GHC.Generics.:*: GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "bedstart")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "bedend")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                       GHC.Generics.:*: GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "bedname")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1
                                             GHC.Generics.R Data.ByteString.Internal.ByteString))
                    @ x
                    (GHC.Generics.:*:
                       @ *
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "bedchr")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R Lib.UChr))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "bedstart")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                       @ x
                       g1
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <*>_N <GHC.Generics.R>_P <Lib.UChr>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <*>_N
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "bedchr")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1 GHC.Generics.R Lib.UChr>_R) <x>_N))
                       g2
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <*>_N <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <*>_N
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "bedstart")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1
                                         GHC.Generics.R GHC.Integer.Type.Integer>_R) <x>_N)))
                    (GHC.Generics.:*:
                       @ *
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "bedend")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "bedname")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1
                               GHC.Generics.R Data.ByteString.Internal.ByteString))
                       @ x
                       g3
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <*>_N <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <*>_N
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "bedend")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1
                                         GHC.Generics.R GHC.Integer.Type.Integer>_R) <x>_N))
                       g4
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <*>_N
                                      <GHC.Generics.R>_P
                                      <Data.ByteString.Internal.ByteString>_R
                                      <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <*>_N
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "bedname")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1
                                         GHC.Generics.R
                                         Data.ByteString.Internal.ByteString>_R) <x>_N))))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <*>_N
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "BedRecord" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <(GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "bedchr")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                             GHC.Generics.:*: GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "bedstart")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R GHC.Integer.Type.Integer))
                            GHC.Generics.:*: (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "bedend")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R GHC.Integer.Type.Integer)
                                              GHC.Generics.:*: GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Base.Just "bedname")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    Data.ByteString.Internal.ByteString))>_R) <x>_N) }) -}
78740db68f2462e9356716573fd65631
  $fGenericBedRecord_$cto ::
    GHC.Generics.Rep Lib.BedRecord x -> Lib.BedRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SS),1*U(1*U(U,U),1*U(U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (ds6 :: GHC.Generics.Rep Lib.BedRecord x) ->
                 case ds6
                        `cast`
                      (Trans
                           (Sub (Lib.Rep_BedRecord[0]))
                           (Trans
                                (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.D>_P
                                     <'GHC.Generics.MetaData
                                        "BedRecord"
                                        "Lib"
                                        "primerclip-0.3.4.0-1b5t2mlHPcvBmtAJ86MXDg"
                                        'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "BedRecord" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                        ((GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "bedchr")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                                          GHC.Generics.:*: GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "bedstart")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R
                                                                GHC.Integer.Type.Integer))
                                         GHC.Generics.:*: (GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "bedend")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R
                                                                GHC.Integer.Type.Integer)
                                                           GHC.Generics.:*: GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "bedname")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 Data.ByteString.Internal.ByteString)))>_R)
                                (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "BedRecord" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <(GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "bedchr")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.K1 GHC.Generics.R Lib.UChr)
                                       GHC.Generics.:*: GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "bedstart")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R
                                                             GHC.Integer.Type.Integer))
                                      GHC.Generics.:*: (GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "bedend")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R
                                                             GHC.Integer.Type.Integer)
                                                        GHC.Generics.:*: GHC.Generics.M1
                                                                           GHC.Generics.S
                                                                           ('GHC.Generics.MetaSel
                                                                              ('GHC.Base.Just
                                                                                 "bedname")
                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                              'GHC.Generics.NoSourceStrictness
                                                                              'GHC.Generics.DecidedLazy)
                                                                           (GHC.Generics.K1
                                                                              GHC.Generics.R
                                                                              Data.ByteString.Internal.ByteString))>_R)) <x>_N) of wild { GHC.Generics.:*: ds7 ds8 ->
                 case ds7 of wild1 { GHC.Generics.:*: ds9 ds10 ->
                 case ds8 of wild2 { GHC.Generics.:*: ds11 ds12 ->
                 Lib.BedRecord
                   ds9
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "bedchr")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R Lib.UChr>_R <x>_N)
                        (GHC.Generics.N:K1[0] <*>_N <GHC.Generics.R>_P <Lib.UChr>_R <x>_P))
                   ds10
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "bedstart")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ds11
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "bedend")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ds12
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "bedname")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Data.ByteString.Internal.ByteString>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N
                             <GHC.Generics.R>_P
                             <Data.ByteString.Internal.ByteString>_R
                             <x>_P)) } } }) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  $fGenericPairedAln :: GHC.Generics.Generic Lib.PairedAln
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.PairedAln
                  Lib.$fGenericPairedAln1
                    `cast`
                  (forall (x :: <*>_N).
                   <Lib.PairedAln>_R
                   ->_R Trans
                            (Sym (GHC.Generics.N:M1[0]
                                      <*>_N
                                      <GHC.Generics.D>_P
                                      <'GHC.Generics.MetaData
                                         "PairedAln"
                                         "Lib"
                                         "primerclip-0.3.4.0-1b5t2mlHPcvBmtAJ86MXDg"
                                         'GHC.Types.False>_P
                                      <GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "PairedAln" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                         ((GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "r1prim")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1 GHC.Generics.R Lib.AlignedRead)
                                           GHC.Generics.:*: GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "r2prim")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R Lib.AlignedRead))
                                          GHC.Generics.:*: (GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "r1secs")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R [Lib.AlignedRead])
                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "r2secs")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  [Lib.AlignedRead])))>_R))
                            (Sub (Sym (Lib.Rep_PairedAln[0]))) <x>_N)
                  Lib.$fGenericPairedAln_$cto -}
64e0a7b5a8db25e9b81a102c9fe8422f
  $fGenericPairedAln1 ::
    Lib.PairedAln
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "PairedAln" 'GHC.Generics.PrefixI 'GHC.Types.True)
         ((GHC.Generics.M1
             GHC.Generics.S
             ('GHC.Generics.MetaSel
                ('GHC.Base.Just "r1prim")
                'GHC.Generics.NoSourceUnpackedness
                'GHC.Generics.NoSourceStrictness
                'GHC.Generics.DecidedLazy)
             (GHC.Generics.K1 GHC.Generics.R Lib.AlignedRead)
           GHC.Generics.:*: GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "r2prim")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R Lib.AlignedRead))
          GHC.Generics.:*: (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "r1secs")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R [Lib.AlignedRead])
                            GHC.Generics.:*: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "r2secs")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1 GHC.Generics.R [Lib.AlignedRead])))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: Lib.PairedAln) ->
                 case x1 of wild { Lib.PairedAln g1 g2 g3 g4 ->
                 (GHC.Generics.:*:
                    @ *
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "r1prim")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R Lib.AlignedRead)
                       GHC.Generics.:*: GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "r2prim")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1 GHC.Generics.R Lib.AlignedRead))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "r1secs")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R [Lib.AlignedRead])
                       GHC.Generics.:*: GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "r2secs")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1 GHC.Generics.R [Lib.AlignedRead]))
                    @ x
                    (GHC.Generics.:*:
                       @ *
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "r1prim")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R Lib.AlignedRead))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "r2prim")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R Lib.AlignedRead))
                       @ x
                       g1
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <*>_N <GHC.Generics.R>_P <Lib.AlignedRead>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <*>_N
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "r1prim")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1 GHC.Generics.R Lib.AlignedRead>_R) <x>_N))
                       g2
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <*>_N <GHC.Generics.R>_P <Lib.AlignedRead>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <*>_N
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "r2prim")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1 GHC.Generics.R Lib.AlignedRead>_R) <x>_N)))
                    (GHC.Generics.:*:
                       @ *
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "r1secs")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R [Lib.AlignedRead]))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "r2secs")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R [Lib.AlignedRead]))
                       @ x
                       g3
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <*>_N <GHC.Generics.R>_P <[Lib.AlignedRead]>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <*>_N
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "r1secs")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1 GHC.Generics.R [Lib.AlignedRead]>_R) <x>_N))
                       g4
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <*>_N <GHC.Generics.R>_P <[Lib.AlignedRead]>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <*>_N
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "r2secs")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1
                                         GHC.Generics.R [Lib.AlignedRead]>_R) <x>_N))))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <*>_N
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "PairedAln" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <(GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "r1prim")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R Lib.AlignedRead)
                             GHC.Generics.:*: GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "r2prim")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1 GHC.Generics.R Lib.AlignedRead))
                            GHC.Generics.:*: (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "r1secs")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1 GHC.Generics.R [Lib.AlignedRead])
                                              GHC.Generics.:*: GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Base.Just "r2secs")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    [Lib.AlignedRead]))>_R) <x>_N) }) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  $fGenericPairedAln_$cto ::
    GHC.Generics.Rep Lib.PairedAln x -> Lib.PairedAln
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SS),1*U(1*U(U,U),1*U(U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (ds6 :: GHC.Generics.Rep Lib.PairedAln x) ->
                 case ds6
                        `cast`
                      (Trans
                           (Sub (Lib.Rep_PairedAln[0]))
                           (Trans
                                (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.D>_P
                                     <'GHC.Generics.MetaData
                                        "PairedAln"
                                        "Lib"
                                        "primerclip-0.3.4.0-1b5t2mlHPcvBmtAJ86MXDg"
                                        'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "PairedAln" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                        ((GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "r1prim")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.K1 GHC.Generics.R Lib.AlignedRead)
                                          GHC.Generics.:*: GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "r2prim")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R Lib.AlignedRead))
                                         GHC.Generics.:*: (GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "r1secs")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R [Lib.AlignedRead])
                                                           GHC.Generics.:*: GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "r2secs")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 [Lib.AlignedRead])))>_R)
                                (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "PairedAln" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <(GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "r1prim")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.K1 GHC.Generics.R Lib.AlignedRead)
                                       GHC.Generics.:*: GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "r2prim")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R Lib.AlignedRead))
                                      GHC.Generics.:*: (GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "r1secs")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R [Lib.AlignedRead])
                                                        GHC.Generics.:*: GHC.Generics.M1
                                                                           GHC.Generics.S
                                                                           ('GHC.Generics.MetaSel
                                                                              ('GHC.Base.Just
                                                                                 "r2secs")
                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                              'GHC.Generics.NoSourceStrictness
                                                                              'GHC.Generics.DecidedLazy)
                                                                           (GHC.Generics.K1
                                                                              GHC.Generics.R
                                                                              [Lib.AlignedRead]))>_R)) <x>_N) of wild { GHC.Generics.:*: ds7 ds8 ->
                 case ds7 of wild1 { GHC.Generics.:*: ds9 ds10 ->
                 case ds8 of wild2 { GHC.Generics.:*: ds11 ds12 ->
                 Lib.PairedAln
                   ds9
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "r1prim")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R Lib.AlignedRead>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <Lib.AlignedRead>_R <x>_P))
                   ds10
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "r2prim")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R Lib.AlignedRead>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <Lib.AlignedRead>_R <x>_P))
                   ds11
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "r1secs")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R [Lib.AlignedRead]>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <[Lib.AlignedRead]>_R <x>_P))
                   ds12
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "r2secs")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R [Lib.AlignedRead]>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <[Lib.AlignedRead]>_R <x>_P)) } } }) -}
738096376958aedf685c1b59f577962f
  $fGenericUChr :: GHC.Generics.Generic Lib.UChr
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.UChr
                  Lib.$fGenericUChr1
                    `cast`
                  (forall (x :: <*>_N).
                   <Lib.UChr>_R
                   ->_R Trans
                            (Sym (GHC.Generics.N:M1[0]
                                      <*>_N
                                      <GHC.Generics.D>_P
                                      <'GHC.Generics.MetaData
                                         "UChr"
                                         "Lib"
                                         "primerclip-0.3.4.0-1b5t2mlHPcvBmtAJ86MXDg"
                                         'GHC.Types.False>_P
                                      <(((((GHC.Generics.M1
                                              GHC.Generics.C
                                              ('GHC.Generics.MetaCons
                                                 "C1" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                              GHC.Generics.U1
                                            GHC.Generics.:+: (GHC.Generics.M1
                                                                GHC.Generics.C
                                                                ('GHC.Generics.MetaCons
                                                                   "C2"
                                                                   'GHC.Generics.PrefixI
                                                                   'GHC.Types.False)
                                                                GHC.Generics.U1
                                                              GHC.Generics.:+: GHC.Generics.M1
                                                                                 GHC.Generics.C
                                                                                 ('GHC.Generics.MetaCons
                                                                                    "C3"
                                                                                    'GHC.Generics.PrefixI
                                                                                    'GHC.Types.False)
                                                                                 GHC.Generics.U1))
                                           GHC.Generics.:+: (GHC.Generics.M1
                                                               GHC.Generics.C
                                                               ('GHC.Generics.MetaCons
                                                                  "C4"
                                                                  'GHC.Generics.PrefixI
                                                                  'GHC.Types.False)
                                                               GHC.Generics.U1
                                                             GHC.Generics.:+: (GHC.Generics.M1
                                                                                 GHC.Generics.C
                                                                                 ('GHC.Generics.MetaCons
                                                                                    "C5"
                                                                                    'GHC.Generics.PrefixI
                                                                                    'GHC.Types.False)
                                                                                 GHC.Generics.U1
                                                                               GHC.Generics.:+: GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "C6"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1)))
                                          GHC.Generics.:+: ((GHC.Generics.M1
                                                               GHC.Generics.C
                                                               ('GHC.Generics.MetaCons
                                                                  "C7"
                                                                  'GHC.Generics.PrefixI
                                                                  'GHC.Types.False)
                                                               GHC.Generics.U1
                                                             GHC.Generics.:+: (GHC.Generics.M1
                                                                                 GHC.Generics.C
                                                                                 ('GHC.Generics.MetaCons
                                                                                    "C8"
                                                                                    'GHC.Generics.PrefixI
                                                                                    'GHC.Types.False)
                                                                                 GHC.Generics.U1
                                                                               GHC.Generics.:+: GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "C9"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1))
                                                            GHC.Generics.:+: ((GHC.Generics.M1
                                                                                 GHC.Generics.C
                                                                                 ('GHC.Generics.MetaCons
                                                                                    "C10"
                                                                                    'GHC.Generics.PrefixI
                                                                                    'GHC.Types.False)
                                                                                 GHC.Generics.U1
                                                                               GHC.Generics.:+: GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "C11"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1)
                                                                              GHC.Generics.:+: (GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "C12"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "C13"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1))))
                                         GHC.Generics.:+: (((GHC.Generics.M1
                                                               GHC.Generics.C
                                                               ('GHC.Generics.MetaCons
                                                                  "C14"
                                                                  'GHC.Generics.PrefixI
                                                                  'GHC.Types.False)
                                                               GHC.Generics.U1
                                                             GHC.Generics.:+: (GHC.Generics.M1
                                                                                 GHC.Generics.C
                                                                                 ('GHC.Generics.MetaCons
                                                                                    "C15"
                                                                                    'GHC.Generics.PrefixI
                                                                                    'GHC.Types.False)
                                                                                 GHC.Generics.U1
                                                                               GHC.Generics.:+: GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "C16"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1))
                                                            GHC.Generics.:+: ((GHC.Generics.M1
                                                                                 GHC.Generics.C
                                                                                 ('GHC.Generics.MetaCons
                                                                                    "C17"
                                                                                    'GHC.Generics.PrefixI
                                                                                    'GHC.Types.False)
                                                                                 GHC.Generics.U1
                                                                               GHC.Generics.:+: GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "C18"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1)
                                                                              GHC.Generics.:+: (GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "C19"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "C20"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1)))
                                                           GHC.Generics.:+: ((GHC.Generics.M1
                                                                                GHC.Generics.C
                                                                                ('GHC.Generics.MetaCons
                                                                                   "C21"
                                                                                   'GHC.Generics.PrefixI
                                                                                   'GHC.Types.False)
                                                                                GHC.Generics.U1
                                                                              GHC.Generics.:+: (GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "C22"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "CX"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1))
                                                                             GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "CY"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "CMT"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1)
                                                                                               GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "Chr1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1
                                                                                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "Chr2"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1)))))
                                        GHC.Generics.:+: ((((GHC.Generics.M1
                                                               GHC.Generics.C
                                                               ('GHC.Generics.MetaCons
                                                                  "Chr3"
                                                                  'GHC.Generics.PrefixI
                                                                  'GHC.Types.False)
                                                               GHC.Generics.U1
                                                             GHC.Generics.:+: (GHC.Generics.M1
                                                                                 GHC.Generics.C
                                                                                 ('GHC.Generics.MetaCons
                                                                                    "Chr4"
                                                                                    'GHC.Generics.PrefixI
                                                                                    'GHC.Types.False)
                                                                                 GHC.Generics.U1
                                                                               GHC.Generics.:+: GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "Chr5"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1))
                                                            GHC.Generics.:+: ((GHC.Generics.M1
                                                                                 GHC.Generics.C
                                                                                 ('GHC.Generics.MetaCons
                                                                                    "Chr6"
                                                                                    'GHC.Generics.PrefixI
                                                                                    'GHC.Types.False)
                                                                                 GHC.Generics.U1
                                                                               GHC.Generics.:+: GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "Chr7"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1)
                                                                              GHC.Generics.:+: (GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "Chr8"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "Chr9"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1)))
                                                           GHC.Generics.:+: ((GHC.Generics.M1
                                                                                GHC.Generics.C
                                                                                ('GHC.Generics.MetaCons
                                                                                   "Chr10"
                                                                                   'GHC.Generics.PrefixI
                                                                                   'GHC.Types.False)
                                                                                GHC.Generics.U1
                                                                              GHC.Generics.:+: (GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "Chr11"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "Chr12"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1))
                                                                             GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "Chr13"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "Chr14"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1)
                                                                                               GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "Chr15"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1
                                                                                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "Chr16"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1))))
                                                          GHC.Generics.:+: (((GHC.Generics.M1
                                                                                GHC.Generics.C
                                                                                ('GHC.Generics.MetaCons
                                                                                   "Chr17"
                                                                                   'GHC.Generics.PrefixI
                                                                                   'GHC.Types.False)
                                                                                GHC.Generics.U1
                                                                              GHC.Generics.:+: (GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "Chr18"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "Chr19"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1))
                                                                             GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "Chr20"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "Chr21"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1)
                                                                                               GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "Chr22"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1
                                                                                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "ChrX"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1)))
                                                                            GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                 GHC.Generics.C
                                                                                                 ('GHC.Generics.MetaCons
                                                                                                    "ChrY"
                                                                                                    'GHC.Generics.PrefixI
                                                                                                    'GHC.Types.False)
                                                                                                 GHC.Generics.U1
                                                                                               GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "ChrM"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1
                                                                                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000207P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1))
                                                                                              GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000226P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1
                                                                                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000229P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1)
                                                                                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000231P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1
                                                                                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                                     GHC.Generics.C
                                                                                                                                                     ('GHC.Generics.MetaCons
                                                                                                                                                        "GL000210P1"
                                                                                                                                                        'GHC.Generics.PrefixI
                                                                                                                                                        'GHC.Types.False)
                                                                                                                                                     GHC.Generics.U1))))))
                                       GHC.Generics.:+: (((((GHC.Generics.M1
                                                               GHC.Generics.C
                                                               ('GHC.Generics.MetaCons
                                                                  "GL000239P1"
                                                                  'GHC.Generics.PrefixI
                                                                  'GHC.Types.False)
                                                               GHC.Generics.U1
                                                             GHC.Generics.:+: (GHC.Generics.M1
                                                                                 GHC.Generics.C
                                                                                 ('GHC.Generics.MetaCons
                                                                                    "GL000235P1"
                                                                                    'GHC.Generics.PrefixI
                                                                                    'GHC.Types.False)
                                                                                 GHC.Generics.U1
                                                                               GHC.Generics.:+: GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "GL000201P1"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1))
                                                            GHC.Generics.:+: ((GHC.Generics.M1
                                                                                 GHC.Generics.C
                                                                                 ('GHC.Generics.MetaCons
                                                                                    "GL000247P1"
                                                                                    'GHC.Generics.PrefixI
                                                                                    'GHC.Types.False)
                                                                                 GHC.Generics.U1
                                                                               GHC.Generics.:+: GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "GL000245P1"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1)
                                                                              GHC.Generics.:+: (GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "GL000197P1"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000203P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1)))
                                                           GHC.Generics.:+: ((GHC.Generics.M1
                                                                                GHC.Generics.C
                                                                                ('GHC.Generics.MetaCons
                                                                                   "GL000246P1"
                                                                                   'GHC.Generics.PrefixI
                                                                                   'GHC.Types.False)
                                                                                GHC.Generics.U1
                                                                              GHC.Generics.:+: (GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "GL000249P1"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000196P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1))
                                                                             GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "GL000248P1"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000244P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1)
                                                                                               GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000238P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1
                                                                                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000202P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1))))
                                                          GHC.Generics.:+: (((GHC.Generics.M1
                                                                                GHC.Generics.C
                                                                                ('GHC.Generics.MetaCons
                                                                                   "GL000234P1"
                                                                                   'GHC.Generics.PrefixI
                                                                                   'GHC.Types.False)
                                                                                GHC.Generics.U1
                                                                              GHC.Generics.:+: (GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "GL000232P1"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000206P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1))
                                                                             GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "GL000240P1"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000236P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1)
                                                                                               GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000241P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1
                                                                                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000243P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1)))
                                                                            GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                 GHC.Generics.C
                                                                                                 ('GHC.Generics.MetaCons
                                                                                                    "GL000242P1"
                                                                                                    'GHC.Generics.PrefixI
                                                                                                    'GHC.Types.False)
                                                                                                 GHC.Generics.U1
                                                                                               GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000230P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1
                                                                                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000237P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1))
                                                                                              GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000233P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1
                                                                                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000204P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1)
                                                                                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000198P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1
                                                                                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                                     GHC.Generics.C
                                                                                                                                                     ('GHC.Generics.MetaCons
                                                                                                                                                        "GL000208P1"
                                                                                                                                                        'GHC.Generics.PrefixI
                                                                                                                                                        'GHC.Types.False)
                                                                                                                                                     GHC.Generics.U1)))))
                                                         GHC.Generics.:+: ((((GHC.Generics.M1
                                                                                GHC.Generics.C
                                                                                ('GHC.Generics.MetaCons
                                                                                   "GL000191P1"
                                                                                   'GHC.Generics.PrefixI
                                                                                   'GHC.Types.False)
                                                                                GHC.Generics.U1
                                                                              GHC.Generics.:+: (GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "GL000227P1"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000228P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1))
                                                                             GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "GL000214P1"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  GHC.Generics.U1
                                                                                                GHC.Generics.:+: GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000221P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1)
                                                                                               GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000209P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1
                                                                                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000218P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1)))
                                                                            GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                 GHC.Generics.C
                                                                                                 ('GHC.Generics.MetaCons
                                                                                                    "GL000220P1"
                                                                                                    'GHC.Generics.PrefixI
                                                                                                    'GHC.Types.False)
                                                                                                 GHC.Generics.U1
                                                                                               GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000213P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1
                                                                                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000211P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1))
                                                                                              GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000199P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1
                                                                                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000217P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1)
                                                                                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000216P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1
                                                                                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                                     GHC.Generics.C
                                                                                                                                                     ('GHC.Generics.MetaCons
                                                                                                                                                        "GL000215P1"
                                                                                                                                                        'GHC.Generics.PrefixI
                                                                                                                                                        'GHC.Types.False)
                                                                                                                                                     GHC.Generics.U1))))
                                                                           GHC.Generics.:+: (((GHC.Generics.M1
                                                                                                 GHC.Generics.C
                                                                                                 ('GHC.Generics.MetaCons
                                                                                                    "GL000205P1"
                                                                                                    'GHC.Generics.PrefixI
                                                                                                    'GHC.Types.False)
                                                                                                 GHC.Generics.U1
                                                                                               GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000219P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1
                                                                                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000224P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1))
                                                                                              GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                                   GHC.Generics.C
                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                      "GL000223P1"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False)
                                                                                                                   GHC.Generics.U1
                                                                                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000195P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1)
                                                                                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000212P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1
                                                                                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                                     GHC.Generics.C
                                                                                                                                                     ('GHC.Generics.MetaCons
                                                                                                                                                        "GL000222P1"
                                                                                                                                                        'GHC.Generics.PrefixI
                                                                                                                                                        'GHC.Types.False)
                                                                                                                                                     GHC.Generics.U1)))
                                                                                             GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                                  GHC.Generics.C
                                                                                                                  ('GHC.Generics.MetaCons
                                                                                                                     "GL000200P1"
                                                                                                                     'GHC.Generics.PrefixI
                                                                                                                     'GHC.Types.False)
                                                                                                                  GHC.Generics.U1
                                                                                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000193P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1
                                                                                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                                     GHC.Generics.C
                                                                                                                                                     ('GHC.Generics.MetaCons
                                                                                                                                                        "GL000194P1"
                                                                                                                                                        'GHC.Generics.PrefixI
                                                                                                                                                        'GHC.Types.False)
                                                                                                                                                     GHC.Generics.U1))
                                                                                                               GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                                                    GHC.Generics.C
                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                       "GL000225P1"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.False)
                                                                                                                                    GHC.Generics.U1
                                                                                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                                     GHC.Generics.C
                                                                                                                                                     ('GHC.Generics.MetaCons
                                                                                                                                                        "GL000192P1"
                                                                                                                                                        'GHC.Generics.PrefixI
                                                                                                                                                        'GHC.Types.False)
                                                                                                                                                     GHC.Generics.U1)
                                                                                                                                 GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                                                     GHC.Generics.C
                                                                                                                                                     ('GHC.Generics.MetaCons
                                                                                                                                                        "NC_007605"
                                                                                                                                                        'GHC.Generics.PrefixI
                                                                                                                                                        'GHC.Types.False)
                                                                                                                                                     GHC.Generics.U1
                                                                                                                                                   GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                                                      GHC.Generics.C
                                                                                                                                                                      ('GHC.Generics.MetaCons
                                                                                                                                                                         "NONE"
                                                                                                                                                                         'GHC.Generics.PrefixI
                                                                                                                                                                         'GHC.Types.False)
                                                                                                                                                                      GHC.Generics.U1))))))>_R))
                            (Sub (Sym (Lib.Rep_UChr[0]))) <x>_N)
                  Lib.$fGenericUChr_$cto -}
738096376958aedf685c1b59f577962f
  $fGenericUChr1 ::
    Lib.UChr
    -> (GHC.Generics.:+:)
         (((((GHC.Generics.M1
                GHC.Generics.C
                ('GHC.Generics.MetaCons
                   "C1" 'GHC.Generics.PrefixI 'GHC.Types.False)
                GHC.Generics.U1
              GHC.Generics.:+: (GHC.Generics.M1
                                  GHC.Generics.C
                                  ('GHC.Generics.MetaCons
                                     "C2" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                  GHC.Generics.U1
                                GHC.Generics.:+: GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "C3" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                   GHC.Generics.U1))
             GHC.Generics.:+: (GHC.Generics.M1
                                 GHC.Generics.C
                                 ('GHC.Generics.MetaCons
                                    "C4" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: (GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "C5" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "C6"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1)))
            GHC.Generics.:+: ((GHC.Generics.M1
                                 GHC.Generics.C
                                 ('GHC.Generics.MetaCons
                                    "C7" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: (GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "C8" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "C9"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1))
                              GHC.Generics.:+: ((GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "C10" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "C11"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1)
                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "C12"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "C13"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1))))
           GHC.Generics.:+: (((GHC.Generics.M1
                                 GHC.Generics.C
                                 ('GHC.Generics.MetaCons
                                    "C14" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: (GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "C15" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "C16"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1))
                              GHC.Generics.:+: ((GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "C17" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "C18"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1)
                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "C19"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "C20"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1)))
                             GHC.Generics.:+: ((GHC.Generics.M1
                                                  GHC.Generics.C
                                                  ('GHC.Generics.MetaCons
                                                     "C21" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                  GHC.Generics.U1
                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "C22"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "CX"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1))
                                               GHC.Generics.:+: ((GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "CY"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "CMT"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1)
                                                                 GHC.Generics.:+: (GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "Chr1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1
                                                                                   GHC.Generics.:+: GHC.Generics.M1
                                                                                                      GHC.Generics.C
                                                                                                      ('GHC.Generics.MetaCons
                                                                                                         "Chr2"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False)
                                                                                                      GHC.Generics.U1)))))
          GHC.Generics.:+: ((((GHC.Generics.M1
                                 GHC.Generics.C
                                 ('GHC.Generics.MetaCons
                                    "Chr3" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: (GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "Chr4" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "Chr5"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1))
                              GHC.Generics.:+: ((GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "Chr6" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "Chr7"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1)
                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "Chr8"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "Chr9"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1)))
                             GHC.Generics.:+: ((GHC.Generics.M1
                                                  GHC.Generics.C
                                                  ('GHC.Generics.MetaCons
                                                     "Chr10" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                  GHC.Generics.U1
                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "Chr11"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "Chr12"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1))
                                               GHC.Generics.:+: ((GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "Chr13"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "Chr14"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1)
                                                                 GHC.Generics.:+: (GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "Chr15"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1
                                                                                   GHC.Generics.:+: GHC.Generics.M1
                                                                                                      GHC.Generics.C
                                                                                                      ('GHC.Generics.MetaCons
                                                                                                         "Chr16"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False)
                                                                                                      GHC.Generics.U1))))
                            GHC.Generics.:+: (((GHC.Generics.M1
                                                  GHC.Generics.C
                                                  ('GHC.Generics.MetaCons
                                                     "Chr17" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                  GHC.Generics.U1
                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "Chr18"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "Chr19"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1))
                                               GHC.Generics.:+: ((GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "Chr20"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "Chr21"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1)
                                                                 GHC.Generics.:+: (GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "Chr22"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1
                                                                                   GHC.Generics.:+: GHC.Generics.M1
                                                                                                      GHC.Generics.C
                                                                                                      ('GHC.Generics.MetaCons
                                                                                                         "ChrX"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False)
                                                                                                      GHC.Generics.U1)))
                                              GHC.Generics.:+: ((GHC.Generics.M1
                                                                   GHC.Generics.C
                                                                   ('GHC.Generics.MetaCons
                                                                      "ChrY"
                                                                      'GHC.Generics.PrefixI
                                                                      'GHC.Types.False)
                                                                   GHC.Generics.U1
                                                                 GHC.Generics.:+: (GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "ChrM"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1
                                                                                   GHC.Generics.:+: GHC.Generics.M1
                                                                                                      GHC.Generics.C
                                                                                                      ('GHC.Generics.MetaCons
                                                                                                         "GL000207P1"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False)
                                                                                                      GHC.Generics.U1))
                                                                GHC.Generics.:+: ((GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000226P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1
                                                                                   GHC.Generics.:+: GHC.Generics.M1
                                                                                                      GHC.Generics.C
                                                                                                      ('GHC.Generics.MetaCons
                                                                                                         "GL000229P1"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False)
                                                                                                      GHC.Generics.U1)
                                                                                  GHC.Generics.:+: (GHC.Generics.M1
                                                                                                      GHC.Generics.C
                                                                                                      ('GHC.Generics.MetaCons
                                                                                                         "GL000231P1"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False)
                                                                                                      GHC.Generics.U1
                                                                                                    GHC.Generics.:+: GHC.Generics.M1
                                                                                                                       GHC.Generics.C
                                                                                                                       ('GHC.Generics.MetaCons
                                                                                                                          "GL000210P1"
                                                                                                                          'GHC.Generics.PrefixI
                                                                                                                          'GHC.Types.False)
                                                                                                                       GHC.Generics.U1))))))
         (((((GHC.Generics.M1
                GHC.Generics.C
                ('GHC.Generics.MetaCons
                   "GL000239P1" 'GHC.Generics.PrefixI 'GHC.Types.False)
                GHC.Generics.U1
              GHC.Generics.:+: (GHC.Generics.M1
                                  GHC.Generics.C
                                  ('GHC.Generics.MetaCons
                                     "GL000235P1" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                  GHC.Generics.U1
                                GHC.Generics.:+: GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "GL000201P1"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1))
             GHC.Generics.:+: ((GHC.Generics.M1
                                  GHC.Generics.C
                                  ('GHC.Generics.MetaCons
                                     "GL000247P1" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                  GHC.Generics.U1
                                GHC.Generics.:+: GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "GL000245P1"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1)
                               GHC.Generics.:+: (GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "GL000197P1"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000203P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1)))
            GHC.Generics.:+: ((GHC.Generics.M1
                                 GHC.Generics.C
                                 ('GHC.Generics.MetaCons
                                    "GL000246P1" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: (GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "GL000249P1"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000196P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1))
                              GHC.Generics.:+: ((GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "GL000248P1"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000244P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1)
                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000238P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000202P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1))))
           GHC.Generics.:+: (((GHC.Generics.M1
                                 GHC.Generics.C
                                 ('GHC.Generics.MetaCons
                                    "GL000234P1" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: (GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "GL000232P1"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000206P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1))
                              GHC.Generics.:+: ((GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "GL000240P1"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000236P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1)
                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000241P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000243P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1)))
                             GHC.Generics.:+: ((GHC.Generics.M1
                                                  GHC.Generics.C
                                                  ('GHC.Generics.MetaCons
                                                     "GL000242P1"
                                                     'GHC.Generics.PrefixI
                                                     'GHC.Types.False)
                                                  GHC.Generics.U1
                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000230P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000237P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1))
                                               GHC.Generics.:+: ((GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000233P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000204P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1)
                                                                 GHC.Generics.:+: (GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000198P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1
                                                                                   GHC.Generics.:+: GHC.Generics.M1
                                                                                                      GHC.Generics.C
                                                                                                      ('GHC.Generics.MetaCons
                                                                                                         "GL000208P1"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False)
                                                                                                      GHC.Generics.U1)))))
          GHC.Generics.:+: ((((GHC.Generics.M1
                                 GHC.Generics.C
                                 ('GHC.Generics.MetaCons
                                    "GL000191P1" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: (GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "GL000227P1"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000228P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1))
                              GHC.Generics.:+: ((GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "GL000214P1"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000221P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1)
                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000209P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000218P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1)))
                             GHC.Generics.:+: ((GHC.Generics.M1
                                                  GHC.Generics.C
                                                  ('GHC.Generics.MetaCons
                                                     "GL000220P1"
                                                     'GHC.Generics.PrefixI
                                                     'GHC.Types.False)
                                                  GHC.Generics.U1
                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000213P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000211P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1))
                                               GHC.Generics.:+: ((GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000199P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000217P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1)
                                                                 GHC.Generics.:+: (GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000216P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1
                                                                                   GHC.Generics.:+: GHC.Generics.M1
                                                                                                      GHC.Generics.C
                                                                                                      ('GHC.Generics.MetaCons
                                                                                                         "GL000215P1"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False)
                                                                                                      GHC.Generics.U1))))
                            GHC.Generics.:+: (((GHC.Generics.M1
                                                  GHC.Generics.C
                                                  ('GHC.Generics.MetaCons
                                                     "GL000205P1"
                                                     'GHC.Generics.PrefixI
                                                     'GHC.Types.False)
                                                  GHC.Generics.U1
                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000219P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000224P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1))
                                               GHC.Generics.:+: ((GHC.Generics.M1
                                                                    GHC.Generics.C
                                                                    ('GHC.Generics.MetaCons
                                                                       "GL000223P1"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000195P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1)
                                                                 GHC.Generics.:+: (GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000212P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1
                                                                                   GHC.Generics.:+: GHC.Generics.M1
                                                                                                      GHC.Generics.C
                                                                                                      ('GHC.Generics.MetaCons
                                                                                                         "GL000222P1"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False)
                                                                                                      GHC.Generics.U1)))
                                              GHC.Generics.:+: ((GHC.Generics.M1
                                                                   GHC.Generics.C
                                                                   ('GHC.Generics.MetaCons
                                                                      "GL000200P1"
                                                                      'GHC.Generics.PrefixI
                                                                      'GHC.Types.False)
                                                                   GHC.Generics.U1
                                                                 GHC.Generics.:+: (GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000193P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1
                                                                                   GHC.Generics.:+: GHC.Generics.M1
                                                                                                      GHC.Generics.C
                                                                                                      ('GHC.Generics.MetaCons
                                                                                                         "GL000194P1"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False)
                                                                                                      GHC.Generics.U1))
                                                                GHC.Generics.:+: ((GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "GL000225P1"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1
                                                                                   GHC.Generics.:+: GHC.Generics.M1
                                                                                                      GHC.Generics.C
                                                                                                      ('GHC.Generics.MetaCons
                                                                                                         "GL000192P1"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False)
                                                                                                      GHC.Generics.U1)
                                                                                  GHC.Generics.:+: (GHC.Generics.M1
                                                                                                      GHC.Generics.C
                                                                                                      ('GHC.Generics.MetaCons
                                                                                                         "NC_007605"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False)
                                                                                                      GHC.Generics.U1
                                                                                                    GHC.Generics.:+: GHC.Generics.M1
                                                                                                                       GHC.Generics.C
                                                                                                                       ('GHC.Generics.MetaCons
                                                                                                                          "NONE"
                                                                                                                          'GHC.Generics.PrefixI
                                                                                                                          'GHC.Types.False)
                                                                                                                       GHC.Generics.U1))))))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
738096376958aedf685c1b59f577962f
  $fGenericUChr_$cto :: GHC.Generics.Rep Lib.UChr x -> Lib.UChr
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
64e0a7b5a8db25e9b81a102c9fe8422f
  $fOrdAlignedRead :: GHC.Classes.Ord Lib.AlignedRead
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.AlignedRead
                  Lib.$fEqAlignedRead
                  Lib.$fOrdAlignedRead_$ccompare
                  Lib.$fOrdAlignedRead_$c<
                  Lib.$fOrdAlignedRead_$c<=
                  Lib.$fOrdAlignedRead_$c>
                  Lib.$fOrdAlignedRead_$c>=
                  Lib.$fOrdAlignedRead_$cmax
                  Lib.$fOrdAlignedRead_$cmin -}
64e0a7b5a8db25e9b81a102c9fe8422f
  $fOrdAlignedRead_$c< ::
    Lib.AlignedRead -> Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.AlignedRead) (y :: Lib.AlignedRead) ->
                 case Lib.$fOrdAlignedRead_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True }) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  $fOrdAlignedRead_$c<= ::
    Lib.AlignedRead -> Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.AlignedRead) (y :: Lib.AlignedRead) ->
                 case Lib.$fOrdAlignedRead_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False }) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  $fOrdAlignedRead_$c> ::
    Lib.AlignedRead -> Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.AlignedRead) (y :: Lib.AlignedRead) ->
                 case Lib.$fOrdAlignedRead_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True }) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  $fOrdAlignedRead_$c>= ::
    Lib.AlignedRead -> Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.AlignedRead) (y :: Lib.AlignedRead) ->
                 case Lib.$fOrdAlignedRead_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False }) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  $fOrdAlignedRead_$ccompare ::
    Lib.AlignedRead -> Lib.AlignedRead -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.AlignedRead) (w1 :: Lib.AlignedRead) ->
                 case w of ww { Lib.AlignedRead ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ->
                 case w1 of ww32 { Lib.AlignedRead ww33 ww34 ww35 ww36 ww37 ww38 ww39 ww40 ww41 ww42 ww43 ww44 ww45 ww46 ww47 ww48 ww49 ww50 ww51 ww52 ww53 ww54 ww55 ww56 ww57 ww58 ww59 ww60 ww61 ww62 ww63 ->
                 Lib.$w$ccompare ww3 ww4 ww6 ww35 ww36 ww38 } }) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  $fOrdAlignedRead_$cmax ::
    Lib.AlignedRead -> Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)><S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.AlignedRead) (y :: Lib.AlignedRead) ->
                 case Lib.$fOrdAlignedRead_$ccompare x y of wild {
                   DEFAULT -> y GHC.Types.GT -> x }) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  $fOrdAlignedRead_$cmin ::
    Lib.AlignedRead -> Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)><S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.AlignedRead) (y :: Lib.AlignedRead) ->
                 case Lib.$fOrdAlignedRead_$ccompare x y of wild {
                   DEFAULT -> x GHC.Types.GT -> y }) -}
fdfc37bd80569587de4159264d092980
  $fOrdBEDPE :: GHC.Classes.Ord Lib.BEDPE
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.BEDPE
                  Lib.$fEqBEDPE
                  Lib.$fOrdBEDPE_$ccompare
                  Lib.$fOrdBEDPE_$c<
                  Lib.$fOrdBEDPE_$c<=
                  Lib.$fOrdBEDPE_$c>
                  Lib.$fOrdBEDPE_$c>=
                  Lib.$fOrdBEDPE_$cmax
                  Lib.$fOrdBEDPE_$cmin -}
fdfc37bd80569587de4159264d092980
  $fOrdBEDPE_$c< :: Lib.BEDPE -> Lib.BEDPE -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLL),1*U(U,1*U,A,A,A,A,A)><S(SLLLLLL),1*U(U,1*U,A,A,A,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.BEDPE) (w1 :: Lib.BEDPE) ->
                 case w of ww { Lib.BEDPE ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case w1 of ww8 { Lib.BEDPE ww9 ww10 ww11 ww12 ww13 ww14 ww15 ->
                 Lib.$w$c< ww1 ww2 ww9 ww10 } }) -}
fdfc37bd80569587de4159264d092980
  $fOrdBEDPE_$c<= :: Lib.BEDPE -> Lib.BEDPE -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLL),1*U(U,1*U,A,A,A,A,A)><S(SLLLLLL),1*U(U,1*U,A,A,A,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.BEDPE) (w1 :: Lib.BEDPE) ->
                 case w of ww { Lib.BEDPE ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case w1 of ww8 { Lib.BEDPE ww9 ww10 ww11 ww12 ww13 ww14 ww15 ->
                 Lib.$w$c<= ww1 ww2 ww9 ww10 } }) -}
fdfc37bd80569587de4159264d092980
  $fOrdBEDPE_$c> :: Lib.BEDPE -> Lib.BEDPE -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLL),1*U(U,1*U,A,A,A,A,A)><S(SLLLLLL),1*U(U,1*U,A,A,A,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.BEDPE) (w1 :: Lib.BEDPE) ->
                 case w of ww { Lib.BEDPE ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case w1 of ww8 { Lib.BEDPE ww9 ww10 ww11 ww12 ww13 ww14 ww15 ->
                 Lib.$w$c> ww1 ww2 ww9 ww10 } }) -}
fdfc37bd80569587de4159264d092980
  $fOrdBEDPE_$c>= :: Lib.BEDPE -> Lib.BEDPE -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLL),1*U(U,1*U,A,A,A,A,A)><S(SLLLLLL),1*U(U,1*U,A,A,A,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.BEDPE) (w1 :: Lib.BEDPE) ->
                 case w of ww { Lib.BEDPE ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case w1 of ww8 { Lib.BEDPE ww9 ww10 ww11 ww12 ww13 ww14 ww15 ->
                 Lib.$w$c>= ww1 ww2 ww9 ww10 } }) -}
fdfc37bd80569587de4159264d092980
  $fOrdBEDPE_$ccompare ::
    Lib.BEDPE -> Lib.BEDPE -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLL),1*U(U,1*U,A,A,A,A,A)><S(SLLLLLL),1*U(U,1*U,A,A,A,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.BEDPE) (w1 :: Lib.BEDPE) ->
                 case w of ww { Lib.BEDPE ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case w1 of ww8 { Lib.BEDPE ww9 ww10 ww11 ww12 ww13 ww14 ww15 ->
                 Lib.$w$ccompare1 ww1 ww2 ww9 ww10 } }) -}
fdfc37bd80569587de4159264d092980
  $fOrdBEDPE_$cmax :: Lib.BEDPE -> Lib.BEDPE -> Lib.BEDPE
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLL),1*U(U,U,U,U,U,U,U)><S(SLLLLLL),1*U(U,U,U,U,U,U,U)>m,
     Unfolding: (\ (x :: Lib.BEDPE) (y :: Lib.BEDPE) ->
                 case x of wild { Lib.BEDPE ds6 ds7 ds8 ds9 ds10 ds11 ds12 ->
                 case y of wild1 { Lib.BEDPE ds13 ds14 ds15 ds16 ds17 ds18 ds19 ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ds6 of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ds13 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild3 {
                        GHC.Types.False -> wild
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ds7 ds14 of wild4 {
                             DEFAULT -> wild1 GHC.Types.GT -> wild } }
                   GHC.Types.True -> wild1 } } } } }) -}
fdfc37bd80569587de4159264d092980
  $fOrdBEDPE_$cmin :: Lib.BEDPE -> Lib.BEDPE -> Lib.BEDPE
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLL),1*U(U,U,U,U,U,U,U)><S(SLLLLLL),1*U(U,U,U,U,U,U,U)>m,
     Unfolding: (\ (x :: Lib.BEDPE) (y :: Lib.BEDPE) ->
                 case x of wild { Lib.BEDPE ds6 ds7 ds8 ds9 ds10 ds11 ds12 ->
                 case y of wild1 { Lib.BEDPE ds13 ds14 ds15 ds16 ds17 ds18 ds19 ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ds6 of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ds13 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild3 {
                        GHC.Types.False -> wild1
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ds7 ds14 of wild4 {
                             DEFAULT -> wild GHC.Types.GT -> wild1 } }
                   GHC.Types.True -> wild } } } } }) -}
78740db68f2462e9356716573fd65631
  $fOrdBedRecord :: GHC.Classes.Ord Lib.BedRecord
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.BedRecord
                  Lib.$fEqBedRecord
                  Lib.$fOrdBedRecord_$ccompare
                  Lib.$fOrdBedRecord_$c<
                  Lib.$fOrdBedRecord_$c<=
                  Lib.$fOrdBedRecord_$c>
                  Lib.$fOrdBedRecord_$c>=
                  Lib.$fOrdBedRecord_$cmax
                  Lib.$fOrdBedRecord_$cmin -}
78740db68f2462e9356716573fd65631
  $fOrdBedRecord_$c< ::
    Lib.BedRecord -> Lib.BedRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(U,1*U,A,A)><S(SLLL),1*U(U,1*U,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.BedRecord) (w1 :: Lib.BedRecord) ->
                 case w of ww { Lib.BedRecord ww1 ww2 ww3 ww4 ->
                 case w1 of ww5 { Lib.BedRecord ww6 ww7 ww8 ww9 ->
                 Lib.$w$c<1 ww1 ww2 ww6 ww7 } }) -}
78740db68f2462e9356716573fd65631
  $fOrdBedRecord_$c<= ::
    Lib.BedRecord -> Lib.BedRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(U,1*U,A,A)><S(SLLL),1*U(U,1*U,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.BedRecord) (w1 :: Lib.BedRecord) ->
                 case w of ww { Lib.BedRecord ww1 ww2 ww3 ww4 ->
                 case w1 of ww5 { Lib.BedRecord ww6 ww7 ww8 ww9 ->
                 Lib.$w$c<=1 ww1 ww2 ww6 ww7 } }) -}
78740db68f2462e9356716573fd65631
  $fOrdBedRecord_$c> ::
    Lib.BedRecord -> Lib.BedRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(U,1*U,A,A)><S(SLLL),1*U(U,1*U,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.BedRecord) (w1 :: Lib.BedRecord) ->
                 case w of ww { Lib.BedRecord ww1 ww2 ww3 ww4 ->
                 case w1 of ww5 { Lib.BedRecord ww6 ww7 ww8 ww9 ->
                 Lib.$w$c>1 ww1 ww2 ww6 ww7 } }) -}
78740db68f2462e9356716573fd65631
  $fOrdBedRecord_$c>= ::
    Lib.BedRecord -> Lib.BedRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(U,1*U,A,A)><S(SLLL),1*U(U,1*U,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.BedRecord) (w1 :: Lib.BedRecord) ->
                 case w of ww { Lib.BedRecord ww1 ww2 ww3 ww4 ->
                 case w1 of ww5 { Lib.BedRecord ww6 ww7 ww8 ww9 ->
                 Lib.$w$c>=1 ww1 ww2 ww6 ww7 } }) -}
78740db68f2462e9356716573fd65631
  $fOrdBedRecord_$ccompare ::
    Lib.BedRecord -> Lib.BedRecord -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(U,1*U,A,A)><S(SLLL),1*U(U,1*U,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.BedRecord) (w1 :: Lib.BedRecord) ->
                 case w of ww { Lib.BedRecord ww1 ww2 ww3 ww4 ->
                 case w1 of ww5 { Lib.BedRecord ww6 ww7 ww8 ww9 ->
                 Lib.$w$ccompare2 ww1 ww2 ww6 ww7 } }) -}
78740db68f2462e9356716573fd65631
  $fOrdBedRecord_$cmax ::
    Lib.BedRecord -> Lib.BedRecord -> Lib.BedRecord
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(U,U,U,U)><S(SLLL),1*U(U,U,U,U)>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.BedRecord) (w1 :: Lib.BedRecord) ->
                 case w of ww { Lib.BedRecord ww1 ww2 ww3 ww4 ->
                 case w1 of ww5 { Lib.BedRecord ww6 ww7 ww8 ww9 ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww1 of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww6 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> Lib.BedRecord ww1 ww2 ww3 ww4
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww2 ww7 of wild2 {
                             DEFAULT -> Lib.BedRecord ww6 ww7 ww8 ww9
                             GHC.Types.GT -> Lib.BedRecord ww1 ww2 ww3 ww4 } }
                   GHC.Types.True -> Lib.BedRecord ww6 ww7 ww8 ww9 } } } } }) -}
78740db68f2462e9356716573fd65631
  $fOrdBedRecord_$cmin ::
    Lib.BedRecord -> Lib.BedRecord -> Lib.BedRecord
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(U,U,U,U)><S(SLLL),1*U(U,U,U,U)>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.BedRecord) (w1 :: Lib.BedRecord) ->
                 case w of ww { Lib.BedRecord ww1 ww2 ww3 ww4 ->
                 case w1 of ww5 { Lib.BedRecord ww6 ww7 ww8 ww9 ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww1 of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww6 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> Lib.BedRecord ww6 ww7 ww8 ww9
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww2 ww7 of wild2 {
                             DEFAULT -> Lib.BedRecord ww1 ww2 ww3 ww4
                             GHC.Types.GT -> Lib.BedRecord ww6 ww7 ww8 ww9 } }
                   GHC.Types.True -> Lib.BedRecord ww1 ww2 ww3 ww4 } } } } }) -}
abb052827d9625d097890f754ea8e0e8
  $fOrdChromNameFormat :: GHC.Classes.Ord Lib.ChromNameFormat
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.ChromNameFormat
                  Lib.$fEqChromNameFormat
                  Lib.$fOrdChromNameFormat_$ccompare
                  Lib.$fOrdChromNameFormat_$c<
                  Lib.$fOrdChromNameFormat_$c<=
                  Lib.$fOrdChromNameFormat_$c>
                  Lib.$fOrdChromNameFormat_$c>=
                  Lib.$fOrdChromNameFormat_$cmax
                  Lib.$fOrdChromNameFormat_$cmin -}
abb052827d9625d097890f754ea8e0e8
  $fOrdChromNameFormat_$c< ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.ChromNameFormat) (b :: Lib.ChromNameFormat) ->
                 case a of wild {
                   Lib.GRC
                   -> case b of wild1 {
                        Lib.GRC -> GHC.Types.False Lib.UCSC -> GHC.Types.True }
                   Lib.UCSC -> case b of wild1 { DEFAULT -> GHC.Types.False } }) -}
abb052827d9625d097890f754ea8e0e8
  $fOrdChromNameFormat_$c<= ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.ChromNameFormat) (b :: Lib.ChromNameFormat) ->
                 case b of wild {
                   Lib.GRC
                   -> case a of wild1 {
                        Lib.GRC -> GHC.Types.True Lib.UCSC -> GHC.Types.False }
                   Lib.UCSC -> case a of wild1 { DEFAULT -> GHC.Types.True } }) -}
abb052827d9625d097890f754ea8e0e8
  $fOrdChromNameFormat_$c> ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, True)
                (\ (a :: Lib.ChromNameFormat) (b :: Lib.ChromNameFormat) ->
                 Lib.$fOrdChromNameFormat_$c< b a) -}
abb052827d9625d097890f754ea8e0e8
  $fOrdChromNameFormat_$c>= ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.ChromNameFormat) (b :: Lib.ChromNameFormat) ->
                 case a of wild {
                   Lib.GRC
                   -> case b of wild1 {
                        Lib.GRC -> GHC.Types.True Lib.UCSC -> GHC.Types.False }
                   Lib.UCSC -> case b of wild1 { DEFAULT -> GHC.Types.True } }) -}
abb052827d9625d097890f754ea8e0e8
  $fOrdChromNameFormat_$ccompare ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.ChromNameFormat) (b :: Lib.ChromNameFormat) ->
                 case a of wild {
                   Lib.GRC
                   -> case b of wild1 {
                        Lib.GRC -> GHC.Types.EQ Lib.UCSC -> GHC.Types.LT }
                   Lib.UCSC
                   -> case b of wild1 {
                        Lib.GRC -> GHC.Types.GT Lib.UCSC -> GHC.Types.EQ } }) -}
abb052827d9625d097890f754ea8e0e8
  $fOrdChromNameFormat_$cmax ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat -> Lib.ChromNameFormat
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.ChromNameFormat) (y :: Lib.ChromNameFormat) ->
                 case y of wild {
                   Lib.GRC -> x
                   Lib.UCSC -> case x of wild1 { DEFAULT -> Lib.UCSC } }) -}
abb052827d9625d097890f754ea8e0e8
  $fOrdChromNameFormat_$cmin ::
    Lib.ChromNameFormat -> Lib.ChromNameFormat -> Lib.ChromNameFormat
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.ChromNameFormat) (y :: Lib.ChromNameFormat) ->
                 case y of wild {
                   Lib.GRC -> case x of wild1 { DEFAULT -> Lib.GRC }
                   Lib.UCSC -> x }) -}
4a9f534e7bc67e4a259fbd60df039054
  $fOrdMasterRecord :: GHC.Classes.Ord Lib.MasterRecord
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.MasterRecord
                  Lib.$fEqMasterRecord
                  Lib.$fOrdMasterRecord_$ccompare
                  Lib.$fOrdMasterRecord_$c<
                  Lib.$fOrdMasterRecord_$c<=
                  Lib.$fOrdMasterRecord_$c>
                  Lib.$fOrdMasterRecord_$c>=
                  Lib.$fOrdMasterRecord_$cmax
                  Lib.$fOrdMasterRecord_$cmin -}
4a9f534e7bc67e4a259fbd60df039054
  $fOrdMasterRecord_$c< ::
    Lib.MasterRecord -> Lib.MasterRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(U,1*U,1*U,A,A,A,A,A,A,A,A,A)><S(SLLLLLLLLLLL),1*U(U,1*U,1*U,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.MasterRecord) (y :: Lib.MasterRecord) ->
                 case Lib.$fOrdMasterRecord_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True }) -}
4a9f534e7bc67e4a259fbd60df039054
  $fOrdMasterRecord_$c<= ::
    Lib.MasterRecord -> Lib.MasterRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(U,1*U,1*U,A,A,A,A,A,A,A,A,A)><S(SLLLLLLLLLLL),1*U(U,1*U,1*U,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.MasterRecord) (y :: Lib.MasterRecord) ->
                 case Lib.$fOrdMasterRecord_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False }) -}
4a9f534e7bc67e4a259fbd60df039054
  $fOrdMasterRecord_$c> ::
    Lib.MasterRecord -> Lib.MasterRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(U,1*U,1*U,A,A,A,A,A,A,A,A,A)><S(SLLLLLLLLLLL),1*U(U,1*U,1*U,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.MasterRecord) (y :: Lib.MasterRecord) ->
                 case Lib.$fOrdMasterRecord_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True }) -}
4a9f534e7bc67e4a259fbd60df039054
  $fOrdMasterRecord_$c>= ::
    Lib.MasterRecord -> Lib.MasterRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(U,1*U,1*U,A,A,A,A,A,A,A,A,A)><S(SLLLLLLLLLLL),1*U(U,1*U,1*U,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.MasterRecord) (y :: Lib.MasterRecord) ->
                 case Lib.$fOrdMasterRecord_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False }) -}
4a9f534e7bc67e4a259fbd60df039054
  $fOrdMasterRecord_$ccompare ::
    Lib.MasterRecord -> Lib.MasterRecord -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(U,1*U,1*U,A,A,A,A,A,A,A,A,A)><S(SLLLLLLLLLLL),1*U(U,1*U,1*U,A,A,A,A,A,A,A,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.MasterRecord) (w1 :: Lib.MasterRecord) ->
                 case w of ww { Lib.MasterRecord ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ->
                 case w1 of ww13 { Lib.MasterRecord ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ->
                 Lib.$w$ccompare3 ww1 ww2 ww3 ww14 ww15 ww16 } }) -}
4a9f534e7bc67e4a259fbd60df039054
  $fOrdMasterRecord_$cmax ::
    Lib.MasterRecord -> Lib.MasterRecord -> Lib.MasterRecord
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(U,U,U,U,U,U,U,U,U,U,U,U)><S(SLLLLLLLLLLL),1*U(U,U,U,U,U,U,U,U,U,U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.MasterRecord) (y :: Lib.MasterRecord) ->
                 case Lib.$fOrdMasterRecord_$ccompare x y of wild {
                   DEFAULT -> y GHC.Types.GT -> x }) -}
4a9f534e7bc67e4a259fbd60df039054
  $fOrdMasterRecord_$cmin ::
    Lib.MasterRecord -> Lib.MasterRecord -> Lib.MasterRecord
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(U,U,U,U,U,U,U,U,U,U,U,U)><S(SLLLLLLLLLLL),1*U(U,U,U,U,U,U,U,U,U,U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.MasterRecord) (y :: Lib.MasterRecord) ->
                 case Lib.$fOrdMasterRecord_$ccompare x y of wild {
                   DEFAULT -> x GHC.Types.GT -> y }) -}
6f760c933e008b36f1c2ad656d809c5f
  $fOrdMidFamily :: GHC.Classes.Ord Lib.MidFamily
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.MidFamily
                  Lib.$fEqMidFamily
                  Lib.$fOrdMidFamily_$ccompare
                  Lib.$fOrdMidFamily_$c<
                  Lib.$fOrdMidFamily_$c<=
                  Lib.$fOrdMidFamily_$c>
                  Lib.$fOrdMidFamily_$c>=
                  Lib.$fOrdMidFamily_$cmax
                  Lib.$fOrdMidFamily_$cmin -}
6f760c933e008b36f1c2ad656d809c5f
  $fOrdMidFamily_$c< ::
    Lib.MidFamily -> Lib.MidFamily -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLL),1*U(U,1*U,1*U,A,A,1*U,A,A,A,A)><S(SLLLLLLLLL),1*U(U,1*U,1*U,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.MidFamily) (y :: Lib.MidFamily) ->
                 case Lib.$fOrdMidFamily_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True }) -}
6f760c933e008b36f1c2ad656d809c5f
  $fOrdMidFamily_$c<= ::
    Lib.MidFamily -> Lib.MidFamily -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLL),1*U(U,1*U,1*U,A,A,1*U,A,A,A,A)><S(SLLLLLLLLL),1*U(U,1*U,1*U,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.MidFamily) (y :: Lib.MidFamily) ->
                 case Lib.$fOrdMidFamily_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False }) -}
6f760c933e008b36f1c2ad656d809c5f
  $fOrdMidFamily_$c> ::
    Lib.MidFamily -> Lib.MidFamily -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLL),1*U(U,1*U,1*U,A,A,1*U,A,A,A,A)><S(SLLLLLLLLL),1*U(U,1*U,1*U,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.MidFamily) (y :: Lib.MidFamily) ->
                 case Lib.$fOrdMidFamily_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True }) -}
6f760c933e008b36f1c2ad656d809c5f
  $fOrdMidFamily_$c>= ::
    Lib.MidFamily -> Lib.MidFamily -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLL),1*U(U,1*U,1*U,A,A,1*U,A,A,A,A)><S(SLLLLLLLLL),1*U(U,1*U,1*U,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.MidFamily) (y :: Lib.MidFamily) ->
                 case Lib.$fOrdMidFamily_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False }) -}
6f760c933e008b36f1c2ad656d809c5f
  $fOrdMidFamily_$ccompare ::
    Lib.MidFamily -> Lib.MidFamily -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLL),1*U(U,1*U,1*U,A,A,1*U,A,A,A,A)><S(SLLLLLLLLL),1*U(U,1*U,1*U,A,A,1*U,A,A,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.MidFamily) (w1 :: Lib.MidFamily) ->
                 case w of ww { Lib.MidFamily ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ->
                 case w1 of ww11 { Lib.MidFamily ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ->
                 Lib.$w$ccompare4 ww1 ww2 ww3 ww6 ww12 ww13 ww14 ww17 } }) -}
6f760c933e008b36f1c2ad656d809c5f
  $fOrdMidFamily_$cmax ::
    Lib.MidFamily -> Lib.MidFamily -> Lib.MidFamily
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLL),1*U(U,U,U,U,U,U,U,U,U,U)><S(SLLLLLLLLL),1*U(U,U,U,U,U,U,U,U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.MidFamily) (y :: Lib.MidFamily) ->
                 case Lib.$fOrdMidFamily_$ccompare x y of wild {
                   DEFAULT -> y GHC.Types.GT -> x }) -}
6f760c933e008b36f1c2ad656d809c5f
  $fOrdMidFamily_$cmin ::
    Lib.MidFamily -> Lib.MidFamily -> Lib.MidFamily
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLL),1*U(U,U,U,U,U,U,U,U,U,U)><S(SLLLLLLLLL),1*U(U,U,U,U,U,U,U,U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.MidFamily) (y :: Lib.MidFamily) ->
                 case Lib.$fOrdMidFamily_$ccompare x y of wild {
                   DEFAULT -> x GHC.Types.GT -> y }) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  $fOrdPairedAln :: GHC.Classes.Ord Lib.PairedAln
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.PairedAln
                  Lib.$fEqPairedAln
                  Lib.$fOrdPairedAln_$ccompare
                  Lib.$fOrdPairedAln_$c<
                  Lib.$fOrdPairedAln_$c<=
                  Lib.$fOrdPairedAln_$c>
                  Lib.$fOrdPairedAln_$c>=
                  Lib.$fOrdPairedAln_$cmax
                  Lib.$fOrdPairedAln_$cmin -}
64e0a7b5a8db25e9b81a102c9fe8422f
  $fOrdPairedAln_$c< ::
    Lib.PairedAln -> Lib.PairedAln -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),A,A)><S(S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.PairedAln) (y :: Lib.PairedAln) ->
                 case Lib.$fOrdPairedAln_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True }) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  $fOrdPairedAln_$c<= ::
    Lib.PairedAln -> Lib.PairedAln -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),A,A)><S(S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.PairedAln) (y :: Lib.PairedAln) ->
                 case Lib.$fOrdPairedAln_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False }) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  $fOrdPairedAln_$c> ::
    Lib.PairedAln -> Lib.PairedAln -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),A,A)><S(S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.PairedAln) (y :: Lib.PairedAln) ->
                 case Lib.$fOrdPairedAln_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True }) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  $fOrdPairedAln_$c>= ::
    Lib.PairedAln -> Lib.PairedAln -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),A,A)><S(S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.PairedAln) (y :: Lib.PairedAln) ->
                 case Lib.$fOrdPairedAln_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False }) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  $fOrdPairedAln_$ccompare ::
    Lib.PairedAln -> Lib.PairedAln -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),A,A)><S(S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),A,A)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.PairedAln) (w1 :: Lib.PairedAln) ->
                 case w of ww { Lib.PairedAln ww1 ww2 ww3 ww4 ->
                 case ww1 of ww5 { Lib.AlignedRead ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ww36 ->
                 case w1 of ww37 { Lib.PairedAln ww38 ww39 ww40 ww41 ->
                 case ww38 of ww42 { Lib.AlignedRead ww43 ww44 ww45 ww46 ww47 ww48 ww49 ww50 ww51 ww52 ww53 ww54 ww55 ww56 ww57 ww58 ww59 ww60 ww61 ww62 ww63 ww64 ww65 ww66 ww67 ww68 ww69 ww70 ww71 ww72 ww73 ->
                 Lib.$w$ccompare5 ww8 ww9 ww11 ww2 ww45 ww46 ww48 ww39 } } } }) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  $fOrdPairedAln_$cmax ::
    Lib.PairedAln -> Lib.PairedAln -> Lib.PairedAln
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)><S(S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.PairedAln) (y :: Lib.PairedAln) ->
                 case Lib.$fOrdPairedAln_$ccompare x y of wild {
                   DEFAULT -> y GHC.Types.GT -> x }) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  $fOrdPairedAln_$cmin ::
    Lib.PairedAln -> Lib.PairedAln -> Lib.PairedAln
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)><S(S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LLL),1*U(U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.PairedAln) (y :: Lib.PairedAln) ->
                 case Lib.$fOrdPairedAln_$ccompare x y of wild {
                   DEFAULT -> x GHC.Types.GT -> y }) -}
738096376958aedf685c1b59f577962f
  $fOrdUChr :: GHC.Classes.Ord Lib.UChr
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.UChr
                  Lib.$fEqUChr
                  Lib.$fOrdUChr_$ccompare
                  Lib.$fOrdUChr_$c<
                  Lib.$fOrdUChr_$c<=
                  Lib.$fOrdUChr_$c>
                  Lib.$fOrdUChr_$c>=
                  Lib.$fOrdUChr_$cmax
                  Lib.$fOrdUChr_$cmin -}
738096376958aedf685c1b59f577962f
  $fOrdUChr_$c< :: Lib.UChr -> Lib.UChr -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.UChr) (b :: Lib.UChr) ->
                 case a of x1 { DEFAULT ->
                 case b of x2 { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x1 of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x2 of b# { DEFAULT ->
                 GHC.Prim.tagToEnum#
                   @ GHC.Types.Bool
                   (GHC.Prim.<# a# b#) } } } }) -}
738096376958aedf685c1b59f577962f
  $fOrdUChr_$c<= :: Lib.UChr -> Lib.UChr -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.UChr) (b :: Lib.UChr) ->
                 case b of x1 { DEFAULT ->
                 case a of x2 { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x1 of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False } } } } }) -}
738096376958aedf685c1b59f577962f
  $fOrdUChr_$c> :: Lib.UChr -> Lib.UChr -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.UChr) (b :: Lib.UChr) ->
                 case b of x1 { DEFAULT ->
                 case a of x2 { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x1 of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x2 of b# { DEFAULT ->
                 GHC.Prim.tagToEnum#
                   @ GHC.Types.Bool
                   (GHC.Prim.<# a# b#) } } } }) -}
738096376958aedf685c1b59f577962f
  $fOrdUChr_$c>= :: Lib.UChr -> Lib.UChr -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.UChr) (b :: Lib.UChr) ->
                 case a of x1 { DEFAULT ->
                 case b of x2 { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x1 of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False } } } } }) -}
738096376958aedf685c1b59f577962f
  $fOrdUChr_$ccompare :: Lib.UChr -> Lib.UChr -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.UChr) (b :: Lib.UChr) ->
                 case a of x1 { DEFAULT ->
                 case b of x2 { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x1 of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.GT GHC.Types.True -> GHC.Types.EQ }
                   GHC.Types.True -> GHC.Types.LT } } } } }) -}
738096376958aedf685c1b59f577962f
  $fOrdUChr_$cmax :: Lib.UChr -> Lib.UChr -> Lib.UChr
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.UChr) (y :: Lib.UChr) ->
                 case y of x1 { DEFAULT ->
                 case x of x2 { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x1 of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False -> x1 GHC.Types.True -> x2 } } } } }) -}
738096376958aedf685c1b59f577962f
  $fOrdUChr_$cmin :: Lib.UChr -> Lib.UChr -> Lib.UChr
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.UChr) (y :: Lib.UChr) ->
                 case y of x1 { DEFAULT ->
                 case x of x2 { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x1 of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False -> x2 GHC.Types.True -> x1 } } } } }) -}
abb052827d9625d097890f754ea8e0e8
  $fReadChromNameFormat :: GHC.Read.Read Lib.ChromNameFormat
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.ChromNameFormat
                  Lib.$fReadChromNameFormat_$creadsPrec
                  Lib.$fReadChromNameFormat_$creadList
                  Lib.$fReadChromNameFormat1
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Lib.ChromNameFormat>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Lib.ChromNameFormat>_R)))
                  Lib.$fReadChromNameFormat_$creadListPrec -}
abb052827d9625d097890f754ea8e0e8
  $fReadChromNameFormat1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Lib.ChromNameFormat -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2,
     Unfolding: (GHC.Read.$fRead()6
                   @ Lib.ChromNameFormat
                   Lib.$fReadChromNameFormat2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <Lib.ChromNameFormat>_R))) -}
5dcc628c3ef140490194f8c7b14891a3
  $fReadChromNameFormat10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Lib.$fReadChromNameFormat11) -}
c3f41b577d246973bb341d09420db4a8
  $fReadChromNameFormat11 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("GRC"#) -}
abb052827d9625d097890f754ea8e0e8
  $fReadChromNameFormat12 ::
    Text.ParserCombinators.ReadP.P [Lib.ChromNameFormat]
  {- Unfolding: ((Lib.$fReadChromNameFormat_$creadListPrec
                    `cast`
                  (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                       <[Lib.ChromNameFormat]>_R)
                    GHC.Read.$fRead()8)
                   `cast`
                 (Text.ParserCombinators.ReadP.N:ReadP[0] <[Lib.ChromNameFormat]>_R)
                   @ [Lib.ChromNameFormat]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                      @ [Lib.ChromNameFormat])) -}
abb052827d9625d097890f754ea8e0e8
  $fReadChromNameFormat2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP Lib.ChromNameFormat
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec) ->
                 GHC.Read.choose2
                   @ Lib.ChromNameFormat
                   Lib.$fReadChromNameFormat_sps
                   eta) -}
abb052827d9625d097890f754ea8e0e8
  $fReadChromNameFormat3 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec Lib.ChromNameFormat)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec Lib.ChromNameFormat)
                   Lib.$fReadChromNameFormat4
                   (GHC.Types.[]
                      @ (GHC.Base.String,
                         Text.ParserCombinators.ReadPrec.ReadPrec Lib.ChromNameFormat))) -}
abb052827d9625d097890f754ea8e0e8
  $fReadChromNameFormat4 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec Lib.ChromNameFormat)
  {- Strictness: m,
     Unfolding: ((Lib.$fReadChromNameFormat6,
                  Lib.$fReadChromNameFormat5
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Lib.ChromNameFormat>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Lib.ChromNameFormat>_R))))) -}
abb052827d9625d097890f754ea8e0e8
  $fReadChromNameFormat5 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Lib.ChromNameFormat -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds6 :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (k1 :: Lib.ChromNameFormat -> Text.ParserCombinators.ReadP.P b) ->
                 k1 Lib.UCSC) -}
9b9292a427648bba2db7d6e6208158e2
  $fReadChromNameFormat6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Lib.$fReadChromNameFormat7) -}
8a19dc7fe6341aa63bfe45af8a300ce5
  $fReadChromNameFormat7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("UCSC"#) -}
abb052827d9625d097890f754ea8e0e8
  $fReadChromNameFormat8 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec Lib.ChromNameFormat)
  {- Strictness: m,
     Unfolding: ((Lib.$fReadChromNameFormat10,
                  Lib.$fReadChromNameFormat9
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Lib.ChromNameFormat>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Lib.ChromNameFormat>_R))))) -}
abb052827d9625d097890f754ea8e0e8
  $fReadChromNameFormat9 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Lib.ChromNameFormat -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds6 :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (k1 :: Lib.ChromNameFormat -> Text.ParserCombinators.ReadP.P b) ->
                 k1 Lib.GRC) -}
abb052827d9625d097890f754ea8e0e8
  $fReadChromNameFormat_$creadList ::
    Text.ParserCombinators.ReadP.ReadS [Lib.ChromNameFormat]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [Lib.ChromNameFormat]
                   Lib.$fReadChromNameFormat12) -}
abb052827d9625d097890f754ea8e0e8
  $fReadChromNameFormat_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec [Lib.ChromNameFormat]
  {- Unfolding: (GHC.Read.list
                   @ Lib.ChromNameFormat
                   Lib.$fReadChromNameFormat1
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                       <Lib.ChromNameFormat>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                  <Lib.ChromNameFormat>_R)))) -}
abb052827d9625d097890f754ea8e0e8
  $fReadChromNameFormat_$creadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS Lib.ChromNameFormat
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (n :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ Lib.ChromNameFormat
                   (GHC.Read.$fRead()6
                      @ Lib.ChromNameFormat
                      Lib.$fReadChromNameFormat2
                        `cast`
                      (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                <Lib.ChromNameFormat>_R))
                      n
                      @ Lib.ChromNameFormat
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ Lib.ChromNameFormat))) -}
abb052827d9625d097890f754ea8e0e8
  $fReadChromNameFormat_sps ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec Lib.ChromNameFormat)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec Lib.ChromNameFormat)
                   Lib.$fReadChromNameFormat8
                   Lib.$fReadChromNameFormat3) -}
2e345d36c55fb13cffd420fc95f5bf30
  $fReadRunStats :: GHC.Read.Read Lib.RunStats
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.RunStats
                  Lib.$fReadRunStats_$creadsPrec
                  Lib.$fReadRunStats_$creadList
                  Lib.$fReadRunStats1
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Lib.RunStats>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Lib.RunStats>_R)))
                  Lib.$fReadRunStats_$creadListPrec -}
2e345d36c55fb13cffd420fc95f5bf30
  $fReadRunStats1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Lib.RunStats -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2,
     Unfolding: (GHC.Read.$fRead()6
                   @ Lib.RunStats
                   Lib.$fReadRunStats2
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                       <Lib.RunStats>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                  <Lib.RunStats>_R)))) -}
2e345d36c55fb13cffd420fc95f5bf30
  $fReadRunStats2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Lib.RunStats -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S(S),1*U(U)><L,C(U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (w1 :: Lib.RunStats -> Text.ParserCombinators.ReadP.P b) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Lib.$w$creadPrec ww1 @ b w1 }) -}
2e345d36c55fb13cffd420fc95f5bf30
  $fReadRunStats3 :: Text.ParserCombinators.ReadP.P [Lib.RunStats]
  {- Unfolding: ((Lib.$fReadRunStats_$creadListPrec
                    `cast`
                  (Text.ParserCombinators.ReadPrec.N:ReadPrec[0] <[Lib.RunStats]>_R)
                    GHC.Read.$fRead()8)
                   `cast`
                 (Text.ParserCombinators.ReadP.N:ReadP[0] <[Lib.RunStats]>_R)
                   @ [Lib.RunStats]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                      @ [Lib.RunStats])) -}
2e345d36c55fb13cffd420fc95f5bf30
  $fReadRunStats_$creadList ::
    Text.ParserCombinators.ReadP.ReadS [Lib.RunStats]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [Lib.RunStats]
                   Lib.$fReadRunStats3) -}
2e345d36c55fb13cffd420fc95f5bf30
  $fReadRunStats_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec [Lib.RunStats]
  {- Unfolding: (GHC.Read.list
                   @ Lib.RunStats
                   Lib.$fReadRunStats1
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                       <Lib.RunStats>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                  <Lib.RunStats>_R)))) -}
2e345d36c55fb13cffd420fc95f5bf30
  $fReadRunStats_$creadsPrec ::
    GHC.Types.Int -> Text.ParserCombinators.ReadP.ReadS Lib.RunStats
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (n :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ Lib.RunStats
                   (GHC.Read.$fRead()6
                      @ Lib.RunStats
                      Lib.$fReadRunStats2
                        `cast`
                      (Trans
                           (<Text.ParserCombinators.ReadPrec.Prec>_R
                            ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                          <Lib.RunStats>_R))
                           (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                     <Lib.RunStats>_R)))
                      n
                      @ Lib.RunStats
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ Lib.RunStats))) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  $fShowAlignedRead :: GHC.Show.Show Lib.AlignedRead
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.AlignedRead
                  Lib.$fShowAlignedRead_$cshowsPrec
                  Lib.$fShowAlignedRead_$cshow
                  Lib.$fShowAlignedRead_$cshowList -}
64e0a7b5a8db25e9b81a102c9fe8422f
  $fShowAlignedRead1 :: Lib.AlignedRead -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (Lib.$fShowAlignedRead_$cshowsPrec
                   Lib.$fShowAlignedRead2) -}
1e5620f3e9c4548e7ac20e0fa758aff5
  $fShowAlignedRead2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  $fShowAlignedRead_$cshow :: Lib.AlignedRead -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(1*U(U,U,U,U),U(U),1*U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),U,U,1*U(U,U,U,U),U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(1*U,U,U,1*U(U,U,U,U)),U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.AlignedRead) ->
                 Lib.$fShowAlignedRead_$cshowsPrec
                   Lib.$fShowAlignedRead2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  $fShowAlignedRead_$cshowList :: [Lib.AlignedRead] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Lib.AlignedRead
                   Lib.$fShowAlignedRead1) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  $fShowAlignedRead_$cshowsPrec ::
    GHC.Types.Int -> Lib.AlignedRead -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S(S),1*U(U)><S,1*U(1*U(U,U,U,U),U(U),1*U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),U,U,1*U(U,U,U,U),U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(1*U,U,U,1*U(U,U,U,U)),U)> -}
fdfc37bd80569587de4159264d092980
  $fShowBEDPE :: GHC.Show.Show Lib.BEDPE
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.BEDPE
                  Lib.$fShowBEDPE_$cshowsPrec
                  Lib.$fShowBEDPE_$cshow
                  Lib.$fShowBEDPE_$cshowList -}
fdfc37bd80569587de4159264d092980
  $fShowBEDPE1 :: Lib.BEDPE -> GHC.Show.ShowS
  {- Arity: 1, Strictness: <S,1*U(1*U,U,U,1*U,U,U,1*U(U,U,U,U))>,
     Unfolding: (\ (w :: Lib.BEDPE) ->
                 case w of ww { Lib.BEDPE ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 Lib.$w$cshowsPrec 0# ww1 ww2 ww3 ww4 ww5 ww6 ww7 }) -}
fdfc37bd80569587de4159264d092980
  $fShowBEDPE_$cshow :: Lib.BEDPE -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,U,U,1*U,U,U,1*U(U,U,U,U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.BEDPE) ->
                 Lib.$fShowBEDPE_$cshowsPrec
                   Lib.$fShowAlignedRead2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
fdfc37bd80569587de4159264d092980
  $fShowBEDPE_$cshowList :: [Lib.BEDPE] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__ @ Lib.BEDPE Lib.$fShowBEDPE1) -}
fdfc37bd80569587de4159264d092980
  $fShowBEDPE_$cshowsPrec ::
    GHC.Types.Int -> Lib.BEDPE -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S(S),1*U(U)><S,1*U(1*U,U,U,1*U,U,U,1*U(U,U,U,U))>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Lib.BEDPE) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Lib.BEDPE ww3 ww4 ww5 ww6 ww7 ww8 ww9 ->
                 Lib.$w$cshowsPrec ww1 ww3 ww4 ww5 ww6 ww7 ww8 ww9 } }) -}
78740db68f2462e9356716573fd65631
  $fShowBedRecord :: GHC.Show.Show Lib.BedRecord
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.BedRecord
                  Lib.$fShowBedRecord_$cshowsPrec
                  Lib.$fShowBedRecord_$cshow
                  Lib.$fShowBedRecord_$cshowList -}
78740db68f2462e9356716573fd65631
  $fShowBedRecord1 :: Lib.BedRecord -> GHC.Show.ShowS
  {- Arity: 1, Strictness: <S,1*U(1*U,U,U,1*U(U,U,U,U))>,
     Unfolding: (\ (w :: Lib.BedRecord) ->
                 case w of ww { Lib.BedRecord ww1 ww2 ww3 ww4 ->
                 Lib.$w$cshowsPrec1 0# ww1 ww2 ww3 ww4 }) -}
78740db68f2462e9356716573fd65631
  $fShowBedRecord_$cshow :: Lib.BedRecord -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,U,U,1*U(U,U,U,U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.BedRecord) ->
                 Lib.$fShowBedRecord_$cshowsPrec
                   Lib.$fShowAlignedRead2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
78740db68f2462e9356716573fd65631
  $fShowBedRecord_$cshowList :: [Lib.BedRecord] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Lib.BedRecord
                   Lib.$fShowBedRecord1) -}
78740db68f2462e9356716573fd65631
  $fShowBedRecord_$cshowsPrec ::
    GHC.Types.Int -> Lib.BedRecord -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S(S),1*U(U)><S,1*U(1*U,U,U,1*U(U,U,U,U))>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Lib.BedRecord) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Lib.BedRecord ww3 ww4 ww5 ww6 ->
                 Lib.$w$cshowsPrec1 ww1 ww3 ww4 ww5 ww6 } }) -}
abb052827d9625d097890f754ea8e0e8
  $fShowChromNameFormat :: GHC.Show.Show Lib.ChromNameFormat
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.ChromNameFormat
                  Lib.$fShowChromNameFormat_$cshowsPrec
                  Lib.$fShowChromNameFormat_$cshow
                  Lib.$fShowChromNameFormat_$cshowList -}
abb052827d9625d097890f754ea8e0e8
  $fShowChromNameFormat1 :: Lib.ChromNameFormat -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds6 :: Lib.ChromNameFormat) (eta :: GHC.Base.String) ->
                 case ds6 of wild {
                   Lib.GRC
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c2 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c2
                           n
                           Lib.$fReadChromNameFormat10)
                        eta
                   Lib.UCSC
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c2 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c2
                           n
                           Lib.$fReadChromNameFormat6)
                        eta }) -}
abb052827d9625d097890f754ea8e0e8
  $fShowChromNameFormat_$cshow ::
    Lib.ChromNameFormat -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.ChromNameFormat) ->
                 case x of wild {
                   Lib.GRC -> Lib.$fReadChromNameFormat10
                   Lib.UCSC -> Lib.$fReadChromNameFormat6 }) -}
abb052827d9625d097890f754ea8e0e8
  $fShowChromNameFormat_$cshowList ::
    [Lib.ChromNameFormat] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Lib.ChromNameFormat
                   Lib.$fShowChromNameFormat1) -}
abb052827d9625d097890f754ea8e0e8
  $fShowChromNameFormat_$cshowsPrec ::
    GHC.Types.Int -> Lib.ChromNameFormat -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds6 :: GHC.Types.Int)
                   (ds7 :: Lib.ChromNameFormat)
                   (eta :: GHC.Base.String) ->
                 case ds7 of wild {
                   Lib.GRC
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c2 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c2
                           n
                           Lib.$fReadChromNameFormat10)
                        eta
                   Lib.UCSC
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c2 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c2
                           n
                           Lib.$fReadChromNameFormat6)
                        eta }) -}
7bbd4d124ab9a728e08072313eaaa4c5
  $fShowCigarMod :: GHC.Show.Show Lib.CigarMod
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.CigarMod
                  Lib.$fShowCigarMod_$cshowsPrec
                  Lib.$fShowCigarMod_$cshow
                  Lib.$fShowCigarMod_$cshowList -}
7bbd4d124ab9a728e08072313eaaa4c5
  $fShowCigarMod1 :: Lib.CigarMod -> GHC.Show.ShowS
  {- Arity: 1, Strictness: <S,1*U(U,U,1*U(U,U,U,U),1*U(U,U,U,U),U)>,
     Unfolding: (\ (w :: Lib.CigarMod) ->
                 case w of ww { Lib.CigarMod ww1 ww2 ww3 ww4 ww5 ->
                 Lib.$w$cshowsPrec2 0# ww1 ww2 ww3 ww4 ww5 }) -}
7bbd4d124ab9a728e08072313eaaa4c5
  $fShowCigarMod_$cshow :: Lib.CigarMod -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(U,U,1*U(U,U,U,U),1*U(U,U,U,U),U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.CigarMod) ->
                 Lib.$fShowCigarMod_$cshowsPrec
                   Lib.$fShowAlignedRead2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
7bbd4d124ab9a728e08072313eaaa4c5
  $fShowCigarMod_$cshowList :: [Lib.CigarMod] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Lib.CigarMod
                   Lib.$fShowCigarMod1) -}
7bbd4d124ab9a728e08072313eaaa4c5
  $fShowCigarMod_$cshowsPrec ::
    GHC.Types.Int -> Lib.CigarMod -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S(S),1*U(U)><S,1*U(U,U,1*U(U,U,U,U),1*U(U,U,U,U),U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Lib.CigarMod) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Lib.CigarMod ww3 ww4 ww5 ww6 ww7 ->
                 Lib.$w$cshowsPrec2 ww1 ww3 ww4 ww5 ww6 ww7 } }) -}
4a9f534e7bc67e4a259fbd60df039054
  $fShowMasterRecord :: GHC.Show.Show Lib.MasterRecord
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.MasterRecord
                  Lib.$fShowMasterRecord_$cshowsPrec
                  Lib.$fShowMasterRecord_$cshow
                  Lib.$fShowMasterRecord_$cshowList -}
4a9f534e7bc67e4a259fbd60df039054
  $fShowMasterRecord1 :: Lib.MasterRecord -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (Lib.$fShowMasterRecord_$cshowsPrec
                   Lib.$fShowAlignedRead2) -}
4a9f534e7bc67e4a259fbd60df039054
  $fShowMasterRecord_$cshow :: Lib.MasterRecord -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(1*U,U,U,1*U(U,U,U,U),U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.MasterRecord) ->
                 Lib.$fShowMasterRecord_$cshowsPrec
                   Lib.$fShowAlignedRead2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
4a9f534e7bc67e4a259fbd60df039054
  $fShowMasterRecord_$cshowList ::
    [Lib.MasterRecord] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Lib.MasterRecord
                   Lib.$fShowMasterRecord1) -}
4a9f534e7bc67e4a259fbd60df039054
  $fShowMasterRecord_$cshowsPrec ::
    GHC.Types.Int -> Lib.MasterRecord -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S(S),1*U(U)><S,1*U(1*U,U,U,1*U(U,U,U,U),U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U))> -}
6f760c933e008b36f1c2ad656d809c5f
  $fShowMidFamily :: GHC.Show.Show Lib.MidFamily
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.MidFamily
                  Lib.$fShowMidFamily_$cshowsPrec
                  Lib.$fShowMidFamily_$cshow
                  Lib.$fShowMidFamily_$cshowList -}
6f760c933e008b36f1c2ad656d809c5f
  $fShowMidFamily1 :: Lib.MidFamily -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (Lib.$fShowMidFamily_$cshowsPrec
                   Lib.$fShowAlignedRead2) -}
6f760c933e008b36f1c2ad656d809c5f
  $fShowMidFamily_$cshow :: Lib.MidFamily -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(1*U,U,U,1*U(U,U,U,U),U,U,U,U,U,1*U(1*U,U,U,1*U(U,U,U,U)))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.MidFamily) ->
                 Lib.$fShowMidFamily_$cshowsPrec
                   Lib.$fShowAlignedRead2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
6f760c933e008b36f1c2ad656d809c5f
  $fShowMidFamily_$cshowList :: [Lib.MidFamily] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Lib.MidFamily
                   Lib.$fShowMidFamily1) -}
6f760c933e008b36f1c2ad656d809c5f
  $fShowMidFamily_$cshowsPrec ::
    GHC.Types.Int -> Lib.MidFamily -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S(S),1*U(U)><S,1*U(1*U,U,U,1*U(U,U,U,U),U,U,U,U,U,1*U(1*U,U,U,1*U(U,U,U,U)))> -}
9d444cb42900aebbeb90455ac8193fe9
  $fShowOpts :: GHC.Show.Show Lib.Opts
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.Opts
                  Lib.$fShowOpts_$cshowsPrec
                  Lib.$fShowOpts_$cshow
                  Lib.$fShowOpts_$cshowList -}
9d444cb42900aebbeb90455ac8193fe9
  $fShowOpts1 :: Lib.Opts -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U(1*U,1*U,1*U,1*U)><L,U>,
     Unfolding: (\ (w :: Lib.Opts) (w1 :: GHC.Base.String) ->
                 case w of ww { Lib.Opts ww1 ww2 ww3 ww4 ->
                 Lib.$w$cshowsPrec3 0# ww1 ww2 ww3 ww4 w1 }) -}
54a8b83e0d838be5b7e7cb81780813b1
  $fShowOpts2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("}"#) -}
ffc435cdb1d0285ae3c85b3c9a5d9775
  $fShowOpts3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("outfilename = "#) -}
c6907f315985149c4e4c728057743831
  $fShowOpts4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("insamfile = "#) -}
66f52104f7f3e1dcbcf2aa8c560c4dae
  $fShowOpts5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("incoordsfile = "#) -}
dbc341eb46e21d084998e0a689077d2f
  $fShowOpts6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("bedpeformat = "#) -}
477c19452c04136153653da97706c793
  $fShowOpts7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Opts {"#) -}
9d444cb42900aebbeb90455ac8193fe9
  $fShowOpts_$cshow :: Lib.Opts -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.Opts) ->
                 Lib.$fShowOpts_$cshowsPrec
                   Lib.$fShowAlignedRead2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
9d444cb42900aebbeb90455ac8193fe9
  $fShowOpts_$cshowList :: [Lib.Opts] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__ @ Lib.Opts Lib.$fShowOpts1) -}
9d444cb42900aebbeb90455ac8193fe9
  $fShowOpts_$cshowsPrec ::
    GHC.Types.Int -> Lib.Opts -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U,1*U,1*U)><L,U>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Lib.Opts) (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Lib.Opts ww3 ww4 ww5 ww6 ->
                 Lib.$w$cshowsPrec3 ww1 ww3 ww4 ww5 ww6 w2 } }) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  $fShowPairedAln :: GHC.Show.Show Lib.PairedAln
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.PairedAln
                  Lib.$fShowPairedAln_$cshowsPrec
                  Lib.$fShowPairedAln_$cshow
                  Lib.$fShowPairedAln_$cshowList -}
64e0a7b5a8db25e9b81a102c9fe8422f
  $fShowPairedAln1 :: Lib.PairedAln -> GHC.Show.ShowS
  {- Arity: 1,
     Strictness: <S,1*U(1*U(1*U(U,U,U,U),U(U),1*U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),U,U,1*U(U,U,U,U),U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(1*U,U,U,1*U(U,U,U,U)),U),1*U(1*U(U,U,U,U),U(U),1*U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),U,U,1*U(U,U,U,U),U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(1*U,U,U,1*U(U,U,U,U)),U),U,U)>,
     Unfolding: (\ (w :: Lib.PairedAln) ->
                 case w of ww { Lib.PairedAln ww1 ww2 ww3 ww4 ->
                 Lib.$w$cshowsPrec4 0# ww1 ww2 ww3 ww4 }) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  $fShowPairedAln_$cshow :: Lib.PairedAln -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(1*U(1*U(U,U,U,U),U(U),1*U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),U,U,1*U(U,U,U,U),U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(1*U,U,U,1*U(U,U,U,U)),U),1*U(1*U(U,U,U,U),U(U),1*U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),U,U,1*U(U,U,U,U),U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(1*U,U,U,1*U(U,U,U,U)),U),U,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.PairedAln) ->
                 Lib.$fShowPairedAln_$cshowsPrec
                   Lib.$fShowAlignedRead2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  $fShowPairedAln_$cshowList :: [Lib.PairedAln] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Lib.PairedAln
                   Lib.$fShowPairedAln1) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  $fShowPairedAln_$cshowsPrec ::
    GHC.Types.Int -> Lib.PairedAln -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S(S),1*U(U)><S,1*U(1*U(1*U(U,U,U,U),U(U),1*U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),U,U,1*U(U,U,U,U),U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(1*U,U,U,1*U(U,U,U,U)),U),1*U(1*U(U,U,U,U),U(U),1*U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),U,U,1*U(U,U,U,U),U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(1*U,U,U,1*U(U,U,U,U)),U),U,U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Lib.PairedAln) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Lib.PairedAln ww3 ww4 ww5 ww6 ->
                 Lib.$w$cshowsPrec4 ww1 ww3 ww4 ww5 ww6 } }) -}
2e345d36c55fb13cffd420fc95f5bf30
  $fShowRunStats :: GHC.Show.Show Lib.RunStats
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.RunStats
                  Lib.$fShowRunStats_$cshowsPrec
                  Lib.$fShowRunStats_$cshow
                  Lib.$fShowRunStats_$cshowList -}
2e345d36c55fb13cffd420fc95f5bf30
  $fShowRunStats1 :: Lib.RunStats -> GHC.Show.ShowS
  {- Arity: 1, Strictness: <S,1*U(U,U,U,U,1*U(U),1*U(U))>,
     Unfolding: (\ (w :: Lib.RunStats) ->
                 case w of ww { Lib.RunStats ww1 ww2 ww3 ww4 ww5 ww6 ->
                 Lib.$w$cshowsPrec5 0# ww1 ww2 ww3 ww4 ww5 ww6 }) -}
2e345d36c55fb13cffd420fc95f5bf30
  $fShowRunStats_$cshow :: Lib.RunStats -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(U,U,U,U,1*U(U),1*U(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.RunStats) ->
                 Lib.$fShowRunStats_$cshowsPrec
                   Lib.$fShowAlignedRead2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
2e345d36c55fb13cffd420fc95f5bf30
  $fShowRunStats_$cshowList :: [Lib.RunStats] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Lib.RunStats
                   Lib.$fShowRunStats1) -}
2e345d36c55fb13cffd420fc95f5bf30
  $fShowRunStats_$cshowsPrec ::
    GHC.Types.Int -> Lib.RunStats -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S(S),1*U(U)><S,1*U(U,U,U,U,1*U(U),1*U(U))>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Lib.RunStats) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Lib.RunStats ww3 ww4 ww5 ww6 ww7 ww8 ->
                 Lib.$w$cshowsPrec5 ww1 ww3 ww4 ww5 ww6 ww7 ww8 } }) -}
e2c0c85c514784c2ed19970c7fc99cc7
  $fShowSAMFlag :: GHC.Show.Show Lib.SAMFlag
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.SAMFlag
                  Lib.$fShowSAMFlag_$cshowsPrec
                  Lib.$fShowSAMFlag_$cshow
                  Lib.$fShowSAMFlag_$cshowList -}
e2c0c85c514784c2ed19970c7fc99cc7
  $fShowSAMFlag1 :: Lib.SAMFlag -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (Lib.$fShowSAMFlag_$cshowsPrec
                   Lib.$fShowAlignedRead2) -}
e2c0c85c514784c2ed19970c7fc99cc7
  $fShowSAMFlag_$cshow :: Lib.SAMFlag -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.SAMFlag) ->
                 Lib.$fShowSAMFlag_$cshowsPrec
                   Lib.$fShowAlignedRead2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
e2c0c85c514784c2ed19970c7fc99cc7
  $fShowSAMFlag_$cshowList :: [Lib.SAMFlag] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Lib.SAMFlag
                   Lib.$fShowSAMFlag1) -}
e2c0c85c514784c2ed19970c7fc99cc7
  $fShowSAMFlag_$cshowsPrec ::
    GHC.Types.Int -> Lib.SAMFlag -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U))><L,U> -}
738096376958aedf685c1b59f577962f
  $fShowUChr :: GHC.Show.Show Lib.UChr
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.UChr
                  Lib.$fShowUChr_$cshowsPrec
                  Lib.$fShowUChr_$cshow
                  Lib.$fShowUChr_$cshowList -}
738096376958aedf685c1b59f577962f
  $fShowUChr1 :: Lib.UChr -> GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.UChr) (s :: GHC.Base.String)[OneShot] ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c2 :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr @ GHC.Types.Char @ b c2 n (Lib.$fShowUChr_$cshow x))
                   s) -}
738096376958aedf685c1b59f577962f
  $fShowUChr_$cshow :: Lib.UChr -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U> -}
738096376958aedf685c1b59f577962f
  $fShowUChr_$cshowList :: [Lib.UChr] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Lib.UChr]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Lib.UChr Lib.$fShowUChr1 ls s) -}
738096376958aedf685c1b59f577962f
  $fShowUChr_$cshowsPrec ::
    GHC.Types.Int -> Lib.UChr -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds6 :: GHC.Types.Int) (x :: Lib.UChr) (s :: GHC.Base.String) ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c2 :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr @ GHC.Types.Char @ b c2 n (Lib.$fShowUChr_$cshow x))
                   s) -}
d4a128accd54be7fbd74e33f69914b3b
  $s$fApplicativeResourceT ::
    GHC.Base.Applicative
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  Lib.$s$fApplicativeResourceT_$s$fFunctorResourceT
                  (\ @ a (eta :: a) ->
                   let {
                     x :: GHC.Prim.State# GHC.Prim.RealWorld
                          -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                       {- Arity: 1 -}
                     = \ (s :: GHC.Prim.State# GHC.Prim.RealWorld) -> (# s, eta #)
                   } in
                   (\ (ds6 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                    x)
                     `cast`
                   (Trans
                        (<GHC.IORef.IORef
                            Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                         ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                        (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                  <GHC.Types.IO>_R <a>_N))))
                  (\ @ a
                     @ b
                     (ds6 :: Control.Monad.Trans.Resource.Internal.ResourceT
                               GHC.Types.IO (a -> b))
                     (ds7 :: Control.Monad.Trans.Resource.Internal.ResourceT
                               GHC.Types.IO a)
                     (r :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (ds6
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <a -> b>_N)
                           r)
                          `cast`
                        (GHC.Types.N:IO[0] <a -> b>_R)
                          s of ds8 { (#,#) ipv ipv1 ->
                   case (ds7
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <a>_N)
                           r)
                          `cast`
                        (GHC.Types.N:IO[0] <a>_R)
                          ipv of ds9 { (#,#) ipv2 ipv3 ->
                   (# ipv2, ipv1 ipv3 #) } })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   Trans
                       (<Control.Monad.Trans.Resource.Internal.ResourceT
                           GHC.Types.IO (a -> b)>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO a>_R
                        ->_R <GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                        ->_R Sym (GHC.Types.N:IO[0] <b>_R))
                       (<Control.Monad.Trans.Resource.Internal.ResourceT
                           GHC.Types.IO (a -> b)>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO a>_R
                        ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                      <GHC.Types.IO>_R <b>_N)))
                  (\ @ a
                     @ b
                     @ c2
                     (eta :: a -> b -> c2)
                     (eta1 :: Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO a)
                     (eta2 :: Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b)
                     (eta3 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (eta1
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <a>_N)
                           eta3)
                          `cast`
                        (GHC.Types.N:IO[0] <a>_R)
                          s of ds6 { (#,#) ipv ipv1 ->
                   case (eta2
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <b>_N)
                           eta3)
                          `cast`
                        (GHC.Types.N:IO[0] <b>_R)
                          ipv of ds7 { (#,#) ipv2 ipv3 ->
                   (# ipv2, eta ipv1 ipv3 #) } })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N) (c2 :: <*>_N).
                   Trans
                       (<a -> b -> c2>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO a>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b>_R
                        ->_R <GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                        ->_R Sym (GHC.Types.N:IO[0] <c2>_R))
                       (<a -> b -> c2>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO a>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b>_R
                        ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                      <GHC.Types.IO>_R <c2>_N)))
                  (\ @ a
                     @ b
                     (eta :: Control.Monad.Trans.Resource.Internal.ResourceT
                               GHC.Types.IO a)
                     (eta1 :: Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b)
                     (eta2 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (eta
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <a>_N)
                           eta2)
                          `cast`
                        (GHC.Types.N:IO[0] <a>_R)
                          s of ds6 { (#,#) ipv ipv1 ->
                   (eta1
                      `cast`
                    (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                         <GHC.Types.IO>_R <b>_N)
                      eta2)
                     `cast`
                   (GHC.Types.N:IO[0] <b>_R)
                     ipv })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   Trans
                       (<Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b>_R
                        ->_R <GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                        ->_R Sym (GHC.Types.N:IO[0] <b>_R))
                       (<Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b>_R
                        ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                      <GHC.Types.IO>_R <b>_N)))
                  (\ @ a
                     @ b
                     (eta1 :: Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO a)
                     (eta2 :: Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b)
                     (eta3 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (eta1
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <a>_N)
                           eta3)
                          `cast`
                        (GHC.Types.N:IO[0] <a>_R)
                          s of ds6 { (#,#) ipv ipv1 ->
                   case (eta2
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <b>_N)
                           eta3)
                          `cast`
                        (GHC.Types.N:IO[0] <b>_R)
                          ipv of ds7 { (#,#) ipv2 ipv3 ->
                   (# ipv2, ipv1 #) } })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   Trans
                       (<Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b>_R
                        ->_R <GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                        ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                       (<Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b>_R
                        ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                      <GHC.Types.IO>_R <a>_N))) -}
48b869501c3936ebb0450ea62232e930
  $s$fApplicativeResourceT_$cpure ::
    a -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,A><S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (eta :: a) ->
                 let {
                   x :: GHC.Prim.State# GHC.Prim.RealWorld
                        -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                     {- Arity: 1 -}
                   = \ (s :: GHC.Prim.State# GHC.Prim.RealWorld) -> (# s, eta #)
                 } in
                 (\ (ds6 :: GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                  x)
                   `cast`
                 (Trans
                      (<GHC.IORef.IORef
                          Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                       ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                      (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                <GHC.Types.IO>_R <a>_N)))) -}
5477177bc52ac6f5146ad910985515b0
  $s$fApplicativeResourceT_$s$fFunctorResourceT ::
    GHC.Base.Functor
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  (\ @ a
                     @ b
                     (f10 :: a -> b)
                     (ds6 :: Control.Monad.Trans.Resource.Internal.ResourceT
                               GHC.Types.IO a)
                     (r :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (ds6
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <a>_N)
                           r)
                          `cast`
                        (GHC.Types.N:IO[0] <a>_R)
                          s of ds7 { (#,#) ipv ipv1 ->
                   (# ipv, f10 ipv1 #) })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   Trans
                       (<a -> b>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO a>_R
                        ->_R <GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                        ->_R Sym (GHC.Types.N:IO[0] <b>_R))
                       (<a -> b>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO a>_R
                        ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                      <GHC.Types.IO>_R <b>_N)))
                  (\ @ a
                     @ b
                     (x :: a)
                     (eta :: Control.Monad.Trans.Resource.Internal.ResourceT
                               GHC.Types.IO b)
                     (eta1 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (eta
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <b>_N)
                           eta1)
                          `cast`
                        (GHC.Types.N:IO[0] <b>_R)
                          s of ds6 { (#,#) ipv ipv1 ->
                   (# ipv, x #) })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   Trans
                       (<a>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b>_R
                        ->_R <GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                        ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                       (<a>_R
                        ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                                GHC.Types.IO b>_R
                        ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                      <GHC.Types.IO>_R <a>_N))) -}
90f81fbc4dd16c452cb9216db6b0e5a1
  $s$fEq(,) ::
    GHC.Classes.Eq
      (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                  (GHC.Classes.$fEq(,)_$c==
                     @ GHC.Integer.Type.Integer
                     @ Data.ByteString.Internal.ByteString
                     GHC.Integer.Type.$fEqInteger
                     Data.ByteString.Internal.$fEqByteString)
                  (GHC.Classes.$fEq(,)_$c/=
                     @ GHC.Integer.Type.Integer
                     @ Data.ByteString.Internal.ByteString
                     GHC.Integer.Type.$fEqInteger
                     Data.ByteString.Internal.$fEqByteString) -}
e99c7c42d8a1dcf3fb7ac9f84cc7f0ea
  $s$fMonadResourceT ::
    GHC.Base.Monad
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  Lib.$s$fApplicativeResourceT
                  (\ @ a
                     @ b
                     (ds6 :: Control.Monad.Trans.Resource.Internal.ResourceT
                               GHC.Types.IO a)
                     (f10 :: a
                             -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO b)
                     (r :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (ds6
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <a>_N)
                           r)
                          `cast`
                        (GHC.Types.N:IO[0] <a>_R)
                          s of ds7 { (#,#) ipv ipv1 ->
                   ((f10 ipv1)
                      `cast`
                    (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                         <GHC.Types.IO>_R <b>_N)
                      r)
                     `cast`
                   (GHC.Types.N:IO[0] <b>_R)
                     ipv })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   Trans
                       (<Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                        ->_R <a
                              -> Control.Monad.Trans.Resource.Internal.ResourceT
                                   GHC.Types.IO b>_R
                        ->_R <GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                        ->_R Sym (GHC.Types.N:IO[0] <b>_R))
                       (<Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                        ->_R <a
                              -> Control.Monad.Trans.Resource.Internal.ResourceT
                                   GHC.Types.IO b>_R
                        ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                      <GHC.Types.IO>_R <b>_N)))
                  Lib.$s$fMonadResourceT_$s$fMonadResourceT_$c>>
                  (\ @ a (eta :: a) ->
                   let {
                     x :: GHC.Prim.State# GHC.Prim.RealWorld
                          -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                       {- Arity: 1 -}
                     = \ (s :: GHC.Prim.State# GHC.Prim.RealWorld) -> (# s, eta #)
                   } in
                   (\ (ds6 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                    x)
                     `cast`
                   (Trans
                        (<GHC.IORef.IORef
                            Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                         ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                        (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                  <GHC.Types.IO>_R <a>_N))))
                  (\ @ a ->
                   GHC.Err.errorWithoutStackTrace
                     @ 'GHC.Types.LiftedRep
                     @ (Control.Monad.Trans.Resource.Internal.ResourceT
                          GHC.Types.IO a)) -}
66dd3d8d6b7220aacf4ebc3896ff4404
  $s$fMonadResourceT_$s$fMonadResourceT_$c>> ::
    Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
    -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO b
    -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO b
  {- Arity: 4, HasNoCafRefs,
     Strictness: <C(C(S(SL))),1*C1(C1(U(U,A)))><L,1*C1(C1(U(U,U)))><L,U><S,U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ a
                   @ b
                   (m109 :: Control.Monad.Trans.Resource.Internal.ResourceT
                              GHC.Types.IO a)
                   (k1 :: Control.Monad.Trans.Resource.Internal.ResourceT
                            GHC.Types.IO b)
                   (r :: GHC.IORef.IORef
                           Control.Monad.Trans.Resource.Internal.ReleaseMap)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (m109
                         `cast`
                       (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                            <GHC.Types.IO>_R <a>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0] <a>_R)
                        s of ds6 { (#,#) ipv ipv1 ->
                 (k1
                    `cast`
                  (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                       <GHC.Types.IO>_R <b>_N)
                    r)
                   `cast`
                 (GHC.Types.N:IO[0] <b>_R)
                   ipv })
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N).
                 Trans
                     (<Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                      ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                              GHC.Types.IO b>_R
                      ->_R <GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                      ->_R Sym (GHC.Types.N:IO[0] <b>_R))
                     (<Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                      ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                              GHC.Types.IO b>_R
                      ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                    <GHC.Types.IO>_R <b>_N))) -}
f44d65c73acc8038e4db0c6ee57ebe28
  $sfromList :: [(Lib.UChr, a)] -> Data.Map.Internal.Map Lib.UChr a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a (ds6 :: [(Lib.UChr, a)]) ->
                 case ds6 of wild {
                   [] -> Data.Map.Internal.Tip @ Lib.UChr @ a
                   : ds7 ds8
                   -> case ds7 of wild1 { (,) kx x ->
                      case ds8 of wild2 {
                        []
                        -> case x of x1 { DEFAULT ->
                           case kx of dt { DEFAULT ->
                           Data.Map.Internal.Bin
                             @ Lib.UChr
                             @ a
                             1#
                             dt
                             x1
                             (Data.Map.Internal.Tip @ Lib.UChr @ a)
                             (Data.Map.Internal.Tip @ Lib.UChr @ a) } }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds9 ->
                           case GHC.Prim.dataToTag# @ Lib.UChr kx of a# { DEFAULT ->
                           case GHC.Prim.dataToTag# @ Lib.UChr ky of b# { DEFAULT ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<# a# b#) of wild4 {
                             GHC.Types.False
                             -> case x of x0 { DEFAULT ->
                                Lib.$sfromList1
                                  @ a
                                  (Data.Map.Internal.Bin
                                     @ Lib.UChr
                                     @ a
                                     1#
                                     kx
                                     x0
                                     (Data.Map.Internal.Tip @ Lib.UChr @ a)
                                     (Data.Map.Internal.Tip @ Lib.UChr @ a))
                                  wild2 }
                             GHC.Types.True
                             -> case x of x0 { DEFAULT ->
                                Lib.$wpoly_go8
                                  @ a
                                  1#
                                  (Data.Map.Internal.Bin
                                     @ Lib.UChr
                                     @ a
                                     1#
                                     kx
                                     x0
                                     (Data.Map.Internal.Tip @ Lib.UChr @ a)
                                     (Data.Map.Internal.Tip @ Lib.UChr @ a))
                                  wild2 } } } } } } } }) -}
1502e1c933d425dd38ef5dfc49cb9a7c
  $sfromList1 ::
    Data.Map.Internal.Map Lib.UChr a
    -> [(Lib.UChr, a)] -> Data.Map.Internal.Map Lib.UChr a
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
2d4ed3cbd1b47fa18c79a24600dc0d09
  $sfromList2 ::
    [(GHC.Types.Int, a)] -> Data.Map.Internal.Map GHC.Types.Int a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a (ds6 :: [(GHC.Types.Int, a)]) ->
                 case ds6 of wild {
                   [] -> Data.Map.Internal.Tip @ GHC.Types.Int @ a
                   : ds7 ds8
                   -> case ds7 of wild1 { (,) kx x ->
                      case ds8 of wild2 {
                        []
                        -> case x of x1 { DEFAULT ->
                           case kx of dt { GHC.Types.I# ipv ->
                           Data.Map.Internal.Bin
                             @ GHC.Types.Int
                             @ a
                             1#
                             dt
                             x1
                             (Data.Map.Internal.Tip @ GHC.Types.Int @ a)
                             (Data.Map.Internal.Tip @ GHC.Types.Int @ a) } }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds9 ->
                           case kx of wild4 { GHC.Types.I# x1 ->
                           case ky of wild5 { GHC.Types.I# y ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.>=# x1 y) of wild6 {
                             GHC.Types.False
                             -> case x of x0 { DEFAULT ->
                                Lib.$wpoly_go1
                                  @ a
                                  1#
                                  (Data.Map.Internal.Bin
                                     @ GHC.Types.Int
                                     @ a
                                     1#
                                     wild4
                                     x0
                                     (Data.Map.Internal.Tip @ GHC.Types.Int @ a)
                                     (Data.Map.Internal.Tip @ GHC.Types.Int @ a))
                                  wild2 }
                             GHC.Types.True
                             -> case x of x0 { DEFAULT ->
                                Lib.$sfromList3
                                  @ a
                                  (Data.Map.Internal.Bin
                                     @ GHC.Types.Int
                                     @ a
                                     1#
                                     wild4
                                     x0
                                     (Data.Map.Internal.Tip @ GHC.Types.Int @ a)
                                     (Data.Map.Internal.Tip @ GHC.Types.Int @ a))
                                  wild2 } } } } } } } }) -}
4bef3000ebd520c96f973bc0b6baff54
  $sfromList3 ::
    Data.Map.Internal.Map GHC.Types.Int a
    -> [(GHC.Types.Int, a)] -> Data.Map.Internal.Map GHC.Types.Int a
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
f846ace36ae8015d36ac7c0dfd929c75
  $sfromList4 :: [Lib.UChr] -> Data.Set.Internal.Set Lib.UChr
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds6 :: [Lib.UChr]) ->
                 case ds6 of wild {
                   [] -> Data.Set.Internal.Tip @ Lib.UChr
                   : x ds7
                   -> case ds7 of wild1 {
                        []
                        -> case x of dt { DEFAULT ->
                           Data.Set.Internal.Bin
                             @ Lib.UChr
                             1#
                             dt
                             (Data.Set.Internal.Tip @ Lib.UChr)
                             (Data.Set.Internal.Tip @ Lib.UChr) }
                        : ipv ipv1
                        -> case GHC.Prim.dataToTag# @ Lib.UChr x of a# { DEFAULT ->
                           case GHC.Prim.dataToTag# @ Lib.UChr ipv of b# { DEFAULT ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<# a# b#) of wild2 {
                             GHC.Types.False
                             -> Lib.$sfromList_go4
                                  (Data.Set.Internal.Bin
                                     @ Lib.UChr
                                     1#
                                     x
                                     (Data.Set.Internal.Tip @ Lib.UChr)
                                     (Data.Set.Internal.Tip @ Lib.UChr))
                                  wild1
                             GHC.Types.True
                             -> Lib.$wgo3
                                  1#
                                  (Data.Set.Internal.Bin
                                     @ Lib.UChr
                                     1#
                                     x
                                     (Data.Set.Internal.Tip @ Lib.UChr)
                                     (Data.Set.Internal.Tip @ Lib.UChr))
                                  wild1 } } } } }) -}
4da3f10f9ba575ace396d9982a2715bb
  $sfromList_go4 ::
    Data.Set.Internal.Set Lib.UChr
    -> [Lib.UChr] -> Data.Set.Internal.Set Lib.UChr
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
48e4a2412d56f6b33ae31c35a8b7029b
  $sinsert_$sgo3 ::
    Lib.UChr
    -> Lib.UChr
    -> Data.Set.Internal.Set Lib.UChr
    -> Data.Set.Internal.Set Lib.UChr
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U> -}
ee31769b39f17c155195a0122474f208
  $sinsert_$sgo8 ::
    Lib.UChr
    -> a1
    -> Data.Map.Internal.Map Lib.UChr a1
    -> Data.Map.Internal.Map Lib.UChr a1
  {- Arity: 3, Strictness: <S,1*U><S,1*U><S,1*U> -}
d5885e94e0fb059d4b090ade4c376330
  $slookup1 ::
    Lib.UChr -> Data.Map.Internal.Map Lib.UChr a -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
a859744f7bc4c48bbfaf270b44a9acc7
  $tc'AlignedRead :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11418315229004778751##
                   8043744106839083659##
                   Lib.$trModule
                   Lib.$tc'AlignedRead2
                   0#
                   Lib.$tc'AlignedRead1) -}
c0c38dea505f46176d5a89d82e7b98ea
  $tc'AlignedRead1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
1850622fb34e11762d892649708ee044
  $tc'AlignedRead2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'AlignedRead3) -}
f590d58ba586b3038a855ecd2396b5b6
  $tc'AlignedRead3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'AlignedRead"#) -}
de6f733bf2e4d1f23eb00053b2622331
  $tc'BEDPE :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12803246128879597005##
                   12532722488730139297##
                   Lib.$trModule
                   Lib.$tc'BEDPE2
                   0#
                   Lib.$tc'BEDPE1) -}
490c57950aa66885bffc066f1fc9aa28
  $tc'BEDPE1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
3bfeedd3f4cc1984bf04e1901f3f28b9
  $tc'BEDPE2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'BEDPE3) -}
21bf3b6a54d45faea1e7c525c38b3e27
  $tc'BEDPE3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'BEDPE"#) -}
3446931cc56d013ec6f79fa35748958f
  $tc'BedRecord :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2386056716569426509##
                   18375031939706738335##
                   Lib.$trModule
                   Lib.$tc'BedRecord2
                   0#
                   Lib.$tc'BedRecord1) -}
a594be42b61e5b153b59cab47f934e29
  $tc'BedRecord1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
c2efabd246ac6159f590312d82793d5e
  $tc'BedRecord2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'BedRecord3) -}
af9afca1db4a3e07fe360b46ac2b9cfa
  $tc'BedRecord3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'BedRecord"#) -}
fd798cf3ec2b4c2c8e5f0e710f747b95
  $tc'C1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13157836522152434223##
                   2657816608576415240##
                   Lib.$trModule
                   Lib.$tc'C30
                   0#
                   Lib.$tc'C29) -}
44d6beb966a346b79a8d1b3c6a628b07
  $tc'C10 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3654501446604455917##
                   2809891156963164078##
                   Lib.$trModule
                   Lib.$tc'C32
                   0#
                   Lib.$tc'C29) -}
b798b7234f709f17cf4c9415b1bbb538
  $tc'C11 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5738351111226506580##
                   12422102177802851868##
                   Lib.$trModule
                   Lib.$tc'C34
                   0#
                   Lib.$tc'C29) -}
a62cb9ffe1de815837a82c5a21672dff
  $tc'C12 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8813881364900074698##
                   12598792319276110063##
                   Lib.$trModule
                   Lib.$tc'C36
                   0#
                   Lib.$tc'C29) -}
579241b3e53220f9b3aac26bc96ddb8c
  $tc'C13 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12588932686913446201##
                   2054664870371915970##
                   Lib.$trModule
                   Lib.$tc'C38
                   0#
                   Lib.$tc'C29) -}
0973fc119fd9a81e87dcfe08793803d0
  $tc'C14 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12577957142100691335##
                   10698177208999606310##
                   Lib.$trModule
                   Lib.$tc'C40
                   0#
                   Lib.$tc'C29) -}
8ef6006ec00cc8a48ec8cc2aa75e9c4f
  $tc'C15 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7363695700884773690##
                   5693001415601960284##
                   Lib.$trModule
                   Lib.$tc'C42
                   0#
                   Lib.$tc'C29) -}
7289bffdec50ffa02e974ff6d2f095ed
  $tc'C16 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3618988153888513601##
                   9776127261752216211##
                   Lib.$trModule
                   Lib.$tc'C44
                   0#
                   Lib.$tc'C29) -}
834498685b47a0add750a2719d63a632
  $tc'C17 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8889516523401180223##
                   3658119655852626849##
                   Lib.$trModule
                   Lib.$tc'C46
                   0#
                   Lib.$tc'C29) -}
51deb3e0b5fbc55bc891a49e47ad7016
  $tc'C18 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8688008968500541830##
                   10384392869969726752##
                   Lib.$trModule
                   Lib.$tc'C48
                   0#
                   Lib.$tc'C29) -}
b2b6a7dfc925ed6b1717f8766f36e2f9
  $tc'C19 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12065843246944671894##
                   12396025871514381283##
                   Lib.$trModule
                   Lib.$tc'C50
                   0#
                   Lib.$tc'C29) -}
657a934885cf04609b020c7f380db934
  $tc'C2 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   730579333095911271##
                   12731097534962195635##
                   Lib.$trModule
                   Lib.$tc'C52
                   0#
                   Lib.$tc'C29) -}
9d019e48693b1a12a23318dd7b271289
  $tc'C20 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4261959911072229066##
                   13475806657391947558##
                   Lib.$trModule
                   Lib.$tc'C54
                   0#
                   Lib.$tc'C29) -}
902b2a2459a7d2ba9806951d8af310ce
  $tc'C21 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1954274848600699180##
                   8570456239397164772##
                   Lib.$trModule
                   Lib.$tc'C56
                   0#
                   Lib.$tc'C29) -}
f285484878fd185f86806420c8289b66
  $tc'C22 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14095353572083297568##
                   5042063980853354028##
                   Lib.$trModule
                   Lib.$tc'C58
                   0#
                   Lib.$tc'C29) -}
32e1791d24c64a7c4798ca6d024bc035
  $tc'C29 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
09e861e913c28933df143cfb46c46735
  $tc'C3 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17676868102547958549##
                   321960445811776086##
                   Lib.$trModule
                   Lib.$tc'C60
                   0#
                   Lib.$tc'C29) -}
d92767cdd6d07dd2a78a952faf895cff
  $tc'C30 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C31) -}
35c39cb03f5d6a2f5bd613b60d923597
  $tc'C31 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C1"#) -}
e2be9a480b79b77effe93fdbb92cab81
  $tc'C32 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C33) -}
06bc1566c971b870b98bb524ee813721
  $tc'C33 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C10"#) -}
0fbb93ec593eda5befabded213fc9a09
  $tc'C34 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C35) -}
59df2ee67d0dc9819c1c26906f33522e
  $tc'C35 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C11"#) -}
31b3051fb05c4b93b4bf1c4e454415b5
  $tc'C36 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C37) -}
8381d727bc20e31906523f507edb0949
  $tc'C37 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C12"#) -}
faa87ae6b548a51466e7211ea1e9d73d
  $tc'C38 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C39) -}
c2eaa84e3194557472e4ecaa33c65b39
  $tc'C39 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C13"#) -}
2d9fc26a5b81c07fbbfcf3bc8d91ea5e
  $tc'C4 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3851974425358703807##
                   4745608525214295792##
                   Lib.$trModule
                   Lib.$tc'C62
                   0#
                   Lib.$tc'C29) -}
9737c24a95d739797aa03a045ab65cdc
  $tc'C40 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C41) -}
f3b423fe82442293eae59168b0031b80
  $tc'C41 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C14"#) -}
5fa2858eba933e0ecf1c322ff37d9b3f
  $tc'C42 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C43) -}
ec9dc944c1e7acf4a807a3559a55e375
  $tc'C43 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C15"#) -}
1be1dd632e6e1c322789313b3488437c
  $tc'C44 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C45) -}
0739adea6ccf934a8e35b92f08c9b305
  $tc'C45 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C16"#) -}
3d0638cb21863a99db7b909f40e5b4a5
  $tc'C46 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C47) -}
137b535e4723deedc5b17152d77e5603
  $tc'C47 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C17"#) -}
d35db625175e39ba5fcd828ba8ba82a7
  $tc'C48 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C49) -}
45131fe026427be27ff1a9c0d5771891
  $tc'C49 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C18"#) -}
8338e4483e92a6d3baeab5b5d5bf1d87
  $tc'C5 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15042779612784208848##
                   10288760868890026851##
                   Lib.$trModule
                   Lib.$tc'C64
                   0#
                   Lib.$tc'C29) -}
71d00908ae873d49e5dfe548112beace
  $tc'C50 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C51) -}
06bfb9c5c382031c2e70207f7935db9e
  $tc'C51 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C19"#) -}
2197c2206d3074778c0548df66d1071b
  $tc'C52 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C53) -}
51b0521ba981604a3c95b12f208ce09a
  $tc'C53 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C2"#) -}
dfa9e7cf69221910da0579a2550f84e8
  $tc'C54 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C55) -}
a82a0d6eb7108729a535888a6bf3ac0d
  $tc'C55 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C20"#) -}
65ec0f43d54db76d8df9019e3322d711
  $tc'C56 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C57) -}
9eb7f1b6430c88f75d7ad1e35d6ffaf5
  $tc'C57 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C21"#) -}
41bcda1d29eb970437ccd9fd6b7f88fa
  $tc'C58 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C59) -}
3a42b586d37a29858513aa48f247efc7
  $tc'C59 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C22"#) -}
d36e7649f3092399ce9e29501be0cb38
  $tc'C6 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13185493732020441100##
                   4537128095873059170##
                   Lib.$trModule
                   Lib.$tc'C66
                   0#
                   Lib.$tc'C29) -}
4ed2a590cec7937ee467e182a9d857c8
  $tc'C60 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C61) -}
2ca82f736f33bcbca94b476cd3e09094
  $tc'C61 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C3"#) -}
b62dde68e2737571402ffce4115da546
  $tc'C62 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C63) -}
72527d63bc5616041450eab31860523b
  $tc'C63 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C4"#) -}
df713b7bcb356702c8df01ab90af49a2
  $tc'C64 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C65) -}
4e3ead5b14b29d4902fd2226a0bb377d
  $tc'C65 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C5"#) -}
e82de9d488b08c364c18bf0f35c04ae6
  $tc'C66 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C67) -}
1fb9ed441aefc0162b9c05e599d0695a
  $tc'C67 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C6"#) -}
f0ebc165aebc0bea47a3a4616f501bd3
  $tc'C68 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C69) -}
9259d4481a26dae5f5b59286186465c0
  $tc'C69 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C7"#) -}
b8d80e3e0f34ed11067a2864a9169d96
  $tc'C7 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1393656264607439128##
                   13777905732126320233##
                   Lib.$trModule
                   Lib.$tc'C68
                   0#
                   Lib.$tc'C29) -}
71e9cd18e0b39288dfc7872c266d1530
  $tc'C70 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C71) -}
4cb7910a4155f61e575fec48aeec8839
  $tc'C71 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C8"#) -}
1f0bc9ad101b5d2091276ed250575a13
  $tc'C72 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'C73) -}
1ccd27df279f0ef3811409691ade697b
  $tc'C73 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C9"#) -}
286871a2a4af3e4337da7d71e7e01fa3
  $tc'C8 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3294814064830751561##
                   9551408050661358058##
                   Lib.$trModule
                   Lib.$tc'C70
                   0#
                   Lib.$tc'C29) -}
f278ff656fcbae1b17015ad2abbf6320
  $tc'C9 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13122901519460785381##
                   7655825778404707734##
                   Lib.$trModule
                   Lib.$tc'C72
                   0#
                   Lib.$tc'C29) -}
9d67662f7603b6ae97833cbc6ee5cd9f
  $tc'CMT :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1843588442690904162##
                   1132290237608418281##
                   Lib.$trModule
                   Lib.$tc'CMT1
                   0#
                   Lib.$tc'C29) -}
da4995a7e6ef5a3e9db5d80a43f81b9a
  $tc'CMT1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'CMT2) -}
1d898587a91f73f6f17f1fef55705caf
  $tc'CMT2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'CMT"#) -}
85b9dbd593ad23238fd04ae357e86899
  $tc'CX :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13113157368417684428##
                   4913966780360122612##
                   Lib.$trModule
                   Lib.$tc'CX1
                   0#
                   Lib.$tc'C29) -}
7dd7bf12eb6c6a32e3b6647cbf652927
  $tc'CX1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'CX2) -}
86a7278b9a73eb9e39d1c7542f57f7b8
  $tc'CX2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'CX"#) -}
815cb5b8fa2bfb1bd878c1a240bb9553
  $tc'CY :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7885926048867996714##
                   4047818287423434943##
                   Lib.$trModule
                   Lib.$tc'CY1
                   0#
                   Lib.$tc'C29) -}
90a07c25043aaec9093521a580f43ba0
  $tc'CY1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'CY2) -}
72501aadeeb9cb9502f6412c31a22b06
  $tc'CY2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'CY"#) -}
7f4fd12f338335fe421e64a05d5da2ba
  $tc'Chr1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14755414716945372293##
                   16781197876167929572##
                   Lib.$trModule
                   Lib.$tc'Chr29
                   0#
                   Lib.$tc'C29) -}
2d5865c95ec8bd6c78306d9f8f856cbc
  $tc'Chr10 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3533102660514152369##
                   3197807719325628435##
                   Lib.$trModule
                   Lib.$tc'Chr31
                   0#
                   Lib.$tc'C29) -}
488ea81cebf8d05732ac12501d0458e9
  $tc'Chr11 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10545288813164685544##
                   8330962544024412087##
                   Lib.$trModule
                   Lib.$tc'Chr33
                   0#
                   Lib.$tc'C29) -}
7f432e892e6d2b01482ff690a3366c6e
  $tc'Chr12 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13883816470610934057##
                   8990169500984090292##
                   Lib.$trModule
                   Lib.$tc'Chr35
                   0#
                   Lib.$tc'C29) -}
2aec6b370086abd3d1e2eca68eeb3368
  $tc'Chr13 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15347207429248063871##
                   14146177505012404531##
                   Lib.$trModule
                   Lib.$tc'Chr37
                   0#
                   Lib.$tc'C29) -}
e2f002ea28b09f137523ae24c52227d4
  $tc'Chr14 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13589217250732450678##
                   8545364873064261213##
                   Lib.$trModule
                   Lib.$tc'Chr39
                   0#
                   Lib.$tc'C29) -}
4c98ee482e20d74356c56405d78067e8
  $tc'Chr15 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5305127491699413451##
                   8739683974932029395##
                   Lib.$trModule
                   Lib.$tc'Chr41
                   0#
                   Lib.$tc'C29) -}
abd136cfc07fd76d39ac836ff78f0b51
  $tc'Chr16 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10856452077832626843##
                   8214940073538097988##
                   Lib.$trModule
                   Lib.$tc'Chr43
                   0#
                   Lib.$tc'C29) -}
a5c2aa1c052f62c3f6515e1bb2465bc8
  $tc'Chr17 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7281628105985294113##
                   8944547726663425088##
                   Lib.$trModule
                   Lib.$tc'Chr45
                   0#
                   Lib.$tc'C29) -}
269193f96bdeb593ea925fb9a1cff4dd
  $tc'Chr18 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10076151705882004339##
                   8162160423198963745##
                   Lib.$trModule
                   Lib.$tc'Chr47
                   0#
                   Lib.$tc'C29) -}
9436f33f85cb92795bab2db567e13959
  $tc'Chr19 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17749478477831832977##
                   10293319030515456437##
                   Lib.$trModule
                   Lib.$tc'Chr49
                   0#
                   Lib.$tc'C29) -}
65b90fc0897547ae1a7e29871d5a5fc5
  $tc'Chr2 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16524811522106775211##
                   5244344154946826079##
                   Lib.$trModule
                   Lib.$tc'Chr51
                   0#
                   Lib.$tc'C29) -}
53369f2ee1afc65ca43ffd8b988b2255
  $tc'Chr20 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1978175306849383092##
                   6963492795190343341##
                   Lib.$trModule
                   Lib.$tc'Chr53
                   0#
                   Lib.$tc'C29) -}
db52bd8dc291f93b6cbe458b829ea993
  $tc'Chr21 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9323456270072965352##
                   4716722113781866156##
                   Lib.$trModule
                   Lib.$tc'Chr55
                   0#
                   Lib.$tc'C29) -}
e4152cd6d2576bfa57c01b77df516264
  $tc'Chr22 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7257106560382926035##
                   9948698300921710372##
                   Lib.$trModule
                   Lib.$tc'Chr57
                   0#
                   Lib.$tc'C29) -}
fb7c9b6d8c879efc466e23f3304baacc
  $tc'Chr29 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr30) -}
01a41c8e8d338d36efb3f3d2a98826c2
  $tc'Chr3 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7099884454726259480##
                   15921209651894367931##
                   Lib.$trModule
                   Lib.$tc'Chr59
                   0#
                   Lib.$tc'C29) -}
e6be310a7973cbfb2c83fdbc784d3a86
  $tc'Chr30 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr1"#) -}
2a0ce1fd9d49725063246e69004133d6
  $tc'Chr31 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr32) -}
0c88fed39c5824c2baafbcf67c7e4387
  $tc'Chr32 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr10"#) -}
46f24778cbde57181e3b407f1cbd7c4a
  $tc'Chr33 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr34) -}
6563a31d01e3c7102147accea69cc874
  $tc'Chr34 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr11"#) -}
a7e77810eaf33b568bec0e9dac844970
  $tc'Chr35 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr36) -}
077f26700c877f10f61ad578516522c2
  $tc'Chr36 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr12"#) -}
7ea26f0b8286187079d3d33ed57cb237
  $tc'Chr37 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr38) -}
689924b2a84b076525456d2850f0a90c
  $tc'Chr38 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr13"#) -}
50c8ee3a519f9503aef9aa5b4859c468
  $tc'Chr39 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr40) -}
428ff1bc44883100a4de9dc66353fb00
  $tc'Chr4 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17431014999162633325##
                   6627677656727054851##
                   Lib.$trModule
                   Lib.$tc'Chr61
                   0#
                   Lib.$tc'C29) -}
2b6c8f453b8a8201995d2b194437c7ff
  $tc'Chr40 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr14"#) -}
41a1dd52f2bb070b6c5a122c682c8637
  $tc'Chr41 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr42) -}
c469207820ef3c441f802eede5ed1b39
  $tc'Chr42 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr15"#) -}
6aa02b4a262ce6a28e90ac9a0732d79e
  $tc'Chr43 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr44) -}
46e472a07f8778b1fc7024763ef76e77
  $tc'Chr44 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr16"#) -}
2e38b4feb7828f7f02c7013111171d71
  $tc'Chr45 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr46) -}
71b7f5f30f785999b9974054f9ef6ad4
  $tc'Chr46 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr17"#) -}
5ccdd620455f05d8ed3f2e4af5e92da8
  $tc'Chr47 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr48) -}
0a3f9f9d314589e31e9c754d871f80ed
  $tc'Chr48 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr18"#) -}
fcea0fa7255c5ebc0f9e7a0457b2f663
  $tc'Chr49 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr50) -}
1de81a11da3bcff74f56b55861da6b3c
  $tc'Chr5 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3130750651562903623##
                   1560430382548144354##
                   Lib.$trModule
                   Lib.$tc'Chr63
                   0#
                   Lib.$tc'C29) -}
ad6f9bcfb5a145ac545e0230b942ba5a
  $tc'Chr50 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr19"#) -}
5ae4741fad4ee5a06db46aa482ad47a9
  $tc'Chr51 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr52) -}
582e927eaa2e3f777f4bac6563555b34
  $tc'Chr52 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr2"#) -}
8e669b43c45f4b4bf87d383886d6b5b6
  $tc'Chr53 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr54) -}
0f6c916593a728d27047a61efcf59df3
  $tc'Chr54 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr20"#) -}
1b7b17f7ee8b7b311ec02ef9449220b5
  $tc'Chr55 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr56) -}
2a889219aa90ea358982f6d718f70363
  $tc'Chr56 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr21"#) -}
f26d7e232dc2cb4e352627003f4f26a8
  $tc'Chr57 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr58) -}
c38aaa3ffa28bf278e0370b080656c64
  $tc'Chr58 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr22"#) -}
d8666bf022e8ed2c89a6c108dd85867c
  $tc'Chr59 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr60) -}
c1c14dadbadafc7ce94f6cb464854938
  $tc'Chr6 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12952153311730221843##
                   6501859907352978803##
                   Lib.$trModule
                   Lib.$tc'Chr65
                   0#
                   Lib.$tc'C29) -}
042ad8c11e74d4a6edd21af60f339a93
  $tc'Chr60 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr3"#) -}
3113b23692c7b3fb6766785f1146486c
  $tc'Chr61 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr62) -}
b2c0d37bad04ff5a7df275f68a5516c9
  $tc'Chr62 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr4"#) -}
70fb2a7784bab58648538ec387aa1824
  $tc'Chr63 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr64) -}
591bba47d49c5e5f8b2ff497d2e04bab
  $tc'Chr64 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr5"#) -}
30f4ac81769bcd29158a1bdf51e1e59a
  $tc'Chr65 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr66) -}
e5c981aa787598c5630ecd350b4f5387
  $tc'Chr66 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr6"#) -}
22695ce4a70d9a3e956350bcf61597ef
  $tc'Chr67 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr68) -}
69df19f666f51ece2c89f0dedc5d4bdb
  $tc'Chr68 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr7"#) -}
2482bcf77864807469419822552a5b58
  $tc'Chr69 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr70) -}
d42bd3b636ad6fafbbc9536c1bc96b2a
  $tc'Chr7 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14413359515266988185##
                   11292174697217506122##
                   Lib.$trModule
                   Lib.$tc'Chr67
                   0#
                   Lib.$tc'C29) -}
fbd4312470fbda8dc1e55ef16c657b7f
  $tc'Chr70 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr8"#) -}
d981ed43644012d4d58a6b4606b2ecd1
  $tc'Chr71 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Chr72) -}
32917d9399adbb6bd838b4caff6de92d
  $tc'Chr72 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Chr9"#) -}
402d5a895d5f5c0995176c313b5389da
  $tc'Chr8 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9139912874316166756##
                   15785607701553975810##
                   Lib.$trModule
                   Lib.$tc'Chr69
                   0#
                   Lib.$tc'C29) -}
c87cfe54caf19150f97d57d4e6585660
  $tc'Chr9 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13398483251176716207##
                   6381518843715252773##
                   Lib.$trModule
                   Lib.$tc'Chr71
                   0#
                   Lib.$tc'C29) -}
eda691cf2f1feb3a373451fd2074e04e
  $tc'ChrM :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10127375635975710517##
                   11514193512088393437##
                   Lib.$trModule
                   Lib.$tc'ChrM1
                   0#
                   Lib.$tc'C29) -}
07170cae6231415bbabb5d306ad63417
  $tc'ChrM1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'ChrM2) -}
989a800ff6144ea81fd812f5fda8a893
  $tc'ChrM2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ChrM"#) -}
9222fddc03610c2831c034297fa02f95
  $tc'ChrX :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9151482811996501054##
                   4536695860066044412##
                   Lib.$trModule
                   Lib.$tc'ChrX1
                   0#
                   Lib.$tc'C29) -}
bea114e51e802e6d83cd4dd1c88c9066
  $tc'ChrX1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'ChrX2) -}
19f6c6bac1476f095bd48fd0eb880039
  $tc'ChrX2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ChrX"#) -}
db4a1faada6a6375f69ce68b15094cca
  $tc'ChrY :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1842449885932791805##
                   15596103123298375772##
                   Lib.$trModule
                   Lib.$tc'ChrY1
                   0#
                   Lib.$tc'C29) -}
5abf1b74dd3c33aa409b568f3ca42952
  $tc'ChrY1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'ChrY2) -}
14745b64e63e06bbbf2f111b9262360a
  $tc'ChrY2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ChrY"#) -}
ad4119839950ddf8948c99326c647928
  $tc'CigarMod :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14121611565855720117##
                   4014063600174459208##
                   Lib.$trModule
                   Lib.$tc'CigarMod2
                   0#
                   Lib.$tc'CigarMod1) -}
db550bd9fa20eb20df925013ca89dee1
  $tc'CigarMod1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
ef7d61a221e0f36d309321a9b10f1ee0
  $tc'CigarMod2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'CigarMod3) -}
f6d9aa7c456ecdfc13ca62f968fe1cba
  $tc'CigarMod3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'CigarMod"#) -}
ca07e2889b800d1d8877754c023df1cc
  $tc'GL000191P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   443898085349788328##
                   1079020637591727559##
                   Lib.$trModule
                   Lib.$tc'GL000191P2
                   0#
                   Lib.$tc'C29) -}
36c0fc690012eed217e4fb492798552e
  $tc'GL000191P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000191P3) -}
c479b08e7574b6bbba648bdafe97f777
  $tc'GL000191P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000191P1"#) -}
b1091f8701b694b1b6a18217a9ec05c2
  $tc'GL000192P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5574296354781328322##
                   15395822166598550993##
                   Lib.$trModule
                   Lib.$tc'GL000192P2
                   0#
                   Lib.$tc'C29) -}
bf1ac6a603c246f3596472ac84201235
  $tc'GL000192P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000192P3) -}
4df31c91d33d6515bc69e66eec0cad74
  $tc'GL000192P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000192P1"#) -}
4e679e91ec0710888bc3da3d712a9d38
  $tc'GL000193P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6056261152255259825##
                   3878098755664736070##
                   Lib.$trModule
                   Lib.$tc'GL000193P2
                   0#
                   Lib.$tc'C29) -}
79bc7453e12b0fc2f9c20fd925fce69d
  $tc'GL000193P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000193P3) -}
06dd83d24fd81681d40371c28344e877
  $tc'GL000193P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000193P1"#) -}
3001836c26a327f6ba4cb4e79cd7a0a8
  $tc'GL000194P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11910967372519634114##
                   2867532781644398184##
                   Lib.$trModule
                   Lib.$tc'GL000194P2
                   0#
                   Lib.$tc'C29) -}
cfa8601bb5b8e9a4a065465545395f6c
  $tc'GL000194P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000194P3) -}
2b315e993d89045281e0528c6beb52a0
  $tc'GL000194P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000194P1"#) -}
f3dab07d95ebb95b36432d7fc83f49f3
  $tc'GL000195P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7143000780111879623##
                   11594438117951929812##
                   Lib.$trModule
                   Lib.$tc'GL000195P2
                   0#
                   Lib.$tc'C29) -}
2f35fb86f331021f84cb7556c8136d0f
  $tc'GL000195P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000195P3) -}
e43966b6bf16820f208db60b90126c9c
  $tc'GL000195P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000195P1"#) -}
f77ac7f659a520324ebef31fcf8d8623
  $tc'GL000196P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17145437344202815433##
                   8231273417692877166##
                   Lib.$trModule
                   Lib.$tc'GL000196P2
                   0#
                   Lib.$tc'C29) -}
6b1e16168a8bfc0fe940400dfb0e3889
  $tc'GL000196P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000196P3) -}
39a58df7db55b6cdb06d6fd24f80d747
  $tc'GL000196P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000196P1"#) -}
10168b80d5c0c0e400c4f9a7ac8eb5b6
  $tc'GL000197P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12990183550040481497##
                   11823839144980852723##
                   Lib.$trModule
                   Lib.$tc'GL000197P2
                   0#
                   Lib.$tc'C29) -}
f9f0c834d1391fd40a8de2ab9f8583ec
  $tc'GL000197P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000197P3) -}
86388121de2515146749b50078befdce
  $tc'GL000197P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000197P1"#) -}
78a18abaf34bcda4182f91cd40bba61f
  $tc'GL000198P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6039291844457715983##
                   4523168172305016929##
                   Lib.$trModule
                   Lib.$tc'GL000198P2
                   0#
                   Lib.$tc'C29) -}
ea8fa9630d0023be1e896fa45d16807d
  $tc'GL000198P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000198P3) -}
52a974da30b145c5f0df4a8929dfce0b
  $tc'GL000198P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000198P1"#) -}
ff7e73615c6dd279d3de9e7a6798fe7c
  $tc'GL000199P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12214133598652057527##
                   1758400395518904340##
                   Lib.$trModule
                   Lib.$tc'GL000199P2
                   0#
                   Lib.$tc'C29) -}
030805d2de33d58dfe6183cbe7cb4475
  $tc'GL000199P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000199P3) -}
47714bc7faf12c74edad6d74fe4f9f22
  $tc'GL000199P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000199P1"#) -}
efd5a6a255071e3da2c380f5735fff8b
  $tc'GL000200P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1252151585696856416##
                   4770246066003432933##
                   Lib.$trModule
                   Lib.$tc'GL000200P2
                   0#
                   Lib.$tc'C29) -}
fed924abc88307a04341fec8b94986dd
  $tc'GL000200P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000200P3) -}
0c8a494848cc2216ef9046cdd1c4f0ef
  $tc'GL000200P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000200P1"#) -}
296ec2962932d210c634da6268652485
  $tc'GL000201P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18181154186006144222##
                   6120041772377094180##
                   Lib.$trModule
                   Lib.$tc'GL000201P2
                   0#
                   Lib.$tc'C29) -}
f13e373ca9d6890faeac815c433b3efb
  $tc'GL000201P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000201P3) -}
0b250933546ccd906c5089a6c7c1c688
  $tc'GL000201P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000201P1"#) -}
5b8bb9f755daf1a8947c023106dcf419
  $tc'GL000202P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   985626921974400750##
                   13649235644208354217##
                   Lib.$trModule
                   Lib.$tc'GL000202P2
                   0#
                   Lib.$tc'C29) -}
21c0b5d6efba8e7f4a87564d2c34d9a0
  $tc'GL000202P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000202P3) -}
7c0bf6ff62ff28d9fac4efc94ee3a890
  $tc'GL000202P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000202P1"#) -}
d1728612fcd3606995ccb93358dbbaab
  $tc'GL000203P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16657133156335428332##
                   5921239317668160849##
                   Lib.$trModule
                   Lib.$tc'GL000203P2
                   0#
                   Lib.$tc'C29) -}
4d7b1d45d5cd28124f976c9f2db66202
  $tc'GL000203P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000203P3) -}
abf65f8045722f31dde534938df58a96
  $tc'GL000203P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000203P1"#) -}
6040de8bc66206ef2663595f34151c6d
  $tc'GL000204P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2948805413811949307##
                   5441108927540884563##
                   Lib.$trModule
                   Lib.$tc'GL000204P2
                   0#
                   Lib.$tc'C29) -}
aaf81406f6a8684b4f00b51565fdf0dd
  $tc'GL000204P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000204P3) -}
62840c5c9e9b06bd82f7a8da9c872c91
  $tc'GL000204P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000204P1"#) -}
795bf6b1efb798dc875c44f734b5ef8e
  $tc'GL000205P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4094310998648809544##
                   838993735201072939##
                   Lib.$trModule
                   Lib.$tc'GL000205P2
                   0#
                   Lib.$tc'C29) -}
c35f37d6b0274e2bf74432e77304a06f
  $tc'GL000205P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000205P3) -}
6fb94ec181c1e933a716dd9608d2a8d8
  $tc'GL000205P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000205P1"#) -}
304c53e0db019ee4bc971a69246e742c
  $tc'GL000206P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13639224301738456739##
                   12885136566145622645##
                   Lib.$trModule
                   Lib.$tc'GL000206P2
                   0#
                   Lib.$tc'C29) -}
d2fcf73718365ca5526f4457b92e871b
  $tc'GL000206P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000206P3) -}
af48564b3c057f803d6badea2e275ba2
  $tc'GL000206P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000206P1"#) -}
23e9cb439e5d1fd5019fa4ffe5c514ca
  $tc'GL000207P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6692961317564002598##
                   7055087239115410875##
                   Lib.$trModule
                   Lib.$tc'GL000207P2
                   0#
                   Lib.$tc'C29) -}
7578c98e15fcbc25cb3533629976818d
  $tc'GL000207P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000207P3) -}
f1f5cd5890a5325fe5fdb0811f45e805
  $tc'GL000207P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000207P1"#) -}
af3d08c76402503d18d050be51904f09
  $tc'GL000208P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13974031674506606851##
                   445482405328227322##
                   Lib.$trModule
                   Lib.$tc'GL000208P2
                   0#
                   Lib.$tc'C29) -}
8dce3a224dfbdbf7607634b651e93308
  $tc'GL000208P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000208P3) -}
bf09e729554a60b874f252d9d1a31837
  $tc'GL000208P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000208P1"#) -}
60d7b143574f10adec2bb5b7251d4cd1
  $tc'GL000209P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5475610081376838124##
                   7323059946513160856##
                   Lib.$trModule
                   Lib.$tc'GL000209P2
                   0#
                   Lib.$tc'C29) -}
43fc32c50af5af3379e097691a279856
  $tc'GL000209P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000209P3) -}
16579c242173d1bf51637eaf54963311
  $tc'GL000209P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000209P1"#) -}
13ba3a460afcb404bfb2add63a3bb3c8
  $tc'GL000210P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12089038935313067159##
                   18218170922979955422##
                   Lib.$trModule
                   Lib.$tc'GL000210P2
                   0#
                   Lib.$tc'C29) -}
6538bfdf7f04bbda4cf89af261098394
  $tc'GL000210P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000210P3) -}
b0f8d95d96fb46a8338ca11a0d294ff5
  $tc'GL000210P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000210P1"#) -}
efdd39e25d7c294637eddbd863494a79
  $tc'GL000211P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16960702008856991189##
                   3144905798845123263##
                   Lib.$trModule
                   Lib.$tc'GL000211P2
                   0#
                   Lib.$tc'C29) -}
3a077b5e6fb7f980eb375f4235572d74
  $tc'GL000211P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000211P3) -}
07236c92bf0008a9bb4169f5fd4ee357
  $tc'GL000211P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000211P1"#) -}
fc8caa0c5544061e58a0ee908b94cd32
  $tc'GL000212P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9555098938555851900##
                   14331540327914248430##
                   Lib.$trModule
                   Lib.$tc'GL000212P2
                   0#
                   Lib.$tc'C29) -}
b471713fb31682ea500d8b88ffe6b5c9
  $tc'GL000212P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000212P3) -}
53f8207d8eca8f294f8baa835db1819a
  $tc'GL000212P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000212P1"#) -}
bae259f2b22e69ad629e78d920fbabdc
  $tc'GL000213P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16202912016658447047##
                   7716357545368261628##
                   Lib.$trModule
                   Lib.$tc'GL000213P2
                   0#
                   Lib.$tc'C29) -}
cdf603a6243bcbb23bc226e3a04a8479
  $tc'GL000213P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000213P3) -}
b874df57d6987764c89f0d98c44e1375
  $tc'GL000213P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000213P1"#) -}
9859b7eef73ba6903058045f305bb004
  $tc'GL000214P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13478994745716937511##
                   1022894756508353843##
                   Lib.$trModule
                   Lib.$tc'GL000214P2
                   0#
                   Lib.$tc'C29) -}
45aafe64406c3ac1708a6d172ad275a0
  $tc'GL000214P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000214P3) -}
8c136399cd0cfc0fd93c177d32a5b2d5
  $tc'GL000214P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000214P1"#) -}
21f3981812f07eb51ee5743e65e95c60
  $tc'GL000215P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17239367162628612748##
                   11893460465729404870##
                   Lib.$trModule
                   Lib.$tc'GL000215P2
                   0#
                   Lib.$tc'C29) -}
ee341118d34569ee10294050985378e3
  $tc'GL000215P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000215P3) -}
423961511d33a6bd8ae0699c2a63d257
  $tc'GL000215P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000215P1"#) -}
af55ed547fddf1a8c7ef9a8ed6f72a82
  $tc'GL000216P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2701723044980507373##
                   14178488942582632577##
                   Lib.$trModule
                   Lib.$tc'GL000216P2
                   0#
                   Lib.$tc'C29) -}
3d4e80827dfb27407b8d504300baf243
  $tc'GL000216P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000216P3) -}
621e1b2d8c908ee6ac06504729de1536
  $tc'GL000216P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000216P1"#) -}
f97fab46d132b158c5a805b14f3e9312
  $tc'GL000217P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15203261460060806953##
                   10669024749370818081##
                   Lib.$trModule
                   Lib.$tc'GL000217P2
                   0#
                   Lib.$tc'C29) -}
d857ab524b2a543db7f27f6220c4297e
  $tc'GL000217P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000217P3) -}
5612bece03403b898b36457b850cdd3b
  $tc'GL000217P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000217P1"#) -}
d7239e4725049297cac7e1072776a030
  $tc'GL000218P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   670975485211542053##
                   12751795250022585441##
                   Lib.$trModule
                   Lib.$tc'GL000218P2
                   0#
                   Lib.$tc'C29) -}
b2ccaec137f5abd2786c1677b8fb2879
  $tc'GL000218P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000218P3) -}
82aebcf64bded358da8ea9ac0a4f3431
  $tc'GL000218P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000218P1"#) -}
79d207dfdba832b50d3ecd4bb7097d54
  $tc'GL000219P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4736051641152943059##
                   3672517166893586957##
                   Lib.$trModule
                   Lib.$tc'GL000219P2
                   0#
                   Lib.$tc'C29) -}
93673a2ac5e9112c7d741e5c0bcb1368
  $tc'GL000219P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000219P3) -}
72d6bc2b471078f989d9f577dc3e7268
  $tc'GL000219P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000219P1"#) -}
8064c6d00cd1cd6cb03feb4eea78af15
  $tc'GL000220P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10663278141207082675##
                   4762851477867533837##
                   Lib.$trModule
                   Lib.$tc'GL000220P2
                   0#
                   Lib.$tc'C29) -}
1c24c6341db0340146f5d3cf42821b14
  $tc'GL000220P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000220P3) -}
d1b6ffbb15a4fa2408a16e7c8ea35fb4
  $tc'GL000220P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000220P1"#) -}
042b5a8c9db9065e7f0419a65d9c6716
  $tc'GL000221P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10803806970211486476##
                   14527743165296777291##
                   Lib.$trModule
                   Lib.$tc'GL000221P2
                   0#
                   Lib.$tc'C29) -}
038a50eea597aa6f82f60c43fa8a7d38
  $tc'GL000221P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000221P3) -}
a7a9f64d2aca0f16bace69c7cf33ed36
  $tc'GL000221P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000221P1"#) -}
b11462d0c67226f1d69ed9119dfb4cdf
  $tc'GL000222P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6242082235601692482##
                   10536992099767760187##
                   Lib.$trModule
                   Lib.$tc'GL000222P2
                   0#
                   Lib.$tc'C29) -}
150fc9078aa7706a2abb72bbeacbf2d3
  $tc'GL000222P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000222P3) -}
077ed9b5db1747d1726be075f75c7477
  $tc'GL000222P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000222P1"#) -}
bf84b9d2730f1775ac83aa507bc06040
  $tc'GL000223P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1183396751296645174##
                   3143695830633876061##
                   Lib.$trModule
                   Lib.$tc'GL000223P2
                   0#
                   Lib.$tc'C29) -}
95f0fff028965ea33dd2129017b92ef6
  $tc'GL000223P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000223P3) -}
d855daf81b608acb404fc82aeb415f13
  $tc'GL000223P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000223P1"#) -}
d41ea53c95ffcdfe55df8769aecb7b1f
  $tc'GL000224P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10422849162291743249##
                   18169554965743465079##
                   Lib.$trModule
                   Lib.$tc'GL000224P2
                   0#
                   Lib.$tc'C29) -}
9385654851fad59535531587ee91c1a3
  $tc'GL000224P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000224P3) -}
84e7bac54aab8be7c1ab4161f8b38e89
  $tc'GL000224P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000224P1"#) -}
edbefc46a51a209fc4de83b76a645c6b
  $tc'GL000225P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11094643908404778696##
                   13524123544345905129##
                   Lib.$trModule
                   Lib.$tc'GL000225P2
                   0#
                   Lib.$tc'C29) -}
662554b135a9a92606dfff69e1495862
  $tc'GL000225P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000225P3) -}
424ffe8f65fb7649f60d0fa94d0314b6
  $tc'GL000225P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000225P1"#) -}
9b2c69a6b370da4fa2b84ab2acca84c7
  $tc'GL000226P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15975022443720468236##
                   18253115365832863658##
                   Lib.$trModule
                   Lib.$tc'GL000226P2
                   0#
                   Lib.$tc'C29) -}
3b1ce10d9dbdbeb374705798c4acebb5
  $tc'GL000226P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000226P3) -}
717bc79963f605ba783aa20df8729d89
  $tc'GL000226P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000226P1"#) -}
ff161be81dae6bee6b5aaebe489de989
  $tc'GL000227P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11922153499344414802##
                   6896703639917176365##
                   Lib.$trModule
                   Lib.$tc'GL000227P2
                   0#
                   Lib.$tc'C29) -}
c9cdd254e7e5b7611fcee29ba8aa689f
  $tc'GL000227P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000227P3) -}
83a1b1ce61bf472a5f85d734802c8a95
  $tc'GL000227P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000227P1"#) -}
2c138e68413793d1ca4e44bd71bedd38
  $tc'GL000228P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1012560053704186333##
                   7104560692752080642##
                   Lib.$trModule
                   Lib.$tc'GL000228P2
                   0#
                   Lib.$tc'C29) -}
652f9e30d5fb1a43627f97a3cef92f25
  $tc'GL000228P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000228P3) -}
3953b5ab515770c1e42d7de87539290c
  $tc'GL000228P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000228P1"#) -}
d5d8a25ebe1d489c81750ca3c64aaf6e
  $tc'GL000229P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13714177796411012219##
                   253169213610050797##
                   Lib.$trModule
                   Lib.$tc'GL000229P2
                   0#
                   Lib.$tc'C29) -}
0c91930bd682ff9e17e2fdbe2f2ac783
  $tc'GL000229P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000229P3) -}
d32e729eaeac2e8ae6ae4af4f67126a8
  $tc'GL000229P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000229P1"#) -}
1f5d424a67caf26f3f3aaa68c2171310
  $tc'GL000230P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18334630414155726556##
                   17955279916897967228##
                   Lib.$trModule
                   Lib.$tc'GL000230P2
                   0#
                   Lib.$tc'C29) -}
39a99f35e41aecea8aff8f87720d9711
  $tc'GL000230P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000230P3) -}
60c5af1096821ffa5f494132d6b40e5c
  $tc'GL000230P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000230P1"#) -}
244c8c3dc9484ab5d532e213f9a83099
  $tc'GL000231P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6612373761819275040##
                   16212781994552292284##
                   Lib.$trModule
                   Lib.$tc'GL000231P2
                   0#
                   Lib.$tc'C29) -}
fde4c53bb57a0868ad06e210fd05d40e
  $tc'GL000231P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000231P3) -}
69fb52fc2256d99f03ff1884fd3d151d
  $tc'GL000231P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000231P1"#) -}
4740b0a9cc5f2922f34a35895bf323f7
  $tc'GL000232P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8482221053789568732##
                   13265099225691550792##
                   Lib.$trModule
                   Lib.$tc'GL000232P2
                   0#
                   Lib.$tc'C29) -}
78ad7e429f6336cfa2593cdb9290fa99
  $tc'GL000232P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000232P3) -}
7dc501be84611623a42f2e00e3a89e49
  $tc'GL000232P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000232P1"#) -}
3f15d8ab905acf18650ebf9153c8344a
  $tc'GL000233P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2349534580210025410##
                   8828530207269393515##
                   Lib.$trModule
                   Lib.$tc'GL000233P2
                   0#
                   Lib.$tc'C29) -}
20c3be4dcd6d21d609b1181e84244a4f
  $tc'GL000233P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000233P3) -}
ec9365cfb9ef60111eef5b1239f4ca46
  $tc'GL000233P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000233P1"#) -}
30bdc9ec0e2bfc779bd76f56fea65a10
  $tc'GL000234P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8056141941258988416##
                   5213923273762324002##
                   Lib.$trModule
                   Lib.$tc'GL000234P2
                   0#
                   Lib.$tc'C29) -}
ace23fedf58a34344eb25a2ed4dfdb95
  $tc'GL000234P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000234P3) -}
84a0dce4c25f87f56477d89ec30fa8f4
  $tc'GL000234P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000234P1"#) -}
0ef1b7c2e7029a57b8c16584f41c32a6
  $tc'GL000235P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11920029647565823407##
                   14332460525935601092##
                   Lib.$trModule
                   Lib.$tc'GL000235P2
                   0#
                   Lib.$tc'C29) -}
a9f4cb19cdca1318e965144aa91077d4
  $tc'GL000235P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000235P3) -}
46fc7a891f9c1bd8daaccc7791d9a13c
  $tc'GL000235P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000235P1"#) -}
463e84734006cae2d4e903c0a120ab05
  $tc'GL000236P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   785737756752699497##
                   10896988030440915715##
                   Lib.$trModule
                   Lib.$tc'GL000236P2
                   0#
                   Lib.$tc'C29) -}
1aa650f0c0a80c184a54c74d91db5a25
  $tc'GL000236P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000236P3) -}
eefb56f15aac262bf9398101bc7144c8
  $tc'GL000236P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000236P1"#) -}
796340a8f41edf92e0ece5667bcd46fd
  $tc'GL000237P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6761576536601421590##
                   15129660612281458161##
                   Lib.$trModule
                   Lib.$tc'GL000237P2
                   0#
                   Lib.$tc'C29) -}
ecd93dc0184cf427ad2385b52ac6a6fd
  $tc'GL000237P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000237P3) -}
9dea92e7d2edbd347c3e3be04295b1b8
  $tc'GL000237P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000237P1"#) -}
2543b655ca8d5409e60576abafb094a6
  $tc'GL000238P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1497466232101558841##
                   2800043831093556870##
                   Lib.$trModule
                   Lib.$tc'GL000238P2
                   0#
                   Lib.$tc'C29) -}
1be80d89020df5a0e5b619696ce79e50
  $tc'GL000238P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000238P3) -}
18a9a4ff0d7eb66fcecf343e3382d7f3
  $tc'GL000238P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000238P1"#) -}
c6cab6d76bf10272af99cb68dcc6f26c
  $tc'GL000239P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5619049588939894409##
                   10159124603016112736##
                   Lib.$trModule
                   Lib.$tc'GL000239P2
                   0#
                   Lib.$tc'C29) -}
f897e21bd55b0208b8ad6ff511bf7945
  $tc'GL000239P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000239P3) -}
3214c3ceac4e3ec458a040d88a2ef03b
  $tc'GL000239P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000239P1"#) -}
00f75d39fc76a266392625b53ade33a9
  $tc'GL000240P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12448899231868775358##
                   1053165778148808574##
                   Lib.$trModule
                   Lib.$tc'GL000240P2
                   0#
                   Lib.$tc'C29) -}
07bb5bc56a3933316e9e6378a94e58c4
  $tc'GL000240P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000240P3) -}
fe0acb0b1024ecf5f4040b146ff67361
  $tc'GL000240P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000240P1"#) -}
8b5466166154ac5a07c19c12a07208c1
  $tc'GL000241P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   244086056402106368##
                   3888704260322277911##
                   Lib.$trModule
                   Lib.$tc'GL000241P2
                   0#
                   Lib.$tc'C29) -}
3afcb11f63defedd6bde76762df4f7b1
  $tc'GL000241P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000241P3) -}
cc9cf64a29a0fe76a598da98a8f3bda8
  $tc'GL000241P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000241P1"#) -}
01c187847f62dd46275b825a42067644
  $tc'GL000242P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12127690362112844640##
                   7552054341965099011##
                   Lib.$trModule
                   Lib.$tc'GL000242P2
                   0#
                   Lib.$tc'C29) -}
874cc862bdcd598dd4e8ec471420a4e3
  $tc'GL000242P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000242P3) -}
c948a827a1078503629527bf06331c07
  $tc'GL000242P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000242P1"#) -}
9f662541bd1b7cc0f8f47e7c4160a37b
  $tc'GL000243P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4478340196219732641##
                   16699614633942721411##
                   Lib.$trModule
                   Lib.$tc'GL000243P2
                   0#
                   Lib.$tc'C29) -}
a499b563175199b0d66437bc724659ea
  $tc'GL000243P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000243P3) -}
960e34135b050755cb538aef8827a696
  $tc'GL000243P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000243P1"#) -}
cc54b6cb3a5e86c9fad394d324f7a709
  $tc'GL000244P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16380668277950039564##
                   16791846781906617470##
                   Lib.$trModule
                   Lib.$tc'GL000244P2
                   0#
                   Lib.$tc'C29) -}
ddbb863369a7ecfdaf5574af0df3fc77
  $tc'GL000244P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000244P3) -}
45ec324fae5a74f035c8233b9e416be4
  $tc'GL000244P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000244P1"#) -}
1bc9e09ac9e690b2e1164bd9df83395c
  $tc'GL000245P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5251688133954153529##
                   14178850138680423386##
                   Lib.$trModule
                   Lib.$tc'GL000245P2
                   0#
                   Lib.$tc'C29) -}
f42c8f9887c95eee7b06a064e7dfda06
  $tc'GL000245P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000245P3) -}
3eb6349908d0acc63f0ba5b89e1df099
  $tc'GL000245P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000245P1"#) -}
4009173d2e306ff4ada65b845c70d26b
  $tc'GL000246P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14299975766622517809##
                   3365561573658465746##
                   Lib.$trModule
                   Lib.$tc'GL000246P2
                   0#
                   Lib.$tc'C29) -}
69b68fca107ffb6f5a9d4b3422999d3a
  $tc'GL000246P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000246P3) -}
5a562b7e625a4fc0a80e6ed949879733
  $tc'GL000246P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000246P1"#) -}
5e3a2214d81f903ee41305a288917e99
  $tc'GL000247P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1636088626947043470##
                   10826194484655041811##
                   Lib.$trModule
                   Lib.$tc'GL000247P2
                   0#
                   Lib.$tc'C29) -}
0c858c5f6356d8a343b3b37505d7dd39
  $tc'GL000247P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000247P3) -}
4a67cb114f567eb04e449da097a527eb
  $tc'GL000247P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000247P1"#) -}
1e3e8f83a7ce8e3d704cc2010df3aa7f
  $tc'GL000248P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15999011051808274005##
                   1168902128076515022##
                   Lib.$trModule
                   Lib.$tc'GL000248P2
                   0#
                   Lib.$tc'C29) -}
4702fb9b2a54fa710b76543eb7cec17f
  $tc'GL000248P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000248P3) -}
59aac6019ddf356f348e1fb7632c983d
  $tc'GL000248P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000248P1"#) -}
fc892f9dfcf05360baf735c5ee564b1e
  $tc'GL000249P1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12751533823806790008##
                   1047563523822877865##
                   Lib.$trModule
                   Lib.$tc'GL000249P2
                   0#
                   Lib.$tc'C29) -}
7bf4f1eab142babf751ebddb1eda3780
  $tc'GL000249P2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GL000249P3) -}
d97fa0894b46b1c2f7476f9f10cb56c5
  $tc'GL000249P3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GL000249P1"#) -}
d3abf84efa676d3264795e3df813fcc2
  $tc'GRC :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9516261586662642588##
                   12355239581752129426##
                   Lib.$trModule
                   Lib.$tc'GRC2
                   0#
                   Lib.$tc'GRC1) -}
8714add132d08d73da5fbf99d0b3e74a
  $tc'GRC1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
2b46737ed197a7c0a9b7bd518afce505
  $tc'GRC2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'GRC3) -}
f94cb97e3ec60ebff667226a93446dfe
  $tc'GRC3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GRC"#) -}
d7eda3212f9ceb96b54e95ac0bfe35cc
  $tc'MasterRecord :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8387247897969649320##
                   17237674102465917904##
                   Lib.$trModule
                   Lib.$tc'MasterRecord2
                   0#
                   Lib.$tc'MasterRecord1) -}
07d66dc18838d61316c17a5239f358c0
  $tc'MasterRecord1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
f48a00d1dca3146505b34461d87d0a26
  $tc'MasterRecord2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'MasterRecord3) -}
008f6a0d60aa07bb809aef4ad2eea13c
  $tc'MasterRecord3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'MasterRecord"#) -}
91f2339aff356c2b10b448de96abcad8
  $tc'MidFamily :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   300279448592698889##
                   8546125322296264754##
                   Lib.$trModule
                   Lib.$tc'MidFamily2
                   0#
                   Lib.$tc'MidFamily1) -}
9b2632223849fc3c5a0a072e76924f5f
  $tc'MidFamily1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
c1c4a36ec1d56b5c17a5f421a4d15b3a
  $tc'MidFamily2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'MidFamily3) -}
9427267478794fe2bcbbf500a5ba2f04
  $tc'MidFamily3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'MidFamily"#) -}
42ece0e0d7adb9652212c761d910f5ed
  $tc'NC_007605 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9961756326973184243##
                   8675313379510077382##
                   Lib.$trModule
                   Lib.$tc'NC_1
                   0#
                   Lib.$tc'C29) -}
109f12aedb6098c0d6b6f6fff5417e1b
  $tc'NC_1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'NC_2) -}
1ef243841f9c2557677f67ff16f31e86
  $tc'NC_2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'NC_007605"#) -}
992e4fd56f52226161e6121b960f3073
  $tc'NONE :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12107088743156554696##
                   12381850011322866157##
                   Lib.$trModule
                   Lib.$tc'NONE1
                   0#
                   Lib.$tc'C29) -}
3ea22e249a50228738e4cc8ee1c1baac
  $tc'NONE1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'NONE2) -}
6b5a4d23e66dae0ef4fc1828063c1c8f
  $tc'NONE2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'NONE"#) -}
ca3a2128253ab083c9f335a1b9a5a263
  $tc'Opts :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   290492960485030631##
                   14981560034141804323##
                   Lib.$trModule
                   Lib.$tc'Opts2
                   0#
                   Lib.$tc'Opts1) -}
9b9b4dbd60298c5882ac3605764fafcd
  $tc'Opts1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
5a445c443e0faa56a2cff61e2b7e428c
  $tc'Opts2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Opts3) -}
90912a93a6e00b5297d800216d8be625
  $tc'Opts3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Opts"#) -}
819c05c8a260767c0227a5f0c1877569
  $tc'PairedAln :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3830778797328274316##
                   6443858028337733975##
                   Lib.$trModule
                   Lib.$tc'PairedAln2
                   0#
                   Lib.$tc'PairedAln1) -}
799647e4f81c7a66224f413535990829
  $tc'PairedAln1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
042e24a3245fefece83ae2c454dd5ae2
  $tc'PairedAln2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'PairedAln3) -}
4e9bf041601f2ee74c119fb479b04610
  $tc'PairedAln3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PairedAln"#) -}
41ba9ce5709f9d2c8ea0af140cd84122
  $tc'RunStats :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   763660849800470242##
                   17705412778903752985##
                   Lib.$trModule
                   Lib.$tc'RunStats2
                   0#
                   Lib.$tc'RunStats1) -}
a0a919708dbfa9cadf21358dc6cf401c
  $tc'RunStats1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
3df70179125975f0be3b0b5b0c1db08a
  $tc'RunStats2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'RunStats3) -}
3740e80bcb3d4174342567289c479f14
  $tc'RunStats3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'RunStats"#) -}
509142b50c3c0a421376bb4eb4ff1267
  $tc'SAMFlag :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10756317502576089431##
                   14511670319128600148##
                   Lib.$trModule
                   Lib.$tc'SAMFlag2
                   0#
                   Lib.$tc'SAMFlag1) -}
14c004d8563064fabc056b247e265a27
  $tc'SAMFlag1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
8a916057b198c997171eb87b96b1a96a
  $tc'SAMFlag2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'SAMFlag3) -}
6bea5f07660f833ec74ff75935c25060
  $tc'SAMFlag3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'SAMFlag"#) -}
a5c14874308954bc9bd423b69ac43e07
  $tc'UCSC :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12765252321434714814##
                   5440781799253355398##
                   Lib.$trModule
                   Lib.$tc'UCSC1
                   0#
                   Lib.$tc'GRC1) -}
59ae2099ea4c26a0d9ae7f7cbea0d10e
  $tc'UCSC1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'UCSC2) -}
e07416a95767f009a44dcfee361e8c8c
  $tc'UCSC2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'UCSC"#) -}
013d098df161d26273664a5c83a28cdd
  $tcAlignedRead :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5799818894873289350##
                   4299580664835605097##
                   Lib.$trModule
                   Lib.$tcAlignedRead1
                   0#
                   GHC.Types.krep$*) -}
046f556508bc3c1ea7c15d60f4599689
  $tcAlignedRead1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tcAlignedRead2) -}
294308cf18dc371397bf76b5ad8ca047
  $tcAlignedRead2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("AlignedRead"#) -}
2f015d6820fcf3859b3a4dfae3065c42
  $tcBEDPE :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2617565090027336431##
                   7328225864764535980##
                   Lib.$trModule
                   Lib.$tcBEDPE1
                   0#
                   GHC.Types.krep$*) -}
c734a7f89b412ce69ac7c887945aff31
  $tcBEDPE1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tcBEDPE2) -}
e69db8e5b9f6d0aafbddb960d7340720
  $tcBEDPE2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("BEDPE"#) -}
66e57f051ecce1f6295b975993fa1e4f
  $tcBedRecord :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4359004564050459538##
                   9628331077453402935##
                   Lib.$trModule
                   Lib.$tcBedRecord1
                   0#
                   GHC.Types.krep$*) -}
1006379d83e823ec534c115bba852b80
  $tcBedRecord1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tcBedRecord2) -}
b5482350340511f969df6ab3a4149505
  $tcBedRecord2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("BedRecord"#) -}
8f597035c85fe96df4008bd3f9c7c582
  $tcChromNameFormat :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2837204562160727607##
                   14558771045481942517##
                   Lib.$trModule
                   Lib.$tcChromNameFormat1
                   0#
                   GHC.Types.krep$*) -}
4b8b3790a44f5c77f058be2d95431c62
  $tcChromNameFormat1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tcChromNameFormat2) -}
d40d1fc1a70740fb7cf393da243656c1
  $tcChromNameFormat2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ChromNameFormat"#) -}
95c1533cb1d4d19ed0702d8d66b9f2d8
  $tcCigarMod :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7103274534608889101##
                   13487365443325624758##
                   Lib.$trModule
                   Lib.$tcCigarMod1
                   0#
                   GHC.Types.krep$*) -}
35daffc6d70da11af483a7ad5bca6cab
  $tcCigarMod1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tcCigarMod2) -}
dcbced4d35b99dbb2b8739caaac143b1
  $tcCigarMod2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("CigarMod"#) -}
864c6050e7d6ef128908da1b96506f5a
  $tcMasterRecord :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16174879771851446244##
                   17340493931296081362##
                   Lib.$trModule
                   Lib.$tcMasterRecord1
                   0#
                   GHC.Types.krep$*) -}
92f8d66c1f860a7d77a81189438a494e
  $tcMasterRecord1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tcMasterRecord2) -}
221fc48320a5a28c8ea5bc5965b92184
  $tcMasterRecord2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("MasterRecord"#) -}
d844dc7e558ba6659856acbb59b7912b
  $tcMidFamily :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13503970926737855307##
                   6090120745566809290##
                   Lib.$trModule
                   Lib.$tcMidFamily1
                   0#
                   GHC.Types.krep$*) -}
eb1ece52bb3d2cacbce0c066c0b6ef54
  $tcMidFamily1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tcMidFamily2) -}
6231d17277187bdf8847dc207df18033
  $tcMidFamily2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("MidFamily"#) -}
c2f252440e3d82c0eedaea356f0986e6
  $tcOpts :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13402054321572254732##
                   16643706062122140763##
                   Lib.$trModule
                   Lib.$tcOpts1
                   0#
                   GHC.Types.krep$*) -}
3ac23f77a815fa271c615859ae006dc2
  $tcOpts1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tcOpts2) -}
f7975ac5ba225c2397c08a62e8e617e9
  $tcOpts2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Opts"#) -}
687d46ea60a9f5aaeabb95b7f66d9134
  $tcPairedAln :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15852425612229505796##
                   5296021265580827734##
                   Lib.$trModule
                   Lib.$tcPairedAln1
                   0#
                   GHC.Types.krep$*) -}
2347cb29ef47a56ca8f58e47c2d895f1
  $tcPairedAln1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tcPairedAln2) -}
64c520c8d2e08bd2eb423f22736c36b3
  $tcPairedAln2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("PairedAln"#) -}
734360d15529568e08fd2bb069a341bb
  $tcRunStats :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7731801904398524924##
                   3725362678579110935##
                   Lib.$trModule
                   Lib.$tcRunStats1
                   0#
                   GHC.Types.krep$*) -}
8bb58f5ef0202403a6af8c39340b09aa
  $tcRunStats1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tcRunStats2) -}
7f5e1a5d1265deb9da2c933e1e379b72
  $tcRunStats2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("RunStats"#) -}
37fb631434baa6a385d822d3eb6dced1
  $tcSAMFlag :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15318949257120244592##
                   10990880671457397416##
                   Lib.$trModule
                   Lib.$tcSAMFlag1
                   0#
                   GHC.Types.krep$*) -}
d3d6f7d16cc112bd63ea03809124ef9d
  $tcSAMFlag1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tcSAMFlag2) -}
d861c1081e589632258868af561b2634
  $tcSAMFlag2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("SAMFlag"#) -}
0ee8c26c79b50b9a25a4e742b4f7999d
  $tcUChr :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11732463412278617721##
                   8825377816864577262##
                   Lib.$trModule
                   Lib.$tcUChr1
                   0#
                   GHC.Types.krep$*) -}
1f5af49b169dbd75ebdc3682ba3b5a24
  $tcUChr1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tcUChr2) -}
ed6e562cb66c6124f6c217193d1395c6
  $tcUChr2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("UChr"#) -}
a120f4cda65cf830bd82a5684484d382
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Lib.$trModule3 Lib.$trModule1) -}
dd23ca5766a93c5d2a8ed99b8ec44fda
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$trModule2) -}
9fdb8fdbc382bfe3955bcbb9c46c894b
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Lib"#) -}
a514d1e3704194fd719dfd22a3f8e8bb
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$trModule4) -}
afb5f5aaa4970ba2a49e4aad8cb47726
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("primerclip-0.3.4.0-1b5t2mlHPcvBmtAJ86MXDg"#) -}
553b4705f80aecb5aa5f9d995e5db8b4
  $w$c< ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs, Strictness: <S,U><L,1*U><S,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: Lib.UChr)
                   (ww3 :: GHC.Integer.Type.Integer) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww1 ww3 of wild2 {
                             DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True } }
                   GHC.Types.True -> GHC.Types.True } } }) -}
dbe83b7662f2beecbbe3234836546822
  $w$c<1 ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs, Strictness: <S,U><L,1*U><S,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: Lib.UChr)
                   (ww3 :: GHC.Integer.Type.Integer) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww1 ww3 of wild2 {
                             DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True } }
                   GHC.Types.True -> GHC.Types.True } } }) -}
c109ed81dec592595852bf12c5e61d21
  $w$c<= ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs, Strictness: <S,U><L,1*U><S,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: Lib.UChr)
                   (ww3 :: GHC.Integer.Type.Integer) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww1 ww3 of wild2 {
                             DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False } }
                   GHC.Types.True -> GHC.Types.True } } }) -}
e85b5c30accb1b7119fe8a5e520d58cd
  $w$c<=1 ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs, Strictness: <S,U><L,1*U><S,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: Lib.UChr)
                   (ww3 :: GHC.Integer.Type.Integer) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww1 ww3 of wild2 {
                             DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False } }
                   GHC.Types.True -> GHC.Types.True } } }) -}
f326b6d6f48369722f3d718ba9a9a75d
  $w$c== ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> GHC.Types.Bool
  {- Arity: 8, HasNoCafRefs,
     Strictness: <S,U><L,1*U><L,1*U><L,1*U(U,U,U,U)><S,U><L,1*U><L,1*U><L,1*U(U,U,U,U)>,
     Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: GHC.Integer.Type.Integer)
                   (ww3 :: Data.ByteString.Internal.ByteString)
                   (ww4 :: Lib.UChr)
                   (ww5 :: GHC.Integer.Type.Integer)
                   (ww6 :: GHC.Integer.Type.Integer)
                   (ww7 :: Data.ByteString.Internal.ByteString) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww4 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==# a# b#) of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case GHC.Integer.Type.eqInteger# ww1 ww5 of wild1 { DEFAULT ->
                      case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild1 of wild2 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case GHC.Integer.Type.eqInteger# ww2 ww6 of wild3 { DEFAULT ->
                           case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild3 of wild4 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> Data.ByteString.Internal.eq ww3 ww7 } } } } } } }) -}
326b2e6660606f53bcfd4abf3ef34731
  $w$c==1 ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> GHC.Types.Bool
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> GHC.Types.Bool
    -> GHC.Types.Bool
  {- Arity: 10, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U(U,U,U,U)><L,1*U(U,U,U,U)><L,1*U><S,1*U><L,1*U><L,1*U(U,U,U,U)><L,1*U(U,U,U,U)><L,1*U>,
     Inline: [0] -}
1c0e042eae4ad639578c5f3ba8ecf888
  $w$c==2 ::
    GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
  {- Arity: 8, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><L,1*U><S,1*U><L,1*U><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Types.Bool)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Base.String)
                   (ww3 :: GHC.Base.String)
                   (ww4 :: GHC.Types.Bool)
                   (ww5 :: GHC.Base.String)
                   (ww6 :: GHC.Base.String)
                   (ww7 :: GHC.Base.String) ->
                 let {
                   $j :: GHC.Types.Bool <join 0>
                   = case GHC.Base.eqString ww1 ww5 of wild {
                       GHC.Types.False -> GHC.Types.False
                       GHC.Types.True
                       -> case GHC.Base.eqString ww2 ww6 of wild1 {
                            GHC.Types.False -> GHC.Types.False
                            GHC.Types.True -> GHC.Base.eqString ww3 ww7 } }
                 } in
                 case ww of wild {
                   GHC.Types.False
                   -> case ww4 of wild1 {
                        GHC.Types.False -> $j GHC.Types.True -> GHC.Types.False }
                   GHC.Types.True
                   -> case ww4 of wild1 {
                        GHC.Types.False -> GHC.Types.False GHC.Types.True -> $j } }) -}
c5d66d837dc08f1bdbc87613e0ac67fc
  $w$c> ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs, Strictness: <S,U><L,1*U><S,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: Lib.UChr)
                   (ww3 :: GHC.Integer.Type.Integer) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww1 ww3 of wild2 {
                             DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True } }
                   GHC.Types.True -> GHC.Types.False } } }) -}
e378027dce08d0b905df74645f1b9238
  $w$c>1 ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs, Strictness: <S,U><L,1*U><S,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: Lib.UChr)
                   (ww3 :: GHC.Integer.Type.Integer) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww1 ww3 of wild2 {
                             DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True } }
                   GHC.Types.True -> GHC.Types.False } } }) -}
4efe06c074deea3d2582cc486f4982ea
  $w$c>= ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs, Strictness: <S,U><L,1*U><S,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: Lib.UChr)
                   (ww3 :: GHC.Integer.Type.Integer) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww1 ww3 of wild2 {
                             DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False } }
                   GHC.Types.True -> GHC.Types.False } } }) -}
8a6537cb7f9656b3d22e9d502f01b92f
  $w$c>=1 ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs, Strictness: <S,U><L,1*U><S,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: Lib.UChr)
                   (ww3 :: GHC.Integer.Type.Integer) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww1 ww3 of wild2 {
                             DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False } }
                   GHC.Types.True -> GHC.Types.False } } }) -}
a87dc60816db9dfbe6d4f02d45d14ca7
  $w$ccompare ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Ordering
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S,U><L,1*U><L,1*U><S,U><L,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: GHC.Integer.Type.Integer)
                   (ww3 :: Lib.UChr)
                   (ww4 :: GHC.Integer.Type.Integer)
                   (ww5 :: GHC.Integer.Type.Integer) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww3 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.GT
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww1 ww4 of wild2 {
                             GHC.Types.LT -> GHC.Types.LT
                             GHC.Types.EQ -> GHC.Integer.Type.compareInteger ww2 ww5
                             GHC.Types.GT -> GHC.Types.GT } }
                   GHC.Types.True -> GHC.Types.LT } } }) -}
304d1558f1233b6da0584bdc192a8d2c
  $w$ccompare1 ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Ordering
  {- Arity: 4, HasNoCafRefs, Strictness: <S,U><L,1*U><S,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: Lib.UChr)
                   (ww3 :: GHC.Integer.Type.Integer) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.GT
                        GHC.Types.True -> GHC.Integer.Type.compareInteger ww1 ww3 }
                   GHC.Types.True -> GHC.Types.LT } } }) -}
c28d94cd376fee6ab8af3dfd70905a0d
  $w$ccompare2 ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Ordering
  {- Arity: 4, HasNoCafRefs, Strictness: <S,U><L,1*U><S,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: Lib.UChr)
                   (ww3 :: GHC.Integer.Type.Integer) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww2 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.GT
                        GHC.Types.True -> GHC.Integer.Type.compareInteger ww1 ww3 }
                   GHC.Types.True -> GHC.Types.LT } } }) -}
163e84ce50fd1e6e53b06e03bcf98ae5
  $w$ccompare3 ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Ordering
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S,U><L,1*U><L,1*U><S,U><L,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: GHC.Integer.Type.Integer)
                   (ww3 :: Lib.UChr)
                   (ww4 :: GHC.Integer.Type.Integer)
                   (ww5 :: GHC.Integer.Type.Integer) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww3 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.GT
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww1 ww4 of wild2 {
                             GHC.Types.LT -> GHC.Types.LT
                             GHC.Types.EQ -> GHC.Integer.Type.compareInteger ww2 ww5
                             GHC.Types.GT -> GHC.Types.GT } }
                   GHC.Types.True -> GHC.Types.LT } } }) -}
1242413e0329602650ab817d220514df
  $w$ccompare4 ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Ordering
  {- Arity: 8, HasNoCafRefs,
     Strictness: <S,U><L,1*U><L,1*U><L,1*U><S,U><L,1*U><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: GHC.Integer.Type.Integer)
                   (ww3 :: GHC.Integer.Type.Integer)
                   (ww4 :: Lib.UChr)
                   (ww5 :: GHC.Integer.Type.Integer)
                   (ww6 :: GHC.Integer.Type.Integer)
                   (ww7 :: GHC.Integer.Type.Integer) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww4 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.GT
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww1 ww5 of wild2 {
                             GHC.Types.LT -> GHC.Types.LT
                             GHC.Types.EQ
                             -> case GHC.Integer.Type.compareInteger ww2 ww6 of wild3 {
                                  GHC.Types.LT -> GHC.Types.LT
                                  GHC.Types.EQ -> GHC.Integer.Type.compareInteger ww3 ww7
                                  GHC.Types.GT -> GHC.Types.GT }
                             GHC.Types.GT -> GHC.Types.GT } }
                   GHC.Types.True -> GHC.Types.LT } } }) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  $w$ccompare5 ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Lib.AlignedRead
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Lib.AlignedRead
    -> GHC.Types.Ordering
  {- Arity: 8, HasNoCafRefs,
     Strictness: <S,U><L,1*U><L,1*U><L,1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,U><L,1*U><L,1*U><L,1*U(A,A,U,1*U,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: GHC.Integer.Type.Integer)
                   (ww3 :: Lib.AlignedRead)
                   (ww4 :: Lib.UChr)
                   (ww5 :: GHC.Integer.Type.Integer)
                   (ww6 :: GHC.Integer.Type.Integer)
                   (ww7 :: Lib.AlignedRead) ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr ww4 of b# { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a# b#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a# b#) of wild1 {
                        GHC.Types.False -> GHC.Types.GT
                        GHC.Types.True
                        -> case GHC.Integer.Type.compareInteger ww1 ww5 of wild2 {
                             GHC.Types.LT -> GHC.Types.LT
                             GHC.Types.EQ
                             -> case GHC.Integer.Type.compareInteger ww2 ww6 of wild3 {
                                  GHC.Types.LT -> GHC.Types.LT
                                  GHC.Types.EQ -> Lib.$fOrdAlignedRead_$ccompare ww3 ww7
                                  GHC.Types.GT -> GHC.Types.GT }
                             GHC.Types.GT -> GHC.Types.GT } }
                   GHC.Types.True -> GHC.Types.LT } } }) -}
2e345d36c55fb13cffd420fc95f5bf30
  $w$creadPrec ::
    GHC.Prim.Int#
    -> forall b.
       (Lib.RunStats -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S,U><L,C(U)>, Inline: [0] -}
956ad3675be4c0d8e5a7d0afc72ca82b
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> GHC.Show.ShowS
  {- Arity: 8,
     Strictness: <S,U><L,1*U><L,U><L,U><L,1*U><L,U><L,U><L,1*U(U,U,U,U)>,
     Inline: [0] -}
8980a13976dfc0f4ecc8557b3aaae083
  $w$cshowsPrec1 ::
    GHC.Prim.Int#
    -> Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> GHC.Show.ShowS
  {- Arity: 5, Strictness: <S,U><L,1*U><L,U><L,U><L,1*U(U,U,U,U)>,
     Inline: [0] -}
1d98365397487588aec8203ee3892e70
  $w$cshowsPrec2 ::
    GHC.Prim.Int#
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> GHC.Types.Bool
    -> GHC.Show.ShowS
  {- Arity: 6,
     Strictness: <S,U><L,U><L,U><L,1*U(U,U,U,U)><L,1*U(U,U,U,U)><L,U>,
     Inline: [0] -}
5522412c7ba3b76e3b13decc39159366
  $w$cshowsPrec3 ::
    GHC.Prim.Int#
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 6, Strictness: <S,U><L,1*U><L,1*U><L,1*U><L,1*U><L,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Types.Bool)
                   (ww2 :: GHC.Base.String)
                   (ww3 :: GHC.Base.String)
                   (ww4 :: GHC.Base.String)
                   (w :: GHC.Base.String) ->
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.CString.unpackAppendCString#
                       Lib.$fShowOpts7
                       (GHC.CString.unpackAppendCString#
                          Lib.$fShowOpts6
                          (let {
                             eta :: GHC.Base.String
                             = GHC.Base.++
                                 @ GHC.Types.Char
                                 GHC.Show.showCommaSpace1
                                 (GHC.CString.unpackAppendCString#
                                    Lib.$fShowOpts5
                                    (GHC.Types.:
                                       @ GHC.Types.Char
                                       GHC.Show.$fShow(,)3
                                       (GHC.Show.showLitString
                                          ww2
                                          (GHC.Types.:
                                             @ GHC.Types.Char
                                             GHC.Show.$fShow(,)3
                                             (GHC.Base.++
                                                @ GHC.Types.Char
                                                GHC.Show.showCommaSpace1
                                                (GHC.CString.unpackAppendCString#
                                                   Lib.$fShowOpts4
                                                   (GHC.Types.:
                                                      @ GHC.Types.Char
                                                      GHC.Show.$fShow(,)3
                                                      (GHC.Show.showLitString
                                                         ww3
                                                         (GHC.Types.:
                                                            @ GHC.Types.Char
                                                            GHC.Show.$fShow(,)3
                                                            (GHC.Base.++
                                                               @ GHC.Types.Char
                                                               GHC.Show.showCommaSpace1
                                                               (GHC.CString.unpackAppendCString#
                                                                  Lib.$fShowOpts3
                                                                  (GHC.Types.:
                                                                     @ GHC.Types.Char
                                                                     GHC.Show.$fShow(,)3
                                                                     (GHC.Show.showLitString
                                                                        ww4
                                                                        (GHC.Types.:
                                                                           @ GHC.Types.Char
                                                                           GHC.Show.$fShow(,)3
                                                                           (GHC.CString.unpackAppendCString#
                                                                              Lib.$fShowOpts2
                                                                              x)))))))))))))))
                           } in
                           case ww1 of wild {
                             GHC.Types.False
                             -> GHC.Base.++ @ GHC.Types.Char GHC.Show.$fShowBool3 eta
                             GHC.Types.True
                             -> GHC.Base.++ @ GHC.Types.Char GHC.Show.$fShowBool1 eta }))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False -> p w
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 w)) }) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  $w$cshowsPrec4 ::
    GHC.Prim.Int#
    -> Lib.AlignedRead
    -> Lib.AlignedRead
    -> [Lib.AlignedRead]
    -> [Lib.AlignedRead]
    -> GHC.Show.ShowS
  {- Arity: 5,
     Strictness: <S,U><L,1*U(1*U(U,U,U,U),U(U),1*U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),U,U,1*U(U,U,U,U),U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(1*U,U,U,1*U(U,U,U,U)),U)><L,1*U(1*U(U,U,U,U),U(U),1*U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),U,U,1*U(U,U,U,U),U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,1*U(U,U,U,U),1*U(U,U,U,U),1*U(1*U,U,U,1*U(U,U,U,U)),U)><L,U><L,U>,
     Inline: [0] -}
47ab91ba2cf6fcee623790878b650884
  $w$cshowsPrec5 ::
    GHC.Prim.Int#
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Show.ShowS
  {- Arity: 7,
     Strictness: <S,U><L,U><L,U><L,U><L,U><L,1*U(U)><L,1*U(U)>,
     Inline: [0] -}
abb052827d9625d097890f754ea8e0e8
  $w$ctoEnum :: GHC.Prim.Int# -> Lib.ChromNameFormat
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 0#) of wild {
                   GHC.Types.False -> Lib.$wlvl ww
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# ww 1#) of wild1 {
                        GHC.Types.False -> Lib.$wlvl ww
                        GHC.Types.True
                        -> GHC.Prim.tagToEnum# @ Lib.ChromNameFormat ww } }) -}
738096376958aedf685c1b59f577962f
  $w$ctoEnum1 :: GHC.Prim.Int# -> Lib.UChr
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 0#) of wild {
                   GHC.Types.False -> Lib.$wlvl1 ww
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# ww 110#) of wild1 {
                        GHC.Types.False -> Lib.$wlvl1 ww
                        GHC.Types.True -> GHC.Prim.tagToEnum# @ Lib.UChr ww } }) -}
d433563479cd69b224f26afd2aca0332
  $w$sgo8 ::
    GHC.Prim.Int#
    -> a1
    -> Data.Map.Internal.Map GHC.Types.Int a1
    -> Data.Map.Internal.Map GHC.Types.Int a1
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
1fb9d4fb1aeb8eb1e310fc28e0f5726f
  $walignmentsetparser ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [Lib.AlignedRead]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
084d371d4e65570028a96e0cd6c297fd
  $walnparser ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.AlignedRead
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
5084eb4e65848034cb498193ab6f097c
  $walnparserEOL ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.AlignedRead
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
051d2622cee9598c47ee2097cef453c7
  $walnsToPairedAln ::
    [Lib.AlignedRead]
    -> (# Lib.AlignedRead, Lib.AlignedRead, [Lib.AlignedRead],
          [Lib.AlignedRead] #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ (w :: [Lib.AlignedRead]) ->
                 case w of wild {
                   []
                   -> (# Lib.defaultAlignment, Lib.defaultAlignment,
                         GHC.Types.[] @ Lib.AlignedRead, GHC.Types.[] @ Lib.AlignedRead #)
                   : ipv ipv1
                   -> let {
                        ds6 :: ([Lib.AlignedRead], [Lib.AlignedRead])
                        = case Lib.$wgo2 wild of ww { (#,#) ww1 ww2 -> (ww1, ww2) }
                      } in
                      let {
                        ds7 :: ([Lib.AlignedRead], [Lib.AlignedRead])
                        = case ds6 of wild1 { (,) r1s r2s ->
                          case Lib.$wgo1 r1s of ww { (#,#) ww1 ww2 -> (ww1, ww2) } }
                      } in
                      let {
                        ds8 :: ([Lib.AlignedRead], [Lib.AlignedRead])
                        = case ds6 of wild1 { (,) r1s r2s ->
                          case Lib.$wgo r2s of ww { (#,#) ww1 ww2 -> (ww1, ww2) } }
                      } in
                      (# case ds7 of wild1 { (,) r1pl r1secs1 ->
                         case r1pl of wild2 {
                           [] -> Lib.alnsToPairedAln1 : ds9 ds10 -> ds9 } },
                         case ds8 of wild1 { (,) r2pl r2secs1 ->
                         case r2pl of wild2 {
                           [] -> Lib.alnsToPairedAln1 : ds9 ds10 -> ds9 } },
                         case ds7 of wild1 { (,) r1pl r1secs1 -> r1secs1 },
                         case ds8 of wild1 { (,) r2pl r2secs1 -> r2secs1 } #) }) -}
be9a24cc7b055edf9c814d8dda5e434a
  $wanyPrimerIntAln ::
    GHC.Types.Bool
    -> Lib.AlignedRead
    -> [Lib.AlignedRead]
    -> [Lib.AlignedRead]
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A)><L,1*U><L,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Types.Bool)
                   (ww1 :: Lib.AlignedRead)
                   (ww2 :: [Lib.AlignedRead])
                   (ww3 :: [Lib.AlignedRead]) ->
                 case ww of wild {
                   GHC.Types.False
                   -> case ww1 of wild1 { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                      case ds27 of wild2 {
                        GHC.Types.False
                        -> let {
                             $j :: GHC.Types.Bool <join 0> = Lib.anyPrimerIntAln_go ww3
                           } in
                           letrec {
                             go16 :: [Lib.AlignedRead] -> GHC.Types.Bool
                               <join 1> {- Arity: 1, Strictness: <S,1*U> -}
                             = \ (ds37 :: [Lib.AlignedRead]) ->
                               case ds37 of wild3 {
                                 [] -> $j
                                 : y ys
                                 -> case y of wild4 { Lib.AlignedRead ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ->
                                    case ds59 of wild5 {
                                      GHC.Types.False -> go16 ys
                                      GHC.Types.True -> GHC.Types.True } } }
                           } in
                           go16 ww2
                        GHC.Types.True -> GHC.Types.True } }
                   GHC.Types.True -> GHC.Types.True }) -}
6ec15f176e320f1e27ec36599c80c471
  $wbedPEparser ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.BEDPE
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
7244f35c360e2c62e69fd33d506db18f
  $wbedrecparser ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.BedRecord
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
e5379dc14c7876badfbc18a53fdfe246
  $wboolZeroLengthCigar ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Types.Bool
  {- Arity: 4, Strictness: <S,U><L,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 Lib.boolZeroLengthCigar_go
                   (Data.ByteString.Internal.$wunpackAppendCharsLazy
                      ww
                      ww1
                      ww2
                      ww3
                      (GHC.Types.[] @ GHC.Types.Char))) -}
34d882e5681f77f24d48ed93918f3c5d
  $wcheckChromNameMatchStatus ::
    Lib.Header
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Array# Lib.BedRecord
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 5, Strictness: <L,U><L,U><S,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (w :: Lib.Header)
                   (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Array# Lib.BedRecord)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 letrec {
                   $wgo40 :: GHC.Prim.Int# -> [Lib.UChr]
                     {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                   = \ (ww3 :: GHC.Prim.Int#) ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.>=# ww3 ww1) of wild {
                       GHC.Types.False
                       -> case GHC.Prim.indexArray#
                                 @ Lib.BedRecord
                                 ww2
                                 (GHC.Prim.+# ww ww3) of ds6 { Unit# ipv ->
                          GHC.Types.:
                            @ Lib.UChr
                            (case ipv of wild1 { Lib.BedRecord ds7 ds8 ds9 ds10 -> ds7 })
                            ($wgo40 (GHC.Prim.+# ww3 1#)) }
                       GHC.Types.True -> GHC.Types.[] @ Lib.UChr }
                 } in
                 case Lib.$wgo4
                        (Data.OldList.intersectBy
                           @ Lib.UChr
                           Lib.$fEqUChr_$c==
                           (Data.Set.Internal.$fDataSet_go
                              @ Lib.UChr
                              (GHC.Types.[] @ Lib.UChr)
                              (Lib.$sfromList4 ($wgo40 0#)))
                           (letrec {
                              go16 :: GHC.Prim.Int# -> [Lib.UChr]
                                {- Arity: 1, Strictness: <S,U> -}
                              = \ (x :: GHC.Prim.Int#) ->
                                case GHC.List.$w!!
                                       @ Data.ByteString.Internal.ByteString
                                       w
                                       x of wild { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                                case Lib.$whdrchromp
                                       @ Lib.UChr
                                       dt
                                       dt1
                                       dt2
                                       dt3
                                       dt3
                                       0#
                                       0#
                                       Data.Attoparsec.Internal.Types.Complete
                                       (Data.Attoparsec.ByteString.Internal.failK @ Lib.UChr)
                                         `cast`
                                       (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                                        ->_R <Data.Attoparsec.Internal.Types.Pos
                                              -> Data.Attoparsec.Internal.Types.More
                                              -> [GHC.Base.String]
                                              -> GHC.Base.String
                                              -> Data.Attoparsec.Internal.Types.IResult
                                                   Data.ByteString.Internal.ByteString Lib.UChr>_R)
                                       (Data.Attoparsec.ByteString.Internal.successK @ Lib.UChr)
                                         `cast`
                                       (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                                        ->_R <Data.Attoparsec.Internal.Types.Pos
                                              -> Data.Attoparsec.Internal.Types.More
                                              -> Lib.UChr
                                              -> Data.Attoparsec.Internal.Types.IResult
                                                   Data.ByteString.Internal.ByteString
                                                   Lib.UChr>_R) of wild1 {
                                  Data.Attoparsec.Internal.Types.Fail ds6 ds7 err
                                  -> case ds7 of wild2 { DEFAULT ->
                                     case x of wild3 {
                                       DEFAULT -> go16 (GHC.Prim.+# wild3 1#)
                                       25# -> GHC.Types.[] @ Lib.UChr } }
                                  Data.Attoparsec.Internal.Types.Partial ipv
                                  -> case Lib.checkChromNameMatchStatus5 ret_ty [Lib.UChr] of {}
                                  Data.Attoparsec.Internal.Types.Done ds6 a1
                                  -> GHC.Types.:
                                       @ Lib.UChr
                                       a1
                                       (case x of wild2 {
                                          DEFAULT -> go16 (GHC.Prim.+# wild2 1#)
                                          25# -> GHC.Types.[] @ Lib.UChr }) } }
                            } in
                            Data.Set.Internal.$fDataSet_go
                              @ Lib.UChr
                              (GHC.Types.[] @ Lib.UChr)
                              (Lib.$sfromList4 (go16 1#))))
                        0# of ww3 { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww3 1#) of wild {
                   GHC.Types.False
                   -> case Lib.checkChromNameMatchStatus4
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                      of {}
                   GHC.Types.True
                   -> GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Lib.checkChromNameMatchStatus2
                        GHC.Types.True
                        w1 } }) -}
d93e0d1f2b9081896261f2fe687ab19f
  $wcheckcigseqlen ::
    Data.ByteString.Internal.ByteString
    -> GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.ByteString.Internal.ByteString
    -> GHC.Types.Bool
  {- Arity: 6,
     Strictness: <L,1*U(U,U,U,U)><L,U><L,U><L,U><S,U><L,1*U(U,U,U,U)>,
     Inline: [0] -}
291e8978da0c30ccff1d6c9c79935881
  $wcheckcigseqlen2 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> GHC.Types.Bool
  {- Arity: 6,
     Strictness: <L,U><L,U><L,U><S,U><L,1*U(U,U,U,U)><L,1*U(U,U,U,U)>,
     Inline: [0] -}
e77ddb23607c648a63c1d556fb816257
  $wchecknonzeroCigMatch ::
    Data.ByteString.Internal.ByteString
    -> GHC.Types.Bool -> GHC.Types.Bool -> GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,1*U(U,U,U,1*U)><L,1*U><S,1*U>, Inline: [0],
     Unfolding: (\ (ww :: Data.ByteString.Internal.ByteString)
                   (ww1 :: GHC.Types.Bool)
                   (ww2 :: GHC.Types.Bool) ->
                 case ww2 of wild {
                   GHC.Types.False
                   -> case ww1 of wild1 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True
                        -> case ww of wild2 { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                           case dt3 of ds6 {
                             DEFAULT
                             -> case Lib.$wgo5
                                       (GHC.Prim.plusAddr# dt dt2)
                                       (GHC.Prim.plusAddr# dt (GHC.Prim.+# dt2 ds6))
                                       GHC.Prim.realWorld# of ds7 { (#,#) ipv ipv1 ->
                                case GHC.Prim.touch#
                                       @ 'GHC.Types.LiftedRep
                                       @ GHC.ForeignPtr.ForeignPtrContents
                                       dt1
                                       ipv of s' { DEFAULT ->
                                ipv1 } }
                             0# -> GHC.Types.False } } }
                   GHC.Types.True -> GHC.Types.True }) -}
6fac928982e6e17bf8f21e5565d204af
  $wcigarP ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                            r) ->
                 Lib.$wp
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w
                   w1
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (a1 :: (GHC.Integer.Type.Integer,
                              Data.ByteString.Internal.ByteString))[OneShot] ->
                    case t'
                           `cast`
                         (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww7 { Data.Attoparsec.ByteString.Buffer.Buf ww8 ww9 ww10 ww11 ww12 ww13 ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww14 { GHC.Types.I# ww15 ->
                    Lib.$wmany_v
                      @ r
                      ww8
                      ww9
                      ww10
                      ww11
                      ww12
                      ww13
                      ww15
                      more'
                      (\ (t'1 :: Data.Attoparsec.Internal.Types.State
                                   Data.ByteString.Internal.ByteString)
                         (pos'1 :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                         (more'1 :: Data.Attoparsec.Internal.Types.More)[OneShot]
                         (a3 :: [(GHC.Integer.Type.Integer,
                                  Data.ByteString.Internal.ByteString)])[OneShot] ->
                       case pos'1
                              `cast`
                            (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                       w2
                         t'1
                         nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                         more'1
                         (GHC.Types.:
                            @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                            a1
                            a3) }) } })) -}
4eae23ed38307aca897fb51a5758bc57
  $wcigseqlenHdrPassTest ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> GHC.Types.Bool
  {- Arity: 6,
     Strictness: <L,U><L,U><L,U><S,U><L,1*U(U,U,U,U)><L,1*U(U,U,U,U)>,
     Inline: [0] -}
54d684cf9a6e7823f47a6017ca57f745
  $wclip ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Types.Bool
    -> (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer,
          Data.ByteString.Internal.ByteString,
          Data.ByteString.Internal.ByteString, GHC.Types.Bool #)
  {- Arity: 8, Strictness: <L,U><L,U><L,U><S,U><L,U><S,U><S,U><L,U>,
     Inline: [0] -}
0cd7fca02a80f3cb9333acbc17b3bab2
  $wcontractcigar ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.ByteString.Internal.ByteString
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.addtrimtag5 of wild1 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                 let {
                   $j :: Data.ByteString.Internal.ByteString <join 0>
                   = Data.ByteString.concat
                       (GHC.Base.map
                          @ Data.ByteString.Internal.ByteString
                          @ Data.ByteString.Internal.ByteString
                          Lib.contractcigar1
                          (Data.ByteString.$wgroup ww ww1 ww2 ww3))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim./=# ww3 dt7) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqAddr# ww dt4) of wild3 {
                        GHC.Types.False
                        -> case Data.ByteString.Internal.$wcompareBytes
                                  ww
                                  ww1
                                  ww2
                                  ww3
                                  dt4
                                  dt5
                                  dt6
                                  dt7 of wild4 {
                             DEFAULT -> $j GHC.Types.EQ -> wild1 }
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# ww2 dt6) of wild4 {
                             GHC.Types.False
                             -> case Data.ByteString.Internal.$wcompareBytes
                                       ww
                                       ww1
                                       ww2
                                       ww3
                                       dt4
                                       dt5
                                       dt6
                                       dt7 of wild5 {
                                  DEFAULT -> $j GHC.Types.EQ -> wild1 }
                             GHC.Types.True -> wild1 } }
                   GHC.Types.True -> $j } }) -}
b5088d605c04e5a51ae7702775c6a59d
  $wcreateprimerbedmaps ::
    GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Data.Map.Internal.Map
             Lib.UChr (Data.IntMap.Internal.IntMap Lib.BedRecord),
           Data.Map.Internal.Map
             Lib.UChr (Data.IntMap.Internal.IntMap Lib.BedRecord)) #)
  {- Arity: 3, Strictness: <S,1*U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Types.Bool)
                   (ww1 :: GHC.Base.String)
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case ww of wild {
                   GHC.Types.False
                   -> case Lib.createprimerbedmaps4 ww1 w of ds6 { (#,#) ipv ipv1 ->
                      (# ipv,
                         (case Lib.masterToFPrimerBED
                                 ipv1 of ww2 { Data.Vector.Vector ww3 ww4 ww5 ->
                          Lib.$wmakechrbedmap ww3 ww4 ww5 },
                          case Lib.masterToRPrimerBED
                                 ipv1 of ww2 { Data.Vector.Vector ww3 ww4 ww5 ->
                          Lib.$wmakechrbedmap ww3 ww4 ww5 }) #) }
                   GHC.Types.True
                   -> case Lib.createprimerbedmaps2 ww1 w of ds6 { (#,#) ipv ipv1 ->
                      (# ipv,
                         (case GHC.Magic.runRW#
                                 @ ('GHC.Types.TupleRep
                                      '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                                 @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                                      Data.Vector.Vector Lib.BedRecord #)
                                 (\ (s114 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                  case GHC.Prim.newArray#
                                         @ Lib.BedRecord
                                         @ (Control.Monad.Primitive.PrimState
                                              (GHC.ST.ST GHC.Prim.RealWorld))
                                         0#
                                         (Data.Vector.Mutable.uninitialised @ Lib.BedRecord)
                                         s114
                                           `cast`
                                         (Nth:2
                                              (Nth:2
                                                   (Trans
                                                        (<GHC.ST.STRep
                                                            GHC.Prim.RealWorld
                                                            (Data.Primitive.Array.MutableArray
                                                               (Control.Monad.Primitive.PrimState
                                                                  (GHC.ST.ST GHC.Prim.RealWorld))
                                                               Lib.BedRecord)>_R
                                                         ->_R Sym (GHC.ST.N:ST[0]
                                                                       <GHC.Prim.RealWorld>_N
                                                                       <Data.Primitive.Array.MutableArray
                                                                          (Control.Monad.Primitive.PrimState
                                                                             (GHC.ST.ST
                                                                                GHC.Prim.RealWorld))
                                                                          Lib.BedRecord>_R))
                                                        (((GHC.Prim.State#
                                                             (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                       <GHC.Prim.RealWorld>_N)))_R
                                                          ->_R ((#,#)
                                                                  <'GHC.Types.TupleRep '[]>_R
                                                                  <'GHC.Types.LiftedRep>_R
                                                                  (GHC.Prim.State#
                                                                     (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                               <GHC.Prim.RealWorld>_N)))_R
                                                                  <Data.Primitive.Array.MutableArray
                                                                     (Control.Monad.Primitive.PrimState
                                                                        (GHC.ST.ST
                                                                           GHC.Prim.RealWorld))
                                                                     Lib.BedRecord>_R)_R)
                                                         ->_R <GHC.ST.ST
                                                                 GHC.Prim.RealWorld
                                                                 (Data.Primitive.Array.MutableArray
                                                                    (Control.Monad.Primitive.PrimState
                                                                       (GHC.ST.ST
                                                                          GHC.Prim.RealWorld))
                                                                    Lib.BedRecord)>_R)))) of ds7 { (#,#) ipv2 ipv3 ->
                                  Lib.$wfoldlM_loop1
                                    GHC.Types.SPEC
                                    0#
                                    0#
                                    ipv3
                                      `cast`
                                    (GHC.Prim.MutableArray#
                                       (Control.Monad.Primitive.D:R:PrimStateST[0]
                                            <GHC.Prim.RealWorld>_N)
                                       <Lib.BedRecord>_R)_R
                                    0#
                                    (GHC.Base.map @ Lib.BEDPE @ Lib.BedRecord Lib.bedpeToFbed ipv1)
                                    ipv2
                                      `cast`
                                    (Nth:2
                                         (Nth:3
                                              (Nth:2
                                                   (Trans
                                                        (((GHC.Prim.State#
                                                             (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                  <GHC.Prim.RealWorld>_N))_R
                                                          ->_R ((#,#)
                                                                  <'GHC.Types.TupleRep '[]>_R
                                                                  <'GHC.Types.LiftedRep>_R
                                                                  (GHC.Prim.State#
                                                                     (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                          <GHC.Prim.RealWorld>_N))_R
                                                                  <Data.Primitive.Array.MutableArray
                                                                     (Control.Monad.Primitive.PrimState
                                                                        (GHC.ST.ST
                                                                           GHC.Prim.RealWorld))
                                                                     Lib.BedRecord>_R)_R)
                                                         ->_R <GHC.ST.ST
                                                                 GHC.Prim.RealWorld
                                                                 (Data.Primitive.Array.MutableArray
                                                                    (Control.Monad.Primitive.PrimState
                                                                       (GHC.ST.ST
                                                                          GHC.Prim.RealWorld))
                                                                    Lib.BedRecord)>_R)
                                                        (<GHC.ST.STRep
                                                            GHC.Prim.RealWorld
                                                            (Data.Primitive.Array.MutableArray
                                                               (Control.Monad.Primitive.PrimState
                                                                  (GHC.ST.ST GHC.Prim.RealWorld))
                                                               Lib.BedRecord)>_R
                                                         ->_R GHC.ST.N:ST[0]
                                                                  <GHC.Prim.RealWorld>_N
                                                                  <Data.Primitive.Array.MutableArray
                                                                     (Control.Monad.Primitive.PrimState
                                                                        (GHC.ST.ST
                                                                           GHC.Prim.RealWorld))
                                                                     Lib.BedRecord>_R))))) }) of ds7 { (#,#) ipv2 ipv3 ->
                          case ipv3 of ww2 { Data.Vector.Vector ww3 ww4 ww5 ->
                          Lib.$wmakechrbedmap ww3 ww4 ww5 } },
                          case GHC.Magic.runRW#
                                 @ ('GHC.Types.TupleRep
                                      '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                                 @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                                      Data.Vector.Vector Lib.BedRecord #)
                                 (\ (s114 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                  case GHC.Prim.newArray#
                                         @ Lib.BedRecord
                                         @ (Control.Monad.Primitive.PrimState
                                              (GHC.ST.ST GHC.Prim.RealWorld))
                                         0#
                                         (Data.Vector.Mutable.uninitialised @ Lib.BedRecord)
                                         s114
                                           `cast`
                                         (Nth:2
                                              (Nth:2
                                                   (Trans
                                                        (<GHC.ST.STRep
                                                            GHC.Prim.RealWorld
                                                            (Data.Primitive.Array.MutableArray
                                                               (Control.Monad.Primitive.PrimState
                                                                  (GHC.ST.ST GHC.Prim.RealWorld))
                                                               Lib.BedRecord)>_R
                                                         ->_R Sym (GHC.ST.N:ST[0]
                                                                       <GHC.Prim.RealWorld>_N
                                                                       <Data.Primitive.Array.MutableArray
                                                                          (Control.Monad.Primitive.PrimState
                                                                             (GHC.ST.ST
                                                                                GHC.Prim.RealWorld))
                                                                          Lib.BedRecord>_R))
                                                        (((GHC.Prim.State#
                                                             (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                       <GHC.Prim.RealWorld>_N)))_R
                                                          ->_R ((#,#)
                                                                  <'GHC.Types.TupleRep '[]>_R
                                                                  <'GHC.Types.LiftedRep>_R
                                                                  (GHC.Prim.State#
                                                                     (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                               <GHC.Prim.RealWorld>_N)))_R
                                                                  <Data.Primitive.Array.MutableArray
                                                                     (Control.Monad.Primitive.PrimState
                                                                        (GHC.ST.ST
                                                                           GHC.Prim.RealWorld))
                                                                     Lib.BedRecord>_R)_R)
                                                         ->_R <GHC.ST.ST
                                                                 GHC.Prim.RealWorld
                                                                 (Data.Primitive.Array.MutableArray
                                                                    (Control.Monad.Primitive.PrimState
                                                                       (GHC.ST.ST
                                                                          GHC.Prim.RealWorld))
                                                                    Lib.BedRecord)>_R)))) of ds7 { (#,#) ipv2 ipv3 ->
                                  Lib.$wfoldlM_loop
                                    GHC.Types.SPEC
                                    0#
                                    0#
                                    ipv3
                                      `cast`
                                    (GHC.Prim.MutableArray#
                                       (Control.Monad.Primitive.D:R:PrimStateST[0]
                                            <GHC.Prim.RealWorld>_N)
                                       <Lib.BedRecord>_R)_R
                                    0#
                                    (GHC.Base.map @ Lib.BEDPE @ Lib.BedRecord Lib.bedpeToRbed ipv1)
                                    ipv2
                                      `cast`
                                    (Nth:2
                                         (Nth:3
                                              (Nth:2
                                                   (Trans
                                                        (((GHC.Prim.State#
                                                             (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                  <GHC.Prim.RealWorld>_N))_R
                                                          ->_R ((#,#)
                                                                  <'GHC.Types.TupleRep '[]>_R
                                                                  <'GHC.Types.LiftedRep>_R
                                                                  (GHC.Prim.State#
                                                                     (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                          <GHC.Prim.RealWorld>_N))_R
                                                                  <Data.Primitive.Array.MutableArray
                                                                     (Control.Monad.Primitive.PrimState
                                                                        (GHC.ST.ST
                                                                           GHC.Prim.RealWorld))
                                                                     Lib.BedRecord>_R)_R)
                                                         ->_R <GHC.ST.ST
                                                                 GHC.Prim.RealWorld
                                                                 (Data.Primitive.Array.MutableArray
                                                                    (Control.Monad.Primitive.PrimState
                                                                       (GHC.ST.ST
                                                                          GHC.Prim.RealWorld))
                                                                    Lib.BedRecord)>_R)
                                                        (<GHC.ST.STRep
                                                            GHC.Prim.RealWorld
                                                            (Data.Primitive.Array.MutableArray
                                                               (Control.Monad.Primitive.PrimState
                                                                  (GHC.ST.ST GHC.Prim.RealWorld))
                                                               Lib.BedRecord)>_R
                                                         ->_R GHC.ST.N:ST[0]
                                                                  <GHC.Prim.RealWorld>_N
                                                                  <Data.Primitive.Array.MutableArray
                                                                     (Control.Monad.Primitive.PrimState
                                                                        (GHC.ST.ST
                                                                           GHC.Prim.RealWorld))
                                                                     Lib.BedRecord>_R))))) }) of ds7 { (#,#) ipv2 ipv3 ->
                          case ipv3 of ww2 { Data.Vector.Vector ww3 ww4 ww5 ->
                          Lib.$wmakechrbedmap ww3 ww4 ww5 } }) #) } }) -}
f8f5cd9cf14720ad8d33dadca9a5c17b
  $wds ::
    ((GHC.Integer.Type.Integer
      -> GHC.Integer.Type.Integer
      -> GHC.Integer.Type.Integer
      -> Lib.RunStats)
     -> Data.Conduit.Internal.Pipe.Pipe
          Lib.AlignedRead
          Lib.AlignedRead
          Data.Void.Void
          ()
          (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
          b1)
    -> (# Lib.AlignedRead
          -> Data.Conduit.Internal.Pipe.Pipe
               Lib.AlignedRead
               Lib.AlignedRead
               Data.Void.Void
               ()
               (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
               b1,
          ()
          -> Data.Conduit.Internal.Pipe.Pipe
               Lib.AlignedRead
               Lib.AlignedRead
               Data.Void.Void
               ()
               (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
               b1 #)
  {- Arity: 1, Strictness: <L,C(U)>, Inline: [0],
     Unfolding: (\ @ b1
                   (w :: (GHC.Integer.Type.Integer
                          -> GHC.Integer.Type.Integer
                          -> GHC.Integer.Type.Integer
                          -> Lib.RunStats)
                         -> Data.Conduit.Internal.Pipe.Pipe
                              Lib.AlignedRead
                              Lib.AlignedRead
                              Data.Void.Void
                              ()
                              (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                              b1) ->
                 Lib.$wloop1
                   Lib.defaultBed2
                   @ b1
                   (\ (a1 :: GHC.Integer.Type.Integer) ->
                    let {
                      lvl1013 :: GHC.Types.Double
                      = case GHC.Integer.Type.doubleFromInteger a1 of wild2 { DEFAULT ->
                        GHC.Types.D# wild2 }
                    } in
                    w (\ (mapd :: GHC.Integer.Type.Integer)
                         (trimd :: GHC.Integer.Type.Integer)
                         (trimd2z :: GHC.Integer.Type.Integer) ->
                       Lib.RunStats
                         a1
                         mapd
                         trimd
                         trimd2z
                         (case GHC.Integer.Type.doubleFromInteger
                                 trimd of wild2 { DEFAULT ->
                          case lvl1013 of wild3 { GHC.Types.D# y ->
                          case GHC.Prim./## wild2 y of wild4 { DEFAULT ->
                          GHC.Types.D# (GHC.Prim.*## wild4 100.0##) } } })
                         (case GHC.Integer.Type.doubleFromInteger mapd of wild2 { DEFAULT ->
                          case lvl1013 of wild3 { GHC.Types.D# y ->
                          case GHC.Prim./## wild2 y of wild4 { DEFAULT ->
                          GHC.Types.D# (GHC.Prim.*## wild4 100.0##) } } })))) -}
e0b9feeb8f9b3012e0119b7f371e20a0
  $wfoldlM_loop ::
    GHC.Types.SPEC
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.MutableArray# GHC.Prim.RealWorld Lib.BedRecord
    -> GHC.Prim.Int#
    -> [Lib.BedRecord]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Vector.Vector Lib.BedRecord #)
  {- Arity: 7, Strictness: <S,1*U><L,U><L,U><S,U><L,U><S,1*U><S,U>,
     Inline: [0] -}
5c18f9a546d8ff4608519c9ce2c8408a
  $wfoldlM_loop1 ::
    GHC.Types.SPEC
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.MutableArray# GHC.Prim.RealWorld Lib.BedRecord
    -> GHC.Prim.Int#
    -> [Lib.BedRecord]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Vector.Vector Lib.BedRecord #)
  {- Arity: 7, Strictness: <S,1*U><L,U><L,U><S,U><L,U><S,1*U><S,U>,
     Inline: [0] -}
2ed70e86c4325028ad61abbf96f8a8c4
  $wfoldlM_loop2 ::
    GHC.Types.SPEC
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.MutableArray# GHC.Prim.RealWorld Lib.BedRecord
    -> GHC.Prim.Int#
    -> [Lib.BedRecord]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Vector.Vector Lib.BedRecord #)
  {- Arity: 7, Strictness: <S,1*U><L,U><L,U><S,U><L,U><S,1*U><S,U>,
     Inline: [0] -}
6a2dad1eb7f3bc8c5cc87d0137244f89
  $wfoldlM_loop3 ::
    GHC.Types.SPEC
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.MutableArray# GHC.Prim.RealWorld Lib.BedRecord
    -> GHC.Prim.Int#
    -> [Lib.BedRecord]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Vector.Vector Lib.BedRecord #)
  {- Arity: 7, Strictness: <S,1*U><L,U><L,U><S,U><L,U><S,1*U><S,U>,
     Inline: [0] -}
17e3f73655e40265c39370b719f58a57
  $wfoldlM_loop4 ::
    GHC.Types.SPEC
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.MutableArray# GHC.Prim.RealWorld Lib.BedRecord
    -> GHC.Prim.Int#
    -> [Lib.BedRecord]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Vector.Vector Lib.BedRecord #)
  {- Arity: 7, Strictness: <S,1*U><L,U><L,U><S,U><L,U><S,1*U><S,U>,
     Inline: [0] -}
918f47e998419bd2bd95380ffe267d94
  $wgetAlignedLength ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Integer.Type.Integer
  {- Arity: 4, Strictness: <S,U><L,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.$wparseCigar
                        @ [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                        ww
                        ww1
                        ww2
                        ww3
                        ww3
                        0#
                        0#
                        Data.Attoparsec.Internal.Types.Complete
                        (Data.Attoparsec.ByteString.Internal.failK
                           @ [(GHC.Integer.Type.Integer,
                               Data.ByteString.Internal.ByteString)])
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [GHC.Base.String]
                               -> GHC.Base.String
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString
                                    [(GHC.Integer.Type.Integer,
                                      Data.ByteString.Internal.ByteString)]>_R)
                        (Data.Attoparsec.ByteString.Internal.successK
                           @ [(GHC.Integer.Type.Integer,
                               Data.ByteString.Internal.ByteString)])
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [(GHC.Integer.Type.Integer,
                                    Data.ByteString.Internal.ByteString)]
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString
                                    [(GHC.Integer.Type.Integer,
                                      Data.ByteString.Internal.ByteString)]>_R) of wild {
                   Data.Attoparsec.Internal.Types.Fail ds6 ds7 err
                   -> case ds7 of wild1 { DEFAULT ->
                      case GHC.List.badHead ret_ty GHC.Integer.Type.Integer of {} }
                   Data.Attoparsec.Internal.Types.Partial ipv
                   -> case Lib.checkCigarSeqlen1 ret_ty GHC.Integer.Type.Integer of {}
                   Data.Attoparsec.Internal.Types.Done ds6 a1
                   -> Lib.getAlignedLength_go a1 Lib.defaultBed2 }) -}
1bbe1605ce0b8f8b30096e2e1bf2a69e
  $wgetTrimdcigCoordDiff ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
  {- Arity: 6, Strictness: <S,U><L,U><S,U><S,U><L,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Integer.Type.Integer)
                   (ww5 :: GHC.Integer.Type.Integer) ->
                 case Lib.addtrimtag5 of wild1 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                 let {
                   $j :: GHC.Integer.Type.Integer <join 0>
                   = GHC.Integer.Type.minusInteger
                       (GHC.Integer.Type.minusInteger ww5 ww4)
                       (Lib.getTrimdcigCoordDiff_go
                          (Lib.$wmapcig ww ww1 ww2 ww3)
                          Lib.defaultBed2)
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim./=# ww3 dt7) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqAddr# ww dt4) of wild3 {
                        GHC.Types.False
                        -> case Data.ByteString.Internal.$wcompareBytes
                                  ww
                                  ww1
                                  ww2
                                  ww3
                                  dt4
                                  dt5
                                  dt6
                                  dt7 of wild4 {
                             DEFAULT -> $j GHC.Types.EQ -> Lib.defaultBed2 }
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# ww2 dt6) of wild4 {
                             GHC.Types.False
                             -> case Data.ByteString.Internal.$wcompareBytes
                                       ww
                                       ww1
                                       ww2
                                       ww3
                                       dt4
                                       dt5
                                       dt6
                                       dt7 of wild5 {
                                  DEFAULT -> $j GHC.Types.EQ -> Lib.defaultBed2 }
                             GHC.Types.True -> Lib.defaultBed2 } }
                   GHC.Types.True -> $j } }) -}
cbca6f469b21f8834754abe3518a6ee0
  $wgetcigseqdiff ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Integer.Type.Integer
  {- Arity: 5, Strictness: <S,U><L,U><S,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#) ->
                 GHC.Integer.Type.minusInteger
                   (GHC.Integer.Type.smallInteger ww4)
                   (Lib.getcigseqdiff_go
                      (Lib.$wmapcig ww ww1 ww2 ww3)
                      Lib.defaultBed2)) -}
434c968dc975a566bfdf022afdbea0ec
  $wgetcol ::
    GHC.Types.Int
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Array# (Data.Vector.Vector a)
    -> Data.Vector.Vector a
  {- Arity: 4, Strictness: <L,U(U)><L,U><S,U><L,U>, Inline: [0],
     Unfolding: (\ @ a
                   (w :: GHC.Types.Int)
                   (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Array# (Data.Vector.Vector a)) ->
                 case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Vector.Vector a #)
                        (\ (s114 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newArray#
                                @ a
                                @ (Control.Monad.Primitive.PrimState
                                     (GHC.ST.ST GHC.Prim.RealWorld))
                                ww1
                                (Data.Vector.Mutable.uninitialised @ a)
                                s114
                                  `cast`
                                (Nth:2
                                     (Nth:2
                                          (Trans
                                               (<GHC.ST.STRep
                                                   GHC.Prim.RealWorld
                                                   (Data.Primitive.Array.MutableArray
                                                      (Control.Monad.Primitive.PrimState
                                                         (GHC.ST.ST GHC.Prim.RealWorld))
                                                      a)>_R
                                                ->_R Sym (GHC.ST.N:ST[0]
                                                              <GHC.Prim.RealWorld>_N
                                                              <Data.Primitive.Array.MutableArray
                                                                 (Control.Monad.Primitive.PrimState
                                                                    (GHC.ST.ST GHC.Prim.RealWorld))
                                                                 a>_R))
                                               (((GHC.Prim.State#
                                                    (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                              <GHC.Prim.RealWorld>_N)))_R
                                                 ->_R ((#,#)
                                                         <'GHC.Types.TupleRep '[]>_R
                                                         <'GHC.Types.LiftedRep>_R
                                                         (GHC.Prim.State#
                                                            (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                      <GHC.Prim.RealWorld>_N)))_R
                                                         <Data.Primitive.Array.MutableArray
                                                            (Control.Monad.Primitive.PrimState
                                                               (GHC.ST.ST GHC.Prim.RealWorld))
                                                            a>_R)_R)
                                                ->_R <GHC.ST.ST
                                                        GHC.Prim.RealWorld
                                                        (Data.Primitive.Array.MutableArray
                                                           (Control.Monad.Primitive.PrimState
                                                              (GHC.ST.ST GHC.Prim.RealWorld))
                                                           a)>_R)))) of ds6 { (#,#) ipv ipv1 ->
                         letrec {
                           $wfoldlM'_loop :: GHC.Types.SPEC
                                             -> GHC.Prim.Int#
                                             -> GHC.Prim.Int#
                                             -> GHC.Prim.State# GHC.Prim.RealWorld
                                             -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                   Data.Vector.Vector a #)
                             <join 4> {- Arity: 4, Strictness: <S,1*U><L,U><S,U><S,U>,
                                         Inline: [0] -}
                           = \ (w1 :: GHC.Types.SPEC)
                               (ww3 :: GHC.Prim.Int#)
                               (ww4 :: GHC.Prim.Int#)
                               (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                             case w1 of ds7 { DEFAULT ->
                             case GHC.Prim.tagToEnum#
                                    @ GHC.Types.Bool
                                    (GHC.Prim.>=# ww4 ww1) of wild {
                               GHC.Types.False
                               -> case GHC.Prim.writeArray#
                                         @ (Control.Monad.Primitive.PrimState
                                              (GHC.ST.ST GHC.Prim.RealWorld))
                                         @ a
                                         ipv1
                                         ww3
                                         (case w of wild1 { GHC.Types.I# x ->
                                          let {
                                            file :: GHC.Prim.Addr# = "./Data/Vector/Generic.hs"#
                                          } in
                                          case GHC.Prim.indexArray#
                                                 @ (Data.Vector.Vector a)
                                                 ww2
                                                 (GHC.Prim.+# ww ww4) of ds8 { Unit# ipv2 ->
                                          case GHC.Prim.tagToEnum#
                                                 @ GHC.Types.Bool
                                                 (GHC.Prim.>=# x 0#) of wild2 {
                                            GHC.Types.False
                                            -> case ipv2 of v2 { Data.Vector.Vector ipv3 ipv4 ipv5 ->
                                               Lib.getcol1 @ a ipv4 x file }
                                            GHC.Types.True
                                            -> case ipv2 of v2 { Data.Vector.Vector ipv3 ipv4 ipv5 ->
                                               case GHC.Prim.tagToEnum#
                                                      @ GHC.Types.Bool
                                                      (GHC.Prim.<# x ipv4) of wild3 {
                                                 GHC.Types.False -> Lib.getcol1 @ a ipv4 x file
                                                 GHC.Types.True
                                                 -> case GHC.Prim.indexArray#
                                                           @ a
                                                           ipv5
                                                           (GHC.Prim.+#
                                                              ipv3
                                                              x) of ds9 { Unit# ipv6 ->
                                                    ipv6 } } } } } })
                                         w2
                                           `cast`
                                         (Nth:2
                                              (Nth:2
                                                   (Trans
                                                        (<GHC.ST.STRep GHC.Prim.RealWorld ()>_R
                                                         ->_R Sym (GHC.ST.N:ST[0]
                                                                       <GHC.Prim.RealWorld>_N
                                                                       <()>_R))
                                                        (((GHC.Prim.State#
                                                             (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                       <GHC.Prim.RealWorld>_N)))_R
                                                          ->_R ((#,#)
                                                                  <'GHC.Types.TupleRep '[]>_R
                                                                  <'GHC.Types.LiftedRep>_R
                                                                  (GHC.Prim.State#
                                                                     (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                               <GHC.Prim.RealWorld>_N)))_R
                                                                  <()>_R)_R)
                                                         ->_R <GHC.ST.ST
                                                                 GHC.Prim.RealWorld
                                                                 ()>_R)))) of s'# { DEFAULT ->
                                  $wfoldlM'_loop
                                    GHC.Types.SPEC
                                    (GHC.Prim.+# ww3 1#)
                                    (GHC.Prim.+# ww4 1#)
                                    s'#
                                      `cast`
                                    (Nth:2
                                         (Nth:3
                                              (Nth:2
                                                   (Trans
                                                        (((GHC.Prim.State#
                                                             (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                  <GHC.Prim.RealWorld>_N))_R
                                                          ->_R ((#,#)
                                                                  <'GHC.Types.TupleRep '[]>_R
                                                                  <'GHC.Types.LiftedRep>_R
                                                                  (GHC.Prim.State#
                                                                     (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                          <GHC.Prim.RealWorld>_N))_R
                                                                  <()>_R)_R)
                                                         ->_R <GHC.ST.ST GHC.Prim.RealWorld ()>_R)
                                                        (<GHC.ST.STRep GHC.Prim.RealWorld ()>_R
                                                         ->_R GHC.ST.N:ST[0]
                                                                  <GHC.Prim.RealWorld>_N
                                                                  <()>_R))))) }
                               GHC.Types.True
                               -> case GHC.Prim.unsafeFreezeArray#
                                         @ (Control.Monad.Primitive.PrimState
                                              (GHC.ST.ST GHC.Prim.RealWorld))
                                         @ a
                                         ipv1
                                         w2
                                           `cast`
                                         (Nth:2
                                              (Nth:2
                                                   (Trans
                                                        (<GHC.ST.STRep
                                                            GHC.Prim.RealWorld
                                                            (Data.Primitive.Array.Array a)>_R
                                                         ->_R Sym (GHC.ST.N:ST[0]
                                                                       <GHC.Prim.RealWorld>_N
                                                                       <Data.Primitive.Array.Array
                                                                          a>_R))
                                                        (((GHC.Prim.State#
                                                             (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                       <GHC.Prim.RealWorld>_N)))_R
                                                          ->_R ((#,#)
                                                                  <'GHC.Types.TupleRep '[]>_R
                                                                  <'GHC.Types.LiftedRep>_R
                                                                  (GHC.Prim.State#
                                                                     (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                               <GHC.Prim.RealWorld>_N)))_R
                                                                  <Data.Primitive.Array.Array
                                                                     a>_R)_R)
                                                         ->_R <GHC.ST.ST
                                                                 GHC.Prim.RealWorld
                                                                 (Data.Primitive.Array.Array
                                                                    a)>_R)))) of ds8 { (#,#) ipv2 ipv3 ->
                                  (# ipv2
                                       `cast`
                                     (Nth:2
                                          (Nth:3
                                               (Nth:2
                                                    (Trans
                                                         (((GHC.Prim.State#
                                                              (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                   <GHC.Prim.RealWorld>_N))_R
                                                           ->_R ((#,#)
                                                                   <'GHC.Types.TupleRep '[]>_R
                                                                   <'GHC.Types.LiftedRep>_R
                                                                   (GHC.Prim.State#
                                                                      (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                           <GHC.Prim.RealWorld>_N))_R
                                                                   <Data.Primitive.Array.Array
                                                                      a>_R)_R)
                                                          ->_R <GHC.ST.ST
                                                                  GHC.Prim.RealWorld
                                                                  (Data.Primitive.Array.Array a)>_R)
                                                         (<GHC.ST.STRep
                                                             GHC.Prim.RealWorld
                                                             (Data.Primitive.Array.Array a)>_R
                                                          ->_R GHC.ST.N:ST[0]
                                                                   <GHC.Prim.RealWorld>_N
                                                                   <Data.Primitive.Array.Array
                                                                      a>_R))))),
                                     Data.Vector.Vector @ a 0# ww3 ipv3 #) } } }
                         } in
                         $wfoldlM'_loop
                           GHC.Types.SPEC
                           0#
                           0#
                           ipv
                             `cast`
                           (Nth:2
                                (Nth:3
                                     (Nth:2
                                          (Trans
                                               (((GHC.Prim.State#
                                                    (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                         <GHC.Prim.RealWorld>_N))_R
                                                 ->_R ((#,#)
                                                         <'GHC.Types.TupleRep '[]>_R
                                                         <'GHC.Types.LiftedRep>_R
                                                         (GHC.Prim.State#
                                                            (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                 <GHC.Prim.RealWorld>_N))_R
                                                         <Data.Primitive.Array.MutableArray
                                                            (Control.Monad.Primitive.PrimState
                                                               (GHC.ST.ST GHC.Prim.RealWorld))
                                                            a>_R)_R)
                                                ->_R <GHC.ST.ST
                                                        GHC.Prim.RealWorld
                                                        (Data.Primitive.Array.MutableArray
                                                           (Control.Monad.Primitive.PrimState
                                                              (GHC.ST.ST GHC.Prim.RealWorld))
                                                           a)>_R)
                                               (<GHC.ST.STRep
                                                   GHC.Prim.RealWorld
                                                   (Data.Primitive.Array.MutableArray
                                                      (Control.Monad.Primitive.PrimState
                                                         (GHC.ST.ST GHC.Prim.RealWorld))
                                                      a)>_R
                                                ->_R GHC.ST.N:ST[0]
                                                         <GHC.Prim.RealWorld>_N
                                                         <Data.Primitive.Array.MutableArray
                                                            (Control.Monad.Primitive.PrimState
                                                               (GHC.ST.ST GHC.Prim.RealWorld))
                                                            a>_R))))) }) of ds6 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
1eec1b0fb58d04d5d4d17ec0de68c2cd
  $wgl ::
    [Data.ByteString.Internal.ByteString]
    -> GHC.Prim.Int# -> GHC.Prim.Int#
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,U>, Inline: [0] -}
a1883e981474ab1b7d57cf4e35c8e4c2
  $wgl1 ::
    [Data.ByteString.Internal.ByteString]
    -> GHC.Prim.Int# -> GHC.Prim.Int#
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,U>, Inline: [0] -}
c1866f2acb5e576d3e78c6debbe75bfd
  $wgo ::
    [Lib.AlignedRead] -> (# [Lib.AlignedRead], [Lib.AlignedRead] #)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>, Inline: [0] -}
6a667365f1f6bf303ac3baa165509094
  $wgo1 ::
    [Lib.AlignedRead] -> (# [Lib.AlignedRead], [Lib.AlignedRead] #)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>, Inline: [0] -}
6993c567b3c2c84b83ba6f54a6858419
  $wgo2 ::
    [Lib.AlignedRead] -> (# [Lib.AlignedRead], [Lib.AlignedRead] #)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>, Inline: [0] -}
de6944ea067d4a4d41db98c01d8a65a3
  $wgo3 ::
    GHC.Prim.Int#
    -> Data.Set.Internal.Set Lib.UChr
    -> [Lib.UChr]
    -> Data.Set.Internal.Set Lib.UChr
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
49add8fd78a4a4febf52bfc4eb9b0c5d
  $wgo4 :: [Lib.UChr] -> GHC.Prim.Int# -> GHC.Prim.Int#
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,U>, Inline: [0] -}
767bb182db4c9cfc04a5174f131deeb0
  $wgo5 ::
    GHC.Prim.Addr#
    -> GHC.Prim.Addr#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 3, HasNoCafRefs, Strictness: <S,U><S,U><S,U>,
     Inline: [0] -}
aab380af980951de38ac7dfc7bdd39b7
  $wgo6 ::
    GHC.Prim.Addr#
    -> GHC.Prim.Addr#
    -> GHC.Prim.Addr#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Ptr.Ptr GHC.Word.Word8 #)
  {- Arity: 4, HasNoCafRefs, Strictness: <S,U><L,U><S,U><S,U>,
     Inline: [0] -}
e19b4b96e01d15e12734aa23a7f24155
  $wgo7 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         ()
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
21216ec4e7a85616ead7beb829b1cbae
  $wgo8 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         ()
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
0eabecc5207162a2135d6b0b3bf881b7
  $whdrSEalnparserEOL ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.AlignedRead
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.AlignedRead
                            r) ->
                 Lib.$wsamhdrparserEOL
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w
                   w1
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (a1 :: Data.ByteString.Internal.ByteString)[OneShot] ->
                    case t'
                           `cast`
                         (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww7 { Data.Attoparsec.ByteString.Buffer.Buf ww8 ww9 ww10 ww11 ww12 ww13 ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww14 { GHC.Types.I# ww15 ->
                    Lib.$wmany_v1
                      @ r
                      ww8
                      ww9
                      ww10
                      ww11
                      ww12
                      ww13
                      ww15
                      more'
                      (\ (t'1 :: Data.Attoparsec.Internal.Types.State
                                   Data.ByteString.Internal.ByteString)
                         (pos'1 :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                         (more'1 :: Data.Attoparsec.Internal.Types.More)[OneShot]
                         (a3 :: [Data.ByteString.Internal.ByteString])[OneShot] ->
                       case pos'1
                              `cast`
                            (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                       w2
                         t'1
                         nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                         more'1
                         (Lib.AlignedRead
                            Lib.hdrSEalnparserEOL2
                            Lib.$fShowAlignedRead2
                            Lib.NONE
                            Lib.defaultBed2
                            Lib.defaultBed2
                            Lib.defaultBed2
                            Lib.addtrimtag5
                            Lib.addtrimtag5
                            Lib.defaultAlignment_v
                            Lib.defaultAlignment_v
                            Lib.addtrimtag5
                            Lib.defaultBed2
                            Lib.defaultBed2
                            Lib.defaultAlignment1
                            Lib.defaultAlignment1
                            Lib.defaultAlignment1
                            Lib.defaultAlignment1
                            GHC.Types.False
                            GHC.Types.False
                            (GHC.Types.[] @ Lib.BedRecord)
                            (GHC.Types.[] @ Lib.BedRecord)
                            GHC.Types.False
                            GHC.Types.False
                            Lib.defaultBed2
                            Lib.defaultBed2
                            (GHC.Types.: @ Data.ByteString.Internal.ByteString a1 a3)
                            GHC.Types.True
                            Lib.defaultAlignment1
                            Lib.defaultAlignment1
                            Lib.defaultBed
                            GHC.Types.False) }) } })) -}
ee77ac1b15fd60beda39d427c72e6d4e
  $whdralnparser ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.AlignedRead
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.AlignedRead
                            r) ->
                 Lib.$wsamhdrparser
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w
                   w1
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (a1 :: Data.ByteString.Internal.ByteString)[OneShot] ->
                    case t'
                           `cast`
                         (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww7 { Data.Attoparsec.ByteString.Buffer.Buf ww8 ww9 ww10 ww11 ww12 ww13 ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww14 { GHC.Types.I# ww15 ->
                    Lib.$wmany_v2
                      @ r
                      ww8
                      ww9
                      ww10
                      ww11
                      ww12
                      ww13
                      ww15
                      more'
                      (\ (t'1 :: Data.Attoparsec.Internal.Types.State
                                   Data.ByteString.Internal.ByteString)
                         (pos'1 :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                         (more'1 :: Data.Attoparsec.Internal.Types.More)[OneShot]
                         (a3 :: [Data.ByteString.Internal.ByteString])[OneShot] ->
                       case pos'1
                              `cast`
                            (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                       w2
                         t'1
                         nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                         more'1
                         (Lib.AlignedRead
                            Lib.hdrSEalnparserEOL2
                            Lib.$fShowAlignedRead2
                            Lib.NONE
                            Lib.defaultBed2
                            Lib.defaultBed2
                            Lib.defaultBed2
                            Lib.addtrimtag5
                            Lib.addtrimtag5
                            Lib.defaultAlignment_v
                            Lib.defaultAlignment_v
                            Lib.addtrimtag5
                            Lib.defaultBed2
                            Lib.defaultBed2
                            Lib.defaultAlignment1
                            Lib.defaultAlignment1
                            Lib.defaultAlignment1
                            Lib.defaultAlignment1
                            GHC.Types.False
                            GHC.Types.False
                            (GHC.Types.[] @ Lib.BedRecord)
                            (GHC.Types.[] @ Lib.BedRecord)
                            GHC.Types.False
                            GHC.Types.False
                            Lib.defaultBed2
                            Lib.defaultBed2
                            (GHC.Types.: @ Data.ByteString.Internal.ByteString a1 a3)
                            GHC.Types.True
                            Lib.defaultAlignment1
                            Lib.defaultAlignment1
                            Lib.defaultBed
                            GHC.Types.False) }) } })) -}
d7313441eb31a6e4efbdc4ecc24e21f7
  $whdralnparserEOL ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.PairedAln
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.PairedAln
                            r) ->
                 Lib.$wsamhdrparserEOL
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w
                   w1
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (a1 :: Data.ByteString.Internal.ByteString)[OneShot] ->
                    case t'
                           `cast`
                         (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww7 { Data.Attoparsec.ByteString.Buffer.Buf ww8 ww9 ww10 ww11 ww12 ww13 ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww14 { GHC.Types.I# ww15 ->
                    Lib.$wmany_v3
                      @ r
                      ww8
                      ww9
                      ww10
                      ww11
                      ww12
                      ww13
                      ww15
                      more'
                      (\ (t'1 :: Data.Attoparsec.Internal.Types.State
                                   Data.ByteString.Internal.ByteString)
                         (pos'1 :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                         (more'1 :: Data.Attoparsec.Internal.Types.More)[OneShot]
                         (a3 :: [Data.ByteString.Internal.ByteString])[OneShot] ->
                       case pos'1
                              `cast`
                            (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                       w2
                         t'1
                         nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                         more'1
                         (Lib.PairedAln
                            (Lib.AlignedRead
                               Lib.hdrSEalnparserEOL2
                               Lib.$fShowAlignedRead2
                               Lib.NONE
                               Lib.defaultBed2
                               Lib.defaultBed2
                               Lib.defaultBed2
                               Lib.addtrimtag5
                               Lib.addtrimtag5
                               Lib.defaultAlignment_v
                               Lib.defaultAlignment_v
                               Lib.addtrimtag5
                               Lib.defaultBed2
                               Lib.defaultBed2
                               Lib.defaultAlignment1
                               Lib.defaultAlignment1
                               Lib.defaultAlignment1
                               Lib.defaultAlignment1
                               GHC.Types.False
                               GHC.Types.False
                               (GHC.Types.[] @ Lib.BedRecord)
                               (GHC.Types.[] @ Lib.BedRecord)
                               GHC.Types.False
                               GHC.Types.False
                               Lib.defaultBed2
                               Lib.defaultBed2
                               (GHC.Types.: @ Data.ByteString.Internal.ByteString a1 a3)
                               GHC.Types.True
                               Lib.defaultAlignment1
                               Lib.defaultAlignment1
                               Lib.defaultBed
                               GHC.Types.False)
                            Lib.defaultAlignment
                            (GHC.Types.[] @ Lib.AlignedRead)
                            (GHC.Types.[] @ Lib.AlignedRead)) }) } })) -}
cb5b75096d9990cd1014c7cc59a19092
  $whdrchromp ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.UChr
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <L,U><L,U><L,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
1b737d308d5968b89d6a7e71bd8213b0
  $witypep ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (ww :: GHC.Prim.Int#)
                   (w1 :: Data.Attoparsec.Internal.Types.More)
                   (w2 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w3 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 Lib.itypep_m
                   `cast`
                 (Data.Attoparsec.Internal.Types.N:Parser[0]
                      <Data.ByteString.Internal.ByteString>_N
                      <Data.ByteString.Internal.ByteString>_R)
                   @ r
                   w
                   (GHC.Types.I# ww)
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                   w1
                   w2
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)
                      (more' :: Data.Attoparsec.Internal.Types.More)
                      (a1 :: Data.ByteString.Internal.ByteString) ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                    w3
                      t'
                      nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                      more'
                      Lib.itypep_v })) -}
3c5b4c9188d0e9aec1fabcd9d2b7e10a
  $wix ::
    GHC.Prim.Int#
    -> GHC.Prim.Int# -> GHC.Prim.Int# -> GHC.Prim.Array# a -> a
  {- Arity: 4, Strictness: <S,U><S,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ @ a
                   (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Array# a) ->
                 let {
                   file :: GHC.Prim.Addr# = "./Data/Vector/Generic.hs"#
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 0#) of wild1 {
                   GHC.Types.False -> Lib.getcol1 @ a ww2 ww file
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<# ww ww2) of wild3 {
                        GHC.Types.False -> Lib.getcol1 @ a ww2 ww file
                        GHC.Types.True
                        -> case GHC.Prim.indexArray#
                                  @ a
                                  ww3
                                  (GHC.Prim.+# ww1 ww) of ds6 { Unit# ipv ->
                           ipv } } }) -}
581e3a66db741a0ed88583b71fb7c439
  $wloop ::
    GHC.Integer.Type.Integer
    -> forall b.
       (GHC.Integer.Type.Integer
        -> Data.Conduit.Internal.Pipe.Pipe
             Lib.AlignedRead
             Lib.AlignedRead
             Data.Void.Void
             ()
             (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
             b)
       -> (# Lib.AlignedRead
             -> Data.Conduit.Internal.Pipe.Pipe
                  Lib.AlignedRead
                  Lib.AlignedRead
                  Data.Void.Void
                  ()
                  (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  b,
             ()
             -> Data.Conduit.Internal.Pipe.Pipe
                  Lib.AlignedRead
                  Lib.AlignedRead
                  Data.Void.Void
                  ()
                  (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  b #)
  {- Arity: 2, Strictness: <S,1*U><L,C(U)>, Inline: [0] -}
ed8dab810ff85921ae792243157ccdcf
  $wloop1 ::
    GHC.Integer.Type.Integer
    -> forall b.
       (GHC.Integer.Type.Integer
        -> Data.Conduit.Internal.Pipe.Pipe
             Lib.AlignedRead
             Lib.AlignedRead
             Data.Void.Void
             ()
             (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
             b)
       -> (# Lib.AlignedRead
             -> Data.Conduit.Internal.Pipe.Pipe
                  Lib.AlignedRead
                  Lib.AlignedRead
                  Data.Void.Void
                  ()
                  (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  b,
             ()
             -> Data.Conduit.Internal.Pipe.Pipe
                  Lib.AlignedRead
                  Lib.AlignedRead
                  Data.Void.Void
                  ()
                  (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  b #)
  {- Arity: 2, Strictness: <S,1*U><L,C(U)>, Inline: [0] -}
7adb2e04f74177a7edf3890546dd43a9
  $wloop2 ::
    GHC.Integer.Type.Integer
    -> forall b.
       (GHC.Integer.Type.Integer
        -> Data.Conduit.Internal.Pipe.Pipe
             Lib.AlignedRead
             Lib.AlignedRead
             Data.Void.Void
             ()
             (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
             b)
       -> (# Lib.AlignedRead
             -> Data.Conduit.Internal.Pipe.Pipe
                  Lib.AlignedRead
                  Lib.AlignedRead
                  Data.Void.Void
                  ()
                  (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  b,
             ()
             -> Data.Conduit.Internal.Pipe.Pipe
                  Lib.AlignedRead
                  Lib.AlignedRead
                  Data.Void.Void
                  ()
                  (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  b #)
  {- Arity: 2, Strictness: <S,1*U><L,C(U)>, Inline: [0] -}
abb052827d9625d097890f754ea8e0e8
  $wlvl :: GHC.Prim.Int# -> Lib.ChromNameFormat
  {- Arity: 1, Strictness: <B,U>x, Inline: [0] -}
738096376958aedf685c1b59f577962f
  $wlvl1 :: GHC.Prim.Int# -> Lib.UChr
  {- Arity: 1, Strictness: <B,U>x, Inline: [0] -}
cc32722379522ee3bc5523d23c0d4e05
  $wlvl2 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Types.Bool
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.shiftcrds3 of wild1 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim./=# ww3 dt7) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqAddr# ww dt4) of wild3 {
                        GHC.Types.False
                        -> case Data.ByteString.Internal.$wcompareBytes
                                  ww
                                  ww1
                                  ww2
                                  ww3
                                  dt4
                                  dt5
                                  dt6
                                  dt7 of wild4 {
                             DEFAULT -> GHC.Types.False GHC.Types.EQ -> GHC.Types.True }
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# ww2 dt6) of wild4 {
                             GHC.Types.False
                             -> case Data.ByteString.Internal.$wcompareBytes
                                       ww
                                       ww1
                                       ww2
                                       ww3
                                       dt4
                                       dt5
                                       dt6
                                       dt7 of wild5 {
                                  DEFAULT -> GHC.Types.False GHC.Types.EQ -> GHC.Types.True }
                             GHC.Types.True -> GHC.Types.True } }
                   GHC.Types.True -> GHC.Types.False } }) -}
138ba79700e67028463354b2694b31d2
  $wlvl3 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Types.Bool
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.shiftcrds3 of wild1 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim./=# ww3 dt7) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqAddr# ww dt4) of wild3 {
                        GHC.Types.False
                        -> case Data.ByteString.Internal.$wcompareBytes
                                  ww
                                  ww1
                                  ww2
                                  ww3
                                  dt4
                                  dt5
                                  dt6
                                  dt7 of wild4 {
                             DEFAULT -> GHC.Types.True GHC.Types.EQ -> GHC.Types.False }
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# ww2 dt6) of wild4 {
                             GHC.Types.False
                             -> case Data.ByteString.Internal.$wcompareBytes
                                       ww
                                       ww1
                                       ww2
                                       ww3
                                       dt4
                                       dt5
                                       dt6
                                       dt7 of wild5 {
                                  DEFAULT -> GHC.Types.True GHC.Types.EQ -> GHC.Types.False }
                             GHC.Types.True -> GHC.Types.False } }
                   GHC.Types.True -> GHC.Types.True } }) -}
88478edca2c6d8ebf1dd5a9aa5079a35
  $wlvl4 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Types.Bool
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.shiftcrds3 of wild1 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim./=# ww3 dt7) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqAddr# ww dt4) of wild3 {
                        GHC.Types.False
                        -> case Data.ByteString.Internal.$wcompareBytes
                                  ww
                                  ww1
                                  ww2
                                  ww3
                                  dt4
                                  dt5
                                  dt6
                                  dt7 of wild4 {
                             DEFAULT -> GHC.Types.True GHC.Types.EQ -> GHC.Types.False }
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# ww2 dt6) of wild4 {
                             GHC.Types.False
                             -> case Data.ByteString.Internal.$wcompareBytes
                                       ww
                                       ww1
                                       ww2
                                       ww3
                                       dt4
                                       dt5
                                       dt6
                                       dt7 of wild5 {
                                  DEFAULT -> GHC.Types.True GHC.Types.EQ -> GHC.Types.False }
                             GHC.Types.True -> GHC.Types.False } }
                   GHC.Types.True -> GHC.Types.True } }) -}
f51000d91c6c0ac729822643511ef470
  $wlvl5 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.AlignedRead
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.AlignedRead
                            r) ->
                 Lib.$whdralnparser
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                      (_pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (_ctx :: [GHC.Base.String])[OneShot]
                      (_msg :: GHC.Base.String)[OneShot] ->
                    case t'
                           `cast`
                         (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww7 { Data.Attoparsec.ByteString.Buffer.Buf ww8 ww9 ww10 ww11 ww12 ww13 ->
                    Lib.$walnparser @ r ww8 ww9 ww10 ww11 ww12 ww13 ww6 more' w1 w2 })
                   w2) -}
a978541ad274394e8ebcccb5b1cfba3f
  $wlvl6 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Types.Bool
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.shiftcrds3 of wild1 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim./=# ww3 dt7) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqAddr# ww dt4) of wild3 {
                        GHC.Types.False
                        -> case Data.ByteString.Internal.$wcompareBytes
                                  ww
                                  ww1
                                  ww2
                                  ww3
                                  dt4
                                  dt5
                                  dt6
                                  dt7 of wild4 {
                             DEFAULT -> GHC.Types.True GHC.Types.EQ -> GHC.Types.False }
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# ww2 dt6) of wild4 {
                             GHC.Types.False
                             -> case Data.ByteString.Internal.$wcompareBytes
                                       ww
                                       ww1
                                       ww2
                                       ww3
                                       dt4
                                       dt5
                                       dt6
                                       dt7 of wild5 {
                                  DEFAULT -> GHC.Types.True GHC.Types.EQ -> GHC.Types.False }
                             GHC.Types.True -> GHC.Types.False } }
                   GHC.Types.True -> GHC.Types.True } }) -}
944463e9bd075fed963946f253f565f7
  $wmIDp ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <L,U><L,U><L,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
af642f3683790246511b88c3a82cc703
  $wmakeTrimmedUpdates ::
    Lib.PairedAln
    -> (# Lib.AlignedRead, Lib.AlignedRead, [Lib.AlignedRead],
          [Lib.AlignedRead] #)
  {- Arity: 1,
     Strictness: <L,1*U(U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)>,
     Inline: [0],
     Unfolding: (\ (w :: Lib.PairedAln) ->
                 let {
                   p :: Lib.PairedAln
                   = Lib.updateZeroTrimdPairFields
                       (Lib.updateZeroTrimdPairFlags (Lib.updateTrimdPairFields w))
                 } in
                 let {
                   ww :: [Lib.AlignedRead]
                   = case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                     GHC.Base.map
                       @ Lib.AlignedRead
                       @ Lib.AlignedRead
                       Lib.updateTrimdAlnFields
                       ds9 }
                 } in
                 let {
                   ww1 :: [Lib.AlignedRead]
                   = case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                     GHC.Base.map
                       @ Lib.AlignedRead
                       @ Lib.AlignedRead
                       Lib.updateTrimdAlnFields
                       ds8 }
                 } in
                 let {
                   ww2 :: Lib.AlignedRead
                   = case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                     Lib.updateTrimdAlnFields ds7 }
                 } in
                 let {
                   ww3 :: Lib.AlignedRead
                   = case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                     Lib.updateTrimdAlnFields ds6 }
                 } in
                 case Lib.checkInsertSize
                        Lib.makeTrimmedUpdates2
                        Lib.makeTrimmedUpdates1
                        (Lib.PairedAln ww3 ww2 ww1 ww) of wild {
                   GHC.Types.False -> (# ww3, ww2, ww1, ww #)
                   GHC.Types.True
                   -> case ww3 of wild1 { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                      case ds24 of wild2 {
                        GHC.Types.False -> (# wild1, ww2, ww1, ww #)
                        GHC.Types.True
                        -> case ww2 of wild3 { Lib.AlignedRead ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ->
                           case ds55 of wild4 {
                             GHC.Types.False -> (# wild1, wild3, ww1, ww #)
                             GHC.Types.True
                             -> (# Lib.AlignedRead
                                     ds6
                                     (case ds7 of wild5 { GHC.Types.I# x# ->
                                      GHC.Types.I# (GHC.Prim.orI# x# 2#) })
                                     ds8
                                     ds9
                                     ds10
                                     ds11
                                     ds12
                                     ds13
                                     ds14
                                     ds15
                                     ds16
                                     ds17
                                     ds18
                                     ds19
                                     ds20
                                     ds21
                                     ds22
                                     ds23
                                     GHC.Types.True
                                     ds25
                                     ds26
                                     ds27
                                     ds28
                                     ds29
                                     ds30
                                     ds31
                                     ds32
                                     ds33
                                     ds34
                                     ds35
                                     ds36,
                                   Lib.AlignedRead
                                     ds37
                                     (case ds38 of wild5 { GHC.Types.I# x# ->
                                      GHC.Types.I# (GHC.Prim.orI# x# 2#) })
                                     ds39
                                     ds40
                                     ds41
                                     ds42
                                     ds43
                                     ds44
                                     ds45
                                     ds46
                                     ds47
                                     ds48
                                     ds49
                                     ds50
                                     ds51
                                     ds52
                                     ds53
                                     ds54
                                     GHC.Types.True
                                     ds56
                                     ds57
                                     ds58
                                     ds59
                                     ds60
                                     ds61
                                     ds62
                                     ds63
                                     ds64
                                     ds65
                                     ds66
                                     ds67,
                                   ww1, ww #) } } } } }) -}
54974a1886cfbf71af9ec474ce373502
  $wmakechrbedmap ::
    GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Array# Lib.BedRecord
    -> Data.Map.Internal.Map
         Lib.UChr (Data.IntMap.Internal.IntMap Lib.BedRecord)
  {- Arity: 3, Strictness: <L,U><S,U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Array# Lib.BedRecord) ->
                 letrec {
                   $wgo40 :: GHC.Prim.Int# -> [Lib.BedRecord]
                     {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                   = \ (ww3 :: GHC.Prim.Int#) ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.>=# ww3 ww1) of wild {
                       GHC.Types.False
                       -> case GHC.Prim.indexArray#
                                 @ Lib.BedRecord
                                 ww2
                                 (GHC.Prim.+# ww ww3) of ds6 { Unit# ipv ->
                          GHC.Types.: @ Lib.BedRecord ipv ($wgo40 (GHC.Prim.+# ww3 1#)) }
                       GHC.Types.True -> GHC.Types.[] @ Lib.BedRecord }
                 } in
                 let {
                   bbychr :: [[Lib.BedRecord]]
                   = Data.OldList.groupBy
                       @ Lib.BedRecord
                       Lib.createprimerbedmaps3
                       ($wgo40 0#)
                 } in
                 Lib.$sfromList
                   @ (Data.IntMap.Internal.IntMap Lib.BedRecord)
                   (Lib.createprimerbedmaps_go
                      bbychr
                      (GHC.Base.map
                         @ [Lib.BedRecord]
                         @ (Data.IntMap.Internal.IntMap Lib.BedRecord)
                         Lib.makebedmap
                         bbychr))) -}
89a9cfc40359633546d2d3f4de15227e
  $wmakeprimertups ::
    Lib.UChr
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> [(GHC.Types.Int, Lib.BedRecord)]
  {- Arity: 4, Strictness: <L,U><S,U><S,U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: Lib.UChr)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: GHC.Integer.Type.Integer)
                   (ww3 :: Data.ByteString.Internal.ByteString) ->
                 let {
                   pe :: GHC.Integer.Type.Integer
                   = GHC.Integer.Type.plusInteger ww2 Lib.shiftcrds1
                 } in
                 let {
                   ps :: GHC.Integer.Type.Integer
                   = GHC.Integer.Type.minusInteger ww1 Lib.shiftcrds1
                 } in
                 letrec {
                   go16 :: GHC.Integer.Type.Integer
                           -> [Lib.BedRecord] -> [(GHC.Types.Int, Lib.BedRecord)]
                     {- Arity: 2, Strictness: <S,U><L,1*U> -}
                   = \ (x :: GHC.Integer.Type.Integer) (eta :: [Lib.BedRecord]) ->
                     case GHC.Integer.Type.gtInteger# x pe of wild { DEFAULT ->
                     case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild of wild1 {
                       GHC.Types.False
                       -> case eta of wild2 {
                            [] -> GHC.Types.[] @ (GHC.Types.Int, Lib.BedRecord)
                            : y ys
                            -> GHC.Types.:
                                 @ (GHC.Types.Int, Lib.BedRecord)
                                 (case GHC.Integer.Type.integerToInt x of wild3 { DEFAULT ->
                                  GHC.Types.I# wild3 },
                                  y)
                                 (go16 (GHC.Integer.Type.plusInteger x Lib.shiftcrds2) ys) }
                       GHC.Types.True -> GHC.Types.[] @ (GHC.Types.Int, Lib.BedRecord) } }
                 } in
                 go16
                   ps
                   (case GHC.Integer.Type.integerToInt
                           (GHC.Integer.Type.plusInteger
                              (GHC.Integer.Type.minusInteger pe ps)
                              Lib.shiftcrds2) of wild { DEFAULT ->
                    case GHC.Prim.tagToEnum#
                           @ GHC.Types.Bool
                           (GHC.Prim.<# 0# wild) of wild1 {
                      GHC.Types.False -> GHC.Types.[] @ Lib.BedRecord
                      GHC.Types.True
                      -> let {
                           b :: Lib.BedRecord = Lib.BedRecord ww ww1 ww2 ww3
                         } in
                         let {
                           lvl1013 :: [Lib.BedRecord]
                           = GHC.Types.: @ Lib.BedRecord b (GHC.Types.[] @ Lib.BedRecord)
                         } in
                         letrec {
                           $wxs :: GHC.Prim.Int# -> [Lib.BedRecord]
                             {- Arity: 1, Strictness: <S,1*U>, Inline: [0] -}
                           = \ (ww4 :: GHC.Prim.Int#) ->
                             case ww4 of ds6 {
                               DEFAULT
                               -> GHC.Types.: @ Lib.BedRecord b ($wxs (GHC.Prim.-# ds6 1#))
                               1# -> lvl1013 }
                         } in
                         $wxs wild } })) -}
da8ca0b18ccf3b9036b530dc7f5e7ff1
  $wmany_v ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
f9f62c1512f8683e1ab93c6d27fb1685
  $wmany_v1 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [Data.ByteString.Internal.ByteString]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
c010a63d023745ef54212fa80ec77438
  $wmany_v2 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [Data.ByteString.Internal.ByteString]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
355383a6049f6221e13a1a004baec8b1
  $wmany_v3 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [Data.ByteString.Internal.ByteString]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
6bf1fef3c98f61d91f0aca055c3cfdb3
  $wmany_v4 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [Lib.PairedAln]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
d170f3cffe71da1fffa2e0820568f42e
  $wmany_v5 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [Lib.AlignedRead]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
43188900071fbf31235ea3422e41b532
  $wmapcig ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> [(GHC.Integer.Type.Integer,
         Data.ByteString.Internal.ByteString)]
  {- Arity: 4, Strictness: <S,U><L,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.$wparseCigar
                        @ [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                        ww
                        ww1
                        ww2
                        ww3
                        ww3
                        0#
                        0#
                        Data.Attoparsec.Internal.Types.Complete
                        (Data.Attoparsec.ByteString.Internal.failK
                           @ [(GHC.Integer.Type.Integer,
                               Data.ByteString.Internal.ByteString)])
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [GHC.Base.String]
                               -> GHC.Base.String
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString
                                    [(GHC.Integer.Type.Integer,
                                      Data.ByteString.Internal.ByteString)]>_R)
                        (Data.Attoparsec.ByteString.Internal.successK
                           @ [(GHC.Integer.Type.Integer,
                               Data.ByteString.Internal.ByteString)])
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [(GHC.Integer.Type.Integer,
                                    Data.ByteString.Internal.ByteString)]
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString
                                    [(GHC.Integer.Type.Integer,
                                      Data.ByteString.Internal.ByteString)]>_R) of wild {
                   Data.Attoparsec.Internal.Types.Fail ds6 ds7 err
                   -> case ds7 of wild1 { DEFAULT ->
                      GHC.List.badHead
                        @ [(GHC.Integer.Type.Integer,
                            Data.ByteString.Internal.ByteString)] }
                   Data.Attoparsec.Internal.Types.Partial ipv
                   -> case Lib.checkCigarSeqlen1
                      ret_ty [(GHC.Integer.Type.Integer,
                               Data.ByteString.Internal.ByteString)]
                      of {}
                   Data.Attoparsec.Internal.Types.Done ds6 a1 -> a1 }) -}
ad52c5486273387aa0e3226fe6115c3a
  $wmasterparser ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.MasterRecord
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
f816c5ec34c77ff7bd816472cb08abc1
  $wnoclip ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Types.Bool
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.noclip2 of wild1 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                 let {
                   $j :: GHC.Types.Bool <join 0>
                   = case Lib.noclip1 of wild2 { Data.ByteString.Internal.PS dt1 dt2 dt3 dt10 ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim./=# ww3 dt10) of wild3 {
                       GHC.Types.False
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.eqAddr# ww dt1) of wild4 {
                            GHC.Types.False
                            -> case Data.ByteString.Internal.$wcompareBytes
                                      ww
                                      ww1
                                      ww2
                                      ww3
                                      dt1
                                      dt2
                                      dt3
                                      dt10 of wild5 {
                                 DEFAULT -> GHC.Types.True GHC.Types.EQ -> GHC.Types.False }
                            GHC.Types.True
                            -> case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.==# ww2 dt3) of wild5 {
                                 GHC.Types.False
                                 -> case Data.ByteString.Internal.$wcompareBytes
                                           ww
                                           ww1
                                           ww2
                                           ww3
                                           dt1
                                           dt2
                                           dt3
                                           dt10 of wild6 {
                                      DEFAULT -> GHC.Types.True GHC.Types.EQ -> GHC.Types.False }
                                 GHC.Types.True -> GHC.Types.False } }
                       GHC.Types.True -> GHC.Types.True } }
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim./=# ww3 dt7) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqAddr# ww dt4) of wild3 {
                        GHC.Types.False
                        -> case Data.ByteString.Internal.$wcompareBytes
                                  ww
                                  ww1
                                  ww2
                                  ww3
                                  dt4
                                  dt5
                                  dt6
                                  dt7 of wild4 {
                             DEFAULT -> $j GHC.Types.EQ -> GHC.Types.False }
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# ww2 dt6) of wild4 {
                             GHC.Types.False
                             -> case Data.ByteString.Internal.$wcompareBytes
                                       ww
                                       ww1
                                       ww2
                                       ww3
                                       dt4
                                       dt5
                                       dt6
                                       dt7 of wild5 {
                                  DEFAULT -> $j GHC.Types.EQ -> GHC.Types.False }
                             GHC.Types.True -> GHC.Types.False } }
                   GHC.Types.True -> $j } }) -}
11c6d768bdb3946384530485e5b3b7e4
  $wnohardclip ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Types.Bool
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.noclip2 of wild1 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim./=# ww3 dt7) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqAddr# ww dt4) of wild3 {
                        GHC.Types.False
                        -> case Data.ByteString.Internal.$wcompareBytes
                                  ww
                                  ww1
                                  ww2
                                  ww3
                                  dt4
                                  dt5
                                  dt6
                                  dt7 of wild4 {
                             DEFAULT -> GHC.Types.True GHC.Types.EQ -> GHC.Types.False }
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# ww2 dt6) of wild4 {
                             GHC.Types.False
                             -> case Data.ByteString.Internal.$wcompareBytes
                                       ww
                                       ww1
                                       ww2
                                       ww3
                                       dt4
                                       dt5
                                       dt6
                                       dt7 of wild5 {
                                  DEFAULT -> GHC.Types.True GHC.Types.EQ -> GHC.Types.False }
                             GHC.Types.True -> GHC.Types.False } }
                   GHC.Types.True -> GHC.Types.True } }) -}
0c89f012530664e53b02b95c72868db7
  $wnomapCigToNomapRname ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Lib.UChr
    -> Lib.UChr
  {- Arity: 5, Strictness: <L,U><L,U><L,U><S,U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (w :: Lib.UChr) ->
                 case Lib.addtrimtag5 of wild1 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim./=# ww3 dt7) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqAddr# ww dt4) of wild3 {
                        GHC.Types.False
                        -> case Data.ByteString.Internal.$wcompareBytes
                                  ww
                                  ww1
                                  ww2
                                  ww3
                                  dt4
                                  dt5
                                  dt6
                                  dt7 of wild4 {
                             DEFAULT -> w GHC.Types.EQ -> Lib.NONE }
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# ww2 dt6) of wild4 {
                             GHC.Types.False
                             -> case Data.ByteString.Internal.$wcompareBytes
                                       ww
                                       ww1
                                       ww2
                                       ww3
                                       dt4
                                       dt5
                                       dt6
                                       dt7 of wild5 {
                                  DEFAULT -> w GHC.Types.EQ -> Lib.NONE }
                             GHC.Types.True -> Lib.NONE } }
                   GHC.Types.True -> w } }) -}
00e090391d9f5dd79d31bb8f5086d555
  $wnopadding ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Types.Bool
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.noclip2 of wild1 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                 let {
                   $j :: GHC.Types.Bool <join 0>
                   = case Lib.shiftcrds3 of wild2 { Data.ByteString.Internal.PS dt1 dt2 dt3 dt10 ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim./=# ww3 dt10) of wild3 {
                       GHC.Types.False
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.eqAddr# ww dt1) of wild4 {
                            GHC.Types.False
                            -> case Data.ByteString.Internal.$wcompareBytes
                                      ww
                                      ww1
                                      ww2
                                      ww3
                                      dt1
                                      dt2
                                      dt3
                                      dt10 of wild5 {
                                 DEFAULT -> GHC.Types.True GHC.Types.EQ -> GHC.Types.False }
                            GHC.Types.True
                            -> case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.==# ww2 dt3) of wild5 {
                                 GHC.Types.False
                                 -> case Data.ByteString.Internal.$wcompareBytes
                                           ww
                                           ww1
                                           ww2
                                           ww3
                                           dt1
                                           dt2
                                           dt3
                                           dt10 of wild6 {
                                      DEFAULT -> GHC.Types.True GHC.Types.EQ -> GHC.Types.False }
                                 GHC.Types.True -> GHC.Types.False } }
                       GHC.Types.True -> GHC.Types.True } }
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim./=# ww3 dt7) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqAddr# ww dt4) of wild3 {
                        GHC.Types.False
                        -> case Data.ByteString.Internal.$wcompareBytes
                                  ww
                                  ww1
                                  ww2
                                  ww3
                                  dt4
                                  dt5
                                  dt6
                                  dt7 of wild4 {
                             DEFAULT -> $j GHC.Types.EQ -> GHC.Types.False }
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# ww2 dt6) of wild4 {
                             GHC.Types.False
                             -> case Data.ByteString.Internal.$wcompareBytes
                                       ww
                                       ww1
                                       ww2
                                       ww3
                                       dt4
                                       dt5
                                       dt6
                                       dt7 of wild5 {
                                  DEFAULT -> $j GHC.Types.EQ -> GHC.Types.False }
                             GHC.Types.True -> GHC.Types.False } }
                   GHC.Types.True -> $j } }) -}
e7829b6a390550de2d942e83432fe147
  $woptasp ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
dae317ba71750e78b5e4f0ebbab10180
  $woptfieldp ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5, Strictness: <L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (ww :: GHC.Prim.Int#)
                   (w1 :: Data.Attoparsec.Internal.Types.More)
                   (w2 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w3 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 let {
                   pos1 :: GHC.Types.Int = GHC.Types.I# ww
                 } in
                 let {
                   lose :: Data.Attoparsec.Internal.Types.Failure
                             Data.ByteString.Internal.ByteString
                             (Data.Attoparsec.Internal.Types.State
                                Data.ByteString.Internal.ByteString)
                             r
                     {- Arity: 5, Strictness: <L,U><L,A><L,U><L,A><L,A>,
                        Unfolding: InlineRule (5, True, True)
                                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                                               Data.ByteString.Internal.ByteString)
                                      (_pos' :: Data.Attoparsec.Internal.Types.Pos)
                                      (more' :: Data.Attoparsec.Internal.Types.More)
                                      (_ctx :: [GHC.Base.String])
                                      (_msg :: GHC.Base.String) ->
                                    Lib.optfieldp2
                                      @ r
                                      t'
                                      pos1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                                      more'
                                      w2
                                      w3) -}
                   = \ (t' :: Data.Attoparsec.Internal.Types.State
                                Data.ByteString.Internal.ByteString)
                       (_pos' :: Data.Attoparsec.Internal.Types.Pos)
                       (more' :: Data.Attoparsec.Internal.Types.More)
                       (_ctx :: [GHC.Base.String])
                       (_msg :: GHC.Base.String) ->
                     Lib.$woptxsp @ r t' ww more' w2 w3
                 } in
                 Lib.$woptnmp
                   @ r
                   w
                   ww
                   w1
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                      (_pos' :: Data.Attoparsec.Internal.Types.Pos)
                      (more' :: Data.Attoparsec.Internal.Types.More)
                      (_ctx :: [GHC.Base.String])
                      (_msg :: GHC.Base.String) ->
                    Lib.$woptasp @ r t' ww more' lose w3)
                   w3) -}
9292593c5aff60d4818027c31a060196
  $woptfieldpEOL ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         GHC.Types.Char
         r
    -> Data.Attoparsec.ByteString.Internal.Result r
  {- Arity: 10,
     Strictness: <L,U><L,U><L,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            GHC.Types.Char
                            r) ->
                 let {
                   $wsucc1 :: Data.Attoparsec.Internal.Types.State
                                Data.ByteString.Internal.ByteString
                              -> GHC.Prim.Int#
                              -> Data.Attoparsec.Internal.Types.More
                              -> GHC.Word.Word8
                              -> Data.Attoparsec.Internal.Types.IResult
                                   Data.ByteString.Internal.ByteString r
                     {- Arity: 4, Strictness: <L,U><L,U><L,U><L,1*U(U)>, Inline: [0] -}
                   = \ (w3 :: Data.Attoparsec.Internal.Types.State
                                Data.ByteString.Internal.ByteString)
                       (ww7 :: GHC.Prim.Int#)[OneShot]
                       (w4 :: Data.Attoparsec.Internal.Types.More)[OneShot]
                       (w5 :: GHC.Word.Word8)[OneShot] ->
                     let {
                       c2 :: GHC.Types.Char
                       = case w5 of wild { GHC.Word.W8# x# ->
                         GHC.Types.C# (GHC.Prim.chr# (GHC.Prim.word2Int# x#)) }
                     } in
                     case Data.Attoparsec.ByteString.FastSet.memberWord8
                            (case c2 of wild { GHC.Types.C# c# ->
                             GHC.Word.W8#
                               (GHC.Prim.narrow8Word# (GHC.Prim.int2Word# (GHC.Prim.ord# c#))) })
                            Lib.optfieldpEOL_ds of wild {
                       GHC.Types.False
                       -> w2
                            w3
                            (GHC.Types.I# (GHC.Prim.+# ww7 1#))
                              `cast`
                            (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                            w4
                            c2
                       GHC.Types.True
                       -> w1
                            w3
                            (GHC.Types.I# ww7)
                              `cast`
                            (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                            w4
                            (GHC.Types.[] @ GHC.Base.String)
                            Lib.optfieldpEOL4 }
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww3 (GHC.Prim.+# ww6 1#)) of wild1 {
                   GHC.Types.False
                   -> Data.Attoparsec.ByteString.Internal.$wensureSuspended
                        @ r
                        Lib.optfieldpEOL3
                        (Data.Attoparsec.ByteString.Buffer.Buf ww ww1 ww2 ww3 ww4 ww5)
                        ww6
                        w
                        w1
                          `cast`
                        (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [GHC.Base.String]
                               -> GHC.Base.String
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString r>_R)
                        (\ (t' :: Data.Attoparsec.ByteString.Buffer.Buffer)
                           (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                           (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                           (bs' :: Data.ByteString.Internal.ByteString)[OneShot] ->
                         case bs' of wild2 { Data.ByteString.Internal.PS dt7 dt8 dt9 dt10 ->
                         case GHC.Prim.readWord8OffAddr#
                                @ GHC.Prim.RealWorld
                                (GHC.Prim.plusAddr# dt7 dt9)
                                0#
                                GHC.Prim.realWorld# of ds6 { (#,#) ipv1 ipv2 ->
                         case GHC.Prim.touch#
                                @ 'GHC.Types.LiftedRep
                                @ GHC.ForeignPtr.ForeignPtrContents
                                dt8
                                ipv1 of s' { DEFAULT ->
                         case pos'
                                `cast`
                              (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                         $wsucc1
                           t'
                             `cast`
                           (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])))
                           ww8
                           more'
                           (GHC.Word.W8# ipv2) } } } })
                   GHC.Types.True
                   -> $wsucc1
                        (Data.Attoparsec.ByteString.Buffer.Buf ww ww1 ww2 ww3 ww4 ww5)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])))
                        ww6
                        w
                        (case GHC.Prim.readWord8OffAddr#
                                @ GHC.Prim.RealWorld
                                (GHC.Prim.plusAddr# ww (GHC.Prim.+# ww2 ww6))
                                0#
                                GHC.Prim.realWorld# of ds6 { (#,#) ipv1 ipv2 ->
                         case GHC.Prim.touch#
                                @ 'GHC.Types.LiftedRep
                                @ GHC.ForeignPtr.ForeignPtrContents
                                ww1
                                ipv1 of s' { DEFAULT ->
                         GHC.Word.W8# ipv2 } }) }) -}
d58b625996d66045f5e3dd02ef4ba37a
  $woptfieldstotalp ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
99b6e19efa8426e8f5bd0864e5144527
  $woptidp ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (ww :: GHC.Prim.Int#)
                   (w1 :: Data.Attoparsec.Internal.Types.More)
                   (w2 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w3 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 let {
                   nt :: GHC.Types.Int = GHC.Types.I# ww
                 } in
                 let {
                   lvl1013 :: Data.Attoparsec.Internal.Types.State
                                Data.ByteString.Internal.ByteString
                              -> Data.Attoparsec.Internal.Types.Pos
                              -> Data.Attoparsec.Internal.Types.More
                              -> Data.ByteString.Internal.ByteString
                              -> Data.Attoparsec.Internal.Types.IResult
                                   Data.ByteString.Internal.ByteString r
                     {- Arity: 4, Strictness: <L,U><S,1*U(U)><L,U><L,A>,
                        Unfolding: InlineRule (4, True, False)
                                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                                               Data.ByteString.Internal.ByteString)
                                      (pos' :: Data.Attoparsec.Internal.Types.Pos)
                                      (more' :: Data.Attoparsec.Internal.Types.More)
                                      (a1 :: Data.ByteString.Internal.ByteString) ->
                                    case pos'
                                           `cast`
                                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                                    w3
                                      t'
                                      nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                                      more'
                                      Lib.optidp_v2 }) -}
                   = \ (t' :: Data.Attoparsec.Internal.Types.State
                                Data.ByteString.Internal.ByteString)
                       (pos' :: Data.Attoparsec.Internal.Types.Pos)
                       (more' :: Data.Attoparsec.Internal.Types.More)
                       (a1 :: Data.ByteString.Internal.ByteString) ->
                     case pos'
                            `cast`
                          (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                     w3
                       t'
                       nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                       more'
                       Lib.optidp_v2 }
                 } in
                 let {
                   lvl1014 :: Data.Attoparsec.Internal.Types.State
                                Data.ByteString.Internal.ByteString
                              -> Data.Attoparsec.Internal.Types.Pos
                              -> Data.Attoparsec.Internal.Types.More
                              -> Data.ByteString.Internal.ByteString
                              -> Data.Attoparsec.Internal.Types.IResult
                                   Data.ByteString.Internal.ByteString r
                     {- Arity: 4, Strictness: <L,U><S,1*U(U)><L,U><L,A>,
                        Unfolding: InlineRule (4, True, False)
                                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                                               Data.ByteString.Internal.ByteString)
                                      (pos' :: Data.Attoparsec.Internal.Types.Pos)
                                      (more' :: Data.Attoparsec.Internal.Types.More)
                                      (a1 :: Data.ByteString.Internal.ByteString) ->
                                    case pos'
                                           `cast`
                                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                                    w3
                                      t'
                                      nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                                      more'
                                      Lib.optidp_v1 }) -}
                   = \ (t' :: Data.Attoparsec.Internal.Types.State
                                Data.ByteString.Internal.ByteString)
                       (pos' :: Data.Attoparsec.Internal.Types.Pos)
                       (more' :: Data.Attoparsec.Internal.Types.More)
                       (a1 :: Data.ByteString.Internal.ByteString) ->
                     case pos'
                            `cast`
                          (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                     w3
                       t'
                       nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                       more'
                       Lib.optidp_v1 }
                 } in
                 let {
                   lose :: Data.Attoparsec.Internal.Types.Failure
                             Data.ByteString.Internal.ByteString
                             (Data.Attoparsec.Internal.Types.State
                                Data.ByteString.Internal.ByteString)
                             r
                     {- Arity: 5, Strictness: <L,U><L,A><L,U><L,A><L,A>,
                        Unfolding: InlineRule (5, True, True)
                                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                                               Data.ByteString.Internal.ByteString)
                                      (_pos' :: Data.Attoparsec.Internal.Types.Pos)
                                      (more' :: Data.Attoparsec.Internal.Types.More)
                                      (_ctx :: [GHC.Base.String])
                                      (_msg :: GHC.Base.String) ->
                                    Lib.optidp_m2
                                      `cast`
                                    (Data.Attoparsec.Internal.Types.N:Parser[0]
                                         <Data.ByteString.Internal.ByteString>_N
                                         <Data.ByteString.Internal.ByteString>_R)
                                      @ r
                                      t'
                                      nt `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                                      more'
                                      w2
                                      lvl1014) -}
                   = \ (t' :: Data.Attoparsec.Internal.Types.State
                                Data.ByteString.Internal.ByteString)
                       (_pos' :: Data.Attoparsec.Internal.Types.Pos)
                       (more' :: Data.Attoparsec.Internal.Types.More)
                       (_ctx :: [GHC.Base.String])
                       (_msg :: GHC.Base.String) ->
                     Lib.optidp_m2
                       `cast`
                     (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)
                       @ r
                       t'
                       nt `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                       more'
                       w2
                       lvl1014
                 } in
                 Lib.optidp_m1
                   `cast`
                 (Data.Attoparsec.Internal.Types.N:Parser[0]
                      <Data.ByteString.Internal.ByteString>_N
                      <Data.ByteString.Internal.ByteString>_R)
                   @ r
                   w
                   nt `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                   w1
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                      (_pos' :: Data.Attoparsec.Internal.Types.Pos)
                      (more' :: Data.Attoparsec.Internal.Types.More)
                      (_ctx :: [GHC.Base.String])
                      (_msg :: GHC.Base.String) ->
                    Lib.optidp_m
                      `cast`
                    (Data.Attoparsec.Internal.Types.N:Parser[0]
                         <Data.ByteString.Internal.ByteString>_N
                         <Data.ByteString.Internal.ByteString>_R)
                      @ r
                      t'
                      nt `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                      more'
                      lose
                      lvl1013)
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)
                      (more' :: Data.Attoparsec.Internal.Types.More)
                      (a1 :: Data.ByteString.Internal.ByteString) ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                    w3
                      t'
                      nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                      more'
                      Lib.optidp_v })) -}
bacbc2819e40effca4a4575b9da88390
  $woptnmp ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
d9a76d20525e8b1e715cd342bee96fd2
  $woptxsp ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
b975294da0f7fe8b5aef17ba4fe8e9e6
  $wp ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
910b52216ca4c19f3134fb100f1494d9
  $wp1 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.PairedAln
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.PairedAln
                            r) ->
                 Lib.$whdralnparserEOL
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                      (_pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (_ctx :: [GHC.Base.String])[OneShot]
                      (_msg :: GHC.Base.String)[OneShot] ->
                    case t'
                           `cast`
                         (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww7 { Data.Attoparsec.ByteString.Buffer.Buf ww8 ww9 ww10 ww11 ww12 ww13 ->
                    Lib.$wpairedalnparser
                      @ r
                      ww8
                      ww9
                      ww10
                      ww11
                      ww12
                      ww13
                      ww6
                      more'
                      w1
                      w2 })
                   w2) -}
b4c405b8605775e690eb49ac1bef2941
  $wp2 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.AlignedRead
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.AlignedRead
                            r) ->
                 Lib.$whdrSEalnparserEOL
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                      (_pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (_ctx :: [GHC.Base.String])[OneShot]
                      (_msg :: GHC.Base.String)[OneShot] ->
                    case t'
                           `cast`
                         (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww7 { Data.Attoparsec.ByteString.Buffer.Buf ww8 ww9 ww10 ww11 ww12 ww13 ->
                    Lib.$walnparserEOL
                      @ r
                      ww8
                      ww9
                      ww10
                      ww11
                      ww12
                      ww13
                      ww6
                      more'
                      w1
                      w2 })
                   w2) -}
dec9112ce39802ba9e39ee8b4279e76f
  $wpairedalnparser ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.PairedAln
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
f51e09b456713643881331a2f64c6d1d
  $wparseAln ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Either.Either GHC.Base.String Lib.AlignedRead
  {- Arity: 4, Strictness: <S,U><L,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.$walnparser
                        @ Lib.AlignedRead
                        ww
                        ww1
                        ww2
                        ww3
                        ww3
                        0#
                        0#
                        Data.Attoparsec.Internal.Types.Complete
                        (Data.Attoparsec.ByteString.Internal.failK @ Lib.AlignedRead)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [GHC.Base.String]
                               -> GHC.Base.String
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString Lib.AlignedRead>_R)
                        (Data.Attoparsec.ByteString.Internal.successK @ Lib.AlignedRead)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> Lib.AlignedRead
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString
                                    Lib.AlignedRead>_R) of wild {
                   Data.Attoparsec.Internal.Types.Fail ds6 ds7 err
                   -> case ds7 of wild1 {
                        [] -> Data.Either.Left @ GHC.Base.String @ Lib.AlignedRead err
                        : ipv ipv1
                        -> Data.Either.Left
                             @ [GHC.Types.Char]
                             @ Lib.AlignedRead
                             (GHC.Base.++
                                @ GHC.Types.Char
                                (Data.OldList.intercalate_$spoly_go
                                   @ GHC.Types.Char
                                   ipv
                                   (Data.OldList.prependToAll
                                      @ [GHC.Types.Char]
                                      Lib.parseAln3
                                      ipv1))
                                (GHC.CString.unpackAppendCString# Lib.parseAln2 err)) }
                   Data.Attoparsec.Internal.Types.Partial ipv -> Lib.parseAln1
                   Data.Attoparsec.Internal.Types.Done ds6 a1
                   -> Data.Either.Right @ GHC.Base.String @ Lib.AlignedRead a1 }) -}
af60e71bd375d7ead05e31eb1d091974
  $wparseBED ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Either.Either GHC.Base.String Lib.BedRecord
  {- Arity: 4, Strictness: <S,U><L,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.$wbedrecparser
                        @ Lib.BedRecord
                        ww
                        ww1
                        ww2
                        ww3
                        ww3
                        0#
                        0#
                        Data.Attoparsec.Internal.Types.Complete
                        (Data.Attoparsec.ByteString.Internal.failK @ Lib.BedRecord)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [GHC.Base.String]
                               -> GHC.Base.String
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString Lib.BedRecord>_R)
                        (Data.Attoparsec.ByteString.Internal.successK @ Lib.BedRecord)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> Lib.BedRecord
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString Lib.BedRecord>_R) of wild {
                   Data.Attoparsec.Internal.Types.Fail ds6 ds7 err
                   -> case ds7 of wild1 {
                        [] -> Data.Either.Left @ GHC.Base.String @ Lib.BedRecord err
                        : ipv ipv1
                        -> Data.Either.Left
                             @ [GHC.Types.Char]
                             @ Lib.BedRecord
                             (GHC.Base.++
                                @ GHC.Types.Char
                                (Data.OldList.intercalate_$spoly_go
                                   @ GHC.Types.Char
                                   ipv
                                   (Data.OldList.prependToAll
                                      @ [GHC.Types.Char]
                                      Lib.parseAln3
                                      ipv1))
                                (GHC.CString.unpackAppendCString# Lib.parseAln2 err)) }
                   Data.Attoparsec.Internal.Types.Partial ipv -> Lib.parseBED1
                   Data.Attoparsec.Internal.Types.Done ds6 a1
                   -> Data.Either.Right @ GHC.Base.String @ Lib.BedRecord a1 }) -}
dd9d5349053a34349aeae7cff6730f91
  $wparseBEDPE ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Either.Either GHC.Base.String Lib.BEDPE
  {- Arity: 4, Strictness: <S,U><L,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.$wbedPEparser
                        @ Lib.BEDPE
                        ww
                        ww1
                        ww2
                        ww3
                        ww3
                        0#
                        0#
                        Data.Attoparsec.Internal.Types.Complete
                        (Data.Attoparsec.ByteString.Internal.failK @ Lib.BEDPE)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [GHC.Base.String]
                               -> GHC.Base.String
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString Lib.BEDPE>_R)
                        (Data.Attoparsec.ByteString.Internal.successK @ Lib.BEDPE)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> Lib.BEDPE
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString Lib.BEDPE>_R) of wild {
                   Data.Attoparsec.Internal.Types.Fail ds6 ds7 err
                   -> case ds7 of wild1 {
                        [] -> Data.Either.Left @ GHC.Base.String @ Lib.BEDPE err
                        : ipv ipv1
                        -> Data.Either.Left
                             @ [GHC.Types.Char]
                             @ Lib.BEDPE
                             (GHC.Base.++
                                @ GHC.Types.Char
                                (Data.OldList.intercalate_$spoly_go
                                   @ GHC.Types.Char
                                   ipv
                                   (Data.OldList.prependToAll
                                      @ [GHC.Types.Char]
                                      Lib.parseAln3
                                      ipv1))
                                (GHC.CString.unpackAppendCString# Lib.parseAln2 err)) }
                   Data.Attoparsec.Internal.Types.Partial ipv -> Lib.parseBEDPE1
                   Data.Attoparsec.Internal.Types.Done ds6 a1
                   -> Data.Either.Right @ GHC.Base.String @ Lib.BEDPE a1 }) -}
331d11363c023abd3fec475e3dfebc95
  $wparseCigar ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                            r) ->
                 let {
                   ww7 :: GHC.Types.Int = GHC.Types.I# ww6
                 } in
                 let {
                   w5 :: Data.Attoparsec.Internal.Types.Failure
                           Data.ByteString.Internal.ByteString
                           (Data.Attoparsec.Internal.Types.State
                              Data.ByteString.Internal.ByteString)
                           r
                     {- Arity: 5,
                        Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><L,A><L,U><L,A><L,A>,
                        Unfolding: InlineRule (5, True, True)
                                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                                               Data.ByteString.Internal.ByteString)
                                      (_pos' :: Data.Attoparsec.Internal.Types.Pos)
                                      (more' :: Data.Attoparsec.Internal.Types.More)
                                      (_ctx :: [GHC.Base.String])
                                      (_msg :: GHC.Base.String) ->
                                    Lib.checkCigarSeqlen2
                                      @ r
                                      t'
                                      ww7 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                                      more'
                                      w1
                                      w2) -}
                   = \ (t' :: Data.Attoparsec.Internal.Types.State
                                Data.ByteString.Internal.ByteString)
                       (_pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                       (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                       (_ctx :: [GHC.Base.String])[OneShot]
                       (_msg :: GHC.Base.String)[OneShot] ->
                     case t'
                            `cast`
                          (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww8 { Data.Attoparsec.ByteString.Buffer.Buf ww9 ww10 ww11 ww12 ww13 ww14 ->
                     Lib.$wstarcigarP @ r ww9 ww10 ww11 ww12 ww13 ww14 ww6 more' w1 w2 }
                 } in
                 Lib.$wp
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w
                   w5
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (a1 :: (GHC.Integer.Type.Integer,
                              Data.ByteString.Internal.ByteString))[OneShot] ->
                    case t'
                           `cast`
                         (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww8 { Data.Attoparsec.ByteString.Buffer.Buf ww9 ww10 ww11 ww12 ww13 ww14 ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww15 { GHC.Types.I# ww16 ->
                    Lib.$wmany_v
                      @ r
                      ww9
                      ww10
                      ww11
                      ww12
                      ww13
                      ww14
                      ww16
                      more'
                      (\ (t'1 :: Data.Attoparsec.Internal.Types.State
                                   Data.ByteString.Internal.ByteString)
                         (pos'1 :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                         (more'1 :: Data.Attoparsec.Internal.Types.More)[OneShot]
                         (a3 :: [(GHC.Integer.Type.Integer,
                                  Data.ByteString.Internal.ByteString)])[OneShot] ->
                       case pos'1
                              `cast`
                            (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                       w2
                         t'1
                         nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                         more'1
                         (GHC.Types.:
                            @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                            a1
                            a3) }) } })) -}
12d4738da3107ce2a4f11bc9bb88c563
  $wparsePairedAlns ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [Lib.PairedAln]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
c94aa71c78df12bb1ff33a85ee53f949
  $wparsePairedAlns' ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [[Lib.AlignedRead]]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
316c8af17c40d070fae4f0a1dd072fdf
  $wparsePairedAlnsFromSAM ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Either.Either GHC.Base.String [Lib.PairedAln]
  {- Arity: 4, Strictness: <S,U><L,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.$wparsePairedAlns
                        @ [Lib.PairedAln]
                        ww
                        ww1
                        ww2
                        ww3
                        ww3
                        0#
                        0#
                        Data.Attoparsec.Internal.Types.Complete
                        (Data.Attoparsec.ByteString.Internal.failK @ [Lib.PairedAln])
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [GHC.Base.String]
                               -> GHC.Base.String
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString [Lib.PairedAln]>_R)
                        (Data.Attoparsec.ByteString.Internal.successK @ [Lib.PairedAln])
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [Lib.PairedAln]
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString
                                    [Lib.PairedAln]>_R) of wild {
                   Data.Attoparsec.Internal.Types.Fail ds6 ds7 err
                   -> case ds7 of wild1 {
                        [] -> Data.Either.Left @ GHC.Base.String @ [Lib.PairedAln] err
                        : ipv ipv1
                        -> Data.Either.Left
                             @ [GHC.Types.Char]
                             @ [Lib.PairedAln]
                             (GHC.Base.++
                                @ GHC.Types.Char
                                (Data.OldList.intercalate_$spoly_go
                                   @ GHC.Types.Char
                                   ipv
                                   (Data.OldList.prependToAll
                                      @ [GHC.Types.Char]
                                      Lib.parseAln3
                                      ipv1))
                                (GHC.CString.unpackAppendCString# Lib.parseAln2 err)) }
                   Data.Attoparsec.Internal.Types.Partial ipv
                   -> Lib.parsePairedAlnsFromSAM1
                   Data.Attoparsec.Internal.Types.Done ds6 a1
                   -> Data.Either.Right @ GHC.Base.String @ [Lib.PairedAln] a1 }) -}
e64e108cfca4d7a4ecb6347e8bc76c63
  $wparsePairedAlnsOrHdr ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [Lib.PairedAln]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [Lib.PairedAln]
                            r) ->
                 Lib.$wp1
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w
                   w1
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (a1 :: Lib.PairedAln)[OneShot] ->
                    case t'
                           `cast`
                         (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww7 { Data.Attoparsec.ByteString.Buffer.Buf ww8 ww9 ww10 ww11 ww12 ww13 ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww14 { GHC.Types.I# ww15 ->
                    Lib.$wmany_v4
                      @ r
                      ww8
                      ww9
                      ww10
                      ww11
                      ww12
                      ww13
                      ww15
                      more'
                      (\ (t'1 :: Data.Attoparsec.Internal.Types.State
                                   Data.ByteString.Internal.ByteString)
                         (pos'1 :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                         (more'1 :: Data.Attoparsec.Internal.Types.More)[OneShot]
                         (a3 :: [Lib.PairedAln])[OneShot] ->
                       case pos'1
                              `cast`
                            (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                       w2
                         t'1
                         nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                         more'1
                         (GHC.Types.: @ Lib.PairedAln a1 a3) }) } })) -}
b74a794d7baec6ab5771150866b7ebb5
  $wparseReadsetsFromSAM ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> [[Lib.AlignedRead]]
  {- Arity: 4, Strictness: <S,U><L,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Lib.$wparsePairedAlns'
                        @ [[Lib.AlignedRead]]
                        ww
                        ww1
                        ww2
                        ww3
                        ww3
                        0#
                        0#
                        Data.Attoparsec.Internal.Types.Complete
                        (Data.Attoparsec.ByteString.Internal.failK @ [[Lib.AlignedRead]])
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [GHC.Base.String]
                               -> GHC.Base.String
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString [[Lib.AlignedRead]]>_R)
                        (Data.Attoparsec.ByteString.Internal.successK
                           @ [[Lib.AlignedRead]])
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [[Lib.AlignedRead]]
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString
                                    [[Lib.AlignedRead]]>_R) of wild {
                   Data.Attoparsec.Internal.Types.Fail ds6 ds7 err
                   -> case ds7 of wild1 { DEFAULT ->
                      GHC.Types.[] @ [Lib.AlignedRead] }
                   Data.Attoparsec.Internal.Types.Partial ipv
                   -> case Lib.parseReadsetsFromSAM1 ret_ty [[Lib.AlignedRead]] of {}
                   Data.Attoparsec.Internal.Types.Done ds6 a1 -> a1 }) -}
30aef5cfd01644272bba2f6ad5022259
  $wparseSingleAlnsOrHdr ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [Lib.AlignedRead]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [Lib.AlignedRead]
                            r) ->
                 Lib.$wp2
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w
                   w1
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (a1 :: Lib.AlignedRead)[OneShot] ->
                    case t'
                           `cast`
                         (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww7 { Data.Attoparsec.ByteString.Buffer.Buf ww8 ww9 ww10 ww11 ww12 ww13 ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww14 { GHC.Types.I# ww15 ->
                    Lib.$wmany_v5
                      @ r
                      ww8
                      ww9
                      ww10
                      ww11
                      ww12
                      ww13
                      ww15
                      more'
                      (\ (t'1 :: Data.Attoparsec.Internal.Types.State
                                   Data.ByteString.Internal.ByteString)
                         (pos'1 :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                         (more'1 :: Data.Attoparsec.Internal.Types.More)[OneShot]
                         (a3 :: [Lib.AlignedRead])[OneShot] ->
                       case pos'1
                              `cast`
                            (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                       w2
                         t'1
                         nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                         more'1
                         (GHC.Types.: @ Lib.AlignedRead a1 a3) }) } })) -}
c247582c2ff95308e82d15b4e51d5adb
  $wparsechkBED ::
    GHC.Prim.Int#
    -> GHC.Prim.Int# -> [GHC.Types.Int] -> [GHC.Types.Char]
  {- Arity: 3, Strictness: <S,U><S,U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.Int#)
                   (w :: [GHC.Types.Int]) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==# ww ww1) of wild {
                   GHC.Types.False
                   -> GHC.CString.unpackAppendCString#
                        Lib.createprimerbedmaps13
                        (case GHC.List.$wlenAcc @ GHC.Types.Int w 0# of ww2 { DEFAULT ->
                         case GHC.Show.$wshowSignedInt
                                0#
                                ww2
                                (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                         GHC.Base.++
                           @ GHC.Types.Char
                           (GHC.Types.: @ GHC.Types.Char ww5 ww6)
                           (GHC.CString.unpackAppendCString#
                              Lib.createprimerbedmaps12
                              (case GHC.Show.$wshowSignedInt
                                      0#
                                      ww
                                      (GHC.Types.[] @ GHC.Types.Char) of ww3 { (#,#) ww7 ww8 ->
                               GHC.Base.++
                                 @ GHC.Types.Char
                                 (GHC.Types.: @ GHC.Types.Char ww7 ww8)
                                 Lib.parsechkBED3 })) } })
                   GHC.Types.True
                   -> GHC.CString.unpackAppendCString#
                        Lib.createprimerbedmaps9
                        (case GHC.Show.$wshowSignedInt
                                0#
                                ww
                                (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                         GHC.Base.++
                           @ GHC.Types.Char
                           (GHC.Types.: @ GHC.Types.Char ww5 ww6)
                           Lib.parsechkBED1 }) }) -}
a34a538ff4a0bf06c0e095c0bbc3f2b6
  $wparsechkMaster ::
    GHC.Prim.Int#
    -> GHC.Prim.Int# -> [GHC.Types.Int] -> [GHC.Types.Char]
  {- Arity: 3, Strictness: <S,U><S,U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.Int#)
                   (w :: [GHC.Types.Int]) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==# ww ww1) of wild {
                   GHC.Types.False
                   -> GHC.CString.unpackAppendCString#
                        Lib.createprimerbedmaps13
                        (case GHC.List.$wlenAcc @ GHC.Types.Int w 0# of ww2 { DEFAULT ->
                         case GHC.Show.$wshowSignedInt
                                0#
                                ww2
                                (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                         GHC.Base.++
                           @ GHC.Types.Char
                           (GHC.Types.: @ GHC.Types.Char ww5 ww6)
                           (GHC.CString.unpackAppendCString#
                              Lib.createprimerbedmaps12
                              (case GHC.Show.$wshowSignedInt
                                      0#
                                      ww
                                      (GHC.Types.[] @ GHC.Types.Char) of ww3 { (#,#) ww7 ww8 ->
                               GHC.Base.++
                                 @ GHC.Types.Char
                                 (GHC.Types.: @ GHC.Types.Char ww7 ww8)
                                 Lib.createprimerbedmaps10 })) } })
                   GHC.Types.True
                   -> GHC.CString.unpackAppendCString#
                        Lib.createprimerbedmaps9
                        (case GHC.Show.$wshowSignedInt
                                0#
                                ww
                                (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                         GHC.Base.++
                           @ GHC.Types.Char
                           (GHC.Types.: @ GHC.Types.Char ww5 ww6)
                           Lib.createprimerbedmaps7 }) }) -}
a49310f6e87c437368bb640c68f55291
  $wparsechkSAM ::
    GHC.Prim.Int#
    -> GHC.Prim.Int# -> [GHC.Types.Int] -> [GHC.Types.Char]
  {- Arity: 3, Strictness: <S,U><S,U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.Int#)
                   (w :: [GHC.Types.Int]) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==# ww ww1) of wild {
                   GHC.Types.False
                   -> GHC.CString.unpackAppendCString#
                        Lib.createprimerbedmaps13
                        (case GHC.List.$wlenAcc @ GHC.Types.Int w 0# of ww2 { DEFAULT ->
                         case GHC.Show.$wshowSignedInt
                                0#
                                ww2
                                (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                         GHC.Base.++
                           @ GHC.Types.Char
                           (GHC.Types.: @ GHC.Types.Char ww5 ww6)
                           (GHC.CString.unpackAppendCString#
                              Lib.createprimerbedmaps12
                              (case GHC.Show.$wshowSignedInt
                                      0#
                                      ww
                                      (GHC.Types.[] @ GHC.Types.Char) of ww3 { (#,#) ww7 ww8 ->
                               GHC.Base.++
                                 @ GHC.Types.Char
                                 (GHC.Types.: @ GHC.Types.Char ww7 ww8)
                                 Lib.parsechkSAM3 })) } })
                   GHC.Types.True
                   -> GHC.CString.unpackAppendCString#
                        Lib.createprimerbedmaps9
                        (case GHC.Show.$wshowSignedInt
                                0#
                                ww
                                (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                         GHC.Base.++
                           @ GHC.Types.Char
                           (GHC.Types.: @ GHC.Types.Char ww5 ww6)
                           Lib.parsechkSAM1 }) }) -}
4c96258aa9e4aa1e7da4931f4d8424cc
  $wparsemIDstring ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.ByteString.Internal.ByteString
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 let {
                   midvals :: [Data.ByteString.Internal.ByteString]
                   = case ww3 of ds6 {
                       DEFAULT
                       -> let {
                            lvl1013 :: GHC.Ptr.Ptr GHC.Word.Word8
                            = GHC.Ptr.Ptr @ GHC.Word.Word8 ww
                          } in
                          letrec {
                            $wsplitLoop :: (GHC.Prim.Word# -> GHC.Types.Bool)
                                           -> GHC.Ptr.Ptr GHC.Word.Word8
                                           -> GHC.Prim.Int#
                                           -> GHC.Types.Int
                                           -> GHC.Prim.Int#
                                           -> GHC.ForeignPtr.ForeignPtr GHC.Word.Word8
                                           -> GHC.Prim.State# GHC.Prim.RealWorld
                                           -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                 [Data.ByteString.Internal.ByteString] #)
                              {- Arity: 7,
                                 Strictness: <L,U><L,1*U(U)><S,U><L,1*U(U)><S,U><L,U(U,U)><S,U>,
                                 Inline: [0] -}
                            = \ (w :: GHC.Prim.Word# -> GHC.Types.Bool)
                                (w1 :: GHC.Ptr.Ptr GHC.Word.Word8)
                                (ww4 :: GHC.Prim.Int#)
                                (w2 :: GHC.Types.Int)
                                (ww5 :: GHC.Prim.Int#)
                                (w3 :: GHC.ForeignPtr.ForeignPtr GHC.Word.Word8)
                                (w4 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                              case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# ww4 ww5) of wild1 {
                                GHC.Types.False
                                -> case w1 of wild2 { GHC.Ptr.Ptr a ->
                                   case w2 of wild3 { GHC.Types.I# x1 ->
                                   case GHC.Prim.readWord8OffAddr#
                                          @ GHC.Prim.RealWorld
                                          a
                                          (GHC.Prim.+# x1 ww4)
                                          w4 of ds7 { (#,#) ipv ipv1 ->
                                   case w ipv1 of wild5 {
                                     GHC.Types.False
                                     -> $wsplitLoop w wild2 (GHC.Prim.+# ww4 1#) wild3 ww5 w3 ipv
                                     GHC.Types.True
                                     -> (# ipv,
                                           GHC.Types.:
                                             @ Data.ByteString.Internal.ByteString
                                             (case w3 of dt { GHC.ForeignPtr.ForeignPtr dt1 dt2 ->
                                              Data.ByteString.Internal.PS dt1 dt2 x1 ww4 })
                                             (case w of pred'1 { DEFAULT ->
                                              case w3 of fp'1 { GHC.ForeignPtr.ForeignPtr ipv2 ipv3 ->
                                              case $wsplitLoop
                                                     pred'1
                                                     lvl1013
                                                     0#
                                                     (GHC.Types.I#
                                                        (GHC.Prim.+# (GHC.Prim.+# x1 ww4) 1#))
                                                     (GHC.Prim.-# (GHC.Prim.-# ww5 ww4) 1#)
                                                     fp'1
                                                     GHC.Prim.realWorld# of ds8 { (#,#) ipv4 ipv5 ->
                                              case GHC.Prim.touch#
                                                     @ 'GHC.Types.LiftedRep
                                                     @ GHC.ForeignPtr.ForeignPtrContents
                                                     ww1
                                                     ipv4 of s' { DEFAULT ->
                                              ipv5 } } } }) #) } } } }
                                GHC.Types.True
                                -> (# w4,
                                      GHC.Types.:
                                        @ Data.ByteString.Internal.ByteString
                                        (case w3 of dt { GHC.ForeignPtr.ForeignPtr dt1 dt2 ->
                                         case w2 of dt3 { GHC.Types.I# dt4 ->
                                         Data.ByteString.Internal.PS dt1 dt2 dt4 ww4 } })
                                        (GHC.Types.[] @ Data.ByteString.Internal.ByteString) #) }
                          } in
                          case $wsplitLoop
                                 Lib.parsemIDstring2
                                 lvl1013
                                 0#
                                 (GHC.Types.I# ww2)
                                 ds6
                                 (GHC.ForeignPtr.ForeignPtr @ GHC.Word.Word8 ww ww1)
                                 GHC.Prim.realWorld# of ds7 { (#,#) ipv ipv1 ->
                          case GHC.Prim.touch#
                                 @ 'GHC.Types.LiftedRep
                                 @ GHC.ForeignPtr.ForeignPtrContents
                                 ww1
                                 ipv of s' { DEFAULT ->
                          Lib.parsemIDstring_go ipv1 } }
                       0# -> GHC.Types.[] @ Data.ByteString.Internal.ByteString }
                 } in
                 case GHC.List.$wlenAcc
                        @ Data.ByteString.Internal.ByteString
                        midvals
                        0# of ww4 { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<=# ww4 0#) of wild {
                   GHC.Types.False
                   -> GHC.List.head @ Data.ByteString.Internal.ByteString midvals
                   GHC.Types.True -> Lib.parsemIDstring1 } }) -}
d66a2b6173379854a2294c23f13f6e6f
  $wparsesignedint ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Integer.Type.Integer
  {- Arity: 4, Strictness: <S,U><L,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Data.Attoparsec.ByteString.Char8.$wdouble
                        @ GHC.Types.Double
                        ww
                        ww1
                        ww2
                        ww3
                        ww3
                        0#
                        0#
                        Data.Attoparsec.Internal.Types.Complete
                        (Data.Attoparsec.ByteString.Internal.failK @ GHC.Types.Double)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [GHC.Base.String]
                               -> GHC.Base.String
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString GHC.Types.Double>_R)
                        (Data.Attoparsec.ByteString.Internal.successK @ GHC.Types.Double)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> GHC.Types.Double
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString
                                    GHC.Types.Double>_R) of wild {
                   Data.Attoparsec.Internal.Types.Fail ds6 ds7 err
                   -> case ds7 of wild1 { DEFAULT ->
                      case GHC.List.badHead ret_ty GHC.Integer.Type.Integer of {} }
                   Data.Attoparsec.Internal.Types.Partial ipv
                   -> case Lib.parsesignedint1 ret_ty GHC.Integer.Type.Integer of {}
                   Data.Attoparsec.Internal.Types.Done ds6 a1
                   -> case a1 of wild1 { GHC.Types.D# x ->
                      case GHC.Integer.Type.decodeDoubleInteger
                             x of ds7 { (#,#) ipv ipv1 ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<# ipv1 0#) of wild2 {
                        GHC.Types.False -> GHC.Integer.Type.shiftLInteger ipv ipv1
                        GHC.Types.True
                        -> let {
                             s :: GHC.Prim.Int# = GHC.Prim.negateInt# ipv1
                           } in
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.># s 52#) of wild3 {
                             GHC.Types.False
                             -> case GHC.Integer.Type.integerToInt ipv of n { DEFAULT ->
                                GHC.Integer.Type.smallInteger (GHC.Prim.uncheckedIShiftRA# n s) }
                             GHC.Types.True
                             -> case GHC.Integer.Type.ltInteger#
                                       ipv
                                       Lib.defaultBed2 of wild4 { DEFAULT ->
                                case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild4 of wild5 {
                                  GHC.Types.False -> Lib.defaultBed2
                                  GHC.Types.True -> Lib.updateTrimdAlnFields1 } } } } } } }) -}
0009e85585b3bc1f88cab7415cf2663c
  $wpoly_go1 ::
    GHC.Prim.Int#
    -> Data.Map.Internal.Map GHC.Types.Int a
    -> [(GHC.Types.Int, a)]
    -> Data.Map.Internal.Map GHC.Types.Int a
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
fce05fe4f842c1c3813715253b22ae2f
  $wpoly_go8 ::
    GHC.Prim.Int#
    -> Data.Map.Internal.Map Lib.UChr a
    -> [(Lib.UChr, a)]
    -> Data.Map.Internal.Map Lib.UChr a
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
93e74aba6e7747b32847f36b5a3bf416
  $wsafemapcig ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Base.Maybe Lib.CigarMap
  {- Arity: 4, Strictness: <S,U><L,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 let {
                   cigtups :: [[(GHC.Integer.Type.Integer,
                                 Data.ByteString.Internal.ByteString)]]
                   = case Lib.$wparseCigar
                            @ [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                            ww
                            ww1
                            ww2
                            ww3
                            ww3
                            0#
                            0#
                            Data.Attoparsec.Internal.Types.Complete
                            (Data.Attoparsec.ByteString.Internal.failK
                               @ [(GHC.Integer.Type.Integer,
                                   Data.ByteString.Internal.ByteString)])
                              `cast`
                            (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                             ->_R <Data.Attoparsec.Internal.Types.Pos
                                   -> Data.Attoparsec.Internal.Types.More
                                   -> [GHC.Base.String]
                                   -> GHC.Base.String
                                   -> Data.Attoparsec.Internal.Types.IResult
                                        Data.ByteString.Internal.ByteString
                                        [(GHC.Integer.Type.Integer,
                                          Data.ByteString.Internal.ByteString)]>_R)
                            (Data.Attoparsec.ByteString.Internal.successK
                               @ [(GHC.Integer.Type.Integer,
                                   Data.ByteString.Internal.ByteString)])
                              `cast`
                            (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                             ->_R <Data.Attoparsec.Internal.Types.Pos
                                   -> Data.Attoparsec.Internal.Types.More
                                   -> [(GHC.Integer.Type.Integer,
                                        Data.ByteString.Internal.ByteString)]
                                   -> Data.Attoparsec.Internal.Types.IResult
                                        Data.ByteString.Internal.ByteString
                                        [(GHC.Integer.Type.Integer,
                                          Data.ByteString.Internal.ByteString)]>_R) of wild {
                       Data.Attoparsec.Internal.Types.Fail ds6 ds7 err
                       -> case ds7 of wild1 { DEFAULT ->
                          GHC.Types.[]
                            @ [(GHC.Integer.Type.Integer,
                                Data.ByteString.Internal.ByteString)] }
                       Data.Attoparsec.Internal.Types.Partial ipv
                       -> case Lib.checkCigarSeqlen1
                          ret_ty [[(GHC.Integer.Type.Integer,
                                    Data.ByteString.Internal.ByteString)]]
                          of {}
                       Data.Attoparsec.Internal.Types.Done ds6 a1
                       -> GHC.Types.:
                            @ [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                            a1
                            (GHC.Types.[]
                               @ [(GHC.Integer.Type.Integer,
                                   Data.ByteString.Internal.ByteString)]) }
                 } in
                 case GHC.List.$wlenAcc
                        @ [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                        cigtups
                        0# of ww4 { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.># ww4 0#) of wild {
                   GHC.Types.False -> GHC.Base.Nothing @ Lib.CigarMap
                   GHC.Types.True
                   -> GHC.Base.Just
                        @ [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                        (GHC.List.head
                           @ [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                           cigtups) } }) -}
58ab547486eefa9a8b3b16ef24f97a63
  $wsamhdrparser ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <L,U><L,U><L,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
ba676e81dd67c8428dc6cfc832e10602
  $wsamhdrparserEOL ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <L,U><L,U><L,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
0a23161331e42a77126ec8db28539f4a
  $wseqp ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
45294f682dce7aca6935ae848f120947
  $wshiftcrds ::
    GHC.Integer.Type.Integer
    -> GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> (# GHC.Integer.Type.Integer,
          Data.ByteString.Internal.ByteString #)
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Integer.Type.Integer)
                   (ww1 :: GHC.Prim.Addr#)
                   (ww2 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#) ->
                 case Lib.shiftcrds4 of wild1 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                 let {
                   wild :: Data.ByteString.Internal.ByteString
                   = Data.ByteString.Internal.PS ww1 ww2 ww3 ww4
                 } in
                 let {
                   $j :: (# GHC.Integer.Type.Integer,
                            Data.ByteString.Internal.ByteString #)
                     <join 0>
                   = case Lib.shiftcrds3 of wild2 { Data.ByteString.Internal.PS dt1 dt2 dt3 dt10 ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim./=# ww4 dt10) of wild3 {
                       GHC.Types.False
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.eqAddr# ww1 dt1) of wild4 {
                            GHC.Types.False
                            -> case Data.ByteString.Internal.$wcompareBytes
                                      ww1
                                      ww2
                                      ww3
                                      ww4
                                      dt1
                                      dt2
                                      dt3
                                      dt10 of wild5 {
                                 DEFAULT
                                 -> (# GHC.Integer.Type.plusInteger ww Lib.shiftcrds2, wild #)
                                 GHC.Types.EQ
                                 -> (# GHC.Integer.Type.plusInteger ww Lib.shiftcrds1, wild #) }
                            GHC.Types.True
                            -> case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.==# ww3 dt3) of wild5 {
                                 GHC.Types.False
                                 -> case Data.ByteString.Internal.$wcompareBytes
                                           ww1
                                           ww2
                                           ww3
                                           ww4
                                           dt1
                                           dt2
                                           dt3
                                           dt10 of wild6 {
                                      DEFAULT
                                      -> (# GHC.Integer.Type.plusInteger ww Lib.shiftcrds2, wild #)
                                      GHC.Types.EQ
                                      -> (# GHC.Integer.Type.plusInteger ww Lib.shiftcrds1,
                                            wild #) }
                                 GHC.Types.True
                                 -> (# GHC.Integer.Type.plusInteger ww Lib.shiftcrds1, wild #) } }
                       GHC.Types.True
                       -> (# GHC.Integer.Type.plusInteger ww Lib.shiftcrds2, wild #) } }
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim./=# ww4 dt7) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqAddr# ww1 dt4) of wild3 {
                        GHC.Types.False
                        -> case Data.ByteString.Internal.$wcompareBytes
                                  ww1
                                  ww2
                                  ww3
                                  ww4
                                  dt4
                                  dt5
                                  dt6
                                  dt7 of wild4 {
                             DEFAULT -> $j GHC.Types.EQ -> (# ww, wild #) }
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# ww3 dt6) of wild4 {
                             GHC.Types.False
                             -> case Data.ByteString.Internal.$wcompareBytes
                                       ww1
                                       ww2
                                       ww3
                                       ww4
                                       dt4
                                       dt5
                                       dt6
                                       dt7 of wild5 {
                                  DEFAULT -> $j GHC.Types.EQ -> (# ww, wild #) }
                             GHC.Types.True -> (# ww, wild #) } }
                   GHC.Types.True -> $j } }) -}
3b1428f4b07c2c5e36c032a3e22fa6f5
  $wsoftclipbase ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> GHC.Types.Bool
    -> (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer,
          Data.ByteString.Internal.ByteString,
          Data.ByteString.Internal.ByteString, GHC.Types.Bool #)
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U(U,U,U,U)><S,1*U>,
     Inline: [0] -}
0bfc22b25be5b34a4704f5ab58e1283f
  $wspaces ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 8, Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More) ->
                 Lib.$wgo8 @ r ww ww1 ww2 ww3 ww4 ww5 ww6 w (Lib.spaces2 @ r)) -}
5ef512209c07c48f3380efd060d11118
  $wstarcigarP ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <L,U><L,U><L,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
22c00d2e167e6e08f7178075bc44f50e
  $wtrimprimerPairsE ::
    Lib.CMap
    -> Lib.CMap
    -> Lib.PairedAln
    -> (# Lib.AlignedRead, Lib.AlignedRead, [Lib.AlignedRead],
          [Lib.AlignedRead] #)
  {- Arity: 3,
     Strictness: <L,U><L,U><L,1*U(1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,A,A,A,U,U,U,U,U,U,U,U,U),1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,A,A,A,U,U,U,U,U,U,U,U,U),1*U,1*U)>,
     Inline: [0],
     Unfolding: (\ (w :: Lib.CMap)
                   (w1 :: Lib.CMap)
                   (w2 :: Lib.PairedAln) ->
                 case Lib.$wmakeTrimmedUpdates
                        (let {
                           w3 :: Lib.PairedAln
                           = case w2 of ww { Lib.PairedAln ww1 ww2 ww3 ww4 ->
                             let {
                               addpints :: Lib.AlignedRead -> Lib.AlignedRead {- Arity: 1 -}
                               = Lib.addprimerints w w1
                             } in
                             Lib.PairedAln
                               (Lib.addprimerints w w1 ww1)
                               (Lib.addprimerints w w1 ww2)
                               (GHC.Base.map @ Lib.AlignedRead @ Lib.AlignedRead addpints ww3)
                               (GHC.Base.map @ Lib.AlignedRead @ Lib.AlignedRead addpints ww4) }
                         } in
                         Lib.PairedAln
                           (case w3 of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                            Lib.trimalignment ds6 })
                           (case w3 of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                            Lib.trimalignment ds7 })
                           (case w3 of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                            GHC.Base.map
                              @ Lib.AlignedRead
                              @ Lib.AlignedRead
                              Lib.trimalignment
                              ds8 })
                           (case w3 of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                            GHC.Base.map
                              @ Lib.AlignedRead
                              @ Lib.AlignedRead
                              Lib.trimalignment
                              ds9 })) of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 (# ww1, ww2,
                    GHC.List.filter
                      @ Lib.AlignedRead
                      Lib.removeNonPrimaryZeroLengthAlignments1
                      ww3,
                    GHC.List.filter
                      @ Lib.AlignedRead
                      Lib.removeNonPrimaryZeroLengthAlignments1
                      ww4 #) }) -}
2ef9320b1a37bd8e2bbf1e1c86df9cab
  $wtxtfieldp ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
58a55317d9a09bbbf728ac9b86959ce2
  $wuchrparser ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.UChr
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <S,U><L,U><S,U><S,U><S,U><S,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
0de6572dae14b9471f81477efb667951
  $wupdateCigB ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.ByteString.Internal.ByteString
  {- Arity: 6, Strictness: <L,U><L,U><S,U><L,U><S,U><S,U>,
     Inline: [0] -}
7308d5e5594602bd5332f109e8a96c42
  $wupdateCigF ::
    GHC.Integer.Type.Integer
    -> GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.ByteString.Internal.ByteString
  {- Arity: 5, Strictness: <L,U><S,U><L,U><S,U><S,U>, Inline: [0] -}
eb0d325cd196a8518ebd4dec62faae96
  $wupdateCigR ::
    GHC.Integer.Type.Integer
    -> GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.ByteString.Internal.ByteString
  {- Arity: 5, Strictness: <L,U><S,U><L,U><S,U><S,U>, Inline: [0] -}
52b369e2d774819586973c973cd75f38
  $wvalidateTrimdPairAlnStart ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,1*U><S,1*U><S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Integer.Type.Integer)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: GHC.Integer.Type.Integer)
                   (ww3 :: GHC.Integer.Type.Integer) ->
                 case GHC.Integer.Type.eqInteger# ww2 ww1 of wild { DEFAULT ->
                 case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild of wild1 {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case GHC.Integer.Type.eqInteger# ww ww3 of wild2 { DEFAULT ->
                      GHC.Prim.tagToEnum# @ GHC.Types.Bool wild2 } } }) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  data AlignedRead
    = AlignedRead {qname :: Data.ByteString.Internal.ByteString,
                   flag :: GHC.Types.Int,
                   rname :: Lib.UChr,
                   pos :: GHC.Integer.Type.Integer,
                   endpos :: GHC.Integer.Type.Integer,
                   mapqual :: GHC.Integer.Type.Integer,
                   cigar :: Data.ByteString.Internal.ByteString,
                   trimdcigar :: Data.ByteString.Internal.ByteString,
                   cigmap :: Lib.CigarMap,
                   trimdcigmap :: Lib.CigarMap,
                   rnext :: Data.ByteString.Internal.ByteString,
                   pnext :: GHC.Integer.Type.Integer,
                   tlen :: GHC.Integer.Type.Integer,
                   refseq :: Data.ByteString.Internal.ByteString,
                   basequal :: Data.ByteString.Internal.ByteString,
                   optfields :: Data.ByteString.Internal.ByteString,
                   strand :: Data.ByteString.Internal.ByteString,
                   paired :: GHC.Types.Bool,
                   mapped :: GHC.Types.Bool,
                   fint :: [Lib.BedRecord],
                   rint :: [Lib.BedRecord],
                   pintflag :: GHC.Types.Bool,
                   trimdflag :: GHC.Types.Bool,
                   trimdpos :: GHC.Integer.Type.Integer,
                   trimdendpos :: GHC.Integer.Type.Integer,
                   headerstrings :: Lib.Header,
                   isheader :: GHC.Types.Bool,
                   mid :: Data.ByteString.Internal.ByteString,
                   xmid :: Data.ByteString.Internal.ByteString,
                   tbed :: Lib.BedRecord,
                   trimdToZeroLength :: GHC.Types.Bool}
5a43800cb2d88c5107b1441eb070b28b
  type Alignments = [Lib.AlignedRead]
029317971f9100cd01258ad2e737dd1a
  type BED = Data.Vector.Vector Lib.BedRecord
fdfc37bd80569587de4159264d092980
  data BEDPE
    = BEDPE {chr1 :: Lib.UChr,
             start1 :: GHC.Integer.Type.Integer,
             end1 :: GHC.Integer.Type.Integer,
             chr2 :: Lib.UChr,
             start2 :: GHC.Integer.Type.Integer,
             end2 :: GHC.Integer.Type.Integer,
             bedpename :: Data.ByteString.Internal.ByteString}
68e5f744c22e8fb22b2364d08b03e19b
  type BedMap = Data.IntMap.Internal.IntMap Lib.BedRecord
78740db68f2462e9356716573fd65631
  data BedRecord
    = BedRecord {bedchr :: Lib.UChr,
                 bedstart :: GHC.Integer.Type.Integer,
                 bedend :: GHC.Integer.Type.Integer,
                 bedname :: Data.ByteString.Internal.ByteString}
3b493da1b64e68c63c293b83dc19edb7
  type CMap = Data.Map.Internal.Map Lib.UChr Lib.BedMap
abb052827d9625d097890f754ea8e0e8
  data ChromNameFormat = GRC | UCSC
7a60165cfa72e713e7e595dbb8a3db71
  type CigarMap =
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
7bbd4d124ab9a728e08072313eaaa4c5
  data CigarMod
    = CigarMod {currpos :: GHC.Integer.Type.Integer,
                targetpos :: GHC.Integer.Type.Integer,
                softclipOps :: Data.ByteString.Internal.ByteString,
                remCigOps :: Data.ByteString.Internal.ByteString,
                trimcomplete :: GHC.Types.Bool}
e8823f47acdc21c3cb5a9806f208d2c7
  type Header = [Data.ByteString.Internal.ByteString]
4a9f534e7bc67e4a259fbd60df039054
  data MasterRecord
    = MasterRecord {mchrom :: Lib.UChr,
                    mtargetstart :: GHC.Integer.Type.Integer,
                    mtargetend :: GHC.Integer.Type.Integer,
                    mampname :: Data.ByteString.Internal.ByteString,
                    mforstart :: GHC.Integer.Type.Integer,
                    mforend :: GHC.Integer.Type.Integer,
                    mrevstart :: GHC.Integer.Type.Integer,
                    mrevend :: GHC.Integer.Type.Integer,
                    mforname :: Data.ByteString.Internal.ByteString,
                    mrevname :: Data.ByteString.Internal.ByteString,
                    mforseq :: Data.ByteString.Internal.ByteString,
                    mrevseq :: Data.ByteString.Internal.ByteString}
6f760c933e008b36f1c2ad656d809c5f
  data MidFamily
    = MidFamily {chrom :: Lib.UChr,
                 alnstart :: GHC.Integer.Type.Integer,
                 alnend :: GHC.Integer.Type.Integer,
                 midseq :: Data.ByteString.Internal.ByteString,
                 alns :: [Lib.AlignedRead],
                 alncount :: GHC.Integer.Type.Integer,
                 txposedcount :: GHC.Integer.Type.Integer,
                 postxposdcnt :: GHC.Integer.Type.Integer,
                 negtxposdcnt :: GHC.Integer.Type.Integer,
                 targetbed :: Lib.BedRecord}
9d444cb42900aebbeb90455ac8193fe9
  data Opts
    = Opts {bedpeformat :: GHC.Types.Bool,
            incoordsfile :: GHC.Base.String,
            insamfile :: GHC.Base.String,
            outfilename :: GHC.Base.String}
64e0a7b5a8db25e9b81a102c9fe8422f
  data PairedAln
    = PairedAln {r1prim :: Lib.AlignedRead,
                 r2prim :: Lib.AlignedRead,
                 r1secs :: [Lib.AlignedRead],
                 r2secs :: [Lib.AlignedRead]}
64e0a7b5a8db25e9b81a102c9fe8422f
  axiom Lib.Rep_AlignedRead::
      GHC.Generics.Rep Lib.AlignedRead
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "AlignedRead"
               "Lib"
               "primerclip-0.3.4.0-1b5t2mlHPcvBmtAJ86MXDg"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "AlignedRead" 'GHC.Generics.PrefixI 'GHC.Types.True)
               ((((GHC.Generics.S1
                     ('GHC.Generics.MetaSel
                        ('GHC.Base.Just "qname")
                        'GHC.Generics.NoSourceUnpackedness
                        'GHC.Generics.NoSourceStrictness
                        'GHC.Generics.DecidedLazy)
                     (GHC.Generics.Rec0 Data.ByteString.Internal.ByteString)
                   GHC.Generics.:*: (GHC.Generics.S1
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "flag")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 GHC.Types.Int)
                                     GHC.Generics.:*: GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "rname")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0 Lib.UChr)))
                  GHC.Generics.:*: ((GHC.Generics.S1
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "pos")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                                     GHC.Generics.:*: GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "endpos")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0
                                                           GHC.Integer.Type.Integer))
                                    GHC.Generics.:*: (GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "mapqual")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                                                      GHC.Generics.:*: GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just "cigar")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            Data.ByteString.Internal.ByteString))))
                 GHC.Generics.:*: (((GHC.Generics.S1
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "trimdcigar")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 Data.ByteString.Internal.ByteString)
                                     GHC.Generics.:*: GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "cigmap")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0 Lib.CigarMap))
                                    GHC.Generics.:*: (GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "trimdcigmap")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0 Lib.CigarMap)
                                                      GHC.Generics.:*: GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just "rnext")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            Data.ByteString.Internal.ByteString)))
                                   GHC.Generics.:*: ((GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "pnext")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                                                      GHC.Generics.:*: GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just "tlen")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            GHC.Integer.Type.Integer))
                                                     GHC.Generics.:*: (GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just
                                                                               "refseq")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            Data.ByteString.Internal.ByteString)
                                                                       GHC.Generics.:*: GHC.Generics.S1
                                                                                          ('GHC.Generics.MetaSel
                                                                                             ('GHC.Base.Just
                                                                                                "basequal")
                                                                                             'GHC.Generics.NoSourceUnpackedness
                                                                                             'GHC.Generics.NoSourceStrictness
                                                                                             'GHC.Generics.DecidedLazy)
                                                                                          (GHC.Generics.Rec0
                                                                                             Data.ByteString.Internal.ByteString)))))
                GHC.Generics.:*: ((((GHC.Generics.S1
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "optfields")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 Data.ByteString.Internal.ByteString)
                                     GHC.Generics.:*: GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "strand")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0
                                                           Data.ByteString.Internal.ByteString))
                                    GHC.Generics.:*: (GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "paired")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0 GHC.Types.Bool)
                                                      GHC.Generics.:*: GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just
                                                                               "mapped")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            GHC.Types.Bool)))
                                   GHC.Generics.:*: ((GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "fint")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0 [Lib.BedRecord])
                                                      GHC.Generics.:*: GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just "rint")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            [Lib.BedRecord]))
                                                     GHC.Generics.:*: (GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just
                                                                               "pintflag")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            GHC.Types.Bool)
                                                                       GHC.Generics.:*: GHC.Generics.S1
                                                                                          ('GHC.Generics.MetaSel
                                                                                             ('GHC.Base.Just
                                                                                                "trimdflag")
                                                                                             'GHC.Generics.NoSourceUnpackedness
                                                                                             'GHC.Generics.NoSourceStrictness
                                                                                             'GHC.Generics.DecidedLazy)
                                                                                          (GHC.Generics.Rec0
                                                                                             GHC.Types.Bool))))
                                  GHC.Generics.:*: (((GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "trimdpos")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                                                      GHC.Generics.:*: GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just
                                                                               "trimdendpos")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            GHC.Integer.Type.Integer))
                                                     GHC.Generics.:*: (GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just
                                                                               "headerstrings")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            Lib.Header)
                                                                       GHC.Generics.:*: GHC.Generics.S1
                                                                                          ('GHC.Generics.MetaSel
                                                                                             ('GHC.Base.Just
                                                                                                "isheader")
                                                                                             'GHC.Generics.NoSourceUnpackedness
                                                                                             'GHC.Generics.NoSourceStrictness
                                                                                             'GHC.Generics.DecidedLazy)
                                                                                          (GHC.Generics.Rec0
                                                                                             GHC.Types.Bool)))
                                                    GHC.Generics.:*: ((GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just "mid")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            Data.ByteString.Internal.ByteString)
                                                                       GHC.Generics.:*: GHC.Generics.S1
                                                                                          ('GHC.Generics.MetaSel
                                                                                             ('GHC.Base.Just
                                                                                                "xmid")
                                                                                             'GHC.Generics.NoSourceUnpackedness
                                                                                             'GHC.Generics.NoSourceStrictness
                                                                                             'GHC.Generics.DecidedLazy)
                                                                                          (GHC.Generics.Rec0
                                                                                             Data.ByteString.Internal.ByteString))
                                                                      GHC.Generics.:*: (GHC.Generics.S1
                                                                                          ('GHC.Generics.MetaSel
                                                                                             ('GHC.Base.Just
                                                                                                "tbed")
                                                                                             'GHC.Generics.NoSourceUnpackedness
                                                                                             'GHC.Generics.NoSourceStrictness
                                                                                             'GHC.Generics.DecidedLazy)
                                                                                          (GHC.Generics.Rec0
                                                                                             Lib.BedRecord)
                                                                                        GHC.Generics.:*: GHC.Generics.S1
                                                                                                           ('GHC.Generics.MetaSel
                                                                                                              ('GHC.Base.Just
                                                                                                                 "trimdToZeroLength")
                                                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                                                              'GHC.Generics.NoSourceStrictness
                                                                                                              'GHC.Generics.DecidedLazy)
                                                                                                           (GHC.Generics.Rec0
                                                                                                              GHC.Types.Bool)))))))
fdfc37bd80569587de4159264d092980
  axiom Lib.Rep_BEDPE::
      GHC.Generics.Rep Lib.BEDPE
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "BEDPE"
               "Lib"
               "primerclip-0.3.4.0-1b5t2mlHPcvBmtAJ86MXDg"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "BEDPE" 'GHC.Generics.PrefixI 'GHC.Types.True)
               ((GHC.Generics.S1
                   ('GHC.Generics.MetaSel
                      ('GHC.Base.Just "chr1")
                      'GHC.Generics.NoSourceUnpackedness
                      'GHC.Generics.NoSourceStrictness
                      'GHC.Generics.DecidedLazy)
                   (GHC.Generics.Rec0 Lib.UChr)
                 GHC.Generics.:*: (GHC.Generics.S1
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "start1")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                                   GHC.Generics.:*: GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "end1")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0 GHC.Integer.Type.Integer)))
                GHC.Generics.:*: ((GHC.Generics.S1
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "chr2")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 Lib.UChr)
                                   GHC.Generics.:*: GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "start2")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0 GHC.Integer.Type.Integer))
                                  GHC.Generics.:*: (GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "end2")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                                                    GHC.Generics.:*: GHC.Generics.S1
                                                                       ('GHC.Generics.MetaSel
                                                                          ('GHC.Base.Just
                                                                             "bedpename")
                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                          'GHC.Generics.NoSourceStrictness
                                                                          'GHC.Generics.DecidedLazy)
                                                                       (GHC.Generics.Rec0
                                                                          Data.ByteString.Internal.ByteString)))))
78740db68f2462e9356716573fd65631
  axiom Lib.Rep_BedRecord::
      GHC.Generics.Rep Lib.BedRecord
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "BedRecord"
               "Lib"
               "primerclip-0.3.4.0-1b5t2mlHPcvBmtAJ86MXDg"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "BedRecord" 'GHC.Generics.PrefixI 'GHC.Types.True)
               ((GHC.Generics.S1
                   ('GHC.Generics.MetaSel
                      ('GHC.Base.Just "bedchr")
                      'GHC.Generics.NoSourceUnpackedness
                      'GHC.Generics.NoSourceStrictness
                      'GHC.Generics.DecidedLazy)
                   (GHC.Generics.Rec0 Lib.UChr)
                 GHC.Generics.:*: GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "bedstart")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Integer.Type.Integer))
                GHC.Generics.:*: (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "bedend")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "bedname")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0
                                                        Data.ByteString.Internal.ByteString))))
64e0a7b5a8db25e9b81a102c9fe8422f
  axiom Lib.Rep_PairedAln::
      GHC.Generics.Rep Lib.PairedAln
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "PairedAln"
               "Lib"
               "primerclip-0.3.4.0-1b5t2mlHPcvBmtAJ86MXDg"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "PairedAln" 'GHC.Generics.PrefixI 'GHC.Types.True)
               ((GHC.Generics.S1
                   ('GHC.Generics.MetaSel
                      ('GHC.Base.Just "r1prim")
                      'GHC.Generics.NoSourceUnpackedness
                      'GHC.Generics.NoSourceStrictness
                      'GHC.Generics.DecidedLazy)
                   (GHC.Generics.Rec0 Lib.AlignedRead)
                 GHC.Generics.:*: GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "r2prim")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 Lib.AlignedRead))
                GHC.Generics.:*: (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "r1secs")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 [Lib.AlignedRead])
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "r2secs")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 [Lib.AlignedRead]))))
738096376958aedf685c1b59f577962f
  axiom Lib.Rep_UChr::
      GHC.Generics.Rep Lib.UChr
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "UChr"
               "Lib"
               "primerclip-0.3.4.0-1b5t2mlHPcvBmtAJ86MXDg"
               'GHC.Types.False)
            ((((((GHC.Generics.C1
                    ('GHC.Generics.MetaCons
                       "C1" 'GHC.Generics.PrefixI 'GHC.Types.False)
                    GHC.Generics.U1
                  GHC.Generics.:+: (GHC.Generics.C1
                                      ('GHC.Generics.MetaCons
                                         "C2" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                      GHC.Generics.U1
                                    GHC.Generics.:+: GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "C3"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1))
                 GHC.Generics.:+: (GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "C4" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: (GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "C5"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1
                                                     GHC.Generics.:+: GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "C6"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1)))
                GHC.Generics.:+: ((GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "C7" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: (GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "C8"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1
                                                     GHC.Generics.:+: GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "C9"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1))
                                  GHC.Generics.:+: ((GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "C10"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1
                                                     GHC.Generics.:+: GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "C11"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1)
                                                    GHC.Generics.:+: (GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "C12"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "C13"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1))))
               GHC.Generics.:+: (((GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "C14" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: (GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "C15"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1
                                                     GHC.Generics.:+: GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "C16"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1))
                                  GHC.Generics.:+: ((GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "C17"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1
                                                     GHC.Generics.:+: GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "C18"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1)
                                                    GHC.Generics.:+: (GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "C19"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "C20"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1)))
                                 GHC.Generics.:+: ((GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "C21"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1
                                                    GHC.Generics.:+: (GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "C22"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "CX"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1))
                                                   GHC.Generics.:+: ((GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "CY"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "CMT"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1)
                                                                     GHC.Generics.:+: (GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "Chr1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "Chr2"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1)))))
              GHC.Generics.:+: ((((GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "Chr3" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: (GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "Chr4"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1
                                                     GHC.Generics.:+: GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "Chr5"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1))
                                  GHC.Generics.:+: ((GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "Chr6"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1
                                                     GHC.Generics.:+: GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "Chr7"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1)
                                                    GHC.Generics.:+: (GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "Chr8"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "Chr9"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1)))
                                 GHC.Generics.:+: ((GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "Chr10"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1
                                                    GHC.Generics.:+: (GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "Chr11"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "Chr12"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1))
                                                   GHC.Generics.:+: ((GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "Chr13"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "Chr14"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1)
                                                                     GHC.Generics.:+: (GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "Chr15"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "Chr16"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1))))
                                GHC.Generics.:+: (((GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "Chr17"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1
                                                    GHC.Generics.:+: (GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "Chr18"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "Chr19"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1))
                                                   GHC.Generics.:+: ((GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "Chr20"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "Chr21"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1)
                                                                     GHC.Generics.:+: (GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "Chr22"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "ChrX"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1)))
                                                  GHC.Generics.:+: ((GHC.Generics.C1
                                                                       ('GHC.Generics.MetaCons
                                                                          "ChrY"
                                                                          'GHC.Generics.PrefixI
                                                                          'GHC.Types.False)
                                                                       GHC.Generics.U1
                                                                     GHC.Generics.:+: (GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "ChrM"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000207P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1))
                                                                    GHC.Generics.:+: ((GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000226P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000229P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1)
                                                                                      GHC.Generics.:+: (GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000231P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1
                                                                                                        GHC.Generics.:+: GHC.Generics.C1
                                                                                                                           ('GHC.Generics.MetaCons
                                                                                                                              "GL000210P1"
                                                                                                                              'GHC.Generics.PrefixI
                                                                                                                              'GHC.Types.False)
                                                                                                                           GHC.Generics.U1))))))
             GHC.Generics.:+: (((((GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "GL000239P1" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: (GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "GL000235P1"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1
                                                     GHC.Generics.:+: GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "GL000201P1"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1))
                                  GHC.Generics.:+: ((GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "GL000247P1"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1
                                                     GHC.Generics.:+: GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "GL000245P1"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1)
                                                    GHC.Generics.:+: (GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "GL000197P1"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000203P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1)))
                                 GHC.Generics.:+: ((GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "GL000246P1"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1
                                                    GHC.Generics.:+: (GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "GL000249P1"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000196P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1))
                                                   GHC.Generics.:+: ((GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "GL000248P1"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000244P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1)
                                                                     GHC.Generics.:+: (GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000238P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000202P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1))))
                                GHC.Generics.:+: (((GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "GL000234P1"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1
                                                    GHC.Generics.:+: (GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "GL000232P1"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000206P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1))
                                                   GHC.Generics.:+: ((GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "GL000240P1"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000236P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1)
                                                                     GHC.Generics.:+: (GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000241P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000243P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1)))
                                                  GHC.Generics.:+: ((GHC.Generics.C1
                                                                       ('GHC.Generics.MetaCons
                                                                          "GL000242P1"
                                                                          'GHC.Generics.PrefixI
                                                                          'GHC.Types.False)
                                                                       GHC.Generics.U1
                                                                     GHC.Generics.:+: (GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000230P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000237P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1))
                                                                    GHC.Generics.:+: ((GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000233P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000204P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1)
                                                                                      GHC.Generics.:+: (GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000198P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1
                                                                                                        GHC.Generics.:+: GHC.Generics.C1
                                                                                                                           ('GHC.Generics.MetaCons
                                                                                                                              "GL000208P1"
                                                                                                                              'GHC.Generics.PrefixI
                                                                                                                              'GHC.Types.False)
                                                                                                                           GHC.Generics.U1)))))
                               GHC.Generics.:+: ((((GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "GL000191P1"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1
                                                    GHC.Generics.:+: (GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "GL000227P1"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000228P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1))
                                                   GHC.Generics.:+: ((GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "GL000214P1"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000221P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1)
                                                                     GHC.Generics.:+: (GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000209P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000218P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1)))
                                                  GHC.Generics.:+: ((GHC.Generics.C1
                                                                       ('GHC.Generics.MetaCons
                                                                          "GL000220P1"
                                                                          'GHC.Generics.PrefixI
                                                                          'GHC.Types.False)
                                                                       GHC.Generics.U1
                                                                     GHC.Generics.:+: (GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000213P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000211P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1))
                                                                    GHC.Generics.:+: ((GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000199P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000217P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1)
                                                                                      GHC.Generics.:+: (GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000216P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1
                                                                                                        GHC.Generics.:+: GHC.Generics.C1
                                                                                                                           ('GHC.Generics.MetaCons
                                                                                                                              "GL000215P1"
                                                                                                                              'GHC.Generics.PrefixI
                                                                                                                              'GHC.Types.False)
                                                                                                                           GHC.Generics.U1))))
                                                 GHC.Generics.:+: (((GHC.Generics.C1
                                                                       ('GHC.Generics.MetaCons
                                                                          "GL000205P1"
                                                                          'GHC.Generics.PrefixI
                                                                          'GHC.Types.False)
                                                                       GHC.Generics.U1
                                                                     GHC.Generics.:+: (GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000219P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000224P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1))
                                                                    GHC.Generics.:+: ((GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "GL000223P1"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000195P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1)
                                                                                      GHC.Generics.:+: (GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000212P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1
                                                                                                        GHC.Generics.:+: GHC.Generics.C1
                                                                                                                           ('GHC.Generics.MetaCons
                                                                                                                              "GL000222P1"
                                                                                                                              'GHC.Generics.PrefixI
                                                                                                                              'GHC.Types.False)
                                                                                                                           GHC.Generics.U1)))
                                                                   GHC.Generics.:+: ((GHC.Generics.C1
                                                                                        ('GHC.Generics.MetaCons
                                                                                           "GL000200P1"
                                                                                           'GHC.Generics.PrefixI
                                                                                           'GHC.Types.False)
                                                                                        GHC.Generics.U1
                                                                                      GHC.Generics.:+: (GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000193P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1
                                                                                                        GHC.Generics.:+: GHC.Generics.C1
                                                                                                                           ('GHC.Generics.MetaCons
                                                                                                                              "GL000194P1"
                                                                                                                              'GHC.Generics.PrefixI
                                                                                                                              'GHC.Types.False)
                                                                                                                           GHC.Generics.U1))
                                                                                     GHC.Generics.:+: ((GHC.Generics.C1
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "GL000225P1"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1
                                                                                                        GHC.Generics.:+: GHC.Generics.C1
                                                                                                                           ('GHC.Generics.MetaCons
                                                                                                                              "GL000192P1"
                                                                                                                              'GHC.Generics.PrefixI
                                                                                                                              'GHC.Types.False)
                                                                                                                           GHC.Generics.U1)
                                                                                                       GHC.Generics.:+: (GHC.Generics.C1
                                                                                                                           ('GHC.Generics.MetaCons
                                                                                                                              "NC_007605"
                                                                                                                              'GHC.Generics.PrefixI
                                                                                                                              'GHC.Types.False)
                                                                                                                           GHC.Generics.U1
                                                                                                                         GHC.Generics.:+: GHC.Generics.C1
                                                                                                                                            ('GHC.Generics.MetaCons
                                                                                                                                               "NONE"
                                                                                                                                               'GHC.Generics.PrefixI
                                                                                                                                               'GHC.Types.False)
                                                                                                                                            GHC.Generics.U1)))))))
2e345d36c55fb13cffd420fc95f5bf30
  data RunStats
    = RunStats {alnsTotal :: GHC.Integer.Type.Integer,
                alnsMapped :: GHC.Integer.Type.Integer,
                alnsTrimd :: GHC.Integer.Type.Integer,
                alnsTrimdToZero :: GHC.Integer.Type.Integer,
                trimmedPct :: GHC.Types.Double,
                mappedPct :: GHC.Types.Double}
b61c01fbf7515ac157d8de65641d5c06
  type SAM = (Lib.Header, Lib.Alignments)
e2c0c85c514784c2ed19970c7fc99cc7
  data SAMFlag
    = SAMFlag {pairedRead :: GHC.Types.Bool,
               mateMapped :: GHC.Types.Bool,
               notMapped :: GHC.Types.Bool,
               pairNotMapped :: GHC.Types.Bool,
               queryPlus :: GHC.Types.Bool,
               mateNeg :: GHC.Types.Bool,
               fstInPair :: GHC.Types.Bool,
               sndInPair :: GHC.Types.Bool,
               notPrimary :: GHC.Types.Bool,
               failedQC :: GHC.Types.Bool,
               dupRead :: GHC.Types.Bool,
               intflag :: GHC.Types.Int}
738096376958aedf685c1b59f577962f
  data UChr
    = C1
    | C2
    | C3
    | C4
    | C5
    | C6
    | C7
    | C8
    | C9
    | C10
    | C11
    | C12
    | C13
    | C14
    | C15
    | C16
    | C17
    | C18
    | C19
    | C20
    | C21
    | C22
    | CX
    | CY
    | CMT
    | Chr1
    | Chr2
    | Chr3
    | Chr4
    | Chr5
    | Chr6
    | Chr7
    | Chr8
    | Chr9
    | Chr10
    | Chr11
    | Chr12
    | Chr13
    | Chr14
    | Chr15
    | Chr16
    | Chr17
    | Chr18
    | Chr19
    | Chr20
    | Chr21
    | Chr22
    | ChrX
    | ChrY
    | ChrM
    | GL000207P1
    | GL000226P1
    | GL000229P1
    | GL000231P1
    | GL000210P1
    | GL000239P1
    | GL000235P1
    | GL000201P1
    | GL000247P1
    | GL000245P1
    | GL000197P1
    | GL000203P1
    | GL000246P1
    | GL000249P1
    | GL000196P1
    | GL000248P1
    | GL000244P1
    | GL000238P1
    | GL000202P1
    | GL000234P1
    | GL000232P1
    | GL000206P1
    | GL000240P1
    | GL000236P1
    | GL000241P1
    | GL000243P1
    | GL000242P1
    | GL000230P1
    | GL000237P1
    | GL000233P1
    | GL000204P1
    | GL000198P1
    | GL000208P1
    | GL000191P1
    | GL000227P1
    | GL000228P1
    | GL000214P1
    | GL000221P1
    | GL000209P1
    | GL000218P1
    | GL000220P1
    | GL000213P1
    | GL000211P1
    | GL000199P1
    | GL000217P1
    | GL000216P1
    | GL000215P1
    | GL000205P1
    | GL000219P1
    | GL000224P1
    | GL000223P1
    | GL000195P1
    | GL000212P1
    | GL000222P1
    | GL000200P1
    | GL000193P1
    | GL000194P1
    | GL000225P1
    | GL000192P1
    | NC_007605
    | NONE
c370aa9c6d941dfd01c4b573ffe6c134
  addprimerints ::
    Lib.CMap -> Lib.CMap -> Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,1*U><L,1*U><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,A,A,A,U,U,U,U,U,U,U,U,U)>,
     Unfolding: (\ (fpmap :: Lib.CMap)
                   (rpmap :: Lib.CMap)
                   (aln :: Lib.AlignedRead) ->
                 case aln of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 let {
                   starthits :: [Lib.BedRecord]
                   = Data.Maybe.catMaybes1
                       @ Lib.BedRecord
                       (GHC.Base.map
                          @ (Data.IntMap.Internal.IntMap Lib.BedRecord)
                          @ (GHC.Base.Maybe Lib.BedRecord)
                          (let {
                             lvl1013 :: GHC.Types.Int
                             = case GHC.Integer.Type.integerToInt ds9 of wild1 { DEFAULT ->
                               GHC.Types.I# wild1 }
                           } in
                           \ (bmap :: Data.IntMap.Internal.IntMap Lib.BedRecord) ->
                           Data.IntMap.Internal.lookup @ Lib.BedRecord lvl1013 bmap)
                          (Data.Maybe.catMaybes1
                             @ (Data.IntMap.Internal.IntMap Lib.BedRecord)
                             (GHC.Types.:
                                @ (GHC.Base.Maybe (Data.IntMap.Internal.IntMap Lib.BedRecord))
                                (Lib.$slookup1
                                   @ (Data.IntMap.Internal.IntMap Lib.BedRecord)
                                   ds8
                                   fpmap)
                                (GHC.Types.[]
                                   @ (GHC.Base.Maybe
                                        (Data.IntMap.Internal.IntMap Lib.BedRecord))))))
                 } in
                 let {
                   endhits :: [Lib.BedRecord]
                   = Data.Maybe.catMaybes1
                       @ Lib.BedRecord
                       (GHC.Base.map
                          @ (Data.IntMap.Internal.IntMap Lib.BedRecord)
                          @ (GHC.Base.Maybe Lib.BedRecord)
                          (let {
                             lvl1013 :: GHC.Types.Int
                             = case GHC.Integer.Type.integerToInt ds10 of wild1 { DEFAULT ->
                               GHC.Types.I# wild1 }
                           } in
                           \ (bmap :: Data.IntMap.Internal.IntMap Lib.BedRecord) ->
                           Data.IntMap.Internal.lookup @ Lib.BedRecord lvl1013 bmap)
                          (Data.Maybe.catMaybes1
                             @ (Data.IntMap.Internal.IntMap Lib.BedRecord)
                             (GHC.Types.:
                                @ (GHC.Base.Maybe (Data.IntMap.Internal.IntMap Lib.BedRecord))
                                (Lib.$slookup1
                                   @ (Data.IntMap.Internal.IntMap Lib.BedRecord)
                                   ds8
                                   rpmap)
                                (GHC.Types.[]
                                   @ (GHC.Base.Maybe
                                        (Data.IntMap.Internal.IntMap Lib.BedRecord))))))
                 } in
                 Lib.AlignedRead
                   ds6
                   ds7
                   ds8
                   ds9
                   ds10
                   ds11
                   ds12
                   ds13
                   ds14
                   ds15
                   ds16
                   ds17
                   ds18
                   ds19
                   ds20
                   ds21
                   ds22
                   ds23
                   ds24
                   starthits
                   endhits
                   (case GHC.List.$wlenAcc
                           @ Lib.BedRecord
                           (Data.OldList.sortBy
                              @ Lib.BedRecord
                              Lib.$fOrdBedRecord_$ccompare
                              (GHC.Base.++ @ Lib.BedRecord starthits endhits))
                           0# of ww2 { DEFAULT ->
                    GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.># ww2 0#) })
                   ds28
                   ds29
                   ds30
                   ds31
                   ds32
                   ds33
                   ds34
                   ds35
                   ds36 }) -}
2bfb4d2c288cbdf12c18e661408aefec
  addprimerintsPairedAln ::
    Lib.CMap -> Lib.CMap -> Lib.PairedAln -> Lib.PairedAln
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U><L,U><S,1*U(1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,A,A,A,U,U,U,U,U,U,U,U,U),1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,A,A,A,U,U,U,U,U,U,U,U,U),1*U,1*U)>m,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Lib.CMap) (w1 :: Lib.CMap) (w2 :: Lib.PairedAln) ->
                 case w2 of ww { Lib.PairedAln ww1 ww2 ww3 ww4 ->
                 let {
                   addpints :: Lib.AlignedRead -> Lib.AlignedRead {- Arity: 1 -}
                   = Lib.addprimerints w w1
                 } in
                 Lib.PairedAln
                   (Lib.addprimerints w w1 ww1)
                   (Lib.addprimerints w w1 ww2)
                   (GHC.Base.map @ Lib.AlignedRead @ Lib.AlignedRead addpints ww3)
                   (GHC.Base.map
                      @ Lib.AlignedRead
                      @ Lib.AlignedRead
                      addpints
                      ww4) }) -}
f1671136a73442ac93696f1c60c50e0d
  addtrimtag :: Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 1,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLSLLLLLLLL),1*U(U,U(U),U,U,U,U,U,U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Unfolding: (\ (a :: Lib.AlignedRead) ->
                 case a of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 let {
                   $j :: Lib.AlignedRead <join 0>
                   = case ds28 of wild1 {
                       GHC.Types.False -> wild
                       GHC.Types.True
                       -> Lib.AlignedRead
                            ds6
                            (case ds7 of wild2 { GHC.Types.I# x# ->
                             GHC.Types.I# (GHC.Prim.orI# (GHC.Prim.andI# x# -3#) 4#) })
                            ds8
                            ds9
                            ds10
                            ds11
                            ds12
                            ds13
                            ds14
                            ds15
                            ds16
                            ds17
                            ds18
                            ds19
                            ds20
                            (Data.ByteString.concat
                               (GHC.Types.:
                                  @ Data.ByteString.Internal.ByteString
                                  ds21
                                  Lib.addtrimtag6))
                            ds22
                            ds23
                            ds24
                            ds25
                            ds26
                            ds27
                            GHC.Types.True
                            ds29
                            ds30
                            ds31
                            ds32
                            ds33
                            ds34
                            ds35
                            ds36 }
                 } in
                 case ds28 of wild1 {
                   GHC.Types.False -> $j
                   GHC.Types.True
                   -> case ds13 of wild2 { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                      case Lib.addtrimtag5 of wild3 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim./=# dt3 dt7) of wild4 {
                        GHC.Types.False
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.eqAddr# dt dt4) of wild5 {
                             GHC.Types.False
                             -> case Data.ByteString.Internal.$wcompareBytes
                                       dt
                                       dt1
                                       dt2
                                       dt3
                                       dt4
                                       dt5
                                       dt6
                                       dt7 of wild6 {
                                  DEFAULT
                                  -> Lib.AlignedRead
                                       ds6
                                       ds7
                                       ds8
                                       ds9
                                       ds10
                                       ds11
                                       ds12
                                       wild2
                                       ds14
                                       ds15
                                       ds16
                                       ds17
                                       ds18
                                       ds19
                                       ds20
                                       (Data.ByteString.concat
                                          (GHC.Types.:
                                             @ Data.ByteString.Internal.ByteString
                                             ds21
                                             Lib.addtrimtag1))
                                       ds22
                                       ds23
                                       ds24
                                       ds25
                                       ds26
                                       ds27
                                       GHC.Types.True
                                       ds29
                                       ds30
                                       ds31
                                       ds32
                                       ds33
                                       ds34
                                       ds35
                                       ds36
                                  GHC.Types.EQ -> $j }
                             GHC.Types.True
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.==# dt2 dt6) of wild6 {
                                  GHC.Types.False
                                  -> case Data.ByteString.Internal.$wcompareBytes
                                            dt
                                            dt1
                                            dt2
                                            dt3
                                            dt4
                                            dt5
                                            dt6
                                            dt7 of wild7 {
                                       DEFAULT
                                       -> Lib.AlignedRead
                                            ds6
                                            ds7
                                            ds8
                                            ds9
                                            ds10
                                            ds11
                                            ds12
                                            wild2
                                            ds14
                                            ds15
                                            ds16
                                            ds17
                                            ds18
                                            ds19
                                            ds20
                                            (Data.ByteString.concat
                                               (GHC.Types.:
                                                  @ Data.ByteString.Internal.ByteString
                                                  ds21
                                                  Lib.addtrimtag1))
                                            ds22
                                            ds23
                                            ds24
                                            ds25
                                            ds26
                                            ds27
                                            GHC.Types.True
                                            ds29
                                            ds30
                                            ds31
                                            ds32
                                            ds33
                                            ds34
                                            ds35
                                            ds36
                                       GHC.Types.EQ -> $j }
                                  GHC.Types.True -> $j } }
                        GHC.Types.True
                        -> Lib.AlignedRead
                             ds6
                             ds7
                             ds8
                             ds9
                             ds10
                             ds11
                             ds12
                             wild2
                             ds14
                             ds15
                             ds16
                             ds17
                             ds18
                             ds19
                             ds20
                             (Data.ByteString.concat
                                (GHC.Types.:
                                   @ Data.ByteString.Internal.ByteString
                                   ds21
                                   Lib.addtrimtag1))
                             ds22
                             ds23
                             ds24
                             ds25
                             ds26
                             ds27
                             GHC.Types.True
                             ds29
                             ds30
                             ds31
                             ds32
                             ds33
                             ds34
                             ds35
                             ds36 } } } } }) -}
02b93939c8280eeed10343998f723650
  addtrimtag1 :: [Data.ByteString.Internal.ByteString]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.ByteString.Internal.ByteString
                   Lib.addtrimtag4
                   Lib.addtrimtag2) -}
f8ff331047b7bc4be32f85f1d7191018
  addtrimtag2 :: [Data.ByteString.Internal.ByteString]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.ByteString.Internal.ByteString
                   Lib.addtrimtag3
                   (GHC.Types.[] @ Data.ByteString.Internal.ByteString)) -}
3e4a0d48a4985d3b67cbeb65266640de
  addtrimtag3 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.addtrimtag_addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.addtrimtag_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
2d5442289773e0046c86e7958e88544f
  addtrimtag4 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.addtrimtag_addr#1
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.addtrimtag_addr#1
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
277327ac5be038675fe27a41b4bc7462
  addtrimtag5 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.addtrimtag_addr#2
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.addtrimtag_addr#2
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
568f0fa5e45492cb70cf88fc47ae1652
  addtrimtag6 :: [Data.ByteString.Internal.ByteString]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.ByteString.Internal.ByteString
                   Lib.addtrimtag4
                   Lib.addtrimtag7) -}
18b8a8ca0347aad659df7f2b03c2ce03
  addtrimtag7 :: [Data.ByteString.Internal.ByteString]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.ByteString.Internal.ByteString
                   Lib.addtrimtag8
                   (GHC.Types.[] @ Data.ByteString.Internal.ByteString)) -}
32bd7b3cd16dfc617f98f90a4f73dbdb
  addtrimtag8 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.addtrimtag_addr#3
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.addtrimtag_addr#3
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
469ef6ca2c5d5f5ed799207ab6f98c27
  addtrimtag_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("CO:Z:primer_trimmed"#) -}
1cf496224b5e39d67ccc291fcb43d011
  addtrimtag_addr#1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("\t"#) -}
49fccea0a265e60e1e6cd9d113a74b94
  addtrimtag_addr#2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("*"#) -}
a7ab37f9c1625863cb7466e710db7699
  addtrimtag_addr#3 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("CO:Z:zero_alignment_length_after_primer_trim"#) -}
d1060c16e98c7dc7e7c0ed44b4864203
  adjustcrds ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> [(GHC.Integer.Type.Integer,
         Data.ByteString.Internal.ByteString)]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (cigs :: [(GHC.Integer.Type.Integer,
                              Data.ByteString.Internal.ByteString)]) ->
                 case cigs of wild {
                   []
                   -> GHC.Types.[]
                        @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                   : x xs
                   -> GHC.Types.:
                        @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                        x
                        (case GHC.List.$wscanlGo
                                @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                                @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                                @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                                @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                                Lib.shiftcrds
                                x
                                xs of ww { (#,#) ww1 ww2 ->
                         ww2 }) }) -}
b383a58927fa993d350c944979826bcd
  alignmentsetparser ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString [Lib.AlignedRead]
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.alignmentsetparser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <[Lib.AlignedRead]>_R)) -}
6deba46dcd5de23c5f857410c4ba3f30
  alignmentsetparser1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [Lib.AlignedRead]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [Lib.AlignedRead]
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$walignmentsetparser
                   @ r
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww8
                   w2
                   w3
                   w4 } }) -}
5da75b8b0a118b9fbb093eae1f937a5e
  allPairedAln ::
    (Lib.AlignedRead -> GHC.Types.Bool)
    -> Lib.PairedAln -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <C(S),C(U)><L,U(1*U,1*U,1*U,U)>,
     Unfolding: (\ (b :: Lib.AlignedRead -> GHC.Types.Bool)
                   (p :: Lib.PairedAln) ->
                 case b (case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                         ds6 }) of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case b (case p of wild1 { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                              ds7 }) of wild1 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case p of wild2 { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                           let {
                             $j :: GHC.Types.Bool <join 0>
                             = letrec {
                                 go16 :: [Lib.AlignedRead] -> GHC.Types.Bool
                                   <join 1> {- Arity: 1, Strictness: <S,1*U> -}
                                 = \ (ds10 :: [Lib.AlignedRead]) ->
                                   case ds10 of wild3 {
                                     [] -> GHC.Types.False
                                     : y ys
                                     -> case b y of wild4 {
                                          GHC.Types.False -> go16 ys
                                          GHC.Types.True -> GHC.Types.True } }
                               } in
                               go16 ds9
                           } in
                           letrec {
                             go16 :: [Lib.AlignedRead] -> GHC.Types.Bool
                               <join 1> {- Arity: 1, Strictness: <S,1*U> -}
                             = \ (ds10 :: [Lib.AlignedRead]) ->
                               case ds10 of wild3 {
                                 [] -> GHC.Types.False
                                 : y ys
                                 -> case b y of wild4 {
                                      GHC.Types.False -> go16 ys GHC.Types.True -> $j } }
                           } in
                           go16 ds8 } } }) -}
6f760c933e008b36f1c2ad656d809c5f
  alncount :: Lib.MidFamily -> GHC.Integer.Type.Integer
  RecSel Left Lib.MidFamily
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSLLLL),1*U(A,A,A,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MidFamily) ->
                 case ds6 of wild { Lib.MidFamily ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds12 }) -}
6f760c933e008b36f1c2ad656d809c5f
  alnend :: Lib.MidFamily -> GHC.Integer.Type.Integer
  RecSel Left Lib.MidFamily
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLL),1*U(A,A,1*U,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MidFamily) ->
                 case ds6 of wild { Lib.MidFamily ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds9 }) -}
1d78daf469e8eb592aff797676642cbc
  alnparser ::
    Data.Attoparsec.ByteString.Internal.Parser Lib.AlignedRead
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.alnparser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <Lib.AlignedRead>_R)) -}
34b64f6716461947f8a8b55bc2a039b5
  alnparser1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.AlignedRead
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.AlignedRead
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$walnparser @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
1f71d3d5b16889474e7128ab716efd64
  alnparserEOL ::
    Data.Attoparsec.ByteString.Internal.Parser Lib.AlignedRead
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.alnparserEOL1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <Lib.AlignedRead>_R)) -}
aebcbc64ae9b26cccf0f74ce834a8f94
  alnparserEOL1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.AlignedRead
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.AlignedRead
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$walnparserEOL @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
6f760c933e008b36f1c2ad656d809c5f
  alns :: Lib.MidFamily -> [Lib.AlignedRead]
  RecSel Left Lib.MidFamily
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLLLLL),1*U(A,A,A,A,1*U,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MidFamily) ->
                 case ds6 of wild { Lib.MidFamily ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds11 }) -}
2e345d36c55fb13cffd420fc95f5bf30
  alnsMapped :: Lib.RunStats -> GHC.Integer.Type.Integer
  RecSel Left Lib.RunStats
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLL),1*U(A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.RunStats) ->
                 case ds6 of wild { Lib.RunStats ds7 ds8 ds9 ds10 ds11 ds12 ->
                 ds8 }) -}
6c9d169617c3073e5ed1d0de046b7990
  alnsToPairedAln :: [Lib.AlignedRead] -> Lib.PairedAln
  {- Arity: 1, Strictness: <S,1*U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: [Lib.AlignedRead]) ->
                 case Lib.$walnsToPairedAln w of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 Lib.PairedAln ww1 ww2 ww3 ww4 }) -}
bb8e4243ff9ed50a6c90f60cf2b2df54
  alnsToPairedAln1 :: Lib.AlignedRead
  {- Strictness: x -}
2e345d36c55fb13cffd420fc95f5bf30
  alnsTotal :: Lib.RunStats -> GHC.Integer.Type.Integer
  RecSel Left Lib.RunStats
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLL),1*U(1*U,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.RunStats) ->
                 case ds6 of wild { Lib.RunStats ds7 ds8 ds9 ds10 ds11 ds12 ->
                 ds7 }) -}
2e345d36c55fb13cffd420fc95f5bf30
  alnsTrimd :: Lib.RunStats -> GHC.Integer.Type.Integer
  RecSel Left Lib.RunStats
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLL),1*U(A,A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.RunStats) ->
                 case ds6 of wild { Lib.RunStats ds7 ds8 ds9 ds10 ds11 ds12 ->
                 ds9 }) -}
2e345d36c55fb13cffd420fc95f5bf30
  alnsTrimdToZero :: Lib.RunStats -> GHC.Integer.Type.Integer
  RecSel Left Lib.RunStats
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLL),1*U(A,A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.RunStats) ->
                 case ds6 of wild { Lib.RunStats ds7 ds8 ds9 ds10 ds11 ds12 ->
                 ds10 }) -}
6f760c933e008b36f1c2ad656d809c5f
  alnstart :: Lib.MidFamily -> GHC.Integer.Type.Integer
  RecSel Left Lib.MidFamily
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLLLLL),1*U(A,1*U,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MidFamily) ->
                 case ds6 of wild { Lib.MidFamily ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds8 }) -}
165b3ca37d74ae6cd8046d7ab599589e
  anyPairedAln ::
    (Lib.AlignedRead -> GHC.Types.Bool)
    -> Lib.PairedAln -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <C(S),C(U)><L,U(1*U,1*U,1*U,U)>,
     Unfolding: (\ (b :: Lib.AlignedRead -> GHC.Types.Bool)
                   (p :: Lib.PairedAln) ->
                 case b (case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                         ds6 }) of wild {
                   GHC.Types.False
                   -> case b (case p of wild1 { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                              ds7 }) of wild1 {
                        GHC.Types.False
                        -> case p of wild2 { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                           let {
                             $j :: GHC.Types.Bool <join 0>
                             = letrec {
                                 go16 :: [Lib.AlignedRead] -> GHC.Types.Bool
                                   <join 1> {- Arity: 1, Strictness: <S,1*U> -}
                                 = \ (ds10 :: [Lib.AlignedRead]) ->
                                   case ds10 of wild3 {
                                     [] -> GHC.Types.False
                                     : y ys
                                     -> case b y of wild4 {
                                          GHC.Types.False -> go16 ys
                                          GHC.Types.True -> GHC.Types.True } }
                               } in
                               go16 ds9
                           } in
                           letrec {
                             go16 :: [Lib.AlignedRead] -> GHC.Types.Bool
                               <join 1> {- Arity: 1, Strictness: <S,1*U> -}
                             = \ (ds10 :: [Lib.AlignedRead]) ->
                               case ds10 of wild3 {
                                 [] -> $j
                                 : y ys
                                 -> case b y of wild4 {
                                      GHC.Types.False -> go16 ys
                                      GHC.Types.True -> GHC.Types.True } }
                           } in
                           go16 ds8 }
                        GHC.Types.True -> GHC.Types.True }
                   GHC.Types.True -> GHC.Types.True }) -}
a8da4aac0ac7f0b602afddacef019cd4
  anyPrimerIntAln :: Lib.PairedAln -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(S(LLLLLLLLLLLLLLLLLLLLLSLLLLLLLLL)LLL),1*U(1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A),1*U,U)>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.PairedAln) ->
                 case w of ww { Lib.PairedAln ww1 ww2 ww3 ww4 ->
                 case ww1 of ww5 { Lib.AlignedRead ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ww36 ->
                 Lib.$wanyPrimerIntAln ww27 ww2 ww3 ww4 } }) -}
7f09792d27572d589c54fd50ca714a79
  anyPrimerIntAln_go :: [Lib.AlignedRead] -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
64e0a7b5a8db25e9b81a102c9fe8422f
  basequal :: Lib.AlignedRead -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLSLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds21 }) -}
70eb17f1d4a3d17118a6635a019170f3
  bedPEparser :: Data.Attoparsec.ByteString.Internal.Parser Lib.BEDPE
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.bedPEparser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <Lib.BEDPE>_R)) -}
1ea9a9da17662411b1b2337a41d4ed5a
  bedPEparser1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.BEDPE
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.BEDPE
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wbedPEparser @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
78740db68f2462e9356716573fd65631
  bedchr :: Lib.BedRecord -> Lib.UChr
  RecSel Left Lib.BedRecord
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLLL),1*U(1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.BedRecord) ->
                 case ds6 of wild { Lib.BedRecord ds7 ds8 ds9 ds10 -> ds7 }) -}
78740db68f2462e9356716573fd65631
  bedend :: Lib.BedRecord -> GHC.Integer.Type.Integer
  RecSel Left Lib.BedRecord
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLSL),1*U(A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.BedRecord) ->
                 case ds6 of wild { Lib.BedRecord ds7 ds8 ds9 ds10 -> ds9 }) -}
17c0acc701dd5aec1f5e4a66c539a9d5
  bedmaplookup ::
    GHC.Integer.Type.Integer
    -> Data.IntMap.Internal.IntMap Lib.BedRecord
    -> GHC.Base.Maybe Lib.BedRecord
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (pos1 :: GHC.Integer.Type.Integer)
                   (bmap :: Data.IntMap.Internal.IntMap Lib.BedRecord) ->
                 case GHC.Integer.Type.integerToInt pos1 of wild { DEFAULT ->
                 Data.IntMap.Internal.$wlookup @ Lib.BedRecord wild bmap }) -}
78740db68f2462e9356716573fd65631
  bedname :: Lib.BedRecord -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.BedRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLS),1*U(A,A,A,1*U(U,U,U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.BedRecord) ->
                 case ds6 of wild { Lib.BedRecord ds7 ds8 ds9 ds10 -> ds10 }) -}
27b42cfc5ff5f99d555d8760bc3f3a07
  bedpeToFbed :: Lib.BEDPE -> Lib.BedRecord
  {- Arity: 1, Strictness: <L,U(1*U,1*U,1*U,A,A,A,1*U)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.BEDPE) ->
                 Lib.BedRecord
                   (case w of wild { Lib.BEDPE ds6 ds7 ds8 ds9 ds10 ds11 ds12 ->
                    ds6 })
                   (case w of wild { Lib.BEDPE ds6 ds7 ds8 ds9 ds10 ds11 ds12 ->
                    ds7 })
                   (case w of wild { Lib.BEDPE ds6 ds7 ds8 ds9 ds10 ds11 ds12 ->
                    ds8 })
                   (GHC.Base.mappend
                      @ Data.ByteString.Internal.ByteString
                      Data.ByteString.Internal.$fMonoidByteString
                      (case w of wild { Lib.BEDPE ds6 ds7 ds8 ds9 ds10 ds11 ds12 ->
                       ds12 })
                      Lib.bedpeToFbed1)) -}
49aedd2c6196925965be5be9953f3d17
  bedpeToFbed1 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.bedpeToFbed_addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.bedpeToFbed_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
2531d1eadfb4e929ab7615a624c2d1a1
  bedpeToFbed_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("_F"#) -}
8e18674cff56933c6026918a6497e5cb
  bedpeToRbed :: Lib.BEDPE -> Lib.BedRecord
  {- Arity: 1, Strictness: <L,U(A,A,A,1*U,1*U,1*U,1*U)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.BEDPE) ->
                 Lib.BedRecord
                   (case w of wild { Lib.BEDPE ds6 ds7 ds8 ds9 ds10 ds11 ds12 ->
                    ds9 })
                   (case w of wild { Lib.BEDPE ds6 ds7 ds8 ds9 ds10 ds11 ds12 ->
                    ds10 })
                   (case w of wild { Lib.BEDPE ds6 ds7 ds8 ds9 ds10 ds11 ds12 ->
                    ds11 })
                   (GHC.Base.mappend
                      @ Data.ByteString.Internal.ByteString
                      Data.ByteString.Internal.$fMonoidByteString
                      (case w of wild { Lib.BEDPE ds6 ds7 ds8 ds9 ds10 ds11 ds12 ->
                       ds12 })
                      Lib.bedpeToRbed1)) -}
3ec530299f266d85e82cd8e484891f0b
  bedpeToRbed1 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.bedpeToRbed_addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.bedpeToRbed_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
df7ce48750a9cba867e201012e5e86c4
  bedpeToRbed_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("_R"#) -}
9d444cb42900aebbeb90455ac8193fe9
  bedpeformat :: Lib.Opts -> GHC.Types.Bool
  RecSel Left Lib.Opts
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLLL),1*U(1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.Opts) ->
                 case ds6 of wild { Lib.Opts ds7 ds8 ds9 ds10 -> ds7 }) -}
fdfc37bd80569587de4159264d092980
  bedpename :: Lib.BEDPE -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.BEDPE
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLS),1*U(A,A,A,A,A,A,1*U(U,U,U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.BEDPE) ->
                 case ds6 of wild { Lib.BEDPE ds7 ds8 ds9 ds10 ds11 ds12 ds13 ->
                 ds13 }) -}
6223fce53ba01242643834ee5d36570e
  bedrecparser ::
    Data.Attoparsec.ByteString.Internal.Parser Lib.BedRecord
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.bedrecparser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <Lib.BedRecord>_R)) -}
2f2b65efc0d8291f793afe9b6e8d68dc
  bedrecparser1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.BedRecord
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.BedRecord
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wbedrecparser @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
78740db68f2462e9356716573fd65631
  bedstart :: Lib.BedRecord -> GHC.Integer.Type.Integer
  RecSel Left Lib.BedRecord
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSLL),1*U(A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.BedRecord) ->
                 case ds6 of wild { Lib.BedRecord ds7 ds8 ds9 ds10 -> ds8 }) -}
2739a8d058b6796a0256efdd8ab776f3
  boolZeroLengthCigar ::
    Data.ByteString.Internal.ByteString -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S(SLSS),1*U(U,U,U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.ByteString.Internal.ByteString) ->
                 case w of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wboolZeroLengthCigar ww1 ww2 ww3 ww4 }) -}
0eb6c786ff7ff85670da85a1b32d0db7
  boolZeroLengthCigar_go :: [GHC.Types.Char] -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S,1*U> -}
388f0b7c819092a13695e315b08f76ad
  calcMappedCount ::
    GHC.Real.Integral i =>
    Data.Conduit.Internal.Conduit.ConduitM
      Lib.AlignedRead
      c
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      i
  {- Arity: 1, HasNoCafRefs,
     Strictness: <L,1*U(1*U(1*U(C(C1(U)),A,A,A,A,A,C(U)),A,A),A,A,A,A,A,A,A,A)> -}
ff756adbb27cdae8d086c1ee3223b65d
  calcMappedCount1 ::
    (GHC.Integer.Type.Integer
     -> Data.Conduit.Internal.Pipe.Pipe
          Lib.AlignedRead
          Lib.AlignedRead
          c
          ()
          (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
          b1)
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         c
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         b1
  {- Arity: 1, Strictness: <L,C(U)> -}
b04bd266480bba4fae5518f82b411c63
  calcNotMappedPct ::
    Data.Conduit.Internal.Conduit.Sink
      Lib.AlignedRead
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      GHC.Types.Double
  {- Arity: 1, Strictness: <L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Lib.calcNotMappedPct1
                  `cast`
                (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                          <Lib.AlignedRead>_N
                          <Data.Void.Void>_N
                          <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                          <GHC.Types.Double>_R)) -}
bfa73bdc41abb46d7ba5207026ea256e
  calcNotMappedPct1 ::
    (GHC.Types.Double
     -> Data.Conduit.Internal.Pipe.Pipe
          Lib.AlignedRead
          Lib.AlignedRead
          Data.Void.Void
          ()
          (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
          b1)
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         b1
  {- Arity: 1, Strictness: <L,C(U)>,
     Unfolding: (\ @ b1
                   (eta :: GHC.Types.Double
                           -> Data.Conduit.Internal.Pipe.Pipe
                                Lib.AlignedRead
                                Lib.AlignedRead
                                Data.Void.Void
                                ()
                                (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                                b1) ->
                 Data.Conduit.Internal.Conduit.$fApplicativeZipSink2
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ Lib.AlignedRead
                   @ (GHC.Integer.Type.Integer -> GHC.Types.Double)
                   @ GHC.Integer.Type.Integer
                   Lib.$s$fMonadResourceT
                   Lib.calcNotMappedPct3
                     `cast`
                   (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                             <Lib.AlignedRead>_N
                             <Data.Void.Void>_N
                             <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                             <GHC.Integer.Type.Integer -> GHC.Types.Double>_R))
                   Lib.calcNotMappedPct2
                     `cast`
                   (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                             <Lib.AlignedRead>_N
                             <Data.Void.Void>_N
                             <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                             <GHC.Integer.Type.Integer>_R))
                   @ b1
                   (\ (a1 :: (GHC.Integer.Type.Integer -> GHC.Types.Double,
                              GHC.Integer.Type.Integer)) ->
                    eta (case a1 of wild { (,) x ds6 -> x ds6 }))) -}
be0cb7753c046f2ea0408a196e007f18
  calcNotMappedPct2 ::
    (GHC.Integer.Type.Integer
     -> Data.Conduit.Internal.Pipe.Pipe
          Lib.AlignedRead
          Lib.AlignedRead
          Data.Void.Void
          ()
          (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
          b)
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         b
  {- Arity: 1, Strictness: <L,C(U)>m2,
     Unfolding: (\ @ b
                   (w :: GHC.Integer.Type.Integer
                         -> Data.Conduit.Internal.Pipe.Pipe
                              Lib.AlignedRead
                              Lib.AlignedRead
                              Data.Void.Void
                              ()
                              (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                              b) ->
                 case Lib.$wloop Lib.defaultBed2 @ b w of ww { (#,#) ww1 ww2 ->
                 Data.Conduit.Internal.Pipe.NeedInput
                   @ Lib.AlignedRead
                   @ Lib.AlignedRead
                   @ Data.Void.Void
                   @ ()
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ b
                   ww1
                   ww2 }) -}
33234b51de30650768c50670679e0008
  calcNotMappedPct3 ::
    ((GHC.Integer.Type.Integer -> GHC.Types.Double)
     -> Data.Conduit.Internal.Pipe.Pipe
          Lib.AlignedRead
          Lib.AlignedRead
          Data.Void.Void
          ()
          (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
          b1)
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         b1
  {- Arity: 1, Strictness: <L,C(U)> -}
0dfb0520d2b78568bfdf68e984c82a3e
  calcRunStats ::
    Data.Conduit.Internal.Conduit.ZipSink
      Lib.AlignedRead
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      Lib.RunStats
  {- Arity: 1, Strictness: <L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Lib.calcRunStats1
                  `cast`
                (Trans
                     (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                               <Lib.AlignedRead>_N
                               <Data.Void.Void>_N
                               <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                               <Lib.RunStats>_R))
                     (Sym (Data.Conduit.Internal.Conduit.N:ZipSink[0]
                               <Lib.AlignedRead>_N) <Control.Monad.Trans.Resource.Internal.ResourceT
                                                       GHC.Types.IO>_N <Lib.RunStats>_N)) -}
2e2383d7f0f3a2450bf591837b0369d8
  calcRunStats1 ::
    (Lib.RunStats
     -> Data.Conduit.Internal.Pipe.Pipe
          Lib.AlignedRead
          Lib.AlignedRead
          Data.Void.Void
          ()
          (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
          b1)
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         b1
  {- Arity: 1, Strictness: <L,C(U)>,
     Unfolding: (\ @ b1
                   (eta :: Lib.RunStats
                           -> Data.Conduit.Internal.Pipe.Pipe
                                Lib.AlignedRead
                                Lib.AlignedRead
                                Data.Void.Void
                                ()
                                (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                                b1) ->
                 Data.Conduit.Internal.Conduit.$fApplicativeZipSink2
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ Lib.AlignedRead
                   @ (GHC.Integer.Type.Integer -> Lib.RunStats)
                   @ GHC.Integer.Type.Integer
                   Lib.$s$fMonadResourceT
                   Lib.calcRunStats3
                     `cast`
                   (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                             <Lib.AlignedRead>_N
                             <Data.Void.Void>_N
                             <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                             <GHC.Integer.Type.Integer -> Lib.RunStats>_R))
                   (Lib.calcRunStats2 @ Data.Void.Void)
                     `cast`
                   (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                             <Lib.AlignedRead>_N
                             <Data.Void.Void>_N
                             <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                             <GHC.Integer.Type.Integer>_R))
                   @ b1
                   (\ (a1 :: (GHC.Integer.Type.Integer -> Lib.RunStats,
                              GHC.Integer.Type.Integer)) ->
                    eta (case a1 of wild { (,) x ds6 -> x ds6 }))) -}
00e131dd20039513103cd4ce688ab024
  calcRunStats2 ::
    (GHC.Integer.Type.Integer
     -> Data.Conduit.Internal.Pipe.Pipe
          Lib.AlignedRead
          Lib.AlignedRead
          c
          ()
          (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
          b1)
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         c
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         b1
  {- Arity: 1, Strictness: <L,C(U)> -}
d8158e01f884eaf57b672daaf8346b8b
  calcRunStats3 ::
    ((GHC.Integer.Type.Integer -> Lib.RunStats)
     -> Data.Conduit.Internal.Pipe.Pipe
          Lib.AlignedRead
          Lib.AlignedRead
          Data.Void.Void
          ()
          (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
          b1)
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         b1
  {- Arity: 1, Strictness: <L,C(U)>,
     Unfolding: (\ @ b1
                   (eta :: (GHC.Integer.Type.Integer -> Lib.RunStats)
                           -> Data.Conduit.Internal.Pipe.Pipe
                                Lib.AlignedRead
                                Lib.AlignedRead
                                Data.Void.Void
                                ()
                                (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                                b1) ->
                 Data.Conduit.Internal.Conduit.$fApplicativeZipSink2
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ Lib.AlignedRead
                   @ (GHC.Integer.Type.Integer
                      -> GHC.Integer.Type.Integer -> Lib.RunStats)
                   @ GHC.Integer.Type.Integer
                   Lib.$s$fMonadResourceT
                   Lib.calcRunStats5
                     `cast`
                   (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                             <Lib.AlignedRead>_N
                             <Data.Void.Void>_N
                             <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                             <GHC.Integer.Type.Integer
                              -> GHC.Integer.Type.Integer -> Lib.RunStats>_R))
                   (Lib.calcRunStats4 @ Data.Void.Void)
                     `cast`
                   (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                             <Lib.AlignedRead>_N
                             <Data.Void.Void>_N
                             <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                             <GHC.Integer.Type.Integer>_R))
                   @ b1
                   (\ (a1 :: (GHC.Integer.Type.Integer
                              -> GHC.Integer.Type.Integer -> Lib.RunStats,
                              GHC.Integer.Type.Integer)) ->
                    eta (case a1 of wild { (,) x ds6 -> x ds6 }))) -}
d5dc8d1c01c131ee56e2e1df7b1070ba
  calcRunStats4 ::
    (GHC.Integer.Type.Integer
     -> Data.Conduit.Internal.Pipe.Pipe
          Lib.AlignedRead
          Lib.AlignedRead
          c
          ()
          (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
          b1)
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         c
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         b1
  {- Arity: 1, Strictness: <L,C(U)> -}
a429524d17eb1103d70781c0ca4a128d
  calcRunStats5 ::
    ((GHC.Integer.Type.Integer
      -> GHC.Integer.Type.Integer -> Lib.RunStats)
     -> Data.Conduit.Internal.Pipe.Pipe
          Lib.AlignedRead
          Lib.AlignedRead
          Data.Void.Void
          ()
          (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
          b1)
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         b1
  {- Arity: 1, Strictness: <L,C(U)>,
     Unfolding: (\ @ b1
                   (eta :: (GHC.Integer.Type.Integer
                            -> GHC.Integer.Type.Integer -> Lib.RunStats)
                           -> Data.Conduit.Internal.Pipe.Pipe
                                Lib.AlignedRead
                                Lib.AlignedRead
                                Data.Void.Void
                                ()
                                (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                                b1) ->
                 Data.Conduit.Internal.Conduit.$fApplicativeZipSink2
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ Lib.AlignedRead
                   @ (GHC.Integer.Type.Integer
                      -> GHC.Integer.Type.Integer
                      -> GHC.Integer.Type.Integer
                      -> Lib.RunStats)
                   @ GHC.Integer.Type.Integer
                   Lib.$s$fMonadResourceT
                   Lib.calcRunStats6
                     `cast`
                   (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                             <Lib.AlignedRead>_N
                             <Data.Void.Void>_N
                             <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                             <GHC.Integer.Type.Integer
                              -> GHC.Integer.Type.Integer
                              -> GHC.Integer.Type.Integer
                              -> Lib.RunStats>_R))
                   (Lib.calcMappedCount1 @ Data.Void.Void)
                     `cast`
                   (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                             <Lib.AlignedRead>_N
                             <Data.Void.Void>_N
                             <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                             <GHC.Integer.Type.Integer>_R))
                   @ b1
                   (\ (a1 :: (GHC.Integer.Type.Integer
                              -> GHC.Integer.Type.Integer
                              -> GHC.Integer.Type.Integer
                              -> Lib.RunStats,
                              GHC.Integer.Type.Integer)) ->
                    eta (case a1 of wild { (,) x ds6 -> x ds6 }))) -}
1b81807409fc7faa6b05c04dbae43f11
  calcRunStats6 ::
    ((GHC.Integer.Type.Integer
      -> GHC.Integer.Type.Integer
      -> GHC.Integer.Type.Integer
      -> Lib.RunStats)
     -> Data.Conduit.Internal.Pipe.Pipe
          Lib.AlignedRead
          Lib.AlignedRead
          Data.Void.Void
          ()
          (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
          b1)
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         b1
  {- Arity: 1, Strictness: <L,C(U)>m2, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ @ b1
                   (w :: (GHC.Integer.Type.Integer
                          -> GHC.Integer.Type.Integer
                          -> GHC.Integer.Type.Integer
                          -> Lib.RunStats)
                         -> Data.Conduit.Internal.Pipe.Pipe
                              Lib.AlignedRead
                              Lib.AlignedRead
                              Data.Void.Void
                              ()
                              (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                              b1) ->
                 case Lib.$wds @ b1 w of ww { (#,#) ww1 ww2 ->
                 Data.Conduit.Internal.Pipe.NeedInput
                   @ Lib.AlignedRead
                   @ Lib.AlignedRead
                   @ Data.Void.Void
                   @ ()
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ b1
                   ww1
                   ww2 }) -}
f9f4a983281c435b9944f0e783c6419e
  calcTrimdToZero ::
    GHC.Real.Integral i =>
    Data.Conduit.Internal.Conduit.ConduitM
      Lib.AlignedRead
      c
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      i
  {- Arity: 1, HasNoCafRefs,
     Strictness: <L,1*U(1*U(1*U(C(C1(U)),A,A,A,A,A,C(U)),A,A),A,A,A,A,A,A,A,A)> -}
7ae2c8d4db96030066245f1f3913219d
  calcTrimmedPct ::
    Data.Conduit.Internal.Conduit.Sink
      Lib.AlignedRead
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      GHC.Types.Double
  {- Arity: 1, Strictness: <L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Lib.calcTrimmedPct1
                  `cast`
                (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                          <Lib.AlignedRead>_N
                          <Data.Void.Void>_N
                          <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                          <GHC.Types.Double>_R)) -}
1bb83b0bfaa0e996036e02e04bc6470a
  calcTrimmedPct1 ::
    (GHC.Types.Double
     -> Data.Conduit.Internal.Pipe.Pipe
          Lib.AlignedRead
          Lib.AlignedRead
          Data.Void.Void
          ()
          (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
          b1)
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         b1
  {- Arity: 1, Strictness: <L,C(U)>,
     Unfolding: (\ @ b1
                   (eta :: GHC.Types.Double
                           -> Data.Conduit.Internal.Pipe.Pipe
                                Lib.AlignedRead
                                Lib.AlignedRead
                                Data.Void.Void
                                ()
                                (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                                b1) ->
                 Data.Conduit.Internal.Conduit.$fApplicativeZipSink2
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ Lib.AlignedRead
                   @ (GHC.Integer.Type.Integer -> GHC.Types.Double)
                   @ GHC.Integer.Type.Integer
                   Lib.$s$fMonadResourceT
                   Lib.calcTrimmedPct3
                     `cast`
                   (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                             <Lib.AlignedRead>_N
                             <Data.Void.Void>_N
                             <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                             <GHC.Integer.Type.Integer -> GHC.Types.Double>_R))
                   Lib.calcTrimmedPct2
                     `cast`
                   (Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                             <Lib.AlignedRead>_N
                             <Data.Void.Void>_N
                             <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                             <GHC.Integer.Type.Integer>_R))
                   @ b1
                   (\ (a1 :: (GHC.Integer.Type.Integer -> GHC.Types.Double,
                              GHC.Integer.Type.Integer)) ->
                    eta (case a1 of wild { (,) x ds6 -> x ds6 }))) -}
a29a3bbb0994bbf2751c200860c9fa72
  calcTrimmedPct2 ::
    (GHC.Integer.Type.Integer
     -> Data.Conduit.Internal.Pipe.Pipe
          Lib.AlignedRead
          Lib.AlignedRead
          Data.Void.Void
          ()
          (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
          b)
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         b
  {- Arity: 1, Strictness: <L,C(U)>m2,
     Unfolding: (\ @ b
                   (w :: GHC.Integer.Type.Integer
                         -> Data.Conduit.Internal.Pipe.Pipe
                              Lib.AlignedRead
                              Lib.AlignedRead
                              Data.Void.Void
                              ()
                              (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                              b) ->
                 case Lib.$wloop2 Lib.defaultBed2 @ b w of ww { (#,#) ww1 ww2 ->
                 Data.Conduit.Internal.Pipe.NeedInput
                   @ Lib.AlignedRead
                   @ Lib.AlignedRead
                   @ Data.Void.Void
                   @ ()
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   @ b
                   ww1
                   ww2 }) -}
be19d152aa4ef315727b11af683fb2f1
  calcTrimmedPct3 ::
    ((GHC.Integer.Type.Integer -> GHC.Types.Double)
     -> Data.Conduit.Internal.Pipe.Pipe
          Lib.AlignedRead
          Lib.AlignedRead
          Data.Void.Void
          ()
          (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
          b1)
    -> Data.Conduit.Internal.Pipe.Pipe
         Lib.AlignedRead
         Lib.AlignedRead
         Data.Void.Void
         ()
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
         b1
  {- Arity: 1, Strictness: <L,C(U)> -}
16771ea512fbd8546f43078b2f547aab
  calculateTrimStats ::
    Data.Conduit.Internal.Conduit.ConduitM
      Lib.AlignedRead
      c
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
      GHC.Integer.Type.Integer
  {- Arity: 1, Strictness: <L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Lib.calcRunStats4
                  `cast`
                (forall (c2 :: <*>_N).
                 Sym (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                          <Lib.AlignedRead>_N
                          <c2>_N
                          <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_N
                          <GHC.Integer.Type.Integer>_R)) -}
aa69e668ef1f426ff431a3120c37a12b
  checkChromNameMatchStatus ::
    Lib.Header -> Lib.BED -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,U><S(SSS),1*U(U,U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.checkChromNameMatchStatus1
                  `cast`
                (<Lib.Header>_R
                 ->_R <Lib.BED>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
301d59b7d6c66159efc89b1ba596f450
  checkChromNameMatchStatus1 ::
    Lib.Header
    -> Lib.BED
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U><S(SSS),1*U(U,U,U)><S,U>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Lib.Header)
                   (w1 :: Lib.BED)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w1 of ww { Data.Vector.Vector ww1 ww2 ww3 ->
                 Lib.$wcheckChromNameMatchStatus w ww1 ww2 ww3 w2 }) -}
1548ed9e60bff108c7f3d9fe02c30595
  checkChromNameMatchStatus2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Lib.checkChromNameMatchStatus3) -}
09aa0dba3542b838a55b2b2c8dbee01b
  checkChromNameMatchStatus3 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("SAM and BED chromosome name formats match."#) -}
8f985fe0d2af6ad609922933913f88ee
  checkChromNameMatchStatus4 :: GHC.Types.IO ()
  {- Strictness: x -}
4df0e7199a2d576fd4f6e7ea229826fa
  checkChromNameMatchStatus5 ::
    Data.Either.Either GHC.Base.String Lib.UChr
  {- Strictness: x -}
14a241bb44ae5352d0e072cd210224c3
  checkCigarSeqlen :: Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 1,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLSLLLL),1*U(U,U,U,U,U,U,U(U,U,U,U),U(U,U,U,U),U,U,U,U,U,U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Unfolding: (\ (a :: Lib.AlignedRead) ->
                 case a of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 case ds32 of wild1 {
                   GHC.Types.False
                   -> case ds13 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                      case Lib.$wsafemapcig ww1 ww2 ww3 ww4 of wild2 {
                        GHC.Base.Nothing -> Lib.defaultAlignment
                        GHC.Base.Just a1
                        -> case ds12 of ww5 { Data.ByteString.Internal.PS ww6 ww7 ww8 ww9 ->
                           case Lib.$wcigseqlenHdrPassTest ww6 ww7 ww8 ww9 ww ds19 of wild3 {
                             GHC.Types.False -> Lib.defaultAlignment
                             GHC.Types.True -> wild } } } }
                   GHC.Types.True -> wild } }) -}
ad224e020c2a676ccb5a23a083faa9f9
  checkCigarSeqlen1 ::
    Data.Either.Either
      GHC.Base.String
      [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
  {- Strictness: x -}
db80309a427ee95bc5bad627b4207963
  checkCigarSeqlen2 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wstarcigarP @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
3c0667aab96858813b469a0690225444
  checkInsertSize ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer -> Lib.PairedAln -> GHC.Types.Bool
  {- Arity: 3, Strictness: <S,U><L,U><L,U(1*U,1*U,1*U,1*U)>,
     Unfolding: (\ (minsz :: GHC.Integer.Type.Integer)
                   (maxsz :: GHC.Integer.Type.Integer)
                   (p :: Lib.PairedAln) ->
                 case GHC.Base.map
                        @ Lib.AlignedRead
                        @ GHC.Integer.Type.Integer
                        Lib.tlen
                        (GHC.Types.:
                           @ Lib.AlignedRead
                           (case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 -> ds6 })
                           (GHC.Types.:
                              @ Lib.AlignedRead
                              (case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 -> ds7 })
                              (case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                               GHC.Base.++ @ Lib.AlignedRead ds8 ds9 }))) of wild {
                   [] -> case GHC.List.minimum1 ret_ty GHC.Types.Bool of {}
                   : ipv ipv1
                   -> case GHC.Integer.Type.geInteger#
                             (GHC.List.minimum_go ipv1 ipv)
                             minsz of wild1 { DEFAULT ->
                      case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild1 of wild2 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case GHC.Integer.Type.leInteger#
                                  (GHC.List.maximum_go ipv1 ipv)
                                  maxsz of wild3 { DEFAULT ->
                           GHC.Prim.tagToEnum# @ GHC.Types.Bool wild3 } } } }) -}
1064f30b1252dce9132d24b243812edb
  checkcigseqlen :: Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 1,
     Strictness: <S(LLLLLLLS(SLSS)LLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,1*U(U,U,U,U),1*U(U,U,U,U),A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.AlignedRead) ->
                 case w of ww { Lib.AlignedRead ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ->
                 case ww8 of ww32 { Data.ByteString.Internal.PS ww33 ww34 ww35 ww36 ->
                 Lib.$wcheckcigseqlen ww7 ww33 ww34 ww35 ww36 ww14 } }) -}
5304412baf56793cdcd9a4e8dc89a62e
  checkcigseqlen2 :: Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 1,
     Strictness: <S(LLLLLLS(SLSS)LLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,1*U(U,U,U,U),1*U(U,U,U,U),A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.AlignedRead) ->
                 case w of ww { Lib.AlignedRead ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ->
                 case ww7 of ww32 { Data.ByteString.Internal.PS ww33 ww34 ww35 ww36 ->
                 Lib.$wcheckcigseqlen2 ww33 ww34 ww35 ww36 ww8 ww14 } }) -}
fedabac14a220824b63ea8c4f0367062
  checknonzeroCigMatch :: Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLSLLLL),1*U(A,A,A,A,A,A,A,1*U(U,U,U,1*U),A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,1*U,A,A,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.AlignedRead) ->
                 case w of ww { Lib.AlignedRead ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ->
                 Lib.$wchecknonzeroCigMatch ww8 ww19 ww27 }) -}
8c67fad9ae2ddf07048cca2892138155
  checkpos :: GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer
  {- Arity: 1, HasNoCafRefs, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (i :: GHC.Integer.Type.Integer) ->
                 case GHC.Integer.Type.ltInteger#
                        i
                        Lib.defaultBed2 of wild { DEFAULT ->
                 case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild of wild1 {
                   GHC.Types.False -> i GHC.Types.True -> Lib.defaultBed2 } }) -}
fdfc37bd80569587de4159264d092980
  chr1 :: Lib.BEDPE -> Lib.UChr
  RecSel Left Lib.BEDPE
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLL),1*U(1*U,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.BEDPE) ->
                 case ds6 of wild { Lib.BEDPE ds7 ds8 ds9 ds10 ds11 ds12 ds13 ->
                 ds7 }) -}
fdfc37bd80569587de4159264d092980
  chr2 :: Lib.BEDPE -> Lib.UChr
  RecSel Left Lib.BEDPE
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLL),1*U(A,A,A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.BEDPE) ->
                 case ds6 of wild { Lib.BEDPE ds7 ds8 ds9 ds10 ds11 ds12 ds13 ->
                 ds10 }) -}
6f760c933e008b36f1c2ad656d809c5f
  chrom :: Lib.MidFamily -> Lib.UChr
  RecSel Left Lib.MidFamily
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLL),1*U(1*U,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MidFamily) ->
                 case ds6 of wild { Lib.MidFamily ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds7 }) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  cigar :: Lib.AlignedRead -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLSLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds13 }) -}
61fce930835e638c9545c087151d83ed
  cigarP ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString
      [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.cigarP1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <[(GHC.Integer.Type.Integer,
                             Data.ByteString.Internal.ByteString)]>_R)) -}
93c4abed2ea160719fe43eed652a2142
  cigarP1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wcigarP @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  cigmap :: Lib.AlignedRead -> Lib.CigarMap
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLSLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds15 }) -}
8215899ec9c083611ca815283a7770d7
  cigseqlenHdrPassTest :: Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 1,
     Strictness: <S(LLLLLLS(SLSS)LLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,1*U(U,U,U,U),1*U(U,U,U,U),A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.AlignedRead) ->
                 case w of ww { Lib.AlignedRead ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ->
                 case ww7 of ww32 { Data.ByteString.Internal.PS ww33 ww34 ww35 ww36 ->
                 Lib.$wcigseqlenHdrPassTest ww33 ww34 ww35 ww36 ww8 ww14 } }) -}
6f4dacf24294a55247913e63b90ec787
  clearNamesAndPositions :: Lib.PairedAln -> Lib.PairedAln
  {- Arity: 1,
     Strictness: <S,1*U(1*U(U,U,A,A,U,U,U,U,U,U,A,A,A,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),1*U(U,U,A,A,U,U,U,U,U,U,A,A,A,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (p :: Lib.PairedAln) ->
                 case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                 Lib.PairedAln
                   (case ds6 of wild1 { Lib.AlignedRead ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ->
                    Lib.AlignedRead
                      ds10
                      ds11
                      Lib.NONE
                      Lib.defaultBed2
                      ds14
                      ds15
                      ds16
                      ds17
                      ds18
                      ds19
                      Lib.addtrimtag5
                      Lib.defaultBed2
                      Lib.defaultBed2
                      ds23
                      ds24
                      ds25
                      ds26
                      ds27
                      ds28
                      ds29
                      ds30
                      ds31
                      ds32
                      ds33
                      ds34
                      ds35
                      ds36
                      ds37
                      ds38
                      ds39
                      ds40 })
                   (case ds7 of wild1 { Lib.AlignedRead ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ->
                    Lib.AlignedRead
                      ds10
                      ds11
                      Lib.NONE
                      Lib.defaultBed2
                      ds14
                      ds15
                      ds16
                      ds17
                      ds18
                      ds19
                      Lib.addtrimtag5
                      Lib.defaultBed2
                      Lib.defaultBed2
                      ds23
                      ds24
                      ds25
                      ds26
                      ds27
                      ds28
                      ds29
                      ds30
                      ds31
                      ds32
                      ds33
                      ds34
                      ds35
                      ds36
                      ds37
                      ds38
                      ds39
                      ds40 })
                   ds8
                   ds9 }) -}
d85469738943ee954a859accb9e5b73e
  clearNonRealCigar :: Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 1,
     Strictness: <S(LLLLLLLS(SLSS)LLLLLLLLLLLLLLLLLLLLLLL),1*U(U,U,U,U,U,U,U,U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Unfolding: (\ (a :: Lib.AlignedRead) ->
                 case a of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 case ds13 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 let {
                   $j :: Lib.AlignedRead <join 0>
                   = Lib.AlignedRead
                       ds6
                       ds7
                       ds8
                       ds9
                       ds10
                       Lib.defaultBed2
                       ds12
                       Lib.addtrimtag5
                       ds14
                       ds15
                       ds16
                       ds17
                       Lib.defaultBed2
                       ds19
                       ds20
                       ds21
                       ds22
                       ds23
                       GHC.Types.False
                       ds25
                       ds26
                       ds27
                       ds28
                       Lib.defaultBed2
                       Lib.defaultBed2
                       ds31
                       ds32
                       ds33
                       ds34
                       ds35
                       GHC.Types.True
                 } in
                 letrec {
                   go16 :: [GHC.Types.Char] -> Lib.AlignedRead
                     <join 1> {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds37 :: [GHC.Types.Char]) ->
                     case ds37 of wild1 {
                       [] -> $j
                       : y ys
                       -> case GHC.List.elem
                                 @ GHC.Types.Char
                                 GHC.Classes.$fEqChar
                                 y
                                 Lib.clearNonRealCigar1 of wild2 {
                            GHC.Types.False -> go16 ys GHC.Types.True -> wild } }
                 } in
                 go16
                   (Data.ByteString.Internal.$wunpackAppendCharsLazy
                      ww1
                      ww2
                      ww3
                      ww4
                      (GHC.Types.[] @ GHC.Types.Char)) } }) -}
56d77e8d9ef19b3542e1e7f79e5b2d3f
  clearNonRealCigar1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Lib.clearNonRealCigar2) -}
121126785c8bd7adc30867acaa882d25
  clearNonRealCigar2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("MIDN"#) -}
39a6c2978764c861b76d43945fc90aca
  clearR1primNextFields :: Lib.PairedAln -> Lib.PairedAln
  {- Arity: 1,
     Strictness: <S(S(LLLLLLLLLLLLLLLLLLSLLLLLLLLLLLL)LLL),1*U(1*U(U,U,U,U,U,U,U,U,U,U,A,A,A,U,U,U,U,U,1*U,U,U,U,U,U,U,U,U,U,U,U,U),U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)>m,
     Unfolding: (\ (p :: Lib.PairedAln) ->
                 case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                 case ds6 of wild1 { Lib.AlignedRead ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ->
                 case ds28 of wild2 {
                   GHC.Types.False
                   -> Lib.PairedAln
                        (Lib.AlignedRead
                           ds10
                           ds11
                           Lib.NONE
                           Lib.defaultBed2
                           ds14
                           ds15
                           ds16
                           ds17
                           ds18
                           ds19
                           Lib.addtrimtag5
                           Lib.defaultBed2
                           Lib.defaultBed2
                           ds23
                           ds24
                           ds25
                           ds26
                           ds27
                           GHC.Types.False
                           ds29
                           ds30
                           ds31
                           ds32
                           ds33
                           ds34
                           ds35
                           ds36
                           ds37
                           ds38
                           ds39
                           ds40)
                        (case ds7 of wild3 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                         Lib.AlignedRead
                           ds41
                           ds42
                           Lib.NONE
                           Lib.defaultBed2
                           ds45
                           ds46
                           ds47
                           ds48
                           ds49
                           ds50
                           Lib.addtrimtag5
                           Lib.defaultBed2
                           Lib.defaultBed2
                           ds54
                           ds55
                           ds56
                           ds57
                           ds58
                           ds59
                           ds60
                           ds61
                           ds62
                           ds63
                           ds64
                           ds65
                           ds66
                           ds67
                           ds68
                           ds69
                           ds70
                           ds71 })
                        ds8
                        ds9
                   GHC.Types.True
                   -> Lib.PairedAln
                        (Lib.AlignedRead
                           ds10
                           ds11
                           ds12
                           ds13
                           ds14
                           ds15
                           ds16
                           ds17
                           ds18
                           ds19
                           Lib.addtrimtag5
                           Lib.defaultBed2
                           Lib.defaultBed2
                           ds23
                           ds24
                           ds25
                           ds26
                           ds27
                           GHC.Types.True
                           ds29
                           ds30
                           ds31
                           ds32
                           ds33
                           ds34
                           ds35
                           ds36
                           ds37
                           ds38
                           ds39
                           ds40)
                        ds7
                        ds8
                        ds9 } } }) -}
fbb505d1af8251ef0deb31005f58b329
  clearR2primNextFields :: Lib.PairedAln -> Lib.PairedAln
  {- Arity: 1,
     Strictness: <S(LS(LLLLLLLLLLLLLLLLLLSLLLLLLLLLLLL)LL),1*U(U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),1*U(U,U,U,U,U,U,U,U,U,U,A,A,A,U,U,U,U,U,1*U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)>m,
     Unfolding: (\ (p :: Lib.PairedAln) ->
                 case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                 case ds7 of wild1 { Lib.AlignedRead ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ->
                 case ds28 of wild2 {
                   GHC.Types.False
                   -> Lib.PairedAln
                        (case ds6 of wild3 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                         Lib.AlignedRead
                           ds41
                           ds42
                           Lib.NONE
                           Lib.defaultBed2
                           ds45
                           ds46
                           ds47
                           ds48
                           ds49
                           ds50
                           Lib.addtrimtag5
                           Lib.defaultBed2
                           Lib.defaultBed2
                           ds54
                           ds55
                           ds56
                           ds57
                           ds58
                           ds59
                           ds60
                           ds61
                           ds62
                           ds63
                           ds64
                           ds65
                           ds66
                           ds67
                           ds68
                           ds69
                           ds70
                           ds71 })
                        (Lib.AlignedRead
                           ds10
                           ds11
                           Lib.NONE
                           Lib.defaultBed2
                           ds14
                           ds15
                           ds16
                           ds17
                           ds18
                           ds19
                           Lib.addtrimtag5
                           Lib.defaultBed2
                           Lib.defaultBed2
                           ds23
                           ds24
                           ds25
                           ds26
                           ds27
                           GHC.Types.False
                           ds29
                           ds30
                           ds31
                           ds32
                           ds33
                           ds34
                           ds35
                           ds36
                           ds37
                           ds38
                           ds39
                           ds40)
                        ds8
                        ds9
                   GHC.Types.True
                   -> Lib.PairedAln
                        ds6
                        (Lib.AlignedRead
                           ds10
                           ds11
                           ds12
                           ds13
                           ds14
                           ds15
                           ds16
                           ds17
                           ds18
                           ds19
                           Lib.addtrimtag5
                           Lib.defaultBed2
                           Lib.defaultBed2
                           ds23
                           ds24
                           ds25
                           ds26
                           ds27
                           GHC.Types.True
                           ds29
                           ds30
                           ds31
                           ds32
                           ds33
                           ds34
                           ds35
                           ds36
                           ds37
                           ds38
                           ds39
                           ds40)
                        ds8
                        ds9 } } }) -}
b2ea8e890c960b67ba68a9faa9f77dc2
  clip :: Lib.CigarMod -> Lib.CigarMod
  {- Arity: 1,
     Strictness: <S(LLLS(SLSS)L),1*U(U,U,U,1*U(U,U,U,U),U)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.CigarMod) ->
                 case w of ww { Lib.CigarMod ww1 ww2 ww3 ww4 ww5 ->
                 case ww4 of ww6 { Data.ByteString.Internal.PS ww7 ww8 ww9 ww10 ->
                 case Lib.$wclip
                        ww1
                        ww2
                        ww3
                        ww7
                        ww8
                        ww9
                        ww10
                        ww5 of ww11 { (#,,,,#) ww12 ww13 ww14 ww15 ww16 ->
                 Lib.CigarMod ww12 ww13 ww14 ww15 ww16 } } }) -}
04883db036a62fe9825e80d478513581
  collectPrimIntAlns :: [Lib.PairedAln] -> [Lib.PairedAln]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ps :: [Lib.PairedAln]) ->
                 GHC.Base.build
                   @ Lib.PairedAln
                   (\ @ b
                      (c2 :: Lib.PairedAln -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ Lib.PairedAln
                      @ b
                      (GHC.List.filterFB @ Lib.PairedAln @ b c2 Lib.anyPrimerIntAln)
                      n
                      ps)) -}
c60bfd55426d3b410477e2b5b569433f
  contractcigar ::
    Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
  {- Arity: 1, Strictness: <S(SLSS),1*U(U,U,U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.ByteString.Internal.ByteString) ->
                 case w of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wcontractcigar ww1 ww2 ww3 ww4 }) -}
9d091b77466b33872b675d7ba5c45bda
  contractcigar1 ::
    Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
  {- Arity: 1, Strictness: <L,U(U,U,U,U)>,
     Unfolding: (\ (x :: Data.ByteString.Internal.ByteString) ->
                 GHC.Base.mappend
                   @ Data.ByteString.Internal.ByteString
                   Data.ByteString.Internal.$fMonoidByteString
                   (case x of wild { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                    case GHC.Show.$wshowSignedInt
                           0#
                           dt3
                           (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                    let {
                      cs :: [GHC.Types.Char] = GHC.Types.: @ GHC.Types.Char ww5 ww6
                    } in
                    case GHC.List.$wlenAcc @ GHC.Types.Char cs 0# of ww { DEFAULT ->
                    Data.ByteString.Internal.$wunsafePackLenChars ww cs } } })
                   (case x of wild { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                    case GHC.Prim.tagToEnum#
                           @ GHC.Types.Bool
                           (GHC.Prim.<=# dt3 0#) of wild1 {
                      GHC.Types.False
                      -> case GHC.Prim.readWord8OffAddr#
                                @ GHC.Prim.RealWorld
                                (GHC.Prim.plusAddr# dt dt2)
                                0#
                                GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                         case GHC.Prim.touch#
                                @ 'GHC.Types.LiftedRep
                                @ GHC.ForeignPtr.ForeignPtrContents
                                dt1
                                ipv of s' { DEFAULT ->
                         case GHC.Magic.runRW#
                                @ ('GHC.Types.TupleRep
                                     '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                                @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     Data.ByteString.Internal.ByteString #)
                                (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                 case GHC.Prim.newPinnedByteArray#
                                        @ GHC.Prim.RealWorld
                                        1#
                                        s of ds7 { (#,#) ipv2 ipv3 ->
                                 let {
                                   ipv4 :: GHC.Prim.Addr#
                                   = GHC.Prim.byteArrayContents#
                                       ipv3
                                         `cast`
                                       (UnsafeCo representational (GHC.Prim.MutableByteArray#
                                                                     GHC.Prim.RealWorld) GHC.Prim.ByteArray#)
                                 } in
                                 case GHC.Prim.writeWord8OffAddr#
                                        @ GHC.Prim.RealWorld
                                        ipv4
                                        0#
                                        (GHC.Prim.narrow8Word# ipv1)
                                        ipv2 of s114 { DEFAULT ->
                                 let {
                                   ipv5 :: GHC.ForeignPtr.ForeignPtrContents
                                   = GHC.ForeignPtr.PlainPtr ipv3
                                 } in
                                 case GHC.Prim.touch#
                                        @ 'GHC.Types.LiftedRep
                                        @ GHC.ForeignPtr.ForeignPtrContents
                                        ipv5
                                        s114 of s'1 { DEFAULT ->
                                 (# s'1,
                                    Data.ByteString.Internal.PS
                                      ipv4
                                      ipv5
                                      0#
                                      1# #) } } }) of ds7 { (#,#) ipv2 ipv3 ->
                         ipv3 } } }
                      GHC.Types.True
                      -> case Lib.contractcigar2
                         ret_ty Data.ByteString.Internal.ByteString
                         of {} } })) -}
c3d0efe773d0c03455c5182eaefe4c1c
  contractcigar2 :: GHC.Word.Word8
  {- Strictness: x -}
406435a20bd161dee808ee0fd91ba57c
  countDs ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> GHC.Integer.Type.Integer
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (cs :: [(GHC.Integer.Type.Integer,
                            Data.ByteString.Internal.ByteString)]) ->
                 Lib.countDs_gl
                   (GHC.Base.build
                      @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                      (\ @ b
                         (c2 :: (GHC.Integer.Type.Integer,
                                 Data.ByteString.Internal.ByteString)
                                -> b -> b)[OneShot]
                         (n :: b)[OneShot] ->
                       GHC.Base.foldr
                         @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                         @ b
                         (GHC.List.filterFB
                            @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                            @ b
                            c2
                            Lib.countDs1)
                         n
                         cs))
                   Data.OldList.genericLength1) -}
f5a6147b54e55f4078821f766576ecfc
  countDs1 ::
    (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
    -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S(LS(SLSS)),1*U(A,1*U(U,U,U,U))>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: (GHC.Integer.Type.Integer,
                          Data.ByteString.Internal.ByteString)) ->
                 case w of ww { (,) ww1 ww2 ->
                 case ww2 of ww3 { Data.ByteString.Internal.PS ww4 ww5 ww6 ww7 ->
                 Lib.$wlvl2 ww4 ww5 ww6 ww7 } }) -}
a96845d615be27a6f722843b0dc07619
  countDs_gl ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
5b9ba248a59dd05a4f718ba5daa08e74
  createprimerbedmaps ::
    Lib.Opts
    -> GHC.Types.IO
         (Data.Map.Internal.Map
            Lib.UChr (Data.IntMap.Internal.IntMap Lib.BedRecord),
          Data.Map.Internal.Map
            Lib.UChr (Data.IntMap.Internal.IntMap Lib.BedRecord))
  {- Arity: 2, Strictness: <S(SLLL),1*U(1*U,U,A,A)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.createprimerbedmaps1
                  `cast`
                (<Lib.Opts>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <(Data.Map.Internal.Map
                                   Lib.UChr (Data.IntMap.Internal.IntMap Lib.BedRecord),
                                 Data.Map.Internal.Map
                                   Lib.UChr (Data.IntMap.Internal.IntMap Lib.BedRecord))>_R)) -}
d1d6288cfc6f0ac1e43ed91c3f681e63
  createprimerbedmaps1 ::
    Lib.Opts
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Data.Map.Internal.Map
             Lib.UChr (Data.IntMap.Internal.IntMap Lib.BedRecord),
           Data.Map.Internal.Map
             Lib.UChr (Data.IntMap.Internal.IntMap Lib.BedRecord)) #)
  {- Arity: 2, Strictness: <S(SLLL),1*U(1*U,U,A,A)><S,U>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.Opts) (w1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Lib.Opts ww1 ww2 ww3 ww4 ->
                 Lib.$wcreateprimerbedmaps ww1 ww2 w1 }) -}
9cbdbee62cec48df05ce09d6e5943aff
  createprimerbedmaps10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Lib.createprimerbedmaps11) -}
91ab6b480e6c7c2383c4192e9e818548
  createprimerbedmaps11 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: (" master records failed to parse (see masterparsefails.log)\n"#) -}
957a7400d41282a9bccd8728b61000c6
  createprimerbedmaps12 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (" of "#) -}
200975b2d41382bc6e9804db48bb8657
  createprimerbedmaps13 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("WARNING: "#) -}
a0a97788a3321cac1a55e6b13afd3f3c
  createprimerbedmaps14 ::
    Data.ByteString.Internal.ByteString
    -> Data.Either.Either GHC.Base.String Lib.MasterRecord
  {- Arity: 1,
     Unfolding: (Data.Attoparsec.ByteString.Internal.parseOnly
                   @ Lib.MasterRecord
                   Lib.createprimerbedmaps15
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                             <Data.ByteString.Internal.ByteString>_N <Lib.MasterRecord>_R))) -}
c4961079ebb9c6f907d4315f7d9d308b
  createprimerbedmaps15 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.MasterRecord
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.MasterRecord
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wmasterparser @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
1bc7acb0af6fcce8cdbd201f4bc6602a
  createprimerbedmaps16 ::
    GHC.Types.Int
    -> Data.Either.Either GHC.Base.String Lib.MasterRecord
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><S,1*U>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds6 :: GHC.Types.Int)
                   (x :: Data.Either.Either
                           GHC.Base.String Lib.MasterRecord)[OneShot] ->
                 Data.Either.isRight @ GHC.Base.String @ Lib.MasterRecord x) -}
fc0dbd81553b0f3744dff97f58f3397b
  createprimerbedmaps2 ::
    GHC.IO.FilePath
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [Lib.BEDPE] #)
  {- Arity: 2, Strictness: <L,U><S,U> -}
6245e9997f2afd55cb3be8dccb4ab442
  createprimerbedmaps3 ::
    Lib.BedRecord -> Lib.BedRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(U,A,A,A)><S(SLLL),1*U(U,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lib.BedRecord) (y :: Lib.BedRecord) ->
                 case x of wild { Lib.BedRecord ds6 ds7 ds8 ds9 ->
                 case ds6 of x1 { DEFAULT ->
                 case y of wild1 { Lib.BedRecord ds10 ds11 ds12 ds13 ->
                 case ds10 of x2 { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x1 of a# { DEFAULT ->
                 case GHC.Prim.dataToTag# @ Lib.UChr x2 of b# { DEFAULT ->
                 GHC.Prim.tagToEnum#
                   @ GHC.Types.Bool
                   (GHC.Prim.==# a# b#) } } } } } }) -}
aae08c367bd71d254a6a62b67a73e9f0
  createprimerbedmaps4 ::
    GHC.IO.FilePath
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [Lib.MasterRecord] #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (fp :: GHC.IO.FilePath)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case System.IO.withBinaryFile1
                        @ Data.ByteString.Internal.ByteString
                        fp
                        GHC.IO.IOMode.ReadMode
                        Data.ByteString.readFile2
                          `cast`
                        (<GHC.IO.Handle.Types.Handle>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Data.ByteString.Internal.ByteString>_R))
                        eta of ds6 { (#,#) ipv ipv1 ->
                 let {
                   ipv2 :: [Data.ByteString.Internal.ByteString]
                   = case ipv1 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                     Data.ByteString.Char8.$wlines ww1 ww2 ww3 ww4 }
                 } in
                 let {
                   ds7 :: (Data.Map.Internal.Map
                             GHC.Types.Int
                             (Data.Either.Either GHC.Base.String Lib.MasterRecord),
                           Data.Map.Internal.Map
                             GHC.Types.Int
                             (Data.Either.Either GHC.Base.String Lib.MasterRecord))
                   = case Data.Map.Internal.$wpoly_go3
                            @ GHC.Types.Int
                            @ (Data.Either.Either GHC.Base.String Lib.MasterRecord)
                            Lib.createprimerbedmaps16
                            (Lib.$sfromList2
                               @ (Data.Either.Either GHC.Base.String Lib.MasterRecord)
                               (Lib.createprimerbedmaps_go1
                                  0#
                                  (GHC.Base.map
                                     @ Data.ByteString.Internal.ByteString
                                     @ (Data.Either.Either GHC.Base.String Lib.MasterRecord)
                                     Lib.createprimerbedmaps14
                                     ipv2))) of ww { (#,#) ww1 ww2 ->
                     (ww1, ww2) }
                 } in
                 let {
                   succs :: [Lib.MasterRecord]
                   = case ds7 of wild { (,) succm failm ->
                     Lib.createprimerbedmaps_go13
                       (GHC.Types.[] @ Lib.MasterRecord)
                       succm }
                 } in
                 let {
                   failedlinenums :: [GHC.Types.Int]
                   = case ds7 of wild { (,) succm failm ->
                     Data.Map.Internal.keys_go
                       @ GHC.Types.Int
                       @ (Data.Either.Either GHC.Base.String Lib.MasterRecord)
                       (GHC.Types.[] @ GHC.Types.Int)
                       failm }
                 } in
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        (case GHC.List.$wlenAcc
                                @ Data.ByteString.Internal.ByteString
                                ipv2
                                0# of ww2 { DEFAULT ->
                         case GHC.List.$wlenAcc
                                @ Lib.MasterRecord
                                succs
                                0# of ww1 { DEFAULT ->
                         Lib.$wparsechkMaster ww2 ww1 failedlinenums } })
                        GHC.Types.True
                        ipv of ds8 { (#,#) ipv3 ipv4 ->
                 case System.IO.withBinaryFile1
                        @ ()
                        Lib.createprimerbedmaps5
                        GHC.IO.IOMode.WriteMode
                        (\ (ds9 :: GHC.IO.Handle.Types.Handle)[OneShot]
                           (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case Data.ByteString.Char8.unlines
                                (GHC.Base.map
                                   @ GHC.Types.Int
                                   @ Data.ByteString.Internal.ByteString
                                   (GHC.List.!! @ Data.ByteString.Internal.ByteString ipv2)
                                   failedlinenums) of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                         Data.ByteString.$whPut ds9 ww1 ww2 ww3 ww4 eta1 })
                          `cast`
                        (<GHC.IO.Handle.Types.Handle>_R
                         ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                        ipv3 of ds9 { (#,#) ipv5 ipv6 ->
                 (# ipv5, succs #) } } }) -}
5e94ff77f2a4b2061345d03cda7b63dd
  createprimerbedmaps5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Lib.createprimerbedmaps6) -}
324373a31bee25d88cff68c1ad5945c7
  createprimerbedmaps6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("masterparsefails.log"#) -}
d5a9c0d03d23a7ce5d2e3b1c21e1c834
  createprimerbedmaps7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Lib.createprimerbedmaps8) -}
adeec6d1cc063ade7ac10d64eb2749ce
  createprimerbedmaps8 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: (" master records parsed successfully.\n"#) -}
bf408fc394d6b7354b185f81ef064aff
  createprimerbedmaps9 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("all "#) -}
b33999a681fa6d90374409ee5378c6ca
  createprimerbedmaps_go ::
    [[Lib.BedRecord]]
    -> [Data.IntMap.Internal.IntMap Lib.BedRecord]
    -> [(Lib.UChr, Data.IntMap.Internal.IntMap Lib.BedRecord)]
  {- Arity: 2, Strictness: <S,1*U><L,1*U> -}
6c9d8c909552fb1e05c1e86fa0f1ef08
  createprimerbedmaps_go1 ::
    GHC.Prim.Int#
    -> [Data.Either.Either GHC.Base.String Lib.MasterRecord]
    -> [(GHC.Types.Int,
         Data.Either.Either GHC.Base.String Lib.MasterRecord)]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U> -}
49fc694cfc0f8cdb6e2d4a2531c890f1
  createprimerbedmaps_go13 ::
    [Lib.MasterRecord]
    -> Data.Map.Internal.Map
         GHC.Types.Int (Data.Either.Either GHC.Base.String Lib.MasterRecord)
    -> [Lib.MasterRecord]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U><S,1*U> -}
7bbd4d124ab9a728e08072313eaaa4c5
  currpos :: Lib.CigarMod -> GHC.Integer.Type.Integer
  RecSel Left Lib.CigarMod
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLLLL),1*U(1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.CigarMod) ->
                 case ds6 of wild { Lib.CigarMod ds7 ds8 ds9 ds10 ds11 -> ds7 }) -}
ed56158e4689d7786c29fb4757318eeb
  defaultAlignment :: Lib.AlignedRead
  {- Unfolding: (Lib.AlignedRead
                   Lib.defaultAlignment3
                   Lib.$fShowAlignedRead2
                   Lib.NONE
                   Lib.defaultBed2
                   Lib.defaultBed2
                   Lib.defaultBed2
                   Lib.addtrimtag5
                   Lib.addtrimtag5
                   Lib.defaultAlignment_v
                   Lib.defaultAlignment_v
                   Lib.addtrimtag5
                   Lib.defaultBed2
                   Lib.defaultBed2
                   Lib.defaultAlignment1
                   Lib.defaultAlignment1
                   Lib.defaultAlignment1
                   Lib.defaultAlignment1
                   GHC.Types.False
                   GHC.Types.False
                   (GHC.Types.[] @ Lib.BedRecord)
                   (GHC.Types.[] @ Lib.BedRecord)
                   GHC.Types.False
                   GHC.Types.False
                   Lib.defaultBed2
                   Lib.defaultBed2
                   (GHC.Types.[] @ Data.ByteString.Internal.ByteString)
                   GHC.Types.False
                   Lib.defaultAlignment1
                   Lib.defaultAlignment1
                   Lib.defaultBed
                   GHC.Types.False) -}
10aba3d8c7a2fc10e1ea035d1f1ad653
  defaultAlignment1 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.List.$wlenAcc
                        @ GHC.Types.Char
                        (GHC.Types.[] @ GHC.Types.Char)
                        0# of ww { DEFAULT ->
                 Data.ByteString.Internal.$wunsafePackLenChars
                   ww
                   (GHC.Types.[] @ GHC.Types.Char) }) -}
76eaf1c4b40e21d9da56c5f9c211d7cd
  defaultAlignment2 ::
    (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
  {- Strictness: m,
     Unfolding: ((Lib.defaultBed2, Lib.addtrimtag5)) -}
f3d1918c6e9012863e7378ab4d21e999
  defaultAlignment3 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.defaultAlignment_addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.defaultAlignment_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
66b93963dab70d0c63dab698c78033b8
  defaultAlignment_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("NONE"#) -}
2ea4f1aab1ba008acca6793fb82753d7
  defaultAlignment_v ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                   Lib.defaultAlignment2
                   (GHC.Types.[]
                      @ (GHC.Integer.Type.Integer,
                         Data.ByteString.Internal.ByteString))) -}
89a357d8179afa0ad3110a108f162b03
  defaultBEDPE :: Lib.BEDPE
  {- Strictness: m,
     Unfolding: (Lib.BEDPE
                   Lib.NONE
                   Lib.defaultBed2
                   Lib.defaultBed2
                   Lib.NONE
                   Lib.defaultBed2
                   Lib.defaultBed2
                   Lib.defaultBEDPE1) -}
a9c8804542b92fb045882e14bc071d9f
  defaultBEDPE1 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.defaultBEDPE_addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.defaultBEDPE_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
c55a84882f1b651a68f7924cee88b9c1
  defaultBEDPE_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("DEFAULTBEDPE"#) -}
935c579c0313a407a7f82cf181a450bc
  defaultBed :: Lib.BedRecord
  {- Strictness: m,
     Unfolding: (Lib.BedRecord
                   Lib.NONE
                   Lib.defaultBed2
                   Lib.defaultBed2
                   Lib.defaultBed1) -}
e606e5169747828134cf11520c149c0c
  defaultBed1 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.defaultBed_addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.defaultBed_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
d4a433efe44f8f279eb0e0899856e7a3
  defaultBed2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
943f5adacb4832af08c9939201876691
  defaultBed_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("DEFAULT"#) -}
8a8acb8137e7cd1f3bf73880bcb0a376
  defaultMasterRec :: Lib.MasterRecord
  {- Unfolding: (Lib.MasterRecord
                   Lib.NONE
                   Lib.defaultBed2
                   Lib.defaultBed2
                   Lib.defaultMasterRec1
                   Lib.defaultBed2
                   Lib.defaultBed2
                   Lib.defaultBed2
                   Lib.defaultBed2
                   Lib.defaultMasterRec1
                   Lib.defaultMasterRec1
                   Lib.defaultMasterRec1
                   Lib.defaultMasterRec1) -}
42957e6c639c60b7e21fedeb0ee88a6d
  defaultMasterRec1 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.defaultMasterRec_addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.defaultMasterRec_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
27bfca2b76ca6ec465b681fede29642e
  defaultMasterRec_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("EMPTY"#) -}
fdc2049224bc60c1f015dab8260b314f
  defaultMidFam :: Lib.MidFamily
  {- Strictness: m,
     Unfolding: (Lib.MidFamily
                   Lib.NONE
                   Lib.defaultBed2
                   Lib.defaultBed2
                   Lib.defaultMasterRec1
                   (GHC.Types.[] @ Lib.AlignedRead)
                   Lib.defaultBed2
                   Lib.defaultBed2
                   Lib.defaultBed2
                   Lib.defaultBed2
                   Lib.defaultBed) -}
e585338d5e66fcb4ba404a8cb000a754
  defaultPairedAln :: Lib.PairedAln
  {- Strictness: m,
     Unfolding: (Lib.PairedAln
                   Lib.defaultAlignment
                   Lib.defaultAlignment
                   (GHC.Types.[] @ Lib.AlignedRead)
                   (GHC.Types.[] @ Lib.AlignedRead)) -}
e2c0c85c514784c2ed19970c7fc99cc7
  dupRead :: Lib.SAMFlag -> GHC.Types.Bool
  RecSel Left Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLSL),1*U(A,A,A,A,A,A,A,A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.SAMFlag) ->
                 case ds6 of wild { Lib.SAMFlag ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds17 }) -}
fdfc37bd80569587de4159264d092980
  end1 :: Lib.BEDPE -> GHC.Integer.Type.Integer
  RecSel Left Lib.BEDPE
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLL),1*U(A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.BEDPE) ->
                 case ds6 of wild { Lib.BEDPE ds7 ds8 ds9 ds10 ds11 ds12 ds13 ->
                 ds9 }) -}
fdfc37bd80569587de4159264d092980
  end2 :: Lib.BEDPE -> GHC.Integer.Type.Integer
  RecSel Left Lib.BEDPE
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSL),1*U(A,A,A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.BEDPE) ->
                 case ds6 of wild { Lib.BEDPE ds7 ds8 ds9 ds10 ds11 ds12 ds13 ->
                 ds12 }) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  endpos :: Lib.AlignedRead -> GHC.Integer.Type.Integer
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds11 }) -}
102c983c3b18add8b8c3c9db231920de
  expandRefmatchedCigar ::
    Lib.CigarMap -> Data.ByteString.Internal.ByteString
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (cmap :: Lib.CigarMap) ->
                 case Data.ByteString.concat
                        (Lib.expandRefmatchedCigar_go
                           cmap) of wild { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<=# dt3 0#) of wild1 {
                   GHC.Types.False
                   -> case GHC.Magic.runRW#
                             @ ('GHC.Types.TupleRep
                                  '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                             @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                                  Data.ByteString.Internal.ByteString #)
                             (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case GHC.Prim.noDuplicate#
                                     @ GHC.Prim.RealWorld
                                     s of s' { DEFAULT ->
                              case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.<# dt3 0#) of wild2 {
                                GHC.Types.False
                                -> case GHC.Prim.newPinnedByteArray#
                                          @ GHC.Prim.RealWorld
                                          dt3
                                          s' of ds6 { (#,#) ipv ipv1 ->
                                   let {
                                     ipv2 :: GHC.Prim.Addr#
                                     = GHC.Prim.byteArrayContents#
                                         ipv1
                                           `cast`
                                         (UnsafeCo representational (GHC.Prim.MutableByteArray#
                                                                       GHC.Prim.RealWorld) GHC.Prim.ByteArray#)
                                   } in
                                   case Lib.$wgo6
                                          (GHC.Prim.plusAddr# dt dt2)
                                          ipv2
                                          (GHC.Prim.plusAddr# dt (GHC.Prim.+# dt2 dt3))
                                          ipv of ds7 { (#,#) ipv4 ipv5 ->
                                   case ipv5 of wild3 { GHC.Ptr.Ptr a1 ->
                                   case GHC.Prim.touch#
                                          @ 'GHC.Types.LiftedRep
                                          @ GHC.ForeignPtr.ForeignPtrContents
                                          dt1
                                          ipv4 of s'1 { DEFAULT ->
                                   let {
                                     ipv6 :: GHC.Prim.Int# = GHC.Prim.minusAddr# a1 ipv2
                                   } in
                                   let {
                                     ipv3 :: GHC.ForeignPtr.ForeignPtrContents
                                     = GHC.ForeignPtr.PlainPtr ipv1
                                   } in
                                   case GHC.Prim.tagToEnum#
                                          @ GHC.Types.Bool
                                          (GHC.Prim.>=# ipv6 dt3) of wild4 {
                                     GHC.Types.False
                                     -> case GHC.Prim.tagToEnum#
                                               @ GHC.Types.Bool
                                               (GHC.Prim.<# ipv6 0#) of wild5 {
                                          GHC.Types.False
                                          -> case GHC.Prim.newPinnedByteArray#
                                                    @ GHC.Prim.RealWorld
                                                    ipv6
                                                    s'1 of ds8 { (#,#) ipv7 ipv8 ->
                                             let {
                                               ipv9 :: GHC.Prim.Addr#
                                               = GHC.Prim.byteArrayContents#
                                                   ipv8
                                                     `cast`
                                                   (UnsafeCo representational (GHC.Prim.MutableByteArray#
                                                                                 GHC.Prim.RealWorld) GHC.Prim.ByteArray#)
                                             } in
                                             case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                                                   -> GHC.Prim.Addr#
                                                                                   -> GHC.Prim.Word#
                                                                                   -> GHC.Prim.State#
                                                                                        GHC.Prim.RealWorld
                                                                                   -> (# GHC.Prim.State#
                                                                                           GHC.Prim.RealWorld,
                                                                                         GHC.Prim.Addr# #)}
                                                    ipv9
                                                    ipv2
                                                    (GHC.Prim.int2Word# ipv6)
                                                    ipv7 of wild6 { (#,#) ds9 ds10 ->
                                             let {
                                               ipv10 :: GHC.ForeignPtr.ForeignPtrContents
                                               = GHC.ForeignPtr.PlainPtr ipv8
                                             } in
                                             case GHC.Prim.touch#
                                                    @ 'GHC.Types.LiftedRep
                                                    @ GHC.ForeignPtr.ForeignPtrContents
                                                    ipv10
                                                    ds9 of s'2 { DEFAULT ->
                                             case GHC.Prim.touch#
                                                    @ 'GHC.Types.LiftedRep
                                                    @ GHC.ForeignPtr.ForeignPtrContents
                                                    ipv3
                                                    s'2 of s'3 { DEFAULT ->
                                             (# s'3,
                                                Data.ByteString.Internal.PS
                                                  ipv9
                                                  ipv10
                                                  0#
                                                  ipv6 #) } } } }
                                          GHC.Types.True
                                          -> case GHC.ForeignPtr.mallocPlainForeignPtrBytes2
                                             ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                       Data.ByteString.Internal.ByteString #)
                                             of {} }
                                     GHC.Types.True
                                     -> case GHC.Prim.touch#
                                               @ 'GHC.Types.LiftedRep
                                               @ GHC.ForeignPtr.ForeignPtrContents
                                               ipv3
                                               s'1 of s'2 { DEFAULT ->
                                        (# s'2,
                                           Data.ByteString.Internal.PS
                                             ipv2
                                             ipv3
                                             0#
                                             dt3 #) } } } } } }
                                GHC.Types.True
                                -> case GHC.ForeignPtr.mallocPlainForeignPtrBytes2
                                   ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                             Data.ByteString.Internal.ByteString #)
                                   of {} } }) of ds6 { (#,#) ipv ipv1 ->
                      ipv1 }
                   GHC.Types.True -> wild } }) -}
167f8f7a8407c860312ada80857ba528
  expandRefmatchedCigar_go ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> [Data.ByteString.Internal.ByteString]
  {- Arity: 1, Strictness: <S,1*U> -}
e1202b633109f72b73c6d7adda18edaf
  expandcigar :: Lib.CigarMap -> Data.ByteString.Internal.ByteString
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (cmap :: Lib.CigarMap) ->
                 Data.ByteString.concat (Lib.expandRefmatchedCigar_go cmap)) -}
fca348100e6716f0e154077d26c9d646
  expandcigar2 ::
    Lib.CigarMap
    -> [(GHC.Integer.Type.Integer,
         Data.ByteString.Internal.ByteString)]
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (cmap :: Lib.CigarMap) ->
                 case Data.ByteString.concat
                        (Lib.expandRefmatchedCigar_go
                           cmap) of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 let {
                   ops :: [Data.ByteString.Internal.ByteString]
                   = GHC.Base.map
                       @ GHC.Types.Char
                       @ Data.ByteString.Internal.ByteString
                       Data.ByteString.Char8.singleton
                       (Data.ByteString.Internal.$wunpackAppendCharsLazy
                          ww1
                          ww2
                          ww3
                          ww4
                          (GHC.Types.[] @ GHC.Types.Char))
                 } in
                 let {
                   lim :: GHC.Integer.Type.Integer
                   = Lib.expandcigar2_gl ops Data.OldList.genericLength1
                 } in
                 letrec {
                   go16 :: GHC.Integer.Type.Integer
                           -> [Data.ByteString.Internal.ByteString]
                           -> [(GHC.Integer.Type.Integer,
                                Data.ByteString.Internal.ByteString)]
                     {- Arity: 2, Strictness: <S,U><L,1*U> -}
                   = \ (x :: GHC.Integer.Type.Integer)
                       (eta :: [Data.ByteString.Internal.ByteString]) ->
                     case GHC.Integer.Type.gtInteger# x lim of wild { DEFAULT ->
                     case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild of wild1 {
                       GHC.Types.False
                       -> case eta of wild2 {
                            []
                            -> GHC.Types.[]
                                 @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                            : y ys
                            -> GHC.Types.:
                                 @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                                 (x, y)
                                 (go16 (GHC.Integer.Type.plusInteger x Lib.shiftcrds2) ys) }
                       GHC.Types.True
                       -> GHC.Types.[]
                            @ (GHC.Integer.Type.Integer,
                               Data.ByteString.Internal.ByteString) } }
                 } in
                 go16 Lib.shiftcrds2 ops }) -}
e7d9e53af60d83dc2cf53ae240a177db
  expandcigar2_gl ::
    [Data.ByteString.Internal.ByteString]
    -> GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
2566e48f15a53ba6051496f0d98432ee
  exrights :: Data.Either.Either a1 a2 -> a2
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a @ a1 (x :: Data.Either.Either a a1) ->
                 case x of wild {
                   Data.Either.Left ipv -> GHC.List.badHead @ a1
                   Data.Either.Right a2 -> a2 }) -}
d3406aa83dae28509220d16823298ba3
  exrights2 :: [a] -> GHC.Base.Maybe a
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (xs :: [a]) ->
                 case GHC.List.$wlenAcc @ a xs 0# of ww2 {
                   DEFAULT -> GHC.Base.Just @ a (GHC.List.head @ a xs)
                   0# -> GHC.Base.Nothing @ a }) -}
e2c0c85c514784c2ed19970c7fc99cc7
  failedQC :: Lib.SAMFlag -> GHC.Types.Bool
  RecSel Left Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLSLL),1*U(A,A,A,A,A,A,A,A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.SAMFlag) ->
                 case ds6 of wild { Lib.SAMFlag ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds16 }) -}
883ac17847d677037ea1b743ebb4996f
  filtpadassoc ::
    [(GHC.Types.Int, Data.ByteString.Internal.ByteString)]
    -> [(GHC.Types.Int, Data.ByteString.Internal.ByteString)]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (asclist :: [(GHC.Types.Int,
                                 Data.ByteString.Internal.ByteString)]) ->
                 GHC.Base.build
                   @ (GHC.Types.Int, Data.ByteString.Internal.ByteString)
                   (\ @ b
                      (c2 :: (GHC.Types.Int, Data.ByteString.Internal.ByteString)
                             -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ (GHC.Types.Int, Data.ByteString.Internal.ByteString)
                      @ b
                      (GHC.List.filterFB
                         @ (GHC.Types.Int, Data.ByteString.Internal.ByteString)
                         @ b
                         c2
                         Lib.filtpadassoc1)
                      n
                      asclist)) -}
37fc76c3545c8ecf141841847915a6e4
  filtpadassoc1 ::
    (GHC.Types.Int, Data.ByteString.Internal.ByteString)
    -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S(LS(SLSS)),1*U(A,1*U(U,U,U,U))>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: (GHC.Types.Int, Data.ByteString.Internal.ByteString)) ->
                 case w of ww { (,) ww1 ww2 ->
                 case ww2 of ww3 { Data.ByteString.Internal.PS ww4 ww5 ww6 ww7 ->
                 Lib.$wlvl3 ww4 ww5 ww6 ww7 } }) -}
8414700899b163302fe7e4e815e67956
  filtpadcmap :: Lib.CigarMap -> Lib.CigarMap
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (cmap :: Lib.CigarMap) ->
                 GHC.Base.build
                   @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                   (\ @ b
                      (c2 :: (GHC.Integer.Type.Integer,
                              Data.ByteString.Internal.ByteString)
                             -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                      @ b
                      (GHC.List.filterFB
                         @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                         @ b
                         c2
                         Lib.filtpadcmap1)
                      n
                      cmap)) -}
dde9637237171949c4650c7f679269a3
  filtpadcmap1 ::
    (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
    -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S(LS(SLSS)),1*U(A,1*U(U,U,U,U))>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: (GHC.Integer.Type.Integer,
                          Data.ByteString.Internal.ByteString)) ->
                 case w of ww { (,) ww1 ww2 ->
                 case ww2 of ww3 { Data.ByteString.Internal.PS ww4 ww5 ww6 ww7 ->
                 Lib.$wlvl4 ww4 ww5 ww6 ww7 } }) -}
5ffa69c72eb81c9651c9b36b085e355a
  findByQname ::
    Data.ByteString.Internal.ByteString
    -> [Lib.AlignedRead] -> [Lib.AlignedRead]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U(U,U,U,U)><S,1*U>,
     Unfolding: (\ (name :: Data.ByteString.Internal.ByteString)
                   (as :: [Lib.AlignedRead]) ->
                 GHC.List.filter
                   @ Lib.AlignedRead
                   (\ (x :: Lib.AlignedRead) ->
                    case x of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                    case ds6 of wild1 { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                    case name of wild2 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                    case GHC.Prim.tagToEnum#
                           @ GHC.Types.Bool
                           (GHC.Prim./=# dt3 dt7) of wild3 {
                      GHC.Types.False
                      -> case GHC.Prim.tagToEnum#
                                @ GHC.Types.Bool
                                (GHC.Prim.eqAddr# dt dt4) of wild4 {
                           GHC.Types.False
                           -> case Data.ByteString.Internal.$wcompareBytes
                                     dt
                                     dt1
                                     dt2
                                     dt3
                                     dt4
                                     dt5
                                     dt6
                                     dt7 of wild5 {
                                DEFAULT -> GHC.Types.False GHC.Types.EQ -> GHC.Types.True }
                           GHC.Types.True
                           -> case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.==# dt2 dt6) of wild5 {
                                GHC.Types.False
                                -> case Data.ByteString.Internal.$wcompareBytes
                                          dt
                                          dt1
                                          dt2
                                          dt3
                                          dt4
                                          dt5
                                          dt6
                                          dt7 of wild6 {
                                     DEFAULT -> GHC.Types.False GHC.Types.EQ -> GHC.Types.True }
                                GHC.Types.True -> GHC.Types.True } }
                      GHC.Types.True -> GHC.Types.False } } } })
                   as) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  fint :: Lib.AlignedRead -> [Lib.BedRecord]
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLSLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds26 }) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  flag :: Lib.AlignedRead -> GHC.Types.Int
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds8 }) -}
1edbf73fb802a55dae6381d37cf4f454
  flattenPairedAln :: Lib.PairedAln -> [Lib.AlignedRead]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(1*U,1*U,1*U,1*U)>,
     Unfolding: (\ (p :: Lib.PairedAln) ->
                 Data.OldList.sortBy
                   @ Lib.AlignedRead
                   Lib.$fOrdAlignedRead_$ccompare
                   (GHC.Types.:
                      @ Lib.AlignedRead
                      (case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 -> ds6 })
                      (GHC.Types.:
                         @ Lib.AlignedRead
                         (case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 -> ds7 })
                         (case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                          GHC.Base.++ @ Lib.AlignedRead ds8 ds9 })))) -}
631880f45134a013bc3c57542475f1c8
  flipClrBit :: GHC.Types.Int -> GHC.Types.Int -> GHC.Types.Int
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>m,
     Unfolding: InlineRule (2, True, True)
                (\ (x :: GHC.Types.Int) (y :: GHC.Types.Int) ->
                 Data.Bits.$fBitsInt_$cclearBit y x) -}
64d3ed9ba39ae173892867b6bb9c8bac
  flipSetBit :: GHC.Types.Int -> GHC.Types.Int -> GHC.Types.Int
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,1*U(U)>m,
     Unfolding: InlineRule (2, True, True)
                (\ (x :: GHC.Types.Int) (y :: GHC.Types.Int) ->
                 Data.Bits.$fBitsInt_$csetBit y x) -}
8306a6b177b5e3853f10d01a4062f0a7
  flipTstBit :: GHC.Types.Int -> GHC.Types.Int -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,1*U(U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: GHC.Types.Int) (y :: GHC.Types.Int) ->
                 case y of wild { GHC.Types.I# x# ->
                 case x of wild1 { GHC.Types.I# i# ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# i# 64#) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.andI#
                             x#
                             (GHC.Prim.uncheckedIShiftL# 1# i#) of wild4 {
                        DEFAULT -> GHC.Types.True 0# -> GHC.Types.False }
                   GHC.Types.True -> GHC.Types.False } } }) -}
e2c0c85c514784c2ed19970c7fc99cc7
  fstInPair :: Lib.SAMFlag -> GHC.Types.Bool
  RecSel Left Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLSLLLLL),1*U(A,A,A,A,A,A,1*U,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.SAMFlag) ->
                 case ds6 of wild { Lib.SAMFlag ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds13 }) -}
b57b4379b5f371d2baf718634f4dfa9f
  genLogFilePath :: GHC.IO.FilePath -> GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (fp :: GHC.IO.FilePath) ->
                 case GHC.List.$wlenAcc @ GHC.Types.Char fp 0# of ww { DEFAULT ->
                 case Data.ByteString.Internal.$wunsafePackLenChars
                        ww
                        fp of wild { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                 let {
                   parts :: [Data.ByteString.Internal.ByteString]
                   = case dt3 of ds6 {
                       DEFAULT
                       -> letrec {
                            $wloop3 :: GHC.Prim.Int# -> [Data.ByteString.Internal.ByteString]
                              {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                            = \ (ww1 :: GHC.Prim.Int#) ->
                              case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                                    -> GHC.Prim.Int#
                                                                    -> GHC.Prim.Word#
                                                                    -> GHC.Prim.State#
                                                                         GHC.Prim.RealWorld
                                                                    -> (# GHC.Prim.State#
                                                                            GHC.Prim.RealWorld,
                                                                          GHC.Prim.Addr# #)}
                                     (GHC.Prim.plusAddr# dt (GHC.Prim.+# dt2 ww1))
                                     46#
                                     (GHC.Prim.int2Word# (GHC.Prim.-# ds6 ww1))
                                     GHC.Prim.realWorld# of wild2 { (#,#) ds7 ds8 ->
                              case GHC.Prim.touch#
                                     @ 'GHC.Types.LiftedRep
                                     @ GHC.ForeignPtr.ForeignPtrContents
                                     dt1
                                     ds7 of s' { DEFAULT ->
                              case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.eqAddr# ds8 __NULL) of wild3 {
                                GHC.Types.False
                                -> let {
                                     i :: GHC.Types.Int
                                     = case GHC.Prim.touch#
                                              @ 'GHC.Types.LiftedRep
                                              @ GHC.ForeignPtr.ForeignPtrContents
                                              dt1
                                              GHC.Prim.realWorld# of s'1 { DEFAULT ->
                                       GHC.Types.I#
                                         (GHC.Prim.minusAddr# ds8 (GHC.Prim.plusAddr# dt dt2)) }
                                   } in
                                   GHC.Types.:
                                     @ Data.ByteString.Internal.ByteString
                                     (case i of wild4 { GHC.Types.I# x1 ->
                                      Data.ByteString.Internal.PS
                                        dt
                                        dt1
                                        (GHC.Prim.+# dt2 ww1)
                                        (GHC.Prim.-# x1 ww1) })
                                     (case i of wild4 { GHC.Types.I# x1 ->
                                      $wloop3 (GHC.Prim.+# x1 1#) })
                                GHC.Types.True
                                -> GHC.Types.:
                                     @ Data.ByteString.Internal.ByteString
                                     (Data.ByteString.Internal.PS
                                        dt
                                        dt1
                                        (GHC.Prim.+# dt2 ww1)
                                        (GHC.Prim.-# ds6 ww1))
                                     (GHC.Types.[] @ Data.ByteString.Internal.ByteString) } } }
                          } in
                          $wloop3 0#
                       0# -> GHC.Types.[] @ Data.ByteString.Internal.ByteString }
                 } in
                 case GHC.List.$wlenAcc
                        @ Data.ByteString.Internal.ByteString
                        parts
                        0# of ww2 { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# ww2 2#) of wild1 {
                   GHC.Types.False
                   -> case GHC.Base.mappend
                             @ Data.ByteString.Internal.ByteString
                             Data.ByteString.Internal.$fMonoidByteString
                             (case parts of wild2 {
                                [] -> GHC.List.badHead @ Data.ByteString.Internal.ByteString
                                : x ds6 -> x })
                             Lib.genLogFilePath3 of ww1 { Data.ByteString.Internal.PS ww3 ww4 ww5 ww6 ->
                      Data.ByteString.Internal.$wunpackAppendCharsLazy
                        ww3
                        ww4
                        ww5
                        ww6
                        (GHC.Types.[] @ GHC.Types.Char) }
                   GHC.Types.True -> Lib.genLogFilePath1 } } } }) -}
f26e405823139b6e38cfe9737fc46080
  genLogFilePath1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.genLogFilePath2) -}
e3c6025852e1bd254c4a5a778dab1ef9
  genLogFilePath2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("primerclip_runstats.log"#) -}
c92f032736df868f791eeeebdb899fc7
  genLogFilePath3 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.genLogFilePath_addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.genLogFilePath_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
29aa789b6641164ee4924b51dd727256
  genLogFilePath_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("_primerclip_runstats.log"#) -}
9b58dd5a4bb031851b63c02dc6a65266
  getAlignedLength ::
    Data.ByteString.Internal.ByteString -> GHC.Integer.Type.Integer
  {- Arity: 1, Strictness: <S(SLSS),1*U(U,U,U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.ByteString.Internal.ByteString) ->
                 case w of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wgetAlignedLength ww1 ww2 ww3 ww4 }) -}
d3bffabfe998e0a5376aa0110f3713d9
  getAlignedLength_go ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
619405dd2cdd79a85842dbd7296a2e85
  getFPrimerBEDfromMaster :: Lib.MasterRecord -> Lib.BedRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <L,U(1*U,A,A,A,1*U,1*U,A,A,1*U,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (mr :: Lib.MasterRecord) ->
                 Lib.BedRecord
                   (case mr of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds6 })
                   (case mr of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds10 })
                   (case mr of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds11 })
                   (case mr of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds14 })) -}
a753a642ffe000069c9fef0447802f7c
  getMasterFile :: GHC.IO.FilePath -> GHC.Types.IO [Lib.MasterRecord]
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.createprimerbedmaps4
                  `cast`
                (<GHC.IO.FilePath>_R
                 ->_R Sym (GHC.Types.N:IO[0] <[Lib.MasterRecord]>_R)) -}
f6d6e0ba7e822648bc0cc565a4fd34c8
  getNclips ::
    [Data.ByteString.Internal.ByteString]
    -> GHC.Types.Char -> [Data.ByteString.Internal.ByteString]
  {- Arity: 2, Strictness: <S,1*U><L,U(U)>,
     Unfolding: (\ (ciggrps :: [Data.ByteString.Internal.ByteString])
                   (cigchar :: GHC.Types.Char) ->
                 letrec {
                   go16 :: [Data.ByteString.Internal.ByteString]
                           -> [Data.ByteString.Internal.ByteString]
                     {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds6 :: [Data.ByteString.Internal.ByteString]) ->
                     case ds6 of wild {
                       [] -> GHC.Types.[] @ Data.ByteString.Internal.ByteString
                       : y ys
                       -> case y of wild1 { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                          case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.<=# dt3 0#) of wild2 {
                            GHC.Types.False
                            -> case GHC.Magic.runRW#
                                      @ ('GHC.Types.TupleRep
                                           '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                                      @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                                           Data.ByteString.Internal.ByteString #)
                                      (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                       case GHC.Prim.noDuplicate#
                                              @ GHC.Prim.RealWorld
                                              s of s' { DEFAULT ->
                                       case GHC.Prim.tagToEnum#
                                              @ GHC.Types.Bool
                                              (GHC.Prim.<# dt3 0#) of wild3 {
                                         GHC.Types.False
                                         -> case GHC.Prim.newPinnedByteArray#
                                                   @ GHC.Prim.RealWorld
                                                   dt3
                                                   s' of ds7 { (#,#) ipv ipv1 ->
                                            let {
                                              ipv2 :: GHC.Prim.Addr#
                                              = GHC.Prim.byteArrayContents#
                                                  ipv1
                                                    `cast`
                                                  (UnsafeCo representational (GHC.Prim.MutableByteArray#
                                                                                GHC.Prim.RealWorld) GHC.Prim.ByteArray#)
                                            } in
                                            let {
                                              ipv3 :: GHC.ForeignPtr.ForeignPtrContents
                                              = GHC.ForeignPtr.PlainPtr ipv1
                                            } in
                                            let {
                                              lvl1013 :: Data.ByteString.Internal.ByteString
                                              = Data.ByteString.Internal.PS ipv2 ipv3 0# dt3
                                            } in
                                            letrec {
                                              $wgo40 :: GHC.Prim.Addr#
                                                        -> GHC.Prim.Addr#
                                                        -> GHC.Prim.Addr#
                                                        -> GHC.Prim.State# GHC.Prim.RealWorld
                                                        -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                              Data.ByteString.Internal.ByteString #)
                                                <join 4> {- Arity: 4,
                                                            Strictness: <S,U><S,U><S,U><S,U>,
                                                            Inline: [0] -}
                                              = \ (ww :: GHC.Prim.Addr#)
                                                  (ww1 :: GHC.Prim.Addr#)
                                                  (ww2 :: GHC.Prim.Addr#)
                                                  (w :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                                case GHC.Prim.tagToEnum#
                                                       @ GHC.Types.Bool
                                                       (GHC.Prim.eqAddr# ww ww2) of wild4 {
                                                  GHC.Types.False
                                                  -> case GHC.Prim.readWord8OffAddr#
                                                            @ GHC.Prim.RealWorld
                                                            ww
                                                            0#
                                                            w of ds8 { (#,#) ipv4 ipv5 ->
                                                     case cigchar of wild5 { GHC.Types.C# y1 ->
                                                     case GHC.Prim.tagToEnum#
                                                            @ GHC.Types.Bool
                                                            (GHC.Prim.eqChar#
                                                               (GHC.Prim.chr#
                                                                  (GHC.Prim.word2Int# ipv5))
                                                               y1) of wild6 {
                                                       GHC.Types.False
                                                       -> $wgo40
                                                            (GHC.Prim.plusAddr# ww 1#)
                                                            ww1
                                                            ww2
                                                            ipv4
                                                       GHC.Types.True
                                                       -> case GHC.Prim.writeWord8OffAddr#
                                                                 @ GHC.Prim.RealWorld
                                                                 ww1
                                                                 0#
                                                                 ipv5
                                                                 ipv4 of s114 { DEFAULT ->
                                                          $wgo40
                                                            (GHC.Prim.plusAddr# ww 1#)
                                                            (GHC.Prim.plusAddr# ww1 1#)
                                                            ww2
                                                            s114 } } } }
                                                  GHC.Types.True
                                                  -> case GHC.Prim.touch#
                                                            @ 'GHC.Types.LiftedRep
                                                            @ GHC.ForeignPtr.ForeignPtrContents
                                                            dt1
                                                            w of s'1 { DEFAULT ->
                                                     let {
                                                       ipv6 :: GHC.Prim.Int#
                                                       = GHC.Prim.minusAddr# ww1 ipv2
                                                     } in
                                                     case GHC.Prim.tagToEnum#
                                                            @ GHC.Types.Bool
                                                            (GHC.Prim.>=# ipv6 dt3) of wild5 {
                                                       GHC.Types.False
                                                       -> case GHC.Prim.tagToEnum#
                                                                 @ GHC.Types.Bool
                                                                 (GHC.Prim.<# ipv6 0#) of wild6 {
                                                            GHC.Types.False
                                                            -> case GHC.Prim.newPinnedByteArray#
                                                                      @ GHC.Prim.RealWorld
                                                                      ipv6
                                                                      s'1 of ds8 { (#,#) ipv7 ipv8 ->
                                                               let {
                                                                 ipv9 :: GHC.Prim.Addr#
                                                                 = GHC.Prim.byteArrayContents#
                                                                     ipv8
                                                                       `cast`
                                                                     (UnsafeCo representational (GHC.Prim.MutableByteArray#
                                                                                                   GHC.Prim.RealWorld) GHC.Prim.ByteArray#)
                                                               } in
                                                               case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                                                                     -> GHC.Prim.Addr#
                                                                                                     -> GHC.Prim.Word#
                                                                                                     -> GHC.Prim.State#
                                                                                                          GHC.Prim.RealWorld
                                                                                                     -> (# GHC.Prim.State#
                                                                                                             GHC.Prim.RealWorld,
                                                                                                           GHC.Prim.Addr# #)}
                                                                      ipv9
                                                                      ipv2
                                                                      (GHC.Prim.int2Word# ipv6)
                                                                      ipv7 of wild7 { (#,#) ds9 ds10 ->
                                                               let {
                                                                 ipv10 :: GHC.ForeignPtr.ForeignPtrContents
                                                                 = GHC.ForeignPtr.PlainPtr ipv8
                                                               } in
                                                               case GHC.Prim.touch#
                                                                      @ 'GHC.Types.LiftedRep
                                                                      @ GHC.ForeignPtr.ForeignPtrContents
                                                                      ipv10
                                                                      ds9 of s'2 { DEFAULT ->
                                                               case GHC.Prim.touch#
                                                                      @ 'GHC.Types.LiftedRep
                                                                      @ GHC.ForeignPtr.ForeignPtrContents
                                                                      ipv3
                                                                      s'2 of s'3 { DEFAULT ->
                                                               (# s'3,
                                                                  Data.ByteString.Internal.PS
                                                                    ipv9
                                                                    ipv10
                                                                    0#
                                                                    ipv6 #) } } } }
                                                            GHC.Types.True
                                                            -> case GHC.ForeignPtr.mallocPlainForeignPtrBytes2
                                                               ret_ty (# GHC.Prim.State#
                                                                           GHC.Prim.RealWorld,
                                                                         Data.ByteString.Internal.ByteString #)
                                                               of {} }
                                                       GHC.Types.True
                                                       -> case GHC.Prim.touch#
                                                                 @ 'GHC.Types.LiftedRep
                                                                 @ GHC.ForeignPtr.ForeignPtrContents
                                                                 ipv3
                                                                 s'1 of s'2 { DEFAULT ->
                                                          (# s'2, lvl1013 #) } } } }
                                            } in
                                            $wgo40
                                              (GHC.Prim.plusAddr# dt dt2)
                                              ipv2
                                              (GHC.Prim.plusAddr# dt (GHC.Prim.+# dt2 dt3))
                                              ipv }
                                         GHC.Types.True
                                         -> case GHC.ForeignPtr.mallocPlainForeignPtrBytes2
                                            ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                      Data.ByteString.Internal.ByteString #)
                                            of {} } }) of ds7 { (#,#) ipv ipv1 ->
                               case ipv1 of wild3 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                               case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.># dt7 0#) of wild4 {
                                 GHC.Types.False -> go16 ys
                                 GHC.Types.True
                                 -> GHC.Types.:
                                      @ Data.ByteString.Internal.ByteString
                                      wild3
                                      (go16 ys) } } }
                            GHC.Types.True
                            -> case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.># dt3 0#) of wild3 {
                                 GHC.Types.False -> go16 ys
                                 GHC.Types.True
                                 -> GHC.Types.:
                                      @ Data.ByteString.Internal.ByteString
                                      wild1
                                      (go16 ys) } } } }
                 } in
                 go16 ciggrps) -}
328dbc5672c06551636c689d57b2e6ac
  getNonHeaderAlns :: [Lib.AlignedRead] -> [Lib.AlignedRead]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (as :: [Lib.AlignedRead]) ->
                 GHC.Base.build
                   @ Lib.AlignedRead
                   (\ @ b
                      (c2 :: Lib.AlignedRead -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ Lib.AlignedRead
                      @ b
                      (GHC.List.filterFB @ Lib.AlignedRead @ b c2 Lib.getNonHeaderAlns1)
                      n
                      as)) -}
e9c88279ae8b26ee43f24d4cc07682ea
  getNonHeaderAlns1 :: Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLSLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.AlignedRead) ->
                 case x of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 case ds32 of wild1 {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False } }) -}
b7bda9f05b5ea854971cfb2f7312ec2c
  getRPrimerBEDfromMaster :: Lib.MasterRecord -> Lib.BedRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <L,U(1*U,A,A,A,A,A,1*U,1*U,A,1*U,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (mr :: Lib.MasterRecord) ->
                 Lib.BedRecord
                   (case mr of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds6 })
                   (case mr of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds12 })
                   (case mr of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds13 })
                   (case mr of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds15 })) -}
63d9cdcf5a9599f653a57238b21b4358
  getRight ::
    Data.Either.Either t (a, Lib.AlignedRead) -> Lib.AlignedRead
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ t @ a (e :: Data.Either.Either t (a, Lib.AlignedRead)) ->
                 case e of wild {
                   Data.Either.Left ds6 -> Lib.defaultAlignment
                   Data.Either.Right x -> Data.Tuple.snd @ a @ Lib.AlignedRead x }) -}
ee136213e57f7ba6156cb246164b9cf7
  getRightM ::
    (GHC.Show.Show a1, Control.Monad.IO.Class.MonadIO m) =>
    Data.Either.Either a1 (a2, Lib.AlignedRead) -> m Lib.AlignedRead
  {- Arity: 3,
     Strictness: <L,U(A,C(U),A)><S(SL),U(1*U(A,A,1*C1(C1(U)),1*C1(U),A),1*C1(U))><S,1*U>,
     Unfolding: (\ @ m109 :: * -> *
                   @ a
                   @ a1
                   ($dShow :: GHC.Show.Show a)
                   ($dMonadIO :: Control.Monad.IO.Class.MonadIO m109)
                   (eta :: Data.Either.Either a (a1, Lib.AlignedRead)) ->
                 let {
                   $dMonad :: GHC.Base.Monad m109
                   = Control.Monad.IO.Class.$p1MonadIO @ m109 $dMonadIO
                 } in
                 case eta of wild {
                   Data.Either.Left e
                   -> GHC.Base.>>
                        @ m109
                        $dMonad
                        @ ()
                        @ Lib.AlignedRead
                        (Control.Monad.IO.Class.liftIO
                           @ m109
                           $dMonadIO
                           @ ()
                           (\ (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            System.IO.appendFile2
                              @ ()
                              Lib.getRightM1
                              GHC.IO.IOMode.WriteMode
                              (\ (hdl :: GHC.IO.Handle.Types.Handle)[OneShot] ->
                               GHC.IO.Handle.Text.hPutStr2
                                 hdl
                                 (GHC.Show.show @ a $dShow e)
                                 GHC.Types.False)
                                `cast`
                              (<GHC.IO.Handle.Types.Handle>_R
                               ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                              eta1)
                             `cast`
                           (Sym (GHC.Types.N:IO[0] <()>_R)))
                        (GHC.Base.return
                           @ m109
                           $dMonad
                           @ Lib.AlignedRead
                           Lib.defaultAlignment)
                   Data.Either.Right a2
                   -> GHC.Base.return
                        @ m109
                        $dMonad
                        @ Lib.AlignedRead
                        (case a2 of wild1 { (,) ds6 y -> y }) }) -}
564c95f88da808aa3e08d9074596d91e
  getRightM1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.getRightM2) -}
ecf269d586231afe82d874d347ca1dc0
  getRightM2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("samparsefails.log"#) -}
0324ec502a1227c78cd5701ee2f2a053
  getTargetBEDfromMaster :: Lib.MasterRecord -> Lib.BedRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <L,U(1*U,1*U,1*U,1*U,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (mr :: Lib.MasterRecord) ->
                 Lib.BedRecord
                   (case mr of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds6 })
                   (case mr of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds7 })
                   (case mr of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds8 })
                   (case mr of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds9 })) -}
6374e3598975596d7fecb3e07c9a05b2
  getTrimdcigCoordDiff :: Lib.AlignedRead -> GHC.Integer.Type.Integer
  {- Arity: 1,
     Strictness: <S(LLLLLLLS(SLSS)LLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,U,1*U,A,A,A,A,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.AlignedRead) ->
                 case w of ww { Lib.AlignedRead ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ->
                 case ww8 of ww32 { Data.ByteString.Internal.PS ww33 ww34 ww35 ww36 ->
                 Lib.$wgetTrimdcigCoordDiff ww33 ww34 ww35 ww36 ww24 ww25 } }) -}
aae964f06b6f38be4d8ecaf026f0600a
  getTrimdcigCoordDiff_go ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
ec3c3cfcd6987bd2f978f6092b3d4af5
  getcigseqdiff :: Lib.AlignedRead -> GHC.Integer.Type.Integer
  {- Arity: 1,
     Strictness: <S(LLLLLLLS(SLSS)LLLLLS(LLLS)LLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,1*U(A,A,A,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.AlignedRead) ->
                 case w of ww { Lib.AlignedRead ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ->
                 case ww8 of ww32 { Data.ByteString.Internal.PS ww33 ww34 ww35 ww36 ->
                 case ww14 of ww37 { Data.ByteString.Internal.PS ww38 ww39 ww40 ww41 ->
                 Lib.$wgetcigseqdiff ww33 ww34 ww35 ww36 ww41 } } }) -}
ee2812b2fbaaceb621376ae718dee796
  getcigseqdiff_go ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
9937f7eacf8dc61c8f5f81bf992e4329
  getcol ::
    GHC.Types.Int
    -> Data.Vector.Vector (Data.Vector.Vector a)
    -> Data.Vector.Vector a
  {- Arity: 2, Strictness: <L,U(U)><S(SSS),1*U(U,U,U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   (w :: GHC.Types.Int)
                   (w1 :: Data.Vector.Vector (Data.Vector.Vector a)) ->
                 case w1 of ww { Data.Vector.Vector ww1 ww2 ww3 ->
                 Lib.$wgetcol @ a w ww1 ww2 ww3 }) -}
38c182579cd30a167b20c8a4c701b075
  getcol1 :: GHC.Prim.Int# -> GHC.Prim.Int# -> GHC.Prim.Addr# -> a
  {- Arity: 3, Strictness: <B,U><B,U><B,U>x -}
5aa9e655968ffa1cbbb74ab1a632fd43
  getlengths ::
    GHC.Base.Functor f =>
    f Data.ByteString.Internal.ByteString -> f GHC.Types.Int
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ f10 :: * -> *
                   ($dFunctor :: GHC.Base.Functor f10)
                   (seqs :: f10 Data.ByteString.Internal.ByteString) ->
                 GHC.Base.fmap
                   @ f10
                   $dFunctor
                   @ Data.ByteString.Internal.ByteString
                   @ GHC.Types.Int
                   Data.ByteString.length
                   seqs) -}
66011bccf89fa8ea10525599dd6e6a13
  hdrSEalnparserEOL ::
    Data.Attoparsec.ByteString.Internal.Parser Lib.AlignedRead
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.hdrSEalnparserEOL1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <Lib.AlignedRead>_R)) -}
c887434f718f4bf970a611a0cc31c891
  hdrSEalnparserEOL1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.AlignedRead
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.AlignedRead
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$whdrSEalnparserEOL
                   @ r
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww8
                   w2
                   w3
                   w4 } }) -}
48d3964f27788b390a6801ccaf093416
  hdrSEalnparserEOL2 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.hdrSEalnparserEOL_addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.hdrSEalnparserEOL_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
bc47757b480cc9cb92b9d4b2c69022dc
  hdrSEalnparserEOL_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("HEADERLINE"#) -}
3237cc238b620e33d210ddb8e844d117
  hdralnparser ::
    Data.Attoparsec.ByteString.Internal.Parser Lib.AlignedRead
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.hdralnparser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <Lib.AlignedRead>_R)) -}
858e68628969ebb4b5c0723a5b957f68
  hdralnparser1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.AlignedRead
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.AlignedRead
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$whdralnparser @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
78d0d1f660a23023f7722b9c118884de
  hdralnparserEOL ::
    Data.Attoparsec.ByteString.Internal.Parser Lib.PairedAln
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.hdralnparserEOL1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <Lib.PairedAln>_R)) -}
26029efb299be431ddaf492bbeeacdc7
  hdralnparserEOL1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.PairedAln
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.PairedAln
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$whdralnparserEOL
                   @ r
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww8
                   w2
                   w3
                   w4 } }) -}
908308b5b311588694fd44c3069302e2
  hdrchromp :: Data.Attoparsec.ByteString.Internal.Parser Lib.UChr
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.hdrchromp1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <Lib.UChr>_R)) -}
c1311382e54fd703c093c527e1f3cb87
  hdrchromp1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.UChr
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.UChr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$whdrchromp @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  headerstrings :: Lib.AlignedRead -> Lib.Header
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLSLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds32 }) -}
de5f6f2f04c9f1703827c2943d2f7c0a
  headsafeAln :: [Lib.AlignedRead] -> Lib.AlignedRead
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (as :: [Lib.AlignedRead]) ->
                 case as of wild { [] -> Lib.alnsToPairedAln1 : ds6 ds7 -> ds6 }) -}
9d444cb42900aebbeb90455ac8193fe9
  incoordsfile :: Lib.Opts -> GHC.Base.String
  RecSel Left Lib.Opts
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSLL),1*U(A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.Opts) ->
                 case ds6 of wild { Lib.Opts ds7 ds8 ds9 ds10 -> ds8 }) -}
9d444cb42900aebbeb90455ac8193fe9
  insamfile :: Lib.Opts -> GHC.Base.String
  RecSel Left Lib.Opts
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLSL),1*U(A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.Opts) ->
                 case ds6 of wild { Lib.Opts ds7 ds8 ds9 ds10 -> ds9 }) -}
e2c0c85c514784c2ed19970c7fc99cc7
  intflag :: Lib.SAMFlag -> GHC.Types.Int
  RecSel Left Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLS),1*U(A,A,A,A,A,A,A,A,A,A,A,1*U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.SAMFlag) ->
                 case ds6 of wild { Lib.SAMFlag ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds18 }) -}
3a80b30d7306b77d042ea0d6288423ec
  intgr2int :: GHC.Integer.Type.Integer -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m,
     Unfolding: InlineRule (1, True, False)
                (\ (n :: GHC.Integer.Type.Integer) ->
                 case GHC.Integer.Type.integerToInt n of wild { DEFAULT ->
                 GHC.Types.I# wild }) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  isheader :: Lib.AlignedRead -> GHC.Types.Bool
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLSLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds33 }) -}
8fa76bd3d59cb07b53b72ad80cff0708
  itypep ::
    Data.Attoparsec.ByteString.Internal.Parser
      Data.ByteString.Internal.ByteString
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.itypep1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)) -}
5415bb3d260a5778b0c2baf10f305e36
  itypep1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww { GHC.Types.I# ww1 ->
                 Lib.$witypep @ r w ww1 w2 w3 w4 }) -}
da1c973c4fc58068fbe55114ae94632a
  itypep2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.itypep_addr#) -}
cae5a60de55db95ab8a32015b10fb88f
  itypep_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("i"#) -}
2e518702e2a11be63588e941f4fa3f55
  itypep_m ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString
      Data.ByteString.Internal.ByteString
  {- Unfolding: (Data.Attoparsec.ByteString.Char8.$fIsStringParser_$cfromString
                   @ Data.ByteString.Internal.ByteString
                   (GHC.Types.Eq#
                      @ *
                      @ *
                      @ Data.ByteString.Internal.ByteString
                      @ Data.ByteString.Internal.ByteString
                      @~ <Data.ByteString.Internal.ByteString>_N)
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Data.ByteString.Internal.ByteString>_N <Data.ByteString.Internal.ByteString>_N)
                   Lib.itypep2) -}
4872c2329d02a533816c96dde2ab2c86
  itypep_v :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.itypep_addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.itypep_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
56eaf6b2314d976ea58f8242f205516a
  ix :: GHC.Types.Int -> Data.Vector.Vector a -> a
  {- Arity: 2, Strictness: <S(S),1*U(U)><S(SSS),1*U(U,U,U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a (w :: GHC.Types.Int) (w1 :: Data.Vector.Vector a) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Data.Vector.Vector ww3 ww4 ww5 ->
                 Lib.$wix @ a ww1 ww3 ww4 ww5 } }) -}
d5c58a20e458f2c821a6b03ee23dcf90
  justbedmaps :: [GHC.Base.Maybe Lib.BedRecord] -> [Lib.BedRecord]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, True)
                (Data.Maybe.catMaybes @ Lib.BedRecord) -}
5a5636b18b3af3ab999b7abdf1483bba
  justchrmaps ::
    [GHC.Base.Maybe (Data.IntMap.Internal.IntMap Lib.BedRecord)]
    -> [Data.IntMap.Internal.IntMap Lib.BedRecord]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, True)
                (Data.Maybe.catMaybes
                   @ (Data.IntMap.Internal.IntMap Lib.BedRecord)) -}
c481b0bc566b342f8e682ac8919a66f5
  mIDp ::
    Data.Attoparsec.ByteString.Internal.Parser
      Data.ByteString.Internal.ByteString
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.mIDp1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)) -}
5753c8c7ef379bbab98c19718f3e1588
  mIDp1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wmIDp @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
70fc331e8f798b8b55a8b4f45c570a94
  makeMRNMexplicit :: Lib.PairedAln -> Lib.PairedAln
  {- Arity: 1,
     Strictness: <S(S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLS)LLL),1*U(U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)>m,
     Unfolding: (\ (p :: Lib.PairedAln) ->
                 case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                 case ds6 of wild1 { Lib.AlignedRead ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ->
                 let {
                   $j :: Lib.PairedAln <join 0> {- Strictness: m -}
                   = let {
                       r2pRNAME :: Data.ByteString.Internal.ByteString
                       = case ds7 of wild2 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                         let {
                           cs :: [GHC.Types.Char] = Lib.$fShowUChr_$cshow ds43
                         } in
                         case GHC.List.$wlenAcc @ GHC.Types.Char cs 0# of ww { DEFAULT ->
                         Data.ByteString.Internal.$wunsafePackLenChars ww cs } }
                     } in
                     let {
                       r1pRNAME :: Data.ByteString.Internal.ByteString
                       = let {
                           cs :: [GHC.Types.Char] = Lib.$fShowUChr_$cshow ds12
                         } in
                         case GHC.List.$wlenAcc @ GHC.Types.Char cs 0# of ww { DEFAULT ->
                         Data.ByteString.Internal.$wunsafePackLenChars ww cs }
                     } in
                     Lib.PairedAln
                       (Lib.AlignedRead
                          ds10
                          ds11
                          ds12
                          ds13
                          ds14
                          ds15
                          ds16
                          ds17
                          ds18
                          ds19
                          r2pRNAME
                          ds21
                          ds22
                          ds23
                          ds24
                          ds25
                          ds26
                          ds27
                          ds28
                          ds29
                          ds30
                          ds31
                          ds32
                          ds33
                          ds34
                          ds35
                          ds36
                          ds37
                          ds38
                          ds39
                          ds40)
                       (case ds7 of wild2 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                        Lib.AlignedRead
                          ds41
                          ds42
                          ds43
                          ds44
                          ds45
                          ds46
                          ds47
                          ds48
                          ds49
                          ds50
                          r1pRNAME
                          ds52
                          ds53
                          ds54
                          ds55
                          ds56
                          ds57
                          ds58
                          ds59
                          ds60
                          ds61
                          ds62
                          ds63
                          ds64
                          ds65
                          ds66
                          ds67
                          ds68
                          ds69
                          ds70
                          ds71 })
                       (GHC.Base.map
                          @ Lib.AlignedRead
                          @ Lib.AlignedRead
                          (\ (x :: Lib.AlignedRead) ->
                           case x of wild2 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                           Lib.AlignedRead
                             ds41
                             ds42
                             ds43
                             ds44
                             ds45
                             ds46
                             ds47
                             ds48
                             ds49
                             ds50
                             r2pRNAME
                             ds52
                             ds53
                             ds54
                             ds55
                             ds56
                             ds57
                             ds58
                             ds59
                             ds60
                             ds61
                             ds62
                             ds63
                             ds64
                             ds65
                             ds66
                             ds67
                             ds68
                             ds69
                             ds70
                             ds71 })
                          ds8)
                       (GHC.Base.map
                          @ Lib.AlignedRead
                          @ Lib.AlignedRead
                          (\ (x :: Lib.AlignedRead) ->
                           case x of wild2 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                           Lib.AlignedRead
                             ds41
                             ds42
                             ds43
                             ds44
                             ds45
                             ds46
                             ds47
                             ds48
                             ds49
                             ds50
                             r1pRNAME
                             ds52
                             ds53
                             ds54
                             ds55
                             ds56
                             ds57
                             ds58
                             ds59
                             ds60
                             ds61
                             ds62
                             ds63
                             ds64
                             ds65
                             ds66
                             ds67
                             ds68
                             ds69
                             ds70
                             ds71 })
                          ds9)
                 } in
                 case ds40 of wild2 {
                   GHC.Types.False
                   -> let {
                        $j1 :: Lib.PairedAln <join 0> {- Strictness: m -}
                        = case ds7 of wild3 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                          case ds71 of wild4 {
                            GHC.Types.False
                            -> letrec {
                                 go16 :: [Lib.AlignedRead] -> Lib.PairedAln
                                   <join 1> {- Arity: 1, Strictness: <S,1*U>m -}
                                 = \ (ds72 :: [Lib.AlignedRead]) ->
                                   case ds72 of wild5 {
                                     [] -> wild
                                     : y ys
                                     -> case y of wild6 { Lib.AlignedRead ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ds90 ds91 ds92 ds93 ds94 ds95 ds96 ds97 ds98 ds99 ds100 ds101 ds102 ds103 ->
                                        case ds103 of wild7 {
                                          GHC.Types.False -> go16 ys GHC.Types.True -> $j } } }
                               } in
                               go16 ds9
                            GHC.Types.True -> $j } }
                      } in
                      letrec {
                        go16 :: [Lib.AlignedRead] -> Lib.PairedAln
                          <join 1> {- Arity: 1, Strictness: <S,1*U>m -}
                        = \ (ds41 :: [Lib.AlignedRead]) ->
                          case ds41 of wild3 {
                            [] -> $j1
                            : y ys
                            -> case y of wild4 { Lib.AlignedRead ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ->
                               case ds72 of wild5 {
                                 GHC.Types.False -> go16 ys GHC.Types.True -> $j } } }
                      } in
                      go16 ds8
                   GHC.Types.True -> $j } } }) -}
fdc84b2f92a912f0c4e9f156cf11a594
  makeTrimmedUpdates :: Lib.PairedAln -> Lib.PairedAln
  {- Arity: 1,
     Strictness: <L,1*U(U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.PairedAln) ->
                 case Lib.$wmakeTrimmedUpdates w of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 Lib.PairedAln ww1 ww2 ww3 ww4 }) -}
f1190e0ed3e8953fc278aa71cc47d3bb
  makeTrimmedUpdates1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1200) -}
9c8859c9a548eee17374dbb74fdf95a4
  makeTrimmedUpdates2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (-1200) -}
ff052fc69184c378e8ec84a9c411f157
  makebedmap ::
    [Lib.BedRecord] -> Data.IntMap.Internal.IntMap Lib.BedRecord
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (bs :: [Lib.BedRecord]) ->
                 Data.IntMap.Strict.fromList1
                   @ Lib.BedRecord
                   (Data.IntMap.Internal.Nil @ Lib.BedRecord)
                   (Lib.makebedmap_go bs)) -}
41ac93be6d9bea9e81be407bc528ce5c
  makebedmap_go ::
    [Lib.BedRecord] -> [(GHC.Types.Int, Lib.BedRecord)]
  {- Arity: 1, Strictness: <S,1*U> -}
beec47347f0202dd8be265ae35972808
  makechrbedmap ::
    Lib.BED
    -> Data.Map.Internal.Map
         Lib.UChr (Data.IntMap.Internal.IntMap Lib.BedRecord)
  {- Arity: 1, Strictness: <S(SSS),1*U(U,U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.BED) ->
                 case w of ww { Data.Vector.Vector ww1 ww2 ww3 ->
                 Lib.$wmakechrbedmap ww1 ww2 ww3 }) -}
b01e13ba546f1995c45341e4cf27ebe6
  makeprimertups :: Lib.BedRecord -> [(GHC.Types.Int, Lib.BedRecord)]
  {- Arity: 1, Strictness: <S(LSSL),1*U(U,U,U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.BedRecord) ->
                 case w of ww { Lib.BedRecord ww1 ww2 ww3 ww4 ->
                 Lib.$wmakeprimertups ww1 ww2 ww3 ww4 }) -}
4a9f534e7bc67e4a259fbd60df039054
  mampname :: Lib.MasterRecord -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.MasterRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLLLLLLL),1*U(A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MasterRecord) ->
                 case ds6 of wild { Lib.MasterRecord ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds10 }) -}
e454d7a03bc14618839152d4c5ddf8aa
  mapcig :: Data.ByteString.Internal.ByteString -> Lib.CigarMap
  {- Arity: 1, Strictness: <S(SLSS),1*U(U,U,U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.ByteString.Internal.ByteString) ->
                 case w of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wmapcig ww1 ww2 ww3 ww4 }) -}
d868ceb6188323eaac2bb8221f3c5fec
  mapfst :: GHC.Num.Num a => (a -> c) -> (a, b) -> (c, b)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,A><L,1*C1(U)><S,1*U(U,U)>m,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   @ c2
                   @ b
                   ($dNum :: GHC.Num.Num a)
                   (f10 :: a -> c2)
                   (ds6 :: (a, b)) ->
                 case ds6 of wild { (,) x y -> (f10 x, y) }) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  mapped :: Lib.AlignedRead -> GHC.Types.Bool
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLSLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds25 }) -}
2e345d36c55fb13cffd420fc95f5bf30
  mappedPct :: Lib.RunStats -> GHC.Types.Double
  RecSel Left Lib.RunStats
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLS),1*U(A,A,A,A,A,1*U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.RunStats) ->
                 case ds6 of wild { Lib.RunStats ds7 ds8 ds9 ds10 ds11 ds12 ->
                 ds12 }) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  mapqual :: Lib.AlignedRead -> GHC.Integer.Type.Integer
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds12 }) -}
945260ddc0a3e4b100aa0141966f6971
  masterRecToTargetBED :: Lib.MasterRecord -> Lib.BedRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <L,U(1*U,1*U,1*U,1*U,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (m109 :: Lib.MasterRecord) ->
                 Lib.BedRecord
                   (case m109 of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds6 })
                   (case m109 of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds7 })
                   (case m109 of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds8 })
                   (case m109 of wild { Lib.MasterRecord ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    ds9 })) -}
0cf7c8d34e0ba6ed1c01c4decbe9d74b
  masterToFPrimerBED :: [Lib.MasterRecord] -> Lib.BED
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (mrecs :: [Lib.MasterRecord]) ->
                 case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                             Data.Vector.Vector Lib.BedRecord #)
                        (\ (s114 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newArray#
                                @ Lib.BedRecord
                                @ (Control.Monad.Primitive.PrimState
                                     (GHC.ST.ST GHC.Prim.RealWorld))
                                0#
                                (Data.Vector.Mutable.uninitialised @ Lib.BedRecord)
                                s114
                                  `cast`
                                (Nth:2
                                     (Nth:2
                                          (Trans
                                               (<GHC.ST.STRep
                                                   GHC.Prim.RealWorld
                                                   (Data.Primitive.Array.MutableArray
                                                      (Control.Monad.Primitive.PrimState
                                                         (GHC.ST.ST GHC.Prim.RealWorld))
                                                      Lib.BedRecord)>_R
                                                ->_R Sym (GHC.ST.N:ST[0]
                                                              <GHC.Prim.RealWorld>_N
                                                              <Data.Primitive.Array.MutableArray
                                                                 (Control.Monad.Primitive.PrimState
                                                                    (GHC.ST.ST GHC.Prim.RealWorld))
                                                                 Lib.BedRecord>_R))
                                               (((GHC.Prim.State#
                                                    (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                              <GHC.Prim.RealWorld>_N)))_R
                                                 ->_R ((#,#)
                                                         <'GHC.Types.TupleRep '[]>_R
                                                         <'GHC.Types.LiftedRep>_R
                                                         (GHC.Prim.State#
                                                            (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                      <GHC.Prim.RealWorld>_N)))_R
                                                         <Data.Primitive.Array.MutableArray
                                                            (Control.Monad.Primitive.PrimState
                                                               (GHC.ST.ST GHC.Prim.RealWorld))
                                                            Lib.BedRecord>_R)_R)
                                                ->_R <GHC.ST.ST
                                                        GHC.Prim.RealWorld
                                                        (Data.Primitive.Array.MutableArray
                                                           (Control.Monad.Primitive.PrimState
                                                              (GHC.ST.ST GHC.Prim.RealWorld))
                                                           Lib.BedRecord)>_R)))) of ds6 { (#,#) ipv ipv1 ->
                         Lib.$wfoldlM_loop3
                           GHC.Types.SPEC
                           0#
                           0#
                           ipv1
                             `cast`
                           (GHC.Prim.MutableArray#
                              (Control.Monad.Primitive.D:R:PrimStateST[0] <GHC.Prim.RealWorld>_N)
                              <Lib.BedRecord>_R)_R
                           0#
                           (GHC.Base.map
                              @ Lib.MasterRecord
                              @ Lib.BedRecord
                              Lib.getFPrimerBEDfromMaster
                              (Data.OldList.sortBy
                                 @ Lib.MasterRecord
                                 Lib.$fOrdMasterRecord_$ccompare
                                 mrecs))
                           ipv
                             `cast`
                           (Nth:2
                                (Nth:3
                                     (Nth:2
                                          (Trans
                                               (((GHC.Prim.State#
                                                    (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                         <GHC.Prim.RealWorld>_N))_R
                                                 ->_R ((#,#)
                                                         <'GHC.Types.TupleRep '[]>_R
                                                         <'GHC.Types.LiftedRep>_R
                                                         (GHC.Prim.State#
                                                            (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                 <GHC.Prim.RealWorld>_N))_R
                                                         <Data.Primitive.Array.MutableArray
                                                            (Control.Monad.Primitive.PrimState
                                                               (GHC.ST.ST GHC.Prim.RealWorld))
                                                            Lib.BedRecord>_R)_R)
                                                ->_R <GHC.ST.ST
                                                        GHC.Prim.RealWorld
                                                        (Data.Primitive.Array.MutableArray
                                                           (Control.Monad.Primitive.PrimState
                                                              (GHC.ST.ST GHC.Prim.RealWorld))
                                                           Lib.BedRecord)>_R)
                                               (<GHC.ST.STRep
                                                   GHC.Prim.RealWorld
                                                   (Data.Primitive.Array.MutableArray
                                                      (Control.Monad.Primitive.PrimState
                                                         (GHC.ST.ST GHC.Prim.RealWorld))
                                                      Lib.BedRecord)>_R
                                                ->_R GHC.ST.N:ST[0]
                                                         <GHC.Prim.RealWorld>_N
                                                         <Data.Primitive.Array.MutableArray
                                                            (Control.Monad.Primitive.PrimState
                                                               (GHC.ST.ST GHC.Prim.RealWorld))
                                                            Lib.BedRecord>_R))))) }) of ds6 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
9a6e35d806a5980fe58d3921bd8c4094
  masterToRPrimerBED :: [Lib.MasterRecord] -> Lib.BED
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (mrecs :: [Lib.MasterRecord]) ->
                 case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                             Data.Vector.Vector Lib.BedRecord #)
                        (\ (s114 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newArray#
                                @ Lib.BedRecord
                                @ (Control.Monad.Primitive.PrimState
                                     (GHC.ST.ST GHC.Prim.RealWorld))
                                0#
                                (Data.Vector.Mutable.uninitialised @ Lib.BedRecord)
                                s114
                                  `cast`
                                (Nth:2
                                     (Nth:2
                                          (Trans
                                               (<GHC.ST.STRep
                                                   GHC.Prim.RealWorld
                                                   (Data.Primitive.Array.MutableArray
                                                      (Control.Monad.Primitive.PrimState
                                                         (GHC.ST.ST GHC.Prim.RealWorld))
                                                      Lib.BedRecord)>_R
                                                ->_R Sym (GHC.ST.N:ST[0]
                                                              <GHC.Prim.RealWorld>_N
                                                              <Data.Primitive.Array.MutableArray
                                                                 (Control.Monad.Primitive.PrimState
                                                                    (GHC.ST.ST GHC.Prim.RealWorld))
                                                                 Lib.BedRecord>_R))
                                               (((GHC.Prim.State#
                                                    (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                              <GHC.Prim.RealWorld>_N)))_R
                                                 ->_R ((#,#)
                                                         <'GHC.Types.TupleRep '[]>_R
                                                         <'GHC.Types.LiftedRep>_R
                                                         (GHC.Prim.State#
                                                            (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                      <GHC.Prim.RealWorld>_N)))_R
                                                         <Data.Primitive.Array.MutableArray
                                                            (Control.Monad.Primitive.PrimState
                                                               (GHC.ST.ST GHC.Prim.RealWorld))
                                                            Lib.BedRecord>_R)_R)
                                                ->_R <GHC.ST.ST
                                                        GHC.Prim.RealWorld
                                                        (Data.Primitive.Array.MutableArray
                                                           (Control.Monad.Primitive.PrimState
                                                              (GHC.ST.ST GHC.Prim.RealWorld))
                                                           Lib.BedRecord)>_R)))) of ds6 { (#,#) ipv ipv1 ->
                         Lib.$wfoldlM_loop2
                           GHC.Types.SPEC
                           0#
                           0#
                           ipv1
                             `cast`
                           (GHC.Prim.MutableArray#
                              (Control.Monad.Primitive.D:R:PrimStateST[0] <GHC.Prim.RealWorld>_N)
                              <Lib.BedRecord>_R)_R
                           0#
                           (GHC.Base.map
                              @ Lib.MasterRecord
                              @ Lib.BedRecord
                              Lib.getRPrimerBEDfromMaster
                              (Data.OldList.sortBy
                                 @ Lib.MasterRecord
                                 Lib.$fOrdMasterRecord_$ccompare
                                 mrecs))
                           ipv
                             `cast`
                           (Nth:2
                                (Nth:3
                                     (Nth:2
                                          (Trans
                                               (((GHC.Prim.State#
                                                    (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                         <GHC.Prim.RealWorld>_N))_R
                                                 ->_R ((#,#)
                                                         <'GHC.Types.TupleRep '[]>_R
                                                         <'GHC.Types.LiftedRep>_R
                                                         (GHC.Prim.State#
                                                            (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                 <GHC.Prim.RealWorld>_N))_R
                                                         <Data.Primitive.Array.MutableArray
                                                            (Control.Monad.Primitive.PrimState
                                                               (GHC.ST.ST GHC.Prim.RealWorld))
                                                            Lib.BedRecord>_R)_R)
                                                ->_R <GHC.ST.ST
                                                        GHC.Prim.RealWorld
                                                        (Data.Primitive.Array.MutableArray
                                                           (Control.Monad.Primitive.PrimState
                                                              (GHC.ST.ST GHC.Prim.RealWorld))
                                                           Lib.BedRecord)>_R)
                                               (<GHC.ST.STRep
                                                   GHC.Prim.RealWorld
                                                   (Data.Primitive.Array.MutableArray
                                                      (Control.Monad.Primitive.PrimState
                                                         (GHC.ST.ST GHC.Prim.RealWorld))
                                                      Lib.BedRecord)>_R
                                                ->_R GHC.ST.N:ST[0]
                                                         <GHC.Prim.RealWorld>_N
                                                         <Data.Primitive.Array.MutableArray
                                                            (Control.Monad.Primitive.PrimState
                                                               (GHC.ST.ST GHC.Prim.RealWorld))
                                                            Lib.BedRecord>_R))))) }) of ds6 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
753901f60dd3756f4604200210afa8c5
  masterToTargetBED :: [Lib.MasterRecord] -> Lib.BED
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (mrecs :: [Lib.MasterRecord]) ->
                 case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                             Data.Vector.Vector Lib.BedRecord #)
                        (\ (s114 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newArray#
                                @ Lib.BedRecord
                                @ (Control.Monad.Primitive.PrimState
                                     (GHC.ST.ST GHC.Prim.RealWorld))
                                0#
                                (Data.Vector.Mutable.uninitialised @ Lib.BedRecord)
                                s114
                                  `cast`
                                (Nth:2
                                     (Nth:2
                                          (Trans
                                               (<GHC.ST.STRep
                                                   GHC.Prim.RealWorld
                                                   (Data.Primitive.Array.MutableArray
                                                      (Control.Monad.Primitive.PrimState
                                                         (GHC.ST.ST GHC.Prim.RealWorld))
                                                      Lib.BedRecord)>_R
                                                ->_R Sym (GHC.ST.N:ST[0]
                                                              <GHC.Prim.RealWorld>_N
                                                              <Data.Primitive.Array.MutableArray
                                                                 (Control.Monad.Primitive.PrimState
                                                                    (GHC.ST.ST GHC.Prim.RealWorld))
                                                                 Lib.BedRecord>_R))
                                               (((GHC.Prim.State#
                                                    (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                              <GHC.Prim.RealWorld>_N)))_R
                                                 ->_R ((#,#)
                                                         <'GHC.Types.TupleRep '[]>_R
                                                         <'GHC.Types.LiftedRep>_R
                                                         (GHC.Prim.State#
                                                            (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                      <GHC.Prim.RealWorld>_N)))_R
                                                         <Data.Primitive.Array.MutableArray
                                                            (Control.Monad.Primitive.PrimState
                                                               (GHC.ST.ST GHC.Prim.RealWorld))
                                                            Lib.BedRecord>_R)_R)
                                                ->_R <GHC.ST.ST
                                                        GHC.Prim.RealWorld
                                                        (Data.Primitive.Array.MutableArray
                                                           (Control.Monad.Primitive.PrimState
                                                              (GHC.ST.ST GHC.Prim.RealWorld))
                                                           Lib.BedRecord)>_R)))) of ds6 { (#,#) ipv ipv1 ->
                         Lib.$wfoldlM_loop4
                           GHC.Types.SPEC
                           0#
                           0#
                           ipv1
                             `cast`
                           (GHC.Prim.MutableArray#
                              (Control.Monad.Primitive.D:R:PrimStateST[0] <GHC.Prim.RealWorld>_N)
                              <Lib.BedRecord>_R)_R
                           0#
                           (GHC.Base.map
                              @ Lib.MasterRecord
                              @ Lib.BedRecord
                              Lib.getTargetBEDfromMaster
                              (Data.OldList.sortBy
                                 @ Lib.MasterRecord
                                 Lib.$fOrdMasterRecord_$ccompare
                                 mrecs))
                           ipv
                             `cast`
                           (Nth:2
                                (Nth:3
                                     (Nth:2
                                          (Trans
                                               (((GHC.Prim.State#
                                                    (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                         <GHC.Prim.RealWorld>_N))_R
                                                 ->_R ((#,#)
                                                         <'GHC.Types.TupleRep '[]>_R
                                                         <'GHC.Types.LiftedRep>_R
                                                         (GHC.Prim.State#
                                                            (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                 <GHC.Prim.RealWorld>_N))_R
                                                         <Data.Primitive.Array.MutableArray
                                                            (Control.Monad.Primitive.PrimState
                                                               (GHC.ST.ST GHC.Prim.RealWorld))
                                                            Lib.BedRecord>_R)_R)
                                                ->_R <GHC.ST.ST
                                                        GHC.Prim.RealWorld
                                                        (Data.Primitive.Array.MutableArray
                                                           (Control.Monad.Primitive.PrimState
                                                              (GHC.ST.ST GHC.Prim.RealWorld))
                                                           Lib.BedRecord)>_R)
                                               (<GHC.ST.STRep
                                                   GHC.Prim.RealWorld
                                                   (Data.Primitive.Array.MutableArray
                                                      (Control.Monad.Primitive.PrimState
                                                         (GHC.ST.ST GHC.Prim.RealWorld))
                                                      Lib.BedRecord)>_R
                                                ->_R GHC.ST.N:ST[0]
                                                         <GHC.Prim.RealWorld>_N
                                                         <Data.Primitive.Array.MutableArray
                                                            (Control.Monad.Primitive.PrimState
                                                               (GHC.ST.ST GHC.Prim.RealWorld))
                                                            Lib.BedRecord>_R))))) }) of ds6 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
c1bab1e454c55f1f4bd8d2cd683290d9
  masterparser ::
    Data.Attoparsec.ByteString.Internal.Parser Lib.MasterRecord
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.createprimerbedmaps15
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <Lib.MasterRecord>_R)) -}
e2c0c85c514784c2ed19970c7fc99cc7
  mateMapped :: Lib.SAMFlag -> GHC.Types.Bool
  RecSel Left Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLLLLLLL),1*U(A,1*U,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.SAMFlag) ->
                 case ds6 of wild { Lib.SAMFlag ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds8 }) -}
e2c0c85c514784c2ed19970c7fc99cc7
  mateNeg :: Lib.SAMFlag -> GHC.Types.Bool
  RecSel Left Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSLLLLLL),1*U(A,A,A,A,A,1*U,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.SAMFlag) ->
                 case ds6 of wild { Lib.SAMFlag ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds12 }) -}
4a9f534e7bc67e4a259fbd60df039054
  mchrom :: Lib.MasterRecord -> Lib.UChr
  RecSel Left Lib.MasterRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(1*U,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MasterRecord) ->
                 case ds6 of wild { Lib.MasterRecord ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds7 }) -}
4a9f534e7bc67e4a259fbd60df039054
  mforend :: Lib.MasterRecord -> GHC.Integer.Type.Integer
  RecSel Left Lib.MasterRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSLLLLLL),1*U(A,A,A,A,A,1*U,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MasterRecord) ->
                 case ds6 of wild { Lib.MasterRecord ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds12 }) -}
4a9f534e7bc67e4a259fbd60df039054
  mforname :: Lib.MasterRecord -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.MasterRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLSLLL),1*U(A,A,A,A,A,A,A,A,1*U(U,U,U,U),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MasterRecord) ->
                 case ds6 of wild { Lib.MasterRecord ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds15 }) -}
4a9f534e7bc67e4a259fbd60df039054
  mforseq :: Lib.MasterRecord -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.MasterRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLSL),1*U(A,A,A,A,A,A,A,A,A,A,1*U(U,U,U,U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MasterRecord) ->
                 case ds6 of wild { Lib.MasterRecord ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds17 }) -}
4a9f534e7bc67e4a259fbd60df039054
  mforstart :: Lib.MasterRecord -> GHC.Integer.Type.Integer
  RecSel Left Lib.MasterRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLLLLLLL),1*U(A,A,A,A,1*U,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MasterRecord) ->
                 case ds6 of wild { Lib.MasterRecord ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds11 }) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  mid :: Lib.AlignedRead -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLSLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U,U,U,U),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds34 }) -}
6f760c933e008b36f1c2ad656d809c5f
  midseq :: Lib.MidFamily -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.MidFamily
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLLLLL),1*U(A,A,A,1*U(U,U,U,U),A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MidFamily) ->
                 case ds6 of wild { Lib.MidFamily ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds10 }) -}
4a9f534e7bc67e4a259fbd60df039054
  mrevend :: Lib.MasterRecord -> GHC.Integer.Type.Integer
  RecSel Left Lib.MasterRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLSLLLL),1*U(A,A,A,A,A,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MasterRecord) ->
                 case ds6 of wild { Lib.MasterRecord ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds14 }) -}
4a9f534e7bc67e4a259fbd60df039054
  mrevname :: Lib.MasterRecord -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.MasterRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLSLL),1*U(A,A,A,A,A,A,A,A,A,1*U(U,U,U,U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MasterRecord) ->
                 case ds6 of wild { Lib.MasterRecord ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds16 }) -}
4a9f534e7bc67e4a259fbd60df039054
  mrevseq :: Lib.MasterRecord -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.MasterRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLS),1*U(A,A,A,A,A,A,A,A,A,A,A,1*U(U,U,U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MasterRecord) ->
                 case ds6 of wild { Lib.MasterRecord ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds18 }) -}
4a9f534e7bc67e4a259fbd60df039054
  mrevstart :: Lib.MasterRecord -> GHC.Integer.Type.Integer
  RecSel Left Lib.MasterRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLSLLLLL),1*U(A,A,A,A,A,A,1*U,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MasterRecord) ->
                 case ds6 of wild { Lib.MasterRecord ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds13 }) -}
4a9f534e7bc67e4a259fbd60df039054
  mtargetend :: Lib.MasterRecord -> GHC.Integer.Type.Integer
  RecSel Left Lib.MasterRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLL),1*U(A,A,1*U,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MasterRecord) ->
                 case ds6 of wild { Lib.MasterRecord ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds9 }) -}
4a9f534e7bc67e4a259fbd60df039054
  mtargetstart :: Lib.MasterRecord -> GHC.Integer.Type.Integer
  RecSel Left Lib.MasterRecord
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLLLLLLL),1*U(A,1*U,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MasterRecord) ->
                 case ds6 of wild { Lib.MasterRecord ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds8 }) -}
6f760c933e008b36f1c2ad656d809c5f
  negtxposdcnt :: Lib.MidFamily -> GHC.Integer.Type.Integer
  RecSel Left Lib.MidFamily
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLSL),1*U(A,A,A,A,A,A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MidFamily) ->
                 case ds6 of wild { Lib.MidFamily ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds15 }) -}
e872a2355f9bb01b188bf770fbf07798
  noclip ::
    (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
    -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S(LS(SLSS)),1*U(A,1*U(U,U,U,U))>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: (GHC.Integer.Type.Integer,
                          Data.ByteString.Internal.ByteString)) ->
                 case w of ww { (,) ww1 ww2 ->
                 case ww2 of ww3 { Data.ByteString.Internal.PS ww4 ww5 ww6 ww7 ->
                 Lib.$wnoclip ww4 ww5 ww6 ww7 } }) -}
4ff041b232ed042747067dc2f18d0049
  noclip1 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.noclip_addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.noclip_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
e46a253468756215ba1d81cefee12e55
  noclip2 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.noclip_addr#1
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.noclip_addr#1
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
942caaa742cac5d81a3b66f46c11bcbc
  noclip_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("S"#) -}
b186aad809b231628ef0d9e639555607
  noclip_addr#1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("H"#) -}
83d9bc90bf15f0f7cba8c8eb3b89e1b1
  nohardclip ::
    (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
    -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S(LS(SLSS)),1*U(A,1*U(U,U,U,U))>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: (GHC.Integer.Type.Integer,
                          Data.ByteString.Internal.ByteString)) ->
                 case w of ww { (,) ww1 ww2 ->
                 case ww2 of ww3 { Data.ByteString.Internal.PS ww4 ww5 ww6 ww7 ->
                 Lib.$wnohardclip ww4 ww5 ww6 ww7 } }) -}
8795f7f9855914d678e806f9749f00e8
  nomapCigToNomapRname ::
    Data.ByteString.Internal.ByteString -> Lib.UChr -> Lib.UChr
  {- Arity: 2, Strictness: <S(SLSS),1*U(U,U,U,U)><L,1*U>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.ByteString.Internal.ByteString) (w1 :: Lib.UChr) ->
                 case w of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wnomapCigToNomapRname ww1 ww2 ww3 ww4 w1 }) -}
ab3ce92f605bacb16f7a3378f2309f60
  nopadding ::
    (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
    -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S(LS(SLSS)),1*U(A,1*U(U,U,U,U))>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: (GHC.Integer.Type.Integer,
                          Data.ByteString.Internal.ByteString)) ->
                 case w of ww { (,) ww1 ww2 ->
                 case ww2 of ww3 { Data.ByteString.Internal.PS ww4 ww5 ww6 ww7 ->
                 Lib.$wnopadding ww4 ww5 ww6 ww7 } }) -}
e2c0c85c514784c2ed19970c7fc99cc7
  notMapped :: Lib.SAMFlag -> GHC.Types.Bool
  RecSel Left Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLL),1*U(A,A,1*U,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.SAMFlag) ->
                 case ds6 of wild { Lib.SAMFlag ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds9 }) -}
e2c0c85c514784c2ed19970c7fc99cc7
  notPrimary :: Lib.SAMFlag -> GHC.Types.Bool
  RecSel Left Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLSLLL),1*U(A,A,A,A,A,A,A,A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.SAMFlag) ->
                 case ds6 of wild { Lib.SAMFlag ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds15 }) -}
0719f8369eecdc0220723340a1a18e29
  optargs :: Options.Applicative.Types.Parser Lib.Opts
  {- Unfolding: (Options.Applicative.Types.MultP
                   @ Lib.Opts
                   @ GHC.Base.String
                   Lib.optargs8
                   Lib.optargs1) -}
3995b8c33fc3f5121d36e2fc62f27c7e
  optargs1 :: Options.Applicative.Types.Parser GHC.Base.String
  {- Strictness: m4,
     Unfolding: (Options.Applicative.Types.AltP
                   @ GHC.Base.String
                   Lib.optargs2
                   (Options.Applicative.Types.$fAlternativeParser_$cempty
                      @ GHC.Base.String)) -}
5fe1082e3bd5b4c25d45135b28b72f80
  optargs10 :: Options.Applicative.Types.Parser GHC.Base.String
  {- Strictness: m2,
     Unfolding: (Options.Applicative.Types.OptP
                   @ GHC.Base.String
                   Lib.optargs11) -}
6b5af2e14733dce843f8ed97b319e500
  optargs11 :: Options.Applicative.Types.Option GHC.Base.String
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.Option
                   @ GHC.Base.String
                   Lib.optargs6
                   Lib.optargs12) -}
ffd0287b182b2b4c16dbb93289d98c3d
  optargs12 :: Options.Applicative.Types.OptProperties
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.OptProperties
                   Options.Applicative.Types.Visible
                   (GHC.Base.Nothing @ Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                     `cast`
                   (Sym (Options.Applicative.Help.Chunk.N:Chunk[0]) <Text.PrettyPrint.ANSI.Leijen.Internal.Doc>_N)
                   Lib.optargs_var1
                   (GHC.Base.Nothing @ GHC.Base.String)
                   (GHC.Base.Nothing
                      @ (Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                         -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc))) -}
9b2afcdf8f54d0fd6e1ced37152241bb
  optargs13 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("SAM_INFILE"#) -}
22e83071546cd05d5018fef3accdace3
  optargs14 ::
    Options.Applicative.Types.Parser
      (GHC.Base.String -> GHC.Base.String -> Lib.Opts)
  {- Unfolding: (Options.Applicative.Types.MultP
                   @ (GHC.Base.String -> GHC.Base.String -> Lib.Opts)
                   @ GHC.Base.String
                   Lib.optargs20
                   Lib.optargs15) -}
b17e8542649a355e2bde37073670c2c1
  optargs15 :: Options.Applicative.Types.Parser GHC.Base.String
  {- Strictness: m4,
     Unfolding: (Options.Applicative.Types.AltP
                   @ GHC.Base.String
                   Lib.optargs16
                   (Options.Applicative.Types.$fAlternativeParser_$cempty
                      @ GHC.Base.String)) -}
c929a248330796ee4ed8e0823d52bd34
  optargs16 :: Options.Applicative.Types.Parser GHC.Base.String
  {- Strictness: m2,
     Unfolding: (Options.Applicative.Types.OptP
                   @ GHC.Base.String
                   Lib.optargs17) -}
43e5789261a3242a67c2530d8627a4e7
  optargs17 :: Options.Applicative.Types.Option GHC.Base.String
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.Option
                   @ GHC.Base.String
                   Lib.optargs6
                   Lib.optargs18) -}
2ccff4951c83f5da5ed48fdb118cc9b8
  optargs18 :: Options.Applicative.Types.OptProperties
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.OptProperties
                   Options.Applicative.Types.Visible
                   (GHC.Base.Nothing @ Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                     `cast`
                   (Sym (Options.Applicative.Help.Chunk.N:Chunk[0]) <Text.PrettyPrint.ANSI.Leijen.Internal.Doc>_N)
                   Lib.optargs_var2
                   (GHC.Base.Nothing @ GHC.Base.String)
                   (GHC.Base.Nothing
                      @ (Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                         -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc))) -}
4a1d9870cbc2adffd7b76f3563738cb1
  optargs19 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("PRIMER_COORDS_INFILE"#) -}
bbf872b86a71c8cef0cc854139348c9c
  optargs2 :: Options.Applicative.Types.Parser GHC.Base.String
  {- Strictness: m2,
     Unfolding: (Options.Applicative.Types.OptP
                   @ GHC.Base.String
                   Lib.optargs3) -}
7ad1cca215917b58b06291a47920aa45
  optargs20 ::
    Options.Applicative.Types.Parser
      (GHC.Base.String -> GHC.Base.String -> GHC.Base.String -> Lib.Opts)
  {- Unfolding: (Options.Applicative.Types.$fApplicativeParser_$cfmap
                   @ GHC.Types.Bool
                   @ (GHC.Base.String
                      -> GHC.Base.String -> GHC.Base.String -> Lib.Opts)
                   Lib.Opts
                   Lib.optargs21) -}
fcde0f828d13e88f1e80f523b938cc1e
  optargs21 :: Options.Applicative.Types.Parser GHC.Types.Bool
  {- Strictness: m4,
     Unfolding: (Options.Applicative.Types.AltP
                   @ GHC.Types.Bool
                   Lib.optargs22
                   Options.Applicative.Builder.switch1) -}
cc1526676c60cab9b8337e6af0c915a6
  optargs22 :: Options.Applicative.Types.Parser GHC.Types.Bool
  {- Strictness: m4,
     Unfolding: (Options.Applicative.Types.AltP
                   @ GHC.Types.Bool
                   Lib.optargs23
                   (Options.Applicative.Types.$fAlternativeParser_$cempty
                      @ GHC.Types.Bool)) -}
812b3abe7e98fbedd89677d95f1fb814
  optargs23 :: Options.Applicative.Types.Parser GHC.Types.Bool
  {- Strictness: m2,
     Unfolding: (Options.Applicative.Types.OptP
                   @ GHC.Types.Bool
                   Lib.optargs24) -}
340f4284d392f06fcf9865d22513b3de
  optargs24 :: Options.Applicative.Types.Option GHC.Types.Bool
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.Option
                   @ GHC.Types.Bool
                   Lib.optargs27
                   Lib.optargs25) -}
671bd4667a038742376461221794aa00
  optargs25 :: Options.Applicative.Types.OptProperties
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.OptProperties
                   Options.Applicative.Types.Visible
                   Lib.optargs_lvl7
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Base.Nothing @ GHC.Base.String)
                   (GHC.Base.Nothing
                      @ (Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                         -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc))) -}
79dba644e77e1365955e1640174bd3a5
  optargs26 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("add this switch to use BEDPE coordinate input format (default format is master file)"#) -}
4003bdc7babd4e021c1f448a1985425f
  optargs27 :: Options.Applicative.Types.OptReader GHC.Types.Bool
  {- Strictness: m2,
     Unfolding: (Options.Applicative.Types.FlagReader
                   @ GHC.Types.Bool
                   Lib.optargs28
                   GHC.Types.True) -}
4904e5d0c11fd47cb960e4a3777c04dd
  optargs28 :: [Options.Applicative.Types.OptName]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Options.Applicative.Types.OptName
                   Lib.optargs_n1
                   Lib.optargs29) -}
1b1afc4981539582521ba065f4e25a10
  optargs29 :: [Options.Applicative.Types.OptName]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Options.Applicative.Types.OptName
                   Lib.optargs_n
                   (GHC.Types.[] @ Options.Applicative.Types.OptName)) -}
c1b745dc579ccd26b7f1eceedd57f0e7
  optargs3 :: Options.Applicative.Types.Option GHC.Base.String
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.Option
                   @ GHC.Base.String
                   Lib.optargs6
                   Lib.optargs4) -}
c9afd810cf60243fb9c4677be3858aff
  optargs30 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# Lib.optargs31) -}
c7fe507751f53dcfed0ffb1d8df3093b
  optargs31 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("bedpe"#) -}
5e9cb919439a1ba54ee3a9963b5d354d
  optargs4 :: Options.Applicative.Types.OptProperties
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.OptProperties
                   Options.Applicative.Types.Visible
                   (GHC.Base.Nothing @ Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                     `cast`
                   (Sym (Options.Applicative.Help.Chunk.N:Chunk[0]) <Text.PrettyPrint.ANSI.Leijen.Internal.Doc>_N)
                   Lib.optargs_var
                   (GHC.Base.Nothing @ GHC.Base.String)
                   (GHC.Base.Nothing
                      @ (Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                         -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc))) -}
b7a6c53a8eea14411da5c14355dbb80e
  optargs5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("OUTPUT_SAM_FILENAME"#) -}
4abf9baae7c2e8bf64ac7ad709477ef5
  optargs6 :: Options.Applicative.Types.OptReader GHC.Base.String
  {- HasNoCafRefs, Strictness: m3,
     Unfolding: (Options.Applicative.Types.ArgReader
                   @ GHC.Base.String
                   Lib.optargs7) -}
63764c385ff5174dbe6647e03e7fae3f
  optargs7 :: Options.Applicative.Types.CReader GHC.Base.String
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Options.Applicative.Types.CReader
                   @ GHC.Base.String
                   Options.Applicative.Types.$fMonoidCompleter3
                     `cast`
                   (Trans
                        (<GHC.Base.String>_R
                         ->_R Sym (GHC.Types.N:IO[0] <[GHC.Base.String]>_R))
                        (Sym (Options.Applicative.Types.N:Completer[0])))
                   (Data.Either.Right
                      @ Options.Applicative.Types.ParseError
                      @ GHC.Base.String)
                     `cast`
                   (Trans
                        (<GHC.Base.String>_R
                         ->_R Nth:3
                                  (Trans
                                       (<Control.Monad.Trans.Except.ExceptT
                                           Options.Applicative.Types.ParseError
                                           Data.Functor.Identity.Identity
                                           GHC.Base.String>_R
                                        ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                                      <Data.Either.Either
                                                         Options.Applicative.Types.ParseError
                                                         GHC.Base.String>_R))
                                       (<Control.Monad.Trans.Except.ExceptT
                                           Options.Applicative.Types.ParseError
                                           Data.Functor.Identity.Identity
                                           GHC.Base.String>_R
                                        ->_R Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                      <Options.Applicative.Types.ParseError>_N
                                                      <Data.Functor.Identity.Identity>_R
                                                      <GHC.Base.String>_N))))
                        (Trans
                             (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                       <*>_N
                                       <GHC.Base.String>_R
                                       <Control.Monad.Trans.Except.Except
                                          Options.Applicative.Types.ParseError>_R
                                       <GHC.Base.String>_N))
                             (Sym (Options.Applicative.Types.N:ReadM[0]) <GHC.Base.String>_N)))) -}
7f8193634072ca5c588a8a4f5ae865c1
  optargs8 ::
    Options.Applicative.Types.Parser (GHC.Base.String -> Lib.Opts)
  {- Unfolding: (Options.Applicative.Types.MultP
                   @ (GHC.Base.String -> Lib.Opts)
                   @ GHC.Base.String
                   Lib.optargs14
                   Lib.optargs9) -}
76c24de0c73760396a5a44d90eb9696f
  optargs9 :: Options.Applicative.Types.Parser GHC.Base.String
  {- Strictness: m4,
     Unfolding: (Options.Applicative.Types.AltP
                   @ GHC.Base.String
                   Lib.optargs10
                   (Options.Applicative.Types.$fAlternativeParser_$cempty
                      @ GHC.Base.String)) -}
45e9b0a9f230d7d4b89d7b76d3398162
  optargs_lvl7 ::
    Options.Applicative.Help.Chunk.Chunk
      Text.PrettyPrint.ANSI.Leijen.Internal.Doc
  {- Unfolding: (Options.Applicative.Help.Chunk.paragraph_go
                   (GHC.CString.unpackCString# Lib.optargs26)) -}
f8295c71f3b80b7dbdd34a49075b75d1
  optargs_n :: Options.Applicative.Types.OptName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (Options.Applicative.Types.OptShort 'b'#) -}
4365dc793a2f21b781c51150be6be908
  optargs_n1 :: Options.Applicative.Types.OptName
  {- Strictness: m2,
     Unfolding: (Options.Applicative.Types.OptLong Lib.optargs30) -}
5fb820e66926ab009631fe0c8a9e2f09
  optargs_var :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# Lib.optargs5) -}
b811ed132d280a939ee381111b0c4bb6
  optargs_var1 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# Lib.optargs13) -}
f2be6ca7e331c8151d72a3e2a7be0859
  optargs_var2 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# Lib.optargs19) -}
3c31bc85f029f4ac026ae858e52444ad
  optasp ::
    Data.Attoparsec.ByteString.Internal.Parser
      Data.ByteString.Internal.ByteString
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.optasp1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)) -}
dd530fff392d6d4aa9085dcb7a09254f
  optasp1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww { GHC.Types.I# ww1 ->
                 Lib.$woptasp @ r w ww1 w2 w3 w4 }) -}
956cb08c375822928ddd804b44a223da
  optfieldp ::
    Data.Attoparsec.ByteString.Internal.Parser
      Data.ByteString.Internal.ByteString
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.optfieldp1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)) -}
1276de8a62223264d887e7e966706380
  optfieldp1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww { GHC.Types.I# ww1 ->
                 Lib.$woptfieldp @ r w ww1 w2 w3 w4 }) -}
e91811c2713e0d9b4bea6da4b423f4fa
  optfieldp2 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww { GHC.Types.I# ww1 ->
                 Lib.$woptxsp @ r w ww1 w2 w3 w4 }) -}
1f805891e8d09970d1be911111cbdc4a
  optfieldpEOL ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString [GHC.Types.Char]
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.optfieldpEOL1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <[GHC.Types.Char]>_R)) -}
04e2a85e6864215a2438c01463e5144d
  optfieldpEOL1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [GHC.Types.Char]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w2 :: Data.Attoparsec.Internal.Types.State
                            Data.ByteString.Internal.ByteString)
                   (w3 :: Data.Attoparsec.Internal.Types.Pos)
                   (w4 :: Data.Attoparsec.Internal.Types.More)
                   (w5 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w6 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [GHC.Types.Char]
                            r) ->
                 case w3
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww { GHC.Types.I# ww1 ->
                 Data.Attoparsec.Combinator.$w$smanyTill1
                   @ GHC.Types.Char
                   @ ()
                   Lib.optfieldpEOL2
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                             <Data.ByteString.Internal.ByteString>_N <GHC.Types.Char>_R))
                   Data.Attoparsec.ByteString.Internal.endOfLine1
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                             <Data.ByteString.Internal.ByteString>_N <()>_R))
                   @ r
                   w2
                   ww1
                   w4
                   w5
                   w6 }) -}
43d56965bd9e0b9e7cab6bf545779a0f
  optfieldpEOL2 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         GHC.Types.Char
         r
    -> Data.Attoparsec.ByteString.Internal.Result r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            GHC.Types.Char
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$woptfieldpEOL @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
c02d6f64bfee52af78b503f07c1cb70d
  optfieldpEOL3 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
9d0967949e9e40366ffc0815866c8cc2
  optfieldpEOL4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.optfieldpEOL5) -}
75da0f5b4c18e3fb15fa0e39ff1446b2
  optfieldpEOL5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Failed reading: satisfyWith"#) -}
ea02c0f64fed4b76651a09710abdf5ee
  optfieldpEOL6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("\r\n"#) -}
e3b2018bade018cb349e3c91ed461fe7
  optfieldpEOL_ds :: Data.Attoparsec.ByteString.FastSet.FastSet
  {- Unfolding: (Data.Attoparsec.ByteString.FastSet.charClass
                   (GHC.CString.unpackCString# Lib.optfieldpEOL6)) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  optfields :: Lib.AlignedRead -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLSLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds22 }) -}
c65411a1c5c07eb49fbb6c96b9af0674
  optfieldsp ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString
      [Data.ByteString.Internal.ByteString]
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.optfieldsp1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <[Data.ByteString.Internal.ByteString]>_R)) -}
3ed392143f86a62ad8b866962c99df1e
  optfieldsp1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [Data.ByteString.Internal.ByteString]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w2 :: Data.Attoparsec.Internal.Types.State
                            Data.ByteString.Internal.ByteString)
                   (w3 :: Data.Attoparsec.Internal.Types.Pos)
                   (w4 :: Data.Attoparsec.Internal.Types.More)
                   (w5 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w6 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [Data.ByteString.Internal.ByteString]
                            r) ->
                 case w3
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww { GHC.Types.I# ww1 ->
                 Data.Attoparsec.Combinator.$w$ssepBy'1
                   @ Data.ByteString.Internal.ByteString
                   @ GHC.Types.Char
                   Lib.optfieldsp5
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                             <Data.ByteString.Internal.ByteString>_N
                             <Data.ByteString.Internal.ByteString>_R))
                   Data.Attoparsec.ByteString.Char8.space
                   @ r
                   w2
                   ww1
                   w4
                   w6 }) -}
f762b1c67c3f8bff19ee6fa158791562
  optfieldsp2 ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString [[GHC.Types.Char]]
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.optfieldsp6
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <[[GHC.Types.Char]]>_R)) -}
aabbb10923473bc13f03d0c2dacc314d
  optfieldsp3 ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString
      [Data.ByteString.Internal.ByteString]
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.optfieldsp1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <[Data.ByteString.Internal.ByteString]>_R)) -}
3248dd34a871e2685324391f0b3773a6
  optfieldsp5 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wtxtfieldp @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w4 } }) -}
100314933d6a089482b10b61c995c64b
  optfieldsp6 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [[GHC.Types.Char]]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w2 :: Data.Attoparsec.Internal.Types.State
                            Data.ByteString.Internal.ByteString)
                   (w3 :: Data.Attoparsec.Internal.Types.Pos)
                   (w4 :: Data.Attoparsec.Internal.Types.More)
                   (w5 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w6 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [[GHC.Types.Char]]
                            r) ->
                 case w3
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww { GHC.Types.I# ww1 ->
                 Data.Attoparsec.Combinator.$w$ssepBy'1
                   @ [GHC.Types.Char]
                   @ GHC.Types.Char
                   Lib.optfieldpEOL1
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                             <Data.ByteString.Internal.ByteString>_N <[GHC.Types.Char]>_R))
                   Data.Attoparsec.ByteString.Char8.space
                   @ r
                   w2
                   ww1
                   w4
                   w6 }) -}
c4d78aac35c075054cda8c62ea53b407
  optfieldstotalp ::
    Data.Attoparsec.ByteString.Internal.Parser
      Data.ByteString.Internal.ByteString
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.optfieldstotalp1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)) -}
6823298c8db27ab76b85ca636df4725b
  optfieldstotalp1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$woptfieldstotalp @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w4 } }) -}
6c3286b5cb944da5c15c1d6b59c3d4c7
  optidp ::
    Data.Attoparsec.ByteString.Internal.Parser
      Data.ByteString.Internal.ByteString
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.optidp1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)) -}
b990bbf28f2e67c69a56b76ffa0d3778
  optidp1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww { GHC.Types.I# ww1 ->
                 Lib.$woptidp @ r w ww1 w2 w3 w4 }) -}
9eee7af79afaf917590806453bd0911c
  optidp2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.optidp_addr#1) -}
a8c631fca7f34463e0075a6a47c25223
  optidp3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.optidp_addr#) -}
c3d3c3edbbdfc0c1c5670c4f9b423376
  optidp4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.optidp_addr#2) -}
49a7fc1017c636ad8f38901ab05f88f7
  optidp_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("NM"#) -}
500a53b90814979832fa7983c7dd11ed
  optidp_addr#1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("AS"#) -}
7b5bd4271d38866f68160b095cb33479
  optidp_addr#2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("XS"#) -}
bd974a399593741f64bfa2533cd01c05
  optidp_m ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString
      Data.ByteString.Internal.ByteString
  {- Unfolding: (Data.Attoparsec.ByteString.Char8.$fIsStringParser_$cfromString
                   @ Data.ByteString.Internal.ByteString
                   (GHC.Types.Eq#
                      @ *
                      @ *
                      @ Data.ByteString.Internal.ByteString
                      @ Data.ByteString.Internal.ByteString
                      @~ <Data.ByteString.Internal.ByteString>_N)
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Data.ByteString.Internal.ByteString>_N <Data.ByteString.Internal.ByteString>_N)
                   Lib.optidp2) -}
daae22952b4b8f10a13f69bda22a6ca8
  optidp_m1 ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString
      Data.ByteString.Internal.ByteString
  {- Unfolding: (Data.Attoparsec.ByteString.Char8.$fIsStringParser_$cfromString
                   @ Data.ByteString.Internal.ByteString
                   (GHC.Types.Eq#
                      @ *
                      @ *
                      @ Data.ByteString.Internal.ByteString
                      @ Data.ByteString.Internal.ByteString
                      @~ <Data.ByteString.Internal.ByteString>_N)
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Data.ByteString.Internal.ByteString>_N <Data.ByteString.Internal.ByteString>_N)
                   Lib.optidp3) -}
cab66aac3a2e1b9525cd9f16ac18208a
  optidp_m2 ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString
      Data.ByteString.Internal.ByteString
  {- Unfolding: (Data.Attoparsec.ByteString.Char8.$fIsStringParser_$cfromString
                   @ Data.ByteString.Internal.ByteString
                   (GHC.Types.Eq#
                      @ *
                      @ *
                      @ Data.ByteString.Internal.ByteString
                      @ Data.ByteString.Internal.ByteString
                      @~ <Data.ByteString.Internal.ByteString>_N)
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Data.ByteString.Internal.ByteString>_N <Data.ByteString.Internal.ByteString>_N)
                   Lib.optidp4) -}
e5e359bb0daf8860d047206d70cc225e
  optidp_v :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.optidp_addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.optidp_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
d3c3fb0169450fc989d9566a7bffce75
  optidp_v1 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.optidp_addr#2
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.optidp_addr#2
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
b2f109021b2f1691f5f19a2ff2b41aef
  optidp_v2 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.optidp_addr#1
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.optidp_addr#1
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
0edcdfa8b27548985504cac95df1f1b8
  optnmp ::
    Data.Attoparsec.ByteString.Internal.Parser
      Data.ByteString.Internal.ByteString
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.optnmp1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)) -}
f49f033ce9710935850f9bfd65c8a87e
  optnmp1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww { GHC.Types.I# ww1 ->
                 Lib.$woptnmp @ r w ww1 w2 w3 w4 }) -}
bf04f6cc8025925317fe234ad3dd608a
  optxsp ::
    Data.Attoparsec.ByteString.Internal.Parser
      Data.ByteString.Internal.ByteString
  {- Arity: 5,
     Strictness: <L,U><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.optfieldp2
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)) -}
9d444cb42900aebbeb90455ac8193fe9
  outfilename :: Lib.Opts -> GHC.Base.String
  RecSel Left Lib.Opts
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLS),1*U(A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.Opts) ->
                 case ds6 of wild { Lib.Opts ds7 ds8 ds9 ds10 -> ds10 }) -}
e2c0c85c514784c2ed19970c7fc99cc7
  pairNotMapped :: Lib.SAMFlag -> GHC.Types.Bool
  RecSel Left Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLLLLLLL),1*U(A,A,A,1*U,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.SAMFlag) ->
                 case ds6 of wild { Lib.SAMFlag ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds10 }) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  paired :: Lib.AlignedRead -> GHC.Types.Bool
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLSLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds24 }) -}
ae538cec3bb11e514296b43ac53c8bf3
  pairedAlnToTuple ::
    Lib.PairedAln
    -> (Lib.AlignedRead, Lib.AlignedRead, [Lib.AlignedRead],
        [Lib.AlignedRead])
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(1*U,1*U,1*U,1*U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (p :: Lib.PairedAln) ->
                 (case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 -> ds6 },
                  case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 -> ds7 },
                  case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 -> ds8 },
                  case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 -> ds9 })) -}
e2c0c85c514784c2ed19970c7fc99cc7
  pairedRead :: Lib.SAMFlag -> GHC.Types.Bool
  RecSel Left Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(1*U,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.SAMFlag) ->
                 case ds6 of wild { Lib.SAMFlag ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds7 }) -}
1ba88ee17c934bb76aba38e558cc2af0
  pairedalnparser ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString Lib.PairedAln
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.pairedalnparser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <Lib.PairedAln>_R)) -}
0b00a4015f7b99eefaa8016f0e01a89e
  pairedalnparser1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.PairedAln
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.PairedAln
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wpairedalnparser
                   @ r
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww8
                   w2
                   w3
                   w4 } }) -}
32a1a5b7e419023f2a40ff40cb1e4641
  parseAln ::
    Data.ByteString.Internal.ByteString
    -> Data.Either.Either GHC.Base.String Lib.AlignedRead
  {- Arity: 1, Strictness: <S(SLSS),1*U(U,U,U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.ByteString.Internal.ByteString) ->
                 case w of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wparseAln ww1 ww2 ww3 ww4 }) -}
02eab291917bf5e50360bcd25d95e414
  parseAln1 :: Data.Either.Either GHC.Base.String Lib.AlignedRead
  {- Strictness: x -}
714fb5b5e150ee66d4529a5c0f8ebab3
  parseAln2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (": "#) -}
8a5ca4d6698c8f4e2a601ef7262f239f
  parseAln3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.parseAln4) -}
c97fa0e8826b8d23d456fa9b7da6adcc
  parseAln4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (" > "#) -}
a495626daaed13124b7a0cfe2f36bd85
  parseAlns ::
    [Data.ByteString.Internal.ByteString] -> Lib.Alignments
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (as :: [Data.ByteString.Internal.ByteString]) ->
                 Data.Either.rights
                   @ GHC.Base.String
                   @ Lib.AlignedRead
                   (GHC.Base.build
                      @ (Data.Either.Either GHC.Base.String Lib.AlignedRead)
                      (\ @ b1
                         (c2 :: Data.Either.Either GHC.Base.String Lib.AlignedRead
                                -> b1 -> b1)[OneShot]
                         (n :: b1)[OneShot] ->
                       GHC.Base.foldr
                         @ Data.ByteString.Internal.ByteString
                         @ b1
                         (GHC.Base.mapFB
                            @ (Data.Either.Either GHC.Base.String Lib.AlignedRead)
                            @ b1
                            @ Data.ByteString.Internal.ByteString
                            c2
                            Lib.parseAlns1)
                         n
                         as))) -}
512d575b5b86865c59756348eb04f2fb
  parseAlns1 ::
    Data.ByteString.Internal.ByteString
    -> Data.Either.Either GHC.Base.String Lib.AlignedRead
  {- Arity: 1,
     Unfolding: (Data.Attoparsec.ByteString.Internal.parseOnly
                   @ Lib.AlignedRead
                   Lib.alnparser1
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                             <Data.ByteString.Internal.ByteString>_N <Lib.AlignedRead>_R))) -}
729d040c3ca8393444241f99ad9ec772
  parseBED ::
    Data.ByteString.Internal.ByteString
    -> Data.Either.Either GHC.Base.String Lib.BedRecord
  {- Arity: 1, Strictness: <S(SLSS),1*U(U,U,U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.ByteString.Internal.ByteString) ->
                 case w of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wparseBED ww1 ww2 ww3 ww4 }) -}
d0805adb1ead2a236b0a26bdd34e125c
  parseBED1 :: Data.Either.Either GHC.Base.String Lib.BedRecord
  {- Strictness: x -}
9756650c9e6905297ff85b4fda7f30a0
  parseBEDPE ::
    Data.ByteString.Internal.ByteString
    -> Data.Either.Either GHC.Base.String Lib.BEDPE
  {- Arity: 1, Strictness: <S(SLSS),1*U(U,U,U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.ByteString.Internal.ByteString) ->
                 case w of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wparseBEDPE ww1 ww2 ww3 ww4 }) -}
c71695a3b738f06a975d87192130eb90
  parseBEDPE1 :: Data.Either.Either GHC.Base.String Lib.BEDPE
  {- Strictness: x -}
11a50531dab435d19e33c13357ec720d
  parseCigar ::
    Data.ByteString.Internal.ByteString
    -> Data.Either.Either
         GHC.Base.String
         [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
  {- Arity: 1,
     Unfolding: (Data.Attoparsec.ByteString.Internal.parseOnly
                   @ [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                   Lib.parseCigar1
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                             <Data.ByteString.Internal.ByteString>_N
                             <[(GHC.Integer.Type.Integer,
                                Data.ByteString.Internal.ByteString)]>_R))) -}
b1e965217d9817610c3d575d0fd8f4ac
  parseCigar1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wparseCigar @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
6b800c07d8984920cb7343585d11626a
  parsePairedAlns ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString [Lib.PairedAln]
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.parsePairedAlns1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <[Lib.PairedAln]>_R)) -}
226ca838a22c8c0f3b414fc4879c2f02
  parsePairedAlns' ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString [[Lib.AlignedRead]]
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.parsePairedAlns'1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <[[Lib.AlignedRead]]>_R)) -}
63bdecbe575c41670b73292ab0c13f04
  parsePairedAlns'1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [[Lib.AlignedRead]]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [[Lib.AlignedRead]]
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wparsePairedAlns'
                   @ r
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww8
                   w2
                   w3
                   w4 } }) -}
01ae162d680ecd57d5f600733cec0777
  parsePairedAlns1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [Lib.PairedAln]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [Lib.PairedAln]
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wparsePairedAlns
                   @ r
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww8
                   w2
                   w3
                   w4 } }) -}
f8c653e2b8d07052aa08b13de4e6d4f2
  parsePairedAlnsFromSAM ::
    Data.ByteString.Internal.ByteString
    -> Data.Either.Either GHC.Base.String [Lib.PairedAln]
  {- Arity: 1, Strictness: <S(SLSS),1*U(U,U,U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.ByteString.Internal.ByteString) ->
                 case w of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wparsePairedAlnsFromSAM ww1 ww2 ww3 ww4 }) -}
9ad4b633b3f95ec6c88a2d91ba096ccb
  parsePairedAlnsFromSAM1 ::
    Data.Either.Either GHC.Base.String [Lib.PairedAln]
  {- Strictness: x -}
8e570a0b464aafb844f4ad8333013b9d
  parsePairedAlnsOrHdr ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString [Lib.PairedAln]
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.parsePairedAlnsOrHdr1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <[Lib.PairedAln]>_R)) -}
7c789cc310aacbb0fccaedf0c1030249
  parsePairedAlnsOrHdr1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [Lib.PairedAln]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [Lib.PairedAln]
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wparsePairedAlnsOrHdr
                   @ r
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww8
                   w2
                   w3
                   w4 } }) -}
324e327c48fd5dac826eaf51690532ce
  parseReadsetsFromSAM ::
    Data.ByteString.Internal.ByteString -> [[Lib.AlignedRead]]
  {- Arity: 1, Strictness: <S(SLSS),1*U(U,U,U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.ByteString.Internal.ByteString) ->
                 case w of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wparseReadsetsFromSAM ww1 ww2 ww3 ww4 }) -}
2f7199aabe55c5127b77289d460267db
  parseReadsetsFromSAM1 ::
    Data.Either.Either GHC.Base.String [[Lib.AlignedRead]]
  {- Strictness: x -}
4e6411f41069f371a39f1be38a03f95c
  parseSingleAlnsOrHdr ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString [Lib.AlignedRead]
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.parseSingleAlnsOrHdr1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <[Lib.AlignedRead]>_R)) -}
6bd169489a95338fc5ffdce18350669c
  parseSingleAlnsOrHdr1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [Lib.AlignedRead]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [Lib.AlignedRead]
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wparseSingleAlnsOrHdr
                   @ r
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww8
                   w2
                   w3
                   w4 } }) -}
c29c5ad6d51b041f08a7fc3191b53aac
  parsechkBED ::
    GHC.Types.Int
    -> GHC.Types.Int -> [GHC.Types.Int] -> GHC.Base.String
  {- Arity: 3, Strictness: <S(S),1*U(U)><S(S),1*U(U)><L,1*U>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: GHC.Types.Int)
                   (w2 :: [GHC.Types.Int]) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { GHC.Types.I# ww3 ->
                 Lib.$wparsechkBED ww1 ww3 w2 } }) -}
269f6c0b355d30db0cda5669b3d47bb5
  parsechkBED1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.parsechkBED2) -}
1eec17a98a153b61763c63d82b39fb55
  parsechkBED2 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: (" primer BEDPE records parsed successfully.\n"#) -}
efe518e83506f43b1e0a572696fee81d
  parsechkBED3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.parsechkBED4) -}
2b50c21990b005951a4f2d1d93715457
  parsechkBED4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: (" primer BEDPE records failed to parse (see bedparsefails.log)\n"#) -}
8205a594cd4e531b4a033003c8a89baa
  parsechkMaster ::
    GHC.Types.Int
    -> GHC.Types.Int -> [GHC.Types.Int] -> GHC.Base.String
  {- Arity: 3, Strictness: <S(S),1*U(U)><S(S),1*U(U)><L,1*U>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: GHC.Types.Int)
                   (w2 :: [GHC.Types.Int]) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { GHC.Types.I# ww3 ->
                 Lib.$wparsechkMaster ww1 ww3 w2 } }) -}
920c2bf8be75916bcc41011edccbc894
  parsechkSAM ::
    GHC.Types.Int
    -> GHC.Types.Int -> [GHC.Types.Int] -> GHC.Base.String
  {- Arity: 3, Strictness: <S(S),1*U(U)><S(S),1*U(U)><L,1*U>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: GHC.Types.Int)
                   (w2 :: [GHC.Types.Int]) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { GHC.Types.I# ww3 ->
                 Lib.$wparsechkSAM ww1 ww3 w2 } }) -}
443f2c37b63097b9c6e902bccbf55eb9
  parsechkSAM1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.parsechkSAM2) -}
99e7c31cf0c9afb563d57385b34960f2
  parsechkSAM2 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: (" SAM alignments parsed successfully.\n"#) -}
2702f2c636854ad200a41441f448f519
  parsechkSAM3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.parsechkSAM4) -}
7b0d0a51c8a7a6355faf18009ddd50b6
  parsechkSAM4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: (" SAM alignments failed to parse (see samparsefails.log)\n"#) -}
13febe0305e747c06e3ce44f2c62b725
  parsedbl ::
    Data.ByteString.Internal.ByteString
    -> Data.Either.Either GHC.Base.String GHC.Types.Double
  {- Arity: 1,
     Unfolding: (Data.Attoparsec.ByteString.Internal.parseOnly
                   @ GHC.Types.Double
                   Data.Attoparsec.ByteString.Char8.double1
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                             <Data.ByteString.Internal.ByteString>_N <GHC.Types.Double>_R))) -}
1723a85a915d576e7ef324be0afc11c0
  parseint ::
    Data.ByteString.Internal.ByteString
    -> Data.Either.Either GHC.Base.String GHC.Integer.Type.Integer
  {- Arity: 1,
     Unfolding: (Data.Attoparsec.ByteString.Internal.parseOnly
                   @ GHC.Integer.Type.Integer
                   Data.Attoparsec.ByteString.Char8.decimal6
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                             <Data.ByteString.Internal.ByteString>_N
                             <GHC.Integer.Type.Integer>_R))) -}
1c80afdd1a42421bc19e5384caa14d05
  parsemIDstring ::
    Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
  {- Arity: 1, Strictness: <S(SLSS),1*U(U,U,U,1*U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.ByteString.Internal.ByteString) ->
                 case w of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wparsemIDstring ww1 ww2 ww3 ww4 }) -}
ecf8519e8a3778562af31d328601fbdf
  parsemIDstring1 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.parsemIDstring_addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.parsemIDstring_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
97464442627edf34bb6c940f80c4c5bd
  parsemIDstring2 :: GHC.Prim.Word# -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (c# :: GHC.Prim.Word#) ->
                 case c# of wild {
                   DEFAULT -> GHC.Types.False
                   9## -> GHC.Types.True
                   10## -> GHC.Types.True
                   11## -> GHC.Types.True
                   12## -> GHC.Types.True
                   13## -> GHC.Types.True
                   32## -> GHC.Types.True
                   160## -> GHC.Types.True }) -}
0ca3e36c4ebafca4db8ba832aa667c42
  parsemIDstring_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("NOMIDSTRING"#) -}
61700d3cc93056e4b9fd6f20ee5182c7
  parsemIDstring_go ::
    [Data.ByteString.Internal.ByteString]
    -> [Data.ByteString.Internal.ByteString]
  {- Arity: 1, Strictness: <S,1*U> -}
368d899e9b5cd86cd5fedc0635c5cc17
  parsesignedint ::
    Data.ByteString.Internal.ByteString -> GHC.Integer.Type.Integer
  {- Arity: 1, Strictness: <S(SLSS),1*U(U,U,U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.ByteString.Internal.ByteString) ->
                 case w of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wparsesignedint ww1 ww2 ww3 ww4 }) -}
bb0f82a84782973bdc5b3bcaca9fc721
  parsesignedint1 ::
    Data.Either.Either GHC.Base.String GHC.Types.Double
  {- Strictness: x -}
64e0a7b5a8db25e9b81a102c9fe8422f
  pintflag :: Lib.AlignedRead -> GHC.Types.Bool
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLSLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds28 }) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  pnext :: Lib.AlignedRead -> GHC.Integer.Type.Integer
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLSLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds18 }) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  pos :: Lib.AlignedRead -> GHC.Integer.Type.Integer
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds10 }) -}
6f760c933e008b36f1c2ad656d809c5f
  postxposdcnt :: Lib.MidFamily -> GHC.Integer.Type.Integer
  RecSel Left Lib.MidFamily
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLSLL),1*U(A,A,A,A,A,A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MidFamily) ->
                 case ds6 of wild { Lib.MidFamily ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds14 }) -}
107634345887a767323003278f41a26b
  primaryR1filter :: Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LS(S)LLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: Lib.AlignedRead) ->
                 case a of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 case ds7 of wild1 { GHC.Types.I# x# ->
                 case GHC.Prim.andI# x# 256# of wild2 {
                   DEFAULT -> GHC.Types.False
                   0#
                   -> case GHC.Prim.andI# x# 64# of wild3 {
                        DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } } } }) -}
6886ae250df13140ed29e94546c0899b
  primaryR2filter :: Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LS(S)LLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: Lib.AlignedRead) ->
                 case a of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 case ds7 of wild1 { GHC.Types.I# x# ->
                 case GHC.Prim.andI# x# 256# of wild2 {
                   DEFAULT -> GHC.Types.False
                   0#
                   -> case GHC.Prim.andI# x# 64# of wild3 {
                        DEFAULT -> GHC.Types.False 0# -> GHC.Types.True } } } }) -}
d51d55fb948e4876d4d088aa0181c56f
  printAlignment ::
    Lib.AlignedRead -> Data.ByteString.Internal.ByteString
  {- Arity: 1,
     Strictness: <L,U(1*U,1*U(U),1*U,A,A,U,A,1*U,A,A,1*U(U,U,U,U),1*U,U,1*U,1*U,1*U,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A)> -}
8928f5e8bd90059c1eed5bdd9ef62fc4
  printAlignmentOrHdr ::
    Lib.AlignedRead -> Data.ByteString.Internal.ByteString
  {- Arity: 1,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLSLLLL),1*U(U,1*U(U),1*U,A,A,U,A,U,A,A,U(U,U,U,U),1*U,U,U,U,U,A,A,A,A,A,A,A,1*U,A,1*U,1*U,A,A,A,A)> -}
cb74671841f20c4501b9ee457f25f05c
  printAlnStreamToFile ::
    Control.Monad.Trans.Resource.Internal.MonadResource m =>
    GHC.IO.FilePath
    -> Data.Conduit.Internal.Conduit.ConduitM Lib.AlignedRead c m ()
  {- Arity: 2,
     Strictness: <L,U(U(U(A,C(C1(U)),A,C(U),A),C(U)),C(U))><L,U> -}
64e0a7b5a8db25e9b81a102c9fe8422f
  qname :: Lib.AlignedRead -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(1*U(U,U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds7 }) -}
e2c0c85c514784c2ed19970c7fc99cc7
  queryPlus :: Lib.SAMFlag -> GHC.Types.Bool
  RecSel Left Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLLLLLLL),1*U(A,A,A,A,1*U,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.SAMFlag) ->
                 case ds6 of wild { Lib.SAMFlag ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds11 }) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  r1prim :: Lib.PairedAln -> Lib.AlignedRead
  RecSel Left Lib.PairedAln
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.PairedAln) ->
                 case ds6 of wild { Lib.PairedAln ds7 ds8 ds9 ds10 -> ds7 }) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  r1secs :: Lib.PairedAln -> [Lib.AlignedRead]
  RecSel Left Lib.PairedAln
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLSL),1*U(A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.PairedAln) ->
                 case ds6 of wild { Lib.PairedAln ds7 ds8 ds9 ds10 -> ds9 }) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  r2prim :: Lib.PairedAln -> Lib.AlignedRead
  RecSel Left Lib.PairedAln
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLL),1*U(A,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.PairedAln) ->
                 case ds6 of wild { Lib.PairedAln ds7 ds8 ds9 ds10 -> ds8 }) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  r2secs :: Lib.PairedAln -> [Lib.AlignedRead]
  RecSel Left Lib.PairedAln
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLS),1*U(A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.PairedAln) ->
                 case ds6 of wild { Lib.PairedAln ds7 ds8 ds9 ds10 -> ds10 }) -}
ad8c5133a94058f77d367703acfe6b76
  rdint :: GHC.Base.String -> GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>, Unfolding: (Lib.toBinInt) -}
2f77a8a60eaf501cb8f9b89578421f51
  read1filter :: Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LS(S)LLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: Lib.AlignedRead) ->
                 case a of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 case ds7 of wild1 { GHC.Types.I# x# ->
                 case GHC.Prim.andI# x# 64# of wild2 {
                   DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } } }) -}
237e329da5745d21865435b8da1628d0
  readBEDPE :: GHC.IO.FilePath -> GHC.Types.IO [Lib.BEDPE]
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.createprimerbedmaps2
                  `cast`
                (<GHC.IO.FilePath>_R
                 ->_R Sym (GHC.Types.N:IO[0] <[Lib.BEDPE]>_R)) -}
44d205651f53f44e2c2e5b5220544170
  readSAM :: GHC.IO.FilePath -> GHC.Types.IO [Lib.AlignedRead]
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.readSAM1
                  `cast`
                (<GHC.IO.FilePath>_R
                 ->_R Sym (GHC.Types.N:IO[0] <[Lib.AlignedRead]>_R)) -}
3c4e074927189c8b2ad52e9bfff78a87
  readSAM1 ::
    GHC.IO.FilePath
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [Lib.AlignedRead] #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (fp :: GHC.IO.FilePath)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case System.IO.withBinaryFile1
                        @ Data.ByteString.Internal.ByteString
                        fp
                        GHC.IO.IOMode.ReadMode
                        Data.ByteString.readFile2
                          `cast`
                        (<GHC.IO.Handle.Types.Handle>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Data.ByteString.Internal.ByteString>_R))
                        eta of ds6 { (#,#) ipv ipv1 ->
                 (# ipv,
                    case ipv1 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                    Data.Either.rights
                      @ GHC.Base.String
                      @ Lib.AlignedRead
                      (GHC.Base.map
                         @ Data.ByteString.Internal.ByteString
                         @ (Data.Either.Either GHC.Base.String Lib.AlignedRead)
                         Lib.readSAM2
                         (Data.ByteString.Char8.$wlines ww1 ww2 ww3 ww4)) } #) }) -}
5d76c523c55610b8fb41023be23a3d1c
  readSAM2 ::
    Data.ByteString.Internal.ByteString
    -> Data.Either.Either GHC.Base.String Lib.AlignedRead
  {- Arity: 1,
     Unfolding: (Data.Attoparsec.ByteString.Internal.parseOnly
                   @ Lib.AlignedRead
                   Lib.readSAM3
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                             <Data.ByteString.Internal.ByteString>_N <Lib.AlignedRead>_R))) -}
043b9e153056152df0ef9b870ad48a34
  readSAM3 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.AlignedRead
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.AlignedRead
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wlvl5 @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
ee552373f8c34af2ed56ffa7072f6a72
  readSAMFlag :: GHC.Types.Int -> Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(U)>,
     Unfolding: (\ (flag1 :: GHC.Types.Int) ->
                 Lib.SAMFlag
                   (case flag1 of wild { GHC.Types.I# x# ->
                    case GHC.Prim.andI# x# 1# of wild1 {
                      DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } })
                   (case flag1 of wild { GHC.Types.I# x# ->
                    case GHC.Prim.andI# x# 2# of wild1 {
                      DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } })
                   (case flag1 of wild { GHC.Types.I# x# ->
                    case GHC.Prim.andI# x# 4# of wild1 {
                      DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } })
                   (case flag1 of wild { GHC.Types.I# x# ->
                    case GHC.Prim.andI# x# 8# of wild1 {
                      DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } })
                   (case flag1 of wild { GHC.Types.I# x# ->
                    case GHC.Prim.andI# x# 16# of wild1 {
                      DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } })
                   (case flag1 of wild { GHC.Types.I# x# ->
                    case GHC.Prim.andI# x# 32# of wild1 {
                      DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } })
                   (case flag1 of wild { GHC.Types.I# x# ->
                    case GHC.Prim.andI# x# 64# of wild1 {
                      DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } })
                   (case flag1 of wild { GHC.Types.I# x# ->
                    case GHC.Prim.andI# x# 128# of wild1 {
                      DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } })
                   (case flag1 of wild { GHC.Types.I# x# ->
                    case GHC.Prim.andI# x# 256# of wild1 {
                      DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } })
                   (case flag1 of wild { GHC.Types.I# x# ->
                    case GHC.Prim.andI# x# 512# of wild1 {
                      DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } })
                   (case flag1 of wild { GHC.Types.I# x# ->
                    case GHC.Prim.andI# x# 1024# of wild1 {
                      DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } })
                   flag1) -}
9be4a6f80746348785119eb2bc672533
  readSAMnameset ::
    GHC.IO.FilePath -> GHC.Types.IO [[Lib.AlignedRead]]
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.readSAMnameset1
                  `cast`
                (<GHC.IO.FilePath>_R
                 ->_R Sym (GHC.Types.N:IO[0] <[[Lib.AlignedRead]]>_R)) -}
e79fb11af9c025024e061fd9ffaa8b1a
  readSAMnameset1 ::
    GHC.IO.FilePath
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [[Lib.AlignedRead]] #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (fp :: GHC.IO.FilePath)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case System.IO.withBinaryFile1
                        @ Data.ByteString.Internal.ByteString
                        fp
                        GHC.IO.IOMode.ReadMode
                        Data.ByteString.readFile2
                          `cast`
                        (<GHC.IO.Handle.Types.Handle>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Data.ByteString.Internal.ByteString>_R))
                        eta of ds6 { (#,#) ipv ipv1 ->
                 (# ipv, Lib.parseReadsetsFromSAM ipv1 #) }) -}
1e2474a4193c57470f685a833ab15f36
  readSAMtoPairedAlns ::
    GHC.IO.FilePath -> GHC.Types.IO (Lib.AlignedRead, [Lib.PairedAln])
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.readSAMtoPairedAlns1
                  `cast`
                (<GHC.IO.FilePath>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <(Lib.AlignedRead, [Lib.PairedAln])>_R)) -}
cd7254c8501d7c35bc7ec6e6190390f9
  readSAMtoPairedAlns1 ::
    GHC.IO.FilePath
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Lib.AlignedRead, [Lib.PairedAln]) #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (fp :: GHC.IO.FilePath)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case System.IO.withBinaryFile1
                        @ Data.ByteString.Internal.ByteString
                        fp
                        GHC.IO.IOMode.ReadMode
                        Data.ByteString.readFile2
                          `cast`
                        (<GHC.IO.Handle.Types.Handle>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Data.ByteString.Internal.ByteString>_R))
                        eta of ds6 { (#,#) ipv ipv1 ->
                 (# ipv,
                    let {
                      ipv2 :: [[Lib.AlignedRead]]
                      = case ipv1 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                        Lib.$wparseReadsetsFromSAM ww1 ww2 ww3 ww4 }
                    } in
                    (Lib.safegetheader ipv2,
                     case ipv2 of wild {
                       [] -> case GHC.List.scanl2 ret_ty [Lib.PairedAln] of {}
                       : ds7 xs
                       -> GHC.Base.map
                            @ [Lib.AlignedRead]
                            @ Lib.PairedAln
                            Lib.alnsToPairedAln
                            xs }) #) }) -}
496540f1543e753e62e1bfe0a0de6184
  readint :: GHC.Base.String -> GHC.Integer.Type.Integer
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (s :: GHC.Base.String) ->
                 case Text.Read.readEither8
                        @ GHC.Integer.Type.Integer
                        (Text.ParserCombinators.ReadP.run
                           @ GHC.Integer.Type.Integer
                           Lib.readint3
                           s) of wild {
                   [] -> Lib.readint2
                   : x ds6
                   -> case ds6 of wild1 { [] -> x : ipv ipv1 -> Lib.readint1 } }) -}
e2f8fd755f3282426ec3966295c0869a
  readint1 :: GHC.Integer.Type.Integer
  {- Strictness: x -}
96e1713c81cca060ae61f62f0b8680e1
  readint2 :: GHC.Integer.Type.Integer
  {- Strictness: x -}
49264d7aca06af8f8aa21b657f511e35
  readint3 :: Text.ParserCombinators.ReadP.P GHC.Integer.Type.Integer
  {- Unfolding: (GHC.Read.$fReadInteger_$sreadNumber
                   GHC.Read.$fReadInteger2
                   Text.ParserCombinators.ReadPrec.minPrec
                   @ GHC.Integer.Type.Integer
                   (Text.Read.readEither7 @ GHC.Integer.Type.Integer)) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  refseq :: Lib.AlignedRead -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLSLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds20 }) -}
7bbd4d124ab9a728e08072313eaaa4c5
  remCigOps :: Lib.CigarMod -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.CigarMod
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSL),1*U(A,A,A,1*U(U,U,U,U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.CigarMod) ->
                 case ds6 of wild { Lib.CigarMod ds7 ds8 ds9 ds10 ds11 -> ds10 }) -}
27ffe88a2ee757491154eb6eb5c6b388
  removeDs ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> [(GHC.Integer.Type.Integer,
         Data.ByteString.Internal.ByteString)]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (cs :: [(GHC.Integer.Type.Integer,
                            Data.ByteString.Internal.ByteString)]) ->
                 GHC.Base.build
                   @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                   (\ @ b
                      (c2 :: (GHC.Integer.Type.Integer,
                              Data.ByteString.Internal.ByteString)
                             -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                      @ b
                      (GHC.List.filterFB
                         @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                         @ b
                         c2
                         Lib.removeDs1)
                      n
                      cs)) -}
e035405031ff42d42de35bd4c664316b
  removeDs1 ::
    (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
    -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S(LS(SLSS)),1*U(A,1*U(U,U,U,U))>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: (GHC.Integer.Type.Integer,
                          Data.ByteString.Internal.ByteString)) ->
                 case w of ww { (,) ww1 ww2 ->
                 case ww2 of ww3 { Data.ByteString.Internal.PS ww4 ww5 ww6 ww7 ->
                 Lib.$wlvl6 ww4 ww5 ww6 ww7 } }) -}
1695bd86d4642b6e5c764ebfceafb7bf
  removeNonPrimaryZeroLengthAlignments ::
    Lib.PairedAln -> Lib.PairedAln
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,1*U,1*U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (p :: Lib.PairedAln) ->
                 case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                 Lib.PairedAln
                   ds6
                   ds7
                   (GHC.Base.build
                      @ Lib.AlignedRead
                      (\ @ b
                         (c2 :: Lib.AlignedRead -> b -> b)[OneShot]
                         (n :: b)[OneShot] ->
                       GHC.Base.foldr
                         @ Lib.AlignedRead
                         @ b
                         (GHC.List.filterFB
                            @ Lib.AlignedRead
                            @ b
                            c2
                            Lib.removeNonPrimaryZeroLengthAlignments1)
                         n
                         ds8))
                   (GHC.Base.build
                      @ Lib.AlignedRead
                      (\ @ b
                         (c2 :: Lib.AlignedRead -> b -> b)[OneShot]
                         (n :: b)[OneShot] ->
                       GHC.Base.foldr
                         @ Lib.AlignedRead
                         @ b
                         (GHC.List.filterFB
                            @ Lib.AlignedRead
                            @ b
                            c2
                            Lib.removeNonPrimaryZeroLengthAlignments1)
                         n
                         ds9)) }) -}
f766bb1d8e259160f0f97a4e21e19f27
  removeNonPrimaryZeroLengthAlignments1 ::
    Lib.AlignedRead -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLS),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.AlignedRead) ->
                 case x of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 case ds36 of wild1 {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False } }) -}
aa985be0bf9734ac948617b598be1c3c
  rightOrDefaultPaird ::
    Data.Either.Either
      Data.Conduit.Attoparsec.ParseError
      (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln])
    -> [Lib.PairedAln]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (e :: Data.Either.Either
                           Data.Conduit.Attoparsec.ParseError
                           (Data.Conduit.Attoparsec.PositionRange, [Lib.PairedAln])) ->
                 case e of wild {
                   Data.Either.Left ds6 -> GHC.Types.[] @ Lib.PairedAln
                   Data.Either.Right a
                   -> Data.Tuple.snd
                        @ Data.Conduit.Attoparsec.PositionRange
                        @ [Lib.PairedAln]
                        a }) -}
26b9e050d7f87294b634a952a68fa7ec
  rightOrDefaultSingle ::
    Data.Either.Either
      Data.Conduit.Attoparsec.ParseError
      (Data.Conduit.Attoparsec.PositionRange, [Lib.AlignedRead])
    -> [Lib.AlignedRead]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (e :: Data.Either.Either
                           Data.Conduit.Attoparsec.ParseError
                           (Data.Conduit.Attoparsec.PositionRange, [Lib.AlignedRead])) ->
                 case e of wild {
                   Data.Either.Left ds6 -> GHC.Types.[] @ Lib.AlignedRead
                   Data.Either.Right a
                   -> Data.Tuple.snd
                        @ Data.Conduit.Attoparsec.PositionRange
                        @ [Lib.AlignedRead]
                        a }) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  rint :: Lib.AlignedRead -> [Lib.BedRecord]
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLSLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds27 }) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  rname :: Lib.AlignedRead -> Lib.UChr
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds9 }) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  rnext :: Lib.AlignedRead -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLSLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds17 }) -}
8913bc40b46b4dbe26bdc115a332de66
  safegetheader :: [[Lib.AlignedRead]] -> Lib.AlignedRead
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: [[Lib.AlignedRead]]) ->
                 letrec {
                   go16 :: [[Lib.AlignedRead]] -> [Lib.AlignedRead]
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (ds6 :: [[Lib.AlignedRead]]) ->
                     case ds6 of wild {
                       [] -> GHC.Types.[] @ Lib.AlignedRead
                       : y ys -> GHC.Base.++ @ Lib.AlignedRead y (go16 ys) }
                 } in
                 case go16 w of wild {
                   [] -> Lib.safegetheader2
                   : ds6 ds7
                   -> case w of wild1 {
                        [] -> case GHC.List.badHead ret_ty Lib.AlignedRead of {}
                        : x ds8
                        -> case x of wild2 {
                             [] -> case GHC.List.badHead ret_ty Lib.AlignedRead of {}
                             : x1 ds9
                             -> case x1 of wild3 { Lib.AlignedRead ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ->
                                case ds36 of wild4 {
                                  GHC.Types.False -> Lib.safegetheader1
                                  GHC.Types.True
                                  -> Lib.AlignedRead
                                       ds10
                                       ds11
                                       ds12
                                       ds13
                                       ds14
                                       ds15
                                       ds16
                                       ds17
                                       ds18
                                       ds19
                                       ds20
                                       ds21
                                       ds22
                                       ds23
                                       ds24
                                       ds25
                                       ds26
                                       ds27
                                       ds28
                                       ds29
                                       ds30
                                       ds31
                                       ds32
                                       ds33
                                       ds34
                                       ds35
                                       GHC.Types.True
                                       ds37
                                       ds38
                                       ds39
                                       ds40 } } } } }) -}
0bf71e3a4b9a1882142995669a1b39fe
  safegetheader1 :: Lib.AlignedRead
  {- Strictness: x -}
ec41240fac36b78cd136afde83e1cc72
  safegetheader2 :: Lib.AlignedRead
  {- Strictness: x -}
137bde9735a7605448de666937591a04
  safemapcig ::
    Data.ByteString.Internal.ByteString -> GHC.Base.Maybe Lib.CigarMap
  {- Arity: 1, Strictness: <S(SLSS),1*U(U,U,U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.ByteString.Internal.ByteString) ->
                 case w of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wsafemapcig ww1 ww2 ww3 ww4 }) -}
21c0906c9bb4c32c73903742d8e0ab90
  samhdrparser ::
    Data.Attoparsec.ByteString.Internal.Parser
      Data.ByteString.Internal.ByteString
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.samhdrparser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)) -}
debe8809255f9dc6e956c95e26773f54
  samhdrparser1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wsamhdrparser @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
f6b567afdf6c107abb3b8228cc25759d
  samhdrparserEOL ::
    Data.Attoparsec.ByteString.Internal.Parser
      Data.ByteString.Internal.ByteString
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.samhdrparserEOL1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)) -}
f5ffbf48608a73888bbf04468173c73f
  samhdrparserEOL1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wsamhdrparserEOL
                   @ r
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww8
                   w2
                   w3
                   w4 } }) -}
605efd69aa56ec06ccd29df88681ce06
  secalnp ::
    Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.ByteString.Internal.Parser Lib.AlignedRead
  {- Arity: 6,
     Strictness: <S(LLLS),1*U(U,U,U,U)><S(LLLSLL),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.secalnp1
                  `cast`
                (<Data.ByteString.Internal.ByteString>_R
                 ->_R Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                               <Data.ByteString.Internal.ByteString>_N <Lib.AlignedRead>_R)) -}
c58a4d5abfdb3e12a85a17a6d472acb0
  secalnp1 ::
    Data.ByteString.Internal.ByteString
    -> forall r.
       Data.Attoparsec.Internal.Types.State
         Data.ByteString.Internal.ByteString
       -> Data.Attoparsec.Internal.Types.Pos
       -> Data.Attoparsec.Internal.Types.More
       -> Data.Attoparsec.Internal.Types.Failure
            Data.ByteString.Internal.ByteString
            (Data.Attoparsec.Internal.Types.State
               Data.ByteString.Internal.ByteString)
            r
       -> Data.Attoparsec.Internal.Types.Success
            Data.ByteString.Internal.ByteString
            (Data.Attoparsec.Internal.Types.State
               Data.ByteString.Internal.ByteString)
            Lib.AlignedRead
            r
       -> Data.Attoparsec.Internal.Types.IResult
            Data.ByteString.Internal.ByteString r
  {- Arity: 6,
     Strictness: <S(LLLS),1*U(U,U,U,U)><S(LLLSLL),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))> -}
bbdb2987a8f1ce59f6c1c1c1fca342ef
  seqp ::
    Data.Attoparsec.ByteString.Internal.Parser
      Data.ByteString.Internal.ByteString
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.seqp1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)) -}
401af704994a607d1b6905b7c6092559
  seqp1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Data.ByteString.Internal.ByteString
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Data.ByteString.Internal.ByteString
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wseqp @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w4 } }) -}
b7813065088fe72f59ac572dab35a85d
  setMapdProperPairBit :: Lib.PairedAln -> Lib.PairedAln
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S,1*U(1*U(U,1*U(U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),1*U(U,1*U(U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.PairedAln) ->
                 case w of ww { Lib.PairedAln ww1 ww2 ww3 ww4 ->
                 Lib.PairedAln
                   (case ww1 of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                    Lib.AlignedRead
                      ds6
                      (case ds7 of wild1 { GHC.Types.I# x# ->
                       GHC.Types.I# (GHC.Prim.orI# x# 2#) })
                      ds8
                      ds9
                      ds10
                      ds11
                      ds12
                      ds13
                      ds14
                      ds15
                      ds16
                      ds17
                      ds18
                      ds19
                      ds20
                      ds21
                      ds22
                      ds23
                      ds24
                      ds25
                      ds26
                      ds27
                      ds28
                      ds29
                      ds30
                      ds31
                      ds32
                      ds33
                      ds34
                      ds35
                      ds36 })
                   (case ww2 of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                    Lib.AlignedRead
                      ds6
                      (case ds7 of wild1 { GHC.Types.I# x# ->
                       GHC.Types.I# (GHC.Prim.orI# x# 2#) })
                      ds8
                      ds9
                      ds10
                      ds11
                      ds12
                      ds13
                      ds14
                      ds15
                      ds16
                      ds17
                      ds18
                      ds19
                      ds20
                      ds21
                      ds22
                      ds23
                      ds24
                      ds25
                      ds26
                      ds27
                      ds28
                      ds29
                      ds30
                      ds31
                      ds32
                      ds33
                      ds34
                      ds35
                      ds36 })
                   ww3
                   ww4 }) -}
aaf9fcffeedf68408548d74c34f816ce
  setMateRname :: Lib.PairedAln -> Lib.PairedAln
  {- Arity: 1,
     Strictness: <S(S(LS(S)LLLLLLLLLLLLLLLLLLLLLLLLLLLLL)S(LS(S)LLLLLLLLLLLLLLLLLLLLLLLLLLLLL)LL),1*U(U(U,U(U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U(U,U(U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)>m,
     Unfolding: (\ (p :: Lib.PairedAln) ->
                 case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                 case ds7 of ww { Lib.AlignedRead ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ->
                 case ww2 of ww32 { GHC.Types.I# ww33 ->
                 let {
                   newr2secs :: [Lib.AlignedRead]
                   = let {
                       lvl1013 :: Data.ByteString.Internal.ByteString
                       = case ds6 of wild1 { Lib.AlignedRead ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ->
                         let {
                           cs :: [GHC.Types.Char] = Lib.$fShowUChr_$cshow ds12
                         } in
                         case GHC.List.$wlenAcc @ GHC.Types.Char cs 0# of ww34 { DEFAULT ->
                         Data.ByteString.Internal.$wunsafePackLenChars ww34 cs } }
                     } in
                     GHC.Base.map
                       @ Lib.AlignedRead
                       @ Lib.AlignedRead
                       (\ (y :: Lib.AlignedRead) ->
                        case y of wild1 { Lib.AlignedRead ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ->
                        Lib.AlignedRead
                          ds10
                          ds11
                          ds12
                          ds13
                          ds14
                          ds15
                          ds16
                          ds17
                          ds18
                          ds19
                          lvl1013
                          ds21
                          ds22
                          ds23
                          ds24
                          ds25
                          ds26
                          ds27
                          ds28
                          ds29
                          ds30
                          ds31
                          ds32
                          ds33
                          ds34
                          ds35
                          ds36
                          ds37
                          ds38
                          ds39
                          ds40 })
                       ds9
                 } in
                 let {
                   newr2p :: Data.ByteString.Internal.ByteString
                   = case ds6 of wild1 { Lib.AlignedRead ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ->
                     let {
                       cs :: [GHC.Types.Char] = Lib.$fShowUChr_$cshow ds12
                     } in
                     case GHC.List.$wlenAcc @ GHC.Types.Char cs 0# of ww34 { DEFAULT ->
                     Data.ByteString.Internal.$wunsafePackLenChars ww34 cs } }
                 } in
                 case GHC.Prim.andI# ww33 4# of wild1 {
                   DEFAULT
                   -> case ds6 of wild2 { Lib.AlignedRead ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ->
                      case ds11 of wild3 { GHC.Types.I# x# ->
                      case GHC.Prim.andI# x# 4# of wild4 {
                        DEFAULT -> wild
                        0#
                        -> Lib.PairedAln
                             wild2
                             (Lib.AlignedRead
                                ww1
                                ww32
                                ww3
                                ww4
                                ww5
                                ww6
                                ww7
                                ww8
                                ww9
                                ww10
                                newr2p
                                ww12
                                ww13
                                ww14
                                ww15
                                ww16
                                ww17
                                ww18
                                ww19
                                ww20
                                ww21
                                ww22
                                ww23
                                ww24
                                ww25
                                ww26
                                ww27
                                ww28
                                ww29
                                ww30
                                ww31)
                             ds8
                             newr2secs } } }
                   0#
                   -> case ds6 of wild2 { Lib.AlignedRead ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ->
                      case ds11 of wild3 { GHC.Types.I# x# ->
                      let {
                        newr1secs :: [Lib.AlignedRead]
                        = let {
                            lvl1013 :: Data.ByteString.Internal.ByteString
                            = let {
                                cs :: [GHC.Types.Char] = Lib.$fShowUChr_$cshow ww3
                              } in
                              case GHC.List.$wlenAcc @ GHC.Types.Char cs 0# of ww34 { DEFAULT ->
                              Data.ByteString.Internal.$wunsafePackLenChars ww34 cs }
                          } in
                          GHC.Base.map
                            @ Lib.AlignedRead
                            @ Lib.AlignedRead
                            (\ (y :: Lib.AlignedRead) ->
                             case y of wild4 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                             Lib.AlignedRead
                               ds41
                               ds42
                               ds43
                               ds44
                               ds45
                               ds46
                               ds47
                               ds48
                               ds49
                               ds50
                               lvl1013
                               ds52
                               ds53
                               ds54
                               ds55
                               ds56
                               ds57
                               ds58
                               ds59
                               ds60
                               ds61
                               ds62
                               ds63
                               ds64
                               ds65
                               ds66
                               ds67
                               ds68
                               ds69
                               ds70
                               ds71 })
                            ds8
                      } in
                      let {
                        newr1p :: Data.ByteString.Internal.ByteString
                        = let {
                            cs :: [GHC.Types.Char] = Lib.$fShowUChr_$cshow ww3
                          } in
                          case GHC.List.$wlenAcc @ GHC.Types.Char cs 0# of ww34 { DEFAULT ->
                          Data.ByteString.Internal.$wunsafePackLenChars ww34 cs }
                      } in
                      case GHC.Prim.andI# x# 4# of wild4 {
                        DEFAULT
                        -> Lib.PairedAln
                             (Lib.AlignedRead
                                ds10
                                wild3
                                ds12
                                ds13
                                ds14
                                ds15
                                ds16
                                ds17
                                ds18
                                ds19
                                newr1p
                                ds21
                                ds22
                                ds23
                                ds24
                                ds25
                                ds26
                                ds27
                                ds28
                                ds29
                                ds30
                                ds31
                                ds32
                                ds33
                                ds34
                                ds35
                                ds36
                                ds37
                                ds38
                                ds39
                                ds40)
                             ww
                             newr1secs
                             ds9
                        0#
                        -> Lib.PairedAln
                             (Lib.AlignedRead
                                ds10
                                wild3
                                ds12
                                ds13
                                ds14
                                ds15
                                ds16
                                ds17
                                ds18
                                ds19
                                newr1p
                                ds21
                                ds22
                                ds23
                                ds24
                                ds25
                                ds26
                                ds27
                                ds28
                                ds29
                                ds30
                                ds31
                                ds32
                                ds33
                                ds34
                                ds35
                                ds36
                                ds37
                                ds38
                                ds39
                                ds40)
                             (Lib.AlignedRead
                                ww1
                                ww32
                                ww3
                                ww4
                                ww5
                                ww6
                                ww7
                                ww8
                                ww9
                                ww10
                                newr2p
                                ww12
                                ww13
                                ww14
                                ww15
                                ww16
                                ww17
                                ww18
                                ww19
                                ww20
                                ww21
                                ww22
                                ww23
                                ww24
                                ww25
                                ww26
                                ww27
                                ww28
                                ww29
                                ww30
                                ww31)
                             newr1secs
                             newr2secs } } } } } } }) -}
aa6be7c9e3b964e76eaf74f66854cf01
  setProperInsertSizeRange ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer -> Lib.PairedAln -> Lib.PairedAln
  {- Arity: 3,
     Strictness: <S,U><L,U><S,1*U(U(U,U(U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U(U,U(U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)>m,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Integer.Type.Integer)
                   (w1 :: GHC.Integer.Type.Integer)
                   (w2 :: Lib.PairedAln) ->
                 case w2 of ww { Lib.PairedAln ww1 ww2 ww3 ww4 ->
                 case Lib.checkInsertSize
                        w
                        w1
                        (Lib.PairedAln ww1 ww2 ww3 ww4) of wild {
                   GHC.Types.False -> Lib.PairedAln ww1 ww2 ww3 ww4
                   GHC.Types.True
                   -> case ww1 of wild1 { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                      case ds24 of wild2 {
                        GHC.Types.False -> Lib.PairedAln wild1 ww2 ww3 ww4
                        GHC.Types.True
                        -> case ww2 of wild3 { Lib.AlignedRead ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ->
                           case ds55 of wild4 {
                             GHC.Types.False -> Lib.PairedAln wild1 wild3 ww3 ww4
                             GHC.Types.True
                             -> Lib.PairedAln
                                  (Lib.AlignedRead
                                     ds6
                                     (case ds7 of wild5 { GHC.Types.I# x# ->
                                      GHC.Types.I# (GHC.Prim.orI# x# 2#) })
                                     ds8
                                     ds9
                                     ds10
                                     ds11
                                     ds12
                                     ds13
                                     ds14
                                     ds15
                                     ds16
                                     ds17
                                     ds18
                                     ds19
                                     ds20
                                     ds21
                                     ds22
                                     ds23
                                     GHC.Types.True
                                     ds25
                                     ds26
                                     ds27
                                     ds28
                                     ds29
                                     ds30
                                     ds31
                                     ds32
                                     ds33
                                     ds34
                                     ds35
                                     ds36)
                                  (Lib.AlignedRead
                                     ds37
                                     (case ds38 of wild5 { GHC.Types.I# x# ->
                                      GHC.Types.I# (GHC.Prim.orI# x# 2#) })
                                     ds39
                                     ds40
                                     ds41
                                     ds42
                                     ds43
                                     ds44
                                     ds45
                                     ds46
                                     ds47
                                     ds48
                                     ds49
                                     ds50
                                     ds51
                                     ds52
                                     ds53
                                     ds54
                                     GHC.Types.True
                                     ds56
                                     ds57
                                     ds58
                                     ds59
                                     ds60
                                     ds61
                                     ds62
                                     ds63
                                     ds64
                                     ds65
                                     ds66
                                     ds67)
                                  ww3
                                  ww4 } } } } } }) -}
dc420efb41df8f6124ff4f0ffa639b0b
  setProperPairMapFlagBit :: GHC.Types.Int -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (flg :: GHC.Types.Int) ->
                 case flg of wild { GHC.Types.I# x# ->
                 GHC.Types.I# (GHC.Prim.orI# x# 2#) }) -}
2b2c8c417a914e78290ddb05810230a4
  setZeroLengthAlnFlag :: GHC.Types.Int -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (flg :: GHC.Types.Int) ->
                 case flg of wild { GHC.Types.I# x# ->
                 GHC.Types.I#
                   (GHC.Prim.andI#
                      (GHC.Prim.andI# (GHC.Prim.orI# (GHC.Prim.andI# x# -3#) 4#) -257#)
                      -2049#) }) -}
6ea64fa39ac5a75a976961309e6f3a9f
  setZeroLengthPairFlag :: GHC.Types.Int -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (flg :: GHC.Types.Int) ->
                 case flg of wild { GHC.Types.I# x# ->
                 GHC.Types.I# (GHC.Prim.orI# (GHC.Prim.andI# x# -3#) 8#) }) -}
848c491260dc3ad4fe1bcf5441e42aeb
  setpintflag :: Data.Foldable.Foldable t => t a -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLC(S(S))LLLLL),1*U(A,A,A,A,A,A,A,A,A,A,1*C1(U(U)),A,A,A,A,A)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ t :: * -> *
                   @ a
                   ($dFoldable :: Data.Foldable.Foldable t)
                   (hits :: t a) ->
                 case Data.Foldable.length
                        @ t
                        $dFoldable
                        @ a
                        hits of wild { GHC.Types.I# x ->
                 GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.># x 0#) }) -}
319eba823d04c4f3d35b2f86d937ae89
  shiftcrds ::
    (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
    -> (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
    -> (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
  {- Arity: 2,
     Strictness: <S,1*U(U,A)><S(LS(SLSS)),1*U(A,1*U(U,U,U,U))>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: (GHC.Integer.Type.Integer,
                          Data.ByteString.Internal.ByteString))
                   (w1 :: (GHC.Integer.Type.Integer,
                           Data.ByteString.Internal.ByteString)) ->
                 case w of ww { (,) ww1 ww2 ->
                 case w1 of ww3 { (,) ww4 ww5 ->
                 case ww5 of ww6 { Data.ByteString.Internal.PS ww7 ww8 ww9 ww10 ->
                 case Lib.$wshiftcrds
                        ww1
                        ww7
                        ww8
                        ww9
                        ww10 of ww11 { (#,#) ww12 ww13 ->
                 (ww12, ww13) } } } }) -}
fb2fa170059b730bdba544e7489ddad0
  shiftcrds1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (2) -}
a1f3efe44d28a7b79fe842b022e73cc1
  shiftcrds2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
f06732dbb2626d388b6744094a3cc2e4
  shiftcrds3 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.shiftcrds_addr#
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.shiftcrds_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
96949943c132b80f16366e2b367de5af
  shiftcrds4 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds6 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Lib.shiftcrds_addr#1
                        ipv of wild { (#,#) ds7 ds8 ->
                 Data.ByteString.Internal.PS
                   Lib.shiftcrds_addr#1
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds8) } }) -}
76ebe685e8ca631dda15b4b91d56d9fc
  shiftcrds_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("D"#) -}
2005b0d079ce3f0ec0fdc047eee19f5d
  shiftcrds_addr#1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("I"#) -}
9c1a441c534c2799dc542fccdad3bacc
  showChrom :: Lib.ChromNameFormat -> Lib.UChr -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (fmt :: Lib.ChromNameFormat) (chr :: Lib.UChr) ->
                 case fmt of wild {
                   Lib.GRC
                   -> case chr of wild1 {
                        DEFAULT -> Lib.showChrom51
                        Lib.Chr1 -> Lib.showChrom50
                        Lib.Chr2 -> Lib.showChrom49
                        Lib.Chr3 -> Lib.showChrom48
                        Lib.Chr4 -> Lib.showChrom47
                        Lib.Chr5 -> Lib.showChrom46
                        Lib.Chr6 -> Lib.showChrom45
                        Lib.Chr7 -> Lib.showChrom44
                        Lib.Chr8 -> Lib.showChrom43
                        Lib.Chr9 -> Lib.showChrom42
                        Lib.Chr10 -> Lib.showChrom41
                        Lib.Chr11 -> Lib.showChrom40
                        Lib.Chr12 -> Lib.showChrom39
                        Lib.Chr13 -> Lib.showChrom38
                        Lib.Chr14 -> Lib.showChrom37
                        Lib.Chr15 -> Lib.showChrom36
                        Lib.Chr16 -> Lib.showChrom35
                        Lib.Chr17 -> Lib.showChrom34
                        Lib.Chr18 -> Lib.showChrom33
                        Lib.Chr19 -> Lib.showChrom32
                        Lib.Chr20 -> Lib.showChrom31
                        Lib.Chr21 -> Lib.showChrom30
                        Lib.Chr22 -> Lib.showChrom29
                        Lib.ChrX -> Lib.showChrom28
                        Lib.ChrY -> Lib.showChrom27
                        Lib.ChrM -> Lib.showChrom26 }
                   Lib.UCSC
                   -> case chr of wild1 {
                        DEFAULT -> Lib.showChrom51
                        Lib.Chr1 -> Lib.showChrom25
                        Lib.Chr2 -> Lib.showChrom24
                        Lib.Chr3 -> Lib.showChrom23
                        Lib.Chr4 -> Lib.showChrom22
                        Lib.Chr5 -> Lib.showChrom21
                        Lib.Chr6 -> Lib.showChrom20
                        Lib.Chr7 -> Lib.showChrom19
                        Lib.Chr8 -> Lib.showChrom18
                        Lib.Chr9 -> Lib.showChrom17
                        Lib.Chr10 -> Lib.showChrom16
                        Lib.Chr11 -> Lib.showChrom15
                        Lib.Chr12 -> Lib.showChrom14
                        Lib.Chr13 -> Lib.showChrom13
                        Lib.Chr14 -> Lib.showChrom12
                        Lib.Chr15 -> Lib.showChrom11
                        Lib.Chr16 -> Lib.showChrom10
                        Lib.Chr17 -> Lib.showChrom9
                        Lib.Chr18 -> Lib.showChrom8
                        Lib.Chr19 -> Lib.showChrom7
                        Lib.Chr20 -> Lib.showChrom6
                        Lib.Chr21 -> Lib.showChrom5
                        Lib.Chr22 -> Lib.showChrom4
                        Lib.ChrX -> Lib.showChrom3
                        Lib.ChrY -> Lib.showChrom2
                        Lib.ChrM -> Lib.showChrom1 } }) -}
b8da106779501928f522258ea0b84025
  showChrom1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#) -}
d79c545bc0fa6951728a32fdf2bf0ff0
  showChrom10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#9) -}
2986eba920cb5d4dab821cc9ae6411b7
  showChrom11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#10) -}
d601e49608560f60e82eca972b8a67d3
  showChrom12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#11) -}
b88febc421a23544517ae4d2239dd729
  showChrom13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#12) -}
c9e67a043136c38e1181850469042ae9
  showChrom14 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#13) -}
a9697007151b8106a24ea2704f3c01aa
  showChrom15 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#14) -}
425cd16c2fbacf676e2ff5f5a32cc1ae
  showChrom16 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#15) -}
eb7d602a5be650533191137e26dad64f
  showChrom17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#16) -}
62d2e09f1959cc4c3f2dd84a453a97e3
  showChrom18 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#17) -}
a3260364cbfd800553f501e107eacdec
  showChrom19 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#18) -}
5b54134c2b75a10f6ea7f2f9cbfb07d4
  showChrom2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#1) -}
2467df3cb6b9a2b3c2ed57f941733d6a
  showChrom20 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#19) -}
4c6e3d9004d44f593f02dcea4006e6e5
  showChrom21 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#20) -}
82c717a25b451d19fcd495c4675c143e
  showChrom22 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#21) -}
75a5f7e896ee463951e45fcd73dd1cdb
  showChrom23 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#22) -}
01bca3ec16a39b34a629d5919549c62b
  showChrom24 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#23) -}
6c64022301c899ab9acc771ff18d03cd
  showChrom25 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#24) -}
e94c9683db777191c1688f91f60142fb
  showChrom26 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#25) -}
b18659bb2c96c9ee93058e8c405fe2c5
  showChrom27 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#26) -}
07827a355cfa46db9c68b86ea194f4a4
  showChrom28 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#27) -}
0ad595abe4bce2ce320138c8e8a7fef8
  showChrom29 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#28) -}
2c2c1e7f4a81cef450feddcac37115e2
  showChrom3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#2) -}
37331e38021952d6e5043a8199af2570
  showChrom30 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#29) -}
f53686f8c70d3cfb6f8fbd4e6926d2fe
  showChrom31 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#30) -}
bd8892bfa46aee95b080d284a48b8132
  showChrom32 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#31) -}
e98a4a6bc95ce45cb0639179e40857fc
  showChrom33 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#32) -}
6abeb9ab4a2aac538c12c202f5efb110
  showChrom34 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#33) -}
84588113d1270f9968731d06f1a86b5c
  showChrom35 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#34) -}
5c1e163edb14b6d9a2d388e0ab809a2f
  showChrom36 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#35) -}
ff5c389b8d2bd6749597585020fbaf69
  showChrom37 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#36) -}
80591b27471ecf853a333e164883e363
  showChrom38 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#37) -}
145cfd27e7349f14d22e059d6ca0c541
  showChrom39 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#38) -}
dbf82edc3bdf165f1e8b0c3407c996cc
  showChrom4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#3) -}
10dfaddb4d32ef0ee995791e3620249d
  showChrom40 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#39) -}
4215bd722ff9f3adb2325fd1d7fbf04c
  showChrom41 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#40) -}
f33ca87ae6da2ab9e73680e0884af0b4
  showChrom42 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#41) -}
79caccf54878e96942c3d494f219ac1d
  showChrom43 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#42) -}
4f0bc06185847f85758ddf3db88f2b5f
  showChrom44 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#43) -}
d95604716789dce2eca6068accd755a1
  showChrom45 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#44) -}
893b8923bd236ec0161844d6a5160d19
  showChrom46 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#45) -}
ecf07794359e803e34b11ce1fa9a17bb
  showChrom47 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#46) -}
93e8c6a5f4ed71a12768b7aa0cc369bc
  showChrom48 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#47) -}
9fea6ad6ce28b20cf46e034610dd81ec
  showChrom49 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#48) -}
af41527dbd531a9b0b9e48fa5725fad1
  showChrom5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#4) -}
13e8364f08e49a6be35cb0cb88cdbd3e
  showChrom50 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#49) -}
2cdbb6e63096e523d7133ece8f64ca66
  showChrom51 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.addtrimtag_addr#2) -}
aa3142b51f8f61e78d039fd4579ff145
  showChrom6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#5) -}
d3384a0cab07bdfc20813ff58b72dc47
  showChrom7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#6) -}
0ca01739c18abfdfed8345dc795b1ad4
  showChrom8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#7) -}
b25b1f84633fa6c77060fef665fbaae3
  showChrom9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.showChrom_addr#8) -}
5caff50ef47e79d07e78b5a9a09ae1a5
  showChrom_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chrM"#) -}
082a4cf0e458aef8053fafdffdee9860
  showChrom_addr#1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chrY"#) -}
0daf7e9298eb61c35ffe76c26fc2d20c
  showChrom_addr#10 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr15"#) -}
8a9d914fdc7e19c16078e31b6704a4ab
  showChrom_addr#11 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr14"#) -}
40726675dfff3493183d16360132665f
  showChrom_addr#12 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr13"#) -}
4946a94382af270649860314c3d6b1cb
  showChrom_addr#13 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr12"#) -}
b1f6abecfa81a1be064192d309f09cd5
  showChrom_addr#14 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr11"#) -}
e2d6d94e70f295b2e1d578159df07991
  showChrom_addr#15 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr10"#) -}
588e9a9bf17c1871dd089d8c03a89397
  showChrom_addr#16 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr9"#) -}
98c7de56ace4e4485f427436e92fa7b7
  showChrom_addr#17 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr8"#) -}
37ba5f4388739ec3edcef08de02bab0c
  showChrom_addr#18 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr7"#) -}
a75453311236e461b159dab4af800b97
  showChrom_addr#19 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr6"#) -}
ef0c598ae2ed0836a8947745deaf693c
  showChrom_addr#2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chrX"#) -}
cf9cffe563d0770caa53df52e3f97748
  showChrom_addr#20 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr5"#) -}
a4bf270a2cb009d98373973291485f7f
  showChrom_addr#21 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr4"#) -}
86f6f3d68a281b61b1d1e73816bf01fd
  showChrom_addr#22 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr3"#) -}
b6102a288695d6810256f01676951aa9
  showChrom_addr#23 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr2"#) -}
e83b3d1d8ca2c97176202c9352d5c53a
  showChrom_addr#24 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr1"#) -}
2fa51dc7be19c509e6574de8abf34d52
  showChrom_addr#25 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("MT"#) -}
30a83f6259aadcf81dbbc75a75df02fc
  showChrom_addr#26 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Y"#) -}
e9e1d7dd574657cc3b93628548fceeab
  showChrom_addr#27 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("X"#) -}
a62a146548836d94f4f3a51861edd7b3
  showChrom_addr#28 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("22"#) -}
a84bb999c9d61f36b19a2626b8299be5
  showChrom_addr#29 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("21"#) -}
c6639ce530374a7c98f59a73e4050cfa
  showChrom_addr#3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr22"#) -}
2675d3f8ab23043bdc8be8d69b6b3d61
  showChrom_addr#30 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("20"#) -}
813b8af252b6d785f1e5e41f6769e106
  showChrom_addr#31 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("19"#) -}
e56c6bc245a4c5e97e0d64c145ed6a3f
  showChrom_addr#32 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("18"#) -}
fe44357627f0883fd3f1e60194999967
  showChrom_addr#33 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("17"#) -}
e42522f924efd30cd3cd8310cef91147
  showChrom_addr#34 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("16"#) -}
251870fe39475c6f0afca31d67e13d11
  showChrom_addr#35 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("15"#) -}
afcd11197fcd459ea2705085a0efb4e1
  showChrom_addr#36 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("14"#) -}
4831b078d05140f0570057ff3d09951c
  showChrom_addr#37 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("13"#) -}
a5c167342d66b256ec335457a2dc2b0c
  showChrom_addr#38 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("12"#) -}
bc08049e59283a16ccdcf768e8fd2ca5
  showChrom_addr#39 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("11"#) -}
1b19a7dc455a54cedead07087c5f1d2f
  showChrom_addr#4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr21"#) -}
df998ee1acc257a111af8671b1ea97f7
  showChrom_addr#40 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("10"#) -}
67ccf37dc8f032508095fd5ddced5d5b
  showChrom_addr#41 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("9"#) -}
66e006b18f578611da7c26cce4839aca
  showChrom_addr#42 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("8"#) -}
e68670d9c559eff6bcdf157580221c6a
  showChrom_addr#43 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("7"#) -}
39141921e4418ac1b4f046bb3e32d316
  showChrom_addr#44 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("6"#) -}
d22b9fe2305dc065a767a3c42fd68f08
  showChrom_addr#45 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("5"#) -}
741576f2fb2ae42640c132bcc4149b67
  showChrom_addr#46 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("4"#) -}
f8dea55090ae13dc20ac8d608e52f72d
  showChrom_addr#47 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("3"#) -}
c1fd4b50dbe9bb58abe75959f4b3f919
  showChrom_addr#48 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("2"#) -}
eed8bd8d9d4bdeb388b8df2e65081dc8
  showChrom_addr#49 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("1"#) -}
b39f35de3e3125b5ae2e5f860eaf123f
  showChrom_addr#5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr20"#) -}
9f9d058f095bbb9439038347594e3ffb
  showChrom_addr#6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr19"#) -}
499297e69215ae86b691461090a1adaa
  showChrom_addr#7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr18"#) -}
1ded428beb0492fbc1c21d164314e7a7
  showChrom_addr#8 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr17"#) -}
720cd733b0de52b85a8f84bd757d0974
  showChrom_addr#9 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("chr16"#) -}
9e1f488231431ac5f4b4f3f13e8c0f11
  showcigar ::
    (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
    -> Data.ByteString.Internal.ByteString
  {- Arity: 1, Strictness: <L,U(U,1*U)>,
     Unfolding: (\ (cm :: (GHC.Integer.Type.Integer,
                           Data.ByteString.Internal.ByteString)) ->
                 GHC.Base.mappend
                   @ Data.ByteString.Internal.ByteString
                   Data.ByteString.Internal.$fMonoidByteString
                   (case cm of wild { (,) x ds6 ->
                    case GHC.Show.$w$cshowsPrec4
                           0#
                           x
                           (GHC.Types.[] @ GHC.Types.Char) of ww2 { (#,#) ww3 ww4 ->
                    let {
                      cs :: [GHC.Types.Char] = GHC.Types.: @ GHC.Types.Char ww3 ww4
                    } in
                    case GHC.List.$wlenAcc @ GHC.Types.Char cs 0# of ww { DEFAULT ->
                    Data.ByteString.Internal.$wunsafePackLenChars ww cs } } })
                   (case cm of wild { (,) ds6 y -> y })) -}
d72fd8689ab7a9e8de9400689309b533
  skipcolon :: Data.Attoparsec.ByteString.Internal.Parser ()
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.skipcolon_go1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <()>_R)) -}
eae70025e6fe6750c6b9264a97917d19
  skipcolon_go1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         ()
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            ()
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wgo7 @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w4 } }) -}
e2c0c85c514784c2ed19970c7fc99cc7
  sndInPair :: Lib.SAMFlag -> GHC.Types.Bool
  RecSel Left Lib.SAMFlag
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLSLLLL),1*U(A,A,A,A,A,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.SAMFlag) ->
                 case ds6 of wild { Lib.SAMFlag ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds14 }) -}
7bbd4d124ab9a728e08072313eaaa4c5
  softclipOps :: Lib.CigarMod -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.CigarMod
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLL),1*U(A,A,1*U(U,U,U,U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.CigarMod) ->
                 case ds6 of wild { Lib.CigarMod ds7 ds8 ds9 ds10 ds11 -> ds9 }) -}
f8776d640ae6a73e083dfc9d9e3bdfb0
  softclipbase :: Lib.CigarMod -> Lib.CigarMod
  {- Arity: 1, Strictness: <S(LLLLS),1*U(U,U,U,U(U,U,U,U),1*U)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.CigarMod) ->
                 case w of ww { Lib.CigarMod ww1 ww2 ww3 ww4 ww5 ->
                 case Lib.$wsoftclipbase
                        ww1
                        ww2
                        ww3
                        ww4
                        ww5 of ww6 { (#,,,,#) ww7 ww8 ww9 ww10 ww11 ->
                 Lib.CigarMod ww7 ww8 ww9 ww10 ww11 } }) -}
b72cc4039c670ea831a356a5456ffe68
  softclipinterval ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> Lib.CigarMod
  {- Arity: 3, Strictness: <L,U><L,U><L,U(U,U,U,U)>m,
     Unfolding: InlineRule (3, True, False)
                (\ (cpos :: GHC.Integer.Type.Integer)
                   (endpos1 :: GHC.Integer.Type.Integer)
                   (cigops :: Data.ByteString.Internal.ByteString) ->
                 Lib.softclipbase
                   (Lib.CigarMod
                      cpos
                      endpos1
                      Data.ByteString.empty
                      cigops
                      GHC.Types.False)) -}
cd82ac68106e53c7cd2d55c062c2d71b
  spaces ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString [()]
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,A><L,A>,
     Unfolding: InlineRule (0, True, True)
                Lib.spaces1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <[()]>_R)) -}
ac098622ba1e8d5499cd5e0147ee7534
  spaces1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [()]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,A><L,A>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            [()]
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wspaces @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 } }) -}
485c8d2236a51245d0d362628827933e
  spaces2 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> ()
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 4,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,A> -}
0c3bda6767b6cfcedf4c73e14a3b5514
  starcigarP ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString
      [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.checkCigarSeqlen2
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <[(GHC.Integer.Type.Integer,
                             Data.ByteString.Internal.ByteString)]>_R)) -}
fdfc37bd80569587de4159264d092980
  start1 :: Lib.BEDPE -> GHC.Integer.Type.Integer
  RecSel Left Lib.BEDPE
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLL),1*U(A,1*U,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.BEDPE) ->
                 case ds6 of wild { Lib.BEDPE ds7 ds8 ds9 ds10 ds11 ds12 ds13 ->
                 ds8 }) -}
fdfc37bd80569587de4159264d092980
  start2 :: Lib.BEDPE -> GHC.Integer.Type.Integer
  RecSel Left Lib.BEDPE
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLL),1*U(A,A,A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.BEDPE) ->
                 case ds6 of wild { Lib.BEDPE ds7 ds8 ds9 ds10 ds11 ds12 ds13 ->
                 ds11 }) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  strand :: Lib.AlignedRead -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLSLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds23 }) -}
1a137ff60b018dd8e18f96548e73f494
  sumMatches ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> GHC.Integer.Type.Integer
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (cigs :: [(GHC.Integer.Type.Integer,
                              Data.ByteString.Internal.ByteString)]) ->
                 Lib.getAlignedLength_go cigs Lib.defaultBed2) -}
cfc441741e5fc4f38d6625648206fd1b
  sumRefMatches ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> GHC.Integer.Type.Integer
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (cigs :: [(GHC.Integer.Type.Integer,
                              Data.ByteString.Internal.ByteString)]) ->
                 Lib.getTrimdcigCoordDiff_go cigs Lib.defaultBed2) -}
eca57947de83b6261442da44e8efb818
  sumSeqMatches ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> GHC.Integer.Type.Integer
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (cigs :: [(GHC.Integer.Type.Integer,
                              Data.ByteString.Internal.ByteString)]) ->
                 Lib.getcigseqdiff_go cigs Lib.defaultBed2) -}
285280b23f9421ed7e0a8af25a4ef7f6
  sumSoftClipCigOps ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> GHC.Types.Int
  {- Arity: 1, Strictness: <S,1*U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: [(GHC.Integer.Type.Integer,
                           Data.ByteString.Internal.ByteString)]) ->
                 case Lib.$wgl (Lib.sumSoftClipCigOps_go w) 0# of ww { DEFAULT ->
                 GHC.Types.I# ww }) -}
74443e04cff48903b88abee3a89d6fe7
  sumSoftClipCigOpsDepr ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> GHC.Types.Int
  {- Arity: 1, Strictness: <S,1*U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: [(GHC.Integer.Type.Integer,
                           Data.ByteString.Internal.ByteString)]) ->
                 case Lib.$wgl1
                        (Lib.sumSoftClipCigOpsDepr_go w)
                        0# of ww { DEFAULT ->
                 GHC.Types.I# ww }) -}
c004174f5e11222ceb3bbf076c6f6e47
  sumSoftClipCigOpsDepr_go ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> [Data.ByteString.Internal.ByteString]
  {- Arity: 1, Strictness: <S,1*U> -}
1c685b7227c9253370dc5658a4b0c262
  sumSoftClipCigOps_go ::
    [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
    -> [Data.ByteString.Internal.ByteString]
  {- Arity: 1, Strictness: <S,1*U> -}
009b853cae5e933299d8d512a2012024
  taketrim ::
    GHC.Integer.Type.Integer
    -> [(GHC.Integer.Type.Integer,
         Data.ByteString.Internal.ByteString)]
    -> [(GHC.Integer.Type.Integer,
         Data.ByteString.Internal.ByteString)]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U>,
     Unfolding: (\ (cnt :: GHC.Integer.Type.Integer)
                   (cs :: [(GHC.Integer.Type.Integer,
                            Data.ByteString.Internal.ByteString)]) ->
                 GHC.List.takeWhile
                   @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                   (\ (x :: (GHC.Integer.Type.Integer,
                             Data.ByteString.Internal.ByteString)) ->
                    case x of wild { (,) x1 ds6 ->
                    case GHC.Integer.Type.leInteger# x1 cnt of wild1 { DEFAULT ->
                    GHC.Prim.tagToEnum# @ GHC.Types.Bool wild1 } })
                   cs) -}
6f760c933e008b36f1c2ad656d809c5f
  targetbed :: Lib.MidFamily -> Lib.BedRecord
  RecSel Left Lib.MidFamily
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLS),1*U(A,A,A,A,A,A,A,A,A,1*U(U,U,U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MidFamily) ->
                 case ds6 of wild { Lib.MidFamily ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds16 }) -}
7bbd4d124ab9a728e08072313eaaa4c5
  targetpos :: Lib.CigarMod -> GHC.Integer.Type.Integer
  RecSel Left Lib.CigarMod
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSLLL),1*U(A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.CigarMod) ->
                 case ds6 of wild { Lib.CigarMod ds7 ds8 ds9 ds10 ds11 -> ds8 }) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  tbed :: Lib.AlignedRead -> Lib.BedRecord
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLSL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U,U,U,U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds36 }) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  tlen :: Lib.AlignedRead -> GHC.Integer.Type.Integer
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLSLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds19 }) -}
7234c17fdace1df214190c2b0e9eeccc
  toBin :: GHC.Types.Int -> GHC.Base.String
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (n :: GHC.Types.Int) ->
                 case Data.Digits.mDigitsRev
                        @ GHC.Types.Int
                        GHC.Real.$fIntegralInt
                        Lib.toBin1
                        n of wild {
                   GHC.Base.Nothing
                   -> case Data.Maybe.fromJust1 ret_ty [GHC.Types.Char] of {}
                   GHC.Base.Just x1
                   -> Lib.toBin_go
                        (GHC.List.reverse1
                           @ GHC.Types.Int
                           x1
                           (GHC.Types.[] @ GHC.Types.Int)) }) -}
4219819d57b70193a4a8cb393d85c47d
  toBin1 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 2#) -}
1b46472a02c41ccd95a553a36079d910
  toBinInt :: GHC.Base.String -> GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (n :: GHC.Base.String) ->
                 case Text.Read.readEither8
                        @ GHC.Types.Int
                        (Text.ParserCombinators.ReadP.run
                           @ GHC.Types.Int
                           Lib.toBinInt3
                           n) of wild {
                   [] -> Lib.toBinInt2
                   : x ds6
                   -> case ds6 of wild1 { [] -> x : ipv ipv1 -> Lib.toBinInt1 } }) -}
b07666d0e5a0af673e93d1c9c78190d1
  toBinInt1 :: GHC.Types.Int
  {- Strictness: x -}
4bfd9137a125f954d37b0ec7f84bde36
  toBinInt2 :: GHC.Types.Int
  {- Strictness: x -}
f6d7df8cebc50dcf40dab5312f3168de
  toBinInt3 :: Text.ParserCombinators.ReadP.P GHC.Types.Int
  {- Unfolding: (GHC.Read.$fReadInt_$sreadNumber
                   GHC.Read.$fReadInt2
                   Text.ParserCombinators.ReadPrec.minPrec
                   @ GHC.Types.Int
                   (Text.Read.readEither7 @ GHC.Types.Int)) -}
6a1c12159d69a52cd81a968f27d432fb
  toBin_go :: [GHC.Types.Int] -> [GHC.Types.Char]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
ec8ac26044c11a6ca87349e1fa5cf901
  trimPairedAlns :: Lib.PairedAln -> Lib.PairedAln
  {- Arity: 1,
     Strictness: <L,U(1*U(U,U(U),U,U,U,U,U(U,U,U,U),A,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),1*U(U,U(U),U,U,U,U,U(U,U,U,U),A,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),1*U,1*U)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.PairedAln) ->
                 Lib.PairedAln
                   (case w of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                    Lib.trimalignment ds6 })
                   (case w of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                    Lib.trimalignment ds7 })
                   (case w of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                    GHC.Base.map
                      @ Lib.AlignedRead
                      @ Lib.AlignedRead
                      Lib.trimalignment
                      ds8 })
                   (case w of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                    GHC.Base.map
                      @ Lib.AlignedRead
                      @ Lib.AlignedRead
                      Lib.trimalignment
                      ds9 })) -}
d5005a2f8bf51422853071960595e262
  trimalignment :: Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 1,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLSLLLLLLLLLLL),1*U(U,U(U),U,U,U,U,U(U,U,U,U),A,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Unfolding: (\ (a :: Lib.AlignedRead) ->
                 case a of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 let {
                   mapdaln :: GHC.Types.Bool
                   = case ds7 of wild1 { GHC.Types.I# x# ->
                     case GHC.Prim.andI# x# 4# of wild2 {
                       DEFAULT -> GHC.Types.False 0# -> GHC.Types.True } }
                 } in
                 let {
                   $j :: Lib.AlignedRead <join 0>
                   = let {
                       $j1 :: Lib.AlignedRead <join 0>
                       = let {
                           $j2 :: Lib.AlignedRead <join 0>
                           = case GHC.Classes.$fEq[]_$c==
                                    @ Lib.BedRecord
                                    Lib.$fEqBedRecord
                                    ds25
                                    (GHC.Types.[] @ Lib.BedRecord) of wild1 {
                               GHC.Types.False
                               -> Lib.AlignedRead
                                    ds6
                                    ds7
                                    ds8
                                    ds9
                                    ds10
                                    ds11
                                    ds12
                                    ds12
                                    ds14
                                    ds15
                                    ds16
                                    ds17
                                    ds18
                                    ds19
                                    ds20
                                    ds21
                                    ds22
                                    ds23
                                    ds24
                                    ds25
                                    ds26
                                    ds27
                                    ds28
                                    ds29
                                    ds30
                                    ds31
                                    ds32
                                    ds33
                                    ds34
                                    ds35
                                    ds36
                               GHC.Types.True
                               -> case GHC.Classes.$fEq[]_$c==
                                         @ Lib.BedRecord
                                         Lib.$fEqBedRecord
                                         ds26
                                         (GHC.Types.[] @ Lib.BedRecord) of wild2 { DEFAULT ->
                                  Lib.AlignedRead
                                    ds6
                                    ds7
                                    ds8
                                    ds9
                                    ds10
                                    ds11
                                    ds12
                                    ds12
                                    ds14
                                    ds15
                                    ds16
                                    ds17
                                    ds18
                                    ds19
                                    ds20
                                    ds21
                                    ds22
                                    ds23
                                    ds24
                                    ds25
                                    ds26
                                    ds27
                                    ds28
                                    ds29
                                    ds30
                                    ds31
                                    ds32
                                    ds33
                                    ds34
                                    ds35
                                    ds36 } }
                         } in
                         case GHC.Classes.$fEq[]_$c==
                                @ Lib.BedRecord
                                Lib.$fEqBedRecord
                                ds25
                                (GHC.Types.[] @ Lib.BedRecord) of wild1 {
                           GHC.Types.False -> $j2
                           GHC.Types.True
                           -> case GHC.Classes.$fEq[]_$c==
                                     @ Lib.BedRecord
                                     Lib.$fEqBedRecord
                                     ds26
                                     (GHC.Types.[] @ Lib.BedRecord) of wild2 {
                                GHC.Types.False
                                -> case mapdaln of wild3 {
                                     GHC.Types.False -> $j2 GHC.Types.True -> Lib.trimrev wild }
                                GHC.Types.True -> $j2 } }
                     } in
                     case GHC.Classes.$fEq[]_$c==
                            @ Lib.BedRecord
                            Lib.$fEqBedRecord
                            ds25
                            (GHC.Types.[] @ Lib.BedRecord) of wild1 {
                       GHC.Types.False
                       -> case GHC.Classes.$fEq[]_$c==
                                 @ Lib.BedRecord
                                 Lib.$fEqBedRecord
                                 ds26
                                 (GHC.Types.[] @ Lib.BedRecord) of wild2 {
                            GHC.Types.False -> $j1
                            GHC.Types.True
                            -> case mapdaln of wild3 {
                                 GHC.Types.False -> $j1 GHC.Types.True -> Lib.trimfwd wild } }
                       GHC.Types.True -> $j1 }
                 } in
                 case GHC.Classes.$fEq[]_$c==
                        @ Lib.BedRecord
                        Lib.$fEqBedRecord
                        ds25
                        (GHC.Types.[] @ Lib.BedRecord) of wild1 {
                   GHC.Types.False
                   -> case GHC.Classes.$fEq[]_$c==
                             @ Lib.BedRecord
                             Lib.$fEqBedRecord
                             ds26
                             (GHC.Types.[] @ Lib.BedRecord) of wild2 {
                        GHC.Types.False
                        -> case mapdaln of wild3 {
                             GHC.Types.False -> $j GHC.Types.True -> Lib.trimboth wild }
                        GHC.Types.True -> $j }
                   GHC.Types.True -> $j } }) -}
7b80bb03a0cc40f683947e96dde4be0a
  trimboth :: Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 1,
     Strictness: <S,1*U(U,U,U,U,U,U,U(U,U,U,U),A,U,A,U,U,U,U,U,U,U,U,U,U,U,U,A,A,A,U,U,U,U,U,A)>,
     Unfolding: (\ (a :: Lib.AlignedRead) ->
                 case a of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 let {
                   newendpos :: GHC.Integer.Type.Integer
                   = case ds26 of wild1 {
                       [] -> case GHC.List.badHead ret_ty GHC.Integer.Type.Integer of {}
                       : x ds37
                       -> case x of wild2 { Lib.BedRecord ds38 ds39 ds40 ds41 -> ds39 } }
                 } in
                 let {
                   rdiff :: GHC.Integer.Type.Integer
                   = GHC.Integer.Type.minusInteger ds10 newendpos
                 } in
                 let {
                   tendpos :: GHC.Integer.Type.Integer
                   = case GHC.Integer.Type.ltInteger#
                            rdiff
                            Lib.defaultBed2 of wild1 { DEFAULT ->
                     case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild1 of wild2 {
                       GHC.Types.False -> newendpos GHC.Types.True -> ds10 } }
                 } in
                 let {
                   newpos :: GHC.Integer.Type.Integer
                   = case ds25 of wild1 {
                       [] -> case GHC.List.badHead ret_ty GHC.Integer.Type.Integer of {}
                       : x ds37
                       -> case x of wild2 { Lib.BedRecord ds38 ds39 ds40 ds41 -> ds40 } }
                 } in
                 let {
                   fdiff :: GHC.Integer.Type.Integer
                   = GHC.Integer.Type.minusInteger newpos ds9
                 } in
                 let {
                   newcig :: Data.ByteString.Internal.ByteString
                   = case ds12 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                     Lib.$wupdateCigB fdiff rdiff ww1 ww2 ww3 ww4 }
                 } in
                 let {
                   tpos :: GHC.Integer.Type.Integer
                   = case GHC.Integer.Type.ltInteger#
                            fdiff
                            Lib.defaultBed2 of wild1 { DEFAULT ->
                     case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild1 of wild2 {
                       GHC.Types.False -> newpos GHC.Types.True -> ds9 } }
                 } in
                 Lib.AlignedRead
                   ds6
                   ds7
                   ds8
                   ds9
                   ds10
                   ds11
                   ds12
                   newcig
                   ds14
                   (case newcig of wild1 { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                    case Lib.$wparseCigar
                           @ [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                           dt
                           dt1
                           dt2
                           dt3
                           dt3
                           0#
                           0#
                           Data.Attoparsec.Internal.Types.Complete
                           (Data.Attoparsec.ByteString.Internal.failK
                              @ [(GHC.Integer.Type.Integer,
                                  Data.ByteString.Internal.ByteString)])
                             `cast`
                           (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                            ->_R <Data.Attoparsec.Internal.Types.Pos
                                  -> Data.Attoparsec.Internal.Types.More
                                  -> [GHC.Base.String]
                                  -> GHC.Base.String
                                  -> Data.Attoparsec.Internal.Types.IResult
                                       Data.ByteString.Internal.ByteString
                                       [(GHC.Integer.Type.Integer,
                                         Data.ByteString.Internal.ByteString)]>_R)
                           (Data.Attoparsec.ByteString.Internal.successK
                              @ [(GHC.Integer.Type.Integer,
                                  Data.ByteString.Internal.ByteString)])
                             `cast`
                           (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                            ->_R <Data.Attoparsec.Internal.Types.Pos
                                  -> Data.Attoparsec.Internal.Types.More
                                  -> [(GHC.Integer.Type.Integer,
                                       Data.ByteString.Internal.ByteString)]
                                  -> Data.Attoparsec.Internal.Types.IResult
                                       Data.ByteString.Internal.ByteString
                                       [(GHC.Integer.Type.Integer,
                                         Data.ByteString.Internal.ByteString)]>_R) of wild2 {
                      Data.Attoparsec.Internal.Types.Fail ds37 ds38 err
                      -> case ds38 of wild3 { DEFAULT ->
                         GHC.List.badHead
                           @ [(GHC.Integer.Type.Integer,
                               Data.ByteString.Internal.ByteString)] }
                      Data.Attoparsec.Internal.Types.Partial ipv
                      -> case Lib.checkCigarSeqlen1 ret_ty Lib.CigarMap of {}
                      Data.Attoparsec.Internal.Types.Done ds37 a1 -> a1 } })
                   ds16
                   ds17
                   ds18
                   ds19
                   ds20
                   ds21
                   ds22
                   ds23
                   ds24
                   ds25
                   ds26
                   ds27
                   (case GHC.Integer.Type.neqInteger# ds9 tpos of wild1 { DEFAULT ->
                    case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild1 of wild2 {
                      GHC.Types.False -> GHC.Integer.Type.neqInteger ds10 tendpos
                      GHC.Types.True -> GHC.Types.True } })
                   tpos
                   tendpos
                   ds31
                   ds32
                   ds33
                   ds34
                   ds35
                   (Lib.boolZeroLengthCigar newcig) }) -}
7bbd4d124ab9a728e08072313eaaa4c5
  trimcomplete :: Lib.CigarMod -> GHC.Types.Bool
  RecSel Left Lib.CigarMod
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLLS),1*U(A,A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.CigarMod) ->
                 case ds6 of wild { Lib.CigarMod ds7 ds8 ds9 ds10 ds11 -> ds11 }) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  trimdToZeroLength :: Lib.AlignedRead -> GHC.Types.Bool
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLS),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds37 }) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  trimdcigar ::
    Lib.AlignedRead -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLSLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds14 }) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  trimdcigmap :: Lib.AlignedRead -> Lib.CigarMap
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLSLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds16 }) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  trimdendpos :: Lib.AlignedRead -> GHC.Integer.Type.Integer
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLSLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds31 }) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  trimdflag :: Lib.AlignedRead -> GHC.Types.Bool
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLSLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds29 }) -}
64e0a7b5a8db25e9b81a102c9fe8422f
  trimdpos :: Lib.AlignedRead -> GHC.Integer.Type.Integer
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLSLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds30 }) -}
cacadbb0a43fd2533467b5c6609fdb78
  trimfwd :: Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 1,
     Strictness: <S,1*U(U,U,U,U,U,U,U(U,U,U,U),A,U,A,U,U,U,U,U,U,U,U,U,U,U,U,A,A,U,U,U,U,U,U,A)>,
     Unfolding: (\ (a :: Lib.AlignedRead) ->
                 case a of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 let {
                   newpos :: GHC.Integer.Type.Integer
                   = case ds25 of wild1 {
                       [] -> case GHC.List.badHead ret_ty GHC.Integer.Type.Integer of {}
                       : x ds37
                       -> case x of wild2 { Lib.BedRecord ds38 ds39 ds40 ds41 -> ds40 } }
                 } in
                 let {
                   fdiff :: GHC.Integer.Type.Integer
                   = GHC.Integer.Type.minusInteger newpos ds9
                 } in
                 let {
                   newcig :: Data.ByteString.Internal.ByteString
                   = case ds12 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                     Lib.$wupdateCigF fdiff ww1 ww2 ww3 ww4 }
                 } in
                 let {
                   tpos :: GHC.Integer.Type.Integer
                   = case GHC.Integer.Type.ltInteger#
                            fdiff
                            Lib.defaultBed2 of wild1 { DEFAULT ->
                     case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild1 of wild2 {
                       GHC.Types.False -> newpos GHC.Types.True -> ds9 } }
                 } in
                 Lib.AlignedRead
                   ds6
                   ds7
                   ds8
                   ds9
                   ds10
                   ds11
                   ds12
                   newcig
                   ds14
                   (case newcig of wild1 { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                    case Lib.$wparseCigar
                           @ [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                           dt
                           dt1
                           dt2
                           dt3
                           dt3
                           0#
                           0#
                           Data.Attoparsec.Internal.Types.Complete
                           (Data.Attoparsec.ByteString.Internal.failK
                              @ [(GHC.Integer.Type.Integer,
                                  Data.ByteString.Internal.ByteString)])
                             `cast`
                           (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                            ->_R <Data.Attoparsec.Internal.Types.Pos
                                  -> Data.Attoparsec.Internal.Types.More
                                  -> [GHC.Base.String]
                                  -> GHC.Base.String
                                  -> Data.Attoparsec.Internal.Types.IResult
                                       Data.ByteString.Internal.ByteString
                                       [(GHC.Integer.Type.Integer,
                                         Data.ByteString.Internal.ByteString)]>_R)
                           (Data.Attoparsec.ByteString.Internal.successK
                              @ [(GHC.Integer.Type.Integer,
                                  Data.ByteString.Internal.ByteString)])
                             `cast`
                           (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                            ->_R <Data.Attoparsec.Internal.Types.Pos
                                  -> Data.Attoparsec.Internal.Types.More
                                  -> [(GHC.Integer.Type.Integer,
                                       Data.ByteString.Internal.ByteString)]
                                  -> Data.Attoparsec.Internal.Types.IResult
                                       Data.ByteString.Internal.ByteString
                                       [(GHC.Integer.Type.Integer,
                                         Data.ByteString.Internal.ByteString)]>_R) of wild2 {
                      Data.Attoparsec.Internal.Types.Fail ds37 ds38 err
                      -> case ds38 of wild3 { DEFAULT ->
                         GHC.List.badHead
                           @ [(GHC.Integer.Type.Integer,
                               Data.ByteString.Internal.ByteString)] }
                      Data.Attoparsec.Internal.Types.Partial ipv
                      -> case Lib.checkCigarSeqlen1 ret_ty Lib.CigarMap of {}
                      Data.Attoparsec.Internal.Types.Done ds37 a1 -> a1 } })
                   ds16
                   ds17
                   ds18
                   ds19
                   ds20
                   ds21
                   ds22
                   ds23
                   ds24
                   ds25
                   ds26
                   ds27
                   (case GHC.Integer.Type.neqInteger# ds9 tpos of wild1 { DEFAULT ->
                    GHC.Prim.tagToEnum# @ GHC.Types.Bool wild1 })
                   tpos
                   ds30
                   ds31
                   ds32
                   ds33
                   ds34
                   ds35
                   (Lib.boolZeroLengthCigar newcig) }) -}
2e345d36c55fb13cffd420fc95f5bf30
  trimmedPct :: Lib.RunStats -> GHC.Types.Double
  RecSel Left Lib.RunStats
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSL),1*U(A,A,A,A,1*U(U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.RunStats) ->
                 case ds6 of wild { Lib.RunStats ds7 ds8 ds9 ds10 ds11 ds12 ->
                 ds11 }) -}
287561aeb70b10a6c2e65c75d94dd021
  trimprimerPairsE ::
    Lib.CMap -> Lib.CMap -> Lib.PairedAln -> Lib.PairedAln
  {- Arity: 3,
     Strictness: <L,U><L,U><L,1*U(1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,A,A,A,U,U,U,U,U,U,U,U,U),1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,A,A,A,U,U,U,U,U,U,U,U,U),1*U,1*U)>m,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Lib.CMap) (w1 :: Lib.CMap) (w2 :: Lib.PairedAln) ->
                 case Lib.$wtrimprimerPairsE
                        w
                        w1
                        w2 of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 Lib.PairedAln ww1 ww2 ww3 ww4 }) -}
3dbb6e823779b4bafba3d5072f7dd354
  trimprimersE ::
    Lib.CMap -> Lib.CMap -> Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 3,
     Strictness: <L,1*U><L,1*U><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,A,A,A,U,U,U,U,U,U,U,U,U)>,
     Unfolding: InlineRule (3, True, False)
                (\ (fmap :: Lib.CMap) (rmap :: Lib.CMap) (a :: Lib.AlignedRead) ->
                 Lib.trimalignment (Lib.addprimerints fmap rmap a)) -}
374099ad2836cf1718ec4c4e3e79a329
  trimrem ::
    GHC.Integer.Type.Integer
    -> [(GHC.Integer.Type.Integer,
         Data.ByteString.Internal.ByteString)]
    -> [(GHC.Integer.Type.Integer,
         Data.ByteString.Internal.ByteString)]
  {- Arity: 2, Strictness: <L,U><S,1*U>,
     Unfolding: (\ (cnt :: GHC.Integer.Type.Integer)
                   (cs :: [(GHC.Integer.Type.Integer,
                            Data.ByteString.Internal.ByteString)]) ->
                 let {
                   rem :: [(GHC.Integer.Type.Integer,
                            Data.ByteString.Internal.ByteString)]
                   = GHC.List.dropWhile
                       @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                       (\ (x :: (GHC.Integer.Type.Integer,
                                 Data.ByteString.Internal.ByteString)) ->
                        case x of wild { (,) x1 ds6 ->
                        case GHC.Integer.Type.leInteger# x1 cnt of wild1 { DEFAULT ->
                        GHC.Prim.tagToEnum# @ GHC.Types.Bool wild1 } })
                       cs
                 } in
                 case GHC.List.$wlenAcc
                        @ (GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)
                        rem
                        0# of ww2 {
                   DEFAULT
                   -> case rem of wild {
                        []
                        -> case GHC.List.badHead
                           ret_ty [(GHC.Integer.Type.Integer,
                                    Data.ByteString.Internal.ByteString)]
                           of {}
                        : x ds6
                        -> case x of wild1 { (,) ds7 y ->
                           case y of wild2 { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                           case Lib.shiftcrds3 of wild3 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim./=# dt3 dt7) of wild4 {
                             GHC.Types.False
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.eqAddr# dt dt4) of wild5 {
                                  GHC.Types.False
                                  -> case Data.ByteString.Internal.$wcompareBytes
                                            dt
                                            dt1
                                            dt2
                                            dt3
                                            dt4
                                            dt5
                                            dt6
                                            dt7 of wild6 {
                                       DEFAULT -> wild GHC.Types.EQ -> ds6 }
                                  GHC.Types.True
                                  -> case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.==# dt2 dt6) of wild6 {
                                       GHC.Types.False
                                       -> case Data.ByteString.Internal.$wcompareBytes
                                                 dt
                                                 dt1
                                                 dt2
                                                 dt3
                                                 dt4
                                                 dt5
                                                 dt6
                                                 dt7 of wild7 {
                                            DEFAULT -> wild GHC.Types.EQ -> ds6 }
                                       GHC.Types.True -> ds6 } }
                             GHC.Types.True -> wild } } } } }
                   0#
                   -> GHC.Types.[]
                        @ (GHC.Integer.Type.Integer,
                           Data.ByteString.Internal.ByteString) }) -}
7df8f480ecda3959684794c1cf07ed89
  trimrev :: Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 1,
     Strictness: <S,1*U(U,U,U,U,U,U,U(U,U,U,U),A,U,A,U,U,U,U,U,U,U,U,U,U,U,U,A,U,A,U,U,U,U,U,A)>,
     Unfolding: (\ (a :: Lib.AlignedRead) ->
                 case a of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 let {
                   newendpos :: GHC.Integer.Type.Integer
                   = case ds26 of wild1 {
                       [] -> case GHC.List.badHead ret_ty GHC.Integer.Type.Integer of {}
                       : x ds37
                       -> case x of wild2 { Lib.BedRecord ds38 ds39 ds40 ds41 -> ds39 } }
                 } in
                 let {
                   rdiff :: GHC.Integer.Type.Integer
                   = GHC.Integer.Type.minusInteger ds10 newendpos
                 } in
                 let {
                   newcig :: Data.ByteString.Internal.ByteString
                   = case ds12 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                     Lib.$wupdateCigR rdiff ww1 ww2 ww3 ww4 }
                 } in
                 let {
                   tendpos :: GHC.Integer.Type.Integer
                   = case GHC.Integer.Type.ltInteger#
                            rdiff
                            Lib.defaultBed2 of wild1 { DEFAULT ->
                     case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild1 of wild2 {
                       GHC.Types.False -> newendpos GHC.Types.True -> ds10 } }
                 } in
                 Lib.AlignedRead
                   ds6
                   ds7
                   ds8
                   ds9
                   ds10
                   ds11
                   ds12
                   newcig
                   ds14
                   (case newcig of wild1 { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                    case Lib.$wparseCigar
                           @ [(GHC.Integer.Type.Integer, Data.ByteString.Internal.ByteString)]
                           dt
                           dt1
                           dt2
                           dt3
                           dt3
                           0#
                           0#
                           Data.Attoparsec.Internal.Types.Complete
                           (Data.Attoparsec.ByteString.Internal.failK
                              @ [(GHC.Integer.Type.Integer,
                                  Data.ByteString.Internal.ByteString)])
                             `cast`
                           (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                            ->_R <Data.Attoparsec.Internal.Types.Pos
                                  -> Data.Attoparsec.Internal.Types.More
                                  -> [GHC.Base.String]
                                  -> GHC.Base.String
                                  -> Data.Attoparsec.Internal.Types.IResult
                                       Data.ByteString.Internal.ByteString
                                       [(GHC.Integer.Type.Integer,
                                         Data.ByteString.Internal.ByteString)]>_R)
                           (Data.Attoparsec.ByteString.Internal.successK
                              @ [(GHC.Integer.Type.Integer,
                                  Data.ByteString.Internal.ByteString)])
                             `cast`
                           (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                            ->_R <Data.Attoparsec.Internal.Types.Pos
                                  -> Data.Attoparsec.Internal.Types.More
                                  -> [(GHC.Integer.Type.Integer,
                                       Data.ByteString.Internal.ByteString)]
                                  -> Data.Attoparsec.Internal.Types.IResult
                                       Data.ByteString.Internal.ByteString
                                       [(GHC.Integer.Type.Integer,
                                         Data.ByteString.Internal.ByteString)]>_R) of wild2 {
                      Data.Attoparsec.Internal.Types.Fail ds37 ds38 err
                      -> case ds38 of wild3 { DEFAULT ->
                         GHC.List.badHead
                           @ [(GHC.Integer.Type.Integer,
                               Data.ByteString.Internal.ByteString)] }
                      Data.Attoparsec.Internal.Types.Partial ipv
                      -> case Lib.checkCigarSeqlen1 ret_ty Lib.CigarMap of {}
                      Data.Attoparsec.Internal.Types.Done ds37 a1 -> a1 } })
                   ds16
                   ds17
                   ds18
                   ds19
                   ds20
                   ds21
                   ds22
                   ds23
                   ds24
                   ds25
                   ds26
                   ds27
                   (case GHC.Integer.Type.neqInteger#
                           ds10
                           tendpos of wild1 { DEFAULT ->
                    GHC.Prim.tagToEnum# @ GHC.Types.Bool wild1 })
                   ds29
                   tendpos
                   ds31
                   ds32
                   ds33
                   ds34
                   ds35
                   (Lib.boolZeroLengthCigar newcig) }) -}
6f760c933e008b36f1c2ad656d809c5f
  txposedcount :: Lib.MidFamily -> GHC.Integer.Type.Integer
  RecSel Left Lib.MidFamily
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLSLLL),1*U(A,A,A,A,A,A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.MidFamily) ->
                 case ds6 of wild { Lib.MidFamily ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds13 }) -}
567ed9760464d996fd0e99716307caa7
  txtfieldp ::
    Data.Attoparsec.ByteString.Internal.Parser
      Data.ByteString.Internal.ByteString
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.optfieldsp5
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <Data.ByteString.Internal.ByteString>_R)) -}
ba603f106c859d3940934d133dcea879
  uchrparser :: Data.Attoparsec.ByteString.Internal.Parser Lib.UChr
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.uchrparser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <Lib.UChr>_R)) -}
b4318b100d5e997263a5f04a2ed5ff45
  uchrparser1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         Lib.UChr
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S(SLSSSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.ByteString.Internal.ByteString
                            (Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString)
                            Lib.UChr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 Lib.$wuchrparser @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
ca6b5847695415b4aa46b3060dab63b9
  updateCigB ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
  {- Arity: 3, Strictness: <L,U><L,U><S(SLSS),1*U(U,U,U,U)>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Integer.Type.Integer)
                   (w1 :: GHC.Integer.Type.Integer)
                   (w2 :: Data.ByteString.Internal.ByteString) ->
                 case w2 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wupdateCigB w w1 ww1 ww2 ww3 ww4 }) -}
93b7cbacce6654769046dc3c3a77ba43
  updateCigF ::
    GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
  {- Arity: 2, Strictness: <L,U><S(SLSS),1*U(U,U,U,U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Integer.Type.Integer)
                   (w1 :: Data.ByteString.Internal.ByteString) ->
                 case w1 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wupdateCigF w ww1 ww2 ww3 ww4 }) -}
0a9d18311a6e93027230f2e1e19bd32b
  updateCigR ::
    GHC.Integer.Type.Integer
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
  {- Arity: 2, Strictness: <L,U><S(SLSS),1*U(U,U,U,U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Integer.Type.Integer)
                   (w1 :: Data.ByteString.Internal.ByteString) ->
                 case w1 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Lib.$wupdateCigR w ww1 ww2 ww3 ww4 }) -}
c123f8eba485291ed4f2280bcf528db5
  updatePairedAlnTrimdFields :: Lib.PairedAln -> Lib.PairedAln
  {- Arity: 1,
     Strictness: <L,U(1*U(U,U(U),U,U,U,U,U,U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),1*U(U,U(U),U,U,U,U,U,U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),1*U,1*U)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.PairedAln) ->
                 Lib.PairedAln
                   (case w of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                    Lib.updateTrimdAlnFields ds6 })
                   (case w of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                    Lib.updateTrimdAlnFields ds7 })
                   (case w of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                    GHC.Base.map
                      @ Lib.AlignedRead
                      @ Lib.AlignedRead
                      Lib.updateTrimdAlnFields
                      ds8 })
                   (case w of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                    GHC.Base.map
                      @ Lib.AlignedRead
                      @ Lib.AlignedRead
                      Lib.updateTrimdAlnFields
                      ds9 })) -}
a5e5eb91821dd9da169dd700f9c3043e
  updateR1nextfields :: Lib.PairedAln -> Lib.PairedAln
  {- Arity: 1,
     Strictness: <S,1*U(U,U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.PairedAln) ->
                 case w of ww { Lib.PairedAln ww1 ww2 ww3 ww4 ->
                 let {
                   ds6 :: (Lib.AlignedRead, [Lib.AlignedRead])
                   = let {
                       trimdposR2 :: GHC.Integer.Type.Integer
                       = case ww2 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                         ds30 }
                     } in
                     case GHC.Base.map
                            @ Lib.AlignedRead
                            @ Lib.AlignedRead
                            (\ (x :: Lib.AlignedRead) ->
                             case x of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                             Lib.AlignedRead
                               ds7
                               ds8
                               ds9
                               ds10
                               ds11
                               ds12
                               ds13
                               ds14
                               ds15
                               ds16
                               ds17
                               trimdposR2
                               ds19
                               ds20
                               ds21
                               ds22
                               ds23
                               ds24
                               ds25
                               ds26
                               ds27
                               ds28
                               ds29
                               ds30
                               ds31
                               ds32
                               ds33
                               ds34
                               ds35
                               ds36
                               ds37 })
                            (GHC.Types.: @ Lib.AlignedRead ww1 ww3) of wild {
                       [] -> Lib.updateTrimdPairFields2
                       : newpr1 newsecr1s -> (newpr1, newsecr1s) }
                 } in
                 Lib.PairedAln
                   (case ds6 of ds7 { (,) newpr1 newsecr1s -> newpr1 })
                   ww2
                   (case ds6 of ds7 { (,) newpr1 newsecr1s -> newsecr1s })
                   ww4 }) -}
9df1c15c008ef255bdf10ce45b306d42
  updateR2nextfields :: Lib.PairedAln -> Lib.PairedAln
  {- Arity: 1,
     Strictness: <S,1*U(U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U,U)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.PairedAln) ->
                 case w of ww { Lib.PairedAln ww1 ww2 ww3 ww4 ->
                 let {
                   ds6 :: (Lib.AlignedRead, [Lib.AlignedRead])
                   = let {
                       trimdposR1 :: GHC.Integer.Type.Integer
                       = case ww1 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                         ds30 }
                     } in
                     case GHC.Base.map
                            @ Lib.AlignedRead
                            @ Lib.AlignedRead
                            (\ (x :: Lib.AlignedRead) ->
                             case x of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                             Lib.AlignedRead
                               ds7
                               ds8
                               ds9
                               ds10
                               ds11
                               ds12
                               ds13
                               ds14
                               ds15
                               ds16
                               ds17
                               trimdposR1
                               ds19
                               ds20
                               ds21
                               ds22
                               ds23
                               ds24
                               ds25
                               ds26
                               ds27
                               ds28
                               ds29
                               ds30
                               ds31
                               ds32
                               ds33
                               ds34
                               ds35
                               ds36
                               ds37 })
                            (GHC.Types.: @ Lib.AlignedRead ww2 ww4) of wild {
                       [] -> Lib.updateTrimdPairFields1
                       : newpr2 newsecr2s -> (newpr2, newsecr2s) }
                 } in
                 Lib.PairedAln
                   ww1
                   (case ds6 of ds7 { (,) newpr2 newsecr2s -> newpr2 })
                   ww3
                   (case ds6 of ds7 { (,) newpr2 newsecr2s -> newsecr2s }) }) -}
425452d25f778fcf09938594daf8fa0e
  updateTrimdAlnFields :: Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 1,
     Strictness: <S(LLLLLLLS(SLSS)LLLLLLLLLLLLLLLLLLLLLLL),1*U(U,U(U),U,U,U,U,U,U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Unfolding: (\ (a :: Lib.AlignedRead) ->
                 case a of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 case ds13 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 let {
                   $j :: Lib.AlignedRead <join 0>
                   = Lib.AlignedRead
                       ds6
                       ds7
                       ds8
                       ds9
                       ds10
                       ds11
                       ds12
                       ww
                       ds14
                       ds15
                       ds16
                       ds17
                       ds18
                       ds19
                       ds20
                       (Data.ByteString.concat
                          (GHC.Types.:
                             @ Data.ByteString.Internal.ByteString
                             ds21
                             Lib.addtrimtag1))
                       ds22
                       ds23
                       ds24
                       ds25
                       ds26
                       ds27
                       ds28
                       ds29
                       ds30
                       ds31
                       ds32
                       ds33
                       ds34
                       ds35
                       ds36
                 } in
                 let {
                   $j1 :: Lib.AlignedRead <join 0>
                   = case ds28 of wild1 {
                       GHC.Types.False -> wild
                       GHC.Types.True
                       -> Lib.AlignedRead
                            ds6
                            (Lib.setZeroLengthAlnFlag ds7)
                            Lib.NONE
                            ds9
                            ds10
                            Lib.defaultBed2
                            ds12
                            Lib.addtrimtag5
                            ds14
                            ds15
                            ds16
                            ds17
                            ds18
                            ds19
                            ds20
                            (Data.ByteString.concat
                               (GHC.Types.:
                                  @ Data.ByteString.Internal.ByteString
                                  ds21
                                  Lib.addtrimtag6))
                            ds22
                            ds23
                            GHC.Types.False
                            ds25
                            ds26
                            ds27
                            GHC.Types.True
                            Lib.updateTrimdAlnFields1
                            Lib.defaultBed2
                            ds31
                            ds32
                            ds33
                            ds34
                            ds35
                            ds36 }
                 } in
                 letrec {
                   go16 :: [GHC.Types.Char] -> Lib.AlignedRead
                     <join 1> {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds37 :: [GHC.Types.Char]) ->
                     case ds37 of wild1 {
                       [] -> $j1
                       : y ys
                       -> case GHC.List.elem
                                 @ GHC.Types.Char
                                 GHC.Classes.$fEqChar
                                 y
                                 Lib.clearNonRealCigar1 of wild2 {
                            GHC.Types.False -> go16 ys GHC.Types.True -> $j } }
                 } in
                 go16
                   (Data.ByteString.Internal.$wunpackAppendCharsLazy
                      ww1
                      ww2
                      ww3
                      ww4
                      (GHC.Types.[] @ GHC.Types.Char)) } }) -}
82c379358040fc68b77606a18f7a2b04
  updateTrimdAlnFields1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (-1) -}
6d77755a822c7c1f83814f63a28f584e
  updateTrimdPairFields :: Lib.PairedAln -> Lib.PairedAln
  {- Arity: 1,
     Strictness: <S(S(LLLLLLLLLLLLLLLLLLLLLLSLLLLLLLL)LLL),1*U(U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)>m,
     Unfolding: (\ (pa :: Lib.PairedAln) ->
                 case pa of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                 case ds6 of wild1 { Lib.AlignedRead ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ->
                 let {
                   $j :: Lib.PairedAln <join 0> {- Strictness: m -}
                   = case ds32 of wild2 {
                       GHC.Types.False
                       -> case ds7 of wild3 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                          case ds63 of wild4 {
                            GHC.Types.False -> wild
                            GHC.Types.True
                            -> let {
                                 ds72 :: (Lib.AlignedRead, [Lib.AlignedRead])
                                 = case GHC.Base.map
                                          @ Lib.AlignedRead
                                          @ Lib.AlignedRead
                                          (\ (x :: Lib.AlignedRead) ->
                                           case x of wild5 { Lib.AlignedRead ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ds90 ds91 ds92 ds93 ds94 ds95 ds96 ds97 ds98 ds99 ds100 ds101 ds102 ds103 ->
                                           Lib.AlignedRead
                                             ds73
                                             ds74
                                             ds75
                                             ds76
                                             ds77
                                             ds78
                                             ds79
                                             ds80
                                             ds81
                                             ds82
                                             ds83
                                             ds64
                                             ds85
                                             ds86
                                             ds87
                                             ds88
                                             ds89
                                             ds90
                                             ds91
                                             ds92
                                             ds93
                                             ds94
                                             ds95
                                             ds96
                                             ds97
                                             ds98
                                             ds99
                                             ds100
                                             ds101
                                             ds102
                                             ds103 })
                                          (GHC.Types.: @ Lib.AlignedRead wild1 ds8) of wild5 {
                                     [] -> Lib.updateTrimdPairFields2
                                     : newpr1 newsecr1s -> (newpr1, newsecr1s) }
                               } in
                               Lib.PairedAln
                                 (case ds72 of ds73 { (,) newpr1 newsecr1s -> newpr1 })
                                 wild3
                                 (case ds72 of ds73 { (,) newpr1 newsecr1s -> newsecr1s })
                                 ds9 } }
                       GHC.Types.True
                       -> let {
                            ds41 :: (Lib.AlignedRead, [Lib.AlignedRead])
                            = case GHC.Base.map
                                     @ Lib.AlignedRead
                                     @ Lib.AlignedRead
                                     (\ (x :: Lib.AlignedRead) ->
                                      case x of wild3 { Lib.AlignedRead ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ->
                                      Lib.AlignedRead
                                        ds42
                                        ds43
                                        ds44
                                        ds45
                                        ds46
                                        ds47
                                        ds48
                                        ds49
                                        ds50
                                        ds51
                                        ds52
                                        ds33
                                        ds54
                                        ds55
                                        ds56
                                        ds57
                                        ds58
                                        ds59
                                        ds60
                                        ds61
                                        ds62
                                        ds63
                                        ds64
                                        ds65
                                        ds66
                                        ds67
                                        ds68
                                        ds69
                                        ds70
                                        ds71
                                        ds72 })
                                     (GHC.Types.: @ Lib.AlignedRead ds7 ds9) of wild3 {
                                [] -> Lib.updateTrimdPairFields1
                                : newpr2 newsecr2s -> (newpr2, newsecr2s) }
                          } in
                          Lib.PairedAln
                            wild1
                            (case ds41 of ds42 { (,) newpr2 newsecr2s -> newpr2 })
                            ds8
                            (case ds41 of ds42 { (,) newpr2 newsecr2s -> newsecr2s }) }
                 } in
                 case ds32 of wild2 {
                   GHC.Types.False -> $j
                   GHC.Types.True
                   -> case ds7 of wild3 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                      case ds63 of wild4 {
                        GHC.Types.False -> $j
                        GHC.Types.True
                        -> let {
                             ds72 :: (Lib.AlignedRead, [Lib.AlignedRead])
                             = case GHC.Base.map
                                      @ Lib.AlignedRead
                                      @ Lib.AlignedRead
                                      (\ (x :: Lib.AlignedRead) ->
                                       case x of wild5 { Lib.AlignedRead ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ds90 ds91 ds92 ds93 ds94 ds95 ds96 ds97 ds98 ds99 ds100 ds101 ds102 ds103 ->
                                       Lib.AlignedRead
                                         ds73
                                         ds74
                                         ds75
                                         ds76
                                         ds77
                                         ds78
                                         ds79
                                         ds80
                                         ds81
                                         ds82
                                         ds83
                                         ds33
                                         ds85
                                         ds86
                                         ds87
                                         ds88
                                         ds89
                                         ds90
                                         ds91
                                         ds92
                                         ds93
                                         ds94
                                         ds95
                                         ds96
                                         ds97
                                         ds98
                                         ds99
                                         ds100
                                         ds101
                                         ds102
                                         ds103 })
                                      (GHC.Types.: @ Lib.AlignedRead wild3 ds9) of wild5 {
                                 [] -> Lib.updateTrimdPairFields1
                                 : newpr2 newsecr2s -> (newpr2, newsecr2s) }
                           } in
                           let {
                             pa1 :: Lib.AlignedRead
                             = case ds72 of ds73 { (,) newpr2 newsecr2s -> newpr2 }
                           } in
                           let {
                             ds73 :: (Lib.AlignedRead, [Lib.AlignedRead])
                             = let {
                                 trimdposR2 :: GHC.Integer.Type.Integer
                                 = case pa1 of wild5 { Lib.AlignedRead ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ds90 ds91 ds92 ds93 ds94 ds95 ds96 ds97 ds98 ds99 ds100 ds101 ds102 ds103 ds104 ->
                                   ds97 }
                               } in
                               case GHC.Base.map
                                      @ Lib.AlignedRead
                                      @ Lib.AlignedRead
                                      (\ (x :: Lib.AlignedRead) ->
                                       case x of wild5 { Lib.AlignedRead ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ds90 ds91 ds92 ds93 ds94 ds95 ds96 ds97 ds98 ds99 ds100 ds101 ds102 ds103 ds104 ->
                                       Lib.AlignedRead
                                         ds74
                                         ds75
                                         ds76
                                         ds77
                                         ds78
                                         ds79
                                         ds80
                                         ds81
                                         ds82
                                         ds83
                                         ds84
                                         trimdposR2
                                         ds86
                                         ds87
                                         ds88
                                         ds89
                                         ds90
                                         ds91
                                         ds92
                                         ds93
                                         ds94
                                         ds95
                                         ds96
                                         ds97
                                         ds98
                                         ds99
                                         ds100
                                         ds101
                                         ds102
                                         ds103
                                         ds104 })
                                      (GHC.Types.: @ Lib.AlignedRead wild1 ds8) of wild5 {
                                 [] -> Lib.updateTrimdPairFields2
                                 : newpr1 newsecr1s -> (newpr1, newsecr1s) }
                           } in
                           Lib.PairedAln
                             (case ds73 of ds74 { (,) newpr1 newsecr1s -> newpr1 })
                             pa1
                             (case ds73 of ds74 { (,) newpr1 newsecr1s -> newsecr1s })
                             (case ds72 of ds74 { (,) newpr2 newsecr2s ->
                              newsecr2s }) } } } } }) -}
dbf048d9b4cbee39bc6db95b67326457
  updateTrimdPairFields1 :: (Lib.AlignedRead, [Lib.AlignedRead])
  {- Strictness: x -}
54c629246687ecc7380a169c09c7711a
  updateTrimdPairFields2 :: (Lib.AlignedRead, [Lib.AlignedRead])
  {- Strictness: x -}
f6900b64feb02318e95f229b02d51ac1
  updateZeroTrimdPairFields :: Lib.PairedAln -> Lib.PairedAln
  {- Arity: 1,
     Strictness: <S(S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLS)LLL),1*U(U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)>m,
     Unfolding: (\ (p :: Lib.PairedAln) ->
                 case p of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                 case ds6 of wild1 { Lib.AlignedRead ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ->
                 let {
                   primR2zerotrimmed :: GHC.Types.Bool
                   = case ds7 of wild2 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                     ds71 }
                 } in
                 let {
                   $j :: Lib.PairedAln <join 0> {- Strictness: m -}
                   = case ds40 of wild2 {
                       GHC.Types.False
                       -> case primR2zerotrimmed of wild3 {
                            GHC.Types.False -> wild
                            GHC.Types.True
                            -> case ds28 of wild4 {
                                 GHC.Types.False
                                 -> Lib.PairedAln
                                      (Lib.AlignedRead
                                         ds10
                                         ds11
                                         Lib.NONE
                                         Lib.defaultBed2
                                         ds14
                                         ds15
                                         ds16
                                         ds17
                                         ds18
                                         ds19
                                         Lib.addtrimtag5
                                         Lib.defaultBed2
                                         Lib.defaultBed2
                                         ds23
                                         ds24
                                         ds25
                                         ds26
                                         ds27
                                         GHC.Types.False
                                         ds29
                                         ds30
                                         ds31
                                         ds32
                                         ds33
                                         ds34
                                         ds35
                                         ds36
                                         ds37
                                         ds38
                                         ds39
                                         GHC.Types.False)
                                      (case ds7 of wild5 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                                       Lib.AlignedRead
                                         ds41
                                         ds42
                                         Lib.NONE
                                         Lib.defaultBed2
                                         ds45
                                         ds46
                                         ds47
                                         ds48
                                         ds49
                                         ds50
                                         Lib.addtrimtag5
                                         Lib.defaultBed2
                                         Lib.defaultBed2
                                         ds54
                                         ds55
                                         ds56
                                         ds57
                                         ds58
                                         ds59
                                         ds60
                                         ds61
                                         ds62
                                         ds63
                                         ds64
                                         ds65
                                         ds66
                                         ds67
                                         ds68
                                         ds69
                                         ds70
                                         ds71 })
                                      ds8
                                      ds9
                                 GHC.Types.True
                                 -> Lib.PairedAln
                                      (Lib.AlignedRead
                                         ds10
                                         ds11
                                         ds12
                                         ds13
                                         ds14
                                         ds15
                                         ds16
                                         ds17
                                         ds18
                                         ds19
                                         Lib.addtrimtag5
                                         Lib.defaultBed2
                                         Lib.defaultBed2
                                         ds23
                                         ds24
                                         ds25
                                         ds26
                                         ds27
                                         GHC.Types.True
                                         ds29
                                         ds30
                                         ds31
                                         ds32
                                         ds33
                                         ds34
                                         ds35
                                         ds36
                                         ds37
                                         ds38
                                         ds39
                                         GHC.Types.False)
                                      ds7
                                      ds8
                                      ds9 } }
                       GHC.Types.True
                       -> case ds7 of wild3 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                          case ds59 of wild4 {
                            GHC.Types.False
                            -> Lib.PairedAln
                                 (Lib.AlignedRead
                                    ds10
                                    ds11
                                    Lib.NONE
                                    Lib.defaultBed2
                                    ds14
                                    ds15
                                    ds16
                                    ds17
                                    ds18
                                    ds19
                                    Lib.addtrimtag5
                                    Lib.defaultBed2
                                    Lib.defaultBed2
                                    ds23
                                    ds24
                                    ds25
                                    ds26
                                    ds27
                                    ds28
                                    ds29
                                    ds30
                                    ds31
                                    ds32
                                    ds33
                                    ds34
                                    ds35
                                    ds36
                                    ds37
                                    ds38
                                    ds39
                                    GHC.Types.True)
                                 (Lib.AlignedRead
                                    ds41
                                    ds42
                                    Lib.NONE
                                    Lib.defaultBed2
                                    ds45
                                    ds46
                                    ds47
                                    ds48
                                    ds49
                                    ds50
                                    Lib.addtrimtag5
                                    Lib.defaultBed2
                                    Lib.defaultBed2
                                    ds54
                                    ds55
                                    ds56
                                    ds57
                                    ds58
                                    GHC.Types.False
                                    ds60
                                    ds61
                                    ds62
                                    ds63
                                    ds64
                                    ds65
                                    ds66
                                    ds67
                                    ds68
                                    ds69
                                    ds70
                                    ds71)
                                 ds8
                                 ds9
                            GHC.Types.True
                            -> Lib.PairedAln
                                 wild1
                                 (Lib.AlignedRead
                                    ds41
                                    ds42
                                    ds43
                                    ds44
                                    ds45
                                    ds46
                                    ds47
                                    ds48
                                    ds49
                                    ds50
                                    Lib.addtrimtag5
                                    Lib.defaultBed2
                                    Lib.defaultBed2
                                    ds54
                                    ds55
                                    ds56
                                    ds57
                                    ds58
                                    GHC.Types.True
                                    ds60
                                    ds61
                                    ds62
                                    ds63
                                    ds64
                                    ds65
                                    ds66
                                    ds67
                                    ds68
                                    ds69
                                    ds70
                                    ds71)
                                 ds8
                                 ds9 } } }
                 } in
                 case ds40 of wild2 {
                   GHC.Types.False -> $j
                   GHC.Types.True
                   -> case primR2zerotrimmed of wild3 {
                        GHC.Types.False -> $j
                        GHC.Types.True
                        -> case ds28 of wild4 {
                             GHC.Types.False
                             -> case ds7 of wild5 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                                case ds59 of wild6 {
                                  GHC.Types.False
                                  -> Lib.PairedAln
                                       (Lib.AlignedRead
                                          ds10
                                          ds11
                                          Lib.NONE
                                          Lib.defaultBed2
                                          ds14
                                          ds15
                                          ds16
                                          ds17
                                          ds18
                                          ds19
                                          Lib.addtrimtag5
                                          Lib.defaultBed2
                                          Lib.defaultBed2
                                          ds23
                                          ds24
                                          ds25
                                          ds26
                                          ds27
                                          GHC.Types.False
                                          ds29
                                          ds30
                                          ds31
                                          ds32
                                          ds33
                                          ds34
                                          ds35
                                          ds36
                                          ds37
                                          ds38
                                          ds39
                                          GHC.Types.True)
                                       (Lib.AlignedRead
                                          ds41
                                          ds42
                                          Lib.NONE
                                          Lib.defaultBed2
                                          ds45
                                          ds46
                                          ds47
                                          ds48
                                          ds49
                                          ds50
                                          Lib.addtrimtag5
                                          Lib.defaultBed2
                                          Lib.defaultBed2
                                          ds54
                                          ds55
                                          ds56
                                          ds57
                                          ds58
                                          GHC.Types.False
                                          ds60
                                          ds61
                                          ds62
                                          ds63
                                          ds64
                                          ds65
                                          ds66
                                          ds67
                                          ds68
                                          ds69
                                          ds70
                                          ds71)
                                       ds8
                                       ds9
                                  GHC.Types.True
                                  -> Lib.PairedAln
                                       (Lib.AlignedRead
                                          ds10
                                          ds11
                                          Lib.NONE
                                          Lib.defaultBed2
                                          ds14
                                          ds15
                                          ds16
                                          ds17
                                          ds18
                                          ds19
                                          Lib.addtrimtag5
                                          Lib.defaultBed2
                                          Lib.defaultBed2
                                          ds23
                                          ds24
                                          ds25
                                          ds26
                                          ds27
                                          GHC.Types.False
                                          ds29
                                          ds30
                                          ds31
                                          ds32
                                          ds33
                                          ds34
                                          ds35
                                          ds36
                                          ds37
                                          ds38
                                          ds39
                                          GHC.Types.True)
                                       (Lib.AlignedRead
                                          ds41
                                          ds42
                                          Lib.NONE
                                          Lib.defaultBed2
                                          ds45
                                          ds46
                                          ds47
                                          ds48
                                          ds49
                                          ds50
                                          Lib.addtrimtag5
                                          Lib.defaultBed2
                                          Lib.defaultBed2
                                          ds54
                                          ds55
                                          ds56
                                          ds57
                                          ds58
                                          GHC.Types.True
                                          ds60
                                          ds61
                                          ds62
                                          ds63
                                          ds64
                                          ds65
                                          ds66
                                          ds67
                                          ds68
                                          ds69
                                          ds70
                                          ds71)
                                       ds8
                                       ds9 } }
                             GHC.Types.True
                             -> case ds7 of wild5 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                                case ds59 of wild6 {
                                  GHC.Types.False
                                  -> Lib.PairedAln
                                       (Lib.AlignedRead
                                          ds10
                                          ds11
                                          Lib.NONE
                                          Lib.defaultBed2
                                          ds14
                                          ds15
                                          ds16
                                          ds17
                                          ds18
                                          ds19
                                          Lib.addtrimtag5
                                          Lib.defaultBed2
                                          Lib.defaultBed2
                                          ds23
                                          ds24
                                          ds25
                                          ds26
                                          ds27
                                          GHC.Types.True
                                          ds29
                                          ds30
                                          ds31
                                          ds32
                                          ds33
                                          ds34
                                          ds35
                                          ds36
                                          ds37
                                          ds38
                                          ds39
                                          GHC.Types.True)
                                       (Lib.AlignedRead
                                          ds41
                                          ds42
                                          Lib.NONE
                                          Lib.defaultBed2
                                          ds45
                                          ds46
                                          ds47
                                          ds48
                                          ds49
                                          ds50
                                          Lib.addtrimtag5
                                          Lib.defaultBed2
                                          Lib.defaultBed2
                                          ds54
                                          ds55
                                          ds56
                                          ds57
                                          ds58
                                          GHC.Types.False
                                          ds60
                                          ds61
                                          ds62
                                          ds63
                                          ds64
                                          ds65
                                          ds66
                                          ds67
                                          ds68
                                          ds69
                                          ds70
                                          ds71)
                                       ds8
                                       ds9
                                  GHC.Types.True
                                  -> Lib.PairedAln
                                       (Lib.AlignedRead
                                          ds10
                                          ds11
                                          ds12
                                          ds13
                                          ds14
                                          ds15
                                          ds16
                                          ds17
                                          ds18
                                          ds19
                                          Lib.addtrimtag5
                                          Lib.defaultBed2
                                          Lib.defaultBed2
                                          ds23
                                          ds24
                                          ds25
                                          ds26
                                          ds27
                                          GHC.Types.True
                                          ds29
                                          ds30
                                          ds31
                                          ds32
                                          ds33
                                          ds34
                                          ds35
                                          ds36
                                          ds37
                                          ds38
                                          ds39
                                          GHC.Types.True)
                                       (Lib.AlignedRead
                                          ds41
                                          ds42
                                          ds43
                                          ds44
                                          ds45
                                          ds46
                                          ds47
                                          ds48
                                          ds49
                                          ds50
                                          Lib.addtrimtag5
                                          Lib.defaultBed2
                                          Lib.defaultBed2
                                          ds54
                                          ds55
                                          ds56
                                          ds57
                                          ds58
                                          GHC.Types.True
                                          ds60
                                          ds61
                                          ds62
                                          ds63
                                          ds64
                                          ds65
                                          ds66
                                          ds67
                                          ds68
                                          ds69
                                          ds70
                                          ds71)
                                       ds8
                                       ds9 } } } } } } }) -}
6ec61ff224cfe48fcd0fa98ad56ac186
  updateZeroTrimdPairFlags :: Lib.PairedAln -> Lib.PairedAln
  {- Arity: 1,
     Strictness: <S(S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLS)LLL),1*U(U(U,U(U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U(U,U(U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U)>m,
     Unfolding: (\ (pa :: Lib.PairedAln) ->
                 case pa of wild { Lib.PairedAln ds6 ds7 ds8 ds9 ->
                 case ds6 of wild1 { Lib.AlignedRead ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ->
                 let {
                   newMRNMp :: Lib.PairedAln = Lib.setMateRname wild
                 } in
                 let {
                   r2pMRNM :: Lib.AlignedRead
                   = case newMRNMp of wild2 { Lib.PairedAln ds41 ds42 ds43 ds44 ->
                     ds42 }
                 } in
                 let {
                   r1pMRNM :: Lib.AlignedRead
                   = case newMRNMp of wild2 { Lib.PairedAln ds41 ds42 ds43 ds44 ->
                     ds41 }
                 } in
                 let {
                   r1sMRNMs :: [Lib.AlignedRead]
                   = case newMRNMp of wild2 { Lib.PairedAln ds41 ds42 ds43 ds44 ->
                     ds43 }
                 } in
                 let {
                   r1Zs :: [Lib.AlignedRead]
                   = GHC.Base.map
                       @ Lib.AlignedRead
                       @ Lib.AlignedRead
                       Lib.updateZeroTrimdPairFlags_clrFlagMapBits
                       r1sMRNMs
                 } in
                 let {
                   r2sMRNMs :: [Lib.AlignedRead]
                   = case newMRNMp of wild2 { Lib.PairedAln ds41 ds42 ds43 ds44 ->
                     ds44 }
                 } in
                 let {
                   r2Zs :: [Lib.AlignedRead]
                   = GHC.Base.map
                       @ Lib.AlignedRead
                       @ Lib.AlignedRead
                       Lib.updateZeroTrimdPairFlags_clrFlagMapBits
                       r2sMRNMs
                 } in
                 let {
                   r2zerotrimd :: GHC.Types.Bool
                   = case ds7 of wild2 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                     ds71 }
                 } in
                 let {
                   $j :: Lib.PairedAln <join 0> {- Strictness: m -}
                   = case ds40 of wild2 {
                       GHC.Types.False
                       -> case r2zerotrimd of wild3 {
                            GHC.Types.False -> wild
                            GHC.Types.True
                            -> Lib.PairedAln
                                 (case r1pMRNM of wild4 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                                  Lib.AlignedRead
                                    ds41
                                    (case ds42 of wild5 { GHC.Types.I# x# ->
                                     GHC.Types.I# (GHC.Prim.orI# (GHC.Prim.andI# x# -3#) 8#) })
                                    ds43
                                    ds44
                                    ds45
                                    ds46
                                    ds47
                                    ds48
                                    ds49
                                    ds50
                                    ds51
                                    ds52
                                    ds53
                                    ds54
                                    ds55
                                    ds56
                                    ds57
                                    ds58
                                    ds59
                                    ds60
                                    ds61
                                    ds62
                                    ds63
                                    ds64
                                    ds65
                                    ds66
                                    ds67
                                    ds68
                                    ds69
                                    ds70
                                    ds71 })
                                 r2pMRNM
                                 r1Zs
                                 r2sMRNMs }
                       GHC.Types.True
                       -> Lib.PairedAln
                            r1pMRNM
                            (case r2pMRNM of wild3 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                             Lib.AlignedRead
                               ds41
                               (case ds42 of wild4 { GHC.Types.I# x# ->
                                GHC.Types.I# (GHC.Prim.orI# (GHC.Prim.andI# x# -3#) 8#) })
                               ds43
                               ds44
                               ds45
                               ds46
                               ds47
                               ds48
                               ds49
                               ds50
                               ds51
                               ds52
                               ds53
                               ds54
                               ds55
                               ds56
                               ds57
                               ds58
                               ds59
                               ds60
                               ds61
                               ds62
                               ds63
                               ds64
                               ds65
                               ds66
                               ds67
                               ds68
                               ds69
                               ds70
                               ds71 })
                            r1sMRNMs
                            r2Zs }
                 } in
                 case ds40 of wild2 {
                   GHC.Types.False -> $j
                   GHC.Types.True
                   -> case r2zerotrimd of wild3 {
                        GHC.Types.False -> $j
                        GHC.Types.True
                        -> Lib.PairedAln
                             (case r1pMRNM of wild4 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                              Lib.AlignedRead
                                ds41
                                (case ds42 of wild5 { GHC.Types.I# x# ->
                                 GHC.Types.I# (GHC.Prim.orI# (GHC.Prim.andI# x# -3#) 8#) })
                                ds43
                                ds44
                                ds45
                                ds46
                                ds47
                                ds48
                                ds49
                                ds50
                                ds51
                                ds52
                                ds53
                                ds54
                                ds55
                                ds56
                                ds57
                                ds58
                                ds59
                                ds60
                                ds61
                                ds62
                                ds63
                                ds64
                                ds65
                                ds66
                                ds67
                                ds68
                                ds69
                                ds70
                                ds71 })
                             (case r2pMRNM of wild4 { Lib.AlignedRead ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ->
                              Lib.AlignedRead
                                ds41
                                (case ds42 of wild5 { GHC.Types.I# x# ->
                                 GHC.Types.I# (GHC.Prim.orI# (GHC.Prim.andI# x# -3#) 8#) })
                                ds43
                                ds44
                                ds45
                                ds46
                                ds47
                                ds48
                                ds49
                                ds50
                                ds51
                                ds52
                                ds53
                                ds54
                                ds55
                                ds56
                                ds57
                                ds58
                                ds59
                                ds60
                                ds61
                                ds62
                                ds63
                                ds64
                                ds65
                                ds66
                                ds67
                                ds68
                                ds69
                                ds70
                                ds71 })
                             r1Zs
                             r2Zs } } } }) -}
5021fa4c1ef2b94b0bd802a033db0e36
  updateZeroTrimdPairFlags_clrFlagMapBits ::
    Lib.AlignedRead -> Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S,1*U(U,1*U(U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.AlignedRead) ->
                 case x of wild { Lib.AlignedRead ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ->
                 Lib.AlignedRead
                   ds6
                   (case ds7 of wild1 { GHC.Types.I# x# ->
                    GHC.Types.I# (GHC.Prim.orI# (GHC.Prim.andI# x# -3#) 8#) })
                   ds8
                   ds9
                   ds10
                   ds11
                   ds12
                   ds13
                   ds14
                   ds15
                   ds16
                   ds17
                   ds18
                   ds19
                   ds20
                   ds21
                   ds22
                   ds23
                   ds24
                   ds25
                   ds26
                   ds27
                   ds28
                   ds29
                   ds30
                   ds31
                   ds32
                   ds33
                   ds34
                   ds35
                   ds36 }) -}
1b3f4abb2cc489d9801fd5d3f017dec3
  validateTrimdPairAlnStart :: Lib.PairedAln -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(S(LLLLLLLLLLLLLLLLLLLLLLLSLLLLLLL)S(LLLLLLLLLLLSLLLLLLLLLLLLLLLLLLL)LL),1*U(1*U(A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A),1*U(A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A),A,A)>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.PairedAln) ->
                 case w of ww { Lib.PairedAln ww1 ww2 ww3 ww4 ->
                 case ww1 of ww5 { Lib.AlignedRead ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ww36 ->
                 case ww2 of ww37 { Lib.AlignedRead ww38 ww39 ww40 ww41 ww42 ww43 ww44 ww45 ww46 ww47 ww48 ww49 ww50 ww51 ww52 ww53 ww54 ww55 ww56 ww57 ww58 ww59 ww60 ww61 ww62 ww63 ww64 ww65 ww66 ww67 ww68 ->
                 Lib.$wvalidateTrimdPairAlnStart ww17 ww29 ww49 ww61 } } }) -}
b4fdafd4ad1ee48083d193385c012fb2
  writeRunStats :: GHC.IO.FilePath -> Lib.RunStats -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,U><L,U(U,U,U,U,1*U(U),1*U(U))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.writeRunStats1
                  `cast`
                (<GHC.IO.FilePath>_R
                 ->_R <Lib.RunStats>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
28a5ef2c6a90be42fb145b938f980780
  writeRunStats1 ::
    GHC.IO.FilePath
    -> Lib.RunStats
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U><L,U(U,U,U,U,1*U(U),1*U(U))><S,U> -}
64e0a7b5a8db25e9b81a102c9fe8422f
  xmid :: Lib.AlignedRead -> Data.ByteString.Internal.ByteString
  RecSel Left Lib.AlignedRead
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLSLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U,U,U,U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds6 :: Lib.AlignedRead) ->
                 case ds6 of wild { Lib.AlignedRead ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ->
                 ds35 }) -}
instance GHC.Enum.Bounded [Lib.ChromNameFormat]
  = Lib.$fBoundedChromNameFormat
instance GHC.Enum.Bounded [Lib.UChr] = Lib.$fBoundedUChr
instance GHC.Enum.Enum [Lib.ChromNameFormat]
  = Lib.$fEnumChromNameFormat
instance GHC.Enum.Enum [Lib.UChr] = Lib.$fEnumUChr
instance GHC.Classes.Eq [Lib.AlignedRead] = Lib.$fEqAlignedRead
instance GHC.Classes.Eq [Lib.BEDPE] = Lib.$fEqBEDPE
instance GHC.Classes.Eq [Lib.BedRecord] = Lib.$fEqBedRecord
instance GHC.Classes.Eq [Lib.ChromNameFormat]
  = Lib.$fEqChromNameFormat
instance GHC.Classes.Eq [Lib.CigarMod] = Lib.$fEqCigarMod
instance GHC.Classes.Eq [Lib.MasterRecord] = Lib.$fEqMasterRecord
instance GHC.Classes.Eq [Lib.MidFamily] = Lib.$fEqMidFamily
instance GHC.Classes.Eq [Lib.Opts] = Lib.$fEqOpts
instance GHC.Classes.Eq [Lib.PairedAln] = Lib.$fEqPairedAln
instance GHC.Classes.Eq [Lib.RunStats] = Lib.$fEqRunStats
instance GHC.Classes.Eq [Lib.SAMFlag] = Lib.$fEqSAMFlag
instance GHC.Classes.Eq [Lib.UChr] = Lib.$fEqUChr
instance GHC.Generics.Generic [Lib.AlignedRead]
  = Lib.$fGenericAlignedRead
instance GHC.Generics.Generic [Lib.BEDPE] = Lib.$fGenericBEDPE
instance GHC.Generics.Generic [Lib.BedRecord]
  = Lib.$fGenericBedRecord
instance GHC.Generics.Generic [Lib.PairedAln]
  = Lib.$fGenericPairedAln
instance GHC.Generics.Generic [Lib.UChr] = Lib.$fGenericUChr
instance GHC.Classes.Ord [Lib.AlignedRead] = Lib.$fOrdAlignedRead
instance GHC.Classes.Ord [Lib.BEDPE] = Lib.$fOrdBEDPE
instance GHC.Classes.Ord [Lib.BedRecord] = Lib.$fOrdBedRecord
instance GHC.Classes.Ord [Lib.ChromNameFormat]
  = Lib.$fOrdChromNameFormat
instance GHC.Classes.Ord [Lib.MasterRecord] = Lib.$fOrdMasterRecord
instance GHC.Classes.Ord [Lib.MidFamily] = Lib.$fOrdMidFamily
instance GHC.Classes.Ord [Lib.PairedAln] = Lib.$fOrdPairedAln
instance GHC.Classes.Ord [Lib.UChr] = Lib.$fOrdUChr
instance GHC.Read.Read [Lib.ChromNameFormat]
  = Lib.$fReadChromNameFormat
instance GHC.Read.Read [Lib.RunStats] = Lib.$fReadRunStats
instance GHC.Show.Show [Lib.AlignedRead] = Lib.$fShowAlignedRead
instance GHC.Show.Show [Lib.BEDPE] = Lib.$fShowBEDPE
instance GHC.Show.Show [Lib.BedRecord] = Lib.$fShowBedRecord
instance GHC.Show.Show [Lib.ChromNameFormat]
  = Lib.$fShowChromNameFormat
instance GHC.Show.Show [Lib.CigarMod] = Lib.$fShowCigarMod
instance GHC.Show.Show [Lib.MasterRecord] = Lib.$fShowMasterRecord
instance GHC.Show.Show [Lib.MidFamily] = Lib.$fShowMidFamily
instance GHC.Show.Show [Lib.Opts] = Lib.$fShowOpts
instance GHC.Show.Show [Lib.PairedAln] = Lib.$fShowPairedAln
instance GHC.Show.Show [Lib.RunStats] = Lib.$fShowRunStats
instance GHC.Show.Show [Lib.SAMFlag] = Lib.$fShowSAMFlag
instance GHC.Show.Show [Lib.UChr] = Lib.$fShowUChr
family instance GHC.Generics.Rep [Lib.PairedAln]
  = Lib.Rep_PairedAln
family instance GHC.Generics.Rep [Lib.AlignedRead]
  = Lib.Rep_AlignedRead
family instance GHC.Generics.Rep [Lib.BEDPE] = Lib.Rep_BEDPE
family instance GHC.Generics.Rep [Lib.BedRecord]
  = Lib.Rep_BedRecord
family instance GHC.Generics.Rep [Lib.UChr] = Lib.Rep_UChr
"SPEC/Lib $fApplicativeResourceT @ IO" [orphan] forall (v :: GHC.Base.Applicative
                                                               GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT @ GHC.Types.IO
                                                               v
  = Lib.$s$fApplicativeResourceT
"SPEC/Lib $fApplicativeResourceT_$cpure @ IO" [orphan] forall ($dApplicative :: GHC.Base.Applicative
                                                                                  GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT_$cpure @ GHC.Types.IO
                                                                      $dApplicative
  = Lib.$s$fApplicativeResourceT_$cpure
"SPEC/Lib $fEq(,) @ Integer @ ByteString" [orphan] forall (v1 :: GHC.Classes.Eq
                                                                   Data.ByteString.Internal.ByteString)
                                                          (v :: GHC.Classes.Eq
                                                                  GHC.Integer.Type.Integer)
  GHC.Classes.$fEq(,) @ GHC.Integer.Type.Integer
                      @ Data.ByteString.Internal.ByteString
                      v
                      v1
  = Lib.$s$fEq(,)
"SPEC/Lib $fFunctorResourceT @ IO" [orphan] forall (v :: GHC.Base.Functor
                                                           GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fFunctorResourceT @ GHC.Types.IO
                                                           v
  = Lib.$s$fApplicativeResourceT_$s$fFunctorResourceT
"SPEC/Lib $fMonadResourceT @ IO" [orphan] forall (v :: GHC.Base.Monad
                                                         GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadResourceT @ GHC.Types.IO
                                                         v
  = Lib.$s$fMonadResourceT
"SPEC/Lib $fMonadResourceT_$c>> @ IO" [orphan] forall ($dMonad :: GHC.Base.Monad
                                                                    GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadResourceT_$c>> @ GHC.Types.IO
                                                              $dMonad
  = Lib.$s$fMonadResourceT_$s$fMonadResourceT_$c>>
"SPEC/Lib fromList @ Int _" [orphan] forall @ a
                                            ($dOrd :: GHC.Classes.Ord GHC.Types.Int)
  Data.Map.Strict.Internal.fromList @ GHC.Types.Int @ a $dOrd
  = Lib.$sfromList2 @ a
"SPEC/Lib fromList @ UChr" forall ($dOrd :: GHC.Classes.Ord
                                              Lib.UChr)
  Data.Set.Internal.fromList @ Lib.UChr $dOrd = Lib.$sfromList4
"SPEC/Lib fromList @ UChr _" forall @ a
                                    ($dOrd :: GHC.Classes.Ord Lib.UChr)
  Data.Map.Strict.Internal.fromList @ Lib.UChr @ a $dOrd
  = Lib.$sfromList @ a
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

